-- This file was generated using Luraph Obfuscator v13.5.8

do return(function(fd,td,pd,Fd,cd,kd,Ud,Td,ad,gd,Id,Od,qd,ld,Rd,Ld,ud,hd,zd,bd,Bd,Pd,Sd,vd,jd,Hd,Gd,id,Vd,Jd,rd,Wd,Md,wd,Yd,Nd,Kd,y,...)local A,q,x=pcall,Yd,(tostring);local Q=(select);local e,m=Sd.sub,(Gd);local S,d,f,H,h=nil,nil,nil,nil,nil;local Zd=(0);while Zd<0X5 do if Zd<=0x0001 then if Zd==0X0 then S=Md;do Zd=1;end;else d=Sd.byte;Zd=3;do continue;end;end;elseif not(Zd<=2)then if Zd==3 then f=bit32.bnot;Zd=4;continue;else do H=table.insert;end;Zd=0x0002;end;else h=Hd.wrap;Zd=5;do continue;end;end;end;local W=rawget;Zd=0X0000;local l,t=nil,nil;while Zd<2 do if Zd~=0 then t=Wd;Zd=0X2;else l=Bd;Zd=0x00001;end;end;local I=(getfenv);local xd=({});local K=string.unpack;local E=error;do Zd=2;end;local v,a,i=nil,nil,nil;repeat if not(Zd<=0X0)then if Zd==0X1 then i=0X1;do Zd=3;end;else v=0X100000000;Zd=0;end;else do a=I();end;do Zd=1;end;continue;end;until Zd>0X2;local V=unpack;local r,G,O=nil,nil,(nil);for la=0X0,2 do if la<=0 then do r={[0]=0x1};end;else do if la~=0X01 thenelse do G=Sd.gsub;end;end;end;end;end;local s,z=tonumber,nil;O=G(e(O,0X5),"\..",function(NB)if d(NB,0X02)~=72 then local nf=(nil);local Bf=0X0;while Bf~=2 do if Bf~=0 then do if not(z)then return nf;else local Lw=(S(nf,z));do z=qd;end;do return Lw;end;end;end;Bf=2;else nf=m(s(NB,16));Bf=1;end;end;else z=s(e(NB,0X01,1));return'';end;end);local k={5,0x2,0X004};local j=(function()local YU=(0X00000);local GU=(nil);while-0x18b0031C do do if YU<=0x0 then GU=d(O,i,i);YU=1;continue;else do if YU~=1 then return GU;else i=i+1;YU=0x2;end;end;end;end;end;end);local L=ld;Zd=4;local g,C,u,p,U,J,N=nil,nil,nil,nil,nil,nil,(nil);do while Zd<8 do if not(Zd<=3)then if Zd<=0x005 then if Zd==0X004 then g=0X00080000000;Zd=7;continue;else do N=Vd.bxor;end;Zd=0X00008;end;else do if Zd==6 then u=function()local hu=2;local Mu,Ru=nil,(nil);while(true)do do if hu<=0 then return Mu;else if hu~=1 then Mu,Ru=K("<I4",O,i);hu=0X1;else i=Ru;do hu=0X0;end;end;end;end;end;end;Zd=0;continue;else do C=hd;end;Zd=6;do continue;end;end;end;end;elseif not(Zd<=0X001)then if Zd~=2 then do local o6=nil;local g6=0X1;while g6<=1 do if g6==0X0 then do for ZH=0X1,0x01F do(r)[ZH]=o6;o6=o6*0X2;end;end;do g6=2;end;continue;else do o6=2;end;g6=0x0;end;end;end;Zd=1;else U=g-1;Zd=0x3;continue;end;else if Zd~=0 then J=function()local eF,pF=K('\<\i8',O,i);i=pF;return eF;end;Zd=0X5;continue;else p=td^52;do Zd=0X2;end;end;end;end;end;local F=(v-0X1);Zd=3;local b,T,c,w,D=nil,nil,nil,nil,nil;repeat do if not(Zd<=0X0001)then if not(Zd<=0x2)then if Zd==3 then b=bit32.bor;do Zd=1;end;do continue;end;else w=Rd;do Zd=2;end;end;else D={[3]='o\w\063\+\`S\>\069',[0x1]=4,[7]=".\040",[Id]=ad,[0X4]=1268039299,[id]=6,[2]="%\i\$",[0X0003]=Od,[0x9]=zd,[2]=jd,[0X9]=0x00495DA5b4,[0X7]=0X5,[9]=-1919308424,[2]=7,[0x00009]=Od,[0X9]=ud,[4]=1};do Zd=0X5;end;do continue;end;end;else if Zd==0x0 then c=function()local Kx,zx,Bx=0x01,nil,nil;repeat if Kx<=0 then i=Bx;Kx=0X00002;continue;else if Kx~=0x01 then do return zx;end;else do zx,Bx=K('<\d',O,i);end;Kx=0;end;end;until false;end;do Zd=0x4;end;else do T=Kd;end;Zd=0;continue;end;end;end;until Zd==5;Zd=0x1;local yd,Qd,sd,M=nil,nil,nil,(nil);while Zd<=3 do if not(Zd<=1)then if Zd~=2 then M=gd;Zd=0X4;continue;else Qd=j();Zd=0X0;end;elseif Zd~=0X0 then yd=function()local P2,G2=0,(0X0);while true do local Ti=(d(O,i,i));i=i+1;G2=b(G2,T(w(Ti,0X7f),P2));if w(Ti,0x80)~=0x0 then else return G2;end;P2=P2+0X7;end;end;Zd=0x2;do continue;end;else sd=j();Zd=3;do continue;end;end;end;local Ad=(function(sX)local cX=0x0004;local VX,pX,XX,wX,rX=nil,nil,nil,nil,nil;while cX~=6 do do if not(cX<=2)then do if not(cX<=3)then if cX~=0X4 then sd=(vd*sd+sX)%0X0100;cX=6;else VX={d(O,i,i+0X0003)};cX=0X1;continue;end;else rX=N(VX[4],sd);cX=0X5;continue;end;end;else if cX<=0 then XX=N(VX[2],sd);do cX=0X2;end;else do if cX==1 then pX=N(VX[0X1],sd);cX=0;else wX=N(VX[0X0003],sd);cX=0x003;continue;end;end;end;end;end;end;cX=0x1;do while 0X009ADF672 do if cX~=0X00 then i=i+4;cX=0x00000;else return rX*0X1000000+wX*0X00010000+XX*0X0100+pX;end;end;end;end);local P=function(D6,T6,L6)local m6,w6=0X0,(nil);repeat if m6<=0x0 then w6=(D6/r[T6])%r[L6];m6=0X01;else if m6~=0X1 then return w6;else w6=w6-w6%1;do m6=0X2;end;end;end;until false;end;do Zd=2;end;local Cd,Ed,nd,R=nil,nil,nil,nil;repeat if not(Zd<=1)then if Zd~=2 then do nd=function(Xg)local Dg=(u());local Jg=("");for ln=1,Dg,7997 do local Pn,gn=nil,(nil);for RX=0x0,2 do if RX<=0x00 then Pn=ln+7997-1;else if RX==1 then if Pn>Dg then Pn=Dg;end;else do gn={d(O,i+ln-0x1,i+Pn-1)};end;end;end;end;local pn=0;while pn~=0x00002 do if pn~=0 then Jg=Jg..m(V(gn));pn=2;else for Dd=Fd,#gn do local F5=0;do repeat if F5~=0 then Qd=(Xg*Qd+Ud)%256;do F5=2;end;else(gn)[Dd]=N(gn[Dd],Qd);do F5=1;end;continue;end;until F5==2;end;end;pn=0X1;continue;end;end;end;local vg=(0x1);repeat if vg~=0 then i=i+Dg;vg=0x000;do continue;end;else return Jg;end;until(false);end;end;do Zd=0;end;else Cd=function(...)return Q(pd,...),{...};end;do Zd=1;end;continue;end;elseif Zd==0X000 then R=rd;Zd=0x004;continue;else Ed=0X1;do Zd=0X00003;end;continue;end;until Zd>3;local o=assert;do Zd=0;end;local B,Xd=nil,(nil);while Zd<=1 do if Zd==0X0 then B=Pd;Zd=0x001;else Xd={};Zd=0x2;continue;end;end;local od=(function()local Mx=nil;local Jx=0X0;repeat do if Jx<=0 then Mx=yd();Jx=0X1;do continue;end;else if Jx==0X1 then if not(Mx>U)then else return Mx-v;end;Jx=0X2;continue;else return Mx;end;end;end;until(false);end);local function ed(SG,FG,cG)local nG=(FG[2]);local JG,IG=FG[3],(FG[0X7]);local TG=FG[0X01];local YG,OG,zG=FG[5],FG[9],(FG[0x8]);local iG=B({},{__mode="v"});local hG=(nil);local lG=FG[6];if lG>=0X00004A then if not(lG>=0X6f)then if lG<92 then do if not(lG>=83)then if lG>=0X04E then if not(lG>=80)then do if lG~=79 then hG=function(...)local fv={};local Rv=(1);local wv,Sv={[0X1]=FG,[0X0002]=fv},(0);local nv=I();local Wv,Tv=Cd(...);do Wv=Wv-0X00001;end;for UL=0X00000,Wv do if IG>UL then(fv)[UL]=Tv[UL+1];else break;end;end;local Av=((nv==a and SG or nv));if not OG then Tv=nil;elseif not(zG)then else do(fv)[IG]={n=Wv>=IG and Wv-IG+0X1 or 0,V(Tv,IG+0X0001,Wv+1)};end;end;do if Av~=nv then(R)(hG,Av);end;end;local lv,Cv,sv,Lv=A(function()while true do local u7=(TG[Rv]);local w7=u7[3];do Rv=Rv+0X0001;end;do if not(w7>=38)then if w7>=0X013 then if w7<28 then do if w7<0X000017 then if w7<21 then if w7==0X00014 then(fv)[u7[0X00002]]=fv[u7[5]];else(fv)[4]=Av[u7[6]];Rv=Rv+1;(fv)[0X5]={V({},0X1,3)};u7=TG[Rv];Rv=Rv+0X00001;(fv)[6]=u7[6];do u7=TG[Rv];end;Rv=Rv+1;fv[7]=u7[6];u7=TG[Rv];Rv=Rv+1;local zh=0X5;fv[8]=u7[0x006];local Ph=(fv[zh]);local xh=0X0003;Rv=Rv+1;local Wh=((1-0X00001)*50);do for pT=1,3 do Ph[Wh+pT]=fv[zh+pT];end;end;Rv=Rv+0X1;fv[0X006]=fv[0X01];Rv=Rv+0x0001;zh=4;local Vh=0X3;do if xh~=0 then Sv=zh+xh-0X1;end;end;local Xh,Hh=nil,(nil);do if xh~=0X01 then Xh,Hh=Cd(fv[zh](V(fv,zh+0X1,Sv)));else do Xh,Hh=Cd(fv[zh]());end;end;end;if Vh~=0x0001 then if Vh==0 then Xh=Xh+zh-0X001;Sv=Xh;else Xh=zh+Vh-2;Sv=Xh+0X00001;end;local Ny=(0);for Co=zh,Xh do Ny=Ny+0X1;fv[Co]=Hh[Ny];end;else Sv=zh-1;end;u7=TG[Rv];Rv=Rv+1;(fv)[6]=Av[u7[6]];do Rv=Rv+1;end;do Rv=Rv+1;end;do Rv=Rv+0X01;end;do(fv)[7]=fv[0X4];end;Rv=Rv+0X1;zh=6;xh=0X2;do Vh=4;end;if xh==0X00 then else Sv=zh+xh-1;end;Xh,Hh=nil;if xh==0X1 then do Xh,Hh=Cd(fv[zh]());end;else Xh,Hh=Cd(fv[zh](V(fv,zh+0X01,Sv)));end;if Vh~=0X1 then if Vh~=0 then Xh=zh+Vh-2;Sv=Xh+0X001;else Xh=Xh+zh-1;do Sv=Xh;end;end;local VM=(0X00000);for y9=zh,Xh do VM=VM+1;fv[y9]=Hh[VM];end;else Sv=zh-0x1;end;u7=TG[Rv];do Rv=Rv+1;end;zh=6;local vh=(h(function(...)t();for AN,PN in...do t(true,AN,PN);end;end));(vh)(fv[zh],fv[zh+1],fv[zh+2]);Sv=zh;(fv)[zh]=vh;Rv=u7[5];end;else if w7==22 then do fv[4]=Av[u7[6]];end;u7=TG[Rv];Rv=Rv+1;fv[0x4]=fv[4][u7[0X1]];Rv=Rv+0X1;Rv=Rv+0X1;do u7=TG[Rv];end;Rv=Rv+0x1;fv[0X4]=fv[0X04][u7[0x1]];Rv=Rv+1;Rv=Rv+1;do u7=TG[Rv];end;Rv=Rv+0X1;if not(u7[6]<fv[4])then else Rv=u7[2];end;else fv[4]=Av[u7[0X6]];Rv=Rv+1;Rv=Rv+0x1;Rv=Rv+0X0001;Sv=4;(fv)[Sv]=fv[Sv]();Rv=Rv+1;fv[3]=fv[4];u7=TG[Rv];do Rv=Rv+1;end;Rv=u7[0X0005];end;end;else if w7<0X19 then if w7~=24 then repeat local Z4,E4=iG,(fv);do if not(#Z4>0X00000)then else local B1=({});do for Vz,Pz in l,Z4 do do for r6,g6 in l,Pz do if not(g6[1]==E4 and g6[2]>=0X0)then else local U4=g6[0X2];if not(not B1[U4])then else do B1[U4]={E4[U4]};end;end;g6[1]=B1[U4];do(g6)[0X2]=0X1;end;end;end;end;end;end;end;end;until true;return;else Rv=u7[5];end;else if w7<26 then fv[9]=fv[0X00];local rs=0x9;Rv=Rv+1;fv[10]=true;Rv=Rv+1;(fv)[rs]=fv[rs](fv[rs+1]);Sv=rs;Rv=Rv+1;do Rv=Rv+0x0001;end;Rv=Rv+0X1;(fv)[7]=fv[9];u7=TG[Rv];do Rv=Rv+0X001;end;(fv)[0X9]=Av[u7[6]];Rv=Rv+1;Rv=Rv+1;Rv=Rv+0X1;do(fv)[0XA]=fv[0x7];end;u7=TG[Rv];Rv=Rv+1;fv[11]=Av[u7[6]];Rv=Rv+0X1;do rs=9;end;(fv[rs])(fv[rs+0X1],fv[rs+2]);Sv=rs-0X1;u7=TG[Rv];do Rv=Rv+1;end;Rv=u7[0X5];else if w7==27 then(fv)[0X8]=Av[u7[6]];do Rv=Rv+0X1;end;local re=(8);Rv=Rv+0X1;u7=TG[Rv];do Rv=Rv+0X1;end;do(fv)[9]=u7[0X6];end;Rv=Rv+1;(fv[re])(fv[re+0x001]);Sv=re-0x1;Rv=Rv+0x1;Rv=Rv+0X1;u7=TG[Rv];Rv=Rv+0x1;(fv)[8]=Av[u7[0X6]];u7=TG[Rv];Rv=Rv+1;do if fv[0X08]then Rv=u7[0X05];end;end;else(fv)[9]=Av[u7[0x006]];Rv=Rv+1;Sv=9;fv[Sv]();Sv=Sv-1;Rv=Rv+1;Rv=Rv+1;do u7=TG[Rv];end;Rv=Rv+0x1;do(fv)[0X00009]=Av[u7[0X6]];end;do u7=TG[Rv];end;Rv=Rv+0X1;do fv[0X9]=fv[0X9][u7[0X1]];end;Rv=Rv+1;do Rv=Rv+0X01;end;u7=TG[Rv];do Rv=Rv+1;end;if not fv[0X9]then Rv=u7[5];end;end;end;end;end;end;else if not(w7>=0X21)then if w7>=0X1E then if w7<31 then if fv[u7[5]]==fv[u7[0X4]]then do Rv=u7[2];end;end;else if w7==0X20 then(fv)[9]=fv[8][u7[1]];do Rv=Rv+1;end;Rv=Rv+0X00001;do u7=TG[Rv];end;Rv=Rv+0X1;if fv[0X9]then Rv=u7[5];end;else fv[0X9]=Av[u7[0X6]];Rv=Rv+1;do Rv=Rv+1;end;u7=TG[Rv];do Rv=Rv+1;end;do fv[10]=Av[u7[0x00006]];end;Rv=Rv+1;do fv[0X0000B]=fv[1];end;local lQ=9;Rv=Rv+1;(fv[lQ])(fv[lQ+0X00001],fv[lQ+2]);Sv=lQ-1;u7=TG[Rv];Rv=Rv+0X1;fv[9]=Av[u7[6]];Rv=Rv+1;Rv=Rv+1;do u7=TG[Rv];end;Rv=Rv+1;fv[10]=Av[u7[6]];u7=TG[Rv];Rv=Rv+0x1;fv[10]=fv[0X00A][u7[0X00001]];Rv=Rv+1;lQ=0X009;(fv)[lQ]=fv[lQ](fv[lQ+0X001]);Sv=lQ;Rv=Rv+0X001;Rv=Rv+0X00001;u7=TG[Rv];Rv=Rv+1;if not(fv[9]<=u7[1])then Rv=u7[2];end;end;end;else if w7==0X001d then(fv)[0x4]=Av[u7[0x6]];do Rv=Rv+0X1;end;Rv=Rv+0X0001;Rv=Rv+0X1;Sv=0X4;(fv)[Sv]=fv[Sv]();Rv=Rv+0x001;(fv)[4]=fv[0X004]-fv[3];do u7=TG[Rv];end;Rv=Rv+1;if not(not(fv[4]<u7[1]))then else Rv=u7[0X00002];end;else do(fv)[0X8]=Av[u7[0X0006]];end;local Pg=(8);u7=TG[Rv];Rv=Rv+1;(fv)[0X9]=u7[0x6];do Rv=Rv+1;end;(fv)[Pg]=fv[Pg](fv[Pg+0X0001]);Sv=Pg;local Ig=(cG[0X0000]);Rv=Rv+1;(fv)[0x00009]=Ig[1][Ig[0X2]];do u7=TG[Rv];end;Rv=Rv+0X1;(fv)[9]=fv[9][u7[0X1]];do Rv=Rv+1;end;Rv=Rv+0X1;Rv=Rv+0X001;do fv[10]=fv[8];end;Rv=Rv+1;Pg=9;(fv)[Pg]=fv[Pg](fv[Pg+0X1]);Sv=Pg;Rv=Rv+1;Rv=Rv+0x1;do u7=TG[Rv];end;Rv=Rv+1;if not(not fv[9])then else Rv=u7[0x00005];end;end;end;else if not(w7>=0X023)then do if w7==0X22 then fv[u7[2]]=fv[u7[5]][u7[0X1]];else(Av)[u7[6]]=fv[u7[0x002]];end;end;else if not(w7>=36)then(fv)[9]=fv[8][u7[1]];Rv=Rv+1;Rv=Rv+0X1;Rv=Rv+1;do fv[5]=fv[9];end;u7=TG[Rv];Rv=Rv+1;if not fv[0X5]then Rv=u7[0X00005];end;else if w7~=37 then(fv)[u7[2]]=fv[u7[0x0005]]+fv[u7[4]];else fv[0x008]=Av[u7[6]];Rv=Rv+0x0001;local cR=9;do Rv=Rv+1;end;u7=TG[Rv];Rv=Rv+0X1;(fv)[0x8]=fv[0x008][u7[1]];Rv=Rv+0X01;Rv=Rv+0X1;u7=TG[Rv];Rv=Rv+0X001;fv[0X08]=fv[0X00008][u7[1]];u7=TG[Rv];do Rv=Rv+0X01;end;fv[9]=Av[u7[0X006]];Rv=Rv+0X0001;Rv=Rv+1;u7=TG[Rv];Rv=Rv+1;do fv[0XA]=Av[u7[0x6]];end;do Rv=Rv+0X1;end;Rv=Rv+0X1;u7=TG[Rv];do Rv=Rv+0X00001;end;(fv)[0X0000a]=fv[0X0000a][u7[0x1]];do u7=TG[Rv];end;Rv=Rv+1;(fv)[0Xa]=fv[0XA][u7[0x00001]];Rv=Rv+0X001;do(fv)[cR]=fv[cR](fv[cR+1]);end;do Sv=cR;end;Rv=Rv+1;Rv=Rv+1;do Rv=Rv+0X1;end;fv[8]=fv[0X8]-fv[0X9];u7=TG[Rv];Rv=Rv+1;if not(not(u7[6]<fv[8]))then else Rv=u7[0X2];end;end;end;end;end;end;else if w7>=9 then if not(w7<0X000E)then if not(w7<16)then if w7>=0X11 then do if w7~=0X12 then local nq=nil;local oq=JG[u7[0X5]];local Pq=(oq[0X00004]);local iq=#Pq;if iq>0 then nq={};do for z1=1,iq do local k1=(Pq[z1]);if k1[1]~=0 then do nq[z1-1]=cG[k1[2]];end;else nq[z1-0X1]={fv,k1[2]};end;end;end;H(iG,nq);end;(fv)[u7[0X0002]]=ed(Av,oq,nq);else(fv)[0X4]=Av[u7[6]];Rv=Rv+0X1;do Sv=0X4;end;do fv[Sv]=fv[Sv]();end;u7=TG[Rv];do Rv=Rv+1;end;if not(fv[4])then else Rv=u7[5];end;end;end;else fv[0x9]=Av[u7[6]];Rv=Rv+1;Rv=Rv+0X1;u7=TG[Rv];Rv=Rv+1;do if not fv[9]then do Rv=u7[0x5];end;end;end;end;else if w7~=0Xf then do fv[9]=Av[u7[0X6]];end;do u7=TG[Rv];end;do Rv=Rv+0x00001;end;do fv[10]=u7[6];end;u7=TG[Rv];Rv=Rv+1;fv[0XB]=Av[u7[0x6]];do Rv=Rv+1;end;do Rv=Rv+0X01;end;local HA=9;u7=TG[Rv];Rv=Rv+0X1;do(fv)[12]=Av[u7[0X6]];end;Rv=Rv+0X1;Rv=Rv+1;Rv=Rv+1;Sv=HA+4-0x1;(fv[HA])(V(fv,HA+0X1,Sv));Sv=HA-1;Rv=Rv+0X001;Rv=Rv+0X01;u7=TG[Rv];Rv=Rv+1;do Rv=u7[5];end;else fv[u7[2]]=u7[6];end;end;else if w7<0x00B then do if w7~=10 then if not fv[u7[0x0002]]then do Rv=u7[5];end;end;else local GQ=(cG[0]);fv[9]=GQ[1][GQ[0x2]];local CQ=(0X009);u7=TG[Rv];Rv=Rv+1;(fv)[0X9]=fv[9][u7[0X1]];Rv=Rv+1;do fv[10]=fv[8];end;Rv=Rv+1;(fv)[11]=nil;Rv=Rv+0X0001;do(fv)[0XC]=fv[0X1];end;Rv=Rv+1;Sv=CQ+0X04-0x0001;(fv[CQ])(V(fv,CQ+0X1,Sv));Sv=CQ-1;do Rv=Rv+0X1;end;Rv=Rv+1;u7=TG[Rv];Rv=Rv+1;Rv=u7[5];end;end;else if not(w7>=12)then if not(fv[u7[2]])then else Rv=u7[5];end;else if w7~=13 then local DC=(cG[0X0]);fv[0x05]=DC[0x001][DC[0X2]];u7=TG[Rv];Rv=Rv+1;fv[0X5]=fv[0X5][u7[1]];Rv=Rv+0X1;do Rv=Rv+0X01;end;Rv=Rv+0x0001;fv[0x06]=fv[4];Rv=Rv+0X1;do(fv)[0X07]=nil;end;local hC=(5);Rv=Rv+1;fv[0x8]=fv[0X1];Rv=Rv+1;do(fv)[9]={};end;u7=TG[Rv];do Rv=Rv+1;end;(fv[9])[u7[6]]=u7[1];Rv=Rv+1;Sv=hC+0X0005-0X1;fv[hC](V(fv,hC+1,Sv));Sv=hC-0X1;u7=TG[Rv];do Rv=Rv+1;end;Rv=u7[0X5];else local Il=(cG[0]);fv[0X6]=Il[0X1][Il[2]];do Rv=Rv+0X1;end;Rv=Rv+1;u7=TG[Rv];local ul=0X06;do Rv=Rv+0X1;end;(fv)[0x6]=fv[0x006][u7[0X01]];do Rv=Rv+0X1;end;fv[7]=fv[0x0005];Rv=Rv+0X01;(fv)[ul]=fv[ul](fv[ul+1]);do Sv=ul;end;u7=TG[Rv];Rv=Rv+1;if not(not fv[0X6])then else do Rv=u7[0x5];end;end;end;end;end;end;else if not(w7<0x4)then do if not(w7<0x6)then if w7<7 then if not(fv[u7[5]]<=fv[u7[0X4]])then do Rv=u7[2];end;end;else if w7~=8 then do fv[u7[0X2]]=nil;end;else do fv[9]=Av[u7[0X0006]];end;Rv=Rv+0X0001;Rv=Rv+0X1;do u7=TG[Rv];end;do Rv=Rv+1;end;if fv[0x9]then Rv=u7[0x5];end;end;end;else if w7==0X0005 then do(fv)[10]=Av[u7[6]];end;do u7=TG[Rv];end;Rv=Rv+0X1;fv[10]=fv[10][u7[1]];u7=TG[Rv];Rv=Rv+1;if not(fv[0XA])then else Rv=u7[5];end;else do if not(fv[u7[5]]<fv[u7[0X4]])then Rv=u7[0X002];end;end;end;end;end;else if w7>=2 then if w7==3 then fv[0X00004]=Av[u7[6]];do Rv=Rv+0X00001;end;do Rv=Rv+1;end;Rv=Rv+1;Sv=0x4;(fv)[Sv]=fv[Sv]();do Rv=Rv+1;end;Rv=Rv+1;Rv=Rv+1;(fv)[0x002]=fv[4];u7=TG[Rv];Rv=Rv+1;do(fv)[4]=Av[u7[0x6]];end;Rv=Rv+0X0001;Rv=Rv+0X1;u7=TG[Rv];Rv=Rv+1;local dE=(0x4);fv[5]=u7[0X6];Rv=Rv+0X1;do fv[dE]=fv[dE](fv[dE+0x1]);end;Sv=dE;u7=TG[Rv];Rv=Rv+0x1;do if not(fv[0X00004])then else Rv=u7[5];end;end;else local T7=(4);local M7=fv[0X004];fv[T7+1]=M7;do fv[T7]=M7[u7[0X1]];end;u7=TG[Rv];Rv=Rv+0x1;(fv)[0X6]=u7[0x6];Rv=Rv+0X1;do T7=4;end;(fv)[T7]=fv[T7](fv[T7+0X001],fv[T7+0X2]);Sv=T7;do Rv=Rv+1;end;Rv=Rv+0X00001;u7=TG[Rv];do Rv=Rv+0X1;end;if not(not fv[0X4])then else do Rv=u7[0x5];end;end;end;else if w7==1 then fv[0X0a]=Av[u7[0X00006]];Rv=Rv+1;Rv=Rv+1;Rv=Rv+1;Sv=0x0000a;do fv[Sv]=fv[Sv]();end;u7=TG[Rv];Rv=Rv+1;if not(not fv[0XA])then else Rv=u7[0x5];end;else do(fv)[0X4]=Av[u7[6]];end;Rv=Rv+0x1;Rv=Rv+1;local Oe=(cG[0X0000]);u7=TG[Rv];Rv=Rv+0X1;do fv[5]=Av[u7[0X6]];end;do Rv=Rv+1;end;(fv)[4]=fv[4][fv[0x0005]];Rv=Rv+1;Rv=Rv+0X1;u7=TG[Rv];Rv=Rv+1;local ce=(5);fv[4]=fv[0X4][u7[0X1]];Rv=Rv+0X01;(fv)[5]=Oe[1][Oe[2]];Rv=Rv+0x1;Rv=Rv+1;u7=TG[Rv];Rv=Rv+1;do(fv)[0X05]=fv[5][u7[1]];end;Rv=Rv+0X001;(fv)[0X6]=fv[0x4];Rv=Rv+1;fv[ce]=fv[ce](fv[ce+0x1]);Sv=ce;Rv=Rv+0x01;Rv=Rv+0X1;u7=TG[Rv];Rv=Rv+1;(fv)[6]=u7[6];u7=TG[Rv];Rv=Rv+1;do fv[0X7]=u7[0X06];end;u7=TG[Rv];Rv=Rv+0x1;if not fv[0X005]then Rv=u7[0X0005];end;end;end;end;end;end;else if w7<57 then if not(w7>=0X2F)then if w7<0X002A then if not(w7>=0X000028)then if w7~=0x0027 then do fv[4]=Av[u7[6]];end;Rv=Rv+1;do Sv=4;end;(fv[Sv])();Sv=Sv-1;Rv=Rv+1;(fv)[0X4]=fv[0];do Rv=Rv+1;end;Sv=4;fv[Sv]=fv[Sv]();Rv=Rv+1;Rv=Rv+0X001;u7=TG[Rv];do Rv=Rv+1;end;(fv)[0X5]=Av[u7[6]];Rv=Rv+0X1;do Rv=Rv+0x01;end;do Rv=Rv+0X1;end;Sv=5;fv[Sv]=fv[Sv]();Rv=Rv+1;Rv=Rv+1;u7=TG[Rv];Rv=Rv+1;(fv)[0X0006]=Av[u7[6]];Rv=Rv+1;do Rv=Rv+1;end;do u7=TG[Rv];end;Rv=Rv+0X1;(fv)[6]=fv[6][u7[0x1]];Rv=Rv+1;Rv=Rv+1;u7=TG[Rv];Rv=Rv+0X1;do fv[6]=fv[6][u7[1]];end;Rv=Rv+1;do Rv=Rv+0X1;end;u7=TG[Rv];Rv=Rv+0X01;fv[0X00006]=fv[6][u7[1]];u7=TG[Rv];Rv=Rv+1;(fv)[7]=Av[u7[0X6]];Rv=Rv+0X1;do Rv=Rv+0X1;end;do u7=TG[Rv];end;Rv=Rv+0X1;if not(fv[7])then else Rv=u7[0x5];end;else(fv)[0X4]=Av[u7[6]];do u7=TG[Rv];end;Rv=Rv+1;do fv[0X004]=fv[0X4][u7[0X0001]];end;u7=TG[Rv];Rv=Rv+1;fv[0x04]=fv[0X4][u7[1]];Rv=Rv+1;Rv=Rv+0x00001;u7=TG[Rv];Rv=Rv+0X00001;do if u7[6]<=fv[0X4]then Rv=u7[0x0002];end;end;end;else if w7~=0X29 then do(fv)[u7[2]]=L(fv[u7[5]],fv[u7[0X4]]);end;else local DX=(JG[u7[5]]);local kX=(DX[4]);local mX,gX=#kX,nil;if mX>0X0000 then gX={};for Mj=0X0001,mX do local Ej=(kX[Mj]);if Ej[1]~=0 then(gX)[Mj-0X0001]=cG[Ej[0X2]];else do(gX)[Mj-1]={fv,Ej[2]};end;end;end;H(iG,gX);end;(fv)[0X0]=ed(Av,DX,gX);u7=TG[Rv];Rv=Rv+0X00001;do DX=JG[u7[0X005]];end;do gX=nil;end;kX=DX[0X4];mX=#kX;if not(mX>0)then else gX={};for eE=0X1,mX do local LE=kX[eE];if LE[1]~=0X0 then(gX)[eE-0X1]=cG[LE[0X2]];else gX[eE-0X1]={fv,LE[0x0002]};end;end;H(iG,gX);end;do fv[1]=ed(Av,DX,gX);end;u7=TG[Rv];Rv=Rv+1;fv[0X2]=u7[0X006];do u7=TG[Rv];end;Rv=Rv+1;fv[0X03]=u7[6];u7=TG[Rv];Rv=Rv+0X1;Rv=u7[0X5];end;end;else if w7<44 then if w7==0x2B then fv[0Xa]=Av[u7[0X6]];Rv=Rv+1;do Rv=Rv+0X1;end;u7=TG[Rv];Rv=Rv+0X001;do(fv)[10]=fv[0xa][u7[0x0001]];end;u7=TG[Rv];do Rv=Rv+0X00001;end;(fv)[0XA]=fv[0Xa][u7[0X01]];Rv=Rv+1;local mI=(11);Rv=Rv+1;do u7=TG[Rv];end;Rv=Rv+1;fv[11]=Av[u7[0X6]];do u7=TG[Rv];end;do Rv=Rv+1;end;(fv)[12]=Av[u7[6]];u7=TG[Rv];Rv=Rv+0X00001;fv[0Xc]=fv[12][u7[1]];do u7=TG[Rv];end;do Rv=Rv+0x00001;end;do fv[0Xc]=fv[12][u7[1]];end;Rv=Rv+0X1;Rv=Rv+0X1;Rv=Rv+0X00001;(fv)[mI]=fv[mI](fv[mI+1]);do Sv=mI;end;do Rv=Rv+0X1;end;Rv=Rv+0X001;u7=TG[Rv];Rv=Rv+0X1;if not(fv[11]<=fv[10])then Rv=u7[0X2];end;else do(fv)[9]=Av[u7[0X6]];end;Rv=Rv+1;Rv=Rv+0x1;u7=TG[Rv];Rv=Rv+1;(fv)[9]=fv[0X0009][u7[0X001]];Rv=Rv+1;do Rv=Rv+1;end;Rv=Rv+1;Sv=9;fv[Sv]();Sv=Sv-0x1;u7=TG[Rv];Rv=Rv+0X1;Rv=u7[5];end;else if not(w7>=0X002D)then local M8=(u7[2]);local R8,b8,P8=fv[M8]();if not(R8)then else do(fv)[M8+0X1]=b8;end;fv[M8+2]=P8;do Rv=u7[0X05];end;end;else do if w7==0X2e then(fv)[u7[2]]={V({},1,u7[0X005])};else fv[4]=Av[u7[0X6]];Rv=Rv+1;Rv=Rv+0x1;u7=TG[Rv];Rv=Rv+1;(fv)[0x005]=Av[u7[6]];do Rv=Rv+0X001;end;do fv[0x4]=fv[4][fv[5]];end;Rv=Rv+1;Rv=Rv+0X1;u7=TG[Rv];do Rv=Rv+0X1;end;do if not fv[4]then Rv=u7[5];end;end;end;end;end;end;end;else if not(w7>=0X34)then if w7>=0X31 then if w7<50 then(fv)[5]=Av[u7[6]];u7=TG[Rv];Rv=Rv+1;do fv[5]=fv[0x0005][u7[1]];end;u7=TG[Rv];do Rv=Rv+0x00001;end;if not(not fv[0x005])then else Rv=u7[5];end;else if w7~=51 then for DL=u7[2],u7[5]do fv[DL]=nil;end;else repeat local yC,IC,DC=iG,fv,u7[0X2];do if not(#yC>0)then else local Iy={};for lf,Rf in l,yC do for p_,N_ in l,Rf do do if N_[1]==IC and N_[0X2]>=DC then local h9=(N_[2]);do if not Iy[h9]then(Iy)[h9]={IC[h9]};end;end;(N_)[1]=Iy[h9];do(N_)[0x2]=1;end;end;end;end;end;end;end;until true;end;end;else if w7~=48 then(fv)[0X005]=Av[u7[0X006]];Rv=Rv+0X1;Rv=Rv+0X001;do u7=TG[Rv];end;Rv=Rv+1;do fv[5]=fv[5][u7[0x1]];end;Rv=Rv+1;Rv=Rv+0x1;u7=TG[Rv];Rv=Rv+1;if not fv[0X5]then do Rv=u7[5];end;end;else fv[0X5]=Av[u7[0X6]];u7=TG[Rv];Rv=Rv+1;local Oj=0x0;fv[6]=Av[u7[6]];do Rv=Rv+0X1;end;do Rv=Rv+0X1;end;u7=TG[Rv];Rv=Rv+1;(fv)[7]=Av[u7[0x006]];Rv=Rv+0X1;Rv=Rv+0X1;local fj=0x6;do Rv=Rv+0X001;end;do fv[8]=fv[1];end;Rv=Rv+0x00001;local Tj=(0X3);if Tj~=0 then do Sv=fj+Tj-0X1;end;end;local lj,hj=nil,(nil);if Tj==1 then lj,hj=Cd(fv[fj]());else lj,hj=Cd(fv[fj](V(fv,fj+0X01,Sv)));end;do if Oj==1 then Sv=fj-0x1;else if Oj==0 then do lj=lj+fj-0X1;end;Sv=lj;else lj=fj+Oj-0x002;Sv=lj+0X1;end;local AL=0x0;do for f_=fj,lj do AL=AL+1;(fv)[f_]=hj[AL];end;end;end;end;Rv=Rv+0X1;do Rv=Rv+0X1;end;Rv=Rv+1;fj=0x5;Tj=0X0000;do Oj=4;end;if Tj==0x0 then else Sv=fj+Tj-0X1;end;lj,hj=nil;if Tj~=0X1 then lj,hj=Cd(fv[fj](V(fv,fj+1,Sv)));else lj,hj=Cd(fv[fj]());end;if Oj~=0X1 then do if Oj~=0 then lj=fj+Oj-2;Sv=lj+0X01;else lj=lj+fj-0X0001;Sv=lj;end;end;local Dd=(0);for Gy=fj,lj do do Dd=Dd+0X1;end;fv[Gy]=hj[Dd];end;else do Sv=fj-0X1;end;end;Rv=Rv+1;Rv=Rv+0X1;u7=TG[Rv];Rv=Rv+0x00001;do fj=5;end;local Yj=(h(function(...)(t)();do for rf,Cf in...do t(true,rf,Cf);end;end;end));(Yj)(fv[fj],fv[fj+0X1],fv[fj+0X00002]);do Sv=fj;end;fv[fj]=Yj;do Rv=u7[5];end;end;end;else if not(w7>=0X36)then if w7==53 then(fv)[8]=fv[0x7][u7[0X1]];Rv=Rv+0X1;do Rv=Rv+0X1;end;Rv=Rv+0X1;(fv)[0x4]=fv[0X8];u7=TG[Rv];Rv=Rv+1;if not fv[4]then Rv=u7[0X0005];end;else do(fv)[9]=Av[u7[6]];end;Rv=Rv+1;do Rv=Rv+0X1;end;u7=TG[Rv];do Rv=Rv+1;end;if not(fv[0X9])then else Rv=u7[5];end;end;else do if not(w7>=0x37)then(fv)[0X004]=Av[u7[0X6]];Rv=Rv+1;Rv=Rv+0X1;u7=TG[Rv];do Rv=Rv+0X00001;end;(fv)[0X4]=fv[0X4][u7[1]];Rv=Rv+1;Sv=0X4;(fv[Sv])();Sv=Sv-0X1;do Rv=Rv+1;end;Rv=Rv+0x00001;u7=TG[Rv];Rv=Rv+0X0001;do Rv=u7[5];end;else do if w7~=0X00038 then fv[0X4]=Av[u7[6]];u7=TG[Rv];Rv=Rv+0X1;(fv)[0X004]=fv[4][u7[0x00001]];do u7=TG[Rv];end;do Rv=Rv+1;end;do if not fv[4]then Rv=u7[5];end;end;else(fv)[9]=Av[u7[0X6]];do Rv=Rv+0x00001;end;do Rv=Rv+0x0001;end;u7=TG[Rv];do Rv=Rv+0x1;end;local nL=0X9;(fv)[0X0000a]=u7[6];u7=TG[Rv];Rv=Rv+1;(fv)[11]=Av[u7[0X6]];do Rv=Rv+1;end;Rv=Rv+1;u7=TG[Rv];Rv=Rv+0x00001;(fv)[0X0C]=Av[u7[0x6]];Rv=Rv+0x1;Sv=nL+4-0x1;(fv[nL])(V(fv,nL+1,Sv));Sv=nL-0X1;u7=TG[Rv];Rv=Rv+1;Rv=u7[5];end;end;end;end;end;end;end;else if not(w7>=0x000042)then if not(w7<61)then if not(w7>=63)then if w7==62 then(fv)[0X0004]=Av[u7[0x6]];Rv=Rv+1;do Rv=Rv+1;end;u7=TG[Rv];Rv=Rv+1;if not fv[4]then Rv=u7[5];end;else(fv)[0X09]=Av[u7[0X6]];Rv=Rv+0X1;local JQ=(0X9);Rv=Rv+0x1;Rv=Rv+0X1;(fv)[10]=fv[7];do u7=TG[Rv];end;do Rv=Rv+0X0001;end;fv[11]=Av[u7[0x6]];Rv=Rv+1;Rv=Rv+1;do Rv=Rv+1;end;fv[JQ](fv[JQ+1],fv[JQ+0X002]);Sv=JQ-0x1;Rv=Rv+1;do Rv=Rv+0x1;end;do u7=TG[Rv];end;Rv=Rv+0x1;fv[0x9]=Av[u7[6]];Rv=Rv+0X00001;do Sv=0X9;end;fv[Sv]();Sv=Sv-0X1;Rv=Rv+1;Rv=Rv+1;u7=TG[Rv];Rv=Rv+0X1;Rv=u7[0X5];end;else if w7>=0X000040 then if w7~=0X41 then local Ow=(cG[0]);(fv)[5]=Ow[1][Ow[2]];Rv=Rv+0X01;Rv=Rv+1;u7=TG[Rv];Rv=Rv+1;(fv)[0X0005]=fv[0x05][u7[0X1]];Rv=Rv+0x1;local lw=(0X005);Rv=Rv+0X00001;Rv=Rv+1;fv[0x6]=fv[4];Rv=Rv+1;(fv)[lw]=fv[lw](fv[lw+1]);Sv=lw;u7=TG[Rv];Rv=Rv+1;if not(not fv[0X5])then else Rv=u7[0X00005];end;else fv[0X8]=fv[0X00007][u7[1]];Rv=Rv+0x01;Rv=Rv+1;Rv=Rv+0X0001;Sv=0X8;fv[Sv]();Sv=Sv-1;u7=TG[Rv];Rv=Rv+1;Rv=u7[5];end;else fv[0X005]=Av[u7[0X006]];u7=TG[Rv];Rv=Rv+1;fv[0x5]=fv[0X05][u7[0X1]];u7=TG[Rv];Rv=Rv+1;(fv)[0x5]=fv[5][u7[0X1]];do Rv=Rv+0X1;end;Rv=Rv+1;do u7=TG[Rv];end;Rv=Rv+0X1;if not(fv[0X5]<=u7[1])then Rv=u7[0X2];end;end;end;else if w7<59 then do if w7==0X03a then fv[0X004]=Av[u7[0X6]];Rv=Rv+0x1;Rv=Rv+0X1;local Ai=0x0004;do u7=TG[Rv];end;Rv=Rv+1;(fv)[0X5]=Av[u7[0X006]];Rv=Rv+0X1;(fv)[Ai]=fv[Ai](fv[Ai+1]);Sv=Ai;Rv=Rv+1;Rv=Rv+0X1;u7=TG[Rv];Rv=Rv+0X00001;do if fv[4]then Rv=u7[5];end;end;else do(fv)[0X8]=Av[u7[6]];end;Rv=Rv+0X001;Rv=Rv+1;do Rv=Rv+0X01;end;Sv=0x00008;do(fv)[Sv]=fv[Sv]();end;do Rv=Rv+0X1;end;fv[0X00008]=fv[8]-fv[5];u7=TG[Rv];Rv=Rv+0X1;fv[0X8]=fv[8]>u7[1];u7=TG[Rv];Rv=Rv+1;if not(not fv[0X00008])then else do Rv=u7[5];end;end;end;end;else if w7==0X3C then(fv)[5]=Av[u7[6]];Rv=Rv+1;Rv=Rv+1;do Rv=Rv+0X1;end;Sv=0X5;fv[Sv]=fv[Sv]();Rv=Rv+1;(fv)[0x5]=fv[0X00005]-fv[0X3];u7=TG[Rv];Rv=Rv+1;if not(fv[5]<u7[1])then Rv=u7[0X2];end;else(fv)[9]=fv[0x08][u7[1]];Rv=Rv+0X00001;Sv=9;fv[Sv]();Sv=Sv-0X1;u7=TG[Rv];Rv=Rv+0x00001;do Rv=u7[0X05];end;end;end;end;else if w7<0X00047 then if w7>=0X44 then do if w7>=0X45 then do if w7==0X46 then(fv)[0X4]=Av[u7[6]];u7=TG[Rv];do Rv=Rv+0X1;end;do(fv)[4]=fv[0X00004][u7[1]];end;do u7=TG[Rv];end;Rv=Rv+1;if fv[4]then do Rv=u7[5];end;end;else(fv)[9]=Av[u7[6]];Rv=Rv+0X001;Sv=0X0009;do(fv)[Sv]=fv[Sv]();end;do Rv=Rv+1;end;fv[9]=fv[9]-fv[3];u7=TG[Rv];Rv=Rv+0x1;if u7[0X6]<=fv[0X9]then Rv=u7[2];end;end;end;else do fv[9]=Av[u7[6]];end;Rv=Rv+1;do Rv=Rv+1;end;u7=TG[Rv];Rv=Rv+0x1;do fv[9]=fv[0X9][u7[1]];end;u7=TG[Rv];Rv=Rv+1;(fv)[9]=fv[9][u7[1]];do Rv=Rv+1;end;Rv=Rv+0x1;u7=TG[Rv];Rv=Rv+1;if fv[9]==fv[0X6]then else do Rv=u7[0x00002];end;end;end;end;else if w7==67 then local oN=cG[0X000];(fv)[6]=oN[0X1][oN[0X2]];Rv=Rv+1;do Rv=Rv+0X1;end;u7=TG[Rv];Rv=Rv+1;(fv)[0x6]=fv[0X06][u7[0X1]];Rv=Rv+0X1;Rv=Rv+0X1;Rv=Rv+0X1;fv[7]=fv[0X05];Rv=Rv+0X1;fv[0x00008]=nil;Rv=Rv+1;fv[0X9]=fv[0X1];local eN=(0x06);Rv=Rv+0x1;do Sv=eN+4-1;end;fv[eN](V(fv,eN+0X00001,Sv));do Sv=eN-1;end;Rv=Rv+0x00001;Rv=Rv+1;u7=TG[Rv];do Rv=Rv+0X1;end;Rv=u7[5];else(fv)[8]=Av[u7[0X6]];do Rv=Rv+1;end;Rv=Rv+0X01;u7=TG[Rv];do Rv=Rv+1;end;local by=JG[u7[5]];local Zy=(0X008);local Ry=by[4];local My,qy=#Ry,(nil);if not(My>0X000)then else do qy={};end;do for Yn=1,My do local In=Ry[Yn];if In[0x1]==0 then(qy)[Yn-0X1]={fv,In[2]};else qy[Yn-0X1]=cG[In[0X0002]];end;end;end;H(iG,qy);end;do fv[9]=ed(Av,by,qy);end;Rv=Rv+1;fv[Zy](fv[Zy+1]);Sv=Zy-1;Rv=Rv+0X1;Rv=Rv+0X1;u7=TG[Rv];Rv=Rv+0X00001;do Rv=u7[0X00005];end;end;end;else do if not(w7<73)then if not(w7>=0x004a)then local ri=u7[5];local Gi=(fv[ri]);for WN=ri+1,u7[0X4]do Gi=Gi..fv[WN];end;(fv)[u7[0X2]]=Gi;else if w7==0X04B then fv[9]=Av[u7[6]];local uE=9;do Rv=Rv+1;end;Rv=Rv+0X01;u7=TG[Rv];Rv=Rv+1;(fv)[0Xa]=Av[u7[0X00006]];do Rv=Rv+1;end;Rv=Rv+0X01;Rv=Rv+1;for N6=0X00B,12 do fv[N6]=nil;end;u7=TG[Rv];Rv=Rv+1;(fv)[0Xd]=u7[6];Rv=Rv+0X1;Sv=uE+5-1;do fv[uE]=fv[uE](V(fv,uE+0X00001,Sv));end;Sv=uE;u7=TG[Rv];do Rv=Rv+0X001;end;if not(not fv[9])then else Rv=u7[0x005];end;else fv[u7[2]]=Av[u7[0X6]];end;end;else if w7==72 then else do(fv)[4]=Av[u7[0x6]];end;do Rv=Rv+0X1;end;Rv=Rv+0X1;do Rv=Rv+1;end;Sv=4;fv[Sv]=fv[Sv]();Rv=Rv+0X0001;Rv=Rv+0X01;Rv=Rv+1;(fv)[4]=fv[4]-fv[2];u7=TG[Rv];Rv=Rv+1;if not(not(u7[6]<fv[0X4]))then else Rv=u7[0x2];end;end;end;end;end;end;end;end;end;end;end);if lv then if Cv then if Lv~=0X0001 then return fv[sv](V(fv,sv+0X1,Sv));else do return fv[sv]();end;end;elseif not(sv)then else do return V(fv,sv,Lv);end;end;else if C(Cv)=="string"then do if M(Cv,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(M(Cv,"^.-:%d+: "))then E(Cv,0);else(E)("\L\117\114\097\p\104 \S\cr\105\112t:"..(YG[Rv-1]or"\(\in\116\e\114n\097\108)").."\: "..x(Cv),0);end;else E(Cv,0);end;end;end;else hG=function(...)local vG=0;local oG,CG=0X1,({});local rG=(I());local xG=({[0X1]=FG,[0X0002]=CG});local EG,wG=Cd(...);EG=EG-1;for pu=0X0000,EG do do if IG>pu then(CG)[pu]=wG[pu+0X1];else break;end;end;end;local MG=((rG==a and SG or rG));do if not OG then wG=nil;elseif zG then(CG)[IG]={n=EG>=IG and EG-IG+1 or 0X00,V(wG,IG+0x0001,EG+1)};end;end;if MG==rG then else(R)(hG,MG);end;local GG,KG,RG,bG=A(function()do while true do local Dr=(TG[oG]);local wr=(Dr[0x3]);oG=oG+1;if wr>=0X9 then do if not(wr>=14)then if wr<11 then if wr~=10 then do repeat local Rg,xg=iG,CG;do if not(#Rg>0)then else local DP=({});for Ta,Ma in l,Rg do for po,Do in l,Ma do if not(Do[1]==xg and Do[2]>=0X0)then else local p6=Do[0X2];if not DP[p6]then(DP)[p6]={xg[p6]};end;do(Do)[1]=DP[p6];end;do Do[0X002]=1;end;end;end;end;end;end;until true;end;return;else local db=(cG[0]);(CG)[0X0]=db[0x1][db[0X2]];Dr=TG[oG];oG=oG+0X1;(CG)[1]=MG[Dr[0X0006]];Dr=TG[oG];do oG=oG+0X1;end;(CG)[1]=CG[0X1][Dr[0X1]];oG=oG+1;do oG=oG+1;end;oG=oG+0X001;(CG)[0]=CG[0X0]~=CG[0X1];Dr=TG[oG];oG=oG+1;oG=Dr[0x5];end;else if wr<12 then(CG)[0]=MG[Dr[6]];oG=oG+0x1;oG=oG+0x1;oG=oG+0x1;do vG=0X0;end;CG[vG]=CG[vG]();Dr=TG[oG];do oG=oG+0X1;end;(CG)[0x1]=MG[Dr[0X6]];do oG=oG+0x1;end;oG=oG+1;oG=oG+0X1;do(CG)[0]=CG[0]-CG[0X0001];end;Dr=TG[oG];oG=oG+0X1;if not(not(CG[0]<Dr[1]))then else oG=Dr[2];end;else do if wr==0Xd then local t3=(cG[0X0000]);CG[1]=t3[1][t3[0x02]];Dr=TG[oG];oG=oG+0X1;do(CG)[0X02]=MG[Dr[0x6]];end;oG=oG+0X1;oG=oG+0x0001;Dr=TG[oG];oG=oG+0X1;do(CG)[2]=CG[0X02][Dr[0x01]];end;Dr=TG[oG];oG=oG+0X001;if CG[1]==CG[0X00002]then oG=Dr[0X002];end;else CG[0]=MG[Dr[6]];oG=oG+0X0001;oG=oG+1;oG=oG+1;vG=0;CG[vG]=CG[vG]();oG=oG+0x1;local kp=0X00;oG=oG+0X1;Dr=TG[oG];oG=oG+1;(MG)[Dr[6]]=CG[0];Dr=TG[oG];do oG=oG+1;end;do CG[0X00000]=MG[Dr[0X6]];end;Dr=TG[oG];do oG=oG+1;end;do(CG)[0]=CG[0][Dr[1]];end;oG=oG+1;oG=oG+1;Dr=TG[oG];do oG=oG+1;end;CG[0x0000]=CG[0X0][Dr[1]];oG=oG+1;oG=oG+0X1;Dr=TG[oG];oG=oG+1;do CG[0X0]=CG[0X0][Dr[1]];end;oG=oG+1;do oG=oG+0x1;end;Dr=TG[oG];oG=oG+1;local zp,ap=CG[0X000],(cG[0X000]);CG[kp+1]=zp;(CG)[kp]=zp[Dr[1]];do oG=oG+1;end;CG[0X02]=ap[0X01][ap[0x2]];oG=oG+0X001;kp=0;CG[kp](CG[kp+0X00001],CG[kp+0X2]);vG=kp-0X01;oG=oG+1;oG=oG+0x1;Dr=TG[oG];do oG=oG+1;end;do oG=Dr[0X5];end;end;end;end;end;else if wr>=16 then if not(wr<17)then do if wr==0X12 then local H6=(JG[Dr[5]]);local M6,b6=H6[4],(nil);local k6=#M6;do if not(k6>0)then else b6={};do for ak=0X1,k6 do local Jk=M6[ak];if Jk[1]==0X0 then(b6)[ak-0X01]={CG,Jk[2]};else(b6)[ak-0X1]=cG[Jk[2]];end;end;end;(H)(iG,b6);end;end;CG[Dr[2]]=ed(MG,H6,b6);else CG[Dr[0X2]]=Dr[6];end;end;else for ve=Dr[2],Dr[5]do CG[ve]=nil;end;end;else if wr~=15 then CG[Dr[0X2]]=MG[Dr[0X6]];else(CG)[Dr[2]]=CG[Dr[0X5]]-CG[Dr[0X0004]];end;end;end;end;else do if wr>=4 then if wr<0X0006 then if wr==0X00005 then do oG=Dr[5];end;else if CG[Dr[0X5]]~=CG[Dr[0X4]]then oG=Dr[2];end;end;else if wr>=7 then if wr==0X8 then local A1=(cG[1]);do CG[0x00000]=A1[1][A1[0X2]];end;oG=oG+1;do vG=0X0;end;CG[vG]=CG[vG]();Dr=TG[oG];oG=oG+0x1;if not CG[0]then do oG=Dr[5];end;end;else do CG[Dr[2]]=CG[Dr[5]]<=CG[Dr[4]];end;end;else CG[Dr[2]]={V({},1,Dr[0X005])};end;end;else if wr>=2 then if wr==3 then else(CG)[0X0]=MG[Dr[0X6]];oG=oG+0x1;oG=oG+1;do oG=oG+0X1;end;do(CG)[0]=not CG[0];end;Dr=TG[oG];do oG=oG+0x01;end;if CG[0]then oG=Dr[5];end;end;else if wr~=0X1 then repeat local ED,pD=iG,(CG);if#ED>0 then local Yl={};for nN,RN in l,ED do for JD,mD in l,RN do if mD[0X1]==pD and mD[0X2]>=0 then local E8=(mD[0X2]);if not(not Yl[E8])then else Yl[E8]={pD[E8]};end;do mD[0X1]=Yl[E8];end;(mD)[0X2]=0X01;end;end;end;end;until true;local bN=Dr[0X00002];return false,bN,bN;else if CG[Dr[0X005]]<CG[Dr[0X4]]then oG=Dr[0x2];end;end;end;end;end;end;end;end;end);if GG then if KG then if bG==0X1 then return CG[RG]();else return CG[RG](V(CG,RG+0x1,vG));end;elseif RG then do return V(CG,RG,bG);end;end;else if C(KG)~="string"then(E)(KG,0x0);else do if not(M(KG,'\097\116t\101mpt\ t\111 \121\105\e\108\d \097\099ro\s\s \me\116\097\m\eth\111\d\047\C\%\-\099\097\ll\ \098\o\117\110\d\097r\y'))then else return coroutine.yield();end;end;if not(M(KG,"^\.\-\:\%\d\+\:\032"))then E(KG,0X00000);else(E)("Luraph Script:"..(YG[oG-0x1]or"(internal)")..'\058 '..x(KG),0);end;end;end;end;end;end;else if not(lG<0X51)then do if lG~=0X00052 then hG=function(...)local AT,DT=0X1,({});local LT=I();local eT=(0);local YT,gT=Cd(...);local ZT={[0X0002]=DT,[0X1]=FG};YT=YT-1;local VT=(LT==a and SG or LT);for yi=0X0,YT do if IG>yi then DT[yi]=gT[yi+1];else do break;end;end;end;do if not OG then gT=nil;elseif zG then(DT)[IG]={n=YT>=IG and YT-IG+0X001 or 0x0000,V(gT,IG+0x0001,YT+0x0001)};end;end;if VT==LT then else R(hG,VT);end;local FT,JT,NT,IT=A(function()do while true do local LV=(TG[AT]);local UV=(LV[0X3]);AT=AT+1;if UV>=9 then do if not(UV>=0xd)then if not(UV>=11)then if UV~=10 then do if DT[LV[0X005]]<DT[LV[0X04]]then AT=LV[2];end;end;else(DT)[LV[2]]=DT[LV[5]]^DT[LV[4]];end;else if UV~=12 then else AT=LV[5];end;end;else if not(UV>=15)then if UV~=0Xe then DT[LV[0X2]]=DT[LV[5]]<=DT[LV[0X4]];else local J2=LV[5];local e2=(DT[J2]);for vG=J2+0X1,LV[0X0004]do e2=e2..DT[vG];end;(DT)[LV[0X2]]=e2;end;else if not(UV<16)then if UV~=17 then(DT)[0]=false;LV=TG[AT];do AT=AT+1;end;VT[LV[6]]=DT[0X0];LV=TG[AT];do AT=AT+1;end;AT=LV[5];else local VW=(JG[LV[0X5]]);local RW=VW[0X4];local LW=(#RW);local rW=nil;do if LW>0X00 then do rW={};end;for x7=0x1,LW do local n7=RW[x7];do if n7[1]==0X0 then(rW)[x7-0x1]={DT,n7[2]};else(rW)[x7-0x001]=cG[n7[0X2]];end;end;end;(H)(iG,rW);end;end;do(DT)[LV[0X00002]]=ed(VT,VW,rW);end;end;else do(DT)[LV[0X2]]=LV[0x00006];end;end;end;end;end;else if UV<0X04 then if UV<2 then if UV~=1 then do(DT)[LV[0X2]]=VT[LV[0X006]];end;else(DT)[LV[0x2]]=DT[LV[0X00005]]/DT[LV[4]];end;else if UV==3 then if not(not(DT[LV[0X5]]<DT[LV[4]]))then else AT=LV[2];end;else DT[LV[2]]={V({},1,LV[5])};end;end;else if UV>=6 then do if not(UV<7)then if UV~=8 then local Qx=(cG[0X0]);(DT)[0]=Qx[1][Qx[0X0002]];do AT=AT+1;end;Qx=cG[1];DT[1]=Qx[0x1][Qx[2]];AT=AT+0X001;AT=AT+0X01;LV=TG[AT];AT=AT+1;do if DT[0]==DT[0x0001]then else AT=LV[2];end;end;else do if not(DT[LV[5]]<=DT[LV[4]])then else AT=LV[2];end;end;end;else local MF=(LV[2]);local qF=(DT[MF+2]);local dF=(DT[MF+0X01]);local PF=(DT[MF]);(DT)[MF]=h(function()for VM=PF,dF,qF do(t)(true,VM);end;end);do AT=LV[5];end;end;end;else if UV~=5 then local WE=(DT[LV[5]]/DT[LV[4]]);(DT)[LV[2]]=WE-WE%1;else do repeat local c7,X7=iG,(DT);if not(#c7>0)then else local hM={};for Dd,Gl in l,c7 do for mL,tL in l,Gl do if tL[1]==X7 and tL[0X2]>=0 then local NV=tL[0X002];if not hM[NV]then do hM[NV]={X7[NV]};end;end;do tL[0X1]=hM[NV];end;do(tL)[0X2]=1;end;end;end;end;end;until true;end;return;end;end;end;end;end;end;end);do if FT then if JT then if IT~=0x001 then do return DT[NT](V(DT,NT+1,eT));end;else return DT[NT]();end;elseif not(NT)then else do return V(DT,NT,IT);end;end;else if C(JT)=="string"then if not(M(JT,'\097\116\116\e\m\pt t\111\ y\i\101\108\100\032acr\111\s\115 \m\e\116am\e\116\hod\/C\037\-ca\108\l\032\098\o\117\110\da\114y'))then else do return coroutine.yield();end;end;if not(M(JT,'\^.\-\058\037\d\+\058\032'))then E(JT,0);else(E)('\L\117\114\097\p\104\ \083c\114i\112t\058'..(YG[AT-0X00001]or"(internal)")..'\:\ '..x(JT),0);end;else E(JT,0);end;end;end;end;else hG=function(...)local F8=(0X1);local G8,o8={},0X0;local d8=(I());local q8=((d8==a and SG or d8));local Z8=({[0X0002]=G8,[0X1]=FG});local t8,r8=Cd(...);t8=t8-0x1;do for Ux=0X00000,t8 do if IG>Ux then do G8[Ux]=r8[Ux+1];end;else do break;end;end;end;end;do if not OG then r8=nil;elseif zG then(G8)[IG]={n=t8>=IG and t8-IG+1 or 0X0,V(r8,IG+1,t8+0X1)};end;end;if q8==d8 then else(R)(hG,q8);end;local x8,j8,p8,J8=A(function()while true do local Dd=(TG[F8]);local c2=Dd[0x0003];F8=F8+0X1;if c2<0Xc then if c2<6 then if not(c2<0X03)then if c2<0X4 then else if c2==5 then(G8)[0]=q8[Dd[6]];Dd=TG[F8];local it=nil;do F8=F8+0x01;end;local rt=(JG[Dd[0X0005]]);local xt=rt[0X4];local jt=(0);local Et=(#xt);if not(Et>0)then else do it={};end;for rR=0X1,Et do local gR=xt[rR];if gR[1]==0X00000 then do(it)[rR-1]={G8,gR[0X2]};end;else it[rR-1]=cG[gR[0X2]];end;end;(H)(iG,it);end;do(G8)[0x1]=ed(q8,rt,it);end;do F8=F8+0X1;end;G8[jt](G8[jt+1]);o8=jt-0X1;F8=F8+1;F8=F8+0X0001;Dd=TG[F8];F8=F8+1;F8=Dd[0X00005];else local I2=Dd[5];local m2=Dd[0X2];do o8=m2+I2-0x1;end;repeat local FM,yM=iG,G8;do if#FM>0 then local wk=({});for Lt,Dt in l,FM do for kk,ek in l,Dt do if not(ek[0X1]==yM and ek[0x00002]>=0)then else local MC=ek[0X2];if not(not wk[MC])then else wk[MC]={yM[MC]};end;ek[1]=wk[MC];ek[0X2]=0x001;end;end;end;end;end;until true;return true,m2,I2;end;end;else if not(c2>=1)then local qx=(JG[Dd[5]]);local Hx=(qx[0X4]);local rx=#Hx;local Wx=(nil);do if rx>0x0 then Wx={};for z1=0x1,rx do local b1=(Hx[z1]);do if b1[1]~=0X0000 then Wx[z1-0X1]=cG[b1[0x2]];else(Wx)[z1-0X1]={G8,b1[2]};end;end;end;(H)(iG,Wx);end;end;G8[Dd[2]]=ed(q8,qx,Wx);else if c2==0X2 then if not(not(G8[Dd[5]]<G8[Dd[4]]))then else F8=Dd[0X2];end;else do G8[Dd[0X00002]]=Z8[Dd[5]];end;end;end;end;else do if c2<9 then if not(c2>=0X7)then local uy=cG[0];(G8)[0X1]=uy[1][uy[0X0002]];Dd=TG[F8];local Yy=(0x1);F8=F8+0x1;local wy=(G8[1]);G8[Yy+0X1]=wy;G8[Yy]=wy[Dd[0X00001]];F8=F8+1;Yy=0X1;G8[Yy]=G8[Yy](G8[Yy+1]);o8=Yy;do F8=F8+1;end;F8=F8+0X00001;Dd=TG[F8];F8=F8+0x01;if not(not G8[0X0001])then else F8=Dd[0x005];end;else if c2~=0X8 then F8=Dd[5];else do if not G8[Dd[0X2]]then F8=Dd[5];end;end;end;end;else do if not(c2>=10)then G8[Dd[0x00002]]=q8[Dd[6]];else do if c2==11 then G8[0X0]=q8[Dd[0X6]];F8=F8+1;o8=0;do(G8)[o8]=G8[o8]();end;F8=F8+0X1;F8=F8+1;Dd=TG[F8];F8=F8+0X1;if not(G8[0])then else F8=Dd[0x05];end;else(G8)[0]=q8[Dd[6]];Dd=TG[F8];do F8=F8+1;end;(G8)[0X0000]=G8[0X0][Dd[1]];F8=F8+0x1;F8=F8+1;Dd=TG[F8];F8=F8+1;do if not(not G8[0])then else do F8=Dd[0X00005];end;end;end;end;end;end;end;end;end;end;else if c2>=0X12 then do if c2<0X15 then do if c2>=0X013 then if c2==20 then G8[Dd[0X0002]]=G8[Dd[0x05]]/G8[Dd[4]];else G8[0X0]=q8[Dd[6]];F8=F8+0X1;F8=F8+0X1;Dd=TG[F8];F8=F8+0X0001;G8[0X0000]=G8[0][Dd[1]];Dd=TG[F8];F8=F8+0X00001;if not(not G8[0])then else F8=Dd[0X5];end;end;else do G8[Dd[2]]=G8[Dd[5]]<=G8[Dd[4]];end;end;end;else do if c2<0X17 then if c2~=22 then(G8)[0x00]=q8[Dd[0X0006]];do F8=F8+0x001;end;local rU=0;do F8=F8+0X00001;end;Dd=TG[F8];F8=F8+1;(G8)[1]=Dd[6];F8=F8+0X01;do(G8)[rU]=G8[rU](G8[rU+0X1]);end;do o8=rU;end;Dd=TG[F8];F8=F8+0x1;if not(not G8[0X0])then else F8=Dd[0X5];end;else(G8)[Dd[0X2]]=N(G8[Dd[0X00005]],G8[Dd[0x4]]);end;else do if c2==0X18 then do G8[0X0]=q8[Dd[6]];end;Dd=TG[F8];local tU=(0x000);F8=F8+1;(G8)[0X1]=Dd[0X0006];do F8=F8+1;end;(G8)[tU]=G8[tU](G8[tU+0x1]);o8=tU;F8=F8+0X001;do F8=F8+0X1;end;Dd=TG[F8];F8=F8+1;do if not G8[0]then F8=Dd[5];end;end;else G8[0]=q8[Dd[6]];F8=F8+1;o8=0X0;G8[o8]=G8[o8]();Dd=TG[F8];F8=F8+1;do if not(not(Dd[6]<=G8[0]))then else F8=Dd[0x2];end;end;end;end;end;end;end;end;else do if not(c2>=0x0F)then if not(c2>=0XD)then do if G8[Dd[0X002]]then F8=Dd[0X005];end;end;else if c2~=14 then G8[0]=q8[Dd[6]];local x2=(0X0);Dd=TG[F8];do F8=F8+1;end;do(G8)[0X1]=Dd[0X6];end;F8=F8+1;(G8)[x2]=G8[x2](G8[x2+1]);o8=x2;F8=F8+1;F8=F8+1;Dd=TG[F8];F8=F8+1;if not G8[0]then do F8=Dd[0x0005];end;end;else G8[Dd[2]]=Dd[6];end;end;else do if c2<0X10 then repeat local ej,Oj=iG,G8;if not(#ej>0X00)then else local QV=({});for XM,AM in l,ej do for wH,vH in l,AM do if vH[0X1]==Oj and vH[0X2]>=0 then local xX=(vH[0x002]);if not QV[xX]then QV[xX]={Oj[xX]};end;do(vH)[1]=QV[xX];end;vH[2]=0X1;end;end;end;end;until true;do return;end;else do if c2~=17 then G8[Dd[2]]={V({},1,Dd[0X5])};else do for jV=Dd[0X0002],Dd[0x5]do do G8[jV]=nil;end;end;end;end;end;end;end;end;end;end;end;end;end);do if x8 then do if j8 then if J8==1 then do return G8[p8]();end;else return G8[p8](V(G8,p8+0X0001,o8));end;elseif not(p8)then else return V(G8,p8,J8);end;end;else if C(j8)=='\s\116r\i\110\g'then if M(j8,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if M(j8,"^.-:%d+: ")then(E)("Luraph Script:"..(YG[F8-0X0001]or"(internal)").."\058\032"..x(j8),0X00000);else(E)(j8,0X00000);end;else E(j8,0X0);end;end;end;end;end;end;else do hG=function(...)local U3,B3=0X1,({});local f3=0X0000;local o3={[0X1]=FG,[0X0002]=B3};local a3=(I());local E3=(a3==a and SG or a3);local c3,Q3=Cd(...);do c3=c3-0x1;end;for UT=0x00,c3 do if not(IG>UT)then break;else B3[UT]=Q3[UT+0X001];end;end;if not OG then Q3=nil;elseif zG then(B3)[IG]={n=c3>=IG and c3-IG+0x00001 or 0,V(Q3,IG+1,c3+1)};end;if E3==a3 then else R(hG,E3);end;local j3,P3,p3,q3=A(function()while true do local Ru=(TG[U3]);local Uu=Ru[0X3];U3=U3+0X0001;if Uu<0X0C then if not(Uu>=0X0006)then do if Uu>=3 then do if Uu<0X4 then U3=Ru[0X00005];else if Uu~=0X05 then(B3)[Ru[2]]=B3[Ru[5]]/B3[Ru[0X4]];else(B3)[0X0000]=E3[Ru[0X6]];do U3=U3+0X1;end;f3=0;B3[f3]=B3[f3]();U3=U3+1;U3=U3+1;Ru=TG[U3];U3=U3+0X00001;if not(B3[0]<Ru[0X0001])then else U3=Ru[2];end;end;end;end;else do if Uu>=1 then if Uu==2 then repeat local uq,zq=iG,B3;if not(#uq>0X0)then else local tv=({});do for Ej,Lj in l,uq do for yv,hv in l,Lj do do if not(hv[1]==zq and hv[2]>=0)then else local q4=hv[0X2];if not(not tv[q4])then else tv[q4]={zq[q4]};end;hv[1]=tv[q4];hv[2]=1;end;end;end;end;end;end;until true;return;else B3[Ru[2]]=E3[Ru[6]];end;else local uS=B3[Ru[0X5]]/B3[Ru[0X4]];(B3)[Ru[0X2]]=uS-uS%0x1;end;end;end;end;else if not(Uu>=9)then if not(Uu>=0X7)then(B3)[0x00000]=E3[Ru[6]];U3=U3+0x0001;U3=U3+0X1;Ru=TG[U3];U3=U3+1;(B3)[0X0]=B3[0][Ru[0X1]];do Ru=TG[U3];end;do U3=U3+0X1;end;if not(not B3[0])then else U3=Ru[5];end;else if Uu~=8 then B3[Ru[0x2]]=Ru[0x6];else local i4,u4=cG[0x0000],0;B3[0x0]=i4[0X001][i4[2]];Ru=TG[U3];U3=U3+0X1;local d4=(B3[0]);(B3)[u4+0X0001]=d4;B3[u4]=d4[Ru[1]];do U3=U3+1;end;u4=0;B3[u4]=B3[u4](B3[u4+0X1]);f3=u4;Ru=TG[U3];U3=U3+0X00001;if not(not B3[0X000])then else do U3=Ru[0x0005];end;end;end;end;else if Uu>=0XA then do if Uu==11 then else B3[0X0]=E3[Ru[0X6]];Ru=TG[U3];U3=U3+0x1;B3[0x01]=Ru[0X00006];local Sz=0;do U3=U3+0X1;end;B3[Sz]=B3[Sz](B3[Sz+1]);f3=Sz;U3=U3+1;U3=U3+1;Ru=TG[U3];do U3=U3+0X1;end;if not(not B3[0])then else U3=Ru[5];end;end;end;else local XK=JG[Ru[0X5]];local PK,RK=XK[0X0004],(nil);local IK=(#PK);if not(IK>0x00000)then else RK={};do for jk=1,IK do local Xk=(PK[jk]);if Xk[0X1]~=0 then do(RK)[jk-1]=cG[Xk[0X2]];end;else RK[jk-0x1]={B3,Xk[0x2]};end;end;end;(H)(iG,RK);end;(B3)[Ru[0X2]]=ed(E3,XK,RK);end;end;end;else do if not(Uu<0X12)then do if Uu>=0X0015 then if not(Uu>=0x17)then do if Uu==22 then do(B3)[0x00000]=E3[Ru[6]];end;U3=U3+1;U3=U3+1;Ru=TG[U3];do U3=U3+0x01;end;B3[0X0]=B3[0][Ru[0x1]];Ru=TG[U3];U3=U3+1;if not B3[0X0]then U3=Ru[0X00005];end;else do(B3)[0x1]=E3[Ru[0X00006]];end;do U3=U3+0X0001;end;do U3=U3+1;end;Ru=TG[U3];U3=U3+0X1;if not(not B3[1])then else do U3=Ru[5];end;end;end;end;else if Uu==0X018 then do B3[0]=E3[Ru[6]];end;U3=U3+0X00001;do U3=U3+1;end;Ru=TG[U3];do U3=U3+1;end;do if not(B3[0])then else U3=Ru[5];end;end;else local db=(cG[0X0]);do(B3)[0X0]=db[1][db[2]];end;U3=U3+1;U3=U3+1;local Rb=0X0;Ru=TG[U3];U3=U3+0X1;local fb=B3[0];do B3[Rb+1]=fb;end;B3[Rb]=fb[Ru[0X00001]];U3=U3+1;do Rb=0X0000;end;B3[Rb](B3[Rb+0X1]);f3=Rb-0X1;do U3=U3+0X001;end;repeat local XK,zK=iG,B3;do if not(#XK>0)then else local Oa=({});for vO,SO in l,XK do for E9,Q9 in l,SO do do if not(Q9[0X01]==zK and Q9[0X002]>=0)then else local cZ=(Q9[2]);do if not(not Oa[cZ])then else Oa[cZ]={zK[cZ]};end;end;(Q9)[0x01]=Oa[cZ];Q9[0X2]=0X01;end;end;end;end;end;end;until true;return;end;end;else if not(Uu>=0x00013)then for cj=Ru[0X2],Ru[5]do(B3)[cj]=nil;end;else do if Uu==20 then if B3[Ru[0X5]]<=B3[Ru[4]]then U3=Ru[2];end;else(B3)[0X0000]=E3[Ru[6]];do Ru=TG[U3];end;U3=U3+1;B3[0x0]=B3[0][Ru[1]];do U3=U3+0X0001;end;U3=U3+0X1;do Ru=TG[U3];end;U3=U3+0X001;B3[1]=Ru[6];local jh=0X00000;U3=U3+0X1;(B3)[jh]=B3[jh](B3[jh+1]);f3=jh;U3=U3+1;U3=U3+1;do Ru=TG[U3];end;do U3=U3+0X001;end;if not(not B3[0X0000])then else do U3=Ru[0x5];end;end;end;end;end;end;end;else if Uu>=15 then if Uu>=0X10 then if Uu==0X11 then local L9=(Ru[0X4]);local p9,q9=Ru[2],Ru[0X5];if q9~=0 then f3=p9+q9-0X00001;end;local Z9,R9=nil,(nil);do if q9==1 then do Z9,R9=Cd(B3[p9]());end;else do Z9,R9=Cd(B3[p9](V(B3,p9+1,f3)));end;end;end;if L9==1 then do f3=p9-1;end;else if L9==0 then Z9=Z9+p9-0X1;f3=Z9;else Z9=p9+L9-0X00002;f3=Z9+0x0001;end;local Mh=0;for og=p9,Z9 do Mh=Mh+0X00001;(B3)[og]=R9[Mh];end;end;else local AM=Ru[0X2];local eM,jM=B3[AM]();if eM then U3=Ru[5];B3[AM+0X00003]=jM;end;end;else do B3[Ru[0X2]]=Ru[0X6];end;end;else if Uu>=13 then if Uu~=14 then B3[0]=E3[Ru[6]];U3=U3+1;local Va=0;do U3=U3+0X1;end;do Ru=TG[U3];end;U3=U3+0X01;local Ea=JG[Ru[0x5]];local ba=Ea[4];local La,na=#ba,nil;if La>0 then do na={};end;for XV=1,La do local pV=(ba[XV]);if pV[0X1]~=0 then(na)[XV-1]=cG[pV[0x2]];else(na)[XV-0X1]={B3,pV[0x02]};end;end;H(iG,na);end;(B3)[1]=ed(E3,Ea,na);U3=U3+0x1;B3[Va](B3[Va+0X0001]);f3=Va-0x001;Ru=TG[U3];U3=U3+0X1;B3[0X00000]=E3[Ru[6]];do U3=U3+0X00001;end;do U3=U3+1;end;Ru=TG[U3];U3=U3+0x001;(B3)[0X001]=Ru[0x06];U3=U3+0X1;Va=0;B3[Va]=B3[Va](B3[Va+1]);f3=Va;Ru=TG[U3];do U3=U3+0x1;end;if not B3[0]then U3=Ru[5];end;else B3[0]=E3[Ru[6]];U3=U3+0X00001;f3=0X000;B3[f3]=B3[f3]();Ru=TG[U3];U3=U3+0X1;if B3[0]then do U3=Ru[0x005];end;end;end;else do(B3)[Ru[0X0002]]={V({},0X1,Ru[5])};end;end;end;end;end;end;end;end);if not(j3)then if C(P3)=="string"then if M(P3,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(M(P3,"^.-:%d+: "))then(E)(P3,0X000);else(E)("Luraph Script:"..(YG[U3-0X001]or'\(i\110t\101\114\110\097\l\041')..": "..x(P3),0);end;else E(P3,0X0);end;else if P3 then if q3~=0X1 then return B3[p3](V(B3,p3+0X1,f3));else return B3[p3]();end;elseif p3 then return V(B3,p3,q3);end;end;end;end;end;end;else if lG>=0X4c then if lG==77 then hG=function(...)local wh=(1);local Qh={};local ph=(I());local nh=(ph==a and SG or ph);local Oh=0X0;local Yh=({[0X0002]=Qh,[0X1]=FG});local qh,Fh=Cd(...);qh=qh-1;do for sU=0X00000,qh do if not(IG>sU)then break;else(Qh)[sU]=Fh[sU+1];end;end;end;do if not OG then Fh=nil;elseif zG then(Qh)[IG]={n=qh>=IG and qh-IG+0X1 or 0x0,V(Fh,IG+1,qh+0X001)};end;end;if nh~=ph then R(hG,nh);end;local Dh,Ph,Ah,Rh=A(function()do while true do local Dn=TG[wh];local Rn=Dn[3];wh=wh+0x1;do if not(Rn>=0X1f)then if Rn<15 then do if not(Rn<7)then if Rn<11 then do if not(Rn>=9)then if Rn~=8 then Qh[Dn[0X2]]=nh[Dn[0X006]];else Qh[0X003]=nh[Dn[6]];Dn=TG[wh];local Eq=3;wh=wh+1;Qh[4]=Dn[6];wh=wh+0X00001;Qh[Eq](Qh[Eq+1]);do Oh=Eq-0x1;end;do Dn=TG[wh];end;wh=wh+1;wh=Dn[5];end;else do if Rn==10 then else if Qh[Dn[0x00005]]==Dn[1]then wh=Dn[0X2];end;end;end;end;end;else if Rn>=13 then do if Rn==14 then repeat local iY,EY=iG,(Qh);if not(#iY>0)then else local W3={};for YS,tS in l,iY do do for uF,DF in l,tS do if not(DF[1]==EY and DF[0X00002]>=0X0)then else local Yx=DF[2];do if not W3[Yx]then(W3)[Yx]={EY[Yx]};end;end;do DF[0x01]=W3[Yx];end;DF[0X2]=0X001;end;end;end;end;end;until true;local g5=(Dn[2]);return false,g5,g5+Dn[5]-2;else do if Qh[Dn[5]]==Qh[Dn[0x4]]then else wh=Dn[0X00002];end;end;end;end;else if Rn~=12 then do wh=Dn[0X0005];end;else(Qh)[0X2]=nh[Dn[0x06]];Dn=TG[wh];do wh=wh+1;end;Qh[3]=Dn[0X6];wh=wh+1;local mP=0X2;(Qh)[mP]=Qh[mP](Qh[mP+1]);do Oh=mP;end;do Dn=TG[wh];end;wh=wh+1;if Qh[2]then wh=Dn[5];end;end;end;end;else if Rn>=3 then if Rn>=5 then do if Rn~=0x6 then Qh[Dn[0X2]]=Dn[0X6];else Qh[3]=nh[Dn[0X6]];wh=wh+1;wh=wh+0x1;Dn=TG[wh];wh=wh+0X01;local fG=3;Qh[4]=Dn[6];wh=wh+0X1;Qh[fG](Qh[fG+1]);Oh=fG-1;Dn=TG[wh];wh=wh+1;wh=Dn[5];end;end;else if Rn~=0X4 then Qh[Dn[0X00002]]={V({},1,Dn[5])};else repeat local aB,XB=iG,(Qh);if not(#aB>0)then else local dl=({});for ef,Hf in l,aB do for bl,Ol in l,Hf do if Ol[1]==XB and Ol[0X0002]>=0X0 then local Lk=Ol[2];if not(not dl[Lk])then else dl[Lk]={XB[Lk]};end;do Ol[0x001]=dl[Lk];end;do Ol[0X2]=1;end;end;end;end;end;until true;return;end;end;else if Rn>=0X1 then if Rn~=2 then local tu,ku=Dn[2],(Dn[0X005]);Oh=tu+ku-1;repeat local Rx,Ox=iG,(Qh);do if#Rx>0x0 then local rR={};do for q4,f4 in l,Rx do for dZ,YZ in l,f4 do if YZ[1]==Ox and YZ[2]>=0X00000 then local is=(YZ[0X2]);if not rR[is]then do(rR)[is]={Ox[is]};end;end;YZ[0X1]=rR[is];do(YZ)[2]=0X001;end;end;end;end;end;end;end;until true;do return true,tu,ku;end;else do(Qh)[4]=nh[Dn[0x6]];end;wh=wh+1;wh=wh+1;Dn=TG[wh];wh=wh+1;Qh[4][Dn[0X6]]=Dn[0X1];Dn=TG[wh];wh=wh+1;(Qh)[4]=nh[Dn[0x6]];Dn=TG[wh];wh=wh+1;if not(not Qh[4])then else wh=Dn[0x5];end;end;else do(Qh)[Dn[2]]=Qh[Dn[0X005]]/Qh[Dn[0X4]];end;end;end;end;end;else if not(Rn>=23)then if Rn>=0x000013 then if Rn<0x15 then if Rn==0X14 then if not(not(Dn[6]<=Qh[Dn[4]]))then else wh=Dn[2];end;else(Qh)[0X5]=nh[Dn[6]];do Dn=TG[wh];end;do wh=wh+1;end;local bX=0X0005;(Qh)[6]=Dn[6];wh=wh+1;Qh[0X7]=true;wh=wh+0X001;(Qh)[bX]=Qh[bX](Qh[bX+0X1],Qh[bX+0x002]);Oh=bX;Dn=TG[wh];local EX=Qh[5];wh=wh+0X1;do bX=5;end;Qh[bX+0X1]=EX;do Qh[bX]=EX[Dn[1]];end;Dn=TG[wh];wh=wh+0X00001;do(Qh)[7]=Dn[6];end;wh=wh+1;bX=0x5;(Qh)[bX]=Qh[bX](Qh[bX+1],Qh[bX+0X02]);do Oh=bX;end;do wh=wh+1;end;wh=wh+0X01;Dn=TG[wh];wh=wh+0X1;do Qh[0x00005]=Qh[0X5][Dn[0X1]];end;do wh=wh+0X1;end;wh=wh+0X1;do Dn=TG[wh];end;wh=wh+0x1;wh=Dn[0X5];end;else if Rn~=22 then do(Qh)[0]=nh[Dn[6]];end;do wh=wh+0X1;end;wh=wh+1;Dn=TG[wh];wh=wh+0x1;Qh[0X00001]=Dn[0X6];do wh=wh+1;end;local Ec=(0);(Qh)[Ec]=Qh[Ec](Qh[Ec+0X1]);do Oh=Ec;end;Dn=TG[wh];wh=wh+1;if Qh[0X0]then wh=Dn[5];end;else Qh[3]=nh[Dn[6]];wh=wh+1;wh=wh+1;Dn=TG[wh];local cH=(0X3);do wh=wh+0X00001;end;do Qh[4]=Dn[6];end;wh=wh+0X001;Qh[cH]=Qh[cH](Qh[cH+1]);Oh=cH;wh=wh+0X1;wh=wh+0x1;do Dn=TG[wh];end;wh=wh+0X1;if not(not Qh[3])then else wh=Dn[5];end;end;end;else do if Rn>=0X11 then do if Rn==0X12 then do(Qh)[0X04]=nh[Dn[0x06]];end;wh=wh+1;wh=wh+0x1;Dn=TG[wh];wh=wh+1;(Qh)[0x4]=Qh[0X04][Dn[1]];do Dn=TG[wh];end;do wh=wh+0x1;end;do if not(not Qh[0X4])then else wh=Dn[0X5];end;end;else local j3=Dn[2];local a3=(Qh[j3]);local l3,X3=Qh[j3+1],(Qh[j3+0X2]);(Qh)[j3]=h(function()for mo=a3,l3,X3 do(t)(true,mo);end;end);wh=Dn[0X0005];end;end;else do if Rn~=16 then repeat local cQ,IQ,yQ=iG,Qh,Dn[0X2];if not(#cQ>0x0)then else local WZ={};for pV,DV in l,cQ do for B6,u6 in l,DV do do if u6[1]==IQ and u6[0x2]>=yQ then local pn=(u6[2]);do if not(not WZ[pn])then else WZ[pn]={IQ[pn]};end;end;(u6)[1]=WZ[pn];u6[2]=0X1;end;end;end;end;end;until true;else do Qh[2]=Qh[0X000];end;Dn=TG[wh];wh=wh+1;nh[Dn[0X6]]=Qh[0x2];do wh=wh+0X0001;end;Qh[2]=true;wh=wh+0X0001;do(Qh)[3]=nil;end;Dn=TG[wh];wh=wh+0X01;(Qh)[0X04]=nh[Dn[6]];Dn=TG[wh];wh=wh+1;Qh[4]=Qh[0x4][Dn[0X1]];wh=wh+1;wh=wh+0x1;Dn=TG[wh];do wh=wh+0X1;end;if Qh[4]then do wh=Dn[0X5];end;end;end;end;end;end;end;else do if Rn>=0X1B then do if Rn<0x1d then if Rn~=0X1C then(Qh)[0X00005]=nh[Dn[6]];do Dn=TG[wh];end;wh=wh+1;Qh[5]=Qh[5][Dn[1]];wh=wh+1;do wh=wh+1;end;Dn=TG[wh];wh=wh+0X1;if Qh[5]then wh=Dn[0X00005];end;else Qh[0X04]=nh[Dn[0X6]];wh=wh+0X1;wh=wh+0X1;wh=wh+1;Qh[5]=Qh[0X003];local IH=(4);wh=wh+1;Qh[IH]=Qh[IH](Qh[IH+0x1]);Oh=IH;wh=wh+1;do wh=wh+0x01;end;Dn=TG[wh];wh=wh+1;if Qh[0x4]~=Dn[1]then wh=Dn[0X00002];end;end;else do if Rn~=0X1E then do(Qh)[4]=false;end;Dn=TG[wh];wh=wh+1;do nh[Dn[0X006]]=Qh[0X004];end;do Dn=TG[wh];end;wh=wh+1;do Qh[0x4]=nh[Dn[0X0006]];end;do wh=wh+0X1;end;wh=wh+0X01;local pf=4;Dn=TG[wh];do wh=wh+1;end;(Qh)[0X05]=Dn[0X006];do wh=wh+0X001;end;(Qh)[pf]=Qh[pf](Qh[pf+1]);Oh=pf;Dn=TG[wh];wh=wh+1;if not Qh[0x0004]then wh=Dn[5];end;else for NS=Dn[0x2],Dn[5]do do(Qh)[NS]=nil;end;end;end;end;end;end;else if Rn>=0X019 then if Rn~=0X1A then Qh[0X002]=nh[Dn[0X6]];local Qb=(2);do wh=wh+1;end;wh=wh+1;Dn=TG[wh];wh=wh+0X0001;Qh[0X3]=Dn[0X0006];wh=wh+0X1;(Qh)[Qb]=Qh[Qb](Qh[Qb+0X001]);Oh=Qb;Dn=TG[wh];do wh=wh+1;end;if not(not Qh[0X2])then else wh=Dn[5];end;else Qh[0X002]=nh[Dn[6]];wh=wh+0X001;wh=wh+0X1;do Dn=TG[wh];end;do wh=wh+0X1;end;(Qh)[2]=Qh[2][Dn[1]];wh=wh+0x1;wh=wh+0X001;Dn=TG[wh];wh=wh+0X001;if not(Qh[2])then else wh=Dn[0X00005];end;end;else do if Rn==0X0018 then(Qh)[0X4]=nh[Dn[6]];wh=wh+0X0001;do wh=wh+1;end;Dn=TG[wh];do wh=wh+0X001;end;do(Qh)[4]=Qh[0X0004][Dn[0X1]];end;Dn=TG[wh];wh=wh+0x00001;(Qh)[0X4]=Qh[0X4][Dn[1]];wh=wh+1;wh=wh+0X0001;Dn=TG[wh];do wh=wh+0x1;end;Qh[4]=Qh[0X4][Dn[0X1]];do wh=wh+0x1;end;do wh=wh+0x01;end;Dn=TG[wh];wh=wh+0X0001;if not(not(Dn[0X6]<=Qh[4]))then else wh=Dn[2];end;else(Qh)[0X00002]=nh[Dn[6]];Dn=TG[wh];wh=wh+1;Qh[2]=Qh[2][Dn[1]];wh=wh+0X00001;wh=wh+1;Dn=TG[wh];do wh=wh+0x00001;end;do if not(not Qh[0x2])then else wh=Dn[5];end;end;end;end;end;end;end;end;end;else if not(Rn<0X2e)then do if Rn>=0X36 then if not(Rn>=58)then if not(Rn>=56)then do if Rn==0X37 then local KI=JG[Dn[5]];local JI,kI=KI[0X4],(nil);local ZI=(#JI);if ZI>0X0 then kI={};for Js=0X1,ZI do local As=JI[Js];do if As[1]~=0X0 then(kI)[Js-0X0001]=cG[As[2]];else(kI)[Js-0x1]={Qh,As[2]};end;end;end;(H)(iG,kI);end;do Qh[Dn[0x0002]]=ed(nh,KI,kI);end;else local OI=(cG[1]);Qh[3]=OI[1][OI[0X0002]];wh=wh+0X1;do wh=wh+1;end;Dn=TG[wh];do wh=wh+1;end;(Qh)[3]=Qh[0X00003][Dn[1]];wh=wh+0X00001;wh=wh+1;wh=wh+1;local aI=0X3;(Qh)[0X4]=Qh[2];wh=wh+0X00001;Qh[aI]=Qh[aI](Qh[aI+0X1]);Oh=aI;Dn=TG[wh];wh=wh+1;if not Qh[0X3]then wh=Dn[0X0005];end;end;end;else if Rn==0x0039 then Qh[0X2]=nh[Dn[0X6]];do Dn=TG[wh];end;wh=wh+1;(Qh[2])[Dn[6]]=Dn[1];Dn=TG[wh];wh=wh+0x00001;(Qh)[0x00002]=nh[Dn[0X6]];do wh=wh+0x001;end;do wh=wh+0x1;end;wh=wh+0X1;do Oh=2;end;(Qh[Oh])();do Oh=Oh-1;end;wh=wh+1;wh=wh+0X1;wh=wh+1;repeat local Q6,l6=iG,Qh;if#Q6>0X0000 then local KH={};for dX,HX in l,Q6 do for n8,X8 in l,HX do do if X8[1]==l6 and X8[2]>=0 then local WV=(X8[2]);if not KH[WV]then KH[WV]={l6[WV]};end;X8[0X1]=KH[WV];do X8[0X2]=1;end;end;end;end;end;end;until true;return;else local qN=cG[1];(Qh)[3]=qN[1][qN[0X00002]];Dn=TG[wh];wh=wh+0X1;Qh[3]=Qh[0X3][Dn[0X001]];wh=wh+0X001;Qh[0X00004]=Qh[0X2];wh=wh+1;do qN=cG[0x0];end;(Qh)[0X5]=qN[0X01][qN[0x02]];local cN=3;do wh=wh+0X0001;end;wh=wh+1;Dn=TG[wh];wh=wh+1;local eN=nil;local GN=(JG[Dn[5]]);local lN=(GN[0X4]);local jN=(#lN);do if not(jN>0x0)then else eN={};do for de=0x1,jN do local Be=(lN[de]);do if Be[1]~=0x000 then eN[de-0x1]=cG[Be[2]];else(eN)[de-1]={Qh,Be[0x002]};end;end;end;end;H(iG,eN);end;end;Qh[0X00006]=ed(nh,GN,eN);wh=wh+0X1;Oh=cN+0x4-1;Qh[cN](V(Qh,cN+1,Oh));Oh=cN-0X01;Dn=TG[wh];wh=wh+1;do wh=Dn[0x5];end;end;end;else do if Rn<60 then if Rn==0x3B then(Qh)[Dn[0X00002]]=Qh[Dn[5]]^Qh[Dn[0X04]];else Qh[4]=nh[Dn[0X6]];Dn=TG[wh];do wh=wh+0x1;end;(Qh)[4]=Qh[0X00004][Dn[1]];wh=wh+0X001;wh=wh+1;Dn=TG[wh];wh=wh+0X1;if not Qh[0X0004]then wh=Dn[5];end;end;else if Rn==61 then Qh[Dn[2]]=T(Qh[Dn[5]],Qh[Dn[0X0004]]);else do Qh[Dn[0X002]]=Qh[Dn[0X5]]*Qh[Dn[0x0004]];end;end;end;end;end;else do if not(Rn<50)then if Rn>=0X000034 then if Rn~=0X00035 then do if not(Qh[Dn[0X0002]])then else wh=Dn[0X0005];end;end;else(Qh)[0X4]=nh[Dn[0X00006]];Dn=TG[wh];wh=wh+0X0001;Qh[4]=Qh[0X4][Dn[0X1]];Dn=TG[wh];wh=wh+0X001;do if not(not Qh[0X00004])then else wh=Dn[0X5];end;end;end;else if Rn==51 then(Qh)[4]=nh[Dn[6]];wh=wh+0X00001;wh=wh+1;local eg=(4);Dn=TG[wh];wh=wh+0X1;(Qh)[0X5]=nh[Dn[0X6]];wh=wh+0x1;wh=wh+1;Dn=TG[wh];wh=wh+1;Qh[0X6]=Dn[0X6];wh=wh+1;local Og=(0X3);local ug=0X3;if Og==0 then else Oh=eg+Og-1;end;local Lg,pg=nil,nil;if Og==1 then Lg,pg=Cd(Qh[eg]());else do Lg,pg=Cd(Qh[eg](V(Qh,eg+1,Oh)));end;end;if ug~=0x1 then do if ug~=0x000 then Lg=eg+ug-0x00002;Oh=Lg+1;else Lg=Lg+eg-0X01;Oh=Lg;end;end;local x2=0x0;for la=eg,Lg do do x2=x2+0x1;end;Qh[la]=pg[x2];end;else Oh=eg-1;end;do wh=wh+1;end;Qh[0X3]=Qh[5];wh=wh+0X1;Qh[0X0002]=Qh[4];Dn=TG[wh];wh=wh+0x1;wh=Dn[0X0005];else do Qh[1]=nh[Dn[0X06]];end;local J7=(1);Dn=TG[wh];do wh=wh+1;end;Qh[2]=Dn[6];wh=wh+1;(Qh)[0X3]=true;wh=wh+0X1;do Qh[J7]=Qh[J7](Qh[J7+0X1],Qh[J7+2]);end;Oh=J7;Dn=TG[wh];wh=wh+0X0001;if Qh[1]~=Dn[0x0001]then else do wh=Dn[0X2];end;end;end;end;else do if not(Rn>=48)then if Rn==47 then do Qh[0X00004]=nh[Dn[6]];end;Dn=TG[wh];wh=wh+1;do Qh[4]=Qh[0X00004][Dn[1]];end;wh=wh+0X1;wh=wh+1;do wh=wh+1;end;(Qh)[3]=Qh[4];Dn=TG[wh];wh=wh+0X1;wh=Dn[0X5];else if Qh[Dn[0X5]]==Dn[1]then else wh=Dn[2];end;end;else if Rn~=49 then Qh[0x2]=nh[Dn[0x6]];Dn=TG[wh];wh=wh+0X1;Qh[0X2]=Qh[2][Dn[1]];do Dn=TG[wh];end;do wh=wh+1;end;if Qh[2]then wh=Dn[0X05];end;else if not Qh[Dn[0x002]]then wh=Dn[5];end;end;end;end;end;end;end;end;else if not(Rn>=38)then if not(Rn>=34)then if Rn>=32 then if Rn==0X21 then Qh[0x3]=nh[Dn[6]];wh=wh+0x1;wh=wh+1;Dn=TG[wh];wh=wh+1;do(Qh)[3]=Qh[3][Dn[1]];end;do Dn=TG[wh];end;wh=wh+0X00001;(Qh)[3]=Qh[3][Dn[1]];Dn=TG[wh];wh=wh+0x1;if not(Dn[6]<Qh[3])then do wh=Dn[0x2];end;end;else local Qb=(cG[0X0]);local sb=(0X2);(Qh)[0X0002]=Qb[0X1][Qb[2]];do Dn=TG[wh];end;wh=wh+1;local kb=(Qh[2]);(Qh)[sb+1]=kb;Qh[sb]=kb[Dn[1]];wh=wh+1;sb=2;do Qh[sb]=Qh[sb](Qh[sb+1]);end;Oh=sb;wh=wh+0X1;wh=wh+0x1;Dn=TG[wh];wh=wh+0X1;if not Qh[2]then wh=Dn[0X00005];end;end;else Qh[4]=nh[Dn[0x6]];wh=wh+1;wh=wh+0X1;Dn=TG[wh];wh=wh+0X0001;local qj=4;Qh[5]=Dn[0X6];wh=wh+0x0001;do Qh[6]=true;end;wh=wh+0x1;Qh[qj]=Qh[qj](Qh[qj+0x01],Qh[qj+0X02]);Oh=qj;wh=wh+1;wh=wh+1;Dn=TG[wh];wh=wh+0X1;if not(Qh[0X4])then else do wh=Dn[0X5];end;end;end;else do if not(Rn<36)then do if Rn~=37 then Qh[0X3]=nh[Dn[6]];wh=wh+0X001;wh=wh+1;do Dn=TG[wh];end;wh=wh+0X1;do(Qh)[0X3]=Qh[0x00003][Dn[1]];end;Dn=TG[wh];do wh=wh+0X1;end;if not(not Qh[0x00003])then else wh=Dn[5];end;else Qh[Dn[0x2]]=#Qh[Dn[5]];end;end;else if Rn~=0X23 then Qh[0X0004]=nh[Dn[0X06]];wh=wh+0X001;wh=wh+0X1;Dn=TG[wh];wh=wh+1;do(Qh[4])[Dn[0X6]]=Dn[1];end;Dn=TG[wh];do wh=wh+1;end;Qh[4]=nh[Dn[6]];do wh=wh+0X01;end;local Jb=(4);Oh=0X4;(Qh[Oh])();Oh=Oh-1;Dn=TG[wh];wh=wh+0X01;Qh[4]=nh[Dn[0X06]];wh=wh+0x1;wh=wh+0X1;Dn=TG[wh];do wh=wh+0X001;end;(Qh)[5]=nh[Dn[0X6]];do wh=wh+0X01;end;Qh[Jb](Qh[Jb+0x1]);Oh=Jb-1;wh=wh+1;wh=wh+1;do Dn=TG[wh];end;wh=wh+0X1;wh=Dn[0X5];else Qh[5]=nh[Dn[6]];wh=wh+1;wh=wh+0X0001;do wh=wh+1;end;Oh=0x05;Qh[Oh]=Qh[Oh]();wh=wh+0x0001;wh=wh+0X1;Dn=TG[wh];do wh=wh+0X1;end;do if not(Qh[5])then else wh=Dn[0X005];end;end;end;end;end;end;else if not(Rn>=0X00002a)then if not(Rn<40)then if Rn==0X000029 then do(Qh)[4]=true;end;Dn=TG[wh];wh=wh+1;nh[Dn[0X0006]]=Qh[0X4];Dn=TG[wh];wh=wh+1;wh=Dn[0X05];else Qh[3]=true;Dn=TG[wh];do wh=wh+1;end;(nh)[Dn[0X6]]=Qh[0X3];do Dn=TG[wh];end;wh=wh+0X1;wh=Dn[0X5];end;else do if Rn==0x27 then Qh[0X0001]=nh[Dn[6]];do wh=wh+1;end;do wh=wh+1;end;Dn=TG[wh];wh=wh+1;do if not(Qh[0X1])then else wh=Dn[0X00005];end;end;else Qh[4]=nh[Dn[0x00006]];do wh=wh+0X1;end;wh=wh+0x1;Dn=TG[wh];do wh=wh+1;end;(Qh[4])[Dn[6]]=Dn[0x1];do Dn=TG[wh];end;wh=wh+0x1;wh=Dn[0X0005];end;end;end;else if not(Rn<44)then if Rn==45 then(Qh)[2]=nh[Dn[6]];Dn=TG[wh];wh=wh+1;(Qh)[0x2]=Qh[0x02][Dn[1]];Dn=TG[wh];do wh=wh+0X1;end;if Qh[0x0002]then wh=Dn[5];end;else do Qh[0X0002]=nh[Dn[6]];end;do Dn=TG[wh];end;wh=wh+0X1;(Qh)[0x02]=Qh[0X2][Dn[1]];do Dn=TG[wh];end;wh=wh+0x1;if not(not Qh[2])then else wh=Dn[0X5];end;end;else do if Rn~=0X002b then Qh[2]=nh[Dn[6]];Dn=TG[wh];do wh=wh+1;end;Qh[0X0002]=Qh[0X2][Dn[1]];wh=wh+0x1;wh=wh+0X1;Dn=TG[wh];do wh=wh+0X01;end;if not Qh[2]then wh=Dn[0X05];end;else do if not(Dn[6]<Qh[Dn[0X4]])then wh=Dn[0X2];end;end;end;end;end;end;end;end;end;end;end;end;end);if Dh then do if Ph then if Rh~=1 then return Qh[Ah](V(Qh,Ah+0x1,Oh));else return Qh[Ah]();end;elseif Ah then do return V(Qh,Ah,Rh);end;end;end;else if C(Ph)~='\s\116rin\g'then(E)(Ph,0x0000);else do if not(M(Ph,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;do if M(Ph,"^.-:%d+: ")then E("\Lu\114\097p\h\ \083\cr\105\112t\:"..(YG[wh-1]or"\040\in\116\e\114n\097l\)")..": "..x(Ph),0);else(E)(Ph,0X0);end;end;end;end;end;else do hG=function(...)local ER=({});local kR=(1);local nR=I();local yR={[0X1]=FG,[0X0002]=ER};local fR,FR=Cd(...);fR=fR-0x001;for TU=0X0,fR do do if not(IG>TU)then break;else(ER)[TU]=FR[TU+1];end;end;end;local CR=(0X00);local MR=((nR==a and SG or nR));if not OG then FR=nil;elseif not(zG)then else do(ER)[IG]={n=fR>=IG and fR-IG+1 or 0x0,V(FR,IG+0x01,fR+1)};end;end;if MR==nR then else(R)(hG,MR);end;local mR,rR,JR,pR=A(function()do while true do local Zy=TG[kR];local ky=(Zy[3]);kR=kR+0X0001;if ky>=11 then if ky<0x000011 then if not(ky>=14)then if ky<0X0c then ER[5]=MR[Zy[6]];Zy=TG[kR];do kR=kR+0X1;end;ER[5]=ER[0x5][Zy[0x00001]];do kR=kR+1;end;kR=kR+1;else if ky==13 then do ER[5]=MR[Zy[0x6]];end;kR=kR+0X1;kR=kR+1;do Zy=TG[kR];end;kR=kR+0X1;ER[0x6]=MR[Zy[0x06]];Zy=TG[kR];do kR=kR+1;end;do ER[6]=ER[6][Zy[1]];end;Zy=TG[kR];do kR=kR+1;end;do ER[5][Zy[0X06]]=ER[0X6];end;Zy=TG[kR];do kR=kR+0X0001;end;ER[5]=MR[Zy[6]];kR=kR+0X01;kR=kR+0x1;Zy=TG[kR];kR=kR+0X1;ER[5]=ER[5][Zy[0X1]];kR=kR+1;kR=kR+0X1;kR=kR+0X00001;local Yt=0x5;(ER)[6]=ER[0];kR=kR+0X00001;ER[7]=ER[0x1];kR=kR+0X1;(ER)[0X8]=ER[0x002];Zy=TG[kR];kR=kR+0X00001;do ER[9]=Zy[6];end;do kR=kR+0X1;end;do(ER)[10]=ER[4];end;kR=kR+1;local st=0x6;CR=Yt+st-0X001;repeat local gg,tg=iG,(ER);if not(#gg>0)then else local xB=({});do for Pp,qp in l,gg do do for F6,o6 in l,qp do do if not(o6[1]==tg and o6[2]>=0)then else local x9=o6[2];if not(not xB[x9])then else do(xB)[x9]={tg[x9]};end;end;do(o6)[1]=xB[x9];end;(o6)[0X2]=0X00001;end;end;end;end;end;end;end;until true;return true,Yt,st;else do ER[6]=MR[Zy[6]];end;do kR=kR+1;end;do(ER)[0x00006]=#ER[6];end;Zy=TG[kR];kR=kR+1;if not(Zy[6]<ER[0x6])then kR=Zy[2];end;end;end;else if not(ky>=15)then local m8=(Zy[0X00005]);local U8=ER[m8];for W5=m8+0X00001,Zy[0X4]do U8=U8..ER[W5];end;do ER[Zy[2]]=U8;end;else do if ky==0X10 then repeat local Kz,xz=iG,(ER);if not(#Kz>0x0)then else local bN={};for yK,cK in l,Kz do do for Tj,sj in l,cK do do if not(sj[0X1]==xz and sj[0X2]>=0X0)then else local b0=sj[0X2];if not(not bN[b0])then else bN[b0]={xz[b0]};end;sj[1]=bN[b0];sj[0X2]=1;end;end;end;end;end;end;until true;return false,Zy[2],CR;else(ER)[Zy[2]]=ER[Zy[0X0005]]^ER[Zy[4]];end;end;end;end;else if not(ky<20)then if not(ky<0X15)then do if ky~=22 then do ER[6]=MR[Zy[6]];end;kR=kR+0X1;kR=kR+1;Zy=TG[kR];local o4=nil;kR=kR+1;local G4=JG[Zy[0X5]];local l4=0X06;local I4=(G4[4]);local O4=(#I4);if O4>0 then o4={};for iN=0x001,O4 do local yN=I4[iN];if yN[0X01]~=0 then o4[iN-0X1]=cG[yN[2]];else(o4)[iN-0X0001]={ER,yN[0X2]};end;end;(H)(iG,o4);end;do ER[7]=ed(MR,G4,o4);end;Zy=TG[kR];kR=kR+0x1;ER[6][Zy[0X6]]=ER[0X7];Zy=TG[kR];kR=kR+0X00001;local V4=(ER[0X0]);ER[l4+0x1]=V4;do ER[l4]=V4[Zy[1]];end;Zy=TG[kR];kR=kR+0X01;(ER)[8]=Zy[6];Zy=TG[kR];kR=kR+0X1;ER[0x9]=Zy[6];do Zy=TG[kR];end;do kR=kR+0X00001;end;(ER)[0XA]=Zy[0X006];kR=kR+1;l4=0X6;CR=l4+5-0X1;ER[l4](V(ER,l4+0X1,CR));CR=l4-1;kR=kR+0X01;kR=kR+0X0001;kR=kR+0X00001;ER[6]=ER[4];Zy=TG[kR];do kR=kR+1;end;do ER[0x7]=MR[Zy[6]];end;kR=kR+0X1;l4=6;(ER[l4])(ER[l4+0X001]);do CR=l4-0X1;end;kR=kR+1;kR=kR+0X1;Zy=TG[kR];kR=kR+0X1;do(ER)[0x00006]=MR[Zy[0X6]];end;kR=kR+1;kR=kR+0X00001;Zy=TG[kR];kR=kR+0X1;(ER)[0X7]=ER[0][Zy[0x1]];do Zy=TG[kR];end;do kR=kR+1;end;ER[0X07]=ER[7]*Zy[1];kR=kR+0X001;do l4=6;end;ER[l4](ER[l4+0X1]);CR=l4-1;kR=kR+0X1;kR=kR+1;Zy=TG[kR];kR=kR+1;l4=0x6;V4=ER[0];do ER[l4+0X00001]=V4;end;do(ER)[l4]=V4[Zy[0X1]];end;kR=kR+1;l4=0X6;(ER[l4])(ER[l4+1]);do CR=l4-0X1;end;kR=kR+1;kR=kR+0X1;Zy=TG[kR];kR=kR+1;kR=Zy[5];else(ER)[5]=MR[Zy[0X6]];do kR=kR+1;end;kR=kR+1;Zy=TG[kR];kR=kR+0X1;if ER[0X5]then do kR=Zy[5];end;end;end;end;else ER[5]=MR[Zy[6]];kR=kR+1;kR=kR+0x1;Zy=TG[kR];kR=kR+1;ER[0X5]=ER[0x5][Zy[1]];kR=kR+0X01;kR=kR+1;Zy=TG[kR];kR=kR+1;do if not(ER[5])then else do kR=Zy[0X0005];end;end;end;end;else if ky>=0X12 then if ky==19 then do ER[0X6]=MR[Zy[6]];end;kR=kR+1;do kR=kR+0X01;end;do Zy=TG[kR];end;do kR=kR+0X1;end;if not(not ER[0X6])then else kR=Zy[0x5];end;else end;else(ER)[Zy[0x2]]={V({},0X1,Zy[5])};end;end;end;else if ky>=0x05 then do if not(ky>=0X08)then if ky<0X06 then do ER[Zy[0X2]]=ER[Zy[0X00005]][ER[Zy[0x4]]];end;else if ky~=7 then if ER[Zy[2]]then kR=Zy[5];end;else for cc=Zy[0x2],Zy[0X5]do do(ER)[cc]=nil;end;end;end;end;else if ky<9 then local uE=Zy[0x2];local RE=(Zy[4]-0X0001)*0x32;local iE=ER[uE];for Qx=1,Zy[5]do iE[RE+Qx]=ER[uE+Qx];end;else if ky~=0X000A then do(ER)[Zy[2]]=w(ER[Zy[0X5]],ER[Zy[0X4]]);end;else repeat local bv,Lv=iG,(ER);if not(#bv>0)then else local fI={};for z8,m8 in l,bv do for ey,hy in l,m8 do do if not(hy[1]==Lv and hy[2]>=0)then else local CG=hy[0x2];do if not(not fI[CG])then else(fI)[CG]={Lv[CG]};end;end;(hy)[0X1]=fI[CG];(hy)[0x2]=1;end;end;end;end;end;until true;do return;end;end;end;end;end;else do if ky>=0X02 then do if not(ky>=0X3)then do(ER)[5]=MR[Zy[6]];end;do Zy=TG[kR];end;kR=kR+0x001;ER[0x5]=ER[5][Zy[1]];kR=kR+1;kR=kR+0X1;Zy=TG[kR];kR=kR+0x1;if not(not ER[0X5])then else kR=Zy[0X5];end;else if ky==0X4 then(ER)[Zy[2]]=Zy[6];else local yu=JG[Zy[5]];local Qu,bu=yu[0x00004],(nil);local Pu=(#Qu);if not(Pu>0)then else bu={};for Os=0X1,Pu do local Es=Qu[Os];if Es[0x1]~=0X0 then bu[Os-0X1]=cG[Es[2]];else(bu)[Os-1]={ER,Es[0X0002]};end;end;(H)(iG,bu);end;ER[Zy[0X02]]=ed(MR,yu,bu);end;end;end;else if ky~=1 then ER[Zy[0X002]]=MR[Zy[6]];else kR=Zy[5];end;end;end;end;end;end;end;end);if not(mR)then if C(rR)=="string"then if not(M(rR,"\097tt\em\p\116\ \116\o\032\y\105el\d \097\cr\111\s\115\ me\116amethod\047C%-c\097\108\108\ \098\ou\110da\114\y"))then else return coroutine.yield();end;if not(M(rR,"^\.\-\058\%\d+\:\ "))then(E)(rR,0X00000);else(E)("Luraph Script:"..(YG[kR-1]or"\(\i\110t\erna\l\)")..": "..x(rR),0X0);end;else(E)(rR,0X0);end;else do if rR then if pR~=1 then return ER[JR](V(ER,JR+1,CR));else do return ER[JR]();end;end;elseif not(JR)then else return V(ER,JR,pR);end;end;end;end;end;end;else do if lG~=0x4b then do hG=function(...)local xn=0X0001;local ln=({});local kn=I();local On,qn={[0X1]=FG,[0X0002]=ln},(0);local Mn=(kn==a and SG or kn);local En,In=Cd(...);En=En-0X1;for Dz=0x000,En do do if IG>Dz then ln[Dz]=In[Dz+0X00001];else break;end;end;end;if not OG then In=nil;elseif not(zG)then else(ln)[IG]={n=En>=IG and En-IG+0X1 or 0,V(In,IG+1,En+1)};end;if Mn~=kn then R(hG,Mn);end;local zn,Un,Rn,mn=A(function()do while true do local lD=TG[xn];local AD=lD[3];xn=xn+1;if AD<6 then do if AD<3 then if not(AD>=1)then local IB=JG[lD[0X0005]];local pB=nil;local HB=(IB[0X004]);local tB=(#HB);do if not(tB>0X0)then else pB={};for jh=1,tB do local oh=(HB[jh]);if oh[1]==0X0 then do(pB)[jh-0X1]={ln,oh[2]};end;else(pB)[jh-0x001]=cG[oh[2]];end;end;(H)(iG,pB);end;end;ln[lD[2]]=ed(Mn,IB,pB);else if AD~=2 then ln[lD[2]]=lD[0X6];else(ln)[lD[2]]={V({},1,lD[0X5])};end;end;else do if AD<0X4 then ln[lD[0X02]]=ln[lD[0x0005]]^ln[lD[0x4]];else if AD~=5 then(ln)[lD[2]]=Mn[lD[6]];else if not(ln[lD[0X0005]]<ln[lD[4]])then else xn=lD[0X2];end;end;end;end;end;end;else if AD<9 then if AD<7 then else if AD~=8 then(ln)[lD[2]]=N(ln[lD[0X5]],ln[lD[0x04]]);else ln[lD[0X2]]=lD[0X6];end;end;else if not(AD>=10)then(ln)[0]=Mn[lD[0X6]];do xn=xn+1;end;xn=xn+1;lD=TG[xn];xn=xn+0X001;(ln)[0]=ln[0][lD[0X1]];lD=TG[xn];local zY=(JG[lD[0x5]]);local ZY=0X0000;xn=xn+1;local IY,RY=nil,(zY[4]);local DY=#RY;if DY>0x0 then IY={};for D4=0X1,DY do local e4=(RY[D4]);do if e4[0X1]==0x00000 then IY[D4-1]={ln,e4[2]};else(IY)[D4-1]=cG[e4[2]];end;end;end;H(iG,IY);end;(ln)[0X1]=ed(Mn,zY,IY);do xn=xn+1;end;ln[ZY](ln[ZY+1]);qn=ZY-0X1;xn=xn+0X00001;repeat local mH,fH=iG,(ln);do if#mH>0 then local bC=({});do for kJ,SJ in l,mH do for g_,F_ in l,SJ do do if not(F_[1]==fH and F_[0X02]>=0X0)then else local Eb=F_[0X002];if not bC[Eb]then(bC)[Eb]={fH[Eb]};end;(F_)[0X001]=bC[Eb];(F_)[0X0002]=0X00001;end;end;end;end;end;end;end;until true;return;else if AD==0XB then ln[lD[2]]=w(ln[lD[5]],ln[lD[4]]);else do xn=lD[5];end;end;end;end;end;end;end;end);if not(zn)then if C(Un)=="st\114\105\110\g"then if M(Un,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(M(Un,'\094\.\-\058%\100\+:\ '))then E(Un,0X0);else E('\076\117ra\112\104\ \S\c\114\i\pt\058'..(YG[xn-0X0001]or"(internal)")..": "..x(Un),0X00);end;else(E)(Un,0X0);end;else if Un then if mn~=1 then return ln[Rn](V(ln,Rn+0x01,qn));else return ln[Rn]();end;elseif Rn then do return V(ln,Rn,mn);end;end;end;end;end;else do hG=function(...)local Ul=1;local Yl={};local dl,tl={[0X1]=FG,[0X0002]=Yl},0x0;local ul=(I());local ol,sl=Cd(...);ol=ol-1;for IY=0,ol do if IG>IY then(Yl)[IY]=sl[IY+0X00001];else break;end;end;local pl=((ul==a and SG or ul));if not OG then sl=nil;elseif zG then Yl[IG]={n=ol>=IG and ol-IG+0X1 or 0,V(sl,IG+1,ol+0X1)};end;do if pl==ul then else(R)(hG,pl);end;end;local gl,Jl,Xl,Pl=A(function()while true do local mj=(TG[Ul]);local Qj=mj[3];Ul=Ul+1;do if not(Qj>=8)then if Qj<0X4 then if Qj<2 then if Qj==0X1 then local h3=mj[0X00002];local e3=Yl[h3];local N3,U3=Yl[h3+1],Yl[h3+0X0002];Yl[h3]=h(function()for k9=e3,N3,U3 do(t)(true,k9);end;end);Ul=mj[5];else do(Yl)[mj[2]]=f(Yl[mj[0X5]]);end;end;else if Qj==0X3 then local oU=(cG[0]);Yl[0]=oU[1][oU[2]];local CU=0x0;Ul=Ul+1;do(Yl)[0]=not Yl[0];end;do Ul=Ul+0x1;end;repeat local aj,sj=iG,Yl;do if not(#aj>0x0)then else local PE=({});for Yh,Dh in l,aj do do for m8,v8 in l,Dh do do if v8[1]==sj and v8[2]>=0x0 then local Kz=(v8[2]);if not(not PE[Kz])then else(PE)[Kz]={sj[Kz]};end;v8[1]=PE[Kz];do(v8)[0x02]=0x1;end;end;end;end;end;end;end;end;until true;return false,CU,CU;else Yl[mj[2]]=mj[0X00006];end;end;else if Qj<6 then do if Qj~=5 then repeat local gD,AD=iG,(Yl);do if#gD>0 then local CY={};for rJ,pJ in l,gD do do for Ae,We in l,pJ do do if We[0X1]==AD and We[0X2]>=0 then local vR=(We[2]);do if not(not CY[vR])then else(CY)[vR]={AD[vR]};end;end;We[0X1]=CY[vR];We[2]=0X0001;end;end;end;end;end;end;end;until true;return;else local Sa=(mj[0X5]);local Ba=(mj[2]);do tl=Ba+Sa-0X1;end;do repeat local Es,ds=iG,(Yl);if#Es>0 then local VY={};do for h0,a0 in l,Es do for wA,OA in l,a0 do do if OA[0X0001]==ds and OA[0X2]>=0X0 then local Yj=OA[2];if not VY[Yj]then do(VY)[Yj]={ds[Yj]};end;end;(OA)[0x1]=VY[Yj];(OA)[0X2]=0X1;end;end;end;end;end;end;until true;end;return true,Ba,Sa;end;end;else if Qj==0X7 then do(Yl)[mj[0x002]]={V({},0x1,mj[0x0005])};end;else end;end;end;else if not(Qj<0X0C)then if Qj<14 then if Qj~=13 then if not(Yl[mj[0x2]])then else Ul=mj[0X5];end;else do Ul=mj[5];end;end;else if not(Qj<15)then if Qj~=0X010 then Yl[mj[2]]=mj[0x6];else if not(Yl[mj[5]]<Yl[mj[0X4]])then Ul=mj[2];end;end;else local EV=JG[mj[0x00005]];local ZV=(nil);local IV=(EV[4]);local lV=(#IV);do if not(lV>0)then else ZV={};for v1=1,lV do local J1=(IV[v1]);do if J1[0X0001]==0 then(ZV)[v1-0X1]={Yl,J1[2]};else ZV[v1-1]=cG[J1[0X0002]];end;end;end;(H)(iG,ZV);end;end;Yl[mj[0X2]]=ed(pl,EV,ZV);end;end;else if not(Qj<0XA)then if Qj~=11 then local jW=(mj[5]);local XW=(mj[2]);local hW=mj[0X04];do if jW~=0 then tl=XW+jW-1;end;end;local KW,mW=nil,nil;if jW~=1 then do KW,mW=Cd(Yl[XW](V(Yl,XW+0X001,tl)));end;else KW,mW=Cd(Yl[XW]());end;if hW~=1 then if hW==0X00 then KW=KW+XW-1;do tl=KW;end;else do KW=XW+hW-0X2;end;tl=KW+0X1;end;local xb=0;for vX=XW,KW do do xb=xb+0X1;end;Yl[vX]=mW[xb];end;else do tl=XW-0X1;end;end;else repeat local X7,W7=iG,Yl;if#X7>0 then local oj=({});for L6,E6 in l,X7 do for eh,wh in l,E6 do do if wh[1]==W7 and wh[0x2]>=0 then local g2=(wh[0X2]);if not oj[g2]then do(oj)[g2]={W7[g2]};end;end;(wh)[1]=oj[g2];wh[0X2]=1;end;end;end;end;end;until true;local xR=(mj[0X2]);return false,xR,xR+mj[5]-0X2;end;else do if Qj==9 then(Yl)[mj[0X2]]=pl[mj[6]];else(Yl)[mj[0X0002]]=N(Yl[mj[0X5]],Yl[mj[4]]);end;end;end;end;end;end;end;end);if gl then if Jl then if Pl~=0X1 then do return Yl[Xl](V(Yl,Xl+1,tl));end;else return Yl[Xl]();end;elseif not(Xl)then else return V(Yl,Xl,Pl);end;else if C(Jl)~="string"then(E)(Jl,0);else do if not(M(Jl,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if M(Jl,"\094\.\-:\037\100+\:\032")then E('\L\117rap\h\032Scr\i\pt\058'..(YG[Ul-0X1]or'\(\i\110\116\e\114\110\097l)')..'\:\ '..x(Jl),0X0);else E(Jl,0x0);end;end;end;end;end;end;end;end;end;else if lG>=0X57 then if lG>=89 then if lG>=0X5A then if lG~=91 then hG=function(...)local bN=(1);local ZN={};local TN={[0X0002]=ZN,[0X1]=FG};local UN=I();local kN,PN=Cd(...);local tN=(UN==a and SG or UN);do kN=kN-1;end;for Px=0,kN do do if not(IG>Px)then break;else do(ZN)[Px]=PN[Px+1];end;end;end;end;if not OG then do PN=nil;end;elseif not(zG)then else ZN[IG]={n=kN>=IG and kN-IG+0X0001 or 0X0,V(PN,IG+0X1,kN+1)};end;local EN=0X00000;if tN==UN then else(R)(hG,tN);end;local vN,mN,wN,LN=A(function()do while true do local GN=(TG[bN]);local BN=GN[3];do bN=bN+1;end;if not(BN>=18)then if not(BN<0X00009)then if BN<13 then do if BN<0XB then if BN==0X000A then do if not(ZN[GN[2]])then else bN=GN[5];end;end;else if not(not(ZN[GN[5]]<ZN[GN[0X4]]))then else bN=GN[2];end;end;else if BN~=12 then do(ZN)[0X000d]=ZN[0X3]+GN[1];end;bN=bN+1;ZN[0X03]=ZN[13];GN=TG[bN];do bN=bN+0X01;end;bN=GN[5];else(ZN)[3]=GN[6];GN=TG[bN];bN=bN+0X1;do ZN[0X4]=GN[0X6];end;bN=bN+1;(ZN)[5]=ZN[2];GN=TG[bN];bN=bN+1;do if ZN[5]then bN=GN[0X5];end;end;end;end;end;else do if not(BN>=15)then if BN~=14 then local Z_=(JG[GN[0X5]]);local h_=(Z_[0x4]);local C_=#h_;local G_=(nil);do if not(C_>0)then else G_={};for Mc=0X1,C_ do local lc=h_[Mc];if lc[1]~=0 then G_[Mc-1]=cG[lc[2]];else(G_)[Mc-1]={ZN,lc[2]};end;end;H(iG,G_);end;end;ZN[GN[2]]=ed(tN,Z_,G_);else do if not(ZN[GN[0X5]]<=ZN[GN[4]])then bN=GN[0x2];end;end;end;else do if not(BN<16)then if BN~=0X00011 then bN=GN[5];else do(ZN)[12]=ZN[0][GN[0X1]];end;local sf=0X00D;GN=TG[bN];do bN=bN+1;end;do(ZN)[0xC]=ZN[12][GN[0x1]];end;GN=TG[bN];bN=bN+1;ZN[0Xd]=ZN[0xa][GN[0X1]];bN=bN+1;do(ZN)[14]=ZN[0xC];end;GN=TG[bN];bN=bN+1;(ZN[0X00d])[GN[6]]=ZN[14];do GN=TG[bN];end;bN=bN+1;ZN[13]=ZN[10][GN[1]];GN=TG[bN];bN=bN+1;do(ZN[13])[GN[0X0006]]=GN[0x1];end;GN=TG[bN];bN=bN+0x001;(ZN)[0X00d]=ZN[0XA][GN[0X0001]];GN=TG[bN];bN=bN+1;do ZN[0X00d][GN[6]]=GN[1];end;GN=TG[bN];bN=bN+0X0001;(ZN)[13]=ZN[0xa][GN[0X1]];GN=TG[bN];bN=bN+0X00001;(ZN[0Xd])[GN[0X06]]=GN[0X01];GN=TG[bN];bN=bN+1;ZN[13]=ZN[0Xa][GN[0X0001]];bN=bN+0x1;bN=bN+0X0001;do GN=TG[bN];end;bN=bN+1;ZN[13][GN[0X6]]=GN[1];GN=TG[bN];bN=bN+0X01;ZN[13]=ZN[10][GN[0X1]];GN=TG[bN];bN=bN+0X00001;local mf=ZN[13];(ZN)[sf+1]=mf;do(ZN)[sf]=mf[GN[1]];end;GN=TG[bN];bN=bN+0X1;(ZN)[15]=GN[0X06];bN=bN+0X1;sf=0xd;ZN[sf](ZN[sf+0x01],ZN[sf+0X0002]);EN=sf-0x001;do GN=TG[bN];end;bN=bN+1;(ZN)[0XD]=ZN[0XA][GN[1]];bN=bN+1;do bN=bN+1;end;GN=TG[bN];bN=bN+1;(ZN[13])[GN[0X6]]=GN[0x0001];GN=TG[bN];bN=bN+0X001;do if not ZN[11]then do bN=GN[0x5];end;end;end;end;else do(ZN)[0xc]=tN[GN[6]];end;do GN=TG[bN];end;local Fw=0X0C;bN=bN+0X1;ZN[13]=ZN[10][GN[1]];do bN=bN+1;end;do bN=bN+1;end;do bN=bN+1;end;ZN[Fw]=ZN[Fw](ZN[Fw+0x001]);EN=Fw;GN=TG[bN];bN=bN+0x1;if not(not ZN[0Xc])then else do bN=GN[0x005];end;end;end;end;end;end;end;else if BN<0X4 then do if BN<0X2 then if BN~=1 then local PD=GN[2];local TD,mD=ZN[PD]();do if TD then do bN=GN[5];end;do ZN[PD+0X3]=mD;end;end;end;else ZN[12]=tN[GN[0X6]];local Nb=0X000C;GN=TG[bN];bN=bN+0X01;ZN[13]=ZN[10][GN[1]];bN=bN+0X1;ZN[Nb]=ZN[Nb](ZN[Nb+0X1]);EN=Nb;bN=bN+1;bN=bN+1;GN=TG[bN];bN=bN+0X1;(ZN)[0Xd]=tN[GN[6]];do bN=bN+1;end;bN=bN+1;GN=TG[bN];bN=bN+0X001;(ZN)[14]=ZN[0x0][GN[1]];do bN=bN+1;end;bN=bN+0X1;do bN=bN+0X1;end;Nb=13;(ZN)[Nb]=ZN[Nb](ZN[Nb+0x1]);EN=Nb;bN=bN+1;bN=bN+1;GN=TG[bN];bN=bN+0X1;ZN[13]=ZN[0Xd]+GN[1];do GN=TG[bN];end;bN=bN+0x1;do if not(ZN[12]<ZN[0Xd])then bN=GN[2];end;end;end;else if BN~=0X0003 then ZN[11]=ZN[10][GN[0X1]];GN=TG[bN];bN=bN+0X01;ZN[11]=ZN[11][GN[1]];do GN=TG[bN];end;bN=bN+1;if not(GN[6]<ZN[0X000B])then bN=GN[0X2];end;else ZN[10]=ZN[5][ZN[9]];bN=bN+1;do bN=bN+0X00001;end;GN=TG[bN];bN=bN+0X1;if not(not ZN[1])then else bN=GN[0X5];end;end;end;end;else if BN<6 then do if BN~=0X005 then do ZN[GN[2]]=ZN[GN[0X5]]==ZN[GN[0x4]];end;else(ZN)[GN[0x2]]=GN[0X6]/GN[0X1];end;end;else if BN>=0x7 then if BN==0X008 then do(ZN)[GN[0X2]]=not ZN[GN[5]];end;else ZN[0xc]=tN[GN[6]];bN=bN+1;do bN=bN+0X1;end;GN=TG[bN];bN=bN+0X1;ZN[0XD]=ZN[10][GN[0X1]];do GN=TG[bN];end;bN=bN+1;local xE=(12);do ZN[0x00D]=ZN[0Xd][GN[1]];end;bN=bN+0x1;ZN[xE]=ZN[xE](ZN[xE+0X00001]);EN=xE;bN=bN+0x00001;bN=bN+0X1;GN=TG[bN];bN=bN+0X1;if not(not(ZN[0XC]<=GN[1]))then else bN=GN[2];end;end;else(ZN)[GN[0X002]]={V({},0X1,GN[0X5])};end;end;end;end;else do if not(BN>=0X0001b)then if BN<22 then if not(BN>=0X14)then if BN==19 then local k6,t6=GN[0X02],ZN[GN[5]];do ZN[k6+1]=t6;end;do ZN[k6]=t6[GN[1]];end;else do(ZN)[GN[2]]=N(ZN[GN[5]],ZN[GN[4]]);end;end;else if BN~=21 then(ZN)[GN[0X002]]=GN[0X6];else ZN[0Xd]=ZN[0x04]+GN[0X001];bN=bN+1;ZN[0X4]=ZN[13];GN=TG[bN];do bN=bN+0X001;end;bN=GN[5];end;end;else if BN<24 then if BN~=0X17 then do repeat local d3,N3=iG,(ZN);if#d3>0 then local Dd={};for e0,d0 in l,d3 do do for qi,Ii in l,d0 do if not(Ii[1]==N3 and Ii[0X00002]>=0X0)then else local T7=Ii[2];if not Dd[T7]then do(Dd)[T7]={N3[T7]};end;end;Ii[1]=Dd[T7];(Ii)[2]=1;end;end;end;end;end;until true;end;return;else(ZN)[11]=ZN[10][GN[1]];GN=TG[bN];bN=bN+1;ZN[0xC]=ZN[0][GN[1]];bN=bN+1;do bN=bN+1;end;bN=bN+0X001;ZN[0X0000b]=ZN[11]==ZN[12];GN=TG[bN];do bN=bN+1;end;bN=GN[0X5];end;else do if BN<0x019 then else if BN==26 then(ZN)[0x1]=ZN[5];do GN=TG[bN];end;bN=bN+1;local h5=(0X0006);ZN[0X5]=tN[GN[6]];do bN=bN+1;end;do bN=bN+0X1;end;GN=TG[bN];bN=bN+1;ZN[5]=ZN[5][GN[1]];bN=bN+0X0001;do bN=bN+1;end;local Z5=(5);GN=TG[bN];do bN=bN+0X00001;end;local L5=(ZN[0X5]);do ZN[Z5+0X1]=L5;end;do(ZN)[Z5]=L5[GN[0X1]];end;do bN=bN+1;end;do Z5=0X5;end;(ZN)[Z5]=ZN[Z5](ZN[Z5+1]);EN=Z5;GN=TG[bN];do bN=bN+1;end;(ZN)[6]=GN[6];bN=bN+1;ZN[7]=#ZN[5];GN=TG[bN];do bN=bN+0X01;end;do(ZN)[0X8]=GN[6];end;GN=TG[bN];bN=bN+0X1;Z5=ZN[h5];local d5,E5=ZN[h5+0X1],(ZN[h5+2]);(ZN)[h5]=h(function()do for z7=Z5,d5,E5 do t(true,z7);end;end;end);bN=GN[5];else local t7=(ZN[0x00A]);local Y7=0X00b;do(ZN)[Y7+0X1]=t7;end;do(ZN)[Y7]=t7[GN[1]];end;GN=TG[bN];do bN=bN+0X00001;end;ZN[0xD]=GN[6];bN=bN+1;Y7=11;(ZN)[Y7]=ZN[Y7](ZN[Y7+0x0001],ZN[Y7+0X0002]);do EN=Y7;end;bN=bN+1;bN=bN+0X1;GN=TG[bN];bN=bN+1;if ZN[0xb]then bN=GN[5];end;end;end;end;end;end;else if BN>=31 then if BN>=33 then if BN<34 then local yh=(ZN[GN[5]]/ZN[GN[4]]);ZN[GN[2]]=yh-yh%1;else if BN==35 then local p_,P_=11,(ZN[0X0000A]);ZN[p_+0X001]=P_;ZN[p_]=P_[GN[0x01]];GN=TG[bN];bN=bN+1;ZN[13]=GN[0X00006];bN=bN+0x1;p_=11;(ZN)[p_]=ZN[p_](ZN[p_+1],ZN[p_+0X2]);do EN=p_;end;bN=bN+0X1;bN=bN+1;GN=TG[bN];do bN=bN+1;end;if not ZN[11]then bN=GN[0x5];end;else for wE=GN[2],GN[0X5]do(ZN)[wE]=nil;end;end;end;else if BN~=0x20 then ZN[GN[2]]=tN[GN[0X6]];else if not(not ZN[GN[2]])then else bN=GN[0X5];end;end;end;else do if not(BN<29)then if BN~=0x0001E then(ZN)[13]=ZN[0XA][GN[0X01]];GN=TG[bN];do bN=bN+0X0001;end;local TD,nD=ZN[13],(13);(ZN)[nD+1]=TD;do ZN[nD]=TD[GN[0X00001]];end;do bN=bN+1;end;do nD=0X0000D;end;ZN[nD]=ZN[nD](ZN[nD+0X1]);EN=nD;GN=TG[bN];bN=bN+0X1;nD=0xD;TD=ZN[0XD];ZN[nD+1]=TD;ZN[nD]=TD[GN[0X1]];GN=TG[bN];bN=bN+1;ZN[15]=GN[0X6];do bN=bN+1;end;nD=13;ZN[nD]=ZN[nD](ZN[nD+1],ZN[nD+2]);EN=nD;bN=bN+0X01;bN=bN+1;GN=TG[bN];bN=bN+0X00001;if ZN[0XD]then bN=GN[5];end;else ZN[GN[0X02]]=-ZN[GN[5]];end;else if BN==0x01c then(ZN)[2]=ZN[0X5];bN=bN+0X1;ZN[5]=ZN[0X1];GN=TG[bN];bN=bN+0X01;do if not(ZN[0x5])then else bN=GN[0x5];end;end;else ZN[GN[2]]=ZN[GN[5]]~=ZN[GN[0X4]];end;end;end;end;end;end;end;end;end;end);if not(vN)then if C(mN)~='\s\116ring'then(E)(mN,0);else if not(M(mN,'a\116\116\101\m\112\116 \116\o\032y\ie\l\100\ \097\099ros\s\ m\e\116\097\m\eth\111\d\047\067\037\-\call\ \098\o\117n\100\097\114\y'))then else return coroutine.yield();end;if M(mN,"^.-:%d+: ")then E("Luraph Script:"..(YG[bN-1]or"(internal)")..': '..x(mN),0);else(E)(mN,0X0);end;end;else if mN then if LN==0X1 then return ZN[wN]();else return ZN[wN](V(ZN,wN+1,EN));end;elseif wN then return V(ZN,wN,LN);end;end;end;else hG=function(...)local Ul,Vl=0X0001,{};local tl=I();local ll={[0X1]=FG,[0X0002]=Vl};local fl,kl=Cd(...);do fl=fl-1;end;for VP=0X0,fl do if not(IG>VP)then break;else(Vl)[VP]=kl[VP+0X0001];end;end;local El=((tl==a and SG or tl));if not OG then kl=nil;elseif zG then(Vl)[IG]={n=fl>=IG and fl-IG+0X1 or 0,V(kl,IG+0x1,fl+1)};end;local sl=0;if El~=tl then(R)(hG,El);end;local nl,ml,Fl,Ql=A(function()while true do local xe=(TG[Ul]);local ae=(xe[3]);Ul=Ul+1;if ae>=7 then if not(ae>=0XB)then if not(ae>=0X00009)then if ae~=0X8 then ll[xe[5]]=Vl[xe[2]];else local q7,T7=xe[2],xe[0X5];sl=q7+T7-1;repeat local TP,cP=iG,(Vl);if#TP>0X0 then local r2={};do for fQ,EQ in l,TP do for tN,oN in l,EQ do if not(oN[0X1]==cP and oN[2]>=0x0)then else local KN=oN[2];do if not(not r2[KN])then else(r2)[KN]={cP[KN]};end;end;oN[1]=r2[KN];do oN[0X2]=1;end;end;end;end;end;end;until true;return true,q7,T7;end;else do if ae~=0XA then do Ul=xe[5];end;else(Vl)[xe[2]]=-Vl[xe[0x5]];end;end;end;else if ae<13 then do if ae~=12 then(Vl)[xe[0X0002]]=Vl[xe[5]]+Vl[xe[4]];else end;end;else if ae~=0Xe then local dz=JG[xe[5]];local kz=nil;local ez=dz[4];local Bz=#ez;if Bz>0 then kz={};do for Gt=0X1,Bz do local Bt=(ez[Gt]);do if Bt[1]~=0X0 then(kz)[Gt-1]=cG[Bt[0X00002]];else(kz)[Gt-1]={Vl,Bt[2]};end;end;end;end;(H)(iG,kz);end;(Vl)[xe[2]]=ed(El,dz,kz);else(Vl)[0]=El[xe[0X006]];Ul=Ul+1;Ul=Ul+0X001;xe=TG[Ul];Ul=Ul+0X1;Vl[0x000]=Vl[0x0][xe[0x001]];local QB=(nil);Ul=Ul+1;do Ul=Ul+0x1;end;do xe=TG[Ul];end;Ul=Ul+1;local tB=JG[xe[0X5]];local KB,AB=tB[0x4],0;local OB=#KB;if OB>0X0000 then QB={};for at=1,OB do local Vt=(KB[at]);if Vt[1]==0 then(QB)[at-1]={Vl,Vt[0X0002]};else do QB[at-0x1]=cG[Vt[2]];end;end;end;H(iG,QB);end;do Vl[0x001]=ed(El,tB,QB);end;Ul=Ul+0X1;Vl[AB](Vl[AB+0x1]);sl=AB-1;Ul=Ul+0X1;repeat local Lu,hu=iG,(Vl);do if not(#Lu>0)then else local vA=({});for Re,He in l,Lu do for vC,KC in l,He do do if not(KC[0X1]==hu and KC[0x2]>=0)then else local xE=KC[2];if not(not vA[xE])then else do vA[xE]={hu[xE]};end;end;(KC)[1]=vA[xE];do(KC)[0x0002]=0X001;end;end;end;end;end;end;end;until true;do return;end;end;end;end;else if not(ae>=3)then if not(ae<0x1)then do if ae~=0x2 then(Vl)[xe[2]]=El[xe[0X6]];else(Vl)[xe[2]]={V({},1,xe[5])};end;end;else Vl[xe[2]]=Vl[xe[5]]/Vl[xe[4]];end;else if ae>=5 then do if ae~=6 then Vl[xe[0X2]]=not Vl[xe[5]];else local cT=xe[0X02];local AT,DT,RT=Vl[cT],Vl[cT+0X001],(Vl[cT+2]);Vl[cT]=h(function()do for UH=AT,DT,RT do t(true,UH);end;end;end);do Ul=xe[0X5];end;end;end;else if ae==0X4 then do if Vl[xe[0X5]]<Vl[xe[4]]then Ul=xe[0X2];end;end;else Vl[xe[2]]=xe[0X6];end;end;end;end;end;end);do if not(nl)then do if C(ml)~='\115\116\114\i\110g'then(E)(ml,0);else if M(ml,"\097\116\116\em\p\116\ t\o\ \yi\101l\100\032ac\114\111ss\032m\e\116a\m\et\104\o\d\047\C\037\045\call\ \098\oun\100ar\y")then do return coroutine.yield();end;end;if not(M(ml,"^.-:%d+: "))then(E)(ml,0);else E("\076ura\112\h \S\c\114\105\p\116:"..(YG[Ul-1]or'\(\i\110t\er\110\097\l\)')..": "..x(ml),0);end;end;end;else if ml then if Ql==0X1 then return Vl[Fl]();else return Vl[Fl](V(Vl,Fl+1,sl));end;elseif not(Fl)then else return V(Vl,Fl,Ql);end;end;end;end;end;else hG=function(...)local ry=0X0;local gy,Yy={},1;local py=({[0X1]=FG,[0X0002]=gy});local Ty=I();local Zy,wy=Cd(...);do Zy=Zy-1;end;for pv=0,Zy do do if IG>pv then gy[pv]=wy[pv+1];else break;end;end;end;local Iy=(Ty==a and SG or Ty);do if not OG then wy=nil;elseif zG then(gy)[IG]={n=Zy>=IG and Zy-IG+0x0001 or 0,V(wy,IG+0X01,Zy+1)};end;end;if Iy~=Ty then(R)(hG,Iy);end;local Ny,My,ly,Uy=A(function()while true do local YE=TG[Yy];local AE=(YE[3]);Yy=Yy+1;if AE<0X8 then do if not(AE<4)then if not(AE<6)then if AE==7 then gy[YE[2]]=YE[0x006];else local NW=(YE[2]);local dW=gy[NW+2];local kW,oW=gy[NW],(gy[NW+0X01]);gy[NW]=h(function()do for nV=kW,oW,dW do(t)(true,nV);end;end;end);do Yy=YE[0x00005];end;end;else if AE==0X5 then local k3=nil;local H3=(JG[YE[5]]);local L3=H3[0X4];local P3=(#L3);do if not(P3>0X000)then else k3={};do for oX=0X1,P3 do local PX=L3[oX];if PX[0x1]==0X0000 then k3[oX-1]={gy,PX[2]};else k3[oX-0X1]=cG[PX[0X2]];end;end;end;H(iG,k3);end;end;do gy[YE[0X2]]=ed(Iy,H3,k3);end;else(gy)[YE[2]]={V({},0X1,YE[5])};end;end;else if not(AE>=2)then if AE~=0x1 then local hO=gy[YE[0X0005]]/gy[YE[0X04]];(gy)[YE[0X2]]=hO-hO%1;else gy[YE[0X00002]]=py[YE[0X5]];end;else if AE==3 then for HM=YE[2],YE[5]do gy[HM]=nil;end;else do Yy=YE[0x5];end;end;end;end;end;else if AE<12 then if AE<0X0A then do if AE==0X0009 then else(gy)[YE[2]]=gy[YE[0X5]]-gy[YE[4]];end;end;else do if AE~=0xB then gy[YE[0X002]]=Iy[YE[0X6]];else gy[YE[0X2]]=gy[YE[5]]==gy[YE[0x4]];end;end;end;else do if not(AE>=0Xe)then if AE==0X000d then gy[YE[0X2]]=gy[YE[0X005]][gy[YE[0X4]]];else gy[0X0]=Iy[YE[6]];Yy=Yy+1;Yy=Yy+1;YE=TG[Yy];do Yy=Yy+1;end;(gy)[0]=gy[0][YE[0x1]];Yy=Yy+0x00001;Yy=Yy+0x1;YE=TG[Yy];local Es=0;local Hs=JG[YE[5]];Yy=Yy+1;local zs,ds=nil,(Hs[4]);local Ss=#ds;if not(Ss>0X0000)then else do zs={};end;for OB=1,Ss do local wB=ds[OB];if wB[1]==0X0 then(zs)[OB-0x1]={gy,wB[2]};else zs[OB-1]=cG[wB[2]];end;end;(H)(iG,zs);end;do gy[1]=ed(Iy,Hs,zs);end;Yy=Yy+1;gy[Es](gy[Es+0x01]);ry=Es-1;Yy=Yy+1;Yy=Yy+1;Yy=Yy+1;repeat local hB,oB=iG,(gy);if#hB>0X00 then local BG=({});for Ra,Xa in l,hB do for NZ,vZ in l,Xa do if vZ[0x1]==oB and vZ[0x2]>=0X0 then local Fu=(vZ[0X2]);if not BG[Fu]then BG[Fu]={oB[Fu]};end;(vZ)[1]=BG[Fu];(vZ)[2]=0x0001;end;end;end;end;until true;return;end;else if AE>=0XF then if AE~=0X10 then gy[YE[0X02]]=gy[YE[5]]^gy[YE[4]];else local ke=gy[YE[0X05]];local ze=YE[2];(gy)[ze+0X01]=ke;do(gy)[ze]=ke[YE[1]];end;end;else(gy[YE[0X2]])[gy[YE[5]]]=gy[YE[0X4]];end;end;end;end;end;end;end);do if not(Ny)then do if C(My)~="string"then(E)(My,0X00000);else if M(My,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(M(My,'\094.\-\:\037d+:\ '))then(E)(My,0);else(E)("Luraph Script:"..(YG[Yy-1]or'\(\i\110\116\e\114\110\097\108\)').."\:\ "..x(My),0);end;end;end;else if My then do if Uy==1 then do return gy[ly]();end;else do return gy[ly](V(gy,ly+1,ry));end;end;end;elseif ly then return V(gy,ly,Uy);end;end;end;end;end;else if lG==0X058 then hG=function(...)local pu=({});local Bu=1;local Ju=(I());local au=({[0X0002]=pu,[0X1]=FG});local Zu=(0);local Hu=(Ju==a and SG or Ju);local Fu,Tu=Cd(...);do Fu=Fu-1;end;do for Ia=0,Fu do if not(IG>Ia)then break;else pu[Ia]=Tu[Ia+0X1];end;end;end;if not OG then Tu=nil;elseif not(zG)then else pu[IG]={n=Fu>=IG and Fu-IG+0X1 or 0X0,V(Tu,IG+0X0001,Fu+0X01)};end;if Hu==Ju then else(R)(hG,Hu);end;local vu,Vu,eu,Mu=A(function()while true do local ah=TG[Bu];local rh=ah[3];Bu=Bu+0X0001;do if not(rh>=0X0006)then do if rh<0x3 then if not(rh>=0X1)then local OW=ah[0X2];local uW=(ah[4]-1)*50;local DW=(pu[OW]);for Zq=0X1,ah[5]do(DW)[uW+Zq]=pu[OW+Zq];end;else if rh~=2 then Bu=ah[5];else(pu)[ah[2]]=pu[ah[0X5]]==pu[ah[4]];end;end;else if not(rh<0x4)then if rh==0X5 then pu[ah[2]]=pu[ah[0X0005]]>pu[ah[0x4]];else(pu)[ah[0X002]]=Hu[ah[0x6]];end;else pu[0]=Hu[ah[6]];ah=TG[Bu];do Bu=Bu+0X001;end;local o8=0;local q8=pu[0];(pu)[o8+1]=q8;do(pu)[o8]=q8[ah[0X1]];end;ah=TG[Bu];Bu=Bu+1;(pu)[2]=ah[6];Bu=Bu+0X1;do o8=0;end;(pu)[o8]=pu[o8](pu[o8+0X01],pu[o8+0X2]);do Zu=o8;end;ah=TG[Bu];do Bu=Bu+1;end;pu[1]=Hu[ah[6]];ah=TG[Bu];Bu=Bu+1;pu[0X1]=pu[0X01][ah[1]];do Bu=Bu+1;end;do Bu=Bu+1;end;ah=TG[Bu];local i8=JG[ah[5]];Bu=Bu+0X1;local g8,C8=i8[0X04],(nil);local E8=#g8;do if E8>0 then do C8={};end;for ct=1,E8 do local dt=g8[ct];if dt[1]~=0X00000 then C8[ct-1]=cG[dt[0X2]];else(C8)[ct-1]={pu,dt[0x00002]};end;end;(H)(iG,C8);end;end;pu[0X2]=ed(Hu,i8,C8);do Bu=Bu+0X00001;end;do o8=0x1;end;(pu[o8])(pu[o8+1]);Zu=o8-0X1;Bu=Bu+0x1;repeat local jE,pE=iG,pu;if not(#jE>0x0)then else local fL={};for bD,ED in l,jE do for cJ,GJ in l,ED do do if GJ[0X1]==pE and GJ[2]>=0 then local dg=(GJ[2]);if not fL[dg]then(fL)[dg]={pE[dg]};end;do GJ[1]=fL[dg];end;(GJ)[2]=1;end;end;end;end;end;until true;return;end;end;end;else if not(rh<9)then if not(rh<11)then if rh~=12 then if pu[ah[2]]then do Bu=ah[0X005];end;end;else pu[ah[2]]=#pu[ah[5]];end;else if rh~=10 then else local kN=ah[0x004];local vN=ah[0x02];local WN=ah[5];if WN~=0 then do Zu=vN+WN-1;end;end;local iN,BN=nil,(nil);if WN~=1 then iN,BN=Cd(pu[vN](V(pu,vN+0X1,Zu)));else iN,BN=Cd(pu[vN]());end;do if kN~=1 then if kN~=0 then iN=vN+kN-0X2;Zu=iN+1;else iN=iN+vN-1;Zu=iN;end;local MG=(0X000);for D_=vN,iN do do MG=MG+1;end;pu[D_]=BN[MG];end;else Zu=vN-0X001;end;end;end;end;else if not(rh<0X7)then if rh==8 then local gx=(JG[ah[0X5]]);local px=nil;local bx=gx[0X04];local ex=(#bx);if ex>0 then px={};for mc=1,ex do local Kc=bx[mc];do if Kc[1]==0x00000 then(px)[mc-0X1]={pu,Kc[0x2]};else px[mc-0X001]=cG[Kc[0X2]];end;end;end;(H)(iG,px);end;(pu)[ah[2]]=ed(Hu,gx,px);else do(pu)[ah[2]]={V({},1,ah[0X00005])};end;end;else do(pu)[ah[2]]=ah[0X6];end;end;end;end;end;end;end);if not(vu)then if C(Vu)=='\115\116r\i\110\g'then do if M(Vu,'\097tt\em\112\116\ t\111\ y\ie\l\d\ \097\099\114\os\s\032\109e\116a\m\et\104\111\d\/C\%\-\c\097l\l\032\098o\117n\dar\y')then return coroutine.yield();end;end;if not(M(Vu,'^.\-\058\%\100+\:\032'))then E(Vu,0x0);else E("Luraph Script:"..(YG[Bu-0X1]or"(internal)")..": "..x(Vu),0x00000);end;else E(Vu,0X00000);end;else do if Vu then if Mu~=1 then return pu[eu](V(pu,eu+0x0001,Zu));else do return pu[eu]();end;end;elseif not(eu)then else return V(pu,eu,Mu);end;end;end;end;else hG=function(...)local Te=0X01;local pe=({});local Je=(I());local Ve=({[0X0002]=pe,[0X1]=FG});local je,le=Cd(...);je=je-0X00001;local Xe=((Je==a and SG or Je));for I4=0,je do if IG>I4 then(pe)[I4]=le[I4+1];else break;end;end;local Ke=0X00;if not OG then le=nil;elseif not(zG)then else pe[IG]={n=je>=IG and je-IG+0X1 or 0x0,V(le,IG+1,je+1)};end;do if Xe==Je then else R(hG,Xe);end;end;while true do local i7=(TG[Te]);do Te=Te+0X1;end;local t7=i7[3];return(function(w,S,...)local B=Client.Backpack:GetChildren();for G=1,#B do local C=B[G];if C.Name:lower():find("microchip")then return true;end;end;local L=Client.Character:GetChildren();for d=1,#L do local Z=L[d];if Z:IsA("Tool")and Z.Name:lower():find("microchip")then return true;end;end;end)(pe,cG,...);end;end;end;end;else if not(lG>=0X55)then if lG==0X54 then hG=function(...)local qb=0X001;local yb=0X00;local Ib={};local Pb={[0X0002]=Ib,[0X1]=FG};local zb=(I());local sb,Mb=Cd(...);sb=sb-1;for sQ=0X0,sb do if IG>sQ then(Ib)[sQ]=Mb[sQ+0x1];else do break;end;end;end;local xb=((zb==a and SG or zb));do if not OG then Mb=nil;elseif zG then do(Ib)[IG]={n=sb>=IG and sb-IG+0X0001 or 0,V(Mb,IG+1,sb+1)};end;end;end;do if xb~=zb then R(hG,xb);end;end;local Sb,eb,Wb,tb=A(function()while true do local qT=(TG[qb]);local DT=(qT[0X3]);do qb=qb+0x1;end;if DT<0Xa then if not(DT>=5)then if DT<2 then do if DT~=1 then qb=qT[5];else(Ib)[qT[0x0002]]={V({},1,qT[5])};end;end;else if DT<0X3 then for vY=qT[0x2],qT[0x5]do Ib[vY]=nil;end;else if DT==0X4 then local sM,kM=JG[qT[0X005]],nil;local LM=(sM[0x4]);local QM=#LM;if QM>0x0 then kM={};for PA=0X1,QM do local KA=(LM[PA]);if KA[0X1]==0 then(kM)[PA-1]={Ib,KA[0X2]};else kM[PA-0X1]=cG[KA[0X2]];end;end;H(iG,kM);end;do Ib[qT[0X2]]=ed(xb,sM,kM);end;else do if not(not Ib[qT[0X00002]])then else do qb=qT[0X05];end;end;end;end;end;end;else do if not(DT<7)then do if DT<8 then do repeat local jQ,nQ=iG,Ib;if not(#jQ>0)then else local IK={};for AJ,HJ in l,jQ do for d0,z0 in l,HJ do do if not(z0[0X01]==nQ and z0[0x00002]>=0X0)then else local ac=(z0[0X02]);do if not IK[ac]then(IK)[ac]={nQ[ac]};end;end;z0[0X1]=IK[ac];do(z0)[0x2]=0x0001;end;end;end;end;end;end;until true;end;return;else if DT~=9 then do Ib[qT[2]]=Ib[qT[5]]<Ib[qT[0X4]];end;else Ib[qT[0X2]]=qT[0X0006];end;end;end;else if DT==0x6 then do Ib[5]=Ib[0X04][qT[1]];end;qb=qb+1;qb=qb+1;qT=TG[qb];do qb=qb+1;end;(Ib)[5]=Ib[0X5][qT[1]];do qb=qb+0X1;end;qb=qb+1;do qT=TG[qb];end;qb=qb+0x1;do Ib[5]=Ib[5][qT[0x1]];end;qT=TG[qb];do qb=qb+1;end;Ib[0X5]=Ib[0X0005]~=qT[1];qT=TG[qb];qb=qb+1;qb=qT[5];else Ib[qT[0X002]]=xb[qT[0X6]];end;end;end;end;else do if DT<0X00F then if not(DT>=0x00c)then if DT==0XB then Ib[qT[2]]=Pb[qT[0X5]];else(Ib)[2]=xb[qT[0X6]];qT=TG[qb];do qb=qb+1;end;(Ib)[2]=Ib[0x00002][qT[1]];qb=qb+0x01;qb=qb+0X1;qT=TG[qb];do qb=qb+1;end;do(Ib)[0x2]=Ib[2][qT[1]];end;qT=TG[qb];qb=qb+1;local g1=(3);(Ib)[2]=Ib[2][qT[0X1]];do qT=TG[qb];end;qb=qb+0X1;local l1=(Ib[0x2]);(Ib)[g1+0X1]=l1;(Ib)[g1]=l1[qT[0X0001]];qT=TG[qb];qb=qb+1;(Ib)[0X005]=xb[qT[6]];local s1=2;qb=qb+1;Ib[6]=Ib[0];qb=qb+0X001;do g1=5;end;local U1=(0x00000);if s1~=0x0 then do yb=g1+s1-1;end;end;local q1,O1=nil,nil;if s1==0X1 then do q1,O1=Cd(Ib[g1]());end;else q1,O1=Cd(Ib[g1](V(Ib,g1+1,yb)));end;if U1==1 then yb=g1-1;else if U1~=0x0000 then q1=g1+U1-2;yb=q1+1;else q1=q1+g1-1;yb=q1;end;local kV=(0X0);for H5=g1,q1 do kV=kV+0X1;Ib[H5]=O1[kV];end;end;qb=qb+0X0001;qb=qb+1;qb=qb+1;g1=3;Ib[g1]=Ib[g1](V(Ib,g1+1,yb));yb=g1;qb=qb+0X01;do(Ib)[4]=Ib[3];end;do qT=TG[qb];end;qb=qb+0x0001;if not(not Ib[0X4])then else qb=qT[5];end;end;else if not(DT<0X000D)then if DT==0x0e then local ki=qT[0X002];local pi=(qT[4]-0X1)*0X32;local ii=(Ib[ki]);for ou=0X1,qT[5]do(ii)[pi+ou]=Ib[ki+ou];end;else do repeat local wM,bM=iG,Ib;if not(#wM>0)then else local s2={};for aB,dB in l,wM do do for MF,YF in l,dB do if not(YF[0X1]==bM and YF[2]>=0)then else local oa=YF[0X2];do if not s2[oa]then(s2)[oa]={bM[oa]};end;end;do YF[0x1]=s2[oa];end;YF[0X02]=1;end;end;end;end;end;until true;end;local CO=(qT[0X00002]);return false,CO,CO;end;else local Eq,uq=4,Ib[3];(Ib)[Eq+0X1]=uq;Ib[Eq]=uq[qT[1]];qb=qb+0x1;Ib[6]=Ib[0X1];qb=qb+1;do Eq=0X04;end;do Ib[Eq]=Ib[Eq](Ib[Eq+0x1],Ib[Eq+2]);end;yb=Eq;qT=TG[qb];do qb=qb+0X001;end;qb=qT[5];end;end;else if DT>=17 then do if DT<18 then Ib[qT[2]]=Ib[qT[0X05]];else if DT==19 then local VZ=(qT[5]);local vZ=Ib[VZ];for A7=VZ+0X1,qT[4]do vZ=vZ..Ib[A7];end;(Ib)[qT[0X2]]=vZ;else repeat local xM,iM,YM=iG,Ib,(qT[0x00002]);if#xM>0 then local mh=({});do for Pc,Gc in l,xM do for bW,cW in l,Gc do if not(cW[0X0001]==iM and cW[0X002]>=YM)then else local A9=cW[2];if not(not mh[A9])then else mh[A9]={iM[A9]};end;(cW)[0x1]=mh[A9];cW[2]=1;end;end;end;end;end;until true;end;end;end;else if DT~=16 then else(Ib)[qT[0X2]]=L(Ib[qT[5]],Ib[qT[4]]);end;end;end;end;end;end;end);if not(Sb)then do if C(eb)~="string"then(E)(eb,0);else if not(M(eb,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if M(eb,"^.-:%d+: ")then E('\Lu\114ap\h \083\099r\105\112t:'..(YG[qb-0x1]or"(internal)")..": "..x(eb),0);else E(eb,0x0);end;end;end;end;else if eb then if tb~=0X1 then return Ib[Wb](V(Ib,Wb+1,yb));else return Ib[Wb]();end;elseif not(Wb)then else return V(Ib,Wb,tb);end;end;end;else hG=function(...)local lw=0X1;local Jw=({});local tw=(I());local bw=((tw==a and SG or tw));local Yw,Mw=Cd(...);local Hw,xw=0X00000,{[0X0002]=Jw,[0X1]=FG};do Yw=Yw-0X1;end;for wB=0X0,Yw do if not(IG>wB)then do break;end;else(Jw)[wB]=Mw[wB+0X1];end;end;if not OG then do Mw=nil;end;elseif zG then(Jw)[IG]={n=Yw>=IG and Yw-IG+0X1 or 0X0,V(Mw,IG+0X0001,Yw+0X1)};end;if bw~=tw then R(hG,bw);end;while true do local Dd=TG[lw];lw=lw+1;local yX=(Dd[3]);return(function(L,H,...)local A=Priority:get("CollectFruit");if not A:check()then return;end;local m=Client.Character;if not Client.Team then _C("SetTeam",Client.Team.Name);end;if not m then return;end;if not m:FindFirstChild("Humanoid")then return;end;if m:FindFirstChild("Humanoid").Health<=0 then return;end;if not Root then return;end;if#FruitInServer<=0 then return;end;local A=Priority:get("CollectFruit");local function O(X,j)if X.Name=="Fruit "then A:set();if m:FindFirstChild("Humanoid").Health<=0 or not X:FindFirstChild("Handle")then return;end;repeat A:set();Root.CFrame=CFrame.new(X:WaitForChild("Handle").Position+Vector3.new(math.random(-1.0,1),math.random(-1.0,1),math.random(-1.0,1)));wait();firetouchinterest(X.Handle,Root,0);firetouchinterest(X.Handle,Root,1);until X.Parent~=workspace;A:clear();end;if X:IsA("Tool")and X:FindFirstChild("Handle")then if dist(X.Handle.Position)<=5000 then if tick()-RecentCollected<15 then return;end;RecentCollected=tick();firetouchinterest(X.Handle,m.HumanoidRootPart,0);firetouchinterest(X.Handle,m.HumanoidRootPart,1);end;end;end;for E,C in pairs(FruitInServer)do if C then O(C);if C.Name=="Fruit "or C:IsA("Tool")then break;end;end;end;A:clear();end)(Jw,cG,...);end;end;end;else if lG~=86 then hG=function(...)local te,He=0x01,{};local Xe=({[0X0002]=He,[0X1]=FG});local be=(I());local Qe=(be==a and SG or be);local Re,Ie=Cd(...);do Re=Re-1;end;do for ac=0X0,Re do if not(IG>ac)then break;else do He[ac]=Ie[ac+1];end;end;end;end;local we=(0);if not OG then Ie=nil;elseif zG then(He)[IG]={n=Re>=IG and Re-IG+0X1 or 0X0,V(Ie,IG+0X1,Re+0X1)};end;do if Qe~=be then(R)(hG,Qe);end;end;local me,oe,Je,ge=A(function()do while true do local Mn=(TG[te]);local Xn=Mn[0X00003];te=te+1;if Xn>=11 then do if Xn<0X11 then do if Xn<14 then do if Xn<12 then local d0=JG[Mn[5]];local F0,C0=d0[0x4],(nil);local L0=#F0;if not(L0>0)then else C0={};do for Ll=0x1,L0 do local vl=F0[Ll];if vl[0X1]==0 then do(C0)[Ll-1]={He,vl[2]};end;else C0[Ll-1]=cG[vl[0X2]];end;end;end;(H)(iG,C0);end;(He)[Mn[0X002]]=ed(Qe,d0,C0);else do if Xn~=0xD then do(He)[0x000]=Qe[Mn[0x6]];end;te=te+0X0001;te=te+0X1;Mn=TG[te];te=te+1;He[0x0]=He[0][Mn[0X1]];Mn=TG[te];te=te+0x1;do te=Mn[0X5];end;else(He)[Mn[2]]=Mn[0X6];end;end;end;end;else do if Xn<0xf then local NB=cG[0];do(He)[0x0]=NB[1][NB[2]];end;te=te+1;do te=te+1;end;te=te+1;we=0X00;He[we]=He[we]();Mn=TG[te];do te=te+1;end;if not(not He[0])then else do te=Mn[0X005];end;end;else if Xn==0X000010 then for Vy=Mn[0x2],Mn[0X005]do do He[Vy]=nil;end;end;else local Yv=cG[0x1];do(He)[0]=Yv[0x1][Yv[0X2]];end;te=te+0X00001;te=te+1;Mn=TG[te];do te=te+0X00001;end;if not He[0x00]then te=Mn[5];end;end;end;end;end;end;else if Xn<20 then do if Xn<18 then local a4=(cG[0X00001]);(He)[0]=a4[0X01][a4[0x00002]];te=te+1;te=te+0X001;te=te+1;do(He)[0X00]=not He[0];end;Mn=TG[te];do te=te+0X0001;end;if He[0X0]then te=Mn[5];end;else if Xn~=0x13 then He[Mn[0x02]]=He[Mn[5]]^He[Mn[0x4]];else He[Mn[0X002]]=He[Mn[0X5]][He[Mn[0x00004]]];end;end;end;else do if Xn<21 then do repeat local J6,y6=iG,He;do if#J6>0 then local uT={};do for kF,rF in l,J6 do for je,Me in l,rF do if not(Me[0X001]==y6 and Me[2]>=0X0)then else local zq=(Me[0X2]);if not uT[zq]then(uT)[zq]={y6[zq]};end;(Me)[0X1]=uT[zq];(Me)[0X0002]=0X1;end;end;end;end;end;end;until true;end;local gT=Mn[2];return false,gT,gT;else if Xn==0X16 then He[0]=Qe[Mn[0x0006]];te=te+1;we=0X00;He[we]=He[we]();do te=te+0x00001;end;te=te+1;te=te+0X1;He[0]=not He[0X0000];Mn=TG[te];te=te+1;te=Mn[0X5];else local Vr=Mn[0X2];local jr,Fr,xr=He[Vr],He[Vr+1],(He[Vr+2]);do(He)[Vr]=h(function()for T_=jr,Fr,xr do t(true,T_);end;end);end;te=Mn[5];end;end;end;end;end;end;else if not(Xn<0X05)then do if Xn<0X008 then if Xn>=6 then if Xn==7 then(He)[Mn[0x2]]={V({},1,Mn[0X0005])};else te=Mn[0X5];end;else repeat local bi,Hi=iG,He;if not(#bi>0)then else local My={};for DV,fV in l,bi do for Rm,sm in l,fV do if not(sm[1]==Hi and sm[2]>=0)then else local jR=(sm[0X002]);if not(not My[jR])then else do(My)[jR]={Hi[jR]};end;end;do(sm)[0X1]=My[jR];end;(sm)[0X2]=1;end;end;end;end;until true;return;end;else if not(Xn>=9)then do(He)[Mn[0X2]]=Qe[Mn[0X00006]];end;else if Xn~=10 then do if not(He[Mn[2]])then else do te=Mn[5];end;end;end;else end;end;end;end;else if Xn<2 then if Xn~=0X1 then local Aj=(cG[1]);(He)[0]=Aj[0X1][Aj[2]];do te=te+0X01;end;te=te+1;te=te+0X01;(He)[0]=not He[0X0];Mn=TG[te];te=te+0X1;if not He[0X0]then te=Mn[0X5];end;else if He[Mn[5]]==He[Mn[4]]then te=Mn[2];end;end;else if not(Xn<3)then do if Xn==0X04 then local Z_=cG[0X0001];(He)[0]=Z_[0X1][Z_[2]];do te=te+0x1;end;do te=te+1;end;local O_=(0X0);do Mn=TG[te];end;te=te+0x1;local x_=He[0x00000];He[O_+0X0001]=x_;(He)[O_]=x_[Mn[1]];te=te+0X00001;O_=0X0000;(He)[O_]=He[O_](He[O_+1]);do we=O_;end;Mn=TG[te];te=te+1;te=Mn[5];else do(He)[0X0]=Qe[Mn[6]];end;do te=te+1;end;local qi=cG[1];(He)[1]=qi[0x00001][qi[2]];te=te+0X1;te=te+1;Mn=TG[te];do te=te+1;end;He[1]=He[0X1][Mn[0X1]];do te=te+0X01;end;te=te+1;do te=te+0X0001;end;(He)[0x0]=He[0X0][He[1]];te=te+0x001;te=te+0X1;Mn=TG[te];do te=te+0x1;end;te=Mn[5];end;end;else do He[Mn[2]]=T(He[Mn[0X5]],He[Mn[0X4]]);end;end;end;end;end;end;end;end);if not(me)then if C(oe)=='\st\114in\g'then if not(M(oe,'\097t\116e\109\p\116\ t\111\ \yi\e\l\d\032\097\099r\o\s\s\ \109\eta\m\101t\104\o\d\/\C\%\-\099\097l\l\ \098\111u\110\d\097r\121'))then else do return coroutine.yield();end;end;if M(oe,'\^\.-\058\%d\+\058\ ')then(E)("Luraph Script:"..(YG[te-0X1]or"(internal)")..": "..x(oe),0);else E(oe,0);end;else(E)(oe,0X000);end;else if oe then if ge~=1 then do return He[Je](V(He,Je+1,we));end;else do return He[Je]();end;end;elseif not(Je)then else return V(He,Je,ge);end;end;end;else hG=function(...)local nu=(0x01);local eu={};local cu=I();local wu,Nu,Eu=0x00,(cu==a and SG or cu),({[0X0002]=eu,[0X1]=FG});local ju,lu=Cd(...);do ju=ju-1;end;for nx=0,ju do if IG>nx then do(eu)[nx]=lu[nx+0X1];end;else break;end;end;do if not OG then lu=nil;elseif zG then(eu)[IG]={n=ju>=IG and ju-IG+0X1 or 0,V(lu,IG+0x1,ju+1)};end;end;if Nu==cu then else R(hG,Nu);end;local Fu,Xu,Pu,yu=A(function()while true do local Kr=TG[nu];local sr=Kr[0x3];nu=nu+0X1;if not(sr>=0x0D)then if sr>=0x006 then if sr>=0X9 then if not(sr>=0Xb)then if sr~=10 then do eu[0X0006]=Nu[Kr[6]];end;local vm=(0X6);Kr=TG[nu];do nu=nu+1;end;eu[0x6]=eu[6][Kr[0x00001]];nu=nu+0X00001;nu=nu+0X1;Kr=TG[nu];nu=nu+0x1;eu[0x07]=Nu[Kr[6]];do Kr=TG[nu];end;nu=nu+0x001;do eu[0X8]=eu[0X00005][Kr[1]];end;nu=nu+0X01;(eu)[vm]=eu[vm](eu[vm+0X001],eu[vm+0X2]);wu=vm;nu=nu+1;nu=nu+0X1;Kr=TG[nu];do nu=nu+1;end;if not(eu[0x6])then else nu=Kr[0x0005];end;else(eu)[0X0]=Nu[Kr[6]];nu=nu+0X01;nu=nu+1;Kr=TG[nu];do nu=nu+1;end;do if eu[0X0]then nu=Kr[5];end;end;end;else if sr~=0X00c then(eu)[Kr[2]]={V({},0X00001,Kr[5])};else(eu)[Kr[0X2]]=eu[Kr[0X05]]>=eu[Kr[4]];end;end;else if sr>=0X7 then if sr~=8 then do(eu)[0]=Kr[0X6];end;Kr=TG[nu];nu=nu+1;(eu)[1]=Kr[0X6];Kr=TG[nu];nu=nu+0X001;eu[2]=Nu[Kr[0X6]];Kr=TG[nu];nu=nu+0x0001;do(eu)[3]=Kr[6];end;local Bm=2;do nu=nu+1;end;(eu)[Bm]=eu[Bm](eu[Bm+1]);do wu=Bm;end;do nu=nu+0x1;end;nu=nu+0X1;local Wm=(2);do Kr=TG[nu];end;nu=nu+0X001;(eu)[3]=Nu[Kr[0X06]];Kr=TG[nu];nu=nu+1;(eu)[4]=Nu[Kr[0X6]];Kr=TG[nu];nu=nu+1;do(eu)[4]=eu[4][Kr[0x01]];end;nu=nu+0X1;nu=nu+1;Kr=TG[nu];nu=nu+0X1;(eu)[0X00004]=eu[4][Kr[1]];nu=nu+1;nu=nu+1;Kr=TG[nu];do nu=nu+0X0001;end;(eu)[0x4]=eu[4][Kr[1]];local km=(eu[4]);nu=nu+1;nu=nu+0X1;do Kr=TG[nu];end;do nu=nu+0x0001;end;do Bm=0x4;end;(eu)[Bm+0X001]=km;do(eu)[Bm]=km[Kr[1]];end;do nu=nu+0x1;end;Bm=0X00004;local Am=0X00;if Wm~=0 then wu=Bm+Wm-0X1;end;local sm,cm=nil,(nil);if Wm==0X1 then sm,cm=Cd(eu[Bm]());else sm,cm=Cd(eu[Bm](V(eu,Bm+1,wu)));end;if Am~=0X1 then do if Am==0 then sm=sm+Bm-0x1;wu=sm;else sm=Bm+Am-0X02;do wu=sm+1;end;end;end;local B6=(0X0);for Vh=Bm,sm do B6=B6+0X1;(eu)[Vh]=cm[B6];end;else wu=Bm-0X0001;end;nu=nu+1;nu=nu+1;nu=nu+0X001;Bm=3;Wm=0X0;Am=0X4;if Wm==0 then else wu=Bm+Wm-1;end;do sm,cm=nil;end;if Wm~=1 then sm,cm=Cd(eu[Bm](V(eu,Bm+0X001,wu)));else sm,cm=Cd(eu[Bm]());end;if Am~=0X01 then do if Am==0 then sm=sm+Bm-0X00001;wu=sm;else sm=Bm+Am-2;wu=sm+0X1;end;end;local UF=(0);for fB=Bm,sm do UF=UF+1;do(eu)[fB]=cm[UF];end;end;else do wu=Bm-1;end;end;do Kr=TG[nu];end;nu=nu+0X1;Bm=0X03;local am=(h(function(...)(t)();do for r_,l_ in...do(t)(true,r_,l_);end;end;end));am(eu[Bm],eu[Bm+1],eu[Bm+0X2]);wu=Bm;eu[Bm]=am;nu=Kr[5];else do eu[0X0003]=Nu[Kr[6]];end;nu=nu+1;nu=nu+1;nu=nu+1;wu=0X00003;(eu)[wu]=eu[wu]();nu=nu+1;nu=nu+0X00001;do Kr=TG[nu];end;do nu=nu+0x0001;end;do(Nu)[Kr[6]]=eu[0X3];end;Kr=TG[nu];do nu=nu+1;end;nu=Kr[0X5];end;else for C0=Kr[0X2],Kr[5]do(eu)[C0]=nil;end;end;end;else do if not(sr<3)then if not(sr>=0X04)then eu[6]=eu[5][Kr[0X1]];Kr=TG[nu];do nu=nu+1;end;local a0=(6);local N0=eu[0X6];eu[a0+0X1]=N0;(eu)[a0]=N0[Kr[1]];do Kr=TG[nu];end;nu=nu+1;do eu[8]=Kr[0x6];end;do nu=nu+0X1;end;do a0=6;end;eu[a0]=eu[a0](eu[a0+0X1],eu[a0+2]);wu=a0;do Kr=TG[nu];end;nu=nu+0X1;if not eu[0X6]then nu=Kr[0X5];end;else if sr==0X5 then if eu[Kr[0X0005]]==eu[Kr[4]]then else nu=Kr[0X2];end;else(eu)[0x6]=eu[5][Kr[0X00001]];nu=nu+0X01;nu=nu+1;local K2=6;do Kr=TG[nu];end;nu=nu+0x1;local r2=eu[6];(eu)[K2+1]=r2;eu[K2]=r2[Kr[0X01]];Kr=TG[nu];nu=nu+1;do eu[8]=Kr[0X06];end;do nu=nu+0x1;end;do K2=0X6;end;(eu)[K2]=eu[K2](eu[K2+0x1],eu[K2+0X0002]);wu=K2;nu=nu+1;nu=nu+0X01;Kr=TG[nu];nu=nu+1;if not(not eu[6])then else do nu=Kr[5];end;end;end;end;else do if not(sr<1)then if sr==0X2 then local Im=(JG[Kr[0X5]]);local gm=(nil);local om=Im[0X0004];local Bm=(#om);do if not(Bm>0X0)then else do gm={};end;for Ge=1,Bm do local Ne=om[Ge];if Ne[0X1]~=0X0 then(gm)[Ge-1]=cG[Ne[2]];else do(gm)[Ge-0X001]={eu,Ne[0x2]};end;end;end;(H)(iG,gm);end;end;eu[Kr[0X0002]]=ed(Nu,Im,gm);else repeat local yy,Uy=iG,eu;if not(#yy>0X0000)then else local oA={};for l7,y7 in l,yy do do for Y6,F6 in l,y7 do if not(F6[0X0001]==Uy and F6[2]>=0X0000)then else local i6=F6[0X2];if not(not oA[i6])then else do(oA)[i6]={Uy[i6]};end;end;(F6)[1]=oA[i6];F6[2]=0X001;end;end;end;end;end;until true;do return;end;end;else(eu)[Kr[2]]=b(eu[Kr[0X5]],eu[Kr[4]]);end;end;end;end;end;else if sr<0x00014 then if sr>=0X000010 then if not(sr<18)then if sr~=19 then(eu)[Kr[2]]=Kr[0x06];else do eu[0X006]=Nu[Kr[0X6]];end;Kr=TG[nu];do nu=nu+1;end;(eu)[7]=eu[0X5][Kr[0x1]];nu=nu+0x1;local c0=0X006;(eu)[c0]=eu[c0](eu[c0+1]);wu=c0;Kr=TG[nu];nu=nu+0X00001;eu[0X7]=Nu[Kr[6]];nu=nu+0X0001;nu=nu+1;Kr=TG[nu];nu=nu+0X00001;eu[0X7]=eu[7][Kr[1]];Kr=TG[nu];local y0=0X3;nu=nu+1;c0=0X008;local b0=(eu[0X1]);(eu)[c0+0X1]=b0;do(eu)[c0]=b0[Kr[0X0001]];end;do Kr=TG[nu];end;do nu=nu+0X1;end;eu[10]=eu[5][Kr[1]];nu=nu+1;c0=0X8;local g0=(0);if y0~=0 then wu=c0+y0-1;end;local F0,M0=nil,(nil);if y0~=0X1 then F0,M0=Cd(eu[c0](V(eu,c0+0X01,wu)));else F0,M0=Cd(eu[c0]());end;do if g0~=0X1 then if g0==0 then F0=F0+c0-1;do wu=F0;end;else F0=c0+g0-0X2;do wu=F0+1;end;end;local xK=0;for yZ=c0,F0 do xK=xK+1;(eu)[yZ]=M0[xK];end;else wu=c0-1;end;end;nu=nu+1;c0=7;(eu)[c0]=eu[c0](V(eu,c0+1,wu));wu=c0;Kr=TG[nu];nu=nu+0x1;c0=0X7;b0=eu[7];(eu)[c0+0x1]=b0;eu[c0]=b0[Kr[1]];nu=nu+0x001;c0=0X07;(eu[c0])(eu[c0+1]);wu=c0-1;nu=nu+0x001;do nu=nu+1;end;Kr=TG[nu];nu=nu+0X1;(eu)[7]=Nu[Kr[0x6]];Kr=TG[nu];nu=nu+1;eu[8]=Kr[6];nu=nu+1;(eu)[9]=eu[6];nu=nu+0x1;do eu[0Xa]=eu[0X5];end;nu=nu+1;c0=0X7;wu=c0+4-0X1;(eu[c0])(V(eu,c0+0X1,wu));do wu=c0-0X1;end;nu=nu+0X1;nu=nu+0x1;Kr=TG[nu];nu=nu+1;eu[7]=eu[0]+Kr[1];nu=nu+1;do eu[0]=eu[0X7];end;Kr=TG[nu];nu=nu+0X01;eu[0X7]=Nu[Kr[0X006]];Kr=TG[nu];nu=nu+1;eu[0X00007]=eu[7][Kr[1]];nu=nu+0x0001;do nu=nu+0X00001;end;Kr=TG[nu];nu=nu+1;(eu)[8]=Nu[Kr[0X0006]];do nu=nu+0X1;end;nu=nu+0X1;Kr=TG[nu];nu=nu+1;(eu)[9]=eu[0x0005][Kr[0X01]];do nu=nu+1;end;c0=7;eu[c0](eu[c0+0x0001],eu[c0+2]);wu=c0-0x00001;do Kr=TG[nu];end;nu=nu+1;nu=Kr[5];end;else if sr~=0X11 then do eu[Kr[0x00002]]=eu[Kr[0X5]];end;else do eu[Kr[0X0002]]=Nu[Kr[6]];end;end;end;else do if not(sr>=0XE)then local DN=(Kr[2]);local AN,MN,PN=eu[DN]();do if not(AN)then else eu[DN+0X1]=MN;eu[DN+2]=PN;nu=Kr[0X5];end;end;else if sr~=15 then do eu[3]=Nu[Kr[6]];end;do nu=nu+1;end;local mv=2;nu=nu+1;Kr=TG[nu];nu=nu+1;local xv=(4);(eu)[4]=Nu[Kr[6]];Kr=TG[nu];nu=nu+0x001;do eu[4]=eu[4][Kr[0X1]];end;Kr=TG[nu];nu=nu+1;do eu[0X4]=eu[0x4][Kr[1]];end;Kr=TG[nu];do nu=nu+0X1;end;(eu)[0x4]=eu[0X4][Kr[0x01]];Kr=TG[nu];nu=nu+0X0001;local Bv=eu[0X4];eu[xv+0X1]=Bv;eu[xv]=Bv[Kr[0X0001]];nu=nu+0X1;xv=4;local lv=0;if mv==0 then else do wu=xv+mv-1;end;end;local hv,Zv=nil,(nil);do if mv~=1 then hv,Zv=Cd(eu[xv](V(eu,xv+0X1,wu)));else do hv,Zv=Cd(eu[xv]());end;end;end;do if lv==0x1 then do wu=xv-0X1;end;else if lv==0 then hv=hv+xv-1;wu=hv;else hv=xv+lv-0X2;do wu=hv+1;end;end;local G1=(0);do for o9=xv,hv do G1=G1+0X0001;eu[o9]=Zv[G1];end;end;end;end;nu=nu+1;nu=nu+0X1;nu=nu+1;xv=3;mv=0;lv=4;if mv==0 then else wu=xv+mv-0X1;end;hv,Zv=nil;if mv~=1 then do hv,Zv=Cd(eu[xv](V(eu,xv+0X1,wu)));end;else do hv,Zv=Cd(eu[xv]());end;end;do if lv~=0x1 then if lv==0x0 then hv=hv+xv-0X1;wu=hv;else hv=xv+lv-0x2;wu=hv+1;end;local PQ=0X0;for xh=xv,hv do PQ=PQ+0X00001;eu[xh]=Zv[PQ];end;else do wu=xv-1;end;end;end;Kr=TG[nu];nu=nu+0X1;do xv=3;end;local Iv=(h(function(...)(t)();do for qR,kR in...do t(true,qR,kR);end;end;end));(Iv)(eu[xv],eu[xv+1],eu[xv+2]);do wu=xv;end;(eu)[xv]=Iv;nu=Kr[0X05];else eu[Kr[0X2]][eu[Kr[5]]]=eu[Kr[0X4]];end;end;end;end;else if sr<0X17 then if not(sr<0X000015)then if sr==22 then else eu[Kr[2]]=eu[Kr[0x0005]]/eu[Kr[4]];end;else nu=Kr[5];end;else if sr>=0X019 then if sr==26 then do repeat local I9,B9,i9=iG,eu,Kr[2];if not(#I9>0)then else local Kw={};for Mh,ah in l,I9 do for p1,B1 in l,ah do if B1[0X1]==B9 and B1[2]>=i9 then local D2=B1[2];if not(not Kw[D2])then else Kw[D2]={B9[D2]};end;do(B1)[1]=Kw[D2];end;(B1)[2]=0X1;end;end;end;end;until true;end;else eu[0X00006]=Nu[Kr[0X6]];Kr=TG[nu];nu=nu+0X001;do eu[6]=eu[0X06][Kr[0X1]];end;nu=nu+1;nu=nu+0X001;Kr=TG[nu];local wF=6;do nu=nu+1;end;(eu)[7]=Nu[Kr[0x6]];do nu=nu+1;end;nu=nu+1;do Kr=TG[nu];end;nu=nu+0x0001;(eu)[0X8]=eu[5][Kr[1]];nu=nu+1;(eu)[wF]=eu[wF](eu[wF+1],eu[wF+0x2]);wu=wF;nu=nu+0X00001;do nu=nu+1;end;do Kr=TG[nu];end;nu=nu+1;do if eu[6]then nu=Kr[0X5];end;end;end;else do if sr~=24 then local ur,jr=Kr[2],(Kr[0X04]-1)*50;local Or=(eu[ur]);for l2=0X1,Kr[0X0005]do Or[jr+l2]=eu[ur+l2];end;else eu[6]=Nu[Kr[0X006]];Kr=TG[nu];local Gu=(0X006);nu=nu+0x1;(eu)[7]=eu[5][Kr[0X1]];do nu=nu+0x01;end;eu[Gu]=eu[Gu](eu[Gu+0X1]);wu=Gu;do Kr=TG[nu];end;nu=nu+1;eu[0x07]=Nu[Kr[0X00006]];nu=nu+1;do nu=nu+1;end;Kr=TG[nu];nu=nu+1;(eu)[7]=eu[7][Kr[1]];nu=nu+1;nu=nu+0X0001;local Qu=(eu[1]);Kr=TG[nu];do nu=nu+1;end;Gu=8;do(eu)[Gu+0X1]=Qu;end;do(eu)[Gu]=Qu[Kr[1]];end;Kr=TG[nu];nu=nu+1;local tu=(3);eu[0X0a]=eu[5][Kr[0x1]];do nu=nu+1;end;do nu=nu+1;end;do nu=nu+0X1;end;Gu=8;local Lu=(0X0);if tu==0 then else wu=Gu+tu-0X1;end;local xu,zu=nil,nil;if tu~=0x1 then xu,zu=Cd(eu[Gu](V(eu,Gu+0X001,wu)));else xu,zu=Cd(eu[Gu]());end;if Lu~=0X0001 then if Lu==0X0 then do xu=xu+Gu-1;end;wu=xu;else xu=Gu+Lu-2;wu=xu+1;end;local BM=(0);for UQ=Gu,xu do BM=BM+0X1;(eu)[UQ]=zu[BM];end;else do wu=Gu-0X1;end;end;nu=nu+0X1;Gu=7;eu[Gu]=eu[Gu](V(eu,Gu+1,wu));wu=Gu;nu=nu+1;nu=nu+0X1;do Kr=TG[nu];end;nu=nu+1;Gu=7;Qu=eu[7];do eu[Gu+1]=Qu;end;do eu[Gu]=Qu[Kr[1]];end;nu=nu+0X1;Gu=7;(eu[Gu])(eu[Gu+1]);wu=Gu-1;do Kr=TG[nu];end;nu=nu+0x01;(eu)[0X0007]=Nu[Kr[0X6]];Kr=TG[nu];nu=nu+1;eu[0X8]=Kr[0X06];nu=nu+1;eu[0x9]=eu[6];nu=nu+0X1;(eu)[10]=eu[0X5];nu=nu+0X00001;Gu=0X7;wu=Gu+4-1;(eu[Gu])(V(eu,Gu+0X001,wu));wu=Gu-0X1;nu=nu+0X1;nu=nu+0X1;Kr=TG[nu];do nu=nu+1;end;eu[7]=eu[0]+Kr[0X1];nu=nu+1;(eu)[0]=eu[0x0007];Kr=TG[nu];nu=nu+1;(eu)[0X07]=Nu[Kr[0X006]];nu=nu+1;do nu=nu+0X1;end;Kr=TG[nu];nu=nu+1;do(eu)[0X0007]=eu[0x07][Kr[1]];end;nu=nu+0X1;nu=nu+0x001;Kr=TG[nu];nu=nu+1;eu[0X0008]=Nu[Kr[6]];nu=nu+1;nu=nu+1;Kr=TG[nu];do nu=nu+1;end;eu[0X00009]=eu[0X005][Kr[1]];nu=nu+1;nu=nu+1;nu=nu+0x1;Gu=0X7;eu[Gu](eu[Gu+0X00001],eu[Gu+0X2]);wu=Gu-1;Kr=TG[nu];nu=nu+0X0001;do nu=Kr[0X005];end;end;end;end;end;end;end;end;end);if Fu then if Xu then if yu==1 then do return eu[Pu]();end;else do return eu[Pu](V(eu,Pu+1,wu));end;end;elseif not(Pu)then else return V(eu,Pu,yu);end;else if C(Xu)=="strin\g"then if M(Xu,"\097t\116e\109\pt\ \116\111\ yi\e\108\d\ \097\cros\s\ \m\101t\097\109e\116h\od\047\C%\045\099a\ll\032b\111un\d\097r\y")then do return coroutine.yield();end;end;do if not(M(Xu,"^.-:%d+: "))then(E)(Xu,0X0);else E("Luraph Script:"..(YG[nu-1]or'\040\105\110t\e\114\110a\l)')..'\:\ '..x(Xu),0);end;end;else E(Xu,0X00000);end;end;end;end;end;end;end;end;else do if not(lG>=101)then if lG<0X60 then do if not(lG>=0X5e)then if lG~=93 then hG=function(...)local eX=0X1;local TX=({});local sX=I();local FX,VX=Cd(...);local cX,RX={[0X0002]=TX,[0X1]=FG},((sX==a and SG or sX));do FX=FX-1;end;for CC=0x00000,FX do if not(IG>CC)then break;else do TX[CC]=VX[CC+0X1];end;end;end;do if not OG then VX=nil;elseif not(zG)then else(TX)[IG]={n=FX>=IG and FX-IG+0x00001 or 0X0000,V(VX,IG+0X0001,FX+1)};end;end;local aX=0X0;if RX==sX then else R(hG,RX);end;local kX,jX,rX,SX=A(function()while true do local vt=(TG[eX]);local Wt=vt[0X3];eX=eX+1;if not(Wt<0x6)then if not(Wt<9)then if not(Wt>=0X00B)then do if Wt==0XA then(TX)[vt[0X0002]]=TX[vt[0X0005]][TX[vt[4]]];else TX[0]=RX[vt[6]];local uB=(TX[0]);vt=TG[eX];do eX=eX+1;end;local pB=0;do(TX)[pB+1]=uB;end;(TX)[pB]=uB[vt[0x0001]];vt=TG[eX];eX=eX+1;(TX)[0x2]=vt[6];eX=eX+1;pB=0X0;(TX)[pB]=TX[pB](TX[pB+0x1],TX[pB+0X2]);do aX=pB;end;vt=TG[eX];eX=eX+0X01;TX[0X1]=RX[vt[0x6]];eX=eX+1;eX=eX+0X1;vt=TG[eX];eX=eX+0X1;do(TX)[1]=TX[1][vt[1]];end;do vt=TG[eX];end;local VB=(JG[vt[0X5]]);local mB=VB[4];do eX=eX+1;end;local vB,FB=nil,#mB;do if FB>0 then vB={};do for k5=1,FB do local o5=mB[k5];if o5[1]==0X0 then vB[k5-0X001]={TX,o5[0X02]};else(vB)[k5-1]=cG[o5[0X2]];end;end;end;H(iG,vB);end;end;do TX[2]=ed(RX,VB,vB);end;do eX=eX+0x01;end;pB=1;(TX[pB])(TX[pB+0X1]);aX=pB-0X00001;eX=eX+0x1;do repeat local c8,A8=iG,(TX);if not(#c8>0)then else local Da=({});for bv,rv in l,c8 do do for BR,DR in l,rv do if not(DR[1]==A8 and DR[2]>=0)then else local za=(DR[2]);do if not Da[za]then(Da)[za]={A8[za]};end;end;DR[1]=Da[za];(DR)[2]=0X1;end;end;end;end;end;until true;end;return;end;end;else if Wt==0X0C then local r5=(JG[vt[0x5]]);local V5=r5[4];local u5=nil;local P5=(#V5);if P5>0X0 then u5={};do for r1=1,P5 do local z1=(V5[r1]);if z1[0X1]~=0X0 then(u5)[r1-1]=cG[z1[0X2]];else(u5)[r1-0X1]={TX,z1[2]};end;end;end;H(iG,u5);end;TX[vt[2]]=ed(RX,r5,u5);else local WY,LY=vt[0X00002],(TX[vt[5]]);(TX)[WY+1]=LY;(TX)[WY]=LY[vt[0x1]];end;end;else if Wt>=7 then if Wt~=0x0008 then if TX[vt[5]]==TX[vt[4]]then else eX=vt[0x2];end;else cX[vt[5]]=TX[vt[2]];end;else do eX=vt[5];end;end;end;else if Wt<0X3 then if not(Wt>=1)then(TX)[vt[2]]=vt[6];else do if Wt~=2 then(TX)[vt[0X2]]={V({},1,vt[5])};else end;end;end;else if not(Wt<0X4)then do if Wt==0x5 then(TX)[vt[2]]=RX[vt[0x6]];else if TX[vt[0x0005]]<TX[vt[0x0004]]then eX=vt[2];end;end;end;else local u9=vt[0X00002];local D9,I9=TX[u9]();if not(D9)then else eX=vt[0X5];(TX)[u9+3]=I9;end;end;end;end;end;end);do if not(kX)then if C(jX)=="string"then if M(jX,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if M(jX,"^\.\-\:\037d\+\: ")then(E)("\Lura\112\h \083\c\114i\p\116:"..(YG[eX-0x001]or"\040\inte\114nal\)")..":\ "..x(jX),0);else E(jX,0);end;else E(jX,0);end;else do if jX then do if SX==0x01 then return TX[rX]();else return TX[rX](V(TX,rX+0X01,aX));end;end;elseif not(rX)then else return V(TX,rX,SX);end;end;end;end;end;else do hG=function(...)local rM=(1);local aM={};local AM=(0x0);local vM={[0X1]=FG,[0X0002]=aM};local UM=(I());local jM=((UM==a and SG or UM));local kM,MM=Cd(...);kM=kM-0X1;for Ru=0X0,kM do do if IG>Ru then(aM)[Ru]=MM[Ru+0X001];else break;end;end;end;if not OG then MM=nil;elseif zG then aM[IG]={n=kM>=IG and kM-IG+0X001 or 0,V(MM,IG+1,kM+1)};end;if jM==UM then else R(hG,jM);end;local oM,QM,uM,hM=A(function()while true do local Ui=TG[rM];local Ri=(Ui[0X3]);rM=rM+1;do if Ri>=0X6 then do if not(Ri<9)then if not(Ri>=0XA)then(aM)[Ui[2]]=jM[Ui[6]];else do if Ri~=11 then local BJ=JG[Ui[5]];local UJ,fJ=BJ[4],(nil);local SJ=(#UJ);do if not(SJ>0X0000)then else fJ={};for iD=1,SJ do local TD=(UJ[iD]);if TD[1]==0X0000 then fJ[iD-0x1]={aM,TD[2]};else fJ[iD-1]=cG[TD[2]];end;end;(H)(iG,fJ);end;end;aM[Ui[2]]=ed(jM,BJ,fJ);else(aM)[Ui[0X2]]=Ui[6];end;end;end;else if not(Ri>=0x007)then(aM)[0X0]=jM[Ui[6]];local Hp=0X0;rM=rM+0X1;rM=rM+0X1;do Ui=TG[rM];end;rM=rM+1;local jp=aM[0X0];aM[Hp+0X1]=jp;do(aM)[Hp]=jp[Ui[1]];end;Ui=TG[rM];do rM=rM+1;end;aM[2]=Ui[6];do rM=rM+0X01;end;Hp=0;aM[Hp]=aM[Hp](aM[Hp+0X1],aM[Hp+2]);do AM=Hp;end;do Ui=TG[rM];end;rM=rM+0X1;(aM)[0X1]=jM[Ui[6]];do Ui=TG[rM];end;do rM=rM+1;end;do aM[1]=aM[1][Ui[1]];end;Ui=TG[rM];local Rp=(JG[Ui[5]]);do rM=rM+1;end;local Bp=(nil);local up=Rp[0X0004];local Mp=#up;do if Mp>0 then Bp={};for BE=0X1,Mp do local HE=up[BE];if HE[1]==0X0 then(Bp)[BE-0X001]={aM,HE[2]};else Bp[BE-1]=cG[HE[0x2]];end;end;H(iG,Bp);end;end;aM[2]=ed(jM,Rp,Bp);rM=rM+1;Hp=0x00001;(aM[Hp])(aM[Hp+1]);AM=Hp-0X1;rM=rM+1;do rM=rM+1;end;do rM=rM+0X1;end;repeat local J4,P4=iG,(aM);if#J4>0x0 then local Tx={};do for XB,CB in l,J4 do for NY,wY in l,CB do if not(wY[1]==P4 and wY[0x00002]>=0)then else local sB=(wY[2]);if not Tx[sB]then Tx[sB]={P4[sB]};end;(wY)[1]=Tx[sB];wY[2]=0X1;end;end;end;end;end;until true;return;else if Ri==0X8 then aM[Ui[0X002]]=aM[Ui[5]];else(aM)[Ui[0x2]]={V({},1,Ui[5])};end;end;end;end;else do if not(Ri>=0X3)then if not(Ri<1)then if Ri~=0X002 then if not(aM[Ui[5]]<=aM[Ui[4]])then rM=Ui[0x02];end;else do for Rg=Ui[2],Ui[5]do(aM)[Rg]=nil;end;end;end;else do rM=Ui[5];end;end;else if Ri<0X4 then if not(aM[Ui[2]])then else rM=Ui[5];end;else if Ri==5 then local zA,fA,bA=Ui[0X02],Ui[0X0005],(Ui[0X00004]);do if fA==0 then else do AM=zA+fA-1;end;end;end;local nA,iA=nil,(nil);if fA~=0X00001 then nA,iA=Cd(aM[zA](V(aM,zA+0x1,AM)));else nA,iA=Cd(aM[zA]());end;if bA==0X1 then AM=zA-0X1;else if bA~=0X0 then nA=zA+bA-2;AM=nA+1;else nA=nA+zA-1;do AM=nA;end;end;local Ic=(0);do for gu=zA,nA do do Ic=Ic+0x1;end;aM[gu]=iA[Ic];end;end;end;else end;end;end;end;end;end;end;end);do if oM then do if QM then do if hM==0X01 then do return aM[uM]();end;else do return aM[uM](V(aM,uM+0x1,AM));end;end;end;elseif not(uM)then else return V(aM,uM,hM);end;end;else if C(QM)=='\st\114\i\110g'then do if M(QM,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;end;if M(QM,'\^\.\045\:\037\d+\:\ ')then E("Luraph Script:"..(YG[rM-1]or'\040\in\116\ern\097\108\041')..": "..x(QM),0);else(E)(QM,0);end;else(E)(QM,0X00);end;end;end;end;end;end;else if lG~=95 then hG=function(...)local PP,fP=0,{};local rP=(I());local KP=({[0X0002]=fP,[0X1]=FG});local ZP,CP=Cd(...);ZP=ZP-1;local VP=1;for W2=0X00,ZP do if not(IG>W2)then do break;end;else(fP)[W2]=CP[W2+0X00001];end;end;local hP=(rP==a and SG or rP);if not OG then CP=nil;elseif not(zG)then else(fP)[IG]={n=ZP>=IG and ZP-IG+0X0001 or 0,V(CP,IG+1,ZP+1)};end;if hP==rP then else R(hG,hP);end;local YP,TP,eP,oP=A(function()while true do local Ll=(TG[VP]);local Sl=Ll[0X0003];VP=VP+0X1;do if Sl<11 then if not(Sl>=5)then if Sl<2 then do if Sl~=0x1 then do fP[Ll[0X00002]]=Ll[6];end;else fP[Ll[0X0002]]={V({},1,Ll[5])};end;end;else if not(Sl>=3)then local ds=cG[1];fP[1]=ds[0X1][ds[2]];VP=VP+0X1;VP=VP+0x1;Ll=TG[VP];do VP=VP+1;end;if not(fP[1])then else VP=Ll[5];end;else if Sl~=0X4 then fP[1]=hP[Ll[0X6]];VP=VP+0X1;VP=VP+0x1;VP=VP+1;PP=1;(fP)[PP]=fP[PP]();VP=VP+1;do VP=VP+0x0001;end;Ll=TG[VP];do VP=VP+1;end;hP[Ll[0X6]]=fP[0X1];Ll=TG[VP];VP=VP+0X1;local Yo=(0X01);do(fP)[1]=hP[Ll[6]];end;VP=VP+1;VP=VP+0X00001;Ll=TG[VP];do VP=VP+1;end;local bo=(cG[0X0]);(fP)[1]=fP[0x1][Ll[1]];Ll=TG[VP];VP=VP+1;(fP)[0X1]=fP[0X1][Ll[0X0001]];do Ll=TG[VP];end;VP=VP+1;fP[0x0001]=fP[1][Ll[0X0001]];Ll=TG[VP];VP=VP+0x1;local Vo=fP[0X00001];do(fP)[Yo+0x1]=Vo;end;fP[Yo]=Vo[Ll[1]];VP=VP+0X0001;fP[0X3]=bo[1][bo[0x00002]];VP=VP+0X1;Yo=1;fP[Yo](fP[Yo+1],fP[Yo+0X2]);PP=Yo-0X0001;VP=VP+1;do VP=VP+0X00001;end;Ll=TG[VP];do VP=VP+1;end;VP=Ll[0x5];else local Ra=cG[0];do(fP)[0X0002]=Ra[1][Ra[2]];end;do VP=VP+1;end;do VP=VP+1;end;Ll=TG[VP];VP=VP+0x1;fP[0X3]=hP[Ll[0X06]];Ll=TG[VP];VP=VP+0X1;do fP[0X03]=fP[3][Ll[0X001]];end;do VP=VP+1;end;do VP=VP+0X0001;end;Ll=TG[VP];VP=VP+0x1;if fP[2]==fP[0X3]then VP=Ll[0X2];end;end;end;end;else if not(Sl>=0x008)then if Sl<0X006 then do fP[Ll[0X2]]=hP[Ll[0x006]];end;else if Sl==0x7 then local zP=cG[Ll[0x5]];(fP)[Ll[0X0002]]=zP[1][zP[0X2]];else repeat local w4,d4=iG,(fP);if not(#w4>0X0)then else local qc={};for qi,bi in l,w4 do for T1,N1 in l,bi do if N1[0x1]==d4 and N1[2]>=0X0 then local ta=N1[0x00002];do if not qc[ta]then qc[ta]={d4[ta]};end;end;N1[0x00001]=qc[ta];do N1[2]=0x1;end;end;end;end;end;until true;return;end;end;else if Sl>=9 then if Sl==10 then local jV=(JG[Ll[0X5]]);local kV=nil;local JV=jV[0X04];local sV=#JV;if sV>0x00000 then kV={};do for II=0X1,sV do local aI=(JV[II]);do if aI[0x0001]~=0X0 then do kV[II-0X1]=cG[aI[0X2]];end;else(kV)[II-1]={fP,aI[0X00002]};end;end;end;end;H(iG,kV);end;do(fP)[Ll[0x2]]=ed(hP,jV,kV);end;else fP[Ll[0X00002]]=fP[Ll[0X5]]^fP[Ll[4]];end;else end;end;end;else if Sl<0x11 then if not(Sl<14)then if Sl>=15 then if Sl==0X10 then fP[Ll[0X2]]=f(fP[Ll[5]]);else local gG=(cG[2]);do(fP)[3]=gG[0x1][gG[2]];end;VP=VP+0X001;PP=0X3;do(fP)[PP]=fP[PP]();end;Ll=TG[VP];VP=VP+1;if not(not fP[3])then else VP=Ll[0X00005];end;end;else local mX=cG[0x0];(fP)[1]=mX[0X1][mX[2]];VP=VP+1;VP=VP+1;Ll=TG[VP];VP=VP+1;(fP)[2]=hP[Ll[6]];Ll=TG[VP];VP=VP+1;do(fP)[0X2]=fP[2][Ll[0X1]];end;Ll=TG[VP];VP=VP+1;if fP[0X1]~=fP[0X2]then else VP=Ll[2];end;end;else do if not(Sl>=12)then fP[Ll[2]]=b(fP[Ll[5]],fP[Ll[4]]);else if Sl~=0xd then fP[0X1]=true;local YX=cG[0X0];Ll=TG[VP];VP=VP+0X1;(hP)[Ll[6]]=fP[0X00001];Ll=TG[VP];do VP=VP+0X0001;end;fP[1]=hP[Ll[6]];VP=VP+1;VP=VP+1;VP=VP+1;fP[2]=YX[0x0001][YX[2]];do Ll=TG[VP];end;do VP=VP+0x001;end;do(fP)[0X2]=fP[0X00002][Ll[0x1]];end;do VP=VP+1;end;VP=VP+0X1;do Ll=TG[VP];end;VP=VP+0X01;fP[3]=hP[Ll[0X0006]];Ll=TG[VP];VP=VP+1;do fP[3]=fP[3][Ll[1]];end;Ll=TG[VP];do VP=VP+0X1;end;fP[0X4]=Ll[6];do Ll=TG[VP];end;local tX=nil;do VP=VP+0X001;end;fP[5]=Ll[6];do Ll=TG[VP];end;VP=VP+0x0001;do(fP)[0X6]=Ll[0X6];end;local HX=3;VP=VP+0X1;PP=HX+0X4-0X1;(fP)[HX]=fP[HX](V(fP,HX+0X1,PP));PP=HX;do VP=VP+1;end;(fP)[2]=fP[2]+fP[3];Ll=TG[VP];do VP=VP+1;end;local KX=(JG[Ll[5]]);local RX=KX[0X004];local wX=(#RX);if wX>0X0 then tX={};for zU=1,wX do local lU=(RX[zU]);if lU[0X1]~=0X0 then do(tX)[zU-0X0001]=cG[lU[2]];end;else do tX[zU-1]={fP,lU[0X0002]};end;end;end;H(iG,tX);end;(fP)[3]=ed(hP,KX,tX);VP=VP+0X00001;HX=0X01;(fP[HX])(fP[HX+0X1],fP[HX+2]);PP=HX-0X1;VP=VP+1;(fP)[1]=false;Ll=TG[VP];do VP=VP+0x1;end;hP[Ll[0X6]]=fP[0X01];Ll=TG[VP];VP=VP+1;VP=Ll[5];else do for kk=Ll[0X0002],Ll[0X5]do fP[kk]=nil;end;end;end;end;end;end;else if Sl<20 then if Sl>=18 then if Sl~=0X00013 then if not(not fP[Ll[2]])then else VP=Ll[0x05];end;else do repeat local C3,Y3,r3=iG,fP,(Ll[0X2]);if#C3>0 then local yz={};for lY,OY in l,C3 do for nw,bw in l,OY do if bw[1]==Y3 and bw[2]>=r3 then local xQ=bw[0X0002];if not(not yz[xQ])then else yz[xQ]={Y3[xQ]};end;bw[1]=yz[xQ];do(bw)[0X2]=0X1;end;end;end;end;end;until true;end;end;else do VP=Ll[5];end;end;else if Sl>=21 then if Sl==22 then local Gw=(cG[0x1]);(fP)[1]=Gw[1][Gw[0x2]];VP=VP+1;VP=VP+0x1;Ll=TG[VP];do VP=VP+1;end;if not fP[1]then VP=Ll[0X005];end;else fP[1]=hP[Ll[6]];VP=VP+1;do VP=VP+1;end;VP=VP+0x00001;PP=1;fP[PP]=fP[PP]();Ll=TG[VP];VP=VP+1;(fP)[0x2]=hP[Ll[6]];VP=VP+1;fP[1]=fP[0X00001]-fP[0X2];Ll=TG[VP];do VP=VP+0x1;end;do if not(fP[0X1]<Ll[0X01])then VP=Ll[0X2];end;end;end;else local jZ,OZ=Ll[0x2],Ll[5];PP=jZ+OZ-1;repeat local OE,AE=iG,(fP);if#OE>0 then local JK={};do for Ck,wk in l,OE do for V1,y1 in l,wk do if y1[0X001]==AE and y1[2]>=0x0 then local Me=y1[2];if not JK[Me]then(JK)[Me]={AE[Me]};end;(y1)[1]=JK[Me];y1[0X002]=1;end;end;end;end;end;until true;return true,jZ,OZ;end;end;end;end;end;end;end);do if YP then do if TP then if oP==1 then return fP[eP]();else do return fP[eP](V(fP,eP+1,PP));end;end;elseif not(eP)then else return V(fP,eP,oP);end;end;else if C(TP)=="\st\114i\110\g"then if M(TP,"at\116em\pt \116\111 \y\i\101\108d \097\099r\o\s\115\032\m\etam\etho\d\047\C\%\-\c\097\l\l\ b\ou\110\d\097\114y")then do return coroutine.yield();end;end;if M(TP,"\^\.-\:\%\d+\:\ ")then(E)("\076\117r\097\p\h\ \S\c\114\105\p\116:"..(YG[VP-0X1]or'\(i\110t\101r\110\097l\)')..": "..x(TP),0);else(E)(TP,0);end;else E(TP,0x0);end;end;end;end;else hG=function(...)local XM=0;local cM,aM=0x001,({});local AM={[0X1]=FG,[0X0002]=aM};local ZM=I();local RM,OM=Cd(...);local jM=(ZM==a and SG or ZM);RM=RM-1;for Lw=0X0,RM do if not(IG>Lw)then do break;end;else(aM)[Lw]=OM[Lw+0X1];end;end;if not OG then do OM=nil;end;elseif not(zG)then else aM[IG]={n=RM>=IG and RM-IG+1 or 0x0,V(OM,IG+0x00001,RM+1)};end;if jM~=ZM then(R)(hG,jM);end;local LM,KM,fM,EM=A(function()do while true do local ku=TG[cM];local Zu=(ku[3]);cM=cM+1;do if not(Zu>=11)then do if Zu<0X05 then if not(Zu<2)then if not(Zu>=0x00003)then(aM)[ku[2]]=aM[ku[5]][aM[ku[4]]];else do if Zu~=4 then local wV,WV=ku[2],ku[5];XM=wV+WV-1;repeat local eO,SO=iG,aM;do if not(#eO>0)then else local lp={};for WB,NB in l,eO do for zC,rC in l,NB do if rC[1]==SO and rC[2]>=0X00 then local dp=rC[2];do if not(not lp[dp])then else lp[dp]={SO[dp]};end;end;do(rC)[1]=lp[dp];end;rC[0X2]=0x1;end;end;end;end;end;until true;do return true,wV,WV;end;else local uB=(cG[1]);aM[0X00000]=uB[1][uB[2]];ku=TG[cM];local CB=0;cM=cM+0X0001;local wB=aM[0X0];aM[CB+1]=wB;do aM[CB]=wB[ku[0X1]];end;cM=cM+0X00001;do CB=0;end;(aM)[CB]=aM[CB](aM[CB+1]);XM=CB;ku=TG[cM];cM=cM+0x01;cM=ku[0X5];end;end;end;else if Zu==1 then(aM)[ku[0X00002]]=aM[ku[5]]>aM[ku[0X00004]];else(aM)[ku[2]]=jM[ku[6]];end;end;else if not(Zu<8)then if not(Zu<0X009)then if Zu~=0X0a then local t7=cG[ku[5]];(aM)[ku[0X002]]=t7[1][t7[0X2]];else aM[ku[2]]={V({},1,ku[5])};end;else if not(not aM[ku[2]])then else cM=ku[0x5];end;end;else if not(Zu>=0x6)then local IQ=JG[ku[5]];local lQ=(nil);local ZQ=IQ[4];local sQ=#ZQ;if sQ>0 then do lQ={};end;for Ol=1,sQ do local Ql=ZQ[Ol];do if Ql[0X1]~=0 then do(lQ)[Ol-0x01]=cG[Ql[2]];end;else lQ[Ol-0X00001]={aM,Ql[0X2]};end;end;end;H(iG,lQ);end;do aM[ku[2]]=ed(jM,IQ,lQ);end;else do if Zu==7 then(aM)[0]=jM[ku[6]];cM=cM+1;cM=cM+1;ku=TG[cM];cM=cM+1;aM[1]=ku[0X6];local eZ=(0X00);cM=cM+1;aM[eZ]=aM[eZ](aM[eZ+0X1]);XM=eZ;cM=cM+1;cM=cM+1;cM=cM+1;(aM)[0X0]=not aM[0];ku=TG[cM];cM=cM+0X1;cM=ku[5];else repeat local mg,Ag=iG,aM;if#mg>0X0 then local te={};for tw,Fw in l,mg do for dL,XL in l,Fw do if not(XL[0x01]==Ag and XL[0X0002]>=0X00)then else local iC=(XL[2]);if not te[iC]then te[iC]={Ag[iC]};end;do XL[0x01]=te[iC];end;(XL)[0X2]=1;end;end;end;end;until true;local Sf=ku[2];return false,Sf,Sf;end;end;end;end;end;end;else if Zu>=17 then if not(Zu>=20)then if not(Zu<18)then if Zu==0X13 then for G8=ku[0x0002],ku[0x5]do do aM[G8]=nil;end;end;else cM=ku[5];end;else AM[ku[0X05]]=aM[ku[2]];end;else if Zu>=0X15 then if Zu==22 then do(aM)[0X000]=jM[ku[6]];end;ku=TG[cM];cM=cM+1;(aM)[0]=aM[0][ku[0X1]];ku=TG[cM];cM=cM+0X1;cM=ku[0X5];else local uy=(ku[2]);local Yy,Xy=aM[uy]();if Yy then cM=ku[0X5];(aM)[uy+0x00003]=Xy;end;end;else do if not(not(aM[ku[5]]<aM[ku[4]]))then else do cM=ku[2];end;end;end;end;end;else if not(Zu>=14)then if Zu<12 then aM[ku[2]]=ku[6];else if Zu==13 then else(aM)[ku[2]]=aM[ku[0x5]]~=aM[ku[4]];end;end;else if Zu>=0XF then do if Zu~=16 then do aM[0X000]=jM[ku[6]];end;do cM=cM+0x0001;end;do cM=cM+0X001;end;ku=TG[cM];do cM=cM+1;end;aM[0X0]=aM[0X0][ku[1]];ku=TG[cM];cM=cM+0X0001;do aM[0]=aM[0X0]>ku[0X001];end;ku=TG[cM];cM=cM+0X1;do cM=ku[5];end;else repeat local C2,J2=iG,aM;if#C2>0 then local Na=({});for Vh,Qh in l,C2 do do for S_,h_ in l,Qh do if not(h_[1]==J2 and h_[2]>=0)then else local UQ=h_[2];if not Na[UQ]then Na[UQ]={J2[UQ]};end;do(h_)[1]=Na[UQ];end;do(h_)[2]=0x1;end;end;end;end;end;end;until true;do return;end;end;end;else local se=ku[0X00005];local je=(aM[se]);for UP=se+1,ku[0X4]do je=je..aM[UP];end;(aM)[ku[2]]=je;end;end;end;end;end;end;end;end);if not(LM)then if C(KM)=="strin\103"then do if M(KM,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;end;if M(KM,"^.-:%d+: ")then(E)('Lura\ph\ \083\cr\105p\116\:'..(YG[cM-1]or"\(\105\110\116\erna\l\041")..'\058\032'..x(KM),0X0000);else(E)(KM,0);end;else E(KM,0X0);end;else do if KM then if EM==0X1 then return aM[fM]();else do return aM[fM](V(aM,fM+0x001,XM));end;end;elseif fM then return V(aM,fM,EM);end;end;end;end;end;end;end;else do if lG<0X62 then do if lG~=0X61 then do hG=function(...)local ot=(1);local Tt=({});local vt=(I());local Nt,ct=Cd(...);local Gt,Wt={[0X0002]=Tt,[0X1]=FG},((vt==a and SG or vt));Nt=Nt-1;do for eC=0x0,Nt do do if not(IG>eC)then do break;end;else(Tt)[eC]=ct[eC+0X1];end;end;end;end;if not OG then ct=nil;elseif not(zG)then else do Tt[IG]={n=Nt>=IG and Nt-IG+1 or 0,V(ct,IG+1,Nt+0X1)};end;end;local Qt=0x00;if Wt==vt then else(R)(hG,Wt);end;local jt,Yt,St,pt=A(function()while true do local r1=TG[ot];local F1=(r1[3]);ot=ot+1;if F1<8 then do if not(F1>=0X4)then do if not(F1<2)then if F1==0X03 then(Tt)[r1[0X2]]=Wt[r1[0X06]];else Tt[0X0]=Wt[r1[6]];do ot=ot+0x00001;end;ot=ot+0X1;do r1=TG[ot];end;ot=ot+0X1;(Tt[0])[r1[6]]=r1[0x1];r1=TG[ot];do ot=ot+0X001;end;ot=r1[0X5];end;else if F1~=1 then(Tt)[0]=Wt[r1[6]];ot=ot+1;ot=ot+1;local FJ=(Tt[0]);r1=TG[ot];do ot=ot+0X1;end;local fJ=0X0;(Tt)[fJ+1]=FJ;do Tt[fJ]=FJ[r1[1]];end;do r1=TG[ot];end;do ot=ot+1;end;do Tt[0X0002]=r1[0X006];end;ot=ot+0x0001;fJ=0;(Tt)[fJ]=Tt[fJ](Tt[fJ+0X01],Tt[fJ+0X2]);Qt=fJ;r1=TG[ot];ot=ot+0X1;Tt[0x0]=Tt[0][r1[1]];r1=TG[ot];ot=ot+0X01;fJ=0X00;FJ=Tt[0];do Tt[fJ+1]=FJ;end;(Tt)[fJ]=FJ[r1[1]];ot=ot+1;do fJ=0;end;Tt[fJ]=Tt[fJ](Tt[fJ+0X1]);Qt=fJ;r1=TG[ot];do ot=ot+1;end;if not(not Tt[0])then else ot=r1[5];end;else(Tt)[r1[0X2]]=-Tt[r1[0X5]];end;end;end;else do if F1<0x6 then if F1~=5 then local Mj=JG[r1[5]];local ij=Mj[4];local Qj=nil;local Cj=(#ij);if not(Cj>0X0000)then else Qj={};for cb=1,Cj do local jb=ij[cb];do if jb[0X1]==0X000 then Qj[cb-0x1]={Tt,jb[0X2]};else(Qj)[cb-0X00001]=cG[jb[2]];end;end;end;(H)(iG,Qj);end;do(Tt)[r1[2]]=ed(Wt,Mj,Qj);end;else do Tt[r1[2]]=Tt[r1[0X5]]>=Tt[r1[4]];end;end;else do if F1==7 then repeat local gY,jY=iG,Tt;if not(#gY>0)then else local zN={};for U5,t5 in l,gY do for oZ,hZ in l,t5 do if hZ[1]==jY and hZ[2]>=0x0 then local bm=hZ[2];if not(not zN[bm])then else zN[bm]={jY[bm]};end;do(hZ)[1]=zN[bm];end;(hZ)[2]=1;end;end;end;end;until true;return;else(Tt)[r1[2]]=T(Tt[r1[5]],Tt[r1[4]]);end;end;end;end;end;end;else if not(F1<0X000C)then if not(F1>=14)then if F1==0XD then(Tt)[r1[2]]=b(Tt[r1[0x5]],Tt[r1[4]]);else ot=r1[5];end;else if F1~=0Xf then do if not(Tt[r1[5]]<=Tt[r1[4]])then else ot=r1[2];end;end;else(Tt)[r1[0X002]]=Tt[r1[0X5]]<Tt[r1[0X4]];end;end;else if F1<0X000a then do if F1~=0x09 then else Tt[r1[0X2]]=r1[6];end;end;else if F1~=0xB then do Tt[r1[2]]={V({},1,r1[0X0005])};end;else do if Tt[r1[0X00005]]<Tt[r1[4]]then ot=r1[2];end;end;end;end;end;end;end;end);do if not(jt)then if C(Yt)~="string"then(E)(Yt,0);else if M(Yt,"a\116\116e\m\112\116\032\116\o\ yi\e\108d \097\cr\o\s\s\032m\e\116a\m\e\116ho\100/\C%-\c\097l\l\032b\o\117n\da\114\y")then return coroutine.yield();end;if M(Yt,"^.-:%d+: ")then(E)("\Lur\097\112\h \083\099r\i\112\116\058"..(YG[ot-1]or"(internal)")..": "..x(Yt),0X0);else(E)(Yt,0X0);end;end;else if Yt then if pt==0X1 then return Tt[St]();else do return Tt[St](V(Tt,St+1,Qt));end;end;elseif not(St)then else do return V(Tt,St,pt);end;end;end;end;end;end;else hG=function(...)local qX=0x1;local tX={};local pX=0X00000;local UX={[0X1]=FG,[0X0002]=tX};local aX=I();local oX,YX=Cd(...);oX=oX-1;for W5=0X0,oX do if IG>W5 then tX[W5]=YX[W5+1];else break;end;end;local mX=(aX==a and SG or aX);do if not OG then YX=nil;elseif not(zG)then else do tX[IG]={n=oX>=IG and oX-IG+1 or 0,V(YX,IG+0x1,oX+0x00001)};end;end;end;if mX~=aX then R(hG,mX);end;local RX,hX,DX,cX=A(function()while true do local nM=(TG[qX]);local PM=(nM[0X03]);qX=qX+1;do if PM>=6 then if not(PM<0X00009)then if not(PM>=11)then if PM~=0xa then(tX)[nM[2]]=b(tX[nM[0X0005]],tX[nM[4]]);else(tX)[0X00000]=mX[nM[0x6]];do nM=TG[qX];end;local VO=0;qX=qX+0X1;local pO=(tX[0X0]);tX[VO+0X1]=pO;do(tX)[VO]=pO[nM[0x1]];end;nM=TG[qX];qX=qX+0X0001;tX[2]=nM[6];qX=qX+1;VO=0x00000;tX[VO]=tX[VO](tX[VO+1],tX[VO+0X0002]);pX=VO;qX=qX+1;do qX=qX+1;end;nM=TG[qX];qX=qX+0X001;(tX)[1]=mX[nM[6]];do qX=qX+1;end;qX=qX+0x001;nM=TG[qX];qX=qX+0X1;tX[1]=tX[1][nM[1]];local XO=(nil);nM=TG[qX];qX=qX+0X001;local fO=JG[nM[5]];local SO=fO[0X4];local DO=#SO;if DO>0X0 then XO={};do for h2=0x1,DO do local D2=(SO[h2]);if D2[0X01]~=0X0 then XO[h2-0X1]=cG[D2[2]];else XO[h2-1]={tX,D2[2]};end;end;end;H(iG,XO);end;(tX)[2]=ed(mX,fO,XO);qX=qX+0X01;VO=1;(tX[VO])(tX[VO+0X01]);do pX=VO-1;end;qX=qX+0X1;do repeat local fD,vD=iG,tX;do if#fD>0X00 then local Q7=({});do for Vg,yg in l,fD do for EO,xO in l,yg do do if xO[0X0001]==vD and xO[0X2]>=0x000 then local t2=xO[0x2];if not Q7[t2]then(Q7)[t2]={vD[t2]};end;xO[0x1]=Q7[t2];(xO)[2]=1;end;end;end;end;end;end;end;until true;end;do return;end;end;else if PM~=0Xc then do for gE=nM[2],nM[0x00005]do(tX)[gE]=nil;end;end;else tX[nM[0X2]]=w(tX[nM[5]],tX[nM[0x04]]);end;end;else do if PM<7 then(tX)[nM[2]]={V({},0X1,nM[5])};else do if PM~=8 then qX=nM[0X5];else local Pj=JG[nM[5]];local lj,Mj=Pj[4],nil;local Tj=#lj;if not(Tj>0X0)then else Mj={};for Q4=0X1,Tj do local R4=lj[Q4];if R4[1]==0X0 then Mj[Q4-0x1]={tX,R4[2]};else Mj[Q4-0X1]=cG[R4[2]];end;end;H(iG,Mj);end;do(tX)[nM[2]]=ed(mX,Pj,Mj);end;end;end;end;end;end;else do if PM<3 then if not(PM<0X00001)then if PM==2 then(tX)[nM[0x2]]=mX[nM[6]];else(tX)[nM[0X00002]]=tX[nM[0X5]]>tX[nM[0X4]];end;else(tX)[nM[0X0002]]=true;end;else if not(PM<0X004)then do if PM~=0x5 then else do tX[nM[2]]=nM[6];end;end;end;else tX[nM[0X2]]=nM[6];end;end;end;end;end;end;end);do if RX then if hX then if cX~=0x1 then do return tX[DX](V(tX,DX+0X01,pX));end;else return tX[DX]();end;elseif DX then return V(tX,DX,cX);end;else if C(hX)=="string"then if M(hX,"\097\116t\101m\p\116\ \116\o\ \yi\e\l\d\ a\c\114\111s\s\ \m\e\116a\m\e\116h\o\100\/\C%\-c\097\l\l\ \098\ou\110\100a\114y")then return coroutine.yield();end;if not(M(hX,"\094\.-\058%d\043\: "))then(E)(hX,0);else(E)("Luraph Script:"..(YG[qX-0x1]or"(internal)").."\058\032"..x(hX),0X0);end;else E(hX,0);end;end;end;end;end;end;else do if not(lG<0X000063)then if lG~=100 then do hG=function(...)local vM={};local kM=(0X1);local pM=(I());local rM,yM=Cd(...);local lM=(pM==a and SG or pM);local dM=({[0X1]=FG,[0X0002]=vM});rM=rM-1;do for Up=0,rM do do if not(IG>Up)then break;else(vM)[Up]=yM[Up+1];end;end;end;end;if not OG then yM=nil;elseif zG then do vM[IG]={n=rM>=IG and rM-IG+1 or 0X0000,V(yM,IG+0x1,rM+0x001)};end;end;if lM==pM then else(R)(hG,lM);end;local xM=(0);while true do local t9=(TG[kM]);local g9=t9[0x3];kM=kM+0X00001;do return(function(H,q,...)local C=Client.Backpack:GetChildren();for s=1,#C do local a=C[s];if a.Name:lower():find("fruit")then return true;end;end;local h=Client.Character:GetChildren();for n=1,#h do local O=h[n];if O:IsA("Tool")and O.Name:lower():find("fruit")then return true;end;end;end)(vM,cG,...);end;end;end;end;else hG=function(...)local iU=(0X0);local cU=({});local hU=0X1;local WU=({[0X0002]=cU,[0X1]=FG});local ZU=(I());local DU,pU=Cd(...);local UU=(ZU==a and SG or ZU);DU=DU-0X0001;for zl=0,DU do do if IG>zl then(cU)[zl]=pU[zl+1];else break;end;end;end;do if not OG then do pU=nil;end;elseif zG then cU[IG]={n=DU>=IG and DU-IG+0X00001 or 0,V(pU,IG+1,DU+1)};end;end;if UU~=ZU then(R)(hG,UU);end;local oU,SU,lU,EU=A(function()while true do local ZE=TG[hU];local eE=(ZE[3]);hU=hU+1;if not(eE<11)then if not(eE<16)then if not(eE>=0X13)then do if eE<17 then cU[ZE[0x00002]]=-cU[ZE[0x5]];else if eE==0X12 then(cU)[ZE[0X2]]=cU[ZE[5]]*cU[ZE[4]];else cU[ZE[0x2]]=cU[ZE[0X05]]%cU[ZE[0x004]];end;end;end;else do if eE<20 then do repeat local mc,Ac=iG,cU;if not(#mc>0)then else local Zr=({});for rm,lm in l,mc do for iM,lM in l,lm do if lM[0X1]==Ac and lM[0x2]>=0 then local zb=(lM[2]);do if not Zr[zb]then do Zr[zb]={Ac[zb]};end;end;end;(lM)[0X1]=Zr[zb];do lM[2]=1;end;end;end;end;end;until true;end;do return;end;else if eE==21 then cU[0]=UU[ZE[6]];hU=hU+1;hU=hU+1;do ZE=TG[hU];end;hU=hU+1;(cU)[0]=cU[0X00][ZE[0X00001]];ZE=TG[hU];hU=hU+0X1;if not(not cU[0])then else hU=ZE[5];end;else(cU)[0]=UU[ZE[0x00006]];hU=hU+0X1;hU=hU+0X01;ZE=TG[hU];hU=hU+0X1;if cU[0X0]then hU=ZE[0X00005];end;end;end;end;end;else if eE<13 then if eE~=0X0c then if cU[ZE[0X00005]]<=cU[ZE[4]]then do hU=ZE[2];end;end;else do(cU)[ZE[2]]=cU[ZE[5]]+cU[ZE[4]];end;end;else if eE>=0X00E then if eE~=0XF then cU[ZE[0X0002]]=UU[ZE[6]];else do if cU[ZE[5]]==ZE[0x0001]then else do hU=ZE[2];end;end;end;end;else if cU[ZE[0X5]]~=cU[ZE[0x0004]]then hU=ZE[2];end;end;end;end;else do if eE>=5 then do if eE>=8 then if not(eE>=0x9)then local Ui=ZE[0X02];local Yi,di=cU[Ui]();if Yi then for oe=1,ZE[4]do do cU[Ui+oe]=di[oe];end;end;hU=ZE[0X5];end;else if eE~=10 then for p5=ZE[2],ZE[0X5]do cU[p5]=nil;end;else(cU)[0x00000]=UU[ZE[6]];do hU=hU+0X1;end;hU=hU+0X1;do ZE=TG[hU];end;hU=hU+1;(cU)[0X1]=ZE[0X006];ZE=TG[hU];do hU=hU+1;end;(cU)[2]=ZE[6];do ZE=TG[hU];end;hU=hU+1;cU[3]=ZE[6];local sN=(0);hU=hU+1;do iU=sN+0X4-0x01;end;(cU)[sN]=cU[sN](V(cU,sN+1,iU));do iU=sN;end;ZE=TG[hU];hU=hU+1;if cU[0x0]~=ZE[1]then else hU=ZE[0X00002];end;end;end;else do if not(eE<0X006)then do if eE==0X07 then else local eO=ZE[0X0002];local NO=(h(function(...)(t)();for Na,xa,da,za,ma,Ra,Aa,ca,Pa,ua in...do t(true,{Na,xa,da,za,ma,Ra,Aa,ca,Pa,ua});end;end));(NO)(cU[eO],cU[eO+1],cU[eO+0X2]);iU=eO;(cU)[eO]=NO;hU=ZE[5];end;end;else(cU)[ZE[0X2]]=ZE[6];end;end;end;end;else if not(eE>=0X2)then if eE==0X1 then cU[0X000]=UU[ZE[0X6]];ZE=TG[hU];hU=hU+1;(cU)[1]=ZE[6];do hU=hU+1;end;local PY=0;(cU)[PY]=cU[PY](cU[PY+0X1]);iU=PY;hU=hU+0X1;do hU=hU+1;end;ZE=TG[hU];hU=hU+0X1;if not(not cU[0X00])then else hU=ZE[0X5];end;else(cU)[ZE[0X002]]={V({},0x1,ZE[0X5])};end;else if not(eE<0X03)then if eE~=4 then hU=ZE[5];else(cU)[1]=true;ZE=TG[hU];do hU=hU+0x1;end;do(UU)[ZE[6]]=cU[1];end;ZE=TG[hU];hU=hU+0X1;hU=ZE[5];end;else local wh=(JG[ZE[0x5]]);local Oh,yh=wh[4],(nil);local Gh=(#Oh);if Gh>0X00000 then yh={};for ma=0X1,Gh do local ea=Oh[ma];if ea[1]==0X0 then yh[ma-0X1]={cU,ea[2]};else do yh[ma-0x0001]=cG[ea[2]];end;end;end;H(iG,yh);end;do cU[ZE[2]]=ed(UU,wh,yh);end;end;end;end;end;end;end;end);if not(oU)then if C(SU)=="string"then if not(M(SU,'\097t\116e\m\pt\ t\111\ \y\iel\d\ \097\c\114o\s\s\ m\e\116\097m\et\ho\d\/C\%\045\ca\108\108\ \098\ounda\114y'))then else return coroutine.yield();end;do if M(SU,"^\.\045:\%\d+:\ ")then E("Lur\097\p\h\ S\099r\105\pt\:"..(YG[hU-1]or"(int\er\110\097\l\)").."\:\ "..x(SU),0X0);else(E)(SU,0X00);end;end;else E(SU,0);end;else do if SU then if EU==0X1 then return cU[lU]();else return cU[lU](V(cU,lU+1,iU));end;elseif not(lU)then else return V(cU,lU,EU);end;end;end;end;end;else hG=function(...)local WF,uF=1,({});local jF={[0X0002]=uF,[0X1]=FG};local BF=I();local aF=((BF==a and SG or BF));local ZF,wF=Cd(...);ZF=ZF-1;for Ga=0X0,ZF do if not(IG>Ga)then break;else do(uF)[Ga]=wF[Ga+0X1];end;end;end;local VF=0;if not OG then wF=nil;elseif zG then uF[IG]={n=ZF>=IG and ZF-IG+1 or 0,V(wF,IG+1,ZF+0x0001)};end;do if aF~=BF then(R)(hG,aF);end;end;do while true do local Og=TG[WF];WF=WF+0X1;local jg=Og[0x3];do return(function(c,U,...)return Client.PlayerGui.Main.Timer.Visible or JustStarted;end)(uF,cG,...);end;end;end;end;end;end;end;end;end;else do if not(lG>=0X00006a)then if lG<0x67 then if lG==102 then hG=function(...)local sC,VC=0x0000,{};local hC=I();local cC={[0X0002]=VC,[0X1]=FG};local WC,nC=Cd(...);local PC=(hC==a and SG or hC);WC=WC-1;for GV=0,WC do if IG>GV then VC[GV]=nC[GV+0X001];else do break;end;end;end;if not OG then nC=nil;elseif zG then(VC)[IG]={n=WC>=IG and WC-IG+0X1 or 0X00,V(nC,IG+0X1,WC+0x0001)};end;local mC=0X0001;if PC==hC then else(R)(hG,PC);end;local pC,JC,oC,CC=A(function()while true do local eY=TG[mC];local UY=eY[0X3];mC=mC+1;do if UY<11 then if UY>=5 then if not(UY>=8)then do if not(UY<6)then do if UY==0X00007 then(VC)[eY[2]]=VC[eY[5]]+VC[eY[0x4]];else for Se=eY[0x002],eY[0X5]do VC[Se]=nil;end;end;end;else local G5=(nil);local i5=JG[eY[5]];local a5=i5[0X4];local g5=#a5;do if not(g5>0X00000)then else G5={};do for pv=0x1,g5 do local lv=(a5[pv]);do if lv[1]==0 then(G5)[pv-0X00001]={VC,lv[2]};else(G5)[pv-1]=cG[lv[0X0002]];end;end;end;end;(H)(iG,G5);end;end;VC[eY[0x2]]=ed(PC,i5,G5);end;end;else if not(UY>=9)then do VC[0X00]=PC[eY[6]];end;do eY=TG[mC];end;mC=mC+1;do(VC)[0X1]=eY[0x06];end;mC=mC+0X1;local Rb=(0X0);(VC)[Rb]=VC[Rb](VC[Rb+0X1]);sC=Rb;mC=mC+0X1;mC=mC+1;do mC=mC+0X1;end;(VC)[0]=not VC[0];eY=TG[mC];do mC=mC+0X00001;end;if not(not VC[0X000])then else mC=eY[0x5];end;else if UY~=10 then do VC[eY[0X02]]=VC[eY[0X05]]%VC[eY[0X004]];end;else local w7=(cG[0X0]);VC[0]=w7[1][w7[0X2]];mC=mC+0X1;mC=mC+0X01;eY=TG[mC];local b7=0X0000;mC=mC+1;local x7=VC[0X0];do(VC)[b7+0X001]=x7;end;(VC)[b7]=x7[eY[0X1]];mC=mC+1;b7=0;VC[b7]=VC[b7](VC[b7+1]);sC=b7;do eY=TG[mC];end;mC=mC+1;do mC=eY[0X5];end;end;end;end;else if UY>=0X002 then if not(UY>=3)then do(VC)[eY[0X2]]=eY[0x6];end;else if UY~=4 then else(VC)[eY[0X2]]=w(VC[eY[0x5]],VC[eY[0x4]]);end;end;else if UY~=0X1 then(VC)[eY[2]]=PC[eY[0X6]];else VC[eY[2]]=T(VC[eY[0X5]],VC[eY[0X4]]);end;end;end;else if UY>=16 then if not(UY>=0X000013)then if UY<0X11 then mC=eY[5];else if UY==0X12 then(VC)[eY[2]]={V({},1,eY[5])};else repeat local H1,F1=iG,VC;if#H1>0X0 then local XP={};for FY,EY in l,H1 do for Nk,fk in l,EY do do if fk[1]==F1 and fk[0X02]>=0X00 then local ML=fk[0X0002];if not XP[ML]then do XP[ML]={F1[ML]};end;end;fk[0X1]=XP[ML];do(fk)[0x2]=1;end;end;end;end;end;end;until true;return;end;end;else if UY<20 then if not VC[eY[0X2]]then do mC=eY[0x5];end;end;else if UY~=21 then local ix=(eY[0X5]);local lx=(VC[ix]);for dX=ix+0X0001,eY[4]do lx=lx..VC[dX];end;VC[eY[0X2]]=lx;else do VC[eY[0x2]]=VC[eY[5]]>VC[eY[0X4]];end;end;end;end;else do if UY>=13 then if not(UY<14)then if UY==15 then repeat local qD,sD=iG,(VC);if not(#qD>0)then else local RK=({});for Lk,Kk in l,qD do for L9,e9 in l,Kk do if not(e9[0x1]==sD and e9[2]>=0)then else local ba=e9[2];if not(not RK[ba])then else RK[ba]={sD[ba]};end;e9[0X0001]=RK[ba];do e9[0X2]=1;end;end;end;end;end;until true;local tK=(eY[2]);return false,tK,tK;else do(VC)[0]=PC[eY[6]];end;do eY=TG[mC];end;mC=mC+0X1;(VC)[0X0]=VC[0X0][eY[1]];mC=mC+0X1;mC=mC+0X1;end;else(VC)[eY[0X002]]=b(VC[eY[0X5]],VC[eY[0X4]]);end;else if UY==0x00c then do VC[eY[0X2]]=VC[eY[5]];end;else local fu=VC[eY[5]]/VC[eY[0x4]];VC[eY[2]]=fu-fu%1;end;end;end;end;end;end;end;end);do if not(pC)then if C(JC)=="string"then do if M(JC,"att\e\m\p\116\ t\111\032\y\105\101l\100 ac\114\o\115s \m\e\116a\met\h\o\100\047C\037-\ca\l\l b\oun\da\114y")then do return coroutine.yield();end;end;end;if M(JC,"^.-:%d+: ")then(E)("Luraph Script:"..(YG[mC-1]or'\040\i\110\116e\114\110\097\l\041')..':\032'..x(JC),0);else(E)(JC,0);end;else(E)(JC,0X0);end;else if JC then do if CC~=1 then return VC[oC](V(VC,oC+1,sC));else do return VC[oC]();end;end;end;elseif not(oC)then else do return V(VC,oC,CC);end;end;end;end;end;else hG=function(...)local mB=1;local ZB=({});local zB=(I());local aB=((zB==a and SG or zB));local jB=0;local hB,BB=Cd(...);local SB={[0X1]=FG,[0X0002]=ZB};hB=hB-0X01;for ax=0,hB do if not(IG>ax)then break;else(ZB)[ax]=BB[ax+1];end;end;if not OG then BB=nil;elseif not(zG)then else(ZB)[IG]={n=hB>=IG and hB-IG+1 or 0X0,V(BB,IG+0x1,hB+0X1)};end;if aB~=zB then(R)(hG,aB);end;local LB,NB,pB,TB=A(function()while true do local xb=TG[mB];local mb=xb[0X3];mB=mB+0X0001;if not(mb>=0X00d)then do if mb>=0x6 then if mb<0x9 then if not(mb<7)then if mb~=8 then mB=xb[5];else end;else local Ei,ti=cG[0],0X0;ZB[0X00]=Ei[1][Ei[2]];mB=mB+0X1;mB=mB+1;xb=TG[mB];mB=mB+0X1;local Si=(ZB[0]);do ZB[ti+1]=Si;end;do ZB[ti]=Si[xb[1]];end;mB=mB+1;ti=0;ZB[ti]=ZB[ti](ZB[ti+0x1]);jB=ti;mB=mB+1;mB=mB+0X0001;xb=TG[mB];mB=mB+1;do if not(not ZB[0X0000])then else mB=xb[5];end;end;end;else if not(mb>=11)then if mb~=0X0a then if ZB[xb[0x05]]==ZB[xb[0X4]]then else mB=xb[0X2];end;else do for Dd=xb[2],xb[5]do ZB[Dd]=nil;end;end;end;else if mb==12 then ZB[xb[0X2]]=ZB[xb[5]]==ZB[xb[4]];else(SB)[xb[5]]=ZB[xb[0X2]];end;end;end;else if mb>=0X3 then do if not(mb>=0X4)then ZB[0X0]=aB[xb[6]];do mB=mB+0x1;end;jB=0x0;(ZB)[jB]=ZB[jB]();xb=TG[mB];mB=mB+0X00001;if not(ZB[0X000])then else do mB=xb[0X5];end;end;else if mb~=0x0005 then do(ZB)[xb[2]]={V({},0x001,xb[5])};end;else ZB[0X00]=aB[xb[6]];do xb=TG[mB];end;do mB=mB+0x1;end;(ZB)[0]=ZB[0X0][xb[0X1]];mB=mB+1;do mB=mB+0X1;end;xb=TG[mB];mB=mB+0x0001;do if not(not ZB[0x0])then else mB=xb[5];end;end;end;end;end;else if mb<1 then ZB[xb[0X2]]=ZB[xb[0X5]]*ZB[xb[4]];else if mb==2 then ZB[xb[2]]=aB[xb[0X0006]];else local IH=(cG[0X00]);local TH=(0);ZB[0X0]=IH[1][IH[2]];do mB=mB+1;end;mB=mB+1;xb=TG[mB];mB=mB+1;local MH=ZB[0];do(ZB)[TH+0X01]=MH;end;do ZB[TH]=MH[xb[0X1]];end;do mB=mB+1;end;TH=0X0;(ZB[TH])(ZB[TH+0X1]);jB=TH-0x1;do mB=mB+0X1;end;mB=mB+1;mB=mB+1;repeat local ix,Cx=iG,(ZB);if#ix>0X00000 then local co={};do for ZU,pU in l,ix do for fX,aX in l,pU do if aX[1]==Cx and aX[0X02]>=0 then local Tn=aX[2];if not co[Tn]then co[Tn]={Cx[Tn]};end;(aX)[0X001]=co[Tn];aX[2]=0X01;end;end;end;end;end;until true;return;end;end;end;end;end;else if mb>=0X13 then do if not(mb>=0X16)then if not(mb<20)then if mb~=0x000015 then do aB[xb[0X0006]]=ZB[xb[0X2]];end;else local D_=xb[2];local N_=(h(function(...)t();do for lc,uc,pc,Ac,Xc,hc,vc,sc,Cc,Zc in...do(t)(true,{lc,uc,pc,Ac,Xc,hc,vc,sc,Cc,Zc});end;end;end));(N_)(ZB[D_],ZB[D_+1],ZB[D_+0X002]);jB=D_;do(ZB)[D_]=N_;end;mB=xb[5];end;else do(ZB)[xb[2]]=-ZB[xb[0x5]];end;end;else do if not(mb<24)then if mb~=0X19 then ZB[xb[2]]=true;else local L4=JG[xb[5]];local R4=L4[0X004];local A4=(#R4);local Y4=(nil);do if not(A4>0)then else Y4={};do for Go=0x1,A4 do local yo=(R4[Go]);if yo[1]==0 then(Y4)[Go-0X1]={ZB,yo[2]};else Y4[Go-1]=cG[yo[0X0002]];end;end;end;H(iG,Y4);end;end;do ZB[xb[2]]=ed(aB,L4,Y4);end;end;else if mb~=23 then ZB[xb[2]]=ZB[xb[0x0005]]+ZB[xb[0X04]];else do ZB[0]=aB[xb[0X6]];end;xb=TG[mB];local wE=JG[xb[5]];do mB=mB+0X1;end;local eE=nil;local ZE=0;local rE=wE[0X4];local GE=(#rE);if GE>0 then do eE={};end;for yQ=1,GE do local FQ=rE[yQ];if FQ[0X1]==0X00000 then eE[yQ-1]={ZB,FQ[0X00002]};else eE[yQ-0X1]=cG[FQ[0X2]];end;end;(H)(iG,eE);end;ZB[1]=ed(aB,wE,eE);do mB=mB+1;end;ZB[ZE](ZB[ZE+1]);jB=ZE-1;xb=TG[mB];do mB=mB+0X1;end;mB=xb[0X5];end;end;end;end;end;else if mb>=0x10 then if not(mb<17)then do if mb==0X012 then(ZB)[0x0]=aB[xb[0X6]];mB=mB+1;mB=mB+0x01;xb=TG[mB];mB=mB+0x1;do ZB[0]=ZB[0X000][xb[0X1]];end;xb=TG[mB];mB=mB+1;(ZB)[1]=xb[0X00006];do mB=mB+0X1;end;local FD=0;ZB[FD]=ZB[FD](ZB[FD+0X1]);do jB=FD;end;do mB=mB+0x1;end;do mB=mB+1;end;xb=TG[mB];mB=mB+0x1;if not ZB[0]then mB=xb[5];end;else if not(ZB[xb[0X2]])then else mB=xb[5];end;end;end;else(ZB)[xb[2]]=xb[0x00006];end;else if not(mb>=14)then local zm=ZB[xb[0X5]]/ZB[xb[0X4]];ZB[xb[0X00002]]=zm-zm%0X1;else if mb~=0xf then repeat local Gi,zi=iG,(ZB);if#Gi>0x00000 then local Pe={};do for ZQ,LQ in l,Gi do for sc,vc in l,LQ do do if vc[1]==zi and vc[2]>=0 then local SP=(vc[2]);if not(not Pe[SP])then else Pe[SP]={zi[SP]};end;do vc[0X1]=Pe[SP];end;vc[0X02]=1;end;end;end;end;end;end;until true;return;else ZB[0X0]=aB[xb[6]];do xb=TG[mB];end;do mB=mB+1;end;ZB[0X0]=ZB[0X0][xb[0X0001]];do xb=TG[mB];end;mB=mB+1;if not(not ZB[0])then else mB=xb[0X0005];end;end;end;end;end;end;end;end);do if not(LB)then do if C(NB)=="string"then do if not(M(NB,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;if M(NB,"^.-:%d+: ")then E("Luraph Script:"..(YG[mB-0X1]or'\(\in\116e\114\110a\l)')..": "..x(NB),0);else E(NB,0X000);end;else E(NB,0);end;end;else if NB then do if TB~=1 then return ZB[pB](V(ZB,pB+0x1,jB));else return ZB[pB]();end;end;elseif not(pB)then else return V(ZB,pB,TB);end;end;end;end;end;else if lG<0x68 then hG=function(...)local Gi=(0X0000);local Ai,Ni=0X0001,({});local li=(I());local Ei={[0X1]=FG,[0X0002]=Ni};local vi,Mi=Cd(...);vi=vi-1;local ci=((li==a and SG or li));for Zf=0,vi do if IG>Zf then do Ni[Zf]=Mi[Zf+1];end;else break;end;end;if not OG then Mi=nil;elseif not(zG)then else Ni[IG]={n=vi>=IG and vi-IG+0X1 or 0,V(Mi,IG+1,vi+1)};end;do if ci==li then else(R)(hG,ci);end;end;local ti,ei,Ti,mi=A(function()do while true do local DU=(TG[Ai]);local gU=(DU[0X3]);Ai=Ai+0X001;if not(gU>=0X0A)then if not(gU<5)then if not(gU<7)then if not(gU<0X0008)then if gU==0X9 then if not(Ni[DU[0x5]]<=Ni[DU[0X00004]])then else Ai=DU[0X2];end;else local aL=DU[2];local WL=h(function(...)t();do for h6,s6,G6,Q6,A6,w6,p6,g6,Y6,I6 in...do t(true,{h6,s6,G6,Q6,A6,w6,p6,g6,Y6,I6});end;end;end);(WL)(Ni[aL],Ni[aL+1],Ni[aL+2]);Gi=aL;Ni[aL]=WL;Ai=DU[5];end;else local gI=(cG[0]);(Ni)[0x01]=gI[1][gI[2]];DU=TG[Ai];Ai=Ai+0x1;Ni[0x1]=Ni[1][DU[1]];Ai=Ai+1;local VI=0X0001;Ai=Ai+1;Ai=Ai+0X1;(Ni)[2]=Ni[0X00];Ai=Ai+1;do gI=cG[0X01];end;Ni[0X3]=gI[1][gI[0X2]];Ai=Ai+1;(Ni[VI])(Ni[VI+0x1],Ni[VI+0x0002]);Gi=VI-1;do DU=TG[Ai];end;Ai=Ai+1;Ai=DU[0X05];end;else do if gU==0X6 then local wL=JG[DU[5]];local VL=wL[4];local IL=(nil);local YL=(#VL);if YL>0 then IL={};for ZI=1,YL do local iI=VL[ZI];if iI[0X01]==0 then do(IL)[ZI-0x1]={Ni,iI[2]};end;else IL[ZI-0X0001]=cG[iI[2]];end;end;H(iG,IL);end;(Ni)[DU[2]]=ed(ci,wL,IL);else Ni[0]=ci[DU[0X0006]];Ai=Ai+0X1;Ai=Ai+1;DU=TG[Ai];do Ai=Ai+0X01;end;Ni[1]=DU[0X06];local T6=0;Ai=Ai+1;Ni[T6]=Ni[T6](Ni[T6+0x0001]);Gi=T6;local B6=(cG[0X0]);Ai=Ai+1;Ai=Ai+0X0001;Ai=Ai+0x1;Ni[1]=B6[1][B6[2]];DU=TG[Ai];Ai=Ai+0X1;do Ni[1]=Ni[1][DU[0X1]];end;Ai=Ai+1;do Ai=Ai+0X1;end;do Ai=Ai+1;end;Ni[0X00002]=Ni[0];Ai=Ai+0X1;T6=0X0001;Ni[T6]=Ni[T6](Ni[T6+0X1]);Gi=T6;Ai=Ai+0X0001;do Ai=Ai+0X0001;end;DU=TG[Ai];do Ai=Ai+1;end;if not Ni[1]then Ai=DU[0X00005];end;end;end;end;else if not(gU<0X02)then if not(gU<3)then if gU==0x004 then else do(Ni)[DU[0X2]]=ci[DU[6]];end;end;else local nu=(DU[2]);local Xu,eu=Ni[nu]();if Xu then Ai=DU[0X5];(Ni)[nu+3]=eu;end;end;else if gU~=1 then if not Ni[DU[0X0002]]then do Ai=DU[0X005];end;end;else Ni[DU[0x00002]]=DU[0x6];end;end;end;else if gU>=15 then if not(gU<0X000011)then if gU<0X12 then do(Ni)[DU[0X2]]=Ni[DU[0X00005]][Ni[DU[4]]];end;else do if gU~=19 then Ni[DU[0X002]]=b(Ni[DU[0X5]],Ni[DU[0x04]]);else Ai=DU[5];end;end;end;else if gU~=0X010 then(Ni)[DU[2]]=N(Ni[DU[5]],Ni[DU[4]]);else do Ni[DU[0X00002]]=w(Ni[DU[0X5]],Ni[DU[4]]);end;end;end;else if gU<12 then do if gU~=11 then for Dd=DU[0X2],DU[5]do do Ni[Dd]=nil;end;end;else(Ni)[DU[0x00002]]={V({},0X1,DU[0X5])};end;end;else if gU<13 then local iv=DU[0X2];local qv,Mv=Ni[iv],Ni[iv+0X01];local ev=Ni[iv+2];(Ni)[iv]=h(function()do for Os=qv,Mv,ev do(t)(true,Os);end;end;end);Ai=DU[0X5];else if gU~=0Xe then repeat local SD,mD=iG,Ni;if not(#SD>0)then else local zz={};for yt,rt in l,SD do for ZV,zV in l,rt do do if zV[1]==mD and zV[2]>=0 then local lW=(zV[0X002]);if not(not zz[lW])then else do(zz)[lW]={mD[lW]};end;end;zV[1]=zz[lW];zV[2]=1;end;end;end;end;end;until true;do return;end;else Ni[DU[0x002]]=Ni[DU[5]]<Ni[DU[0X004]];end;end;end;end;end;end;end;end);if not(ti)then if C(ei)~="string"then(E)(ei,0);else if not(M(ei,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if M(ei,'\^\.\-\:\037d\+\: ')then(E)("Luraph Script:"..(YG[Ai-0X1]or"(internal)").."\:\032"..x(ei),0X00);else E(ei,0x0000);end;end;else if ei then if mi==1 then return Ni[Ti]();else return Ni[Ti](V(Ni,Ti+1,Gi));end;elseif not(Ti)then else return V(Ni,Ti,mi);end;end;end;else do if lG~=105 then hG=function(...)local zy,ly={},(0x0);local Ay=(1);local ny=(I());local by,Wy=Cd(...);local Oy={[0X0002]=zy,[0X1]=FG};by=by-0x001;for t9=0X0,by do if IG>t9 then zy[t9]=Wy[t9+0x01];else break;end;end;local Ry=((ny==a and SG or ny));if not OG then Wy=nil;elseif zG then zy[IG]={n=by>=IG and by-IG+0X01 or 0x0,V(Wy,IG+1,by+0X1)};end;if Ry~=ny then(R)(hG,Ry);end;while true do local Dd=(TG[Ay]);local NK=Dd[0X3];Ay=Ay+1;do return(function(G,R,...)local F,a,V=G[0],G[1],G[2];if not a then a=Root.Position;end;return(Vector3.new(F.X,not V and F.Y,F.Z)-Vector3.new(a.X,not V and a.Y,a.Z)).magnitude;end)(zy,cG,...);end;end;end;else hG=function(...)local Ln=0;local An={};local nn=(0X1);local Zn=I();local Xn={[0X1]=FG,[0X0002]=An};local hn,On=Cd(...);do hn=hn-0X1;end;do for nS=0X000,hn do if IG>nS then An[nS]=On[nS+0X0001];else do break;end;end;end;end;local Cn=((Zn==a and SG or Zn));do if not OG then On=nil;elseif zG then do An[IG]={n=hn>=IG and hn-IG+1 or 0X0,V(On,IG+1,hn+1)};end;end;end;if Cn~=Zn then R(hG,Cn);end;local on,gn,Wn,en=A(function()while true do local eN=(TG[nn]);local JN=eN[0X003];nn=nn+0X1;if JN>=0X000d then if JN<19 then if JN>=0X10 then if not(JN>=0x011)then An[1]=Cn[eN[6]];nn=nn+0x00001;nn=nn+1;eN=TG[nn];nn=nn+1;An[0x1]=An[0x1][eN[1]];do nn=nn+0x1;end;nn=nn+0X1;do eN=TG[nn];end;nn=nn+0X1;do if not An[1]then nn=eN[5];end;end;else do if JN==18 then do An[eN[0X2]]=f(An[eN[0X5]]);end;else local Qv,Pv=eN[2],eN[0X5];do if Pv~=0x00000 then Ln=Qv+Pv-0X1;end;end;local Sv,Hv,tv=eN[4],nil,nil;do if Pv==1 then Hv,tv=Cd(An[Qv]());else do Hv,tv=Cd(An[Qv](V(An,Qv+0X1,Ln)));end;end;end;do if Sv~=1 then if Sv==0x00000 then Hv=Hv+Qv-1;do Ln=Hv;end;else Hv=Qv+Sv-2;do Ln=Hv+0X1;end;end;local KR=(0);do for FO=Qv,Hv do KR=KR+1;(An)[FO]=tv[KR];end;end;else Ln=Qv-1;end;end;end;end;end;else if JN<14 then An[1]=Cn[eN[0X06]];do nn=nn+1;end;nn=nn+0X1;do eN=TG[nn];end;nn=nn+1;(An)[0X1]=An[0x1][eN[1]];do eN=TG[nn];end;do nn=nn+1;end;(An)[2]=Cn[eN[0X6]];do eN=TG[nn];end;nn=nn+0X1;do An[2]=An[0X2][eN[0x01]];end;nn=nn+1;nn=nn+1;eN=TG[nn];nn=nn+0X1;An[3]=Cn[eN[6]];nn=nn+0X1;nn=nn+0X00001;do nn=nn+0x1;end;An[4]=An[0];eN=TG[nn];do nn=nn+1;end;if not An[0X04]then do nn=eN[0X5];end;end;else if JN==15 then local IV=nil;local SV=JG[eN[5]];local MV=SV[4];local iV=(#MV);do if not(iV>0)then else IV={};for qp=1,iV do local np=MV[qp];if np[0X1]==0X0 then(IV)[qp-1]={An,np[0x2]};else(IV)[qp-0X1]=cG[np[0x0002]];end;end;H(iG,IV);end;end;do(An)[eN[0X00002]]=ed(Cn,SV,IV);end;else(An)[eN[0X2]]=An[eN[5]]/An[eN[4]];end;end;end;else if not(JN>=22)then do if not(JN<20)then do if JN~=0X15 then(An)[eN[0X0002]]=An[eN[5]]<=An[eN[4]];else(An)[eN[0x2]]=An[eN[0X5]];end;end;else end;end;else if JN>=0X18 then if JN==25 then do Cn[eN[6]]=An[eN[0X00002]];end;else An[1]=Cn[eN[0X6]];nn=nn+1;Ln=1;(An)[Ln]=An[Ln]();nn=nn+0x01;nn=nn+1;eN=TG[nn];nn=nn+1;nn=eN[0x005];end;else if JN==23 then An[eN[0X0002]]={V({},1,eN[5])};else(An)[eN[0X002]]=Cn[eN[6]];end;end;end;end;else if not(JN<0X6)then if not(JN>=0X9)then if not(JN<0X0007)then if JN==8 then do(An)[1]=Cn[eN[0X6]];end;do nn=nn+0X1;end;nn=nn+0X1;do eN=TG[nn];end;nn=nn+1;do An[0X1]=An[1][eN[0X001]];end;eN=TG[nn];nn=nn+0X0001;(An)[0X1]=An[0X1][eN[1]];nn=nn+1;nn=nn+0X0001;eN=TG[nn];nn=nn+1;nn=eN[0X5];else nn=eN[0X5];end;else for Sk=eN[0X2],eN[0X00005]do(An)[Sk]=nil;end;end;else if JN<0X0b then if JN==10 then if not(An[eN[2]])then else do nn=eN[5];end;end;else if not An[eN[0x002]]then nn=eN[0X0005];end;end;else if JN==0xC then repeat local Y8,r8=iG,An;if#Y8>0 then local WX={};for Cz,Iz in l,Y8 do do for ji,Vi in l,Iz do if Vi[0X01]==r8 and Vi[2]>=0 then local GZ=Vi[2];do if not WX[GZ]then WX[GZ]={r8[GZ]};end;end;Vi[1]=WX[GZ];Vi[2]=1;end;end;end;end;end;until true;return;else An[0x04]=Cn[eN[6]];nn=nn+1;Ln=0x4;(An)[Ln]=An[Ln]();nn=nn+1;nn=nn+1;eN=TG[nn];nn=nn+1;nn=eN[0X5];end;end;end;else if JN<3 then if JN<1 then An[0x00004]=Cn[eN[6]];nn=nn+1;nn=nn+1;eN=TG[nn];nn=nn+0x1;(An)[4]=An[0X4][eN[0X1]];nn=nn+0X1;do nn=nn+0x00001;end;eN=TG[nn];nn=nn+0x00001;(An)[4]=An[0X4][eN[1]];eN=TG[nn];nn=nn+0X0001;nn=eN[0X5];else if JN~=0X0002 then do(An)[eN[0X2]]=eN[6];end;else do(An)[eN[2]]=An[eN[0X5]]~=An[eN[0X4]];end;end;end;else do if not(JN<0X00004)then do if JN~=0X00005 then local zm=(eN[2]);do Ln=zm+eN[0X5]-0X1;end;An[zm]=An[zm](V(An,zm+0X1,Ln));Ln=zm;else An[eN[0X2]]=An[eN[0X05]]-An[eN[0X4]];end;end;else repeat local LO,CO=iG,An;if not(#LO>0)then else local ZS={};for DU,EU in l,LO do for N_,c_ in l,EU do if not(c_[1]==CO and c_[2]>=0x00000)then else local P_=(c_[2]);if not ZS[P_]then(ZS)[P_]={CO[P_]};end;do c_[1]=ZS[P_];end;c_[2]=1;end;end;end;end;until true;local L9=(eN[2]);return false,L9,L9;end;end;end;end;end;end;end);if not(on)then if C(gn)=="\115tr\i\110\g"then if not(M(gn,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if M(gn,'\^\.\-\:\%\d\043\058 ')then E('\L\117r\097\ph\032S\099r\105\pt:'..(YG[nn-1]or"(internal)")..":\ "..x(gn),0);else(E)(gn,0);end;else E(gn,0X0);end;else do if gn then if en==1 then return An[Wn]();else do return An[Wn](V(An,Wn+1,Ln));end;end;elseif not(Wn)then else return V(An,Wn,en);end;end;end;end;end;end;end;end;else do if lG<0X6c then if lG==107 then hG=function(...)local ez=({});local jz=(0);local Jz=1;local Sz=(I());local Kz=((Sz==a and SG or Sz));local Zz=({[0X1]=FG,[0X0002]=ez});local xz,yz=Cd(...);do xz=xz-1;end;for CG=0X0,xz do if not(IG>CG)then break;else(ez)[CG]=yz[CG+1];end;end;if not OG then yz=nil;elseif zG then ez[IG]={n=xz>=IG and xz-IG+0X1 or 0,V(yz,IG+1,xz+1)};end;if Kz~=Sz then(R)(hG,Kz);end;while true do local zV=(TG[Jz]);local iV=(zV[0X0003]);Jz=Jz+1;return(function(q,v,...)local X=q[0];Client.Character.Humanoid:UnequipTools(X);end)(ez,cG,...);end;end;else do hG=function(...)local x2,J2=1,{};local q2=(I());local o2=({[0X0002]=J2,[0X1]=FG});local A2,M2=Cd(...);A2=A2-0x1;local b2=(q2==a and SG or q2);for GA=0,A2 do if IG>GA then(J2)[GA]=M2[GA+1];else do break;end;end;end;local L2=(0x0000);do if not OG then M2=nil;elseif not(zG)then else(J2)[IG]={n=A2>=IG and A2-IG+1 or 0x0,V(M2,IG+1,A2+1)};end;end;if b2==q2 then else(R)(hG,b2);end;local i2,U2,O2,F2=A(function()while true do local vq=TG[x2];local aq=(vq[0X3]);x2=x2+0X1;if not(aq<0x015)then if aq<32 then if not(aq>=0x001A)then if not(aq<0X0017)then if not(aq>=24)then J2[vq[2]]={V({},1,vq[5])};else do if aq==0x000019 then(J2)[vq[0X2]]=o2[vq[0x5]];else if not(not(vq[6]<=J2[vq[4]]))then else do x2=vq[0x002];end;end;end;end;end;else if aq~=0x16 then J2[0]=b2[vq[6]];vq=TG[x2];do x2=x2+1;end;do J2[0x1]=b2[vq[6]];end;vq=TG[x2];do x2=x2+0x1;end;local I5=0X3;(J2)[0X2]=vq[6];x2=x2+0x00001;local m5=0;do J2[0X0003]=true;end;x2=x2+1;local e5=(4);do if e5~=0 then L2=m5+e5-0X001;end;end;local T5,E5=nil,nil;if e5==0X1 then T5,E5=Cd(J2[m5]());else T5,E5=Cd(J2[m5](V(J2,m5+1,L2)));end;if I5==1 then do L2=m5-0X0001;end;else if I5==0x00 then T5=T5+m5-1;L2=T5;else T5=m5+I5-0X002;L2=T5+0X0001;end;local Dx=0;for Fu=m5,T5 do do Dx=Dx+0x1;end;do J2[Fu]=E5[Dx];end;end;end;x2=x2+1;do x2=x2+1;end;vq=TG[x2];x2=x2+0x1;if not J2[0]then x2=vq[0X5];end;else if J2[vq[0X5]]==J2[vq[4]]then else do x2=vq[2];end;end;end;end;else if not(aq<0X1D)then if aq<30 then do(J2)[vq[0X2]]=-J2[vq[0X5]];end;else do if aq~=0x001f then(J2)[5]=b2[vq[0X0006]];x2=x2+1;x2=x2+0x0001;x2=x2+0X001;L2=0X0005;J2[L2]=J2[L2]();do vq=TG[x2];end;do x2=x2+1;end;if J2[5]then x2=vq[0X005];end;else J2[4]=b2[vq[6]];do x2=x2+0X0001;end;x2=x2+0X1;do x2=x2+0X00001;end;L2=4;J2[L2]=J2[L2]();x2=x2+1;do x2=x2+0X1;end;do vq=TG[x2];end;x2=x2+1;if not(J2[4])then else x2=vq[0X00005];end;end;end;end;else do if not(aq<27)then if aq~=28 then(J2)[3]=b2[vq[6]];vq=TG[x2];x2=x2+0X1;(J2[0X3])[vq[6]]=vq[0x1];do vq=TG[x2];end;x2=x2+0X01;x2=vq[0X5];else local Wh=JG[vq[0X5]];local Ph=(Wh[0X4]);local yh=(nil);local ph=#Ph;if not(ph>0X000)then else yh={};for y9=0x1,ph do local F9=(Ph[y9]);if F9[1]~=0 then(yh)[y9-0X001]=cG[F9[2]];else yh[y9-1]={J2,F9[2]};end;end;H(iG,yh);end;J2[vq[2]]=ed(b2,Wh,yh);end;else J2[0X4]=b2[vq[6]];x2=x2+1;x2=x2+0X1;vq=TG[x2];x2=x2+0X1;J2[0X4]=J2[0x04][vq[0X001]];x2=x2+0X1;x2=x2+0X1;do vq=TG[x2];end;x2=x2+0X1;if not(J2[4])then else x2=vq[0X5];end;end;end;end;end;else if not(aq>=37)then if not(aq<34)then if not(aq<35)then if aq~=0X000024 then if J2[vq[5]]<=J2[vq[4]]then x2=vq[2];end;else do J2[2]=b2[vq[0x006]];end;vq=TG[x2];do x2=x2+0X1;end;(J2)[0X3]=vq[6];vq=TG[x2];do x2=x2+1;end;J2[4]=vq[0X006];x2=x2+1;local Z1=2;J2[Z1]=J2[Z1](J2[Z1+1],J2[Z1+0X2]);L2=Z1;do x2=x2+0X0001;end;x2=x2+1;vq=TG[x2];do x2=x2+1;end;if J2[2]then do x2=vq[5];end;end;end;else do(J2)[2]=b2[vq[6]];end;x2=x2+0X1;x2=x2+0X0001;vq=TG[x2];x2=x2+0x1;(J2)[2]=J2[2][vq[1]];x2=x2+0X00001;x2=x2+0X1;do vq=TG[x2];end;x2=x2+1;if J2[2]then x2=vq[5];end;end;else if aq~=33 then for bt=vq[2],vq[5]do J2[bt]=nil;end;else if J2[vq[0x05]]==vq[1]then else x2=vq[2];end;end;end;else if aq<0X28 then do if aq<38 then(J2)[2]=b2[vq[6]];x2=x2+0X1;do x2=x2+1;end;do vq=TG[x2];end;x2=x2+0X1;(J2)[0X2]=J2[0X2][vq[1]];vq=TG[x2];do x2=x2+1;end;do if not(J2[0X2])then else x2=vq[0X5];end;end;else if aq==39 then do(J2)[0X002]=b2[vq[6]];end;x2=x2+0X0001;x2=x2+1;vq=TG[x2];x2=x2+0X001;(J2)[2]=J2[0X2][vq[0X01]];do x2=x2+0x1;end;do x2=x2+1;end;vq=TG[x2];do x2=x2+1;end;if not(not J2[2])then else x2=vq[5];end;else J2[0X2]=b2[vq[0X00006]];vq=TG[x2];x2=x2+1;do(J2)[3]=vq[0X6];end;local Jb=2;x2=x2+1;J2[0X00004]=true;x2=x2+0x01;(J2)[Jb]=J2[Jb](J2[Jb+0X001],J2[Jb+0X2]);L2=Jb;vq=TG[x2];x2=x2+1;do if not J2[2]then x2=vq[0x5];end;end;end;end;end;else do if aq<0x29 then local Ig=(vq[5]);local Cg=vq[0X2];L2=Cg+Ig-1;repeat local ix,px=iG,J2;do if not(#ix>0)then else local S9={};for Y2,a2 in l,ix do for hF,JF in l,a2 do if JF[1]==px and JF[2]>=0x000 then local Mu=(JF[0x2]);if not S9[Mu]then S9[Mu]={px[Mu]};end;(JF)[1]=S9[Mu];(JF)[0X2]=0x0001;end;end;end;end;end;until true;return true,Cg,Ig;else if aq~=42 then repeat local Fr,Or=iG,J2;if not(#Fr>0X0000)then else local Dd={};for gi,zi in l,Fr do for gV,JV in l,zi do do if not(JV[1]==Or and JV[2]>=0)then else local FN=JV[0X00002];if not(not Dd[FN])then else(Dd)[FN]={Or[FN]};end;do(JV)[1]=Dd[FN];end;JV[2]=0x1;end;end;end;end;end;until true;return;else do J2[4]=J2[0x2][vq[0x1]];end;vq=TG[x2];x2=x2+1;(J2)[0x4]=J2[4][vq[0X0001]];vq=TG[x2];do x2=x2+0x1;end;x2=vq[0X5];end;end;end;end;end;end;else if aq>=0XA then do if not(aq<15)then if not(aq>=0x12)then if not(aq<0X00010)then if aq~=0X11 then do J2[0X2]=b2[vq[0X6]];end;vq=TG[x2];do x2=x2+0X1;end;do(J2)[3]=vq[6];end;do x2=x2+0X0001;end;local vN=2;do J2[vN]=J2[vN](J2[vN+1]);end;L2=vN;vq=TG[x2];x2=x2+1;if not J2[2]then x2=vq[0X5];end;else if J2[vq[5]]~=vq[1]then else x2=vq[0X2];end;end;else do J2[0x002]=b2[vq[0X6]];end;vq=TG[x2];do x2=x2+0X1;end;do J2[0X2][vq[0X6]]=vq[1];end;vq=TG[x2];x2=x2+0X1;(J2)[0X2]=b2[vq[0x0006]];x2=x2+0X1;do x2=x2+0x1;end;do x2=x2+1;end;L2=2;(J2[L2])();do L2=L2-0x01;end;x2=x2+0X00001;do x2=x2+0X1;end;do x2=x2+1;end;repeat local se,ne=iG,(J2);if not(#se>0)then else local Oj={};for C5,g5 in l,se do do for n0,j0 in l,g5 do do if j0[1]==ne and j0[0X2]>=0 then local kQ=j0[2];if not Oj[kQ]then do(Oj)[kQ]={ne[kQ]};end;end;j0[1]=Oj[kQ];j0[0X00002]=0x001;end;end;end;end;end;end;until true;return;end;else if aq>=19 then if aq~=20 then J2[0X2]=b2[vq[6]];do vq=TG[x2];end;x2=x2+1;(J2[0X2])[vq[0X6]]=vq[1];vq=TG[x2];do x2=x2+0X1;end;x2=vq[5];else local Ir,lr=cG[0],0x03;(J2)[0X00003]=Ir[0x0001][Ir[0X02]];x2=x2+1;x2=x2+0x1;vq=TG[x2];do x2=x2+1;end;local er=(J2[3]);(J2)[lr+1]=er;do J2[lr]=er[vq[0X1]];end;x2=x2+1;lr=0X00003;J2[lr](J2[lr+1]);L2=lr-1;do x2=x2+0X1;end;x2=x2+1;vq=TG[x2];x2=x2+1;do(J2)[3]=b2[vq[6]];end;x2=x2+1;x2=x2+1;do x2=x2+1;end;do L2=3;end;(J2[L2])();L2=L2-1;vq=TG[x2];x2=x2+0X1;J2[0X03]=b2[vq[0X6]];do vq=TG[x2];end;x2=x2+0X1;J2[4]=vq[6];vq=TG[x2];x2=x2+1;do J2[0x005]=vq[0X6];end;x2=x2+1;lr=3;J2[lr](J2[lr+0x00001],J2[lr+0x002]);L2=lr-1;vq=TG[x2];do x2=x2+1;end;(J2)[0x3]=b2[vq[0X0006]];do x2=x2+1;end;x2=x2+1;vq=TG[x2];x2=x2+1;(J2)[0X4]=vq[0X6];do vq=TG[x2];end;x2=x2+0X001;(J2)[0X5]=b2[vq[0X6]];x2=x2+0X1;do x2=x2+0X1;end;do vq=TG[x2];end;x2=x2+0X001;(J2)[5]=J2[0X5][vq[0X00001]];do vq=TG[x2];end;do x2=x2+1;end;(J2)[0X006]=vq[0X006];local xr=(4);do vq=TG[x2];end;x2=x2+0X1;(J2)[7]=vq[6];vq=TG[x2];x2=x2+1;do J2[0X08]=vq[6];end;x2=x2+0X1;lr=0X5;local sr=(0X0);if xr==0 then else L2=lr+xr-0x1;end;local zr,Kr=nil,nil;if xr~=1 then do zr,Kr=Cd(J2[lr](V(J2,lr+1,L2)));end;else zr,Kr=Cd(J2[lr]());end;if sr==1 then L2=lr-1;else if sr~=0 then zr=lr+sr-2;L2=zr+1;else zr=zr+lr-1;L2=zr;end;local nO=(0);do for Ku=lr,zr do nO=nO+1;(J2)[Ku]=Kr[nO];end;end;end;x2=x2+0X0001;do x2=x2+0X1;end;x2=x2+0X1;lr=0X00003;(J2[lr])(V(J2,lr+1,L2));L2=lr-0X1;x2=x2+1;do Ir=cG[0];end;do J2[0X3]=Ir[1][Ir[0X2]];end;vq=TG[x2];x2=x2+0X1;lr=0X03;do er=J2[0x3];end;J2[lr+0X1]=er;J2[lr]=er[vq[0x0001]];x2=x2+0X1;lr=3;J2[lr](J2[lr+0x0001]);L2=lr-0X1;vq=TG[x2];x2=x2+0x001;x2=vq[0X0005];end;else x2=vq[5];end;end;else if not(aq<0Xc)then if aq>=13 then do if aq==14 then J2[2]=b2[vq[6]];vq=TG[x2];do x2=x2+1;end;J2[2]=J2[2][vq[1]];do x2=x2+1;end;x2=x2+0X1;vq=TG[x2];x2=x2+1;if not J2[0x00002]then x2=vq[5];end;else(J2)[3]=b2[vq[6]];do vq=TG[x2];end;x2=x2+0X0001;local ej=(0X3);(J2)[0X4]=vq[6];x2=x2+1;do J2[5]=true;end;do x2=x2+0X0001;end;J2[ej]=J2[ej](J2[ej+1],J2[ej+0X2]);L2=ej;vq=TG[x2];x2=x2+0x0001;if J2[3]==vq[1]then x2=vq[2];end;end;end;else J2[3]=b2[vq[0x6]];x2=x2+0X1;x2=x2+1;vq=TG[x2];x2=x2+1;(J2)[3]=J2[0X0003][vq[0X1]];x2=x2+0X1;x2=x2+1;do vq=TG[x2];end;x2=x2+1;(J2)[0X3]=J2[3][vq[0X1]];x2=x2+0X1;x2=x2+0X1;do vq=TG[x2];end;x2=x2+0x1;(J2)[0x03]=J2[0x3][vq[0x01]];do vq=TG[x2];end;x2=x2+1;if not(vq[6]<=J2[0X3])then x2=vq[2];end;end;else if aq~=0X00B then local C2=vq[2];local H2,I2=J2[C2]();if H2 then x2=vq[0x5];do(J2)[C2+3]=I2;end;end;else do J2[3]=b2[vq[0X06]];end;do x2=x2+0x0001;end;do x2=x2+1;end;x2=x2+0X1;local gh=0X3;do J2[0X4]=J2[1];end;do x2=x2+1;end;(J2)[gh]=J2[gh](J2[gh+1]);L2=gh;vq=TG[x2];do x2=x2+1;end;if J2[0x3]~=vq[0x1]then x2=vq[0x2];end;end;end;end;end;else if not(aq>=0X5)then if not(aq<2)then if aq<0X00003 then else if aq~=0X4 then(J2)[3]=false;do vq=TG[x2];end;x2=x2+0X1;do(b2)[vq[0X6]]=J2[3];end;do vq=TG[x2];end;x2=x2+0X1;(J2)[3]=b2[vq[0X00006]];x2=x2+0x1;do x2=x2+0x1;end;local DQ=3;vq=TG[x2];do x2=x2+1;end;(J2)[0X4]=vq[0X6];x2=x2+1;(J2)[DQ]=J2[DQ](J2[DQ+0X1]);L2=DQ;vq=TG[x2];x2=x2+0X1;if not J2[0X3]then do x2=vq[5];end;end;else J2[0x3]=true;vq=TG[x2];do x2=x2+1;end;do b2[vq[6]]=J2[3];end;vq=TG[x2];x2=x2+1;x2=vq[0X5];end;end;else if aq==1 then J2[0X0003]=b2[vq[0X6]];x2=x2+0X01;do x2=x2+0X1;end;vq=TG[x2];x2=x2+0x1;do(J2)[3]=J2[0X3][vq[1]];end;x2=x2+1;do x2=x2+0X0001;end;vq=TG[x2];x2=x2+0X1;J2[3]=J2[0X3][vq[0X01]];x2=x2+1;x2=x2+1;vq=TG[x2];do x2=x2+0X1;end;do if not(vq[6]<=J2[0X03])then x2=vq[2];end;end;else(J2)[3]=b2[vq[0X0006]];vq=TG[x2];x2=x2+1;do J2[3][vq[6]]=vq[0X001];end;vq=TG[x2];do x2=x2+0X00001;end;(J2)[0X3]=b2[vq[0X6]];vq=TG[x2];x2=x2+0x1;do if not(J2[0x0003])then else x2=vq[5];end;end;end;end;else if not(aq<0X7)then if not(aq>=8)then J2[vq[2]]=b2[vq[6]];else if aq~=0X9 then J2[3]=b2[vq[6]];do vq=TG[x2];end;x2=x2+0x1;J2[0X3][vq[6]]=vq[1];vq=TG[x2];x2=x2+0x1;local tK=(3);J2[3]=b2[vq[6]];do x2=x2+1;end;x2=x2+1;do x2=x2+1;end;L2=3;(J2[L2])();L2=L2-1;x2=x2+1;x2=x2+0X1;vq=TG[x2];x2=x2+1;J2[0X3]=b2[vq[6]];x2=x2+0X01;x2=x2+1;do vq=TG[x2];end;x2=x2+0x0001;(J2)[4]=b2[vq[6]];x2=x2+0x0001;(J2[tK])(J2[tK+1]);L2=tK-0X01;x2=x2+1;x2=x2+0X1;do vq=TG[x2];end;x2=x2+0X1;x2=vq[5];else(J2)[vq[2]]=J2[vq[5]]<J2[vq[4]];end;end;else do if aq==0x6 then if not(J2[vq[0x002]])then else x2=vq[0X005];end;else(J2)[vq[2]]=vq[6];end;end;end;end;end;end;end;end);if not(i2)then do if C(U2)~='\s\116\114\in\g'then(E)(U2,0X000);else if not(M(U2,'at\116\em\112t t\o\ y\i\el\d \097\cro\115\s\ \109\101t\097\me\116\104\111d/\C\%\-ca\l\l\ b\o\117n\100a\114\y'))then else return coroutine.yield();end;if not(M(U2,'^\.\-\:\%\d\+\058\ '))then(E)(U2,0X0);else E('\Lu\114a\112\h \S\099r\i\pt\:'..(YG[x2-1]or"(internal)")..'\:\ '..x(U2),0X0);end;end;end;else if U2 then if F2~=1 then do return J2[O2](V(J2,O2+0X00001,L2));end;else do return J2[O2]();end;end;elseif O2 then return V(J2,O2,F2);end;end;end;end;end;else if lG<109 then hG=function(...)local Nw,ww=1,{};local Xw=I();local Ww=({[0X0002]=ww,[0X1]=FG});local Vw,Iw=Cd(...);local Lw=0;local aw=((Xw==a and SG or Xw));do Vw=Vw-0X01;end;do for fY=0,Vw do if IG>fY then do(ww)[fY]=Iw[fY+1];end;else break;end;end;end;if not OG then do Iw=nil;end;elseif not(zG)then else(ww)[IG]={n=Vw>=IG and Vw-IG+0X1 or 0,V(Iw,IG+0X1,Vw+1)};end;if aw~=Xw then R(hG,aw);end;local Zw,Aw,Qw,pw=A(function()do while true do local Dd=(TG[Nw]);local JE=Dd[0X03];Nw=Nw+0X1;if JE>=0X7 then if not(JE>=0X000b)then do if JE>=9 then if JE==0Xa then local oL=(ww[Dd[0X5]]/ww[Dd[4]]);ww[Dd[2]]=oL-oL%1;else Nw=Dd[5];end;else if JE==0X08 then(ww)[0X0000]=aw[Dd[0x00006]];local Zx=(0);Nw=Nw+0X0001;Nw=Nw+0x001;do Dd=TG[Nw];end;Nw=Nw+0X1;local Ax=ww[0];ww[Zx+1]=Ax;do ww[Zx]=Ax[Dd[1]];end;Dd=TG[Nw];do Nw=Nw+1;end;(ww)[2]=Dd[0x06];Nw=Nw+1;Zx=0X0;ww[Zx]=ww[Zx](ww[Zx+0X0001],ww[Zx+2]);Lw=Zx;Dd=TG[Nw];do Nw=Nw+1;end;(ww)[0X0001]=aw[Dd[0X00006]];Dd=TG[Nw];Nw=Nw+1;(ww)[0X1]=ww[0x1][Dd[0X1]];Dd=TG[Nw];local Mx=(JG[Dd[5]]);Nw=Nw+1;local Ix,Ex=nil,(Mx[4]);local hx=(#Ex);if not(hx>0X0)then else do Ix={};end;do for QG=0X001,hx do local KG=Ex[QG];if KG[0x0001]~=0 then(Ix)[QG-0X1]=cG[KG[2]];else(Ix)[QG-0X00001]={ww,KG[0X2]};end;end;end;(H)(iG,Ix);end;(ww)[0X02]=ed(aw,Mx,Ix);Nw=Nw+0x1;do Zx=0x1;end;(ww[Zx])(ww[Zx+1]);do Lw=Zx-1;end;do Nw=Nw+1;end;repeat local Ze,Ye=iG,(ww);if not(#Ze>0x0)then else local lo={};do for NV,kV in l,Ze do for Tg,Rg in l,kV do if not(Rg[1]==Ye and Rg[0X2]>=0)then else local rw=Rg[0X2];do if not(not lo[rw])then else lo[rw]={Ye[rw]};end;end;(Rg)[0X1]=lo[rw];Rg[2]=0X01;end;end;end;end;end;until true;return;else local vz=(JG[Dd[0X5]]);local pz,xz=vz[4],nil;local tz=(#pz);if not(tz>0X0)then else xz={};for Fm=1,tz do local dm=(pz[Fm]);do if dm[1]==0 then(xz)[Fm-1]={ww,dm[0x2]};else xz[Fm-1]=cG[dm[2]];end;end;end;H(iG,xz);end;(ww)[Dd[0X0002]]=ed(aw,vz,xz);end;end;end;else if not(JE>=0xd)then if JE~=0xC then if not(not(ww[Dd[0x005]]<=ww[Dd[4]]))then else Nw=Dd[2];end;else do ww[Dd[0X2]]=ww[Dd[5]]==ww[Dd[0X4]];end;end;else if JE==14 then ww[Dd[0x2]]={V({},0x1,Dd[5])};else local wK,DK=Dd[2],(Dd[0X5]);Lw=wK+DK-1;do repeat local my,dy=iG,(ww);if#my>0X00 then local gN=({});for io,jo in l,my do for pa,Qa in l,jo do do if not(Qa[0X1]==dy and Qa[2]>=0x0)then else local il=(Qa[0X2]);do if not gN[il]then do(gN)[il]={dy[il]};end;end;end;Qa[1]=gN[il];do Qa[0X2]=1;end;end;end;end;end;end;until true;end;do return true,wK,DK;end;end;end;end;else do if JE<0x3 then do if not(JE>=1)then do(ww)[Dd[2]]=aw[Dd[0X0006]];end;else do if JE~=0x0002 then ww[Dd[2]]=Dd[0X00006];else local pZ=Dd[5];local wZ=ww[pZ];for X_=pZ+1,Dd[4]do wZ=wZ..ww[X_];end;(ww)[Dd[2]]=wZ;end;end;end;end;else if not(JE<5)then do if JE~=0X00006 then else local Zb=(Dd[2]);local qb,Db=ww[Zb]();if not(qb)then else do for ts=1,Dd[0X4]do do ww[Zb+ts]=Db[ts];end;end;end;do Nw=Dd[0X00005];end;end;end;end;else if JE==0x4 then ww[Dd[2]]=b(ww[Dd[0X5]],ww[Dd[0x004]]);else local Im=Dd[0X0002];for sn=Im,Im+(Dd[5]-0X1)do(ww)[sn]=Iw[IG+(sn-Im)+0X001];end;end;end;end;end;end;end;end;end);do if Zw then do if Aw then do if pw~=0X001 then do return ww[Qw](V(ww,Qw+0X1,Lw));end;else do return ww[Qw]();end;end;end;elseif Qw then do return V(ww,Qw,pw);end;end;end;else if C(Aw)~="string"then E(Aw,0);else if M(Aw,"a\116\116\e\m\p\116\032\116\111\032\y\i\101\l\100\032\097\cro\s\s\032\109\eta\m\e\116\104\o\d\047\C%\-\ca\l\108\032\098\o\117\110\d\097\114\121")then return coroutine.yield();end;if not(M(Aw,"\^\.\045:\%\100\+\:\ "))then E(Aw,0X0);else E("\L\117r\097\112\104 \S\c\114\i\pt\:"..(YG[Nw-0X1]or"(internal)")..": "..x(Aw),0X000);end;end;end;end;end;else do if lG~=110 then hG=function(...)local rD,sD=0x01,{};local TD={[0X1]=FG,[0X0002]=sD};local cD=I();local OD=((cD==a and SG or cD));local AD=(0X000);local MD,HD=Cd(...);MD=MD-1;for up=0,MD do if not(IG>up)then break;else(sD)[up]=HD[up+1];end;end;if not OG then do HD=nil;end;elseif not(zG)then else do sD[IG]={n=MD>=IG and MD-IG+0X1 or 0X0,V(HD,IG+1,MD+0X1)};end;end;do if OD~=cD then R(hG,OD);end;end;local bD,QD,GD,ED=A(function()while true do local lh=(TG[rD]);local Zh=lh[3];rD=rD+0X1;if not(Zh<25)then if not(Zh>=37)then do if not(Zh<31)then if not(Zh<34)then if not(Zh<35)then do if Zh==36 then do sD[0]=OD[lh[6]];end;lh=TG[rD];do rD=rD+1;end;do sD[0X0000]=sD[0][lh[1]];end;do lh=TG[rD];end;rD=rD+1;if sD[0]then rD=lh[0X5];end;else sD[0x0]=OD[lh[6]];do lh=TG[rD];end;rD=rD+0x01;(sD)[1]=lh[6];local lF=(0);lh=TG[rD];do rD=rD+1;end;(sD)[0X2]=lh[0X6];rD=rD+0X001;do(sD)[lF]=sD[lF](sD[lF+0X1],sD[lF+0X2]);end;AD=lF;lh=TG[rD];rD=rD+1;if sD[0]then rD=lh[0X05];end;end;end;else sD[2]=OD[lh[6]];do rD=rD+1;end;rD=rD+0x1;lh=TG[rD];rD=rD+0X1;(sD)[3]=lh[0X006];lh=TG[rD];rD=rD+0x01;do sD[4]=sD[0X01][lh[0X1]];end;do rD=rD+1;end;local sY=(0X0002);(sD[sY])(sD[sY+0x1],sD[sY+0X02]);AD=sY-0X1;rD=rD+0X1;rD=rD+1;do lh=TG[rD];end;rD=rD+0x001;sD[2]=OD[lh[0x00006]];lh=TG[rD];do rD=rD+1;end;(sD)[3]=lh[6];do lh=TG[rD];end;do rD=rD+1;end;do(sD)[0X4]=lh[6];end;do rD=rD+1;end;sY=2;sD[sY](sD[sY+0X01],sD[sY+2]);AD=sY-0x1;lh=TG[rD];rD=rD+1;do sD[0X002]=OD[lh[6]];end;do lh=TG[rD];end;rD=rD+0X01;sD[0X3]=lh[0X0006];lh=TG[rD];rD=rD+0X1;(sD)[4]=lh[6];rD=rD+0x1;sY=2;(sD[sY])(sD[sY+1],sD[sY+2]);AD=sY-0X1;rD=rD+1;do rD=rD+0X1;end;lh=TG[rD];rD=rD+0X00001;(sD)[0X00002]=OD[lh[0x06]];rD=rD+0X1;rD=rD+1;do lh=TG[rD];end;rD=rD+1;do(sD)[0x3]=lh[6];end;lh=TG[rD];rD=rD+1;(sD)[0X0004]=lh[0x6];rD=rD+0X1;do sY=0x00002;end;(sD[sY])(sD[sY+0X1],sD[sY+0X2]);do AD=sY-0X1;end;rD=rD+1;rD=rD+1;lh=TG[rD];rD=rD+1;rD=lh[5];end;else if Zh>=0x020 then if Zh==0X00021 then sD[0]=OD[lh[6]];lh=TG[rD];rD=rD+0X01;sD[0]=sD[0X0][lh[1]];do lh=TG[rD];end;rD=rD+0x1;do if sD[0X0]then rD=lh[5];end;end;else if not sD[lh[2]]then rD=lh[0x5];end;end;else(sD)[0]=OD[lh[6]];local It=cG[1];do rD=rD+0x1;end;local Qt=0X0;rD=rD+1;lh=TG[rD];do rD=rD+1;end;sD[1]=lh[6];rD=rD+0x001;do sD[Qt]=sD[Qt](sD[Qt+1]);end;AD=Qt;do rD=rD+1;end;sD[0X00001]=It[1][It[0X02]];rD=rD+0x0001;rD=rD+1;lh=TG[rD];rD=rD+1;sD[1]=sD[1][lh[0x1]];rD=rD+0X1;(sD)[0X2]=sD[0];rD=rD+1;do Qt=1;end;sD[Qt]=sD[Qt](sD[Qt+1]);AD=Qt;lh=TG[rD];rD=rD+1;if not(not sD[1])then else do rD=lh[0x5];end;end;end;end;else if not(Zh>=28)then do if Zh>=26 then if Zh==27 then do for cx=lh[2],lh[5]do(sD)[cx]=nil;end;end;else(sD)[lh[2]]=TD[lh[5]];end;else local B9=sD[lh[5]]/sD[lh[4]];do(sD)[lh[2]]=B9-B9%0X1;end;end;end;else do if not(Zh<0X1d)then if Zh==30 then(sD)[lh[0X2]]=sD[lh[0X5]]>sD[lh[4]];else(sD)[lh[2]]=OD[lh[0X6]];end;else sD[0X0]=OD[lh[6]];do rD=rD+0x01;end;rD=rD+1;lh=TG[rD];do rD=rD+1;end;local kE=0;sD[0X1]=lh[0x06];rD=rD+1;sD[kE]=sD[kE](sD[kE+0X1]);AD=kE;lh=TG[rD];rD=rD+0X1;sD[0x0000]=sD[0][lh[0x00001]];lh=TG[rD];do rD=rD+1;end;if not(not sD[0])then else rD=lh[0X05];end;end;end;end;end;end;else if not(Zh<43)then if Zh>=0X00002e then do if Zh<0X00030 then do if Zh==47 then if not(not(lh[6]<=sD[lh[0x4]]))then else rD=lh[2];end;else sD[0X000]=OD[lh[6]];lh=TG[rD];rD=rD+0X001;(sD)[1]=lh[6];local fG=0;rD=rD+0X01;sD[fG]=sD[fG](sD[fG+1]);do AD=fG;end;rD=rD+1;do rD=rD+0X1;end;lh=TG[rD];rD=rD+0x1;sD[0X0]=sD[0X0][lh[0X1]];do rD=rD+1;end;do rD=rD+1;end;do lh=TG[rD];end;do rD=rD+0x1;end;if not(sD[0X0])then else rD=lh[0x5];end;end;end;else if Zh==0x31 then sD[0X0000]=OD[lh[0X6]];lh=TG[rD];rD=rD+0x1;local cp=(0);sD[1]=lh[0x6];rD=rD+1;(sD[cp])(sD[cp+1]);do AD=cp-1;end;do lh=TG[rD];end;rD=rD+0x1;rD=lh[0X5];else sD[lh[2]][sD[lh[0x05]]]=sD[lh[4]];end;end;end;else do if Zh<44 then do sD[0X00]=OD[lh[0X00006]];end;lh=TG[rD];rD=rD+1;local Hb=(0);(sD)[1]=lh[6];do rD=rD+1;end;sD[Hb]=sD[Hb](sD[Hb+1]);AD=Hb;do rD=rD+0X1;end;rD=rD+0X1;do lh=TG[rD];end;rD=rD+1;sD[0]=sD[0x0][lh[0X00001]];rD=rD+1;rD=rD+1;do lh=TG[rD];end;rD=rD+1;do if not(sD[0X0])then else rD=lh[5];end;end;else do if Zh~=45 then sD[0]=OD[lh[0X06]];do lh=TG[rD];end;rD=rD+1;sD[0X001]=lh[6];rD=rD+1;local v3=(0X0);(sD[v3])(sD[v3+0x01]);AD=v3-0X1;do rD=rD+0x1;end;do rD=rD+1;end;lh=TG[rD];rD=rD+0X1;rD=lh[5];else(sD)[0]=OD[lh[0x6]];do lh=TG[rD];end;rD=rD+1;sD[1]=lh[6];rD=rD+0X1;local hW=(0X00000);(sD)[hW]=sD[hW](sD[hW+1]);local cW=(cG[0X1]);AD=hW;rD=rD+0X00001;rD=rD+1;rD=rD+0x1;(sD)[0x001]=cW[0X0001][cW[2]];rD=rD+0X1;rD=rD+1;lh=TG[rD];rD=rD+1;(sD)[1]=sD[0X1][lh[1]];rD=rD+0X00001;rD=rD+1;rD=rD+0x1;sD[0x2]=sD[0];rD=rD+0X01;hW=1;(sD)[hW]=sD[hW](sD[hW+0X00001]);AD=hW;rD=rD+1;rD=rD+1;lh=TG[rD];do rD=rD+0X0001;end;do if not(not sD[1])then else do rD=lh[0X0005];end;end;end;end;end;end;end;end;else if Zh<0X28 then if not(Zh<38)then if Zh~=0X27 then do(sD)[0]=OD[lh[6]];end;do lh=TG[rD];end;rD=rD+1;(sD)[0]=sD[0X0][lh[0X01]];rD=rD+1;do rD=rD+0X1;end;lh=TG[rD];rD=rD+0x1;do if not(sD[0])then else do rD=lh[5];end;end;end;else sD[0]=OD[lh[0X00006]];rD=rD+0X1;rD=rD+0X1;lh=TG[rD];do rD=rD+1;end;(sD)[0]=sD[0][lh[1]];rD=rD+0X1;rD=rD+0X1;do lh=TG[rD];end;rD=rD+1;do if not(not sD[0X0])then else do rD=lh[0X5];end;end;end;end;else sD[0X0]=OD[lh[0X6]];do lh=TG[rD];end;rD=rD+0X001;sD[0X1]=lh[0x6];lh=TG[rD];rD=rD+1;do sD[2]=lh[0X6];end;local tw=0;do rD=rD+0x001;end;(sD)[tw]=sD[tw](sD[tw+0X1],sD[tw+2]);do AD=tw;end;do rD=rD+1;end;do rD=rD+1;end;lh=TG[rD];rD=rD+0X00001;if not(not sD[0X0])then else do rD=lh[5];end;end;end;else do if Zh<0X29 then(sD)[5]=sD[4];rD=rD+0X0001;sD[0X1]=sD[5];lh=TG[rD];rD=rD+1;rD=lh[5];else if Zh==0X2a then do sD[0]=OD[lh[6]];end;rD=rD+1;rD=rD+0X1;lh=TG[rD];rD=rD+1;if not(sD[0X0])then else rD=lh[5];end;else(sD)[0X0]=OD[lh[6]];do lh=TG[rD];end;local xj=0X0;do rD=rD+1;end;do sD[0]=sD[0][lh[0X1]];end;do lh=TG[rD];end;rD=rD+0x1;sD[0X1]=lh[6];rD=rD+0X1;sD[xj]=sD[xj](sD[xj+1]);AD=xj;lh=TG[rD];do rD=rD+1;end;if not sD[0]then rD=lh[0X5];end;end;end;end;end;end;end;else do if Zh>=0XC then do if not(Zh<0X012)then if not(Zh<0x15)then if not(Zh>=23)then if Zh~=0x16 then sD[0X0]=OD[lh[6]];rD=rD+0X00001;rD=rD+0X001;lh=TG[rD];rD=rD+0X01;do if sD[0]then rD=lh[0x5];end;end;else repeat local ME,tE=iG,sD;if not(#ME>0)then else local Cv=({});for ze,ae in l,ME do for TN,KN in l,ae do if not(KN[0X1]==tE and KN[2]>=0X0)then else local a4=KN[0X2];do if not Cv[a4]then Cv[a4]={tE[a4]};end;end;KN[1]=Cv[a4];(KN)[0X002]=1;end;end;end;end;until true;local fn=lh[0X2];return false,fn,fn+lh[0X5]-0x002;end;else if Zh==24 then(sD)[0x0000]=OD[lh[0x00006]];lh=TG[rD];rD=rD+1;(sD)[0]=sD[0X0][lh[1]];lh=TG[rD];do rD=rD+0x1;end;if not sD[0]then rD=lh[5];end;else sD[0]=OD[lh[6]];lh=TG[rD];rD=rD+1;do sD[0x0]=sD[0][lh[0X1]];end;rD=rD+0X1;rD=rD+1;lh=TG[rD];do rD=rD+1;end;if not(sD[0])then else rD=lh[5];end;end;end;else if Zh>=0x13 then if Zh~=20 then(sD)[0]=OD[lh[6]];rD=rD+1;rD=rD+0X1;lh=TG[rD];do rD=rD+1;end;local nT=(0X0000);do sD[0x01]=lh[6];end;rD=rD+1;(sD)[nT]=sD[nT](sD[nT+1]);AD=nT;rD=rD+0X0001;rD=rD+0x1;lh=TG[rD];rD=rD+1;do sD[0X00]=sD[0X00][lh[1]];end;rD=rD+0x1;rD=rD+1;do lh=TG[rD];end;rD=rD+1;if not(not sD[0X000])then else rD=lh[5];end;else(sD)[0x6]=sD[4][lh[1]];lh=TG[rD];do rD=rD+0X1;end;do(sD)[7]=sD[0x01][lh[1]];end;rD=rD+0X1;rD=rD+1;lh=TG[rD];rD=rD+0X1;if not(sD[0X6]<sD[0X00007])then rD=lh[0X02];end;end;else(sD)[0]=OD[lh[0X6]];rD=rD+1;rD=rD+1;local RN=0;do lh=TG[rD];end;rD=rD+1;sD[0x1]=lh[6];rD=rD+0X01;sD[RN](sD[RN+0X1]);AD=RN-1;rD=rD+1;do rD=rD+0X1;end;lh=TG[rD];rD=rD+1;do sD[0]=OD[lh[6]];end;lh=TG[rD];rD=rD+0x1;do sD[0]=sD[0][lh[0X1]];end;rD=rD+0X0001;do rD=rD+1;end;lh=TG[rD];rD=rD+1;do(sD)[0X0]=sD[0][lh[1]];end;rD=rD+1;rD=rD+1;lh=TG[rD];rD=rD+1;do sD[0]=sD[0][lh[0X1]];end;rD=rD+1;rD=rD+1;lh=TG[rD];rD=rD+0X1;do if not(lh[6]<=sD[0X0])then rD=lh[2];end;end;end;end;else do if not(Zh<0x000f)then do if not(Zh<0X10)then if Zh==17 then(OD)[lh[6]]=sD[lh[0X2]];else sD[lh[0x02]]=lh[6];end;else rD=lh[5];end;end;else if not(Zh>=0XD)then do sD[lh[2]]={V({},1,lh[0X0005])};end;else if Zh==14 then local f_=lh[2];local t_,j_,D_=sD[f_]();if not(t_)then else sD[f_+1]=j_;(sD)[f_+0X2]=D_;rD=lh[5];end;else(sD)[0x00000]=OD[lh[6]];rD=rD+0X1;rD=rD+1;do lh=TG[rD];end;rD=rD+1;sD[0]=sD[0][lh[1]];do rD=rD+1;end;rD=rD+1;lh=TG[rD];do rD=rD+1;end;do if not sD[0X0]then rD=lh[0X05];end;end;end;end;end;end;end;end;else if Zh<6 then if not(Zh<3)then do if Zh<4 then local Hi=cG[1];do(sD)[1]=Hi[1][Hi[2]];end;rD=rD+1;rD=rD+1;lh=TG[rD];rD=rD+1;sD[0X0001]=sD[0X1][lh[1]];rD=rD+1;local xi=0x1;rD=rD+0X1;do rD=rD+1;end;(sD)[0x2]=sD[0];do rD=rD+0X1;end;Hi=cG[0X0000];(sD)[3]=Hi[1][Hi[2]];rD=rD+0X1;(sD)[4]=nil;rD=rD+1;sD[5]={};lh=TG[rD];local vi=JG[lh[5]];rD=rD+0X1;local Bi,Ji=vi[4],(nil);local ui=(#Bi);if not(ui>0)then else do Ji={};end;for iw=0X1,ui do local Tw=(Bi[iw]);if Tw[1]==0X0 then(Ji)[iw-1]={sD,Tw[0X02]};else Ji[iw-1]=cG[Tw[2]];end;end;(H)(iG,Ji);end;sD[0X6]=ed(OD,vi,Ji);lh=TG[rD];rD=rD+0X1;do(sD[5])[lh[0X6]]=sD[6];end;do rD=rD+1;end;AD=xi+5-0X1;sD[xi](V(sD,xi+1,AD));do AD=xi-0X01;end;lh=TG[rD];rD=rD+0X1;rD=lh[0X5];else if Zh~=0x5 then repeat local TN,UN=iG,sD;do if#TN>0 then local Uz={};for Xt,Ut in l,TN do for Io,Qo in l,Ut do if not(Qo[0X1]==UN and Qo[0X00002]>=0)then else local N3=(Qo[0X2]);if not Uz[N3]then Uz[N3]={UN[N3]};end;Qo[0X1]=Uz[N3];(Qo)[2]=0X00001;end;end;end;end;end;until true;do return;end;else sD[0X0]=OD[lh[0x006]];rD=rD+0X001;AD=0X0;sD[AD]=sD[AD]();rD=rD+0x01;rD=rD+0X1;lh=TG[rD];rD=rD+0X01;if not(sD[0])then else do rD=lh[5];end;end;end;end;end;else if Zh<0X1 then else if Zh~=2 then(sD)[0]=OD[lh[0X6]];lh=TG[rD];local ro=0;rD=rD+0X001;sD[0X1]=lh[0X6];rD=rD+0X1;(sD)[ro]=sD[ro](sD[ro+0X1]);AD=ro;rD=rD+0X1;(sD)[0x1]={};lh=TG[rD];rD=rD+0X00001;do(sD)[0X02]=lh[6]/lh[0X1];end;lh=TG[rD];do rD=rD+1;end;(sD[1])[lh[0x6]]=sD[0x0002];lh=TG[rD];local Uo=(2);rD=rD+1;(sD)[2]=OD[lh[0X00006]];rD=rD+0X0001;rD=rD+1;do rD=rD+1;end;do sD[3]=sD[0X0];end;rD=rD+0X00001;ro=0x2;local lo=0X4;if Uo==0X000 then else do AD=ro+Uo-0X1;end;end;local Po,Vo=nil,nil;do if Uo~=1 then Po,Vo=Cd(sD[ro](V(sD,ro+0X1,AD)));else do Po,Vo=Cd(sD[ro]());end;end;end;do if lo~=0X1 then do if lo==0X0 then do Po=Po+ro-0X1;end;AD=Po;else Po=ro+lo-2;AD=Po+0X0001;end;end;local DB=(0);for KW=ro,Po do DB=DB+0X1;do(sD)[KW]=Vo[DB];end;end;else do AD=ro-1;end;end;end;lh=TG[rD];rD=rD+1;do ro=2;end;local so=h(function(...)(t)();for bU,IU in...do t(true,bU,IU);end;end);so(sD[ro],sD[ro+1],sD[ro+0X2]);AD=ro;do(sD)[ro]=so;end;rD=lh[0x00005];else if sD[lh[2]]then do rD=lh[0x00005];end;end;end;end;end;else do if not(Zh<0X09)then if Zh<10 then sD[1]=OD[lh[0X06]];rD=rD+1;rD=rD+1;do rD=rD+1;end;AD=0X0001;sD[AD]=sD[AD]();rD=rD+1;local JV=(0X2);rD=rD+1;do lh=TG[rD];end;do rD=rD+0x1;end;sD[0X2]=OD[lh[6]];do lh=TG[rD];end;local gV=nil;rD=rD+0X00001;sD[3]=lh[6];rD=rD+1;sD[JV]=sD[JV](sD[JV+0X1]);AD=JV;lh=TG[rD];local aV=(cG[0X1]);do rD=rD+0X1;end;sD[0X2]=sD[0X0002][lh[1]];do rD=rD+0x1;end;(sD)[0X3]=aV[0X1][aV[2]];lh=TG[rD];rD=rD+0x0001;do(sD)[0X03]=sD[0X3][lh[0X1]];end;rD=rD+1;rD=rD+0X1;rD=rD+1;do sD[0X4]=sD[0];end;rD=rD+0X01;aV=cG[0];(sD)[0x0005]=aV[1][aV[0X2]];lh=TG[rD];do rD=rD+1;end;local DV=JG[lh[5]];local OV=DV[0X4];local qV=#OV;do if not(qV>0)then else gV={};for OC=0X1,qV do local mC=OV[OC];do if mC[0X0001]~=0X0 then gV[OC-0x01]=cG[mC[2]];else do gV[OC-1]={sD,mC[0X0002]};end;end;end;end;H(iG,gV);end;end;sD[0X6]=ed(OD,DV,gV);rD=rD+1;sD[0X0007]={};lh=TG[rD];rD=rD+0X001;DV=JG[lh[5]];gV=nil;OV=DV[0X4];do qV=#OV;end;if not(qV>0X0)then else do gV={};end;do for JI=1,qV do local eI=(OV[JI]);if eI[1]==0X00 then do gV[JI-1]={sD,eI[2]};end;else(gV)[JI-1]=cG[eI[2]];end;end;end;H(iG,gV);end;(sD)[8]=ed(OD,DV,gV);lh=TG[rD];rD=rD+0X1;do sD[7][lh[0x00006]]=sD[0X08];end;rD=rD+0x001;JV=3;do AD=JV+5-0X1;end;sD[JV](V(sD,JV+0X1,AD));AD=JV-0X0001;do rD=rD+1;end;repeat local Ux,ax=iG,sD;if not(#Ux>0)then else local wT=({});do for P8,s8 in l,Ux do for JZ,tZ in l,s8 do if tZ[1]==ax and tZ[0X2]>=0X1 then local b6=tZ[0X0002];if not(not wT[b6])then else do wT[b6]={ax[b6]};end;end;tZ[0X1]=wT[b6];(tZ)[0x2]=1;end;end;end;end;end;until true;lh=TG[rD];rD=rD+1;rD=lh[5];else if Zh~=11 then do sD[0X0000]=OD[lh[6]];end;do lh=TG[rD];end;local x2=0;rD=rD+1;sD[1]=lh[6];rD=rD+1;do sD[x2]=sD[x2](sD[x2+0X001]);end;AD=x2;do lh=TG[rD];end;rD=rD+0X00001;(sD)[0X00000]=sD[0x0000][lh[1]];rD=rD+1;rD=rD+0x1;lh=TG[rD];rD=rD+0X001;if not(sD[0])then else rD=lh[5];end;else sD[lh[0x2]]=sD[lh[0x005]][lh[0X1]];end;end;else do if Zh>=0X0007 then do if Zh==0X8 then sD[0X2]=OD[lh[6]];rD=rD+1;rD=rD+0X1;do rD=rD+0x00001;end;AD=2;(sD[AD])();AD=AD-1;rD=rD+1;rD=rD+0X00001;lh=TG[rD];rD=rD+0X1;rD=lh[0x5];else local Ge=JG[lh[5]];local he=nil;local Re=Ge[4];local Ze=(#Re);if not(Ze>0)then else he={};for Sr=1,Ze do local Dr=(Re[Sr]);if Dr[0x00001]~=0 then(he)[Sr-0X1]=cG[Dr[0X0002]];else he[Sr-1]={sD,Dr[2]};end;end;(H)(iG,he);end;do sD[lh[0x2]]=ed(OD,Ge,he);end;end;end;else local QB=(cG[0x00000]);do(sD)[0]=QB[1][QB[0x2]];end;local lB=0;rD=rD+1;do rD=rD+0X1;end;lh=TG[rD];do rD=rD+0x1;end;local jB=(sD[0X0]);do(sD)[lB+0x00001]=jB;end;do(sD)[lB]=jB[lh[0X1]];end;rD=rD+0X1;lB=0;sD[lB]=sD[lB](sD[lB+1]);AD=lB;rD=rD+1;rD=rD+0x1;lh=TG[rD];rD=rD+1;do if not sD[0X000]then rD=lh[5];end;end;end;end;end;end;end;end;end;end;end;end);do if not(bD)then if C(QD)~="str\ing"then(E)(QD,0X0000);else if not(M(QD,'a\116t\101\m\p\116\032\116\o \yi\e\108\d\032\097\cr\os\s\ m\et\097\meth\o\100\/\C\%\-\c\097\l\l\032b\ou\110d\097r\121'))then else return coroutine.yield();end;if not(M(QD,"^.-:%d+: "))then E(QD,0);else E("\L\117ra\p\h\ \083\099\114\i\112t\:"..(YG[rD-1]or"(internal)")..": "..x(QD),0);end;end;else if QD then if ED~=0X01 then do return sD[GD](V(sD,GD+0x1,AD));end;else do return sD[GD]();end;end;elseif GD then return V(sD,GD,ED);end;end;end;end;else do hG=function(...)local vW,VW=0x1,{};local dW={[0X0002]=VW,[0X1]=FG};local QW=I();local eW,nW=Cd(...);eW=eW-1;local GW=((QW==a and SG or QW));for Xs=0,eW do if IG>Xs then do(VW)[Xs]=nW[Xs+0X1];end;else break;end;end;if not OG then do nW=nil;end;elseif not(zG)then else VW[IG]={n=eW>=IG and eW-IG+1 or 0X0,V(nW,IG+0X00001,eW+1)};end;do if GW~=QW then R(hG,GW);end;end;local sW=0;do while true do local cl=(TG[vW]);local Al=(cl[0X3]);vW=vW+0x1;do return(function(d,C,...)local f,S=d[0],d[1];local G={ElectricClaw="Electric Claw",BlackLeg="Black Leg",DragonClaw="Dragon Claw",FishmanKarate="Fishman Karate",DragonTalon="Dragon Talon",SharkmanKarate="Sharkman Karate",DeathStep="Death Step"};if not MasteryData[f]or MasteryData[f]<S then if purchaseCombat(f)then wait(.5);pcall(function()MasteryData[f]=GetToolFromTip(G[f],true).Level.Value;end);end;return;end;return true;end)(VW,cG,...);end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;else do if lG>=0X81 then if not(lG>=138)then if lG>=0X085 then if lG>=0X087 then do if not(lG<0X88)then if lG==137 then hG=function(...)local wl,Zl=0x00001,({});local Ll,dl={[0X0002]=Zl,[0X1]=FG},(0X0);local El=I();local Dl,kl=Cd(...);local Rl=(El==a and SG or El);Dl=Dl-0X1;for kM=0X0,Dl do do if not(IG>kM)then break;else do(Zl)[kM]=kl[kM+1];end;end;end;end;do if not OG then do kl=nil;end;elseif zG then(Zl)[IG]={n=Dl>=IG and Dl-IG+1 or 0X000,V(kl,IG+1,Dl+1)};end;end;if Rl==El then else(R)(hG,Rl);end;local bl,Nl,tl,pl=A(function()while true do local sm=TG[wl];local zm=sm[3];wl=wl+0X1;if not(zm>=6)then do if not(zm<0X3)then if zm>=0x4 then if zm==5 then local XL=(sm[0x2]);local sL=((sm[0X4]-0X00001)*0X32);local lL=(Zl[XL]);for y4=1,sm[5]do do(lL)[sL+y4]=Zl[XL+y4];end;end;else wl=sm[0X5];end;else do(Zl)[sm[2]]=b(Zl[sm[5]],Zl[sm[0X04]]);end;end;else do if zm<1 then local uv=(nil);local Wv=JG[sm[0X5]];local Tv=Wv[4];local rv=(#Tv);if rv>0 then do uv={};end;for T2=1,rv do local o2=(Tv[T2]);if o2[0x001]==0 then do uv[T2-1]={Zl,o2[2]};end;else(uv)[T2-0X1]=cG[o2[2]];end;end;H(iG,uv);end;do Zl[sm[2]]=ed(Rl,Wv,uv);end;else if zm~=2 then(Zl)[sm[2]]={V({},1,sm[5])};else Zl[sm[0X2]]=sm[0x6];end;end;end;end;end;else if zm<0x9 then if zm>=7 then do if zm~=8 then(Zl)[sm[2]]=Rl[sm[6]];else do if not(Zl[sm[0X2]])then else wl=sm[5];end;end;end;end;else local ZX,JX=sm[0X0002],(sm[0X5]);dl=ZX+JX-1;repeat local hu,Zu=iG,Zl;if not(#hu>0X00)then else local Fz={};for lN,eN in l,hu do for qp,Qp in l,eN do if Qp[0X00001]==Zu and Qp[0X2]>=0X0 then local cH=Qp[0X00002];do if not(not Fz[cH])then else Fz[cH]={Zu[cH]};end;end;(Qp)[0X001]=Fz[cH];Qp[0X00002]=1;end;end;end;end;until true;return true,ZX,JX;end;else if not(zm>=10)then(Zl)[0X0]=Rl[sm[6]];local SW=nil;do wl=wl+0X1;end;wl=wl+0X00001;sm=TG[wl];local fW=(0);do wl=wl+0X1;end;(Zl)[0X0]=Zl[0][sm[0x1]];sm=TG[wl];do wl=wl+1;end;local KW=JG[sm[5]];local sW=KW[4];local zW=#sW;do if not(zW>0X000)then else do SW={};end;for BS=0x1,zW do local JS=sW[BS];if JS[0x1]~=0X0 then SW[BS-1]=cG[JS[0x2]];else(SW)[BS-1]={Zl,JS[2]};end;end;(H)(iG,SW);end;end;Zl[1]=ed(Rl,KW,SW);do wl=wl+1;end;(Zl[fW])(Zl[fW+0x1]);dl=fW-1;do wl=wl+1;end;repeat local Wu,qu=iG,(Zl);if#Wu>0x0 then local W7={};for KK,ZK in l,Wu do for Ea,Ka in l,ZK do if not(Ka[0X1]==qu and Ka[0X2]>=0X0)then else local JK=Ka[2];do if not(not W7[JK])then else(W7)[JK]={qu[JK]};end;end;Ka[1]=W7[JK];(Ka)[2]=0X1;end;end;end;end;until true;return;else if zm==11 then local Qu=(sm[0X002]);local Ou,Mu=Zl[Qu]();if not(Ou)then else for SD=1,sm[4]do Zl[Qu+SD]=Mu[SD];end;wl=sm[5];end;else end;end;end;end;end;end);if bl then if Nl then do if pl==0x00001 then return Zl[tl]();else do return Zl[tl](V(Zl,tl+0X1,dl));end;end;end;elseif not(tl)then else return V(Zl,tl,pl);end;else if C(Nl)=="string"then if not(M(Nl,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if M(Nl,'\^\046\-:\%\d\+\:\ ')then(E)("\L\117ra\112\h\032\083c\114\i\p\116\:"..(YG[wl-1]or"(internal)")..": "..x(Nl),0x0000);else(E)(Nl,0X000);end;else(E)(Nl,0X0000);end;end;end;else hG=function(...)local o3,B3=1,{};local w3=I();local h3,M3=Cd(...);local H3={[0X0002]=B3,[0X1]=FG};local L3,i3=0,((w3==a and SG or w3));h3=h3-0X1;for Z6=0X0,h3 do if not(IG>Z6)then do break;end;else do B3[Z6]=M3[Z6+1];end;end;end;do if not OG then do M3=nil;end;elseif not(zG)then else do B3[IG]={n=h3>=IG and h3-IG+0X1 or 0X0,V(M3,IG+0X0001,h3+0X1)};end;end;end;if i3==w3 then else R(hG,i3);end;local v3,q3,X3,s3=A(function()while true do local Hc=TG[o3];local gc=(Hc[0X3]);o3=o3+1;if gc<0X07 then if gc>=0x3 then do if not(gc<5)then if gc==6 then B3[Hc[2]]=Hc[0x6];else(B3)[Hc[0x2]]=i3[Hc[0X6]];end;else if gc~=4 then if not(B3[Hc[0X5]]<=B3[Hc[0X4]])then else o3=Hc[0x00002];end;else local YM=Hc[0X2];local xM,XM=B3[YM],(Hc[0X4]-0X0001)*0X32;for p9=1,Hc[0x00005]do(xM)[XM+p9]=B3[YM+p9];end;end;end;end;else if not(gc>=0X01)then(B3)[Hc[0X2]]=T(B3[Hc[0X5]],B3[Hc[4]]);else if gc==0x2 then do B3[Hc[0X2]]=not B3[Hc[0x05]];end;else local Pu=JG[Hc[5]];local Tu=(nil);local Lu=Pu[0X4];local Wu=(#Lu);if not(Wu>0X0)then else Tu={};do for qo=0X001,Wu do local ro=(Lu[qo]);if ro[1]==0 then Tu[qo-1]={B3,ro[2]};else Tu[qo-0x0001]=cG[ro[0X2]];end;end;end;H(iG,Tu);end;(B3)[Hc[0X2]]=ed(i3,Pu,Tu);end;end;end;else do if gc>=10 then if gc<0X0c then if gc==11 then(B3[Hc[0X002]])[B3[Hc[5]]]=B3[Hc[0X4]];else B3[Hc[0x2]]=true;end;else if gc~=13 then do o3=Hc[0x5];end;else B3[Hc[0X002]]={V({},1,Hc[5])};end;end;else do if not(gc>=0X8)then else if gc~=0X9 then for eZ=Hc[2],Hc[0X005]do(B3)[eZ]=nil;end;else B3[0]=i3[Hc[0X6]];o3=o3+1;o3=o3+0X01;local Sz=(0x0);Hc=TG[o3];o3=o3+0X1;local Pz=B3[0X0];(B3)[Sz+1]=Pz;B3[Sz]=Pz[Hc[1]];Hc=TG[o3];do o3=o3+1;end;B3[2]=Hc[6];do o3=o3+1;end;do Sz=0;end;(B3)[Sz]=B3[Sz](B3[Sz+0X01],B3[Sz+0X2]);L3=Sz;Hc=TG[o3];o3=o3+0x1;(B3)[1]=i3[Hc[0X0006]];Hc=TG[o3];o3=o3+1;(B3)[1]=B3[1][Hc[0X01]];do Hc=TG[o3];end;local kz=(JG[Hc[0X5]]);do o3=o3+0X00001;end;local Dz,Jz=kz[0X4],nil;local Tz=(#Dz);if Tz>0 then do Jz={};end;for BD=1,Tz do local ND=Dz[BD];if ND[1]~=0X00 then(Jz)[BD-0X1]=cG[ND[2]];else(Jz)[BD-1]={B3,ND[0X002]};end;end;(H)(iG,Jz);end;(B3)[2]=ed(i3,kz,Jz);o3=o3+1;do Sz=0x001;end;(B3[Sz])(B3[Sz+0X1]);do L3=Sz-1;end;do o3=o3+0x1;end;o3=o3+0X0001;o3=o3+1;repeat local Uv,cv=iG,B3;if#Uv>0 then local lx=({});for dv,Cv in l,Uv do for RS,QS in l,Cv do if QS[1]==cv and QS[2]>=0 then local xv=QS[2];if not lx[xv]then lx[xv]={cv[xv]};end;QS[0X1]=lx[xv];QS[0X2]=0X0001;end;end;end;end;until true;return;end;end;end;end;end;end;end;end);if v3 then if q3 then if s3~=1 then return B3[X3](V(B3,X3+0X01,L3));else do return B3[X3]();end;end;elseif not(X3)then else do return V(B3,X3,s3);end;end;else do if C(q3)~="string"then E(q3,0);else do if M(q3,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(M(q3,"\^\.\-:\037\100+\: "))then E(q3,0X0);else(E)("Luraph Script:"..(YG[o3-0x1]or'(\int\e\114\110a\l\)')..": "..x(q3),0);end;end;end;end;end;end;else hG=function(...)local ax=(0);local ux=({});local Ux=(I());local tx=(Ux==a and SG or Ux);local Lx=(0x0001);local zx,Px=Cd(...);local Ox=({[0X1]=FG,[0X0002]=ux});zx=zx-0x1;for M1=0,zx do if IG>M1 then do(ux)[M1]=Px[M1+1];end;else break;end;end;if not OG then Px=nil;elseif zG then(ux)[IG]={n=zx>=IG and zx-IG+1 or 0X00,V(Px,IG+0X1,zx+0X1)};end;if tx~=Ux then(R)(hG,tx);end;local Ax,Dx,Cx,kx=A(function()do while true do local rm=(TG[Lx]);local km=rm[3];do Lx=Lx+0X1;end;if not(km<0X000b)then if km>=17 then if km>=0X14 then if km>=0X15 then if km==0X00016 then do repeat local ZK,gK=iG,ux;if#ZK>0 then local HZ={};for XV,dV in l,ZK do for Ab,Gb in l,dV do if not(Gb[0X1]==gK and Gb[0x2]>=0)then else local G9=(Gb[0x00002]);if not(not HZ[G9])then else(HZ)[G9]={gK[G9]};end;do Gb[0x001]=HZ[G9];end;(Gb)[0X0002]=0X0001;end;end;end;end;until true;end;return;else(ux)[rm[0X2]]=ux[rm[5]]^ux[rm[4]];end;else ux[rm[0X2]]=tx[rm[6]];end;else if not(km<0X12)then if km~=0X0013 then ux[0x01]=tx[rm[6]];rm=TG[Lx];Lx=Lx+0x0001;local BH=0X0001;ux[2]=rm[0X6];Lx=Lx+0X1;(ux)[BH]=ux[BH](ux[BH+0X1]);ax=BH;Lx=Lx+0X001;Lx=Lx+1;rm=TG[Lx];Lx=Lx+1;if not ux[1]then Lx=rm[0X05];end;else local Pg,kg=rm[0X02],ux[rm[0X5]];(ux)[Pg+0x1]=kg;(ux)[Pg]=kg[rm[0X01]];end;else(ux)[0X001]=tx[rm[0X6]];Lx=Lx+1;local ND=1;Lx=Lx+0X0001;rm=TG[Lx];Lx=Lx+1;do(ux)[2]=rm[6];end;rm=TG[Lx];Lx=Lx+0X1;(ux)[3]=rm[6];rm=TG[Lx];Lx=Lx+0X1;ux[4]=rm[6];rm=TG[Lx];Lx=Lx+1;(ux)[5]=rm[6];Lx=Lx+0x1;do ax=ND+5-0x1;end;ux[ND](V(ux,ND+0x001,ax));ax=ND-1;end;end;else if km<0X0e then if km<0XC then do for I7=rm[2],rm[5]do do ux[I7]=nil;end;end;end;else if km==0Xd then ux[0]=tx[rm[0X6]];do rm=TG[Lx];end;local Nt=0X000;local nt=(cG[0X000]);Lx=Lx+1;(ux)[1]=rm[6];Lx=Lx+1;ux[Nt]=ux[Nt](ux[Nt+0X00001]);ax=Nt;Lx=Lx+0x1;Lx=Lx+0X1;Lx=Lx+0X1;(ux)[0X1]=nt[1][nt[0X2]];do rm=TG[Lx];end;Lx=Lx+1;(ux)[0X1]=ux[1][rm[0X1]];Lx=Lx+1;do Lx=Lx+0x1;end;Lx=Lx+0x1;ux[0x002]=ux[0X0];Lx=Lx+0X1;Nt=1;do(ux)[Nt]=ux[Nt](ux[Nt+0X1]);end;do ax=Nt;end;Lx=Lx+1;do Lx=Lx+1;end;rm=TG[Lx];Lx=Lx+1;if not ux[0X1]then do Lx=rm[0X5];end;end;else do ux[rm[0X02]]=ux[rm[0X005]]>ux[rm[0X0004]];end;end;end;else if not(km>=0X0F)then(ux)[rm[0X02]]=ux[rm[0X5]]*ux[rm[4]];else if km==16 then(ux)[rm[0X2]]={V({},1,rm[5])};else local me=JG[rm[0X00005]];local ve=(nil);local ze=(me[4]);local Ke=(#ze);if Ke>0 then ve={};for Sx=1,Ke do local Tx=ze[Sx];if Tx[0X1]==0 then do(ve)[Sx-1]={ux,Tx[0X2]};end;else(ve)[Sx-1]=cG[Tx[0X2]];end;end;(H)(iG,ve);end;(ux)[rm[2]]=ed(tx,me,ve);end;end;end;end;else if not(km>=5)then if not(km>=2)then if km==0X00001 then else(ux)[1]=tx[rm[6]];Lx=Lx+0X1;Lx=Lx+1;rm=TG[Lx];Lx=Lx+0X1;ux[0X2]=tx[rm[6]];do Lx=Lx+0X00001;end;Lx=Lx+0X01;rm=TG[Lx];Lx=Lx+0X1;(ux)[2]=ux[2][rm[0X1]];Lx=Lx+0x00001;Lx=Lx+1;rm=TG[Lx];do Lx=Lx+0X1;end;ux[2]=ux[2][rm[0X01]];do Lx=Lx+0X1;end;local sQ=0X01;Lx=Lx+1;rm=TG[Lx];Lx=Lx+1;(ux)[3]=tx[rm[6]];rm=TG[Lx];Lx=Lx+0X1;ux[3]=ux[3][rm[1]];rm=TG[Lx];Lx=Lx+0X1;(ux)[0x3]=ux[3][rm[1]];do Lx=Lx+1;end;Lx=Lx+1;rm=TG[Lx];Lx=Lx+1;ux[0X3]=ux[3][rm[0x1]];do rm=TG[Lx];end;do Lx=Lx+0X00001;end;(ux)[3]=ux[3][rm[0x1]];do rm=TG[Lx];end;Lx=Lx+0X0001;ux[0X4]=rm[6];Lx=Lx+0x1;ax=sQ+4-1;ux[sQ](V(ux,sQ+0X001,ax));ax=sQ-0X1;do Lx=Lx+0X1;end;Lx=Lx+0X001;rm=TG[Lx];Lx=Lx+1;do(ux)[1]=tx[rm[0X6]];end;Lx=Lx+0X1;Lx=Lx+1;do rm=TG[Lx];end;Lx=Lx+0X00001;ux[0X2]=tx[rm[6]];rm=TG[Lx];do Lx=Lx+0X01;end;do(ux)[2]=ux[2][rm[0X1]];end;Lx=Lx+0X1;Lx=Lx+1;rm=TG[Lx];Lx=Lx+1;ux[2]=ux[0X00002][rm[1]];rm=TG[Lx];Lx=Lx+0X00001;do ux[0X3]=tx[rm[0X06]];end;Lx=Lx+1;do Lx=Lx+0X001;end;rm=TG[Lx];Lx=Lx+1;(ux)[3]=ux[3][rm[0X1]];Lx=Lx+0X1;Lx=Lx+0x0001;rm=TG[Lx];Lx=Lx+0X01;do(ux)[3]=ux[3][rm[1]];end;rm=TG[Lx];Lx=Lx+0X1;ux[3]=ux[3][rm[0x1]];do rm=TG[Lx];end;Lx=Lx+0X1;ux[3]=ux[0x00003][rm[1]];do rm=TG[Lx];end;do Lx=Lx+1;end;(ux)[0X0004]=rm[0X6];Lx=Lx+1;do sQ=0X001;end;ax=sQ+4-0X01;(ux[sQ])(V(ux,sQ+0x1,ax));do ax=sQ-1;end;Lx=Lx+1;Lx=Lx+0X001;rm=TG[Lx];Lx=Lx+0X1;Lx=rm[0X5];end;else if not(km<0X0003)then do if km==0X4 then do Ox[rm[5]]=ux[rm[0x2]];end;else ux[rm[0x0002]]=ux[rm[0X05]];end;end;else local sk=(ux[rm[5]]/ux[rm[4]]);do ux[rm[0x00002]]=sk-sk%1;end;end;end;else if km<8 then if not(km<6)then if km==0X7 then(ux)[rm[0X00002]]=rm[6];else do ux[0]=tx[rm[6]];end;Lx=Lx+0X1;Lx=Lx+0X1;do Lx=Lx+0X1;end;ax=0X00;(ux)[ax]=ux[ax]();do rm=TG[Lx];end;Lx=Lx+0X1;do(ux)[1]=tx[rm[6]];end;Lx=Lx+1;Lx=Lx+0X1;Lx=Lx+0X00001;ux[0]=ux[0]-ux[1];rm=TG[Lx];Lx=Lx+1;do if not(rm[6]<ux[0X0])then Lx=rm[0X002];end;end;end;else Lx=rm[0X05];end;else if not(km<9)then if km==0XA then local NE=(rm[0x05]);local PE=rm[0X2];ax=PE+NE-1;do repeat local Xh,oh=iG,(ux);do if not(#Xh>0X0000)then else local bo={};for G8,v8 in l,Xh do for HQ,jQ in l,v8 do if not(jQ[1]==oh and jQ[0X00002]>=0X0)then else local v_=jQ[2];do if not bo[v_]then bo[v_]={oh[v_]};end;end;do(jQ)[1]=bo[v_];end;do jQ[2]=0X0001;end;end;end;end;end;end;until true;end;return true,PE,NE;else if ux[rm[0x2]]then Lx=rm[5];end;end;else local IQ=cG[0];(ux)[1]=IQ[1][IQ[2]];rm=TG[Lx];Lx=Lx+1;ux[1]=ux[1][rm[1]];do Lx=Lx+1;end;ux[2]=ux[0x00];Lx=Lx+0x1;IQ=cG[1];do(ux)[0X3]=IQ[0X1][IQ[2]];end;Lx=Lx+0X001;Lx=Lx+0X00001;do Lx=Lx+0X1;end;local rQ=1;(ux[rQ])(ux[rQ+1],ux[rQ+2]);ax=rQ-0x1;rm=TG[Lx];Lx=Lx+1;Lx=rm[0x5];end;end;end;end;end;end;end);if not(Ax)then do if C(Dx)~="\s\116\114\i\110\g"then E(Dx,0X0000);else if not(M(Dx,"a\116te\m\112t \116\o \121\ie\l\d\ \097cr\o\ss\ m\101\116\097\m\101\116\104\111d\047\C\%\-\ca\108\108\ \098\111u\110\100a\114y"))then else return coroutine.yield();end;do if M(Dx,'\094\.\045\058\%\d\+\: ')then E("Luraph Script:"..(YG[Lx-0x00001]or"(internal)")..'\058\ '..x(Dx),0X0000);else E(Dx,0);end;end;end;end;else do if Dx then if kx~=0X00001 then return ux[Cx](V(ux,Cx+1,ax));else return ux[Cx]();end;elseif not(Cx)then else return V(ux,Cx,kx);end;end;end;end;end;end;else if lG~=134 then hG=function(...)local kq=(1);local Mq={};local Kq=(I());local sq={[0X0002]=Mq,[0X1]=FG};local yq,Wq=Cd(...);yq=yq-1;for cS=0,yq do if not(IG>cS)then do break;end;else(Mq)[cS]=Wq[cS+1];end;end;local dq=((Kq==a and SG or Kq));local pq=(0X0);if not OG then do Wq=nil;end;elseif zG then Mq[IG]={n=yq>=IG and yq-IG+0X00001 or 0x00000,V(Wq,IG+0x001,yq+0X1)};end;if dq==Kq then else R(hG,dq);end;local hq,Uq,wq,nq=A(function()while true do local En=(TG[kq]);local xn=(En[3]);kq=kq+0X001;if not(xn<10)then if not(xn<15)then if xn>=0X11 then if not(xn<18)then if xn==0X13 then if not(not Mq[En[2]])then else kq=En[0X05];end;else Mq[En[0x02]]=N(Mq[En[0X5]],Mq[En[0x00004]]);end;else do Mq[En[0X02]]={V({},0X1,En[5])};end;end;else if xn==16 then(Mq)[En[0X00002]]=Mq[En[5]]>Mq[En[4]];else end;end;else do if xn<0XC then if xn~=11 then local LB=(cG[0]);(Mq)[0x0]=LB[1][LB[0X2]];En=TG[kq];local ZB=(0);kq=kq+1;local NB=(Mq[0]);do Mq[ZB+1]=NB;end;Mq[ZB]=NB[En[1]];kq=kq+1;ZB=0X0;do(Mq)[ZB]=Mq[ZB](Mq[ZB+1]);end;pq=ZB;do kq=kq+1;end;kq=kq+0X01;En=TG[kq];kq=kq+1;kq=En[5];else repeat local gQ,SQ=iG,Mq;do if#gQ>0 then local jH=({});for Za,Ma in l,gQ do for FI,XI in l,Ma do if not(XI[1]==SQ and XI[2]>=0)then else local tD=XI[0X2];do if not jH[tD]then(jH)[tD]={SQ[tD]};end;end;XI[0x01]=jH[tD];XI[0X0002]=1;end;end;end;end;end;until true;return;end;else if xn<0Xd then do(Mq)[En[0x2]]=En[0X6];end;else do if xn~=0X0e then do(Mq)[En[2]]=b(Mq[En[5]],Mq[En[0X4]]);end;else(Mq)[0X0]=dq[En[0X00006]];kq=kq+1;kq=kq+1;end;end;end;end;end;end;else if not(xn<5)then if xn<0X07 then do if xn==6 then local HQ=(JG[En[5]]);local EQ,NQ=HQ[0x004],(nil);local OQ=#EQ;if OQ>0 then do NQ={};end;do for bR=1,OQ do local gR=EQ[bR];if gR[0X1]==0 then do NQ[bR-1]={Mq,gR[2]};end;else do NQ[bR-1]=cG[gR[0x02]];end;end;end;end;H(iG,NQ);end;do Mq[En[0X2]]=ed(dq,HQ,NQ);end;else local U2,r2=En[0X2],(En[0X5]);if r2~=0 then pq=U2+r2-0X00001;end;local l2=(En[4]);local p2,K2=nil,(nil);if r2~=1 then do p2,K2=Cd(Mq[U2](V(Mq,U2+1,pq)));end;else do p2,K2=Cd(Mq[U2]());end;end;do if l2==1 then do pq=U2-0X1;end;else if l2~=0 then do p2=U2+l2-0x2;end;pq=p2+1;else p2=p2+U2-1;do pq=p2;end;end;local nE=(0);do for DE=U2,p2 do nE=nE+0X1;Mq[DE]=K2[nE];end;end;end;end;end;end;else if xn<0X008 then(Mq)[En[0x00002]]=Mq[En[0X005]];else if xn~=9 then repeat local mp,qp=iG,(Mq);if#mp>0 then local ug=({});for aW,QW in l,mp do for ze,se in l,QW do do if se[1]==qp and se[0X0002]>=0X000 then local dy=se[2];if not ug[dy]then do ug[dy]={qp[dy]};end;end;se[0X1]=ug[dy];se[2]=1;end;end;end;end;end;until true;local mO=(En[0X2]);do return false,mO,mO;end;else(Mq)[0]=dq[En[6]];En=TG[kq];do kq=kq+0X1;end;do Mq[0X0]=Mq[0][En[1]];end;kq=kq+1;kq=kq+0x1;En=TG[kq];kq=kq+1;do if Mq[0X0]then kq=En[5];end;end;end;end;end;else if xn>=2 then if not(xn>=0X3)then do kq=En[0X5];end;else if xn==0X4 then(Mq)[En[0x002]]=Mq[En[0X5]]>=Mq[En[4]];else for NN=En[2],En[0X5]do do Mq[NN]=nil;end;end;end;end;else if xn~=0X01 then do Mq[En[2]]=dq[En[0X6]];end;else local a_=En[0X0002];local s_=h(function(...)t();for Iu,eu,vu,Mu,Lu,Tu,su,mu,gu,xu in...do t(true,{Iu,eu,vu,Mu,Lu,Tu,su,mu,gu,xu});end;end);(s_)(Mq[a_],Mq[a_+0X1],Mq[a_+0X002]);pq=a_;do(Mq)[a_]=s_;end;kq=En[5];end;end;end;end;end;end);if not(hq)then do if C(Uq)~="string"then E(Uq,0X0);else if M(Uq,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(M(Uq,"^.-:%d+: "))then(E)(Uq,0);else E("Luraph Script:"..(YG[kq-0X00001]or"\(i\110\116\erna\108\041").."\:\ "..x(Uq),0X00000);end;end;end;else if Uq then if nq~=1 then return Mq[wq](V(Mq,wq+1,pq));else return Mq[wq]();end;elseif not(wq)then else do return V(Mq,wq,nq);end;end;end;end;else hG=function(...)local nJ,sJ,JJ=1,{},0X0000;local rJ=I();local SJ={[0X0002]=sJ,[0X1]=FG};local DJ=((rJ==a and SG or rJ));local oJ,YJ=Cd(...);oJ=oJ-0x1;do for jg=0,oJ do if not(IG>jg)then break;else(sJ)[jg]=YJ[jg+1];end;end;end;if not OG then YJ=nil;elseif zG then sJ[IG]={n=oJ>=IG and oJ-IG+0x001 or 0,V(YJ,IG+0x00001,oJ+0X01)};end;if DJ==rJ then else R(hG,DJ);end;local mJ,FJ,HJ,fJ=A(function()while true do local v0=TG[nJ];local h0=(v0[3]);do nJ=nJ+1;end;do if h0>=12 then if h0<0X012 then do if not(h0>=15)then do if h0>=0X0d then do if h0==0Xe then do sJ[0]=DJ[v0[6]];end;nJ=nJ+0X1;JJ=0;do(sJ)[JJ]=sJ[JJ]();end;do v0=TG[nJ];end;nJ=nJ+1;if sJ[0X0000]then do nJ=v0[5];end;end;else(sJ)[0]=DJ[v0[0X06]];do nJ=nJ+0X1;end;nJ=nJ+1;v0=TG[nJ];nJ=nJ+1;(sJ)[0x0]=sJ[0X00][v0[0X1]];v0=TG[nJ];nJ=nJ+0x1;if not sJ[0X0]then nJ=v0[0x0005];end;end;end;else sJ[v0[0x2]]=SJ[v0[5]];end;end;else do if not(h0<16)then if h0==0X011 then local ij=cG[0x0];local oj=(0);sJ[0x0]=ij[1][ij[2]];do v0=TG[nJ];end;nJ=nJ+1;local Pj=(sJ[0]);sJ[oj+0X1]=Pj;(sJ)[oj]=Pj[v0[1]];do nJ=nJ+0X1;end;oj=0;(sJ[oj])(sJ[oj+1]);JJ=oj-1;nJ=nJ+0X01;nJ=nJ+1;nJ=nJ+1;repeat local N_,k_=iG,(sJ);do if not(#N_>0X00)then else local PI=({});for XJ,BJ in l,N_ do for hF,EF in l,BJ do if not(EF[1]==k_ and EF[0X002]>=0X0)then else local g5=(EF[2]);do if not PI[g5]then do(PI)[g5]={k_[g5]};end;end;end;(EF)[0X1]=PI[g5];do(EF)[0x2]=0X001;end;end;end;end;end;end;until true;do return;end;else sJ[0]=DJ[v0[6]];do nJ=nJ+1;end;do nJ=nJ+1;end;do v0=TG[nJ];end;nJ=nJ+0X0001;(sJ)[0x00]=sJ[0][v0[1]];nJ=nJ+1;do nJ=nJ+0X0001;end;v0=TG[nJ];nJ=nJ+0X001;sJ[1]=v0[6];nJ=nJ+1;local bI=(0);(sJ)[bI]=sJ[bI](sJ[bI+0X0001]);JJ=bI;v0=TG[nJ];nJ=nJ+1;if not(not sJ[0])then else nJ=v0[0x5];end;end;else(sJ)[v0[0X2]]=sJ[v0[5]]>=sJ[v0[0X4]];end;end;end;end;else if h0<21 then if not(h0<19)then if h0~=20 then sJ[0X00]=DJ[v0[0x00006]];nJ=nJ+1;nJ=nJ+1;nJ=nJ+1;JJ=0;sJ[JJ]=sJ[JJ]();nJ=nJ+0X1;nJ=nJ+0X1;do v0=TG[nJ];end;nJ=nJ+0X1;if sJ[0X0000]<v0[0X0001]then do nJ=v0[2];end;end;else local Ny=(cG[0X0]);sJ[0]=Ny[1][Ny[0X002]];local Sy=(sJ[0X000]);v0=TG[nJ];nJ=nJ+1;local Ry=(0X0);(sJ)[Ry+0X1]=Sy;do sJ[Ry]=Sy[v0[1]];end;do nJ=nJ+0X00001;end;Ry=0;(sJ)[Ry]=sJ[Ry](sJ[Ry+1]);JJ=Ry;do nJ=nJ+0x001;end;nJ=nJ+0X1;v0=TG[nJ];nJ=nJ+0X00001;if not sJ[0X0]then do nJ=v0[0X05];end;end;end;else sJ[0x1]=DJ[v0[0X6]];do nJ=nJ+0x1;end;nJ=nJ+0X1;do v0=TG[nJ];end;nJ=nJ+1;if not sJ[0X0001]then nJ=v0[5];end;end;else if h0>=0X16 then if h0==0x00017 then sJ[v0[0X2]]=v0[0X0006];else sJ[v0[2]]=#sJ[v0[5]];end;else(sJ)[0]=DJ[v0[0x6]];local Kw=0X0;v0=TG[nJ];local xw=JG[v0[0X0005]];local Ow=xw[4];do nJ=nJ+1;end;local jw,lw=nil,(#Ow);do if not(lw>0)then else jw={};for dH=1,lw do local lH=Ow[dH];if lH[0X01]==0x0 then jw[dH-1]={sJ,lH[0x02]};else jw[dH-1]=cG[lH[2]];end;end;(H)(iG,jw);end;end;(sJ)[1]=ed(DJ,xw,jw);nJ=nJ+1;(sJ[Kw])(sJ[Kw+0X0001]);JJ=Kw-0X1;nJ=nJ+1;nJ=nJ+0X1;v0=TG[nJ];nJ=nJ+0x1;sJ[0X0]=DJ[v0[0X0006]];nJ=nJ+1;nJ=nJ+0X1;v0=TG[nJ];nJ=nJ+1;do(sJ)[1]=v0[0X6];end;do nJ=nJ+1;end;Kw=0x0;(sJ)[Kw]=sJ[Kw](sJ[Kw+1]);do JJ=Kw;end;v0=TG[nJ];nJ=nJ+0X0001;if not(not sJ[0])then else nJ=v0[5];end;end;end;end;else do if h0<0X0006 then do if not(h0>=3)then do if not(h0>=0x001)then repeat local Jh,th=iG,sJ;if#Jh>0 then local SR=({});for MV,nV in l,Jh do for g2,h2 in l,nV do if h2[1]==th and h2[2]>=0X0 then local z9=(h2[0X2]);do if not SR[z9]then SR[z9]={th[z9]};end;end;h2[0X0001]=SR[z9];do h2[0X2]=1;end;end;end;end;end;until true;do return;end;else if h0~=0X002 then sJ[v0[0X02]]=sJ[v0[0X05]]*sJ[v0[4]];else end;end;end;else do if h0<4 then(sJ)[0]=DJ[v0[0X006]];do nJ=nJ+1;end;do nJ=nJ+1;end;v0=TG[nJ];nJ=nJ+1;if not(sJ[0])then else nJ=v0[0X5];end;else do if h0~=5 then sJ[v0[0X2]]=sJ[v0[5]][sJ[v0[4]]];else(sJ)[v0[0X2]]={V({},0X1,v0[5])};end;end;end;end;end;end;else if not(h0<9)then if h0>=0XA then if h0~=11 then for FM=v0[0X0002],v0[0X5]do(sJ)[FM]=nil;end;else local PS=(JG[v0[0x5]]);local HS=PS[4];local fS,TS=#HS,nil;do if not(fS>0)then else TS={};do for jY=0X00001,fS do local qY=(HS[jY]);if qY[1]==0X00 then do TS[jY-1]={sJ,qY[0X2]};end;else TS[jY-0x1]=cG[qY[0X00002]];end;end;end;(H)(iG,TS);end;end;do(sJ)[v0[2]]=ed(DJ,PS,TS);end;end;else sJ[v0[2]]=DJ[v0[0x006]];end;else if not(h0>=7)then sJ[0x0]=DJ[v0[0X6]];nJ=nJ+1;nJ=nJ+1;v0=TG[nJ];do nJ=nJ+1;end;do sJ[0x00]=sJ[0][v0[1]];end;do v0=TG[nJ];end;do nJ=nJ+0X1;end;if not sJ[0X0]then nJ=v0[0X5];end;else if h0~=8 then(sJ)[0]=DJ[v0[0X0006]];local Ki=0;v0=TG[nJ];nJ=nJ+1;do sJ[0X1]=v0[6];end;do nJ=nJ+1;end;(sJ)[Ki]=sJ[Ki](sJ[Ki+1]);JJ=Ki;v0=TG[nJ];nJ=nJ+0X1;if not sJ[0X0]then nJ=v0[0X5];end;else nJ=v0[5];end;end;end;end;end;end;end;end;end);if mJ then do if FJ then if fJ~=1 then do return sJ[HJ](V(sJ,HJ+1,JJ));end;else return sJ[HJ]();end;elseif not(HJ)then else return V(sJ,HJ,fJ);end;end;else do if C(FJ)~="string"then E(FJ,0x00000);else if not(M(FJ,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if M(FJ,'^\.\-:\037\100\043\: ')then E("Luraph Script:"..(YG[nJ-1]or"(internal)")..": "..x(FJ),0);else(E)(FJ,0X0);end;end;end;end;end;end;end;end;else if lG>=131 then if lG~=132 then do hG=function(...)local fC,dC=1,({});local BC=I();local nC={[0X1]=FG,[0X0002]=dC};local WC=(BC==a and SG or BC);local bC,NC=Cd(...);do bC=bC-1;end;local GC=0X0;do for tu=0X0,bC do if not(IG>tu)then break;else do(dC)[tu]=NC[tu+0X1];end;end;end;end;if not OG then NC=nil;elseif zG then do dC[IG]={n=bC>=IG and bC-IG+1 or 0,V(NC,IG+1,bC+0X1)};end;end;do if WC~=BC then R(hG,WC);end;end;local VC,iC,wC,ZC=A(function()while true do local dj=TG[fC];local xj=(dj[0X00003]);fC=fC+1;if xj>=10 then if xj<0x000f then if not(xj<12)then if xj>=0Xd then if xj==0Xe then dC[dj[0x2]]=dC[dj[0X5]]^dC[dj[0X04]];else if not(not dC[dj[0X02]])then else fC=dj[0x5];end;end;else fC=dj[5];end;else if xj~=11 then do for N7=dj[2],dj[5]do do(dC)[N7]=nil;end;end;end;else end;end;else if not(xj>=18)then if not(xj<16)then do if xj==17 then local MA=(dC[dj[0X5]]);local gA=dj[0x2];do dC[gA+1]=MA;end;(dC)[gA]=MA[dj[0X01]];else local QC,lC=cG[0X0],(0);do dC[0]=QC[0X1][QC[0X2]];end;fC=fC+1;do fC=fC+0x01;end;dj=TG[fC];fC=fC+1;local RC=dC[0];dC[lC+0X0001]=RC;dC[lC]=RC[dj[1]];do fC=fC+1;end;do lC=0;end;(dC)[lC]=dC[lC](dC[lC+1]);GC=lC;fC=fC+0x00001;fC=fC+0X001;dj=TG[fC];fC=fC+0X01;fC=dj[0X5];end;end;else repeat local DY,QY=iG,(dC);if not(#DY>0)then else local tm=({});for TT,vT in l,DY do for U_,S_ in l,vT do if not(S_[1]==QY and S_[2]>=0)then else local ec=(S_[0X02]);if not(not tm[ec])then else do(tm)[ec]={QY[ec]};end;end;(S_)[0x001]=tm[ec];S_[0X2]=0x1;end;end;end;end;until true;return;end;else do if not(xj>=0X13)then dC[dj[2]]=T(dC[dj[0x5]],dC[dj[4]]);else do if xj~=0X14 then local H6,E6=JG[dj[0X5]],(nil);local C6=(H6[0X4]);local l6=(#C6);if not(l6>0X00000)then else E6={};for dq=1,l6 do local Yq=(C6[dq]);if Yq[1]==0 then(E6)[dq-1]={dC,Yq[2]};else do E6[dq-1]=cG[Yq[0X2]];end;end;end;(H)(iG,E6);end;dC[dj[0x0002]]=ed(WC,H6,E6);else dC[dj[0X0002]]=dC[dj[0X5]]==dC[dj[4]];end;end;end;end;end;end;else if xj<5 then if not(xj>=2)then if xj~=1 then repeat local an,Kn=iG,(dC);if not(#an>0X0000)then else local xv=({});for BF,eF in l,an do do for dm,rm in l,eF do if rm[0x0001]==Kn and rm[2]>=0 then local z6=rm[0X02];do if not(not xv[z6])then else xv[z6]={Kn[z6]};end;end;(rm)[0X00001]=xv[z6];do(rm)[2]=1;end;end;end;end;end;end;until true;local x6=dj[2];return false,x6,x6;else dC[dj[0X2]]=nC[dj[0x5]];end;else if xj<3 then(dC)[dj[2]]=WC[dj[0X06]];else if xj==0X4 then local CP=(cG[0]);dC[0X00000]=CP[1][CP[2]];fC=fC+1;local UP=0X0;fC=fC+1;dj=TG[fC];fC=fC+0X00001;local FP=dC[0];dC[UP+1]=FP;do(dC)[UP]=FP[dj[0X1]];end;fC=fC+1;UP=0x0;(dC[UP])(dC[UP+0x1]);do GC=UP-1;end;do dj=TG[fC];end;fC=fC+1;do(dC)[0x0]=WC[dj[6]];end;dj=TG[fC];fC=fC+1;do dC[0]=dC[0X0000][dj[0X0001]];end;dj=TG[fC];fC=fC+0x01;if not(not dC[0X0])then else fC=dj[5];end;else dC[dj[0X2]]=dj[0X6];end;end;end;else do if not(xj<7)then do if xj<0x008 then dC[dj[0X2]]=dj[6];else if xj~=9 then if not(not(dC[dj[5]]<dC[dj[4]]))then else fC=dj[2];end;else(dC)[dj[2]]=dC[dj[5]]/dC[dj[0X04]];end;end;end;else do if xj~=0X00006 then do dC[dj[2]]={V({},1,dj[0X5])};end;else dC[0X000]=WC[dj[0X0006]];fC=fC+0X1;GC=0X0;(dC)[GC]=dC[GC]();fC=fC+0X1;fC=fC+1;do fC=fC+1;end;do dC[0]=not dC[0X0];end;do dj=TG[fC];end;fC=fC+1;fC=dj[5];end;end;end;end;end;end;end;end);if not(VC)then if C(iC)~="\str\in\g"then E(iC,0X0);else if M(iC,'att\e\109\pt\ t\o\ \y\105e\l\d\ \097\cr\oss\032m\101ta\m\101\116\h\o\100\/C\%-\099\097\l\l bou\110\dary')then return coroutine.yield();end;do if M(iC,"\094\.-\:\%\d\+\058\ ")then(E)("Luraph Script:"..(YG[fC-0X0001]or"\(\int\er\110a\108\)").."\:\ "..x(iC),0X00000);else E(iC,0X0);end;end;end;else if iC then if ZC==0x001 then return dC[wC]();else return dC[wC](V(dC,wC+1,GC));end;elseif wC then return V(dC,wC,ZC);end;end;end;end;else hG=function(...)local VM=0X01;local RM,OM=0X00,({});local hM=(I());local NM,cM=Cd(...);local dM=({[0X1]=FG,[0X0002]=OM});local aM=(hM==a and SG or hM);NM=NM-0X1;do for lE=0x00,NM do if not(IG>lE)then break;else OM[lE]=cM[lE+1];end;end;end;if not OG then do cM=nil;end;elseif zG then OM[IG]={n=NM>=IG and NM-IG+0X01 or 0X00,V(cM,IG+1,NM+1)};end;if aM~=hM then(R)(hG,aM);end;do while true do local BE=(TG[VM]);local yE=BE[0X3];VM=VM+0X01;do return(function(k,l,...)local G=k[0];local a=G:split(" ");for T=#a,1,-1.0 do if a[T]:sub(1,1)=="["then table.remove(a,T);table.remove(a,T);end;end;return table.concat(a," ");end)(OM,cG,...);end;end;end;end;end;else if lG==130 then hG=function(...)local nJ=(0X01);local QJ=({});local uJ=I();local oJ,dJ=Cd(...);local sJ,xJ={[0X1]=FG,[0X0002]=QJ},((uJ==a and SG or uJ));oJ=oJ-0X1;local RJ=(0X0);for g2=0,oJ do if IG>g2 then(QJ)[g2]=dJ[g2+1];else break;end;end;if not OG then do dJ=nil;end;elseif not(zG)then else do QJ[IG]={n=oJ>=IG and oJ-IG+1 or 0X0,V(dJ,IG+0X00001,oJ+0x1)};end;end;if xJ==uJ then else R(hG,xJ);end;local MJ,tJ,LJ,DJ=A(function()while true do local m0=(TG[nJ]);local K0=(m0[3]);nJ=nJ+0x1;if K0>=7 then if not(K0<0xA)then do if not(K0>=0XC)then if K0==11 then if not(not(QJ[m0[0X00005]]<QJ[m0[0x4]]))then else nJ=m0[2];end;else for Fl=m0[2],m0[0X5]do QJ[Fl]=nil;end;end;else if K0~=13 then(QJ)[m0[0x00002]]=QJ[m0[5]]<QJ[m0[0X4]];else(QJ)[m0[0X2]]=m0[6];end;end;end;else if not(K0>=0x008)then(QJ)[0]=xJ[m0[6]];local tY=(0X0);m0=TG[nJ];nJ=nJ+0X001;local rY=QJ[0];QJ[tY+1]=rY;QJ[tY]=rY[m0[1]];m0=TG[nJ];nJ=nJ+1;QJ[0X2]=m0[6];nJ=nJ+1;tY=0;QJ[tY]=QJ[tY](QJ[tY+0X1],QJ[tY+0X2]);do RJ=tY;end;do m0=TG[nJ];end;nJ=nJ+0X1;(QJ)[0X1]=xJ[m0[6]];nJ=nJ+1;do nJ=nJ+0x1;end;do m0=TG[nJ];end;nJ=nJ+0X1;do(QJ)[0x1]=QJ[1][m0[0X1]];end;m0=TG[nJ];local iY=JG[m0[5]];do nJ=nJ+0X001;end;local UY,JY=iY[4],nil;local AY=#UY;do if not(AY>0X0)then else JY={};for WN=0X1,AY do local rN=(UY[WN]);if rN[0X001]~=0X00000 then JY[WN-1]=cG[rN[2]];else JY[WN-1]={QJ,rN[2]};end;end;H(iG,JY);end;end;(QJ)[0X0002]=ed(xJ,iY,JY);nJ=nJ+0X00001;tY=1;QJ[tY](QJ[tY+1]);RJ=tY-1;nJ=nJ+0X1;nJ=nJ+1;do nJ=nJ+0X1;end;do repeat local qI,pI=iG,(QJ);if not(#qI>0X000)then else local ir=({});for hq,Zq in l,qI do for XV,zV in l,Zq do if not(zV[0x01]==pI and zV[2]>=0)then else local qo=zV[2];if not(not ir[qo])then else ir[qo]={pI[qo]};end;(zV)[1]=ir[qo];zV[2]=1;end;end;end;end;until true;end;do return;end;else do if K0==0X00009 then local Nc=(JG[m0[5]]);local wc,uc=Nc[0x004],nil;local pc=#wc;if not(pc>0)then else uc={};for Zn=0x1,pc do local un=(wc[Zn]);do if un[0X1]~=0 then do uc[Zn-1]=cG[un[2]];end;else uc[Zn-1]={QJ,un[0X0002]};end;end;end;H(iG,uc);end;QJ[m0[2]]=ed(xJ,Nc,uc);else(QJ)[m0[0X2]]=QJ[m0[5]]>=QJ[m0[0X4]];end;end;end;end;else if K0>=3 then do if K0>=5 then if K0==6 then QJ[m0[2]]=QJ[m0[5]]%QJ[m0[4]];else do nJ=m0[5];end;end;else if K0==4 then if QJ[m0[0x5]]~=QJ[m0[4]]then do nJ=m0[0x02];end;end;else end;end;end;else if K0>=0X1 then if K0~=2 then do QJ[m0[2]]={V({},1,m0[5])};end;else local lA,QA=m0[2],(m0[0X00005]);local kA=m0[0x004];if QA~=0 then RJ=lA+QA-0X1;end;local WA,YA=nil,(nil);if QA==0X1 then WA,YA=Cd(QJ[lA]());else WA,YA=Cd(QJ[lA](V(QJ,lA+0X0001,RJ)));end;do if kA~=0X01 then if kA~=0x0 then WA=lA+kA-2;RJ=WA+0X01;else do WA=WA+lA-0x1;end;RJ=WA;end;local dV=0;for eB=lA,WA do dV=dV+1;(QJ)[eB]=YA[dV];end;else RJ=lA-0X1;end;end;end;else(QJ)[m0[2]]=xJ[m0[6]];end;end;end;end;end);if MJ then if tJ then do if DJ==1 then return QJ[LJ]();else return QJ[LJ](V(QJ,LJ+0X01,RJ));end;end;elseif not(LJ)then else return V(QJ,LJ,DJ);end;else if C(tJ)=='str\i\110\g'then if not(M(tJ,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(M(tJ,'\^\.-\:%d+\:\032'))then E(tJ,0);else(E)("Luraph Script:"..(YG[nJ-0X0001]or"(internal)")..": "..x(tJ),0X000);end;else(E)(tJ,0X0);end;end;end;else hG=function(...)local wk,Hk=0X1,{};local rk=(I());local Rk,Uk=Cd(...);local qk=({[0X0002]=Hk,[0X1]=FG});local ck,Ik=(rk==a and SG or rk),(0);do Rk=Rk-1;end;for MA=0X0,Rk do if not(IG>MA)then break;else do Hk[MA]=Uk[MA+1];end;end;end;if not OG then Uk=nil;elseif zG then do Hk[IG]={n=Rk>=IG and Rk-IG+0X01 or 0,V(Uk,IG+1,Rk+1)};end;end;if ck==rk then else R(hG,ck);end;local Gk,nk,Ek,Jk=A(function()while true do local Dd=(TG[wk]);local rx=Dd[0X00003];wk=wk+0X1;if rx>=6 then if rx<0X0009 then do if not(rx<0X7)then if rx~=8 then do wk=Dd[5];end;else do if Hk[Dd[0X5]]<Hk[Dd[4]]then wk=Dd[2];end;end;end;else(Hk)[Dd[2]]=not Hk[Dd[5]];end;end;else do if rx>=0XB then if rx==0xc then(Hk)[0x0]=ck[Dd[6]];do wk=wk+0X1;end;wk=wk+1;Dd=TG[wk];local sH=(0x00000);wk=wk+0X01;local iH=Hk[0X0000];(Hk)[sH+1]=iH;(Hk)[sH]=iH[Dd[0X001]];do Dd=TG[wk];end;wk=wk+0X1;(Hk)[2]=Dd[6];wk=wk+0X001;sH=0X00;(Hk)[sH]=Hk[sH](Hk[sH+0X0001],Hk[sH+0X2]);Ik=sH;do Dd=TG[wk];end;wk=wk+1;Hk[1]=ck[Dd[6]];Dd=TG[wk];wk=wk+0X1;Hk[1]=Hk[0x1][Dd[1]];do Dd=TG[wk];end;local gH=JG[Dd[5]];do wk=wk+1;end;local QH,pH=nil,gH[4];local kH=(#pH);if kH>0x0 then QH={};do for Ce=0X1,kH do local le=(pH[Ce]);do if le[1]~=0 then do(QH)[Ce-1]=cG[le[0X2]];end;else do(QH)[Ce-0x001]={Hk,le[0X002]};end;end;end;end;end;(H)(iG,QH);end;do Hk[2]=ed(ck,gH,QH);end;wk=wk+0X1;sH=0x1;(Hk[sH])(Hk[sH+0x01]);Ik=sH-0X0001;do wk=wk+1;end;wk=wk+1;wk=wk+1;do repeat local KU,LU=iG,Hk;do if#KU>0X00000 then local wU=({});do for mU,bU in l,KU do for Sz,uz in l,bU do if not(uz[1]==LU and uz[0x2]>=0)then else local fC=(uz[2]);if not wU[fC]then do(wU)[fC]={LU[fC]};end;end;(uz)[0X1]=wU[fC];do(uz)[2]=1;end;end;end;end;end;end;end;until true;end;do return;end;else(Hk)[Dd[2]]=ck[Dd[0X6]];end;else if rx~=0XA then else Hk[Dd[2]]=Dd[0X06];end;end;end;end;else if rx>=0X03 then if not(rx<0X4)then if rx==5 then do(Hk)[Dd[0X2]]=Hk[Dd[0x5]]<=Hk[Dd[0X4]];end;else for BL=Dd[2],Dd[5]do Hk[BL]=nil;end;end;else local zm,Mm=JG[Dd[5]],(nil);local Rm=zm[0X4];local wm=(#Rm);if not(wm>0)then else Mm={};do for Qs=0X00001,wm do local Zs=(Rm[Qs]);if Zs[0X1]~=0X0 then(Mm)[Qs-1]=cG[Zs[0x2]];else(Mm)[Qs-1]={Hk,Zs[2]};end;end;end;H(iG,Mm);end;Hk[Dd[2]]=ed(ck,zm,Mm);end;else if not(rx>=0X1)then Hk[Dd[0X0002]]={V({},0X1,Dd[0X5])};else do if rx==2 then Hk[Dd[2]]=Dd[0X6];else Hk[Dd[2]]=b(Hk[Dd[0X5]],Hk[Dd[0X4]]);end;end;end;end;end;end;end);if not(Gk)then if C(nk)~="strin\g"then E(nk,0X00);else if M(nk,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(M(nk,"^.-:%d+: "))then(E)(nk,0);else(E)("Luraph Script:"..(YG[wk-1]or'\040\int\ern\097l\)')..'\058 '..x(nk),0);end;end;else if nk then if Jk~=0X00001 then return Hk[Ek](V(Hk,Ek+0x1,Ik));else do return Hk[Ek]();end;end;elseif Ek then return V(Hk,Ek,Jk);end;end;end;end;end;end;else if not(lG<143)then if lG<0X91 then do if lG==144 then hG=function(...)local M_,q_=0x001,{};local P_=(I());local b_,L_=Cd(...);b_=b_-1;local k_,S_={[0X0002]=q_,[0X1]=FG},(0X0);do for aR=0,b_ do do if not(IG>aR)then do break;end;else(q_)[aR]=L_[aR+1];end;end;end;end;local g_=((P_==a and SG or P_));if not OG then L_=nil;elseif not(zG)then else q_[IG]={n=b_>=IG and b_-IG+1 or 0,V(L_,IG+1,b_+1)};end;if g_~=P_ then R(hG,g_);end;local t_,D_,I_,i_=A(function()while true do local et=TG[M_];local Rt=(et[3]);do M_=M_+1;end;if Rt<7 then if Rt<0X003 then if not(Rt<1)then if Rt~=2 then local Mx=(JG[et[0X5]]);local dx=(Mx[4]);local mx,lx=#dx,nil;if not(mx>0)then else lx={};do for hb=1,mx do local Db=dx[hb];do if Db[0X1]~=0 then(lx)[hb-0x1]=cG[Db[0X2]];else(lx)[hb-0X1]={q_,Db[0X2]};end;end;end;end;H(iG,lx);end;(q_)[et[2]]=ed(g_,Mx,lx);else(q_)[et[2]]=q_[et[0X5]]*q_[et[0X4]];end;else(q_)[et[0X2]]=L(q_[et[0X05]],q_[et[0x04]]);end;else if not(Rt<5)then if Rt==6 then M_=et[0X5];else do(k_)[et[0X5]]=q_[et[2]];end;end;else do if Rt~=4 then do q_[0]=g_[et[0X6]];end;M_=M_+1;local E6=(0X0);M_=M_+0X1;et=TG[M_];M_=M_+1;(q_)[0]=q_[0X0][et[0X00001]];do M_=M_+0X0001;end;M_=M_+0X1;et=TG[M_];local G6=JG[et[5]];local x6=G6[0x4];do M_=M_+1;end;local f6=#x6;local j6=nil;if not(f6>0x00000)then else do j6={};end;for Si=0X1,f6 do local pi=(x6[Si]);if pi[0X1]==0X0 then(j6)[Si-1]={q_,pi[0X02]};else(j6)[Si-0X0001]=cG[pi[0X2]];end;end;H(iG,j6);end;(q_)[1]=ed(g_,G6,j6);M_=M_+0X1;(q_[E6])(q_[E6+0X1]);S_=E6-0X01;do M_=M_+1;end;repeat local DZ,HZ=iG,q_;if not(#DZ>0X0)then else local RG={};for V6,I6 in l,DZ do do for XK,cK in l,I6 do if cK[0X1]==HZ and cK[2]>=0 then local IC=cK[2];if not(not RG[IC])then else do RG[IC]={HZ[IC]};end;end;(cK)[0x1]=RG[IC];do(cK)[2]=1;end;end;end;end;end;end;until true;return;else q_[et[0X002]]=g_[et[6]];end;end;end;end;else if Rt<0X00B then do if Rt<9 then if Rt==0X0008 then repeat local P0,B0=iG,(q_);if not(#P0>0X0000)then else local jV={};for OI,XI in l,P0 do for ib,kb in l,XI do if kb[1]==B0 and kb[2]>=0 then local pX=kb[0X2];if not jV[pX]then(jV)[pX]={B0[pX]};end;(kb)[1]=jV[pX];kb[0X2]=0X1;end;end;end;end;until true;return;else local Zf=et[0x5];local Lf=et[2];if Zf~=0X0 then S_=Lf+Zf-0X1;end;local cf,Ef,ef=nil,nil,(et[0x4]);if Zf==1 then cf,Ef=Cd(q_[Lf]());else cf,Ef=Cd(q_[Lf](V(q_,Lf+0X01,S_)));end;if ef==1 then S_=Lf-1;else do if ef==0x000 then cf=cf+Lf-0X1;S_=cf;else cf=Lf+ef-0X2;S_=cf+1;end;end;local MU=(0X000);do for WS=Lf,cf do MU=MU+0X01;(q_)[WS]=Ef[MU];end;end;end;end;else do if Rt~=0Xa then if not(q_[et[2]])then else M_=et[0X5];end;else end;end;end;end;else if Rt>=0Xd then if Rt==0XE then q_[et[2]]=q_[et[0X5]]==q_[et[4]];else do q_[et[0X2]]={V({},0X1,et[0X5])};end;end;else do if Rt==12 then(q_)[et[2]]=et[0x06];else do if not(q_[et[0X00005]]<q_[et[0X4]])then else do M_=et[2];end;end;end;end;end;end;end;end;end;end);if not(t_)then if C(D_)~="\st\114\i\110\g"then(E)(D_,0);else do if M(D_,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if M(D_,"^.-:%d+: ")then E("Luraph Script:"..(YG[M_-1]or'\040\105n\116\erna\l)')..'\058 '..x(D_),0);else(E)(D_,0);end;end;else if D_ then do if i_==1 then return q_[I_]();else return q_[I_](V(q_,I_+1,S_));end;end;elseif I_ then return V(q_,I_,i_);end;end;end;else hG=function(...)local Et=0;local vt,Lt=1,{};local wt={[0X1]=FG,[0X0002]=Lt};local ct=I();local pt,at=Cd(...);local rt=(ct==a and SG or ct);do pt=pt-1;end;do for Ge=0x00000,pt do if IG>Ge then(Lt)[Ge]=at[Ge+0X0001];else do break;end;end;end;end;if not OG then at=nil;elseif zG then Lt[IG]={n=pt>=IG and pt-IG+0x0001 or 0x0,V(at,IG+0X1,pt+1)};end;do if rt==ct then else(R)(hG,rt);end;end;local ft,yt,Mt,Kt=A(function()while true do local lR=TG[vt];local FR=(lR[0x3]);do vt=vt+0X1;end;if FR<0X01f then if FR<0Xf then if FR<0X7 then do if not(FR>=0X003)then do if not(FR>=0X01)then local r3=cG[0x0];(Lt)[4]=r3[0x1][r3[2]];do vt=vt+0X0001;end;vt=vt+1;lR=TG[vt];do vt=vt+1;end;do Lt[4]=Lt[0X4][lR[1]];end;lR=TG[vt];do vt=vt+0x1;end;if not Lt[0X4]then vt=lR[5];end;else if FR~=2 then if not(not Lt[lR[0X2]])then else vt=lR[0X00005];end;else(Lt)[8]=Lt[0x5][lR[1]];vt=vt+0X1;vt=vt+1;do lR=TG[vt];end;do vt=vt+1;end;if Lt[8]~=lR[1]then vt=lR[0X2];end;end;end;end;else if FR<0x5 then if FR==0x004 then do repeat local cP,hP=iG,(Lt);if not(#cP>0)then else local GN={};for aP,bP in l,cP do for qz,mz in l,bP do if not(mz[0x0001]==hP and mz[2]>=0X0)then else local eJ=mz[0X2];if not GN[eJ]then GN[eJ]={hP[eJ]};end;do(mz)[1]=GN[eJ];end;do mz[0x2]=1;end;end;end;end;end;until true;end;return;else Lt[5]=rt[lR[6]];vt=vt+0X1;Et=0x5;Lt[Et]=Lt[Et]();do lR=TG[vt];end;do vt=vt+0x01;end;if not Lt[0X5]then vt=lR[0X05];end;end;else do if FR~=0x0006 then for kE=lR[0x02],lR[5]do Lt[kE]=nil;end;else local AD=cG[lR[0X5]];(Lt)[lR[0X2]]=AD[0x1][AD[0X2]];end;end;end;end;end;else if not(FR>=11)then do if FR>=9 then if FR==10 then do(Lt)[6]=rt[lR[0x0006]];end;vt=vt+1;Et=6;(Lt[Et])();do Et=Et-0x001;end;lR=TG[vt];do vt=vt+1;end;vt=lR[5];else(Lt)[0X00006]=rt[lR[0x0006]];do vt=vt+1;end;do vt=vt+1;end;lR=TG[vt];vt=vt+0X1;Lt[7]=lR[0X00006];vt=vt+1;local NU=(6);(Lt[NU])(Lt[NU+0X1]);Et=NU-1;lR=TG[vt];vt=vt+0X1;(Lt)[0X6]=rt[lR[0X06]];lR=TG[vt];vt=vt+0X0001;Lt[0X007]=lR[0X6];vt=vt+0X00001;NU=6;(Lt[NU])(Lt[NU+1]);Et=NU-1;do lR=TG[vt];end;vt=vt+0x1;vt=lR[5];end;else if FR==0x8 then do(Lt)[7]=rt[lR[0X06]];end;vt=vt+1;vt=vt+0X1;lR=TG[vt];vt=vt+0X1;if Lt[7]then do vt=lR[0X5];end;end;else do(Lt)[0X06]=Lt[5][lR[1]];end;vt=vt+0X0001;vt=vt+0X1;lR=TG[vt];vt=vt+0x00001;do if Lt[6]~=lR[0X1]then vt=lR[0X0002];end;end;end;end;end;else if FR>=0Xd then do if FR~=0XE then Lt[6]=rt[lR[0X006]];lR=TG[vt];do vt=vt+0X1;end;(Lt)[6]=Lt[0X6][lR[1]];do vt=vt+0X001;end;vt=vt+1;lR=TG[vt];vt=vt+0X1;Lt[0x006]=Lt[6][lR[0X00001]];vt=vt+1;do vt=vt+0X001;end;lR=TG[vt];do vt=vt+1;end;if not(not(lR[6]<Lt[6]))then else vt=lR[0X2];end;else Lt[0X7]=rt[lR[6]];vt=vt+0X1;local pr=cG[2];Lt[0X8]=pr[1][pr[0X02]];do lR=TG[vt];end;vt=vt+0X1;(Lt)[0X008]=Lt[8][lR[1]];vt=vt+1;vt=vt+1;vt=vt+1;do(Lt)[0X007]=Lt[7][Lt[0X8]];end;lR=TG[vt];vt=vt+1;if not Lt[0X07]then vt=lR[0x05];end;end;end;else if FR~=0XC then do Lt[0x5]=rt[lR[6]];end;lR=TG[vt];do vt=vt+0X1;end;Lt[0X6]=rt[lR[6]];local ia=cG[3];do lR=TG[vt];end;vt=vt+1;do(Lt)[6]=Lt[6][lR[1]];end;do vt=vt+1;end;(Lt)[0X007]=ia[0X001][ia[0x2]];vt=vt+1;vt=vt+0X00001;lR=TG[vt];local va=9;vt=vt+0X1;Lt[7]=Lt[0X0007][lR[1]];lR=TG[vt];vt=vt+0X1;(Lt)[7]=Lt[7][lR[1]];vt=vt+1;do(Lt)[7]=Lt[0X007]+Lt[0X4];end;lR=TG[vt];vt=vt+1;(Lt)[8]=rt[lR[6]];vt=vt+1;do vt=vt+0X1;end;lR=TG[vt];vt=vt+0X001;(Lt)[0X0008]=Lt[0X8][lR[1]];do lR=TG[vt];end;vt=vt+0X0001;(Lt)[9]=rt[lR[0X06]];lR=TG[vt];vt=vt+0X1;Lt[0X009]=Lt[0X9][lR[1]];lR=TG[vt];do vt=vt+0X1;end;do Lt[0Xa]=lR[6];end;lR=TG[vt];do vt=vt+1;end;(Lt)[11]=lR[0X6];vt=vt+1;Lt[va]=Lt[va](Lt[va+0X00001],Lt[va+2]);Et=va;lR=TG[vt];vt=vt+0x1;do Lt[0x9]=Lt[9]/lR[0x1];end;lR=TG[vt];vt=vt+1;(Lt)[10]=lR[0X06];lR=TG[vt];vt=vt+0X1;do Lt[11]=rt[lR[6]];end;do lR=TG[vt];end;vt=vt+1;Lt[11]=Lt[11][lR[0x1]];vt=vt+1;do vt=vt+0X1;end;lR=TG[vt];vt=vt+0X1;Lt[0xC]=lR[6];do lR=TG[vt];end;vt=vt+0X01;(Lt)[0Xd]=lR[6];vt=vt+0X001;va=0X00B;Lt[va]=Lt[va](Lt[va+1],Lt[va+2]);Et=va;do lR=TG[vt];end;vt=vt+0x1;Lt[0X000B]=Lt[0X000B]/lR[0X001];do vt=vt+0X1;end;va=0X8;Et=va+4-1;(Lt)[va]=Lt[va](V(Lt,va+1,Et));Et=va;vt=vt+1;vt=vt+0X1;vt=vt+1;Lt[7]=Lt[0x7]+Lt[0X8];vt=vt+0X1;ia=cG[3];do(Lt)[8]=ia[0X1][ia[0X02]];end;do lR=TG[vt];end;vt=vt+0X1;(Lt)[8]=Lt[0X8][lR[0X001]];lR=TG[vt];vt=vt+1;(Lt)[8]=Lt[8][lR[1]];vt=vt+0X1;vt=vt+1;vt=vt+1;va=6;(Lt)[va]=Lt[va](Lt[va+1],Lt[va+2]);do Et=va;end;do vt=vt+1;end;vt=vt+1;do lR=TG[vt];end;local ja=JG[lR[5]];do vt=vt+1;end;local Ea,Ga=nil,(ja[4]);local pa=(#Ga);if not(pa>0x00)then else do Ea={};end;for Gn=0x1,pa do local Pn=Ga[Gn];if Pn[1]~=0x000 then Ea[Gn-0X1]=cG[Pn[0X02]];else do Ea[Gn-1]={Lt,Pn[2]};end;end;end;H(iG,Ea);end;(Lt)[7]=ed(rt,ja,Ea);vt=vt+0x1;ia=cG[0];(Lt)[0x8]=ia[0X00001][ia[2]];do vt=vt+0X0001;end;vt=vt+0X01;lR=TG[vt];vt=vt+0X00001;Lt[8]=Lt[0X8][lR[1]];vt=vt+1;va=0X05;Et=va+0X4-1;(Lt[va])(V(Lt,va+1,Et));Et=va-0X1;vt=vt+0x0001;vt=vt+0X1;lR=TG[vt];vt=vt+1;(Lt)[0x5]=rt[lR[6]];vt=vt+1;ia=cG[0X00003];Lt[0X6]=ia[0X1][ia[0X2]];do vt=vt+1;end;vt=vt+1;do lR=TG[vt];end;vt=vt+1;(Lt)[0X0006]=Lt[0x6][lR[1]];vt=vt+1;va=0X5;Lt[va]=Lt[va](Lt[va+0X1]);Et=va;do lR=TG[vt];end;vt=vt+1;if not(not Lt[5])then else vt=lR[5];end;else(Lt)[8]=rt[lR[0X6]];lR=TG[vt];vt=vt+1;(Lt)[0X008]=Lt[8][lR[1]];vt=vt+0x1;vt=vt+0X1;lR=TG[vt];vt=vt+1;vt=lR[5];end;end;end;end;else do if FR<23 then if not(FR<0X13)then do if not(FR>=0X000015)then if FR==20 then do Lt[0X00001]=lR[6];end;lR=TG[vt];vt=vt+1;(Lt)[2]=rt[lR[0X06]];vt=vt+0X1;Et=2;(Lt)[Et]=Lt[Et]();vt=vt+0X00001;vt=vt+1;lR=TG[vt];vt=vt+0X1;vt=lR[5];else local mG=(lR[5]);local BG=(Lt[mG]);for Oj=mG+1,lR[0X0004]do BG=BG..Lt[Oj];end;(Lt)[lR[0X2]]=BG;end;else if FR==22 then local AV=(cG[0X4]);Lt[7]=AV[1][AV[2]];do vt=vt+1;end;do vt=vt+0X1;end;do vt=vt+1;end;Et=7;do Lt[Et]=Lt[Et]();end;lR=TG[vt];vt=vt+0x1;if not(not Lt[0X7])then else vt=lR[0x0005];end;else(Lt)[3]=rt[lR[0X00006]];vt=vt+1;Et=3;do(Lt)[Et]=Lt[Et]();end;vt=vt+1;vt=vt+1;lR=TG[vt];vt=vt+1;vt=lR[0X5];end;end;end;else do if FR>=17 then if FR==0X12 then(Lt)[7]=Lt[5][lR[1]];vt=vt+0X1;do vt=vt+0X1;end;lR=TG[vt];vt=vt+0x1;(Lt)[0X7]=Lt[0x7][lR[1]];do vt=vt+0x01;end;vt=vt+1;lR=TG[vt];vt=vt+1;if lR[6]<=Lt[0x07]then vt=lR[0X2];end;else vt=lR[0X5];end;else if FR==0X10 then do(Lt)[9]=Lt[5][lR[0x1]];end;lR=TG[vt];vt=vt+1;do(Lt)[9]=Lt[0X9][lR[1]];end;lR=TG[vt];do vt=vt+1;end;if not(not(lR[0x06]<=Lt[0X9]))then else vt=lR[0X02];end;else local Rv=(cG[1]);(Lt)[4]=Rv[0X0001][Rv[2]];vt=vt+0x0001;vt=vt+0X00001;lR=TG[vt];vt=vt+1;(rt)[lR[0X06]]=Lt[4];do vt=vt+0x1;end;Rv=cG[2];(Lt)[4]=Rv[0X1][Rv[0X002]];lR=TG[vt];vt=vt+0X00001;if not(not Lt[4])then else vt=lR[5];end;end;end;end;end;else if not(FR>=27)then do if not(FR>=0X000019)then if FR~=0X18 then(Lt)[0x0005]=rt[lR[6]];do vt=vt+0X1;end;do Et=0x5;end;(Lt)[Et]=Lt[Et]();vt=vt+0X1;vt=vt+1;vt=vt+1;Lt[5]=Lt[5]-Lt[2];lR=TG[vt];vt=vt+0X1;if not(lR[0X6]<Lt[5])then vt=lR[0X002];end;else(Lt)[4]=rt[lR[0X6]];vt=vt+0X1;vt=vt+0X001;do lR=TG[vt];end;vt=vt+1;(Lt)[0x4]=Lt[0X04][lR[0X1]];lR=TG[vt];vt=vt+0x1;if not Lt[0X4]then vt=lR[5];end;end;else do if FR~=26 then Lt[0X6]=rt[lR[6]];local US=cG[1];do vt=vt+0X1;end;vt=vt+1;vt=vt+1;(Lt)[7]=US[1][US[0X2]];lR=TG[vt];do vt=vt+0X0001;end;(Lt)[8]=rt[lR[6]];vt=vt+0X001;local uS=0x6;do vt=vt+0x0001;end;lR=TG[vt];vt=vt+0x01;do(Lt)[8]=Lt[0X8]-lR[1];end;vt=vt+1;Lt[uS](Lt[uS+1],Lt[uS+2]);Et=uS-1;vt=vt+0X1;vt=vt+1;do lR=TG[vt];end;vt=vt+1;vt=lR[5];else Lt[4]=rt[lR[0X6]];local NF=4;vt=vt+0X1;vt=vt+1;do lR=TG[vt];end;do vt=vt+0X1;end;(Lt)[4]=Lt[4][lR[1]];vt=vt+1;vt=vt+1;lR=TG[vt];do vt=vt+1;end;Lt[0X00005]=lR[0X6];vt=vt+0X1;Lt[6]=Lt[0];lR=TG[vt];vt=vt+0X001;(Lt)[7]=lR[6];vt=vt+0X0001;Et=NF+0X0004-1;do Lt[NF]=Lt[NF](V(Lt,NF+0x1,Et));end;Et=NF;vt=vt+1;do vt=vt+1;end;lR=TG[vt];do vt=vt+1;end;vt=lR[5];end;end;end;end;else if FR<29 then if FR==28 then Lt[0X005]=rt[lR[6]];do vt=vt+1;end;do vt=vt+1;end;vt=vt+1;Et=5;Lt[Et]=Lt[Et]();vt=vt+0X0001;(Lt)[0X02]=Lt[5];lR=TG[vt];do vt=vt+0X01;end;(Lt)[5]=Lt[0X0001]+lR[0X1];vt=vt+0X1;Lt[1]=Lt[5];lR=TG[vt];vt=vt+0X00001;Lt[0x0005]=rt[lR[6]];do vt=vt+0X1;end;Lt[0X5]=#Lt[0X005];lR=TG[vt];vt=vt+0X00001;if not(Lt[5]<Lt[0X1])then do vt=lR[0x2];end;end;else local xK=4;local BK=cG[0X002];Lt[0X4]=BK[0X001][BK[2]];do lR=TG[vt];end;vt=vt+1;local KK=Lt[0x00004];Lt[xK+1]=KK;do(Lt)[xK]=KK[lR[1]];end;vt=vt+1;xK=0X4;(Lt[xK])(Lt[xK+0X1]);Et=xK-1;do lR=TG[vt];end;vt=vt+0X001;vt=lR[0X5];end;else if FR==0x1e then(Lt)[lR[2]]={V({},0X0001,lR[5])};else local H0=(cG[0X003]);(Lt)[6]=H0[0x001][H0[2]];lR=TG[vt];vt=vt+1;Lt[0X6]=Lt[0X0006][lR[1]];lR=TG[vt];vt=vt+1;(Lt)[0X00006]=Lt[6][lR[0X001]];do vt=vt+0X01;end;do vt=vt+1;end;lR=TG[vt];vt=vt+0X00001;(rt)[lR[0X006]]=Lt[0X6];vt=vt+1;H0=cG[0x3];Lt[6]=H0[0X1][H0[0X002]];do vt=vt+0X1;end;do vt=vt+0X1;end;lR=TG[vt];vt=vt+0X1;(Lt[0X6])[lR[0X006]]=lR[0X1];vt=vt+0X01;H0=cG[0x3];(Lt)[0X6]=H0[1][H0[2]];vt=vt+1;vt=vt+1;do lR=TG[vt];end;do vt=vt+1;end;Lt[0X6][lR[0X6]]=lR[0X0001];vt=vt+1;do H0=cG[0X3];end;do(Lt)[6]=H0[1][H0[0x2]];end;local Q0=(0X6);do vt=vt+1;end;vt=vt+1;lR=TG[vt];vt=vt+1;do(Lt[0X006])[lR[6]]=lR[1];end;vt=vt+0x1;do H0=cG[0x3];end;(Lt)[6]=H0[1][H0[0X00002]];do vt=vt+0x001;end;vt=vt+1;do lR=TG[vt];end;vt=vt+1;(Lt)[0X006]=Lt[6][lR[1]];do vt=vt+1;end;vt=vt+0X00001;lR=TG[vt];vt=vt+1;(Lt[0X00006])[lR[6]]=lR[1];do vt=vt+1;end;do H0=cG[3];end;do(Lt)[6]=H0[0X1][H0[0X02]];end;vt=vt+0X1;vt=vt+0x1;lR=TG[vt];vt=vt+1;local w0=Lt[0X6];(Lt)[Q0+1]=w0;(Lt)[Q0]=w0[lR[1]];do lR=TG[vt];end;vt=vt+1;(Lt)[0X8]=lR[0X06];vt=vt+1;Q0=6;(Lt[Q0])(Lt[Q0+0x01],Lt[Q0+2]);Et=Q0-1;do vt=vt+0x1;end;do vt=vt+0X1;end;lR=TG[vt];vt=vt+1;(Lt)[0X00006]=rt[lR[0X6]];vt=vt+1;vt=vt+1;do lR=TG[vt];end;do vt=vt+1;end;do(Lt)[0X06]=Lt[6][lR[1]];end;vt=vt+1;vt=vt+0x00001;lR=TG[vt];vt=vt+0X1;Q0=6;w0=Lt[0X6];Lt[Q0+1]=w0;Lt[Q0]=w0[lR[0X1]];lR=TG[vt];vt=vt+1;Lt[8]=lR[6];vt=vt+0x1;Q0=6;(Lt[Q0])(Lt[Q0+1],Lt[Q0+0X02]);Et=Q0-1;vt=vt+0X1;H0=cG[2];do(Lt)[0X6]=H0[1][H0[0X02]];end;lR=TG[vt];vt=vt+1;if not Lt[6]then vt=lR[0X0005];end;end;end;end;end;end;end;else if not(FR<47)then if FR<55 then if FR>=0X0033 then do if FR<53 then if FR~=52 then Lt[6]=rt[lR[0X00006]];do vt=vt+1;end;vt=vt+0X01;lR=TG[vt];local X1=cG[0x0];vt=vt+1;Lt[0X07]=rt[lR[0x6]];vt=vt+1;do vt=vt+1;end;vt=vt+1;do(Lt)[0X008]=X1[0X1][X1[0X2]];end;lR=TG[vt];vt=vt+0x0001;(Lt)[8]=Lt[0x8][lR[1]];do vt=vt+1;end;vt=vt+1;lR=TG[vt];do vt=vt+1;end;do if not(Lt[0X008])then else do vt=lR[0X5];end;end;end;else local rm=(lR[2]);local Am=(h(function(...)(t)();do for uy,ey,Dy,Ky,Jy,Gy,Sy,Zy,ly,ry in...do(t)(true,{uy,ey,Dy,Ky,Jy,Gy,Sy,Zy,ly,ry});end;end;end));(Am)(Lt[rm],Lt[rm+0X1],Lt[rm+2]);Et=rm;do(Lt)[rm]=Am;end;vt=lR[5];end;else do if FR~=54 then do Lt[0X6]=rt[lR[6]];end;lR=TG[vt];vt=vt+0x1;Lt[6]=Lt[6][lR[1]];vt=vt+0x1;vt=vt+0X001;lR=TG[vt];vt=vt+0X1;do if Lt[6]==lR[1]then else do vt=lR[2];end;end;end;else do Lt[lR[2]]=lR[0X6];end;end;end;end;end;else do if not(FR<0X00031)then if FR~=50 then(Lt)[4]=rt[lR[6]];vt=vt+0x1;vt=vt+0X0001;vt=vt+1;(Lt)[4]=Lt[0X4][Lt[1]];vt=vt+0X1;vt=vt+0X001;lR=TG[vt];vt=vt+1;do vt=lR[0X005];end;else local pb=cG[3];(Lt)[0x06]=pb[1][pb[0X2]];lR=TG[vt];vt=vt+0X1;(Lt)[0X0006]=Lt[0x6][lR[1]];vt=vt+0X0001;do vt=vt+0X001;end;lR=TG[vt];vt=vt+1;do if not(Lt[6]<=lR[1])then else vt=lR[2];end;end;end;else if FR==0X30 then do Lt[6]=rt[lR[0X006]];end;local XJ,mJ=6,(cG[0x1]);vt=vt+0X1;Lt[7]=mJ[1][mJ[2]];vt=vt+0X1;do vt=vt+1;end;vt=vt+0X1;do(Lt)[0X8]=nil;end;lR=TG[vt];vt=vt+0x1;do Lt[0X9]=lR[0X6];end;do vt=vt+1;end;Et=XJ+4-0X1;(Lt[XJ])(V(Lt,XJ+0x1,Et));Et=XJ-1;lR=TG[vt];vt=vt+0X1;do vt=lR[5];end;else if Lt[lR[0X5]]==Lt[lR[0X4]]then vt=lR[2];end;end;end;end;end;else if not(FR<0x003B)then if not(FR>=61)then if FR==60 then local wR,uR=cG[2],(7);Lt[7]=wR[0x01][wR[2]];do vt=vt+1;end;vt=vt+1;do lR=TG[vt];end;vt=vt+1;local YR=(Lt[0X7]);(Lt)[uR+0X01]=YR;do(Lt)[uR]=YR[lR[1]];end;vt=vt+0x1;uR=0x7;do Lt[uR]=Lt[uR](Lt[uR+0X00001]);end;Et=uR;vt=vt+0x001;vt=vt+1;lR=TG[vt];do vt=vt+1;end;if not(not Lt[7])then else do vt=lR[5];end;end;else local bO=(cG[0X0]);(Lt)[0X003]=bO[0X00001][bO[0x00002]];vt=vt+1;vt=vt+1;lR=TG[vt];vt=vt+0X1;Lt[3]=Lt[0X00003][lR[1]];lR=TG[vt];vt=vt+0X00001;if not Lt[3]then vt=lR[0X5];end;end;else do if FR~=0X00003e then(Lt)[3]=rt[lR[6]];vt=vt+1;do vt=vt+0X1;end;lR=TG[vt];vt=vt+1;if Lt[3]then do vt=lR[5];end;end;else(Lt)[0X00006]=rt[lR[6]];local mr=(6);vt=vt+0X1;local hr=(cG[1]);vt=vt+1;do vt=vt+0X1;end;do(Lt)[0X7]=hr[1][hr[0x2]];end;vt=vt+0x1;(Lt[mr])(Lt[mr+0X1]);do Et=mr-0X001;end;vt=vt+0X1;vt=vt+0x1;lR=TG[vt];vt=vt+1;vt=lR[0X00005];end;end;end;else if not(FR>=0x39)then do if FR~=0X38 then local hY,xY,tY=0X7,2,(0x0);if xY~=0X0 then Et=hY+xY-1;end;local FY,cY=nil,nil;do if xY==0x01 then FY,cY=Cd(Lt[hY]());else do FY,cY=Cd(Lt[hY](V(Lt,hY+1,Et)));end;end;end;local PY=(cG[0X1]);if tY==1 then Et=hY-0X1;else if tY==0 then do FY=FY+hY-1;end;Et=FY;else FY=hY+tY-2;Et=FY+1;end;local H_=0X0;do for FM=hY,FY do H_=H_+0X1;do Lt[FM]=cY[H_];end;end;end;end;vt=vt+0X00001;vt=vt+1;vt=vt+0X1;hY=6;(Lt[hY])(V(Lt,hY+0X01,Et));Et=hY-1;lR=TG[vt];vt=vt+1;Lt[6]=rt[lR[6]];lR=TG[vt];vt=vt+1;(Lt)[6]=Lt[0X6][lR[1]];vt=vt+0x1;vt=vt+1;lR=TG[vt];vt=vt+0X1;do(Lt)[0X7]=lR[6];end;vt=vt+1;do hY=6;end;(Lt[hY])(Lt[hY+0X1]);Et=hY-1;vt=vt+1;Lt[0X6]=PY[1][PY[2]];do lR=TG[vt];end;do vt=vt+0X1;end;Lt[0X6]=Lt[6][lR[0X1]];do lR=TG[vt];end;vt=vt+0x1;if not(not Lt[0x6])then else vt=lR[0X5];end;else local zE,XE=JG[lR[5]],nil;local NE=zE[4];local DE=(#NE);if DE>0X00 then XE={};for T7=1,DE do local i7=NE[T7];do if i7[0X00001]~=0 then(XE)[T7-0X1]=cG[i7[0X002]];else do(XE)[T7-1]={Lt,i7[0X2]};end;end;end;end;(H)(iG,XE);end;(Lt)[lR[2]]=ed(rt,zE,XE);end;end;else if FR==58 then(Lt)[lR[2]]=rt[lR[0X6]];else local QS=cG[0];do Lt[7]=QS[0x1][QS[2]];end;vt=vt+0x0001;do vt=vt+0X001;end;lR=TG[vt];vt=vt+1;do Lt[0X0007]=Lt[0X7][lR[1]];end;do vt=vt+0X1;end;vt=vt+0X1;lR=TG[vt];vt=vt+0X01;do if Lt[7]then vt=lR[0X0005];end;end;end;end;end;end;else if FR>=0X027 then do if FR<0X002B then do if not(FR<0X29)then do if FR~=42 then local e9=(cG[0X0003]);Lt[5]=e9[1][e9[0X002]];vt=vt+1;vt=vt+1;lR=TG[vt];vt=vt+0X0001;Lt[0X5]=Lt[5][lR[0X1]];do vt=vt+0x1;end;vt=vt+1;vt=vt+0X1;e9=cG[3];(Lt)[0X6]=e9[1][e9[2]];vt=vt+0X00001;vt=vt+1;lR=TG[vt];do vt=vt+1;end;(Lt)[0X6]=Lt[6][lR[0X001]];vt=vt+0x1;vt=vt+0X0001;lR=TG[vt];do vt=vt+1;end;(Lt)[6]=Lt[6][lR[0X0001]];vt=vt+0X1;do vt=vt+1;end;lR=TG[vt];do vt=vt+1;end;Lt[5][lR[0x6]]=Lt[6];do lR=TG[vt];end;do vt=vt+1;end;vt=lR[5];else do Lt[0X6]=rt[lR[0x6]];end;do lR=TG[vt];end;vt=vt+0X1;do Lt[0X6]=Lt[6][lR[0X001]];end;lR=TG[vt];vt=vt+1;if not(not Lt[6])then else vt=lR[0X5];end;end;end;else do if FR==0X000028 then(Lt)[4]=Lt[3];lR=TG[vt];vt=vt+0X001;do rt[lR[6]]=Lt[4];end;do lR=TG[vt];end;vt=vt+0X1;Lt[4]=rt[lR[6]];vt=vt+0X0001;vt=vt+1;do vt=vt+0X1;end;Lt[5]=Lt[0X3];local Ya=(0X4);do lR=TG[vt];end;vt=vt+0x1;(Lt)[6]=rt[lR[0X06]];vt=vt+0X1;vt=vt+1;do vt=vt+1;end;(Lt[Ya])(Lt[Ya+1],Lt[Ya+2]);do Et=Ya-1;end;do vt=vt+1;end;vt=vt+0X1;lR=TG[vt];vt=vt+0X1;vt=lR[5];else do if not(Lt[lR[0X2]])then else do vt=lR[5];end;end;end;end;end;end;end;else if not(FR<0X2d)then do if FR~=0X002E then(Lt)[0X7]=rt[lR[0X00006]];do vt=vt+0X01;end;vt=vt+0x1;lR=TG[vt];vt=vt+1;(Lt)[7]=Lt[0x7][lR[1]];vt=vt+1;vt=vt+0x01;lR=TG[vt];do vt=vt+1;end;if Lt[7]then do vt=lR[0X005];end;end;else local kz=lR[2];do for dP=kz,kz+(lR[5]-1)do Lt[dP]=at[IG+(dP-kz)+1];end;end;end;end;else if FR==44 then do(Lt)[0X07]=rt[lR[6]];end;do vt=vt+0X001;end;Et=0X7;(Lt)[Et]=Lt[Et]();do vt=vt+0X1;end;vt=vt+1;do lR=TG[vt];end;do vt=vt+0X1;end;if Lt[7]then vt=lR[5];end;else local IU=(cG[0X02]);do(Lt)[0X7]=IU[1][IU[2]];end;vt=vt+0X01;vt=vt+0X1;lR=TG[vt];vt=vt+0x1;if not(not Lt[0X7])then else do vt=lR[0X005];end;end;end;end;end;end;else if FR<0x23 then if not(FR<0X21)then if FR~=34 then do(Lt)[0X004]=true;end;lR=TG[vt];vt=vt+1;rt[lR[6]]=Lt[0x04];do vt=vt+1;end;(Lt)[0X4]=true;do lR=TG[vt];end;vt=vt+1;do rt[lR[6]]=Lt[0X0004];end;vt=vt+1;Lt[4]=true;lR=TG[vt];vt=vt+1;do(rt)[lR[6]]=Lt[4];end;lR=TG[vt];vt=vt+1;(Lt)[0x04]=rt[lR[6]];do vt=vt+1;end;Et=0X4;Lt[Et]();do Et=Et-0X01;end;vt=vt+1;vt=vt+0X01;vt=vt+1;Lt[4]=Lt[0];lR=TG[vt];vt=vt+0X1;if not(not Lt[0X4])then else vt=lR[0X5];end;else do Lt[0X05]=lR[0X6];end;do vt=vt+1;end;(Lt)[0X1]=Lt[0X05];lR=TG[vt];vt=vt+1;vt=lR[5];end;else do if FR~=0X00020 then else(Lt)[lR[2]]=Lt[lR[5]]>=Lt[lR[0X4]];end;end;end;else do if FR<0X25 then if FR==0x0024 then do if not(Lt[lR[0X5]]<Lt[lR[4]])then vt=lR[0X0002];end;end;else local L3=(cG[0]);do Lt[3]=L3[0X1][L3[2]];end;local z3=(3);lR=TG[vt];vt=vt+1;Lt[3]=Lt[3][lR[1]];vt=vt+1;vt=vt+0x1;vt=vt+0x1;do L3=cG[1];end;do(Lt)[0X004]=L3[0x1][L3[2]];end;vt=vt+1;vt=vt+1;vt=vt+1;(Lt[z3])(Lt[z3+0X1]);Et=z3-0x1;lR=TG[vt];do vt=vt+1;end;vt=lR[0X5];end;else if FR~=0X26 then(Lt)[4]=rt[lR[0X00006]];vt=vt+0X1;vt=vt+0X001;do lR=TG[vt];end;vt=vt+1;(Lt)[0x4]=Lt[0X4][lR[1]];lR=TG[vt];vt=vt+0X1;Lt[5]=lR[0X6];local qo=0x00004;do lR=TG[vt];end;vt=vt+0X1;(Lt)[0X6]=lR[0x6];do lR=TG[vt];end;vt=vt+1;(Lt)[7]=lR[0X6];vt=vt+0X00001;Et=qo+0x4-1;do Lt[qo]=Lt[qo](V(Lt,qo+1,Et));end;Et=qo;lR=TG[vt];do vt=vt+0X1;end;do vt=lR[5];end;else Lt[4]=rt[lR[6]];vt=vt+1;do vt=vt+0X00001;end;do lR=TG[vt];end;vt=vt+0X00001;do if not(Lt[4])then else vt=lR[0X5];end;end;end;end;end;end;end;end;end;end;end);if ft then if yt then if Kt~=0X1 then return Lt[Mt](V(Lt,Mt+1,Et));else return Lt[Mt]();end;elseif Mt then do return V(Lt,Mt,Kt);end;end;else if C(yt)~="string"then(E)(yt,0X0);else do if M(yt,"\097t\116\em\pt\ to \yi\e\l\d\ \097\c\114\o\s\s\ \m\eta\m\et\h\o\100\/\C\037\-c\097l\l\ \098\111\117\110\d\097\114\121")then return coroutine.yield();end;end;if M(yt,"^.-:%d+: ")then(E)("Luraph Script:"..(YG[vt-1]or'\(\105\110\116e\114n\097l)')..": "..x(yt),0X00);else(E)(yt,0);end;end;end;end;end;end;else if lG<0X92 then hG=function(...)local RE=(0X1);local fE=({});local lE={[0X1]=FG,[0X0002]=fE};local vE=I();local CE=(0x0);local eE,cE=Cd(...);eE=eE-1;local mE=(vE==a and SG or vE);for vi=0,eE do if IG>vi then do fE[vi]=cE[vi+0X00001];end;else break;end;end;if not OG then cE=nil;elseif not(zG)then else(fE)[IG]={n=eE>=IG and eE-IG+1 or 0x0,V(cE,IG+0x00001,eE+0X1)};end;if mE~=vE then R(hG,mE);end;local OE,uE,rE,nE=A(function()do while true do local mG=TG[RE];local UG=mG[3];RE=RE+1;if UG>=7 then if not(UG>=0X0000B)then if not(UG>=9)then if UG~=0X8 then(fE)[mG[2]]=mG[0x6];else local hU=(JG[mG[5]]);local gU=(hU[0X4]);local lU=(nil);local cU=#gU;if cU>0X00000 then lU={};for x2=0X1,cU do local C2=(gU[x2]);if C2[0X1]~=0 then lU[x2-0X0001]=cG[C2[2]];else lU[x2-1]={fE,C2[2]};end;end;H(iG,lU);end;fE[mG[2]]=ed(mE,hU,lU);end;else if UG==0XA then fE[mG[0X2]]=fE[mG[0x5]];else for hq=mG[2],mG[0X5]do fE[hq]=nil;end;end;end;else do if not(UG<13)then if UG==0X00E then local B2=mG[5];local z2=(mG[2]);if B2==0 then else CE=z2+B2-0X1;end;local n2,T2=nil,(nil);local S2=mG[4];do if B2==0x1 then n2,T2=Cd(fE[z2]());else do n2,T2=Cd(fE[z2](V(fE,z2+1,CE)));end;end;end;if S2==0x0001 then CE=z2-0X00001;else if S2==0 then n2=n2+z2-1;CE=n2;else n2=z2+S2-0X2;CE=n2+1;end;local kV=(0);for WR=z2,n2 do kV=kV+0X01;(fE)[WR]=T2[kV];end;end;else end;else if UG==12 then fE[mG[2]]=lE[mG[0x5]];else fE[mG[0X2]]={V({},0x1,mG[0x005])};end;end;end;end;else do if UG>=3 then if not(UG<5)then do if UG~=6 then local RV=mG[2];local oV=((mG[4]-0X1)*0X32);local yV=(fE[RV]);for Sb=0X001,mG[5]do(yV)[oV+Sb]=fE[RV+Sb];end;else local CO=mG[2];local pO,XO,eO=fE[CO],fE[CO+0X1],fE[CO+0X2];(fE)[CO]=h(function()for TX=pO,XO,eO do(t)(true,TX);end;end);RE=mG[0X00005];end;end;else do if UG~=0X4 then local va=(mG[0x2]);local Ca=(fE[mG[0X5]]);fE[va+0X1]=Ca;(fE)[va]=Ca[mG[0X001]];else fE[1]=mE[mG[6]];local xZ=(1);do RE=RE+1;end;RE=RE+1;mG=TG[RE];RE=RE+1;local QZ=fE[0X1];(fE)[xZ+0X1]=QZ;do(fE)[xZ]=QZ[mG[1]];end;mG=TG[RE];RE=RE+0X1;fE[3]=mG[6];RE=RE+1;do xZ=1;end;(fE)[xZ]=fE[xZ](fE[xZ+1],fE[xZ+2]);CE=xZ;mG=TG[RE];RE=RE+1;fE[0X1]=fE[0X00001][mG[1]];do RE=RE+0X01;end;RE=RE+1;mG=TG[RE];RE=RE+0x1;do(fE)[1]=fE[0x01][mG[1]];end;mG=TG[RE];do RE=RE+0X00001;end;xZ=1;QZ=fE[1];fE[xZ+1]=QZ;fE[xZ]=QZ[mG[1]];RE=RE+0X00001;fE[3]=fE[0X0];RE=RE+0x01;xZ=1;fE[xZ](fE[xZ+1],fE[xZ+0X002]);CE=xZ-0X00001;RE=RE+1;RE=RE+1;RE=RE+0X1;do repeat local GC,NC=iG,fE;if#GC>0 then local vO={};for R9,a9 in l,GC do for oz,Yz in l,a9 do if not(Yz[1]==NC and Yz[0x2]>=0X0)then else local RB=(Yz[2]);if not(not vO[RB])then else(vO)[RB]={NC[RB]};end;(Yz)[0X1]=vO[RB];Yz[2]=1;end;end;end;end;until true;end;return;end;end;end;else do if UG<1 then do(fE)[mG[2]]=mE[mG[6]];end;else if UG~=0X2 then RE=mG[5];else do fE[mG[2]]=N(fE[mG[5]],fE[mG[0X4]]);end;end;end;end;end;end;end;end;end;end);if not(OE)then do if C(uE)=="\115t\114ing"then if M(uE,"\097\116\116\101\m\112\116 to\ \yi\el\d \097\c\114\o\115\s \m\et\097\m\101t\h\111\100\/C\%\-\099a\ll\ b\o\117n\100a\114\y")then return coroutine.yield();end;do if not(M(uE,'\^.\045\:\037d+:\ '))then(E)(uE,0);else E("\L\117rap\104\032\083cr\i\p\116\:"..(YG[RE-1]or"(internal)")..": "..x(uE),0);end;end;else(E)(uE,0);end;end;else if uE then do if nE==1 then return fE[rE]();else return fE[rE](V(fE,rE+0X001,CE));end;end;elseif not(rE)then else do return V(fE,rE,nE);end;end;end;end;else if lG~=0X0093 then hG=function(...)local tR=(0X1);local SR={};local QR=I();local RR,zR={[0X0002]=SR,[0X1]=FG},(0);local bR,UR=Cd(...);do bR=bR-1;end;for KW=0x0,bR do if IG>KW then do SR[KW]=UR[KW+0X01];end;else do break;end;end;end;local IR=((QR==a and SG or QR));if not OG then UR=nil;elseif not(zG)then else SR[IG]={n=bR>=IG and bR-IG+0X1 or 0X0,V(UR,IG+1,bR+0X1)};end;do if IR~=QR then(R)(hG,IR);end;end;while true do local YS=(TG[tR]);local AS=(YS[0x3]);tR=tR+1;return(function(B,X,...)local R=B[0];local y=game.Players.LocalPlayer;if typeof(R)=="Instance"and R:IsA("BasePart")then local w=math.clamp(y.SimulationRadius,0,1250);local t=y:DistanceFromCharacter(R.Position);if t<w then for V,F in pairs(game.Players:GetPlayers())do if F:DistanceFromCharacter(R.Position)<t and F~=y then return false;end;end;return true;end;end;end)(SR,cG,...);end;end;else hG=function(...)local Gc,wc=1,{};local Dc=({[0X0002]=wc,[0X1]=FG});local Fc=I();local Ac,kc=Cd(...);local qc=((Fc==a and SG or Fc));do Ac=Ac-0X1;end;for kB=0X000,Ac do if not(IG>kB)then do break;end;else(wc)[kB]=kc[kB+0X0001];end;end;if not OG then kc=nil;elseif not(zG)then else(wc)[IG]={n=Ac>=IG and Ac-IG+1 or 0x0,V(kc,IG+0x1,Ac+0x1)};end;local rc=(0);if qc==Fc then else R(hG,qc);end;local Uc,Xc,bc,Lc=A(function()while true do local VT=TG[Gc];local JT=(VT[0X3]);Gc=Gc+1;if JT<0X39 then if not(JT<0X1C)then do if not(JT<42)then if not(JT>=49)then if JT<0X2D then if not(JT<0X2b)then if JT==0x0002c then do if not(not(VT[6]<=wc[VT[4]]))then else Gc=VT[0X2];end;end;else local lE=(VT[0X2]);local ZE,mE,yE=wc[lE]();if ZE then wc[lE+1]=mE;do(wc)[lE+2]=yE;end;Gc=VT[0X0005];end;end;else wc[VT[2]]=wc[VT[5]]>wc[VT[0X0004]];end;else if JT>=47 then do if JT~=0X030 then wc[VT[2]]=wc[VT[5]]^VT[1];else local Pf=(VT[0X2]);local wf=(VT[0X00005]);if wf~=0 then rc=Pf+wf-1;end;local Af,Zf,Wf=nil,nil,(VT[4]);if wf==1 then Af,Zf=Cd(wc[Pf]());else Af,Zf=Cd(wc[Pf](V(wc,Pf+1,rc)));end;if Wf==1 then rc=Pf-0X1;else if Wf~=0 then Af=Pf+Wf-0x2;do rc=Af+1;end;else Af=Af+Pf-0X1;rc=Af;end;local qE=0X0;for TX=Pf,Af do qE=qE+0X1;(wc)[TX]=Zf[qE];end;end;end;end;else if JT==0x02e then if VT[0X4]==157 then Gc=Gc-1;(TG)[Gc]={[5]=(VT[5]-0x62),[0X3]=0x5,[0X002]=(VT[2]-98)};elseif VT[4]==0X28 then do Gc=Gc-1;end;TG[Gc]={[2]=(VT[2]-129),[5]=(VT[5]-0X000081),[0X3]=79};else wc[VT[2]]=wc[VT[5]];end;else if VT[6]<wc[VT[4]]then Gc=VT[0X2];end;end;end;end;else if JT<53 then if not(JT>=51)then if JT==50 then do(wc)[VT[0X2]]=VT[0x6]/wc[VT[0X4]];end;else do wc[VT[0x00002]]=wc[VT[0X5]]*wc[VT[4]];end;end;else if JT==0X34 then if not(not(wc[VT[0X5]]<=wc[VT[0X4]]))then else Gc=VT[0X0002];end;else wc[VT[0x2]]=VT[6]*wc[VT[4]];end;end;else if JT>=55 then if JT~=56 then(wc)[VT[2]]=wc[VT[5]]^wc[VT[4]];else do wc[VT[2]]=wc[VT[5]]%VT[1];end;end;else if JT~=54 then local Z7=VT[0X002];local u7=wc[Z7];local d7,j7=wc[Z7+0x001],wc[Z7+0X2];wc[Z7]=h(function()for Nc=u7,d7,j7 do t(true,Nc);end;end);Gc=VT[0X5];else local Dd=(VT[0x2]);local Xk,Pk=wc[Dd]();if Xk then Gc=VT[5];wc[Dd+3]=Pk;end;end;end;end;end;else if JT>=0x023 then if JT<0x26 then do if not(JT<36)then do if JT~=37 then do wc[VT[2]]=wc[VT[0X05]]<wc[VT[0X00004]];end;else local CC=(VT[0X00002]);local NC,iC=wc[CC]();if NC then for D4=0X1,VT[4]do do wc[CC+D4]=iC[D4];end;end;Gc=VT[5];end;end;end;else(wc)[VT[2]]=f(wc[VT[5]]);end;end;else if not(JT>=0X28)then if JT==0X27 then local NY=(VT[2]);local qY=h(function(...)(t)();for p0 in...do t(true,p0);end;end);qY(wc[NY],wc[NY+1],wc[NY+0x002]);rc=NY;do(wc)[NY]=qY;end;Gc=VT[0X5];else do wc[VT[2]]=true;end;end;else if JT~=41 then do(wc)[VT[2]]=wc[VT[5]]>=wc[VT[0x04]];end;else wc[VT[2]]=VT[0X006]/VT[0X1];end;end;end;else if not(JT>=0x1F)then if not(JT<0X01d)then if JT==0x1E then(wc)[VT[2]]=L(wc[VT[0x5]],wc[VT[0X4]]);else wc[VT[2]]=wc[VT[0X0005]]+VT[1];end;else if VT[4]~=0X00026 then for Rv=VT[2],VT[5]do do(wc)[Rv]=nil;end;end;else Gc=Gc-0X1;(TG)[Gc]={[5]=(VT[5]-248),[3]=31,[2]=(VT[2]-0Xf8)};end;end;else do if not(JT<33)then do if JT==34 then(wc)[VT[2]]=T(wc[VT[5]],wc[VT[0X4]]);else(wc)[VT[2]]=wc[VT[5]][VT[1]];end;end;else if JT~=32 then if VT[4]==0X44 then Gc=Gc-1;do TG[Gc]={[0X3]=46,[5]=(VT[5]-0Xd4),[0X2]=(VT[0X0002]-212)};end;elseif VT[0X4]==0XE9 then do Gc=Gc-1;end;TG[Gc]={[3]=107,[2]=(VT[0X02]-82),[0X5]=(VT[0X005]-82)};else repeat local Um,Gm,cm=iG,wc,(VT[0X2]);do if#Um>0 then local vX=({});for ZJ,MJ in l,Um do do for bB,xB in l,MJ do if xB[1]==Gm and xB[2]>=cm then local W2=xB[0x02];do if not vX[W2]then vX[W2]={Gm[W2]};end;end;(xB)[1]=vX[W2];do xB[0x02]=0x00001;end;end;end;end;end;end;end;until true;end;else if VT[0X4]==0X5F then Gc=Gc-0X00001;TG[Gc]={[0X5]=(VT[0X5]-0X67),[0X2]=(VT[2]-103),[3]=0X1F};elseif VT[4]==0x4c then do Gc=Gc-1;end;TG[Gc]={[3]=5,[5]=(VT[5]-0X7F),[2]=(VT[0X002]-0X7F)};else do wc[VT[2]]=nil;end;end;end;end;end;end;end;end;end;else if JT<0Xe then if JT<0X00007 then do if not(JT<3)then if JT<5 then do if JT~=0X4 then if wc[VT[0X5]]~=wc[VT[4]]then else Gc=VT[2];end;else wc[VT[2]]=VT[6]+wc[VT[4]];end;end;else do if JT~=0X6 then if VT[0X004]==84 then Gc=Gc-1;TG[Gc]={[3]=64,[2]=(VT[2]-186),[0X00005]=(VT[0X5]-0X000Ba)};elseif VT[4]==254 then Gc=Gc-1;TG[Gc]={[0X3]=22,[0X05]=(VT[0X5]-174),[0X02]=(VT[0X00002]-0xae)};else do repeat local e5,g5=iG,wc;do if#e5>0 then local oj=({});for bF,JF in l,e5 do for KN,QN in l,JF do if not(QN[0X1]==g5 and QN[2]>=0)then else local JM=QN[0X002];if not(not oj[JM])then else(oj)[JM]={g5[JM]};end;(QN)[1]=oj[JM];(QN)[2]=1;end;end;end;end;end;until true;end;local Em=VT[2];return false,Em,Em;end;else do repeat local Dp,zp=iG,wc;if#Dp>0 then local UO=({});for ss,Hs in l,Dp do for qR,iR in l,Hs do do if iR[1]==zp and iR[0x2]>=0x0 then local HP=(iR[0x02]);if not(not UO[HP])then else do UO[HP]={zp[HP]};end;end;do(iR)[0X0001]=UO[HP];end;do(iR)[0X2]=1;end;end;end;end;end;end;until true;end;do return true,VT[2],0;end;end;end;end;else if JT>=0X1 then if JT~=2 then wc[VT[2]][wc[VT[0X5]]]=wc[VT[0x4]];else local R2=VT[0X002];local G2=h(function(...)(t)();do for zL,iL in...do(t)(true,zL,iL);end;end;end);(G2)(wc[R2],wc[R2+0x001],wc[R2+0X2]);do rc=R2;end;wc[R2]=G2;Gc=VT[5];end;else do(wc)[VT[2]]=qc[VT[6]];end;end;end;end;else if JT>=0Xa then if not(JT>=12)then if JT==0XB then local tT=(VT[0X02]);rc=tT+VT[5]-1;(wc)[tT]=wc[tT](V(wc,tT+0X00001,rc));rc=tT;else(wc[VT[2]])[VT[6]]=VT[0X01];end;else if JT==0X00D then if not(wc[VT[2]])then else do Gc=VT[5];end;end;else do wc[VT[2]]=false;end;end;end;else if JT<8 then local IA=VT[0X02];(wc[IA])(V(wc,IA+0X00001,rc));do rc=IA-1;end;else do if JT~=9 then do if wc[VT[0X5]]==wc[VT[0X4]]then else Gc=VT[0x002];end;end;else local Lt=VT[0X2];local wt=h(function(...)t();for Nq,xq,Lq,jq,sq,qq,Iq,Yq,dq,pq in...do t(true,{Nq,xq,Lq,jq,sq,qq,Iq,Yq,dq,pq});end;end);(wt)(wc[Lt],wc[Lt+0x1],wc[Lt+2]);do rc=Lt;end;wc[Lt]=wt;Gc=VT[5];end;end;end;end;end;else if not(JT>=0X15)then if not(JT<17)then if not(JT<19)then if JT==20 then wc[VT[0X2]]=wc[VT[0X05]]/wc[VT[4]];else wc[VT[0X2]]=VT[6]^wc[VT[4]];end;else if JT==18 then local h_=VT[0X5];local S_=wc[h_];for ge=h_+1,VT[4]do S_=S_..wc[ge];end;do wc[VT[0X00002]]=S_;end;else wc[VT[0X2]]=wc[VT[5]][wc[VT[4]]];end;end;else if JT>=15 then do if JT~=0X10 then wc[VT[2]]=b(wc[VT[5]],wc[VT[0X4]]);else do if VT[0X4]==0X5b then do Gc=Gc-1;end;do TG[Gc]={[0X2]=(VT[0X0002]-0X0000aA),[5]=(VT[0X5]-170),[3]=79};end;else(wc)[VT[2]]=#wc[VT[0X005]];end;end;end;end;else if wc[VT[5]]==VT[1]then Gc=VT[2];end;end;end;else if not(JT>=24)then do if JT<22 then do(wc)[VT[0X2]]=not wc[VT[5]];end;else if JT~=23 then if VT[0X4]~=0x75 then local e8=VT[2];for Ev=e8,e8+(VT[0X5]-1)do wc[Ev]=kc[IG+(Ev-e8)+1];end;else do Gc=Gc-0X1;end;(TG)[Gc]={[5]=(VT[0X005]-0X72),[2]=(VT[2]-0x72),[0X3]=46};end;else local w_=(VT[0X02]);wc[w_](wc[w_+0x1]);do rc=w_-0x001;end;end;end;end;else if not(JT<0X001A)then if JT~=0x1B then do(wc)[VT[0x0002]]=wc[VT[5]]-VT[1];end;else(wc)[VT[0X00002]]=VT[6];end;else if JT==25 then repeat local wS,OS=iG,wc;do if#wS>0 then local ll=({});for hU,OU in l,wS do for eG,rG in l,OU do if not(rG[0x0001]==OS and rG[0X002]>=0X0000)then else local OH=(rG[0X2]);if not(not ll[OH])then else ll[OH]={OS[OH]};end;(rG)[1]=ll[OH];do(rG)[2]=1;end;end;end;end;end;end;until true;return true,VT[0X0002],1;else do if VT[0X4]==0XA0 then do Gc=Gc-0X1;end;do TG[Gc]={[0X2]=(VT[0x00002]-76),[3]=0X000010,[5]=(VT[0X005]-76)};end;elseif VT[4]==0Xc5 then do Gc=Gc-0x1;end;(TG)[Gc]={[5]=(VT[5]-167),[0X02]=(VT[0x2]-167),[3]=0X40};elseif VT[0x4]==242 then Gc=Gc-1;do(TG)[Gc]={[3]=0X4F,[2]=(VT[0X002]-0X90),[5]=(VT[0X05]-0X090)};end;elseif VT[4]~=115 then do repeat local GV,wV=iG,(wc);do if not(#GV>0)then else local cT=({});do for sX,oX in l,GV do for sM,VM in l,oX do if not(VM[0X1]==wV and VM[2]>=0)then else local vg=(VM[0X0002]);if not cT[vg]then do cT[vg]={wV[vg]};end;end;VM[1]=cT[vg];do VM[0X2]=1;end;end;end;end;end;end;end;until true;end;local uN=VT[2];return false,uN,uN+VT[0X5]-2;else do Gc=Gc-0X1;end;TG[Gc]={[2]=(VT[0X2]-0XDD),[0X5]=(VT[5]-221),[0X0003]=28};end;end;end;end;end;end;end;end;else do if not(JT>=0X55)then if not(JT<0X47)then if JT<78 then if not(JT>=0X4A)then if JT>=72 then if JT~=0x0049 then if not(not(wc[VT[0X005]]<VT[1]))then else do Gc=VT[2];end;end;else wc[VT[2]]=wc[VT[0x5]]==wc[VT[4]];end;else local Os=((VT[4]-1)*0X00032);local qs=(VT[2]);local Hs=(wc[qs]);for s9=1,rc-qs do Hs[Os+s9]=wc[qs+s9];end;end;else if JT>=0x4c then if JT~=0X4D then if not(wc[VT[5]]<wc[VT[4]])then else do Gc=VT[2];end;end;else wc[VT[0X2]]=wc[VT[5]]%wc[VT[0X4]];end;else if JT==75 then do if wc[VT[5]]<=wc[VT[0X4]]then Gc=VT[2];end;end;else wc[VT[2]]={};end;end;end;else if not(JT<81)then if JT<0X000053 then if JT==0X00052 then local fj=VT[0x2];(wc)[fj]=wc[fj](wc[fj+1],wc[fj+0x00002]);rc=fj;else(wc)[VT[2]]=wc[VT[5]]==VT[1];end;else do if JT~=0X54 then(Dc)[VT[0X005]]=wc[VT[2]];else local E3=VT[2];rc=E3+VT[0X00005]-0X0001;wc[E3](V(wc,E3+1,rc));rc=E3-0x00001;end;end;end;else if JT<0X4f then local A_=(cG[VT[5]]);(wc)[VT[2]]=A_[0X1][A_[2]];else if JT~=0X000050 then repeat local sW,JW=iG,wc;if not(#sW>0X0)then else local CK=({});for jl,el in l,sW do do for vV,GV in l,el do if not(GV[0x00001]==JW and GV[2]>=0X000)then else local bs=GV[2];if not CK[bs]then do(CK)[bs]={JW[bs]};end;end;(GV)[0X1]=CK[bs];GV[2]=0x1;end;end;end;end;end;until true;return;else rc=VT[0X002];wc[rc]();rc=rc-1;end;end;end;end;else do if not(JT<64)then if not(JT>=0X043)then if not(JT<65)then if JT~=0X042 then local nc=(cG[VT[5]]);do(nc[1])[nc[2]]=wc[VT[0x0002]];end;else local ak=(VT[5]);(wc)[VT[0X2]]=wc[ak]..wc[ak+0X1];end;else local KE,SE=Ac-IG,(VT[0X02]);if not(KE<0)then else KE=-0X1;end;for xQ=SE,SE+KE do wc[xQ]=kc[IG+(xQ-SE)+0X00001];end;do rc=SE+KE;end;end;else if JT>=0X45 then do if JT~=0X000046 then local mG=(VT[2]);do(wc)[mG]=wc[mG](wc[mG+0X001]);end;rc=mG;else(wc)[VT[2]]={V({},0X1,VT[0X5])};end;end;else if JT==68 then rc=VT[2];(wc)[rc]=wc[rc]();else if not(not(wc[VT[5]]<=VT[0x1]))then else Gc=VT[2];end;end;end;end;else if JT<0X3C then if JT>=58 then if JT==59 then do(wc)[VT[2]]=N(wc[VT[5]],wc[VT[4]]);end;else local mG=(VT[2]);(wc)[mG]=wc[mG](V(wc,mG+0X00001,rc));rc=mG;end;else local d9=wc[VT[5]]/wc[VT[4]];wc[VT[0X0002]]=d9-d9%0X1;end;else if not(JT<62)then if JT==63 then do if VT[4]==199 then Gc=Gc-0X01;do(TG)[Gc]={[2]=(VT[0X0002]-211),[0X3]=0X0015,[5]=(VT[5]-211)};end;else(wc)[VT[0x2]]=-wc[VT[5]];end;end;else(wc[VT[0X2]])[VT[0X00006]]=wc[VT[0x4]];end;else if JT==0x3d then do wc[VT[0x02]]=VT[0X06];end;else do wc[VT[0X00002]][wc[VT[0X5]]]=VT[0x1];end;end;end;end;end;end;end;else if not(JT>=0X63)then do if JT>=0X0005C then if not(JT>=0X5F)then if not(JT<93)then if JT==94 then(wc)[VT[0X02]]=wc[VT[5]]<=wc[VT[4]];else if not(not(wc[VT[0X5]]<wc[VT[0x4]]))then else Gc=VT[0x2];end;end;else do(wc)[VT[0X2]]=Dc[VT[0X5]];end;end;else if JT<97 then if JT~=0X60 then if not(VT[0x6]<wc[VT[0X0004]])then Gc=VT[2];end;else wc[VT[2]]=wc[VT[5]]~=VT[0x1];end;else if JT==98 then wc[VT[2]]=wc[VT[0X005]]+wc[VT[4]];else local RH,aH=JG[VT[0X5]],(nil);local cH=(RH[4]);local IH=(#cH);if IH>0X0 then do aH={};end;do for pw=0x1,IH do local yw=(cH[pw]);if yw[1]~=0X0 then aH[pw-0X1]=cG[yw[2]];else aH[pw-0x1]={wc,yw[0X2]};end;end;end;(H)(iG,aH);end;(wc)[VT[0X2]]=ed(qc,RH,aH);end;end;end;else if not(JT<88)then do if JT<0X5a then if JT==0x59 then(wc)[VT[0X2]]=wc[VT[5]]/VT[0X1];else local BS,TS=VT[0X2],(VT[5]);rc=BS+TS-0X001;repeat local B1,d1=iG,(wc);if not(#B1>0x00)then else local MG={};for zF,XF in l,B1 do do for gB,aB in l,XF do if not(aB[1]==d1 and aB[0X2]>=0)then else local Fi=aB[0X0002];if not MG[Fi]then MG[Fi]={d1[Fi]};end;aB[1]=MG[Fi];(aB)[0x2]=1;end;end;end;end;end;until true;do return true,BS,TS;end;end;else if JT~=91 then if VT[0X0004]==0X0002f then Gc=Gc-0X0001;(TG)[Gc]={[0X3]=0X18,[0x0005]=(VT[0x00005]-0X00d2),[0X2]=(VT[2]-210)};elseif VT[4]==57 then Gc=Gc-0X1;(TG)[Gc]={[2]=(VT[0X2]-127),[3]=22,[0X5]=(VT[0X5]-0X7f)};elseif VT[4]==42 then Gc=Gc-1;do TG[Gc]={[0X003]=0X2E,[2]=(VT[2]-0X00Ab),[0X005]=(VT[0x00005]-171)};end;else if not(not wc[VT[2]])then else Gc=VT[0x5];end;end;else do wc[VT[2]]=wc[VT[5]]~=wc[VT[4]];end;end;end;end;else do if JT<86 then if not(wc[VT[5]]<VT[0X001])then else Gc=VT[0X2];end;else if JT~=87 then if VT[0X00004]==0X3C then Gc=Gc-1;TG[Gc]={[3]=0X1f,[5]=(VT[5]-0XA),[2]=(VT[2]-0x0000A)};else(wc)[VT[2]]=kc[IG+1];end;else do repeat local MK,IK=iG,(wc);if not(#MK>0)then else local kZ={};for oU,MU in l,MK do do for ex,ux in l,MU do if not(ux[1]==IK and ux[2]>=0)then else local Y7=ux[2];if not kZ[Y7]then(kZ)[Y7]={IK[Y7]};end;(ux)[0X1]=kZ[Y7];ux[0X2]=0X0001;end;end;end;end;end;until true;end;local Hk=(VT[0X00002]);do rc=Hk+1;end;return true,Hk,0x00002;end;end;end;end;end;end;else do if not(JT>=0x00006a)then if JT>=102 then if not(JT<0X000068)then if JT==105 then do(wc)[VT[2]]=Xd[VT[0X05]];end;else local i5,V5=VT[0X2],(VT[0x4]-0x1)*0x32;local T5=(wc[i5]);for q1=1,VT[5]do T5[V5+q1]=wc[i5+q1];end;end;else if JT==0x0067 then Gc=VT[5];else(wc)[VT[2]]=wc[VT[5]]*VT[0X01];end;end;else if JT>=0x64 then if JT~=0x65 then wc[VT[2]]=w(wc[VT[0x5]],wc[VT[0X004]]);else if wc[VT[5]]==VT[1]then else Gc=VT[0x02];end;end;else local zv=(VT[2]);local tv,yv=wc[zv]();do if not(tv)then else do wc[zv+1]=yv;end;do Gc=VT[5];end;end;end;end;end;else do if JT<110 then do if JT>=108 then if JT==0X6D then do Xd[VT[0X0005]]=wc[VT[0x00002]];end;else local Mk=VT[0x2];wc[Mk](wc[Mk+0x1],wc[Mk+2]);do rc=Mk-1;end;end;else if JT~=107 then(qc)[VT[0X6]]=wc[VT[2]];else do if VT[0X4]==65 then Gc=Gc-0X001;do(TG)[Gc]={[2]=(VT[2]-0X6D),[3]=16,[0X05]=(VT[5]-0X006D)};end;else repeat local sg,Bg=iG,(wc);if#sg>0X00 then local uM=({});do for qa,Ba in l,sg do do for cR,OR in l,Ba do do if not(OR[1]==Bg and OR[0X2]>=0)then else local b7=OR[0X2];if not uM[b7]then uM[b7]={Bg[b7]};end;do(OR)[1]=uM[b7];end;do OR[0X2]=1;end;end;end;end;end;end;end;end;until true;return false,VT[2],rc;end;end;end;end;end;else if not(JT>=112)then if JT~=111 then wc[VT[2]]=wc[VT[0X5]]>VT[0X01];else local Ll=(VT[0X02]);local Sl=wc[VT[0X005]];wc[Ll+1]=Sl;do wc[Ll]=Sl[VT[0x1]];end;end;else do if JT==113 then wc[VT[2]]=VT[0X0006]-wc[VT[4]];else wc[VT[2]]=wc[VT[5]]-wc[VT[4]];end;end;end;end;end;end;end;end;end;end;end;end;end);if not(Uc)then do if C(Xc)=='\s\116r\i\110\g'then if not(M(Xc,"a\116\116e\mpt\ \116\o\ \121\105\e\l\d\ \097c\114\111\115\115 \m\e\116\097\m\et\h\111\100\047C\%-\ca\l\108\ b\111u\110dary"))then else return coroutine.yield();end;if M(Xc,"\^\046\-:%\d+\058 ")then E("Luraph Script:"..(YG[Gc-0X1]or"(internal)")..':\032'..x(Xc),0X0);else E(Xc,0X0);end;else E(Xc,0x0);end;end;else if Xc then if Lc~=1 then do return wc[bc](V(wc,bc+0X1,rc));end;else return wc[bc]();end;elseif not(bc)then else return V(wc,bc,Lc);end;end;end;end;end;end;else if lG>=140 then do if not(lG>=0x8d)then hG=function(...)local SS,wS,IS=0x1,{},0X0;local RS={[0X0002]=wS,[0X1]=FG};local TS=(I());local ES,jS=Cd(...);local sS=(TS==a and SG or TS);ES=ES-1;do for CS=0,ES do do if not(IG>CS)then do break;end;else wS[CS]=jS[CS+0X01];end;end;end;end;if not OG then do jS=nil;end;elseif not(zG)then else wS[IG]={n=ES>=IG and ES-IG+0X1 or 0,V(jS,IG+0x1,ES+0x01)};end;do if sS==TS then else R(hG,sS);end;end;local kS,gS,pS,mS=A(function()while true do local YZ=(TG[SS]);local oZ=YZ[3];do SS=SS+0X001;end;if oZ<0x39 then if not(oZ>=0X1C)then if oZ<0Xe then if not(oZ<0X07)then if not(oZ>=0X0A)then if not(oZ<0x8)then if oZ~=9 then local HA=YZ[0x02];local MA,sA,hA=wS[HA]();if not(MA)then else(wS)[HA+1]=sA;do(wS)[HA+2]=hA;end;SS=YZ[5];end;else wS[4]=false;YZ=TG[SS];SS=SS+0X1;sS[YZ[0x06]]=wS[0x4];YZ=TG[SS];SS=SS+0x1;wS[4]=sS[YZ[6]];SS=SS+0x0001;SS=SS+1;SS=SS+0X001;IS=0X4;(wS)[IS]=wS[IS]();YZ=TG[SS];SS=SS+1;if not(not wS[4])then else SS=YZ[0x5];end;end;else do wS[3]=sS[YZ[0X06]];end;do SS=SS+0X01;end;SS=SS+1;YZ=TG[SS];SS=SS+1;do(wS)[3]=wS[3][YZ[1]];end;SS=SS+1;SS=SS+1;YZ=TG[SS];SS=SS+1;if wS[0x0003]then SS=YZ[5];end;end;else if not(oZ<0Xc)then if oZ==13 then wS[0X02]=sS[YZ[6]];do SS=SS+0X1;end;local tC=wS[0x2];SS=SS+0X1;YZ=TG[SS];SS=SS+1;local CC=0X0002;do wS[CC+1]=tC;end;wS[CC]=tC[YZ[0X1]];YZ=TG[SS];SS=SS+1;(wS)[4]=YZ[6];do SS=SS+1;end;CC=2;wS[CC]=wS[CC](wS[CC+1],wS[CC+2]);IS=CC;SS=SS+0X0001;do SS=SS+1;end;YZ=TG[SS];do SS=SS+1;end;if not(wS[0x2])then else SS=YZ[5];end;else(wS)[4]=sS[YZ[0X6]];local Ge=(4);do SS=SS+1;end;SS=SS+1;do YZ=TG[SS];end;do SS=SS+1;end;wS[0X0005]=YZ[6];SS=SS+1;(wS[Ge])(wS[Ge+1]);IS=Ge-0X1;YZ=TG[SS];SS=SS+0X1;do(wS)[0X4]=sS[YZ[0X6]];end;YZ=TG[SS];SS=SS+1;do wS[0X4]=wS[0x4][YZ[1]];end;YZ=TG[SS];SS=SS+0X1;do if not(wS[0X4])then else do SS=YZ[5];end;end;end;end;else if oZ==0XB then do(wS)[0X7]=false;end;do YZ=TG[SS];end;SS=SS+0X00001;sS[YZ[0X6]]=wS[7];SS=SS+0X01;wS[0X0007]=false;YZ=TG[SS];SS=SS+0X1;local e2=(7);sS[YZ[6]]=wS[0x0007];YZ=TG[SS];do SS=SS+1;end;local q2=(wS[1]);do(wS)[e2+0x001]=q2;end;wS[e2]=q2[YZ[1]];SS=SS+0X1;e2=0X007;wS[e2](wS[e2+0x01]);IS=e2-1;SS=SS+1;repeat local r5,b5=iG,(wS);do if not(#r5>0x0)then else local cY={};do for XY,UY in l,r5 do for nX,DX in l,UY do if not(DX[0x1]==b5 and DX[0X2]>=3)then else local qZ=DX[0X0002];if not(not cY[qZ])then else cY[qZ]={b5[qZ]};end;DX[1]=cY[qZ];do(DX)[0X02]=0x0001;end;end;end;end;end;end;end;until true;YZ=TG[SS];SS=SS+1;SS=YZ[5];else do SS=YZ[5];end;end;end;end;else do if oZ<0X3 then do if not(oZ<1)then if oZ==0x2 then wS[0x5]=sS[YZ[6]];SS=SS+1;SS=SS+0X1;YZ=TG[SS];SS=SS+1;if wS[5]then SS=YZ[5];end;else do wS[0x3]=sS[YZ[0X06]];end;SS=SS+0X1;do SS=SS+0X1;end;YZ=TG[SS];local z7=4;do SS=SS+0X1;end;wS[4]=sS[YZ[6]];do YZ=TG[SS];end;local e7=0x2;SS=SS+0X1;local Q7=(wS[4]);wS[z7+1]=Q7;wS[z7]=Q7[YZ[1]];do SS=SS+0X1;end;z7=0X4;local I7=0X0;do if e7==0 then else do IS=z7+e7-1;end;end;end;local U7,l7=nil,nil;if e7~=0x1 then U7,l7=Cd(wS[z7](V(wS,z7+1,IS)));else do U7,l7=Cd(wS[z7]());end;end;if I7==0x001 then IS=z7-0X1;else if I7~=0X00000 then U7=z7+I7-0X2;do IS=U7+0X1;end;else U7=U7+z7-1;IS=U7;end;local v4=(0);for Lu=z7,U7 do v4=v4+0x1;(wS)[Lu]=l7[v4];end;end;SS=SS+0x1;z7=3;e7=0;I7=4;do if e7==0 then else IS=z7+e7-1;end;end;U7,l7=nil;if e7==1 then U7,l7=Cd(wS[z7]());else U7,l7=Cd(wS[z7](V(wS,z7+1,IS)));end;if I7==1 then IS=z7-1;else if I7~=0X0 then do U7=z7+I7-0X2;end;IS=U7+0x1;else do U7=U7+z7-1;end;do IS=U7;end;end;local L9=(0);for BX=z7,U7 do do L9=L9+0x1;end;(wS)[BX]=l7[L9];end;end;SS=SS+1;do SS=SS+0x0001;end;YZ=TG[SS];SS=SS+0x00001;z7=3;local j7=(h(function(...)(t)();do for sQ,oQ in...do t(true,sQ,oQ);end;end;end));j7(wS[z7],wS[z7+0x0001],wS[z7+2]);IS=z7;do(wS)[z7]=j7;end;do SS=YZ[5];end;end;else do wS[0X4]=sS[YZ[6]];end;SS=SS+1;SS=SS+0X1;YZ=TG[SS];do SS=SS+0X0001;end;if wS[4]then SS=YZ[5];end;end;end;else do if not(oZ<5)then if oZ==0X6 then(wS)[3]=sS[YZ[6]];SS=SS+0X1;local AU=0X3;SS=SS+0X01;do YZ=TG[SS];end;SS=SS+0X1;(wS)[4]=YZ[0X6];do SS=SS+0X0001;end;wS[AU](wS[AU+0x01]);IS=AU-0X001;SS=SS+1;do SS=SS+1;end;SS=SS+1;(wS)[3]=nil;do YZ=TG[SS];end;SS=SS+0x0001;wS[4]=sS[YZ[6]];do YZ=TG[SS];end;do SS=SS+0X1;end;do if not(not wS[4])then else do SS=YZ[0X00005];end;end;end;else local oy=(wS[YZ[0x0005]]/wS[YZ[0X0004]]);do wS[YZ[2]]=oy-oy%0X1;end;end;else do if oZ~=4 then(wS)[3]=sS[YZ[0X6]];do YZ=TG[SS];end;SS=SS+1;wS[4]=YZ[6];do SS=SS+1;end;local Cv=0X3;do wS[Cv]=wS[Cv](wS[Cv+1]);end;IS=Cv;SS=SS+1;wS[4]={};do YZ=TG[SS];end;SS=SS+0X001;(wS)[5]=YZ[0X0006]/YZ[0X1];YZ=TG[SS];SS=SS+0X001;(wS[4])[YZ[6]]=wS[5];do YZ=TG[SS];end;SS=SS+0x1;(wS)[0X5]=sS[YZ[6]];do SS=SS+0X1;end;wS[6]=wS[0X00003];YZ=TG[SS];SS=SS+1;if wS[0x06]then SS=YZ[5];end;else do(wS)[0X0004]=sS[YZ[0x06]];end;do SS=SS+0x1;end;SS=SS+0x1;SS=SS+1;IS=0X4;do(wS)[IS]=wS[IS]();end;YZ=TG[SS];do SS=SS+0X01;end;if wS[4]then do SS=YZ[0X5];end;end;end;end;end;end;end;end;end;else if oZ>=0X15 then if oZ>=0X00018 then if oZ>=26 then if oZ==27 then local sL,RL=4,(wS[0X1]);(wS)[sL+1]=RL;wS[sL]=RL[YZ[1]];SS=SS+0x001;(wS)[0X006]=true;SS=SS+1;do sL=0x4;end;(wS[sL])(wS[sL+0X01],wS[sL+0X2]);IS=sL-1;do SS=SS+1;end;SS=SS+0X001;YZ=TG[SS];SS=SS+0X1;(wS)[4]=sS[YZ[0X6]];SS=SS+1;SS=SS+1;YZ=TG[SS];do SS=SS+1;end;(wS)[0x5]=sS[YZ[6]];do SS=SS+0X00001;end;SS=SS+0X001;YZ=TG[SS];SS=SS+1;wS[5]=wS[5][YZ[1]];YZ=TG[SS];SS=SS+0X1;do sL=0x5;end;RL=wS[5];(wS)[sL+0X1]=RL;(wS)[sL]=RL[YZ[0X1]];YZ=TG[SS];SS=SS+0X1;wS[0X7]=YZ[0x0006];SS=SS+0X1;(wS)[8]=true;SS=SS+1;sL=5;IS=sL+0X4-1;wS[sL]=wS[sL](V(wS,sL+0X0001,IS));do IS=sL;end;SS=SS+0X1;do SS=SS+0X1;end;YZ=TG[SS];SS=SS+0X1;wS[0X05]=wS[5][YZ[0X1]];YZ=TG[SS];SS=SS+1;(wS)[5]=wS[5][YZ[1]];SS=SS+0X1;SS=SS+0X1;YZ=TG[SS];SS=SS+0X1;do wS[5]=wS[0X5][YZ[1]];end;SS=SS+0x01;SS=SS+1;do SS=SS+1;end;sL=0X4;(wS[sL])(wS[sL+0X00001]);IS=sL-0X1;YZ=TG[SS];SS=SS+1;do(wS)[4]=sS[YZ[0X6]];end;YZ=TG[SS];SS=SS+1;sL=0X0004;RL=wS[0X4];wS[sL+1]=RL;(wS)[sL]=RL[YZ[0X1]];do YZ=TG[SS];end;SS=SS+1;wS[0X6]=YZ[6];do SS=SS+0X00001;end;sL=4;wS[sL]=wS[sL](wS[sL+1],wS[sL+2]);IS=sL;YZ=TG[SS];SS=SS+0X1;sL=0X4;RL=wS[0X00004];do(wS)[sL+1]=RL;end;(wS)[sL]=RL[YZ[0X1]];SS=SS+0X01;sL=0X4;wS[sL]=wS[sL](wS[sL+1]);local QL=nil;IS=sL;SS=SS+0X001;wS[0X05]=wS[0X4];SS=SS+1;do wS[0X0]=wS[5];end;SS=SS+0x1;(wS)[5]=true;YZ=TG[SS];do SS=SS+1;end;(sS)[YZ[0X6]]=wS[5];YZ=TG[SS];SS=SS+0x1;(wS)[5]=sS[YZ[6]];SS=SS+1;SS=SS+0X001;YZ=TG[SS];SS=SS+1;wS[0X0005]=wS[0X5][YZ[1]];YZ=TG[SS];SS=SS+0X00001;wS[6]=YZ[0X0006];YZ=TG[SS];SS=SS+0x1;local EL=(JG[YZ[5]]);local fL=EL[4];local NL=(#fL);do if not(NL>0)then else QL={};do for qV=1,NL do local SV=(fL[qV]);if SV[0X0001]==0X0 then QL[qV-1]={wS,SV[0X00002]};else QL[qV-1]=cG[SV[0X2]];end;end;end;H(iG,QL);end;end;wS[0x7]=ed(sS,EL,QL);SS=SS+1;sL=5;(wS[sL])(wS[sL+0x1],wS[sL+2]);IS=sL-1;SS=SS+0x001;do SS=SS+1;end;SS=SS+0X1;repeat local Tb,eb=iG,wS;if not(#Tb>0)then else local i_={};do for jb,Cb in l,Tb do do for bj,cj in l,Cb do if cj[0x1]==eb and cj[2]>=4 then local Lo=cj[0X2];do if not(not i_[Lo])then else do(i_)[Lo]={eb[Lo]};end;end;end;do cj[1]=i_[Lo];end;cj[0X02]=0X001;end;end;end;end;end;end;until true;YZ=TG[SS];SS=SS+1;SS=YZ[5];else(wS)[7]=sS[YZ[0X00006]];do SS=SS+1;end;SS=SS+0X01;SS=SS+0X01;IS=0X7;do wS[IS]=wS[IS]();end;SS=SS+1;SS=SS+0X00001;YZ=TG[SS];do SS=SS+0X001;end;do if wS[0X007]then do SS=YZ[0X5];end;end;end;end;else if oZ==25 then local xZ=YZ[0X2];local pZ,gZ=wS[xZ]();do if not(pZ)then else for ji=0x1,YZ[0X04]do wS[xZ+ji]=gZ[ji];end;SS=YZ[0X0005];end;end;else(wS)[0x7]=wS[6][YZ[1]];local I7=0X7;YZ=TG[SS];SS=SS+0X1;local r7=wS[0X7];wS[I7+1]=r7;do wS[I7]=r7[YZ[0x1]];end;YZ=TG[SS];SS=SS+0x00001;(wS)[9]=YZ[0X6];do SS=SS+1;end;I7=0X07;(wS)[I7]=wS[I7](wS[I7+1],wS[I7+2]);IS=I7;SS=SS+1;SS=SS+0X1;YZ=TG[SS];SS=SS+1;if not(not wS[7])then else do SS=YZ[0X0005];end;end;end;end;else if not(oZ>=0X16)then wS[YZ[2]]=N(wS[YZ[0X5]],wS[YZ[4]]);else do if oZ==23 then(wS)[4]=sS[YZ[0x6]];SS=SS+1;local Db=(0x4);do wS[0X5]=wS[0X0003];end;SS=SS+1;wS[Db]=wS[Db](wS[Db+0x1]);IS=Db;YZ=TG[SS];SS=SS+0X1;do if wS[4]==YZ[0x1]then else SS=YZ[2];end;end;else do wS[5]=sS[YZ[6]];end;SS=SS+1;do IS=0X5;end;(wS)[IS]=wS[IS]();YZ=TG[SS];SS=SS+1;if not(wS[0X5])then else SS=YZ[0x005];end;end;end;end;end;else if not(oZ<17)then if oZ>=19 then if oZ~=20 then wS[4]=sS[YZ[0X6]];SS=SS+1;IS=4;(wS)[IS]=wS[IS]();SS=SS+0X001;do SS=SS+1;end;YZ=TG[SS];SS=SS+0X1;do if wS[4]then do SS=YZ[5];end;end;end;else wS[4]=sS[YZ[0X00006]];local Qj=4;do SS=SS+1;end;SS=SS+0x1;YZ=TG[SS];do SS=SS+1;end;do wS[4]=wS[0X4][YZ[1]];end;SS=SS+1;SS=SS+0X00001;YZ=TG[SS];SS=SS+1;(wS)[0x0004]=wS[0X4][YZ[0X1]];SS=SS+1;SS=SS+1;do YZ=TG[SS];end;do SS=SS+0X0001;end;do sS[YZ[0X6]]=wS[0X4];end;YZ=TG[SS];do SS=SS+1;end;local Mj=(wS[0x00001]);do(wS)[Qj+1]=Mj;end;wS[Qj]=Mj[YZ[1]];do SS=SS+1;end;do wS[6]=true;end;SS=SS+0x001;Qj=0X04;wS[Qj](wS[Qj+1],wS[Qj+0X0002]);IS=Qj-0X1;YZ=TG[SS];do SS=SS+1;end;do SS=YZ[5];end;end;else if oZ~=0x000012 then local Gp=0X5;do IS=Gp+0X004-0X00001;end;do wS[Gp]=wS[Gp](V(wS,Gp+0x1,IS));end;IS=Gp;SS=SS+0X1;SS=SS+1;SS=SS+0X1;wS[0x0003]=wS[5];YZ=TG[SS];SS=SS+0x1;do SS=YZ[5];end;else wS[7]=sS[YZ[6]];SS=SS+0X01;local Aq=0X7;SS=SS+1;YZ=TG[SS];do SS=SS+0x01;end;(wS)[0X8]=sS[YZ[0X006]];do YZ=TG[SS];end;SS=SS+0X1;(wS)[0X008]=wS[0X8][YZ[0X1]];do SS=SS+1;end;(wS)[Aq]=wS[Aq](wS[Aq+0X1]);IS=Aq;SS=SS+1;(wS)[0X6]=wS[7];YZ=TG[SS];local Rq=wS[1];do SS=SS+0X00001;end;Aq=0X7;do wS[Aq+1]=Rq;end;wS[Aq]=Rq[YZ[1]];SS=SS+0x1;Aq=7;(wS[Aq])(wS[Aq+1]);IS=Aq-1;YZ=TG[SS];SS=SS+0x001;(wS)[7]=sS[YZ[6]];YZ=TG[SS];SS=SS+0x001;wS[8]=YZ[6];SS=SS+1;Aq=7;(wS[Aq])(wS[Aq+0X1]);IS=Aq-0X00001;SS=SS+0X1;SS=SS+1;YZ=TG[SS];SS=SS+0X1;do if not wS[0X006]then do SS=YZ[0x5];end;end;end;end;end;else do if not(oZ<15)then if oZ~=0X010 then(wS)[8]=wS[0X7];SS=SS+0x00001;(wS)[0x004]=wS[0X8];YZ=TG[SS];SS=SS+0X0001;do SS=YZ[5];end;else wS[5]=sS[YZ[0X00006]];SS=SS+1;SS=SS+0X1;do YZ=TG[SS];end;do SS=SS+0x1;end;do wS[0X5]=wS[0X05][YZ[1]];end;do YZ=TG[SS];end;do SS=SS+1;end;if not(wS[0X05])then else SS=YZ[0X5];end;end;else end;end;end;end;end;else if oZ>=42 then if not(oZ>=0x31)then if not(oZ>=0X002d)then if oZ>=0X2B then if oZ==0X0002c then(wS)[6]=sS[YZ[0x6]];do SS=SS+0X1;end;SS=SS+0X1;YZ=TG[SS];SS=SS+1;local dO=0x06;(wS)[0X7]=sS[YZ[6]];SS=SS+1;SS=SS+1;YZ=TG[SS];SS=SS+0X1;do wS[7]=wS[7][YZ[0X00001]];end;do SS=SS+0x1;end;do SS=SS+0X0001;end;SS=SS+0x00001;(wS)[dO]=wS[dO](wS[dO+0X0001]);IS=dO;SS=SS+0X1;SS=SS+1;do YZ=TG[SS];end;do SS=SS+0X00001;end;SS=YZ[5];else do(wS)[0x8]=sS[YZ[6]];end;SS=SS+1;do SS=SS+0X1;end;YZ=TG[SS];SS=SS+0X1;(wS)[0x8]=wS[0X8][YZ[1]];YZ=TG[SS];do SS=SS+0X1;end;(wS)[0X0009]=sS[YZ[0X6]];SS=SS+1;SS=SS+0x001;do SS=SS+1;end;wS[10]=wS[0X4];do SS=SS+1;end;local CX=(0X8);do wS[CX]=wS[CX](wS[CX+0X1],wS[CX+0X00002]);end;do IS=CX;end;do SS=SS+1;end;SS=SS+1;YZ=TG[SS];do SS=SS+0X0001;end;SS=YZ[0X05];end;else wS[2]=sS[YZ[0x00006]];SS=SS+1;SS=SS+0X1;YZ=TG[SS];SS=SS+1;(wS)[2]=wS[0X2][YZ[1]];YZ=TG[SS];SS=SS+1;(wS)[0X02]=wS[2][YZ[0x001]];do SS=SS+1;end;do SS=SS+0X1;end;YZ=TG[SS];SS=SS+0X1;do(wS)[0X2]=wS[2][YZ[1]];end;do YZ=TG[SS];end;SS=SS+0X1;do wS[0X00003]=sS[YZ[0X00006]];end;SS=SS+0X0001;SS=SS+1;YZ=TG[SS];SS=SS+1;do(wS)[0X3]=wS[0x0003][YZ[0x01]];end;YZ=TG[SS];SS=SS+1;if not(wS[3]<=wS[2])then do SS=YZ[2];end;end;end;else if oZ<47 then if oZ==0X02e then if not(wS[YZ[0X5]]<wS[YZ[4]])then SS=YZ[0x02];end;else(wS)[4]=sS[YZ[0X6]];YZ=TG[SS];SS=SS+1;local t5=0X004;(wS)[0X0005]=YZ[6];SS=SS+1;wS[t5](wS[t5+0x1]);IS=t5-0X00001;YZ=TG[SS];do SS=SS+1;end;(wS)[4]=sS[YZ[0X06]];YZ=TG[SS];do SS=SS+1;end;if not wS[0x00004]then SS=YZ[5];end;end;else if oZ~=48 then do(wS)[0x002]=sS[YZ[6]];end;SS=SS+0X1;do SS=SS+1;end;YZ=TG[SS];do SS=SS+1;end;local Z_=0X2;wS[0X3]=YZ[6];SS=SS+0X001;do(wS)[Z_]=wS[Z_](wS[Z_+0X00001]);end;IS=Z_;SS=SS+1;SS=SS+1;YZ=TG[SS];SS=SS+1;if not wS[0X02]then SS=YZ[0X5];end;else do wS[0X0003]=sS[YZ[0X6]];end;SS=SS+1;IS=3;wS[IS]=wS[IS]();SS=SS+0X1;SS=SS+1;do YZ=TG[SS];end;SS=SS+0X1;do if wS[0x0003]then SS=YZ[5];end;end;end;end;end;else do if not(oZ>=0X35)then if not(oZ<51)then if oZ==0X34 then wS[2]=sS[YZ[6]];SS=SS+0X1;do SS=SS+0x001;end;YZ=TG[SS];SS=SS+0X0001;do(wS)[2]=wS[0X2][YZ[0X1]];end;do YZ=TG[SS];end;SS=SS+0X1;do if not(not wS[0X2])then else SS=YZ[5];end;end;else(wS)[2]=sS[YZ[6]];do SS=SS+0X001;end;do SS=SS+1;end;YZ=TG[SS];SS=SS+1;wS[0X0002]=wS[2][YZ[1]];SS=SS+0X1;SS=SS+1;do YZ=TG[SS];end;SS=SS+1;do(wS)[2]=wS[0x2][YZ[0x0001]];end;SS=SS+1;do SS=SS+0X1;end;YZ=TG[SS];SS=SS+1;if not(not(wS[0X2]<YZ[0x0001]))then else SS=YZ[2];end;end;else if oZ==50 then local C2=(5);local t2=0X2;do if t2==0X0 then else do IS=C2+t2-0X1;end;end;end;local r2=4;local k2,q2=nil,(nil);if t2==1 then k2,q2=Cd(wS[C2]());else do k2,q2=Cd(wS[C2](V(wS,C2+0X1,IS)));end;end;if r2==1 then do IS=C2-0x001;end;else do if r2~=0 then do k2=C2+r2-2;end;do IS=k2+0x1;end;else k2=k2+C2-1;IS=k2;end;end;local Dd=(0);for nh=C2,k2 do do Dd=Dd+1;end;wS[nh]=q2[Dd];end;end;SS=SS+1;do SS=SS+0X1;end;YZ=TG[SS];SS=SS+1;C2=5;local c2=h(function(...)(t)();do for pz,kz in...do(t)(true,pz,kz);end;end;end);c2(wS[C2],wS[C2+1],wS[C2+2]);IS=C2;wS[C2]=c2;do SS=YZ[0X5];end;else(wS)[0X2]=sS[YZ[0X6]];do SS=SS+1;end;SS=SS+0X1;do SS=SS+1;end;IS=2;do wS[IS]=wS[IS]();end;YZ=TG[SS];SS=SS+0x0001;(wS)[3]=sS[YZ[6]];do SS=SS+0X1;end;(wS)[2]=wS[0x2]-wS[3];YZ=TG[SS];SS=SS+0X1;wS[0X2]=wS[0x00002]>YZ[1];YZ=TG[SS];SS=SS+0X1;if not wS[0X02]then do SS=YZ[5];end;end;end;end;else do if oZ<0X000037 then if oZ==0X00036 then do(wS)[4]=sS[YZ[6]];end;SS=SS+0X1;do IS=4;end;(wS)[IS]=wS[IS]();do YZ=TG[SS];end;do SS=SS+1;end;if not(wS[4])then else SS=YZ[5];end;else do wS[0X00003]=sS[YZ[6]];end;YZ=TG[SS];SS=SS+0X001;wS[0X0003]=wS[3][YZ[1]];SS=SS+0X001;SS=SS+0x1;YZ=TG[SS];SS=SS+1;(wS)[3]=wS[0X3][YZ[0x1]];SS=SS+1;SS=SS+0x1;YZ=TG[SS];SS=SS+0X1;wS[0X3]=wS[0X03][YZ[0X1]];SS=SS+0X01;SS=SS+1;do YZ=TG[SS];end;SS=SS+1;(wS)[0X4]=sS[YZ[0x006]];YZ=TG[SS];SS=SS+0X1;wS[4]=wS[4][YZ[1]];SS=SS+1;SS=SS+0X1;YZ=TG[SS];SS=SS+1;do wS[5]=sS[YZ[6]];end;YZ=TG[SS];SS=SS+0X1;wS[5]=wS[5][YZ[1]];YZ=TG[SS];SS=SS+1;if wS[5]then do SS=YZ[0x5];end;end;end;else if oZ==56 then wS[3]=sS[YZ[6]];SS=SS+1;IS=0x3;wS[IS]=wS[IS]();do YZ=TG[SS];end;SS=SS+1;if not(not wS[0X0003])then else SS=YZ[0x5];end;else wS[0X06]=sS[YZ[0X6]];YZ=TG[SS];SS=SS+0X1;wS[0X5][YZ[6]]=wS[6];YZ=TG[SS];SS=SS+1;SS=YZ[0X00005];end;end;end;end;end;end;else if oZ<0X23 then do if not(oZ<0X00001f)then do if oZ>=33 then do if oZ~=0X22 then wS[0x003]=true;YZ=TG[SS];SS=SS+1;do(sS)[YZ[0X006]]=wS[3];end;YZ=TG[SS];SS=SS+0X001;wS[3]=sS[YZ[0X0006]];SS=SS+1;SS=SS+0X1;YZ=TG[SS];SS=SS+0X1;if not wS[3]then SS=YZ[0x05];end;else(wS)[0X0006]=wS[0X3][YZ[1]];SS=SS+0X01;do SS=SS+0X0001;end;YZ=TG[SS];do SS=SS+0x1;end;wS[6]=wS[6][YZ[0X1]];YZ=TG[SS];SS=SS+0X1;if not(not wS[6])then else SS=YZ[0X5];end;end;end;else do if oZ~=32 then wS[0X3]=sS[YZ[6]];local Dn=(3);YZ=TG[SS];SS=SS+0x01;local wn=(wS[0X0003]);wS[Dn+0X00001]=wn;wS[Dn]=wn[YZ[0X1]];do YZ=TG[SS];end;SS=SS+0x001;(wS)[0X5]=YZ[6];do SS=SS+1;end;Dn=3;do(wS)[Dn]=wS[Dn](wS[Dn+1],wS[Dn+0X00002]);end;IS=Dn;YZ=TG[SS];SS=SS+0X1;if wS[0X3]then SS=YZ[0X5];end;else wS[0X4]=sS[YZ[6]];do SS=SS+0X1;end;SS=SS+1;SS=SS+1;local iA=0X4;do IS=4;end;wS[IS]=wS[IS]();SS=SS+0x1;do SS=SS+1;end;SS=SS+0X00001;do(wS)[0X03]=wS[0X4];end;YZ=TG[SS];SS=SS+0x1;local rA=wS[0X01];(wS)[iA+0x01]=rA;(wS)[iA]=rA[YZ[0x1]];SS=SS+0X0001;iA=0X4;(wS[iA])(wS[iA+0X00001]);do IS=iA-1;end;YZ=TG[SS];SS=SS+0X1;do wS[0X004]=sS[YZ[0X6]];end;do SS=SS+1;end;do SS=SS+1;end;do YZ=TG[SS];end;SS=SS+0x1;wS[4]=wS[0X4][YZ[1]];SS=SS+0X1;do SS=SS+0X001;end;YZ=TG[SS];SS=SS+0x0001;(wS)[0x5]=YZ[0X006];SS=SS+0X1;iA=4;wS[iA](wS[iA+1]);IS=iA-0X1;YZ=TG[SS];SS=SS+1;(wS)[0X0004]=wS[0X00003][YZ[1]];YZ=TG[SS];do SS=SS+0X001;end;do if not(wS[0X4])then else SS=YZ[0X5];end;end;end;end;end;end;else if oZ<0X1d then local Et=(wS[1]);local Zt=(5);(wS)[Zt+0x1]=Et;(wS)[Zt]=Et[YZ[0X1]];SS=SS+0x1;do Zt=5;end;wS[Zt]=wS[Zt](wS[Zt+0X1]);IS=Zt;YZ=TG[SS];SS=SS+0x1;if not(not wS[5])then else SS=YZ[0X5];end;else if oZ~=30 then wS[YZ[0x2]]=wS[YZ[0X0005]]>=wS[YZ[4]];else(wS)[4]=sS[YZ[6]];YZ=TG[SS];SS=SS+0x01;wS[5]=sS[YZ[6]];YZ=TG[SS];SS=SS+0x1;wS[5]=wS[5][YZ[1]];SS=SS+0X1;SS=SS+0X1;YZ=TG[SS];SS=SS+1;wS[5]=wS[5][YZ[1]];SS=SS+0X0001;local cA=0X4;do SS=SS+0x001;end;YZ=TG[SS];SS=SS+0X01;(wS)[5]=wS[0X00005][YZ[0x0001]];do SS=SS+1;end;SS=SS+0X1;SS=SS+0X1;wS[cA]=wS[cA](wS[cA+0X1]);IS=cA;do YZ=TG[SS];end;do SS=SS+0x1;end;do(wS)[5]=sS[YZ[0x6]];end;SS=SS+0X001;SS=SS+1;YZ=TG[SS];do SS=SS+1;end;(wS)[0X6]=YZ[6];YZ=TG[SS];SS=SS+1;(wS)[7]=YZ[6];do YZ=TG[SS];end;SS=SS+1;(wS)[8]=sS[YZ[0x6]];SS=SS+1;do SS=SS+0x1;end;YZ=TG[SS];do SS=SS+0X1;end;wS[0x8]=wS[8][YZ[1]];SS=SS+1;SS=SS+0x00001;YZ=TG[SS];do SS=SS+0X1;end;do(wS)[8]=wS[8]==YZ[0X00001];end;do YZ=TG[SS];end;SS=SS+0X1;if not(not wS[0X8])then else SS=YZ[5];end;end;end;end;end;else do if oZ<0x26 then if not(oZ>=36)then wS[YZ[2]]=YZ[0X6];else if oZ==37 then local wj,hj=4,wS[1];do(wS)[wj+0X0001]=hj;end;(wS)[wj]=hj[YZ[1]];do SS=SS+0X1;end;wj=0X004;wS[wj](wS[wj+0x001]);IS=wj-1;do SS=SS+1;end;SS=SS+1;do YZ=TG[SS];end;do SS=SS+1;end;SS=YZ[5];else wS[YZ[2]]=sS[YZ[0x6]];end;end;else if oZ>=40 then do if oZ==0X00029 then(wS)[0X002]=sS[YZ[6]];YZ=TG[SS];SS=SS+0X1;do wS[2]=wS[0X2][YZ[0X01]];end;YZ=TG[SS];SS=SS+0x1;if not wS[2]then SS=YZ[5];end;else local OC=(0X4);local hC=(wS[1]);(wS)[OC+1]=hC;do wS[OC]=hC[YZ[1]];end;SS=SS+0X1;OC=0X4;(wS)[OC]=wS[OC](wS[OC+1]);IS=OC;SS=SS+1;SS=SS+0X00001;YZ=TG[SS];SS=SS+0X01;if not wS[0x004]then SS=YZ[5];end;end;end;else if oZ==0x000027 then wS[4]=sS[YZ[6]];SS=SS+1;SS=SS+1;YZ=TG[SS];SS=SS+1;do wS[0X4]=wS[0X04][YZ[0X01]];end;SS=SS+0X0001;do SS=SS+1;end;YZ=TG[SS];SS=SS+1;wS[4]=wS[4][YZ[0X01]];do YZ=TG[SS];end;SS=SS+1;if not(not(wS[0X4]<YZ[0X1]))then else SS=YZ[2];end;else do(wS)[0X0]=sS[YZ[6]];end;SS=SS+0X1;SS=SS+0X1;YZ=TG[SS];do SS=SS+1;end;do if not(not wS[0])then else do SS=YZ[0X05];end;end;end;end;end;end;end;end;end;end;else if not(oZ<0X55)then if oZ<0x000063 then if not(oZ<0X5c)then if not(oZ<0X5F)then if oZ>=97 then if oZ==0X62 then(wS)[4]=sS[YZ[0X06]];YZ=TG[SS];SS=SS+1;do wS[0X00005]=YZ[0X6];end;YZ=TG[SS];SS=SS+1;(wS)[0X6]=YZ[0X6];do YZ=TG[SS];end;SS=SS+0X01;(wS)[7]=YZ[0X6];do SS=SS+0X1;end;local ae=(0X4);do IS=ae+0X4-1;end;do wS[ae]=wS[ae](V(wS,ae+1,IS));end;do IS=ae;end;SS=SS+1;SS=SS+0X1;do SS=SS+1;end;do wS[0x3]=wS[0X004];end;YZ=TG[SS];SS=SS+0X1;SS=YZ[0x5];else do(wS)[0X04]=sS[YZ[6]];end;YZ=TG[SS];local hC=(4);SS=SS+1;(wS)[5]=YZ[6];do SS=SS+0X001;end;(wS[hC])(wS[hC+1]);IS=hC-1;YZ=TG[SS];SS=SS+0X1;if wS[0X2]then SS=YZ[0X00005];end;end;else if oZ~=96 then local aJ,EJ=0X5,(wS[0X00003]);(wS)[aJ+0X00001]=EJ;(wS)[aJ]=EJ[YZ[1]];YZ=TG[SS];SS=SS+1;(wS)[0X7]=YZ[0X6];SS=SS+0X001;do aJ=0X00005;end;wS[aJ]=wS[aJ](wS[aJ+1],wS[aJ+2]);IS=aJ;SS=SS+1;SS=SS+1;YZ=TG[SS];do SS=SS+1;end;if wS[5]then do SS=YZ[5];end;end;else local JH=(wS[0X5]);local nH=(0X6);do(wS)[nH+1]=JH;end;wS[nH]=JH[YZ[0X1]];YZ=TG[SS];SS=SS+1;wS[0X008]=YZ[6];SS=SS+1;nH=0X006;wS[nH]=wS[nH](wS[nH+0X1],wS[nH+2]);IS=nH;SS=SS+0X1;SS=SS+0x1;YZ=TG[SS];SS=SS+0x1;if not(not wS[6])then else SS=YZ[5];end;end;end;else if not(oZ<93)then do if oZ~=0X05e then local Y4=(0X8);(wS)[Y4]=wS[Y4](wS[Y4+0X1]);IS=Y4;do SS=SS+1;end;do SS=SS+0x001;end;YZ=TG[SS];do SS=SS+0X1;end;SS=YZ[5];else wS[0X00004]=sS[YZ[0X0006]];SS=SS+1;do SS=SS+0X1;end;SS=SS+0X1;IS=0X00004;do(wS)[IS]=wS[IS]();end;do SS=SS+1;end;SS=SS+0X1;do YZ=TG[SS];end;SS=SS+0X1;if not(wS[0x4])then else SS=YZ[0X05];end;end;end;else local rh,xh=3,(wS[1]);wS[rh+1]=xh;(wS)[rh]=xh[YZ[1]];SS=SS+1;rh=3;do wS[rh]=wS[rh](wS[rh+0X01]);end;IS=rh;SS=SS+1;do SS=SS+1;end;YZ=TG[SS];do SS=SS+0X1;end;if not wS[3]then SS=YZ[5];end;end;end;else if oZ>=88 then do if not(oZ<0x5a)then if oZ==0X0005b then wS[4]=sS[YZ[6]];YZ=TG[SS];do SS=SS+0X1;end;do wS[4]=wS[4][YZ[1]];end;do SS=SS+0X00001;end;SS=SS+0X001;YZ=TG[SS];SS=SS+1;if not(wS[0X4])then else SS=YZ[0X5];end;else wS[3]=sS[YZ[6]];SS=SS+0X001;SS=SS+1;SS=SS+1;IS=0X003;wS[IS]=wS[IS]();do SS=SS+0X01;end;SS=SS+0x001;YZ=TG[SS];SS=SS+1;if wS[3]then SS=YZ[0X5];end;end;else if oZ==0x59 then wS[0X00006]=wS[0X3][YZ[0X1]];do SS=SS+0x1;end;SS=SS+0X01;SS=SS+0X1;IS=6;wS[IS]();do IS=IS-1;end;YZ=TG[SS];SS=SS+1;do(wS)[0X06]=sS[YZ[0X00006]];end;do SS=SS+1;end;do SS=SS+1;end;SS=SS+0X0001;IS=0X6;wS[IS]();do IS=IS-1;end;SS=SS+1;SS=SS+0x01;do YZ=TG[SS];end;do SS=SS+1;end;(wS)[6]=wS[0X3][YZ[1]];YZ=TG[SS];SS=SS+1;if not wS[0X00006]then SS=YZ[0X0005];end;else(wS)[0x8]=wS[0X007][YZ[0x1]];do SS=SS+0X1;end;do SS=SS+1;end;do YZ=TG[SS];end;do SS=SS+1;end;wS[0X0009]=sS[YZ[6]];SS=SS+0X1;do SS=SS+0x1;end;YZ=TG[SS];do SS=SS+0x01;end;do(wS)[0Xa]=sS[YZ[0X0006]];end;SS=SS+1;SS=SS+0X01;YZ=TG[SS];do SS=SS+0X1;end;do wS[0x0000A]=wS[0X00a][YZ[1]];end;SS=SS+0X1;local KM=9;(wS)[KM]=wS[KM](wS[KM+0x0001]);IS=KM;YZ=TG[SS];do SS=SS+0x1;end;if not(wS[0x09])then else SS=YZ[0x0005];end;end;end;end;else do if not(oZ>=0x56)then(wS)[6]=YZ[6];do YZ=TG[SS];end;local KG=(4);SS=SS+1;wS[0X00007]=YZ[0X6]/YZ[1];SS=SS+1;IS=KG+4-1;(wS)[KG]=wS[KG](V(wS,KG+1,IS));do IS=KG;end;do YZ=TG[SS];end;SS=SS+1;if not(not(wS[0X3]<wS[0X004]))then else do SS=YZ[0X2];end;end;else if oZ==87 then wS[0X3]=sS[YZ[0x6]];YZ=TG[SS];local VZ=(0X3);SS=SS+0X0001;wS[0X4]=YZ[6];YZ=TG[SS];SS=SS+0X01;do wS[5]=YZ[6];end;do SS=SS+0X1;end;do(wS)[VZ]=wS[VZ](wS[VZ+0X1],wS[VZ+2]);end;do IS=VZ;end;do SS=SS+1;end;SS=SS+1;do YZ=TG[SS];end;SS=SS+0x0001;do if wS[3]==YZ[1]then do SS=YZ[2];end;end;end;else do wS[0x4]=sS[YZ[0X6]];end;SS=SS+0x01;SS=SS+1;do SS=SS+0X01;end;IS=0x004;(wS)[IS]=wS[IS]();SS=SS+0X00001;SS=SS+1;do YZ=TG[SS];end;do SS=SS+0X00001;end;if not(wS[0x4])then else do SS=YZ[5];end;end;end;end;end;end;end;else if oZ>=0X006A then if oZ>=0x6e then if not(oZ>=0X00070)then if oZ~=111 then(wS)[2]=true;YZ=TG[SS];SS=SS+1;(sS)[YZ[6]]=wS[2];local Qp=(0x00002);YZ=TG[SS];SS=SS+0X1;wS[2]=sS[YZ[0X00006]];YZ=TG[SS];SS=SS+1;local Ep=(wS[0X2]);wS[Qp+0X1]=Ep;wS[Qp]=Ep[YZ[0X1]];YZ=TG[SS];SS=SS+0X1;do wS[4]=YZ[0X6];end;SS=SS+0X1;do Qp=0X2;end;(wS[Qp])(wS[Qp+0X00001],wS[Qp+2]);IS=Qp-0X1;SS=SS+0x1;SS=SS+1;YZ=TG[SS];SS=SS+1;SS=YZ[0X5];else repeat local fh,jh=iG,wS;if not(#fh>0x0)then else local CL={};do for MI,SI in l,fh do for OX,PX in l,SI do if not(PX[1]==jh and PX[0X2]>=0)then else local yQ=(PX[2]);if not CL[yQ]then(CL)[yQ]={jh[yQ]};end;(PX)[0X1]=CL[yQ];do(PX)[0x0002]=1;end;end;end;end;end;end;until true;return;end;else if oZ==113 then do(wS)[3]=sS[YZ[0x6]];end;SS=SS+1;IS=0X3;do wS[IS]=wS[IS]();end;SS=SS+0X1;SS=SS+1;YZ=TG[SS];SS=SS+0x1;if not(wS[0X3])then else SS=YZ[5];end;else do wS[5]=sS[YZ[0X00006]];end;do SS=SS+1;end;IS=0X5;wS[IS]=wS[IS]();YZ=TG[SS];SS=SS+0X0001;if not(wS[5])then else SS=YZ[0X5];end;end;end;else if not(oZ<108)then if oZ==0X6d then wS[5]=sS[YZ[6]];YZ=TG[SS];SS=SS+1;(wS)[0X00006]=YZ[6];local J5=0X05;YZ=TG[SS];SS=SS+1;do wS[7]=wS[0x0004][YZ[1]];end;SS=SS+0x00001;wS[J5](wS[J5+1],wS[J5+0x02]);IS=J5-1;SS=SS+0x1;do SS=SS+0X1;end;YZ=TG[SS];SS=SS+0X1;SS=YZ[0X5];else(wS)[0X8]=sS[YZ[6]];SS=SS+1;SS=SS+1;YZ=TG[SS];SS=SS+0X1;(wS)[9]=sS[YZ[0x006]];YZ=TG[SS];SS=SS+0x001;(wS)[0x9]=wS[9][YZ[1]];do SS=SS+0X0001;end;SS=SS+0X1;do YZ=TG[SS];end;SS=SS+0x0001;wS[0X9]=wS[0x0009]~=YZ[0X001];YZ=TG[SS];SS=SS+1;if not(not wS[9])then else SS=YZ[5];end;end;else if oZ==0x6B then do wS[0x4]=sS[YZ[0X00006]];end;SS=SS+1;SS=SS+1;do YZ=TG[SS];end;SS=SS+1;do if not(wS[4])then else SS=YZ[5];end;end;else wS[0X00002]=sS[YZ[0X6]];SS=SS+1;do IS=0X2;end;wS[IS]=wS[IS]();do YZ=TG[SS];end;SS=SS+1;do SS=YZ[0X5];end;end;end;end;else do if not(oZ<0X66)then do if not(oZ>=0X68)then if oZ==103 then wS[5]=sS[YZ[0X6]];YZ=TG[SS];do SS=SS+0X1;end;wS[5]=wS[0X00005][YZ[0X001]];YZ=TG[SS];SS=SS+0X1;do if not(not wS[0X5])then else do SS=YZ[0X0005];end;end;end;else local LY=JG[YZ[5]];local UY=(LY[4]);local gY,YY=#UY,(nil);if not(gY>0)then else YY={};for yI=1,gY do local GI=UY[yI];if GI[1]~=0 then(YY)[yI-0X00001]=cG[GI[0X2]];else YY[yI-0X1]={wS,GI[2]};end;end;H(iG,YY);end;(wS)[YZ[2]]=ed(sS,LY,YY);end;else do if oZ==0X000069 then wS[0X007]=sS[YZ[6]];SS=SS+0X001;SS=SS+1;SS=SS+1;IS=7;wS[IS]();IS=IS-0X001;do YZ=TG[SS];end;SS=SS+1;wS[0x00007]=sS[YZ[0X00006]];YZ=TG[SS];SS=SS+0x1;(wS)[7]=wS[7][YZ[0x1]];SS=SS+0X1;SS=SS+1;YZ=TG[SS];local EM=(0X7);SS=SS+1;local yM=wS[7];wS[EM+1]=yM;wS[EM]=yM[YZ[0X1]];YZ=TG[SS];SS=SS+1;do wS[0X00009]=YZ[0X6];end;SS=SS+0X1;EM=0X0007;do wS[EM]=wS[EM](wS[EM+1],wS[EM+2]);end;IS=EM;SS=SS+0X1;SS=SS+0x1;YZ=TG[SS];SS=SS+0X1;do if wS[0X007]then do SS=YZ[5];end;end;end;else do(wS)[3]=sS[YZ[0X0006]];end;do SS=SS+1;end;SS=SS+1;SS=SS+0x1;IS=3;wS[IS]=wS[IS]();SS=SS+0x1;SS=SS+0x1;YZ=TG[SS];do SS=SS+1;end;do if not(wS[3])then else SS=YZ[0X5];end;end;end;end;end;end;else if oZ<0x0064 then do wS[6]=sS[YZ[6]];end;local Sj=0x6;SS=SS+1;do SS=SS+1;end;do YZ=TG[SS];end;SS=SS+1;(wS)[0X7]=YZ[6];SS=SS+1;wS[8]=wS[5];SS=SS+0X1;(wS[Sj])(wS[Sj+0X1],wS[Sj+0X2]);IS=Sj-1;do YZ=TG[SS];end;SS=SS+1;SS=YZ[0x5];else if oZ~=0X65 then wS[YZ[2]]=wS[YZ[0X005]];else if wS[YZ[2]]then SS=YZ[0X0005];end;end;end;end;end;end;end;else if not(oZ<0X047)then do if oZ>=78 then if oZ<0X000051 then if oZ>=79 then if oZ==0X00050 then do(wS)[4]=sS[YZ[6]];end;local Rr=(nil);local Ur=3;do YZ=TG[SS];end;local nr=(4);SS=SS+0X1;local tr=JG[YZ[5]];local Hr=tr[0X004];local Kr=(#Hr);if not(Kr>0)then else Rr={};for FK=0X1,Kr do local LK=Hr[FK];if LK[1]==0X0000 then Rr[FK-0X0001]={wS,LK[2]};else Rr[FK-1]=cG[LK[2]];end;end;(H)(iG,Rr);end;(wS)[5]=ed(sS,tr,Rr);SS=SS+0X1;local mr=0X2;do if mr~=0x00000 then IS=nr+mr-1;end;end;local ar,zr=nil,(nil);do if mr==1 then ar,zr=Cd(wS[nr]());else do ar,zr=Cd(wS[nr](V(wS,nr+0X1,IS)));end;end;end;if Ur~=0X1 then if Ur~=0 then ar=nr+Ur-2;IS=ar+1;else ar=ar+nr-1;IS=ar;end;local Jr=(0);do for Y2=nr,ar do do Jr=Jr+1;end;wS[Y2]=zr[Jr];end;end;else IS=nr-0x1;end;SS=SS+1;do SS=SS+0x1;end;YZ=TG[SS];SS=SS+1;if not(wS[0X4])then else SS=YZ[0X5];end;else wS[7]=sS[YZ[6]];SS=SS+1;SS=SS+1;YZ=TG[SS];local t8=(7);SS=SS+1;wS[7]=wS[7][YZ[1]];YZ=TG[SS];SS=SS+0x00001;local C8=(wS[7]);wS[t8+1]=C8;(wS)[t8]=C8[YZ[0X1]];YZ=TG[SS];do SS=SS+0X1;end;do(wS)[0X09]=YZ[6];end;YZ=TG[SS];SS=SS+0X0001;do wS[0xA]=YZ[0X6];end;do SS=SS+1;end;t8=0X07;IS=t8+0X4-0x0001;(wS[t8])(V(wS,t8+0X0001,IS));IS=t8-0X01;SS=SS+1;SS=SS+1;do YZ=TG[SS];end;SS=SS+1;SS=YZ[5];end;else if not wS[YZ[2]]then do SS=YZ[5];end;end;end;else do if not(oZ<83)then if oZ~=84 then(wS)[0Xa]=wS[0x7][YZ[0x1]];SS=SS+0X1;SS=SS+0X0001;do YZ=TG[SS];end;do SS=SS+0X1;end;(wS)[11]=wS[0x4][YZ[0x1]];YZ=TG[SS];SS=SS+1;if not(wS[10]<wS[11])then SS=YZ[0X002];end;else do(wS)[0x05]=sS[YZ[0X6]];end;SS=SS+0X1;do IS=5;end;(wS)[IS]=wS[IS]();SS=SS+1;SS=SS+1;do YZ=TG[SS];end;SS=SS+0X1;if wS[0X5]then SS=YZ[5];end;end;else if oZ==82 then do(wS)[0x04]=sS[YZ[6]];end;do YZ=TG[SS];end;SS=SS+0X1;wS[5]=YZ[0x6];local hg=0x4;do SS=SS+0x1;end;(wS[hg])(wS[hg+1]);IS=hg-1;do YZ=TG[SS];end;do SS=SS+1;end;SS=YZ[5];else do wS[YZ[2]]=wS[YZ[0x00005]]*wS[YZ[4]];end;end;end;end;end;else if not(oZ>=0x4a)then do if oZ>=72 then if oZ~=0X0049 then wS[4]=sS[YZ[0x0006]];do SS=SS+0X1;end;do SS=SS+0X001;end;YZ=TG[SS];SS=SS+0x001;wS[0x04]=wS[0X0004][YZ[0X1]];YZ=TG[SS];SS=SS+1;(wS)[4]=wS[0x00004][YZ[0X00001]];do YZ=TG[SS];end;SS=SS+0X0001;do if not(not(wS[0x0004]<YZ[1]))then else SS=YZ[2];end;end;else local TM=(wS[1]);local pM=3;do wS[pM+1]=TM;end;(wS)[pM]=TM[YZ[1]];SS=SS+0X1;pM=3;(wS[pM])(wS[pM+0X1]);IS=pM-0X1;SS=SS+0x01;do SS=SS+0X1;end;YZ=TG[SS];SS=SS+1;wS[0X0003]=sS[YZ[0X6]];SS=SS+1;do SS=SS+0X01;end;SS=SS+1;IS=0X003;wS[IS]=wS[IS]();YZ=TG[SS];SS=SS+1;do SS=YZ[5];end;end;else local WL,bL=0X4,(wS[1]);(wS)[WL+0X1]=bL;do wS[WL]=bL[YZ[1]];end;do SS=SS+0X00001;end;do WL=0x04;end;wS[WL]=wS[WL](wS[WL+0X1]);IS=WL;do SS=SS+0X1;end;SS=SS+0X1;YZ=TG[SS];do SS=SS+1;end;if not wS[4]then SS=YZ[0X5];end;end;end;else if not(oZ<76)then if oZ~=77 then do(wS)[YZ[0X2]]=wS[YZ[5]][YZ[0X1]];end;else wS[3]=sS[YZ[6]];do YZ=TG[SS];end;do SS=SS+0X00001;end;(wS)[0x0003]=wS[3][YZ[1]];YZ=TG[SS];do SS=SS+1;end;do(wS)[0X3]=wS[0X03][YZ[0X1]];end;SS=SS+0X1;do SS=SS+0X1;end;YZ=TG[SS];do SS=SS+0x01;end;if not(wS[3]<YZ[1])then SS=YZ[0X2];end;end;else do if oZ~=75 then wS[0X04]=sS[YZ[6]];do YZ=TG[SS];end;SS=SS+0X1;(wS)[0X0004]=wS[4][YZ[0X1]];do SS=SS+0X01;end;SS=SS+0X001;YZ=TG[SS];SS=SS+1;do(wS)[0X00004]=wS[0X004][YZ[1]];end;SS=SS+1;SS=SS+0X01;YZ=TG[SS];do SS=SS+0X1;end;do wS[4]=wS[4][YZ[0X1]];end;do SS=SS+0x001;end;SS=SS+0X1;YZ=TG[SS];do SS=SS+0X1;end;if wS[4]~=YZ[1]then else SS=YZ[2];end;else(wS)[YZ[2]]={V({},0X1,YZ[5])};end;end;end;end;end;end;else if oZ>=64 then if not(oZ<0X43)then do if oZ<69 then do if oZ==0x044 then do wS[YZ[0X2]]={};end;else wS[6]=sS[YZ[6]];do SS=SS+1;end;IS=0X006;wS[IS]=wS[IS]();SS=SS+1;do SS=SS+0X1;end;do YZ=TG[SS];end;do SS=SS+1;end;if not(wS[6])then else do SS=YZ[0X5];end;end;end;end;else if oZ==70 then(wS)[0X002]=sS[YZ[6]];do SS=SS+1;end;do SS=SS+0x00001;end;YZ=TG[SS];SS=SS+1;do(wS)[2]=wS[0X00002][YZ[1]];end;YZ=TG[SS];SS=SS+1;(wS)[2]=wS[2][YZ[1]];SS=SS+1;SS=SS+0X00001;YZ=TG[SS];SS=SS+1;do if not(not(wS[2]<YZ[0X01]))then else SS=YZ[0X2];end;end;else if wS[YZ[5]]~=YZ[1]then else do SS=YZ[0X002];end;end;end;end;end;else do if not(oZ<0X041)then do if oZ==66 then for k8=YZ[0X2],YZ[0X5]do do(wS)[k8]=nil;end;end;else wS[0X00003]=sS[YZ[0x6]];SS=SS+0X1;IS=3;wS[IS]=wS[IS]();do SS=SS+0X1;end;SS=SS+0X1;do YZ=TG[SS];end;do SS=SS+1;end;do if wS[3]then SS=YZ[0X5];end;end;end;end;else wS[9]=sS[YZ[0X06]];YZ=TG[SS];do SS=SS+0X0001;end;(wS)[9]=wS[9][YZ[0X001]];SS=SS+1;do SS=SS+1;end;YZ=TG[SS];SS=SS+1;SS=YZ[5];end;end;end;else if oZ<60 then if not(oZ>=58)then local lS=2;local US=wS[0X001];(wS)[lS+0X1]=US;wS[lS]=US[YZ[0X01]];SS=SS+1;lS=0x2;(wS)[lS]=wS[lS](wS[lS+0x1]);IS=lS;YZ=TG[SS];SS=SS+0X01;if wS[2]then SS=YZ[0X5];end;else do if oZ==0X03b then(wS)[3]=sS[YZ[0X6]];YZ=TG[SS];SS=SS+0X001;do wS[3]=wS[0x0003][YZ[0X1]];end;YZ=TG[SS];SS=SS+1;if not(wS[0X3])then else SS=YZ[5];end;else wS[8]=sS[YZ[6]];do SS=SS+1;end;SS=SS+0x1;YZ=TG[SS];SS=SS+0X1;do wS[0X00008]=wS[8][YZ[1]];end;YZ=TG[SS];SS=SS+1;do(wS)[0X8]=wS[8][YZ[1]];end;SS=SS+0X01;SS=SS+0X1;do YZ=TG[SS];end;SS=SS+1;(wS)[8]=wS[0X08][YZ[1]];YZ=TG[SS];do SS=SS+0X0001;end;wS[8]=wS[0X8]~=YZ[0X00001];do YZ=TG[SS];end;do SS=SS+0X1;end;SS=YZ[0X5];end;end;end;else if not(oZ<0X3E)then if oZ==63 then(wS)[0x002]=sS[YZ[6]];SS=SS+0X00001;SS=SS+0X1;YZ=TG[SS];do SS=SS+1;end;do if not(not wS[0X02])then else do SS=YZ[0X5];end;end;end;else do wS[0X0]=nil;end;YZ=TG[SS];do SS=SS+0x1;end;local j2=0X001;do(wS)[1]=sS[YZ[0X6]];end;SS=SS+1;SS=SS+0x00001;YZ=TG[SS];do SS=SS+1;end;local Z2=wS[0X1];(wS)[j2+1]=Z2;do(wS)[j2]=Z2[YZ[1]];end;YZ=TG[SS];SS=SS+1;(wS)[0X3]=YZ[6];do SS=SS+0X00001;end;j2=1;do wS[j2]=wS[j2](wS[j2+0x00001],wS[j2+0x002]);end;IS=j2;SS=SS+1;SS=SS+0x01;SS=SS+0X1;wS[0X2]=false;YZ=TG[SS];SS=SS+1;sS[YZ[0X0006]]=wS[2];do YZ=TG[SS];end;SS=SS+0X1;do SS=YZ[5];end;end;else if oZ~=61 then(wS)[0x03]=false;YZ=TG[SS];SS=SS+0X01;(sS)[YZ[0x006]]=wS[0X0003];YZ=TG[SS];SS=SS+0X1;SS=YZ[0X5];else do(wS)[0x00004]=sS[YZ[0X6]];end;YZ=TG[SS];do SS=SS+0X0001;end;do wS[4]=wS[0x4][YZ[0X1]];end;YZ=TG[SS];SS=SS+1;if not(wS[4])then else SS=YZ[0X5];end;end;end;end;end;end;end;end;end;end);if kS then do if gS then do if mS==0X1 then return wS[pS]();else return wS[pS](V(wS,pS+0X1,IS));end;end;elseif not(pS)then else return V(wS,pS,mS);end;end;else if C(gS)~="string"then(E)(gS,0X0);else do if not(M(gS,"a\116\116\e\m\p\116\ \116\111\ \y\i\e\ld\ \097c\114\os\s\ m\et\097m\eth\111\100\/\C\037-\c\097ll\ boun\100ar\121"))then else return coroutine.yield();end;end;if M(gS,"\094\.\-:%\d\+\: ")then(E)("\076\117\114a\112h S\cr\i\112t:"..(YG[SS-0x1]or"(internal)")..": "..x(gS),0X000);else(E)(gS,0X0);end;end;end;end;else if lG~=142 then hG=function(...)local WS,qS=1,({});local IS=I();local oS,aS=Cd(...);local yS={[0X1]=FG,[0X0002]=qS};oS=oS-0X00001;for jn=0,oS do if IG>jn then qS[jn]=aS[jn+0X1];else break;end;end;local YS,FS=0,(IS==a and SG or IS);if not OG then aS=nil;elseif zG then do qS[IG]={n=oS>=IG and oS-IG+0X001 or 0,V(aS,IG+0X1,oS+0X001)};end;end;if FS==IS then else(R)(hG,FS);end;local lS,ES,MS,pS=A(function()while true do local fL=(TG[WS]);local NL=(fL[3]);WS=WS+1;if NL>=18 then if NL>=27 then if not(NL>=31)then if NL<29 then if NL==0X1C then else(qS)[fL[0X002]]=fL[0X00006];end;else if NL~=0x1e then do(qS)[0X0001]=FS[fL[6]];end;WS=WS+1;WS=WS+1;do fL=TG[WS];end;WS=WS+0X1;qS[1]=qS[1][fL[1]];WS=WS+1;WS=WS+0X1;fL=TG[WS];do WS=WS+0X1;end;if not(not qS[1])then else do WS=fL[5];end;end;else FS[fL[0X006]]=qS[fL[0X02]];end;end;else do if NL<0X21 then if NL~=0x20 then do for i2=fL[2],fL[0X5]do qS[i2]=nil;end;end;else repeat local jm,Nm,Im=iG,qS,fL[0x2];if#jm>0 then local h1={};for eO,BO in l,jm do for XH,RH in l,BO do do if not(RH[1]==Nm and RH[0x2]>=Im)then else local au=RH[0x2];if not h1[au]then do(h1)[au]={Nm[au]};end;end;RH[0X1]=h1[au];RH[0X2]=0X0001;end;end;end;end;end;until true;end;else if not(NL>=0X000022)then do(qS)[fL[2]]=qS[fL[0X00005]]~=qS[fL[0X004]];end;else if NL==35 then qS[fL[0x002]]=qS[fL[0x00005]][fL[0X00001]];else(qS)[fL[0X2]]=f(qS[fL[5]]);end;end;end;end;end;else if not(NL>=22)then do if not(NL<0X0014)then if NL~=0X15 then do(qS)[fL[2]]=qS[fL[0x5]]%qS[fL[0X4]];end;else do qS[0X1]=FS[fL[0X6]];end;fL=TG[WS];WS=WS+0X1;qS[1]=qS[0X00001][fL[1]];fL=TG[WS];WS=WS+1;qS[2]=fL[6];fL=TG[WS];WS=WS+0x01;do(qS)[0X003]=FS[fL[6]];end;local a_=(0X1);WS=WS+0X1;WS=WS+1;WS=WS+1;(qS)[a_]=qS[a_](qS[a_+0X1],qS[a_+0X2]);YS=a_;WS=WS+1;WS=WS+1;fL=TG[WS];WS=WS+1;(qS)[2]=fL[6];WS=WS+1;qS[3]=qS[0X0];do fL=TG[WS];end;do WS=WS+1;end;if qS[3]then WS=fL[0X5];end;end;else if NL~=19 then qS[6]=FS[fL[6]];WS=WS+0X1;WS=WS+0X1;fL=TG[WS];WS=WS+0X00001;do if not qS[6]then WS=fL[0X0005];end;end;else local lJ=fL[0X0002];local MJ,YJ,cJ=qS[lJ]();if not(MJ)then else(qS)[lJ+0X1]=YJ;qS[lJ+0x0002]=cJ;do WS=fL[0X5];end;end;end;end;end;else if not(NL>=0X018)then if NL~=0X17 then do if not(fL[6]<qS[fL[4]])then WS=fL[0X00002];end;end;else local PD=0X2;qS[0X02]=qS[PD]..qS[PD+0X1];fL=TG[WS];WS=WS+1;local yD=(0X2);qS[1][fL[0X6]]=qS[0X0002];fL=TG[WS];WS=WS+0X1;do(qS)[0X2]=fL[0X00006];end;fL=TG[WS];WS=WS+1;local iD=qS[2];qS[yD+1]=iD;(qS)[yD]=iD[fL[0X1]];fL=TG[WS];WS=WS+0x1;(qS)[0x0004]=FS[fL[0x6]];WS=WS+0X1;do WS=WS+1;end;fL=TG[WS];WS=WS+1;(qS)[4]=qS[0X4][fL[0x1]];do fL=TG[WS];end;WS=WS+0X1;qS[5]=FS[fL[0X6]];fL=TG[WS];do WS=WS+0X1;end;(qS)[5]=qS[5][fL[0X00001]];WS=WS+1;WS=WS+0x1;fL=TG[WS];WS=WS+0X1;if not(not qS[5])then else WS=fL[0X00005];end;end;else do if NL>=25 then if NL~=26 then qS[fL[0X2]]=FS[fL[0X6]];else local Ma=cG[1];(qS)[0X0000b]=Ma[1][Ma[0X002]];WS=WS+0X001;WS=WS+0X1;fL=TG[WS];WS=WS+1;(qS)[0Xc]=qS[0x0009][fL[0x1]];local qa=0XB;WS=WS+1;qS[qa]=qS[qa](qS[qa+1]);YS=qa;fL=TG[WS];do WS=WS+1;end;if not(not qS[11])then else WS=fL[0X005];end;end;else WS=fL[5];end;end;end;end;end;else do if NL>=9 then if NL<13 then if not(NL<0Xb)then if NL==12 then local Ou=fL[0X02];for Oa=Ou,Ou+(fL[0x0005]-0X01)do qS[Oa]=aS[IG+(Oa-Ou)+1];end;else do qS[fL[0X0002]]=qS[fL[5]];end;end;else do if NL~=10 then(qS)[0X6]=FS[fL[6]];WS=WS+0X01;WS=WS+1;do fL=TG[WS];end;WS=WS+1;(qS)[6]=qS[0x006][fL[1]];WS=WS+0X1;WS=WS+0X1;fL=TG[WS];do WS=WS+1;end;local T2=(qS[6]);local G2=(6);(qS)[G2+0X001]=T2;do qS[G2]=T2[fL[0X01]];end;do WS=WS+0X1;end;G2=0x00006;(qS[G2])(qS[G2+0X0001]);do YS=G2-1;end;fL=TG[WS];WS=WS+1;do WS=fL[0X00005];end;else(qS)[fL[0X02]]={V({},1,fL[0X005])};end;end;end;else if not(NL>=0XF)then if NL~=14 then qS[0x07]=FS[fL[0x6]];fL=TG[WS];WS=WS+0X0001;(qS)[0X8]=fL[0x6];local sh=(0X7);WS=WS+1;(qS[sh])(qS[sh+1]);do YS=sh-1;end;fL=TG[WS];WS=WS+0X1;if qS[0x5]then WS=fL[5];end;else do repeat local hW,pW=iG,qS;if not(#hW>0)then else local PS=({});for qO,wO in l,hW do for We,Be in l,wO do if not(Be[1]==pW and Be[2]>=0)then else local d6=Be[2];if not(not PS[d6])then else(PS)[d6]={pW[d6]};end;do(Be)[1]=PS[d6];end;Be[0X2]=1;end;end;end;end;until true;end;do return false,fL[0x2],YS;end;end;else if NL<16 then repeat local SH,mH=iG,qS;if#SH>0 then local xN=({});for j0,S0 in l,SH do for tS,eS in l,S0 do do if not(eS[0X00001]==mH and eS[2]>=0x000)then else local vI=(eS[0X00002]);if not xN[vI]then xN[vI]={mH[vI]};end;eS[1]=xN[vI];(eS)[0X0002]=0X01;end;end;end;end;end;until true;return;else if NL~=17 then local qn,Un=cG[2],(3);(qS)[0Xa]=qn[1][qn[2]];do WS=WS+1;end;do WS=WS+1;end;fL=TG[WS];local Zn=0x000a;WS=WS+1;qS[11]=qS[0X9][fL[1]];WS=WS+0x001;(qS[Zn])(qS[Zn+0X1]);YS=Zn-1;WS=WS+1;WS=WS+0x001;WS=WS+1;do qn=cG[0X3];end;do qS[10]=qn[0x0001][qn[2]];end;fL=TG[WS];WS=WS+1;qS[11]=qS[9][fL[1]];WS=WS+0X1;do WS=WS+0X1;end;WS=WS+0X1;qS[12]=qS[0];WS=WS+0x1;Zn=10;YS=Zn+Un-0x1;repeat local Ke,xe=iG,(qS);if#Ke>0 then local PW={};do for lf,Mf in l,Ke do do for M7,H7 in l,Mf do if H7[1]==xe and H7[2]>=0 then local UN=H7[0x00002];if not PW[UN]then PW[UN]={xe[UN]};end;H7[0X001]=PW[UN];(H7)[0x2]=1;end;end;end;end;end;end;until true;return true,Zn,Un;else do qS[0X06]=FS[fL[6]];end;do fL=TG[WS];end;WS=WS+1;(qS)[7]=FS[fL[0X6]];fL=TG[WS];do WS=WS+1;end;do qS[7]=qS[7][fL[1]];end;WS=WS+0x1;WS=WS+1;fL=TG[WS];WS=WS+1;local on=(9);(qS)[0X08]=FS[fL[6]];WS=WS+1;local pn=(0X00006);(qS)[0X9]=qS[0X002];WS=WS+1;do qS[10]=qS[0X005];end;WS=WS+1;qS[0x009]=qS[on]..qS[on+1];WS=WS+0X001;local Nn=(0X4);if Nn==0 then else YS=pn+Nn-0X1;end;local Vn=3;local Dn,qn=nil,(nil);if Nn~=0X1 then Dn,qn=Cd(qS[pn](V(qS,pn+1,YS)));else Dn,qn=Cd(qS[pn]());end;do if Vn==0X00001 then YS=pn-1;else if Vn~=0 then Dn=pn+Vn-0x2;do YS=Dn+0X00001;end;else Dn=Dn+pn-1;YS=Dn;end;local YZ=(0);for YE=pn,Dn do YZ=YZ+0x001;qS[YE]=qn[YZ];end;end;end;do WS=WS+0X001;end;WS=WS+1;do WS=WS+1;end;(qS)[0x04]=qS[7];do WS=WS+0X0001;end;(qS)[0x3]=qS[0X6];fL=TG[WS];WS=WS+0X1;qS[6]=FS[fL[0X6]];WS=WS+1;YS=0x6;qS[YS]();YS=YS-0x1;do fL=TG[WS];end;WS=WS+1;if not qS[3]then WS=fL[0X5];end;end;end;end;end;else if NL<0x04 then do if NL>=2 then if NL==3 then local WE=(cG[0X0]);do qS[6]=WE[1][WE[2]];end;fL=TG[WS];local aE=0X006;WS=WS+1;local GE=qS[0X6];(qS)[aE+0X1]=GE;qS[aE]=GE[fL[1]];do WS=WS+1;end;do(qS)[0X8]=qS[4];end;WS=WS+0X1;aE=6;qS[aE]=qS[aE](qS[aE+0x0001],qS[aE+0X002]);do YS=aE;end;WS=WS+0X1;WS=WS+1;do fL=TG[WS];end;WS=WS+0X1;(qS)[0x7]=qS[6][fL[1]];WS=WS+0X001;WS=WS+1;WS=WS+0X1;(qS)[5]=qS[7];fL=TG[WS];do WS=WS+1;end;if not(qS[0X5])then else WS=fL[5];end;else local Ph=(JG[fL[5]]);local Th=Ph[0X0004];local th=(nil);local Xh=(#Th);if not(Xh>0X0)then else th={};for oB=0X001,Xh do local mB=Th[oB];if mB[0X00001]~=0X0000 then do th[oB-0X1]=cG[mB[2]];end;else(th)[oB-0x1]={qS,mB[0X2]};end;end;H(iG,th);end;do(qS)[fL[0X2]]=ed(FS,Ph,th);end;end;else if NL==1 then qS[1]=FS[fL[6]];fL=TG[WS];local QW=0X1;WS=WS+0x001;local OW=qS[0x001];qS[QW+0x1]=OW;(qS)[QW]=OW[fL[0x1]];fL=TG[WS];WS=WS+0x1;(qS)[3]=fL[6];WS=WS+0X1;do QW=1;end;do qS[QW]=qS[QW](qS[QW+1],qS[QW+2]);end;YS=QW;WS=WS+1;WS=WS+0x1;fL=TG[WS];WS=WS+1;do if not(not qS[1])then else WS=fL[5];end;end;else qS[0X00007]=FS[fL[6]];local CL=(4);WS=WS+0X0001;WS=WS+1;do fL=TG[WS];end;local WL=(0X07);WS=WS+1;(qS)[0x8]=qS[0X00006][fL[1]];WS=WS+1;local QL=(0X02);if QL~=0 then do YS=WL+QL-0X1;end;end;local eL,jL=nil,nil;if QL~=0X1 then eL,jL=Cd(qS[WL](V(qS,WL+1,YS)));else eL,jL=Cd(qS[WL]());end;if CL==1 then YS=WL-0X1;else if CL==0 then eL=eL+WL-0X1;YS=eL;else eL=WL+CL-2;do YS=eL+0X01;end;end;local jI=(0);for GZ=WL,eL do jI=jI+0x01;(qS)[GZ]=jL[jI];end;end;WS=WS+1;WS=WS+1;fL=TG[WS];do WS=WS+0X01;end;WL=0X7;local cL=(h(function(...)t();for N2,g2 in...do(t)(true,N2,g2);end;end));cL(qS[WL],qS[WL+0x00001],qS[WL+0X2]);YS=WL;do(qS)[WL]=cL;end;WS=fL[0X5];end;end;end;else if NL>=0X6 then do if not(NL<0X7)then if NL~=0X8 then do if not(qS[fL[0X2]])then else do WS=fL[5];end;end;end;else do qS[0X7]=fL[6];end;WS=WS+0X1;do qS[5]=qS[0X7];end;do fL=TG[WS];end;WS=WS+1;do WS=fL[5];end;end;else local nx=(2);do YS=nx+4-1;end;do(qS)[nx]=qS[nx](V(qS,nx+1,YS));end;YS=nx;WS=WS+1;WS=WS+1;WS=WS+0x1;for xt=3,0X00004 do qS[xt]=nil;end;do fL=TG[WS];end;do WS=WS+0X1;end;qS[0X5]=fL[6];fL=TG[WS];WS=WS+0X1;do WS=fL[0X5];end;end;end;else do if NL==5 then(qS)[fL[0x2]]=qS[fL[0X5]][qS[fL[4]]];else do qS[6]=FS[fL[6]];end;WS=WS+1;WS=WS+0X1;local sX=(0X6);fL=TG[WS];WS=WS+0X1;local JX=(qS[0x006]);qS[sX+0X1]=JX;(qS)[sX]=JX[fL[0X001]];do fL=TG[WS];end;WS=WS+1;(qS)[0x00008]=fL[6];WS=WS+1;sX=6;do qS[sX]=qS[sX](qS[sX+1],qS[sX+0X0002]);end;YS=sX;WS=WS+0x1;WS=WS+0X00001;fL=TG[WS];WS=WS+1;if not(not qS[6])then else do WS=fL[5];end;end;end;end;end;end;end;end;end;end;end);do if not(lS)then do if C(ES)=="string"then if not(M(ES,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if M(ES,'\^\.\-\058%d\043\058\ ')then(E)('\L\117\114\097\ph\ S\cr\ipt\:'..(YG[WS-0X1]or"\(\105\110\116\er\110al\)")..": "..x(ES),0);else E(ES,0);end;else E(ES,0);end;end;else do if ES then if pS==1 then do return qS[MS]();end;else return qS[MS](V(qS,MS+1,YS));end;elseif MS then return V(qS,MS,pS);end;end;end;end;end;else hG=function(...)local ng,yg=0X1,({});local og=(I());local tg={[0X1]=FG,[0X0002]=yg};local Eg=((og==a and SG or og));local Tg,Zg=Cd(...);do Tg=Tg-0x0001;end;for gP=0x0000,Tg do if IG>gP then yg[gP]=Zg[gP+1];else break;end;end;if not OG then do Zg=nil;end;elseif zG then yg[IG]={n=Tg>=IG and Tg-IG+0X01 or 0X0,V(Zg,IG+1,Tg+1)};end;if Eg~=og then(R)(hG,Eg);end;local Hg=0X0;do while true do local x9=TG[ng];ng=ng+1;local r9=x9[3];return(function(Y,X,...)local y=Y[0];local V=y;while true do local Q,O=string.gsub(V,"^(-?%d+)(%d%d%d)","%1,%2");V=Q;if O==0 then break;end;end;return V;end)(yg,cG,...);end;end;end;end;end;end;else if lG==139 then hG=function(...)local BE,wE=1,({});local gE=I();local nE,HE={[0X0002]=wE,[0X1]=FG},(0);local QE,PE=Cd(...);QE=QE-0x00001;do for lY=0X0,QE do if IG>lY then wE[lY]=PE[lY+1];else do break;end;end;end;end;local ME=((gE==a and SG or gE));do if not OG then PE=nil;elseif not(zG)then else wE[IG]={n=QE>=IG and QE-IG+1 or 0X00,V(PE,IG+1,QE+0X1)};end;end;if ME~=gE then R(hG,ME);end;do while true do local V9=(TG[BE]);BE=BE+1;local M9=(V9[0X3]);return(function(q,C,...)local b,X=q[0],q[1];return b:lower():sub(1,#X)==X:lower();end)(wE,cG,...);end;end;end;else hG=function(...)local L6,c6=1,{};local j6=({[0X0002]=c6,[0X1]=FG});local B6=I();local V6,l6=Cd(...);do V6=V6-0x1;end;for Dd=0X0,V6 do do if IG>Dd then do c6[Dd]=l6[Dd+1];end;else break;end;end;end;local b6=(B6==a and SG or B6);local R6=0X0;if not OG then l6=nil;elseif zG then(c6)[IG]={n=V6>=IG and V6-IG+1 or 0X0000,V(l6,IG+0X00001,V6+1)};end;if b6==B6 then else R(hG,b6);end;local F6,r6,H6,g6=A(function()do while true do local i8=(TG[L6]);local o8=(i8[3]);do L6=L6+1;end;if o8<22 then if not(o8>=11)then if o8>=5 then if o8<0X008 then if o8>=0x6 then if o8==0X7 then c6[i8[2]]=b6[i8[6]];else(c6)[i8[2]]=-c6[i8[5]];end;else do c6[0]=b6[i8[0X6]];end;L6=L6+0X0001;L6=L6+1;i8=TG[L6];L6=L6+1;do if c6[0]then L6=i8[5];end;end;end;else if not(o8>=0X00009)then local Wh=(cG[0X0]);c6[0X00004]=Wh[1][Wh[0X2]];L6=L6+1;L6=L6+1;i8=TG[L6];local Jh=(4);do L6=L6+0X1;end;local ah=c6[0X04];(c6)[Jh+0X1]=ah;(c6)[Jh]=ah[i8[0X00001]];L6=L6+0X1;Jh=4;(c6)[Jh]=c6[Jh](c6[Jh+1]);R6=Jh;L6=L6+0X01;L6=L6+0X001;i8=TG[L6];do L6=L6+1;end;do if not(not c6[0X004])then else L6=i8[0x5];end;end;else if o8==0x00a then(c6)[0X1]=b6[i8[0X6]];local kO=0X1;L6=L6+0X1;L6=L6+0X01;do i8=TG[L6];end;L6=L6+0X0001;do c6[0X00002]=i8[0x0006];end;L6=L6+1;c6[kO]=c6[kO](c6[kO+1]);R6=kO;i8=TG[L6];L6=L6+0X1;(c6)[0x2]=c6[1][i8[1]];do i8=TG[L6];end;L6=L6+1;do if not c6[2]then L6=i8[5];end;end;else end;end;end;else if o8<0x02 then if o8==0x0001 then c6[1]=b6[i8[0X6]];L6=L6+1;L6=L6+1;do i8=TG[L6];end;L6=L6+0X0001;if not(c6[0X1])then else L6=i8[5];end;else c6[0X3]=b6[i8[0X6]];L6=L6+1;L6=L6+0X00001;i8=TG[L6];do L6=L6+1;end;(c6)[3]=c6[3][i8[0X001]];do L6=L6+1;end;L6=L6+0X1;do i8=TG[L6];end;do L6=L6+0X001;end;if not(c6[0X00003])then else L6=i8[0X5];end;end;else do if not(o8<0X0003)then if o8==0x00004 then if not(not c6[i8[0x2]])then else L6=i8[5];end;else(c6)[0X0001]=b6[i8[6]];L6=L6+0X00001;L6=L6+0X1;i8=TG[L6];L6=L6+0X001;do c6[0X1]=c6[0X01][i8[0X1]];end;do L6=L6+1;end;L6=L6+1;i8=TG[L6];L6=L6+1;if not c6[0x0001]then do L6=i8[0X5];end;end;end;else do if c6[i8[2]]then do L6=i8[0x005];end;end;end;end;end;end;end;else do if not(o8>=16)then if not(o8>=13)then do if o8==12 then local FF=i8[0X0002];local uF=(h(function(...)(t)();for lU,yU,aU,MU,ZU,gU,FU,EU,CU,IU in...do(t)(true,{lU,yU,aU,MU,ZU,gU,FU,EU,CU,IU});end;end));uF(c6[FF],c6[FF+1],c6[FF+2]);R6=FF;do(c6)[FF]=uF;end;L6=i8[0X5];else c6[0x3]=b6[i8[0X6]];i8=TG[L6];L6=L6+0x1;c6[4]=i8[0X6];i8=TG[L6];L6=L6+0X1;local GJ=(0X3);local kJ=JG[i8[0X005]];local bJ=(nil);local SJ=kJ[4];local cJ=#SJ;do if not(cJ>0)then else bJ={};for jb=0x00001,cJ do local Cb=SJ[jb];if Cb[1]~=0X0000 then bJ[jb-0X1]=cG[Cb[2]];else(bJ)[jb-0X01]={c6,Cb[2]};end;end;H(iG,bJ);end;end;(c6)[5]=ed(b6,kJ,bJ);L6=L6+1;do(c6)[GJ]=c6[GJ](c6[GJ+0X01],c6[GJ+2]);end;R6=GJ;i8=TG[L6];L6=L6+1;c6[3]=c6[3][i8[0X0001]];L6=L6+1;L6=L6+0X1;i8=TG[L6];do L6=L6+0X1;end;(c6)[4]=c6[3][i8[0X1]];do L6=L6+0X1;end;(c6)[0X2]=c6[4];i8=TG[L6];L6=L6+0X1;do if not(c6[0X2])then else L6=i8[5];end;end;end;end;else if o8<0Xe then local cl=(cG[1]);(c6)[0X00003]=cl[0X1][cl[2]];L6=L6+1;L6=L6+1;i8=TG[L6];L6=L6+0x0001;do(c6)[3]=c6[0x3][i8[1]];end;do L6=L6+0x01;end;c6[0x4]=c6[2];L6=L6+1;local Tl=nil;cl=cG[0];(c6)[0X5]=cl[0X1][cl[2]];local Sl=0X00003;do L6=L6+0X001;end;L6=L6+0X1;i8=TG[L6];L6=L6+1;local Gl=JG[i8[0X00005]];local Pl=(Gl[4]);local Ol=(#Pl);do if Ol>0X0 then Tl={};do for Dd=1,Ol do local er=(Pl[Dd]);do if er[0X1]==0X0 then do Tl[Dd-1]={c6,er[2]};end;else Tl[Dd-0X01]=cG[er[0X0002]];end;end;end;end;(H)(iG,Tl);end;end;c6[6]=ed(b6,Gl,Tl);L6=L6+0X1;do R6=Sl+4-1;end;(c6[Sl])(V(c6,Sl+1,R6));R6=Sl-0X001;i8=TG[L6];do L6=L6+0X01;end;c6[0X3]=c6[0x00001][i8[1]];i8=TG[L6];do L6=L6+0x1;end;if c6[3]then L6=i8[5];end;else if o8~=15 then c6[1]=b6[i8[6]];do i8=TG[L6];end;L6=L6+0X1;c6[1]=c6[0x00001][i8[0X1]];do L6=L6+1;end;L6=L6+1;i8=TG[L6];L6=L6+0X0001;if not(not c6[0X1])then else do L6=i8[0X5];end;end;else local C4=(cG[1]);(c6)[0X3]=C4[1][C4[0x0002]];i8=TG[L6];L6=L6+0x00001;c6[3]=c6[0X0003][i8[0X01]];L6=L6+1;local n4=(0X003);do L6=L6+1;end;L6=L6+1;(c6)[0X0004]=c6[0X0002];L6=L6+1;c6[n4]=c6[n4](c6[n4+0X1]);R6=n4;L6=L6+0X01;L6=L6+1;i8=TG[L6];do L6=L6+1;end;if not(not c6[3])then else L6=i8[5];end;end;end;end;else if o8<0X13 then do if not(o8<0X00011)then if o8~=0x12 then local I9=(cG[0x000]);(c6)[0X004]=I9[0X0001][I9[2]];i8=TG[L6];local b9=c6[0X4];do L6=L6+1;end;local Y9=(0x00004);c6[Y9+1]=b9;c6[Y9]=b9[i8[0x00001]];do L6=L6+1;end;Y9=0X00004;(c6[Y9])(c6[Y9+1]);R6=Y9-0x00001;i8=TG[L6];L6=L6+0X0001;(c6)[4]=c6[0X3][i8[0X1]];L6=L6+1;L6=L6+0x1;L6=L6+1;R6=4;(c6[R6])();do R6=R6-0X1;end;L6=L6+0x00001;L6=L6+1;i8=TG[L6];L6=L6+1;L6=i8[0X05];else local Mw=(cG[0]);do c6[0X03]=Mw[0X1][Mw[0X2]];end;local iw=(0X3);L6=L6+0x1;L6=L6+1;do i8=TG[L6];end;L6=L6+1;local Zw=c6[3];(c6)[iw+1]=Zw;(c6)[iw]=Zw[i8[0X1]];L6=L6+0x1;iw=3;c6[iw](c6[iw+0X00001]);R6=iw-1;i8=TG[L6];do L6=L6+1;end;do L6=i8[5];end;end;else local Tz=(cG[0]);c6[0X2]=Tz[1][Tz[2]];i8=TG[L6];L6=L6+0X0001;local Cz,pz=c6[0X0002],(2);do(c6)[pz+0X1]=Cz;end;(c6)[pz]=Cz[i8[0X1]];do L6=L6+0X1;end;pz=0x2;do c6[pz]=c6[pz](c6[pz+0X1]);end;R6=pz;i8=TG[L6];L6=L6+0x00001;do if c6[0X2]then do L6=i8[5];end;end;end;end;end;else if not(o8<20)then if o8~=21 then c6[0x0002]=b6[i8[0X6]];do i8=TG[L6];end;L6=L6+0X1;c6[0x3]=i8[0X6];L6=L6+0X1;local r4=(2);(c6)[r4]=c6[r4](c6[r4+0X1]);do R6=r4;end;L6=L6+1;L6=L6+0x1;local P4=(cG[0X1]);do L6=L6+0X1;end;(c6)[0X003]=P4[1][P4[2]];i8=TG[L6];do L6=L6+1;end;c6[3]=c6[3][i8[1]];L6=L6+1;c6[4]=c6[0x2];L6=L6+1;r4=3;do c6[r4]=c6[r4](c6[r4+0X1]);end;R6=r4;do i8=TG[L6];end;do L6=L6+0X001;end;do if not c6[0x03]then L6=i8[5];end;end;else do(c6)[2]=b6[i8[0X0006]];end;L6=L6+1;L6=L6+0X1;i8=TG[L6];do L6=L6+1;end;do(c6)[3]=i8[6];end;do i8=TG[L6];end;local gi=0X00002;do L6=L6+0X1;end;c6[0x0004]=i8[6];i8=TG[L6];L6=L6+0X01;(c6)[0X5]=i8[0X006];L6=L6+0X1;R6=gi+0X04-1;(c6[gi])(V(c6,gi+0X1,R6));R6=gi-0X1;do i8=TG[L6];end;L6=L6+1;do L6=i8[5];end;end;else L6=i8[5];end;end;end;end;end;else if o8>=33 then if not(o8>=39)then if not(o8<36)then if o8<37 then c6[0x2]=true;i8=TG[L6];L6=L6+1;do b6[i8[0X06]]=c6[2];end;i8=TG[L6];do L6=L6+0X0001;end;do L6=i8[5];end;else if o8==0x26 then if c6[i8[0X005]]~=i8[1]then L6=i8[2];end;else(c6)[0X001]=b6[i8[0X6]];i8=TG[L6];do L6=L6+1;end;(c6)[1]=c6[1][i8[1]];i8=TG[L6];L6=L6+0X1;(c6)[2]=i8[6];do L6=L6+1;end;local SE=0X0001;(c6)[SE]=c6[SE](c6[SE+1]);do R6=SE;end;i8=TG[L6];do L6=L6+0X1;end;do if not(not c6[1])then else L6=i8[5];end;end;end;end;else do if not(o8>=0X000022)then do c6[3]=b6[i8[0X06]];end;L6=L6+1;L6=L6+1;do i8=TG[L6];end;local UG=(3);L6=L6+0X001;(c6)[0X00004]=i8[6];L6=L6+0X01;(c6[UG])(c6[UG+1]);do R6=UG-1;end;i8=TG[L6];L6=L6+1;L6=i8[0X00005];else if o8~=35 then do(c6)[i8[2]]={V({},0x001,i8[5])};end;else local R4=(cG[0]);(c6)[3]=R4[1][R4[2]];L6=L6+0X1;L6=L6+1;do i8=TG[L6];end;local G4=3;L6=L6+1;local t4=(c6[0X3]);do(c6)[G4+1]=t4;end;(c6)[G4]=t4[i8[1]];do L6=L6+0X1;end;G4=3;c6[G4](c6[G4+0X1]);R6=G4-1;i8=TG[L6];L6=L6+1;c6[0X003]=b6[i8[0X6]];L6=L6+0x1;L6=L6+0X1;i8=TG[L6];L6=L6+0X1;(c6)[0X3]=c6[0X3][i8[0x01]];do L6=L6+1;end;L6=L6+1;i8=TG[L6];do L6=L6+0x00001;end;c6[4]=i8[0X06];L6=L6+0X001;do G4=0x3;end;c6[G4](c6[G4+1]);R6=G4-0X1;do i8=TG[L6];end;do L6=L6+0X1;end;do c6[0X3]=b6[i8[0X6]];end;i8=TG[L6];L6=L6+1;if not c6[3]then do L6=i8[5];end;end;end;end;end;end;else do if not(o8<0X2A)then if not(o8>=0X002b)then c6[0X00002]=b6[i8[6]];do L6=L6+1;end;L6=L6+0X1;do i8=TG[L6];end;L6=L6+0X0001;(c6)[0x3]=i8[0X6];i8=TG[L6];do L6=L6+0X1;end;c6[4]=i8[6];do L6=L6+0X1;end;local x0=0X2;c6[x0](c6[x0+0X1],c6[x0+2]);R6=x0-0X1;L6=L6+0X0001;do L6=L6+1;end;i8=TG[L6];do L6=L6+1;end;L6=i8[0X5];else do if o8~=44 then c6[i8[2]]=c6[i8[0X00005]][i8[1]];else local JC=JG[i8[5]];local LC=(JC[0X00004]);local BC,wC=#LC,nil;if not(BC>0X0)then else wC={};for R_=0X00001,BC do local j_=LC[R_];if j_[0x00001]==0X0 then(wC)[R_-0X1]={c6,j_[0X2]};else(wC)[R_-0X01]=cG[j_[2]];end;end;(H)(iG,wC);end;c6[i8[0X2]]=ed(b6,JC,wC);end;end;end;else if o8>=0X00028 then do if o8~=41 then repeat local GF,WF=iG,(c6);do if#GF>0 then local Az=({});do for Yr,Nr in l,GF do do for ln,Mn in l,Nr do if not(Mn[0x1]==WF and Mn[0x2]>=0X0000)then else local DP=Mn[0X002];do if not Az[DP]then(Az)[DP]={WF[DP]};end;end;(Mn)[1]=Az[DP];do Mn[0X2]=1;end;end;end;end;end;end;end;end;until true;return;else(c6)[1]=b6[i8[6]];L6=L6+0X1;R6=1;do c6[R6]=c6[R6]();end;i8=TG[L6];L6=L6+1;do if c6[1]<i8[1]then L6=i8[2];end;end;end;end;else(c6)[i8[0X2]]=i8[6];end;end;end;end;else if o8<27 then do if not(o8>=0x0018)then if o8~=23 then do c6[0X00002]=b6[i8[6]];end;L6=L6+1;local qN=c6[0x2];L6=L6+1;i8=TG[L6];L6=L6+1;local YN=(2);c6[YN+0X01]=qN;c6[YN]=qN[i8[1]];do i8=TG[L6];end;L6=L6+1;(c6)[4]=i8[6];L6=L6+1;YN=0x0002;do(c6)[YN]=c6[YN](c6[YN+1],c6[YN+0X2]);end;R6=YN;i8=TG[L6];L6=L6+0X00001;if not(c6[0X2])then else L6=i8[0X0005];end;else(c6)[i8[0X002]]=c6[i8[5]]~=c6[i8[0X4]];end;else if o8<0x000019 then do c6[4]=b6[i8[0X006]];end;do L6=L6+0X0001;end;R6=0X4;do c6[R6]=c6[R6]();end;do i8=TG[L6];end;do L6=L6+1;end;if not c6[4]then do L6=i8[0X5];end;end;else if o8==26 then(c6)[0]=b6[i8[0X6]];i8=TG[L6];L6=L6+1;c6[1]=i8[0X6];L6=L6+1;local fW=(0x0);do c6[fW]=c6[fW](c6[fW+1]);end;R6=fW;L6=L6+1;L6=L6+1;i8=TG[L6];L6=L6+1;c6[1]=c6[0][i8[1]];L6=L6+1;L6=L6+1;do i8=TG[L6];end;L6=L6+1;if not(c6[0X001])then else L6=i8[0X5];end;else c6[i8[0X2]]=c6[i8[5]];end;end;end;end;else if o8>=30 then if not(o8<31)then do if o8~=32 then do for yA=i8[2],i8[5]do(c6)[yA]=nil;end;end;else local s5=(2);local e5=(cG[0X00000]);c6[0x002]=e5[1][e5[2]];L6=L6+0x001;L6=L6+0X0001;i8=TG[L6];L6=L6+0X1;local R5=(c6[2]);c6[s5+1]=R5;(c6)[s5]=R5[i8[1]];L6=L6+0X001;s5=0x2;(c6[s5])(c6[s5+1]);R6=s5-1;L6=L6+1;L6=L6+1;i8=TG[L6];L6=L6+1;(c6)[0X2]=b6[i8[0X6]];L6=L6+1;do L6=L6+1;end;do i8=TG[L6];end;L6=L6+0x001;if not c6[0X02]then do L6=i8[0x5];end;end;end;end;else local Wn=cG[0X1];do(c6)[0x0003]=Wn[0X001][Wn[2]];end;L6=L6+1;L6=L6+0x1;i8=TG[L6];do L6=L6+1;end;c6[0X03]=c6[3][i8[1]];L6=L6+1;do L6=L6+0x1;end;L6=L6+1;(c6)[4]=c6[0X2];L6=L6+0x1;Wn=cG[0];(c6)[5]=Wn[1][Wn[0X002]];do L6=L6+0X1;end;local kn=(3);L6=L6+0X1;L6=L6+0X01;(c6[kn])(c6[kn+1],c6[kn+2]);do R6=kn-0X00001;end;L6=L6+0X1;L6=L6+1;do i8=TG[L6];end;L6=L6+1;L6=i8[0X05];end;else if o8>=0X1c then do if o8~=0X01D then c6[0x00002]=c6[0x01][i8[1]];L6=L6+1;L6=L6+0x001;i8=TG[L6];do L6=L6+0x1;end;do if c6[0x2]then L6=i8[5];end;end;else(c6)[0X2]=b6[i8[0X6]];do i8=TG[L6];end;local Nw=(0x2);L6=L6+0X1;c6[3]=i8[0x6];L6=L6+0X01;(c6)[Nw]=c6[Nw](c6[Nw+1]);R6=Nw;do L6=L6+0X01;end;L6=L6+1;i8=TG[L6];L6=L6+1;if not(c6[2])then else do L6=i8[0x005];end;end;end;end;else(c6)[1]=true;i8=TG[L6];L6=L6+0X001;do b6[i8[6]]=c6[0X1];end;do L6=L6+0X1;end;repeat local pB,HB=iG,c6;do if not(#pB>0)then else local Ov={};for CN,KN in l,pB do for QT,NT in l,KN do if not(NT[1]==HB and NT[2]>=0X0)then else local Ef=(NT[0x0002]);do if not Ov[Ef]then(Ov)[Ef]={HB[Ef]};end;end;(NT)[0x1]=Ov[Ef];NT[0X002]=0X0001;end;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end;end);if not(F6)then if C(r6)~='\115t\114i\110g'then E(r6,0);else if M(r6,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if M(r6,"^.-:%d+: ")then E("Luraph Script:"..(YG[L6-0X1]or'(\105nt\e\114\110\097l\)')..": "..x(r6),0X0);else(E)(r6,0X00000);end;end;else if r6 then if g6~=0X0001 then return c6[H6](V(c6,H6+0X1,R6));else return c6[H6]();end;elseif not(H6)then else return V(c6,H6,g6);end;end;end;end;end;end;end;else if lG<120 then do if not(lG<115)then if lG>=117 then if lG<0X76 then hG=function(...)local Ua={};local Sa=(0X1);local Oa={[0X0002]=Ua,[0X1]=FG};local ra=I();local ia=((ra==a and SG or ra));local ga,Za=Cd(...);do ga=ga-1;end;for Jc=0X00000,ga do if IG>Jc then do Ua[Jc]=Za[Jc+1];end;else break;end;end;local Fa=(0X0);if not OG then Za=nil;elseif not(zG)then else Ua[IG]={n=ga>=IG and ga-IG+1 or 0,V(Za,IG+1,ga+0x1)};end;if ia~=ra then(R)(hG,ia);end;local ua,Ja,ca,qa=A(function()do while true do local mi=TG[Sa];local Li=mi[0X3];do Sa=Sa+1;end;do if Li>=11 then if not(Li>=0X10)then do if Li>=0x000d then do if not(Li>=14)then Ua[2]=ia[mi[0X6]];Sa=Sa+1;local s2=2;(Ua)[3]=Ua[1];do Sa=Sa+0X1;end;Ua[s2]=Ua[s2](Ua[s2+1]);Fa=s2;do mi=TG[Sa];end;Sa=Sa+0X00001;do if Ua[2]then Sa=mi[0x00005];end;end;else if Li==0X000f then Sa=mi[5];else local nb=(mi[0X0002]);local Ab,Db=Ua[nb]();if not(Ab)then else do Sa=mi[0X5];end;(Ua)[nb+0X00003]=Db;end;end;end;end;else if Li==0xC then local S3,J3=0X1,(Ua[0X0]);do(Ua)[S3+1]=J3;end;Ua[S3]=J3[mi[1]];do mi=TG[Sa];end;do Sa=Sa+0X1;end;(Ua)[3]=mi[0X6];do Sa=Sa+0X1;end;S3=0x01;do Ua[S3]=Ua[S3](Ua[S3+0x1],Ua[S3+0X02]);end;do Fa=S3;end;Sa=Sa+0X1;Sa=Sa+0x1;mi=TG[Sa];Sa=Sa+0x1;Ua[0X1]=Ua[0X1][mi[0X1]];do mi=TG[Sa];end;Sa=Sa+1;if not Ua[0X1]then do Sa=mi[5];end;end;else do Ua[mi[0X2]]=ia[mi[6]];end;end;end;end;else if Li>=19 then do if Li<0x014 then repeat local et,jt=iG,Ua;if#et>0 then local Wp={};for pq,iq in l,et do do for sp,np in l,iq do do if not(np[1]==jt and np[2]>=0)then else local z2=(np[0x2]);if not Wp[z2]then do Wp[z2]={jt[z2]};end;end;np[0x0001]=Wp[z2];np[2]=1;end;end;end;end;end;end;until true;local dE=(mi[0x2]);return false,dE,dE+mi[0X5]-2;else do if Li~=21 then do(Ua)[mi[0x0002]]=mi[6];end;else local sa=2;local ya=Ua[1];Ua[sa+1]=ya;(Ua)[sa]=ya[mi[0X01]];mi=TG[Sa];do Sa=Sa+1;end;(Ua)[0X4]=mi[0X006];Sa=Sa+1;(Ua)[5]=#Ua[1];mi=TG[Sa];do Sa=Sa+0X1;end;Ua[5]=Ua[5]-mi[1];Sa=Sa+0x1;do sa=2;end;Fa=sa+4-0X01;Ua[sa]=Ua[sa](V(Ua,sa+0X1,Fa));Fa=sa;Sa=Sa+0X0001;Sa=Sa+0x00001;do Sa=Sa+1;end;do Ua[1]=Ua[2];end;do mi=TG[Sa];end;Sa=Sa+0X1;sa=0X2;do ya=Ua[0x00001];end;Ua[sa+1]=ya;Ua[sa]=ya[mi[1]];do mi=TG[Sa];end;do Sa=Sa+0x001;end;Ua[0X4]=mi[6];do Sa=Sa+1;end;sa=0X00002;Ua[sa]=Ua[sa](Ua[sa+1],Ua[sa+2]);Fa=sa;Sa=Sa+0x01;Sa=Sa+1;mi=TG[Sa];do Sa=Sa+1;end;if not(not Ua[2])then else do Sa=mi[0X5];end;end;end;end;end;end;else if Li>=17 then if Li==18 then Ua[mi[0X2]]=Ua[mi[0X005]];else Ua[mi[2]]=Ua[mi[0X5]][Ua[mi[0X4]]];end;else do repeat local iF,uF=iG,Ua;if#iF>0 then local vw={};for db,bb in l,iF do do for zk,sk in l,bb do if not(sk[1]==uF and sk[0X2]>=0X0)then else local fc=sk[2];if not(not vw[fc])then else(vw)[fc]={uF[fc]};end;(sk)[0X1]=vw[fc];do sk[2]=1;end;end;end;end;end;end;until true;end;local se=(mi[0X2]);return false,se,se;end;end;end;else do if Li<0X5 then if Li<2 then if Li~=0X01 then local MF=(mi[2]);local WF=Ua[MF];local cF=(Ua[MF+1]);local GF=(Ua[MF+2]);Ua[MF]=h(function()do for J8=WF,cF,GF do(t)(true,J8);end;end;end);do Sa=mi[0X05];end;else Ua[mi[2]]={V({},0X1,mi[5])};end;else if not(Li>=0X003)then else if Li==0x4 then do repeat local eJ,mJ=iG,Ua;if not(#eJ>0X000)then else local A9={};for FA,nA in l,eJ do for uF,fF in l,nA do do if not(fF[1]==mJ and fF[2]>=0x000)then else local I6=fF[2];if not A9[I6]then A9[I6]={mJ[I6]};end;do fF[0x1]=A9[I6];end;(fF)[0X2]=0X001;end;end;end;end;end;until true;end;do return;end;else Ua[mi[2]]=Ua[mi[5]]==Ua[mi[4]];end;end;end;else if not(Li<0X8)then if Li>=9 then if Li==10 then local pB=(JG[mi[5]]);local VB,lB=pB[4],nil;local uB=(#VB);do if uB>0X0 then lB={};for Y3=0x1,uB do local q3=VB[Y3];if q3[0X1]~=0X00000 then(lB)[Y3-1]=cG[q3[2]];else lB[Y3-0X001]={Ua,q3[2]};end;end;H(iG,lB);end;end;Ua[mi[2]]=ed(ia,pB,lB);else(Ua)[mi[0X00002]]=Ua[mi[5]]+Ua[mi[4]];end;else for hx=mi[0X02],mi[0X5]do(Ua)[hx]=nil;end;end;else if not(Li<0x0006)then if Li~=0X7 then do(Ua[mi[2]])[Ua[mi[5]]]=Ua[mi[4]];end;else(Ua)[mi[0X2]]=N(Ua[mi[0X00005]],Ua[mi[0X0004]]);end;else local QI,RI=0X2,Ua[0x1];do(Ua)[QI+1]=RI;end;Ua[QI]=RI[mi[0X001]];do mi=TG[Sa];end;Sa=Sa+0X1;do(Ua)[4]=mi[6];end;Sa=Sa+1;(Ua)[5]=#Ua[1];mi=TG[Sa];Sa=Sa+0X01;(Ua)[0x5]=Ua[0x005]-mi[1];Sa=Sa+1;QI=2;Fa=QI+0X004-0X00001;Ua[QI]=Ua[QI](V(Ua,QI+0x1,Fa));do Fa=QI;end;Sa=Sa+0X1;(Ua)[1]=Ua[2];mi=TG[Sa];Sa=Sa+1;Sa=mi[5];end;end;end;end;end;end;end;end;end);if not(ua)then if C(Ja)~="\115t\114\in\g"then E(Ja,0);else do if M(Ja,'\097tte\109\p\116\ \116\o y\i\101\l\d\ \097\099\114\o\s\s \m\et\097\meth\111\d\047\067%\045\c\097\108\l \098\111un\d\097\114\y')then return coroutine.yield();end;end;do if not(M(Ja,"^.-:%d+: "))then(E)(Ja,0x0);else(E)("Luraph Script:"..(YG[Sa-0X01]or"(internal)")..'\:\032'..x(Ja),0);end;end;end;else if Ja then if qa~=0X0001 then do return Ua[ca](V(Ua,ca+1,Fa));end;else return Ua[ca]();end;elseif ca then return V(Ua,ca,qa);end;end;end;else if lG~=119 then do hG=function(...)local q_,C_=0X1,{};local s_=(I());local L_,U_=Cd(...);local v_=((s_==a and SG or s_));local k_={[0X0002]=C_,[0X1]=FG};L_=L_-1;do for vi=0X00000,L_ do if not(IG>vi)then break;else C_[vi]=U_[vi+1];end;end;end;if not OG then U_=nil;elseif zG then do C_[IG]={n=L_>=IG and L_-IG+1 or 0X0,V(U_,IG+1,L_+1)};end;end;do if v_~=s_ then R(hG,v_);end;end;local F_=(0x000);while true do local Of=TG[q_];local Uf=(Of[3]);do q_=q_+0x0001;end;return(function(Y,i,...)for j,W in pairs(Backpack:GetChildren())do if W:IsA("Tool")and W.ToolTip==""and not W:FindFirstChildOfClass("RemoteFunction")then return true;end;end;end)(C_,cG,...);end;end;end;else do hG=function(...)local Zw,ww=0X00,({});local aw={[0X0002]=ww,[0X1]=FG};local Qw=I();local Nw,Pw=Cd(...);local pw=((Qw==a and SG or Qw));do Nw=Nw-0X00001;end;local qw=(1);for c1=0,Nw do if IG>c1 then do ww[c1]=Pw[c1+1];end;else do break;end;end;end;if not OG then Pw=nil;elseif not(zG)then else ww[IG]={n=Nw>=IG and Nw-IG+0X1 or 0,V(Pw,IG+1,Nw+0x00001)};end;if pw==Qw then else(R)(hG,pw);end;while true do local Ax=TG[qw];local Sx=(Ax[0X3]);qw=qw+0x1;do return(function(m,B,...)local w=m[0];if not w then return;end;local k="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";return table.concat(CustomCrypt((w:gsub(".",function(z)local O,E="",z:byte();for M=8,1,-1.0 do O=O..(E%2^M-E%2^(M-1)>0 and"1"or"0");end;return O;end).."0000"):gsub("%d%d%d?%d?%d?%d?",function(d)if#d<6 then return"";end;local o=0;for G=1,6 do o=o+(d:sub(G,G)=="1"and 2^(6-G)or 0);end;return k:sub(o+1,o+1);end)..({"","==","="})[#w%3+1]),"!");end)(ww,cG,...);end;end;end;end;end;end;else if lG~=116 then hG=function(...)local w1=(1);local A1=({});local T1=I();local U1=(0);local k1=({[0X1]=FG,[0X0002]=A1});local X1,C1=Cd(...);X1=X1-1;local D1=((T1==a and SG or T1));for S5=0,X1 do if IG>S5 then(A1)[S5]=C1[S5+1];else break;end;end;if not OG then C1=nil;elseif not(zG)then else do(A1)[IG]={n=X1>=IG and X1-IG+0x00001 or 0,V(C1,IG+1,X1+0x1)};end;end;if D1==T1 then else(R)(hG,D1);end;local m1,J1,a1,O1=A(function()while true do local m6=TG[w1];local a6=(m6[3]);w1=w1+0x1;if a6<0x0e then if not(a6>=7)then if a6>=0X3 then if not(a6>=0X5)then if a6~=4 then(A1)[0X04]=false;w1=w1+1;(A1)[3]=A1[0X004];m6=TG[w1];w1=w1+1;w1=m6[5];else do A1[m6[0X2]]=m6[0X6];end;end;else do if a6==0X6 then A1[m6[2]]=true;else local Ev=4;local dv=A1[1];A1[Ev+0X1]=dv;do A1[Ev]=dv[m6[1]];end;m6=TG[w1];w1=w1+1;(A1)[6]=m6[6];do w1=w1+0x1;end;(A1)[7]=#A1[1];m6=TG[w1];w1=w1+1;do(A1)[0X7]=A1[7]-m6[1];end;w1=w1+1;Ev=0X4;U1=Ev+0X4-0x1;(A1)[Ev]=A1[Ev](V(A1,Ev+1,U1));U1=Ev;w1=w1+0X1;do w1=w1+1;end;w1=w1+0X1;(A1)[0X1]=A1[4];m6=TG[w1];do w1=w1+0X01;end;do w1=m6[0X5];end;end;end;end;else if not(a6<0X1)then do if a6~=0X00002 then local cJ=(JG[m6[0x5]]);local HJ=cJ[0X4];local bJ=nil;local lJ=(#HJ);if not(lJ>0)then else bJ={};for kz=1,lJ do local Vz=(HJ[kz]);if Vz[0x0001]==0 then(bJ)[kz-0X1]={A1,Vz[0X0002]};else do(bJ)[kz-0x0001]=cG[Vz[0X2]];end;end;end;H(iG,bJ);end;do(A1)[m6[2]]=ed(D1,cJ,bJ);end;else local cR=(m6[2]);local VR=(m6[4]-0X1)*0X32;local hR=(A1[cR]);do for JW=0X1,m6[0X0005]do hR[VR+JW]=A1[cR+JW];end;end;end;end;else do A1[m6[2]]=w(A1[m6[5]],A1[m6[4]]);end;end;end;else do if not(a6>=0X00A)then if a6<0X8 then(A1)[0]=D1[m6[6]];w1=w1+1;w1=w1+0X1;m6=TG[w1];w1=w1+1;(A1)[0]=A1[0X0][m6[0X1]];w1=w1+0X1;w1=w1+0X1;do m6=TG[w1];end;w1=w1+0X0001;do A1[0]=A1[0x0][m6[0X1]];end;w1=w1+1;w1=w1+1;do m6=TG[w1];end;w1=w1+0X0001;(A1)[0X0]=A1[0X0][m6[0X0001]];do w1=w1+0X001;end;w1=w1+1;m6=TG[w1];do w1=w1+1;end;(A1)[0X0]=A1[0X000][m6[1]];m6=TG[w1];w1=w1+1;local Qk=(0X0);A1[0]=A1[0][m6[0X1]];w1=w1+0X1;do w1=w1+1;end;m6=TG[w1];do w1=w1+0X1;end;A1[0X0]=A1[0][m6[1]];w1=w1+1;w1=w1+0X1;do m6=TG[w1];end;w1=w1+0X1;(A1)[0]=A1[0][m6[1]];w1=w1+1;do w1=w1+1;end;m6=TG[w1];w1=w1+0X001;A1[0]=A1[0][m6[0X1]];m6=TG[w1];w1=w1+1;do(A1)[0]=A1[0X0][m6[1]];end;do m6=TG[w1];end;w1=w1+1;local lk=(A1[0]);(A1)[Qk+0x0001]=lk;(A1)[Qk]=lk[m6[1]];m6=TG[w1];w1=w1+1;(A1)[2]=m6[6];w1=w1+0x001;do Qk=0;end;do A1[Qk]=A1[Qk](A1[Qk+1],A1[Qk+0X2]);end;U1=Qk;w1=w1+0X1;w1=w1+1;m6=TG[w1];w1=w1+0X1;A1[0X1]=m6[0x06];w1=w1+0X1;do A1[2]=#A1[0];end;w1=w1+0X1;do A1[0X3]=true;end;w1=w1+1;A1[0X004]=A1[0][A1[2]];m6=TG[w1];w1=w1+1;Qk=0x04;lk=A1[4];(A1)[Qk+0x0001]=lk;A1[Qk]=lk[m6[1]];m6=TG[w1];do w1=w1+0X1;end;(A1)[0x6]=m6[0X6];w1=w1+1;Qk=4;(A1)[Qk]=A1[Qk](A1[Qk+0X1],A1[Qk+2]);U1=Qk;m6=TG[w1];w1=w1+1;if not(not A1[4])then else do w1=m6[5];end;end;else if a6==9 then w1=m6[5];else(A1)[m6[0X00002]]=A1[m6[5]];end;end;else if a6>=0X0000c then if a6~=0X00D then local hq=(m6[0X2]);local Yq,Jq=A1[hq]();if not(Yq)then else w1=m6[5];do A1[hq+0X00003]=Jq;end;end;else do repeat local Fx,zx=iG,(A1);if not(#Fx>0)then else local Em={};for j_,i_ in l,Fx do do for Io,fo in l,i_ do if not(fo[0x1]==zx and fo[2]>=0X0)then else local MZ=(fo[2]);if not Em[MZ]then Em[MZ]={zx[MZ]};end;fo[0X00001]=Em[MZ];(fo)[2]=1;end;end;end;end;end;until true;end;local aq=(m6[2]);do return false,aq,aq;end;end;else if a6==11 then A1[0X9]=A1[0X0001];m6=TG[w1];w1=w1+0x1;(A1)[0X00a]=m6[6];do w1=w1+1;end;local CN=0X009;(A1)[9]=A1[CN]..A1[CN+0X001];w1=w1+1;(A1)[0x1]=A1[0X9];m6=TG[w1];w1=w1+1;w1=m6[5];else A1[4]=D1[m6[0X006]];m6=TG[w1];w1=w1+0X1;A1[4]=A1[4][m6[0X1]];local Xf=(0X4);do w1=w1+0X01;end;A1[0X5]=A1[0];do w1=w1+1;end;A1[6]=#A1[0];w1=w1+1;(A1[Xf])(A1[Xf+0X1],A1[Xf+0X00002]);do U1=Xf-1;end;local pf=4;m6=TG[w1];w1=w1+1;(A1)[0X4]=m6[0x6];w1=w1+0X00001;A1[5]=#A1[0];m6=TG[w1];w1=w1+0X01;do A1[0x6]=m6[6];end;m6=TG[w1];w1=w1+0x01;do Xf=A1[pf];end;local zf=A1[pf+1];local lf=(A1[pf+0x2]);do A1[pf]=h(function()for uZ=Xf,zf,lf do(t)(true,uZ);end;end);end;w1=m6[5];end;end;end;end;end;else do if not(a6>=0X15)then do if not(a6>=0X011)then if a6>=15 then do if a6~=0X000010 then A1[0X4]=D1[m6[0X6]];m6=TG[w1];w1=w1+1;A1[4]=A1[4][m6[1]];w1=w1+1;w1=w1+0X01;local bA=(0x0004);w1=w1+1;do A1[5]=A1[0X0];end;m6=TG[w1];w1=w1+1;A1[6]=m6[6];w1=w1+1;(A1[bA])(A1[bA+0x1],A1[bA+0X0002]);U1=bA-0X00001;do m6=TG[w1];end;do w1=w1+0X1;end;(A1)[4]=D1[m6[0X00006]];m6=TG[w1];w1=w1+0X1;do A1[0X5]=A1[0][m6[0x001]];end;do w1=w1+0X01;end;w1=w1+0x1;w1=w1+1;bA=4;A1[bA]=A1[bA](A1[bA+0x01]);U1=bA;w1=w1+1;w1=w1+0X1;m6=TG[w1];w1=w1+0X1;do if not(not A1[0x4])then else w1=m6[5];end;end;else do A1[m6[2]]=D1[m6[0x6]];end;end;end;else do repeat local WX,DX=iG,(A1);if not(#WX>0)then else local Mi={};for DN,jN in l,WX do for mZ,EZ in l,jN do if not(EZ[0X0001]==DX and EZ[2]>=0)then else local kA=EZ[2];if not Mi[kA]then Mi[kA]={DX[kA]};end;do(EZ)[1]=Mi[kA];end;EZ[0X2]=0X1;end;end;end;end;until true;end;return;end;else if a6<19 then do if a6~=18 then(A1)[m6[2]]=A1[m6[0x5]]-A1[m6[0X4]];else do if not(not A1[m6[2]])then else w1=m6[5];end;end;end;end;else do if a6==0X14 then A1[m6[0X0002]]={V({},0x1,m6[0x5])};else(A1)[m6[0x2]]=A1[m6[0X005]]%A1[m6[4]];end;end;end;end;end;else if a6<0X19 then if not(a6>=0X00017)then if a6==0X00016 then do(A1)[8]=A1[0][A1[7]];end;w1=w1+1;local Ro=0x009;do(A1)[0x9]=A1[1];end;w1=w1+0X1;A1[10]=A1[0X8];w1=w1+1;A1[0X9]=A1[Ro]..A1[Ro+0X0001];do w1=w1+1;end;do A1[1]=A1[9];end;w1=w1+1;A1[9]=#A1[0x0];m6=TG[w1];w1=w1+1;if A1[0X009]==A1[7]then w1=m6[2];end;else local ek,Nk=m6[2],(m6[5]);if Nk~=0 then U1=ek+Nk-0X1;end;local Kk=(m6[0X4]);local fk,dk=nil,(nil);if Nk==0x1 then fk,dk=Cd(A1[ek]());else fk,dk=Cd(A1[ek](V(A1,ek+0X00001,U1)));end;if Kk~=0x01 then do if Kk~=0x0 then do fk=ek+Kk-2;end;U1=fk+0X00001;else fk=fk+ek-0X1;U1=fk;end;end;local Dd=0X0;for t7=ek,fk do do Dd=Dd+0X01;end;A1[t7]=dk[Dd];end;else U1=ek-1;end;end;else if a6~=24 then do A1[m6[2]]=A1[m6[0X5]]==A1[m6[4]];end;else for Dd=m6[0X2],m6[5]do A1[Dd]=nil;end;end;end;else do if a6>=0X1b then do if a6==28 then do(A1)[0]=D1[m6[0X6]];end;w1=w1+1;w1=w1+1;do m6=TG[w1];end;w1=w1+1;A1[0X0]=A1[0x000][m6[1]];w1=w1+1;w1=w1+1;do m6=TG[w1];end;w1=w1+0X1;A1[0]=A1[0][m6[0X0001]];w1=w1+0X1;w1=w1+0X1;m6=TG[w1];w1=w1+0X1;A1[0X0]=A1[0][m6[0x1]];m6=TG[w1];do w1=w1+1;end;(A1)[0]=A1[0X000][m6[1]];do w1=w1+0X00001;end;w1=w1+1;do m6=TG[w1];end;w1=w1+0x001;do(A1)[0]=A1[0X0][m6[0x001]];end;m6=TG[w1];w1=w1+0X1;(A1)[0X000]=A1[0][m6[0X1]];do w1=w1+1;end;w1=w1+1;do m6=TG[w1];end;w1=w1+0X1;if not A1[0X0]then w1=m6[0X00005];end;else A1[m6[2]][A1[m6[5]]]=A1[m6[0X4]];end;end;else if a6~=26 then(A1)[4]=D1[m6[0X06]];do m6=TG[w1];end;local JO=(0X4);w1=w1+0x1;(A1)[4]=A1[0X4][m6[0x1]];w1=w1+0X1;w1=w1+1;w1=w1+1;do(A1)[0x5]=A1[0];end;m6=TG[w1];w1=w1+0X1;do(A1)[0X00006]=m6[6];end;do w1=w1+1;end;A1[JO](A1[JO+0X1],A1[JO+0x2]);U1=JO-1;do m6=TG[w1];end;w1=w1+0X1;w1=m6[0X5];else end;end;end;end;end;end;end;end;end);if m1 then if J1 then do if O1~=0X00001 then do return A1[a1](V(A1,a1+0X001,U1));end;else return A1[a1]();end;end;elseif not(a1)then else return V(A1,a1,O1);end;else if C(J1)~='\115t\114\105n\g'then(E)(J1,0X000);else if not(M(J1,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if M(J1,"^.-:%d+: ")then E("Luraph Script:"..(YG[w1-1]or'\(\int\erna\l)')..": "..x(J1),0x0);else E(J1,0X00000);end;end;end;end;else hG=function(...)local bq,Mq=0X1,({});local zq=I();local yq=({[0X1]=FG,[0X0002]=Mq});local vq,Wq=Cd(...);vq=vq-1;for KQ=0,vq do if not(IG>KQ)then do break;end;else(Mq)[KQ]=Wq[KQ+1];end;end;if not OG then do Wq=nil;end;elseif not(zG)then else do(Mq)[IG]={n=vq>=IG and vq-IG+0X1 or 0,V(Wq,IG+1,vq+0X0001)};end;end;local kq=((zq==a and SG or zq));local Aq=0;if kq~=zq then(R)(hG,kq);end;local jq,fq,wq,Nq=A(function()while true do local Tx=(TG[bq]);local Ux=(Tx[0X003]);bq=bq+0x00001;if Ux>=9 then if not(Ux<0x0E)then do if Ux>=0X0010 then if not(Ux>=17)then else do if Ux~=0X12 then(Mq)[0X0]=kq[Tx[6]];local CI=(0);bq=bq+0X01;bq=bq+1;Tx=TG[bq];bq=bq+1;do Mq[1]=Tx[0x6];end;bq=bq+0X1;(Mq)[CI]=Mq[CI](Mq[CI+0x1]);Aq=CI;Tx=TG[bq];bq=bq+1;if not Mq[0X0]then bq=Tx[5];end;else Mq[Tx[0X00002]]=Tx[0X6];end;end;end;else if Ux~=0X0f then Mq[Tx[2]]=Mq[Tx[5]]>Mq[Tx[0X04]];else local op=(JG[Tx[0x5]]);local ep=(op[4]);local Dp,qp=#ep,(nil);do if Dp>0 then do qp={};end;for Kz=0x1,Dp do local Fz=(ep[Kz]);if Fz[0X1]==0X0000 then(qp)[Kz-1]={Mq,Fz[0x002]};else do qp[Kz-1]=cG[Fz[2]];end;end;end;H(iG,qp);end;end;do(Mq)[Tx[2]]=ed(kq,op,qp);end;end;end;end;else if not(Ux>=11)then if Ux~=10 then do(Mq)[0X0]=kq[Tx[6]];end;bq=bq+1;bq=bq+0x1;bq=bq+1;do Aq=0X00;end;Mq[Aq]=Mq[Aq]();bq=bq+1;bq=bq+1;Tx=TG[bq];bq=bq+1;if Mq[0X00]then bq=Tx[0X5];end;else Mq[Tx[2]]=kq[Tx[0X6]];end;else if Ux<0XC then do(Mq)[Tx[0X0002]]=Mq[Tx[0X5]]/Mq[Tx[0X004]];end;else if Ux~=0xD then do Mq[Tx[2]]=Mq[Tx[5]][Mq[Tx[0X4]]];end;else local UA=(Tx[2]);local xA,BA=Mq[UA]();if xA then for pZ=0X1,Tx[0X4]do do(Mq)[UA+pZ]=BA[pZ];end;end;bq=Tx[0X5];end;end;end;end;end;else if Ux<4 then do if not(Ux<2)then do if Ux==3 then if not(Mq[Tx[0x2]])then else bq=Tx[0x5];end;else do bq=Tx[0X005];end;end;end;else if Ux~=1 then Mq[0]=kq[Tx[0X6]];bq=bq+0X0001;bq=bq+0x1;Tx=TG[bq];do bq=bq+0x0001;end;do Mq[0]=Mq[0X000][Tx[0X0001]];end;Tx=TG[bq];bq=bq+1;if not(not Mq[0X000])then else bq=Tx[0x05];end;else Mq[0X00000]=kq[Tx[0x6]];Tx=TG[bq];bq=bq+0X1;(Mq)[0x0]=Mq[0X0][Tx[1]];do Tx=TG[bq];end;do bq=bq+1;end;if not(not Mq[0X0])then else bq=Tx[0x5];end;end;end;end;else do if Ux>=0X6 then do if not(Ux>=0x0007)then Mq[0]=kq[Tx[0X6]];do bq=bq+0X00001;end;bq=bq+0X1;Tx=TG[bq];do bq=bq+1;end;Mq[1]=kq[Tx[0x06]];Tx=TG[bq];bq=bq+1;Mq[1]=Mq[1][Tx[1]];bq=bq+0X1;local No=(0);(Mq[No])(Mq[No+0X1]);Aq=No-1;Tx=TG[bq];bq=bq+1;bq=Tx[0x005];else if Ux~=8 then Mq[Tx[0X02]][Mq[Tx[5]]]=Mq[Tx[0x004]];else for Og=Tx[0X00002],Tx[5]do do Mq[Og]=nil;end;end;end;end;end;else do if Ux==5 then(Mq)[Tx[2]]={V({},0x0001,Tx[0X5])};else repeat local H4,w4=iG,(Mq);do if#H4>0x000 then local VK={};for dy,ky in l,H4 do do for tT,GT in l,ky do if not(GT[1]==w4 and GT[0x2]>=0X0)then else local qX=(GT[2]);if not VK[qX]then(VK)[qX]={w4[qX]};end;(GT)[1]=VK[qX];(GT)[0X02]=1;end;end;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end;end);if not(jq)then do if C(fq)~='\strin\g'then(E)(fq,0X0);else if not(M(fq,'a\116t\em\112t\032\116o y\105e\108d\032\097\099r\o\s\s\ m\101t\097\m\e\116\104\o\d\047\C%\045\c\097\l\l\032\098\111\117nda\114\y'))then else do return coroutine.yield();end;end;if not(M(fq,"^.\-\:\%\d\043:\ "))then(E)(fq,0);else(E)('L\117\114a\p\h\ \083c\114\i\pt\:'..(YG[bq-0x1]or"\040\105n\116\e\114na\108)").."\: "..x(fq),0);end;end;end;else if fq then if Nq~=1 then return Mq[wq](V(Mq,wq+0X1,Aq));else do return Mq[wq]();end;end;elseif wq then do return V(Mq,wq,Nq);end;end;end;end;end;end;else if lG<113 then if lG==112 then hG=function(...)local Ca={};local Xa=1;local Va=({[0X1]=FG,[0X0002]=Ca});local ea=I();local pa,Ra=Cd(...);local ya=0;pa=pa-1;local Ta=(ea==a and SG or ea);for At=0X0,pa do if IG>At then do Ca[At]=Ra[At+1];end;else break;end;end;if not OG then Ra=nil;elseif not(zG)then else Ca[IG]={n=pa>=IG and pa-IG+0x1 or 0X00,V(Ra,IG+0X0001,pa+1)};end;if Ta~=ea then R(hG,Ta);end;local Da,Oa,na,Ga=A(function()while true do local IN=TG[Xa];local WN=(IN[3]);Xa=Xa+0x1;if WN>=9 then if WN>=0X00e then if WN<16 then if WN==15 then Ca[0X0]={};do IN=TG[Xa];end;do Xa=Xa+1;end;Ca[1]=Ta[IN[0x06]];do IN=TG[Xa];end;Xa=Xa+0X01;do Ca[1]=Ca[0X001][IN[1]];end;do Xa=Xa+1;end;do Xa=Xa+0X1;end;do IN=TG[Xa];end;Xa=Xa+0X1;(Ca)[1]=Ca[1][IN[1]];IN=TG[Xa];do Xa=Xa+1;end;Ca[0X002]=Ta[IN[6]];Xa=Xa+1;Xa=Xa+0x1;IN=TG[Xa];Xa=Xa+1;Ca[2]=Ca[2][IN[1]];do Xa=Xa+1;end;Xa=Xa+1;IN=TG[Xa];Xa=Xa+1;(Ca)[0x2]=Ca[2][IN[1]];do Xa=Xa+1;end;do Xa=Xa+0X01;end;IN=TG[Xa];Xa=Xa+1;do Ca[0X3]=Ca[0X2][IN[1]];end;Xa=Xa+1;local r5=(0X5);Xa=Xa+0X1;IN=TG[Xa];Xa=Xa+1;(Ca)[0x004]=Ta[IN[6]];Xa=Xa+1;Xa=Xa+1;IN=TG[Xa];do Xa=Xa+0X1;end;local T5=0X2;local x5=(Ca[1]);Ca[r5+0x01]=x5;do(Ca)[r5]=x5[IN[1]];end;Xa=Xa+0X1;r5=5;local A5=(0);do if T5==0X0 then else ya=r5+T5-1;end;end;local I5,a5=nil,(nil);if T5~=0x0001 then do I5,a5=Cd(Ca[r5](V(Ca,r5+0X1,ya)));end;else do I5,a5=Cd(Ca[r5]());end;end;if A5~=0X00001 then do if A5~=0 then I5=r5+A5-0X2;ya=I5+1;else do I5=I5+r5-0X01;end;ya=I5;end;end;local MB=0x0;for Cw=r5,I5 do MB=MB+0X1;Ca[Cw]=a5[MB];end;else ya=r5-0X1;end;do Xa=Xa+0x1;end;Xa=Xa+0X1;do Xa=Xa+0x1;end;r5=4;T5=0;do A5=0X4;end;if T5~=0x00000 then ya=r5+T5-1;end;do I5,a5=nil;end;if T5~=0X1 then I5,a5=Cd(Ca[r5](V(Ca,r5+1,ya)));else I5,a5=Cd(Ca[r5]());end;if A5~=1 then if A5~=0 then I5=r5+A5-2;do ya=I5+1;end;else I5=I5+r5-0X0001;ya=I5;end;local yx=(0X0);for JZ=r5,I5 do yx=yx+1;(Ca)[JZ]=a5[yx];end;else ya=r5-0x0001;end;do Xa=Xa+0x1;end;Xa=Xa+1;IN=TG[Xa];Xa=Xa+1;do r5=4;end;local S5=h(function(...)t();do for Cn,zn in...do(t)(true,Cn,zn);end;end;end);S5(Ca[r5],Ca[r5+1],Ca[r5+0X2]);ya=r5;do Ca[r5]=S5;end;Xa=IN[0X5];else(Ca)[0X004]=IN[0X6];IN=TG[Xa];Xa=Xa+0X1;local oo=(JG[IN[0X5]]);local ho=(nil);local zo=(oo[4]);local so=#zo;if not(so>0)then else do ho={};end;do for fT=0X01,so do local PT=zo[fT];if PT[0x001]~=0X00000 then do(ho)[fT-0X0001]=cG[PT[2]];end;else do(ho)[fT-1]={Ca,PT[0X2]};end;end;end;end;(H)(iG,ho);end;Ca[0X00005]=ed(Ta,oo,ho);Xa=Xa+1;Ca[0][Ca[0X4]]=Ca[5];Xa=Xa+1;local Qo=4;Ca[0X4]=Ca[0X0];Xa=Xa+1;repeat local XX,lX=iG,(Ca);if not(#XX>0X0000)then else local z0={};for TS,VS in l,XX do for xY,AY in l,VS do if AY[0x01]==lX and AY[0X02]>=0 then local QG=(AY[0X2]);if not z0[QG]then(z0)[QG]={lX[QG]};end;do(AY)[1]=z0[QG];end;do AY[2]=0x1;end;end;end;end;end;until true;return false,Qo,Qo;end;else do if not(WN<17)then if WN==18 then local G1=(JG[IN[0x0005]]);local T1=(G1[0X00004]);local g1=(nil);local F1=(#T1);do if F1>0x000 then g1={};for VX=1,F1 do local RX=T1[VX];if RX[1]~=0 then(g1)[VX-1]=cG[RX[0X002]];else(g1)[VX-1]={Ca,RX[0X02]};end;end;H(iG,g1);end;end;Ca[IN[0X2]]=ed(Ta,G1,g1);else do(Ca)[0x0007]=Ta[IN[0X06]];end;IN=TG[Xa];do Xa=Xa+0X1;end;(Ca)[7]=Ca[7][IN[0X001]];IN=TG[Xa];do Xa=Xa+0X1;end;Ca[8]=Ca[0x0006][IN[0x1]];Xa=Xa+1;Xa=Xa+1;do IN=TG[Xa];end;do Xa=Xa+1;end;do(Ca)[0x8]=Ca[0x00008][IN[0x1]];end;Xa=Xa+0x01;Xa=Xa+1;IN=TG[Xa];Xa=Xa+1;Ca[9]=IN[0x006];do IN=TG[Xa];end;Xa=Xa+0X01;Ca[0XA]=Ca[6][IN[1]];Xa=Xa+0x1;local mI=(7);Xa=Xa+0X1;IN=TG[Xa];Xa=Xa+0X1;do Ca[0xA]=Ca[10][IN[0X01]];end;Xa=Xa+0X1;do ya=mI+4-1;end;do Ca[mI]=Ca[mI](V(Ca,mI+1,ya));end;do ya=mI;end;IN=TG[Xa];Xa=Xa+1;do Ca[8]=Ta[IN[0X6]];end;IN=TG[Xa];Xa=Xa+0X01;(Ca)[0X8]=Ca[8][IN[0X1]];Xa=Xa+0X1;Xa=Xa+0x0001;IN=TG[Xa];do Xa=Xa+1;end;(Ca)[0X9]=Ta[IN[6]];do IN=TG[Xa];end;do Xa=Xa+0x0001;end;(Ca)[9]=Ca[9][IN[1]];Xa=Xa+1;Xa=Xa+0X0001;IN=TG[Xa];Xa=Xa+1;(Ca)[9]=Ca[0X09][IN[0X01]];do Xa=Xa+1;end;Xa=Xa+1;IN=TG[Xa];do Xa=Xa+0X0001;end;(Ca)[0X9]=Ca[0X009][IN[0X1]];Xa=Xa+0X1;Xa=Xa+0X1;do IN=TG[Xa];end;Xa=Xa+1;(Ca)[10]=IN[0X6];IN=TG[Xa];Xa=Xa+1;Ca[11]=Ta[IN[6]];Xa=Xa+0X1;Xa=Xa+1;IN=TG[Xa];Xa=Xa+1;do Ca[0X00b]=Ca[11][IN[0X1]];end;Xa=Xa+1;do Xa=Xa+1;end;IN=TG[Xa];Xa=Xa+1;Ca[0xB]=Ca[11][IN[0x1]];Xa=Xa+1;do Xa=Xa+1;end;IN=TG[Xa];Xa=Xa+0X001;(Ca)[11]=Ca[11][IN[1]];do Xa=Xa+1;end;Xa=Xa+0x1;Xa=Xa+0x1;mI=0X8;ya=mI+4-0X1;(Ca)[mI]=Ca[mI](V(Ca,mI+1,ya));ya=mI;Xa=Xa+1;Ca[7]=Ca[7]-Ca[0x8];IN=TG[Xa];Xa=Xa+0X1;do(Ca)[7]=Ca[7][IN[0x1]];end;IN=TG[Xa];Xa=Xa+0X01;if not(not(Ca[0X7]<=IN[1]))then else Xa=IN[0X2];end;end;else Ca[IN[2]]=w(Ca[IN[0x05]],Ca[IN[0x4]]);end;end;end;else do if not(WN<11)then do if not(WN>=0X0000c)then(Ca)[0X00007]=Ca[0X06][IN[0X1]];IN=TG[Xa];local Ck=(0X7);Xa=Xa+1;local bk=(Ca[7]);do Ca[Ck+0x1]=bk;end;Ca[Ck]=bk[IN[0X01]];do IN=TG[Xa];end;Xa=Xa+0X1;do(Ca)[9]=IN[0X06];end;IN=TG[Xa];Xa=Xa+0X1;(Ca)[10]=IN[6];Xa=Xa+0X01;do Ck=7;end;ya=Ck+0X4-1;Ca[Ck]=Ca[Ck](V(Ca,Ck+1,ya));ya=Ck;IN=TG[Xa];Xa=Xa+1;if Ca[7]==IN[1]then else Xa=IN[2];end;else if WN~=13 then for i3=IN[0X2],IN[0X5]do(Ca)[i3]=nil;end;else local tI=(IN[0x00002]);local xI,TI,XI=Ca[tI]();if xI then(Ca)[tI+1]=TI;Ca[tI+2]=XI;Xa=IN[0X5];end;end;end;end;else if WN==0xa then(Ca)[IN[2]]=Ca[IN[0x005]]%Ca[IN[0x4]];else(Ca)[IN[0X2]]=Ca[IN[0X5]][Ca[IN[4]]];end;end;end;end;else if WN>=4 then if WN>=0X6 then do if WN>=7 then if WN==0x8 then local Ck=(0x00008);local ok=(Ca[0X00006]);do Ca[Ck+0X0001]=ok;end;Ca[Ck]=ok[IN[1]];IN=TG[Xa];Xa=Xa+1;(Ca)[0xa]=IN[0X6];Xa=Xa+0X1;do Ck=0X8;end;do Ca[Ck]=Ca[Ck](Ca[Ck+0X001],Ca[Ck+0X2]);end;ya=Ck;do IN=TG[Xa];end;Xa=Xa+1;Ca[0X8]=Ca[8][IN[0X00001]];do Xa=Xa+1;end;Xa=Xa+1;do IN=TG[Xa];end;Xa=Xa+0X001;do Ca[0X0][IN[0x6]]=Ca[0x008];end;IN=TG[Xa];Xa=Xa+1;Ck=8;ok=Ca[0X6];(Ca)[Ck+1]=ok;(Ca)[Ck]=ok[IN[0X001]];IN=TG[Xa];do Xa=Xa+1;end;do(Ca)[10]=IN[0X0006];end;Xa=Xa+0x1;Ck=8;Ca[Ck]=Ca[Ck](Ca[Ck+1],Ca[Ck+0X2]);do ya=Ck;end;do IN=TG[Xa];end;Xa=Xa+0X1;(Ca[0X0])[IN[6]]=Ca[0X08];do Xa=Xa+0X1;end;Ca[8]=Ca[6];IN=TG[Xa];do Xa=Xa+0X1;end;Ca[0X000][IN[6]]=Ca[8];do IN=TG[Xa];end;Xa=Xa+0X1;Ca[0X0][IN[6]]=IN[1];IN=TG[Xa];do Xa=Xa+1;end;Xa=IN[0x5];else do Ca[IN[0x00002]]={V({},0X1,IN[5])};end;end;else end;end;else do if WN==0X05 then Ca[IN[2]]=Ca[IN[5]];else repeat local kB,mB=iG,Ca;if not(#kB>0)then else local Kc=({});for AH,MH in l,kB do for ZR,WR in l,MH do do if not(WR[1]==mB and WR[2]>=0)then else local p3=WR[0X2];if not Kc[p3]then do(Kc)[p3]={mB[p3]};end;end;(WR)[0X1]=Kc[p3];WR[2]=1;end;end;end;end;end;until true;local Fm=IN[0X2];return false,Fm,Fm+IN[5]-0x2;end;end;end;else if not(WN<0X00002)then if WN~=0X003 then repeat local LT,XT=iG,Ca;if not(#LT>0X000)then else local WP=({});for Yk,gk in l,LT do for kL,LL in l,gk do if not(LL[0X1]==XT and LL[0X0002]>=0)then else local kj=(LL[0x2]);if not WP[kj]then WP[kj]={XT[kj]};end;LL[1]=WP[kj];LL[0X2]=0X1;end;end;end;end;until true;do return;end;else(Ca)[IN[0X0002]]=Ta[IN[0X6]];end;else if WN~=1 then Xa=IN[0X5];else do(Ca)[IN[2]]=IN[0X6];end;end;end;end;end;end;end);if Da then if Oa then if Ga~=1 then do return Ca[na](V(Ca,na+1,ya));end;else return Ca[na]();end;elseif na then return V(Ca,na,Ga);end;else if C(Oa)=="string"then if not(M(Oa,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(M(Oa,'\^\.\-:\%\d\043\058\032'))then(E)(Oa,0X000);else(E)("Luraph Script:"..(YG[Xa-0X00001]or"(internal)")..'\:\ '..x(Oa),0X0000);end;end;else(E)(Oa,0);end;end;end;else hG=function(...)local fI,nI=0X001,{};local vI=(0);local MI=(I());local zI,ZI=Cd(...);local RI={[0X1]=FG,[0X0002]=nI};local tI=(MI==a and SG or MI);zI=zI-1;for nR=0,zI do do if not(IG>nR)then break;else(nI)[nR]=ZI[nR+1];end;end;end;if not OG then do ZI=nil;end;elseif zG then(nI)[IG]={n=zI>=IG and zI-IG+0X1 or 0,V(ZI,IG+1,zI+1)};end;if tI==MI then else R(hG,tI);end;local sI,yI,WI,jI=A(function()while true do local Li=(TG[fI]);local oi=(Li[0X03]);do fI=fI+1;end;if not(oi>=0X8)then if not(oi<4)then do if not(oi>=0X6)then if oi~=5 then local Nu=Li[0X00002];local gu,Zu=nI[Nu]();if gu then fI=Li[5];nI[Nu+3]=Zu;end;else(nI)[Li[2]]=Li[0X6];end;else if oi==0X7 then(nI)[0X0]=tI[Li[6]];fI=fI+0X1;fI=fI+0X1;fI=fI+1;vI=0;(nI)[vI]=nI[vI]();fI=fI+0X1;do nI[0]=not nI[0];end;else local a7=JG[Li[0X5]];local U7,P7=a7[4],nil;local m7=#U7;if m7>0 then P7={};do for ED=0x0001,m7 do local QD=(U7[ED]);do if QD[1]~=0 then(P7)[ED-1]=cG[QD[0X2]];else P7[ED-0X1]={nI,QD[0X2]};end;end;end;end;(H)(iG,P7);end;nI[Li[2]]=ed(tI,a7,P7);end;end;end;else do if not(oi<0X2)then if oi~=3 then do repeat local Oi,hi=iG,nI;if#Oi>0x000 then local Qt={};for Pr,Or in l,Oi do for NH,lH in l,Or do if not(lH[0X1]==hi and lH[0x00002]>=0X0)then else local x8=(lH[0X2]);if not Qt[x8]then Qt[x8]={hi[x8]};end;do(lH)[1]=Qt[x8];end;lH[0x0002]=0x0001;end;end;end;end;until true;end;return;else nI[Li[2]]=nI[Li[0X5]][Li[0x01]];end;else if oi==1 then do fI=Li[5];end;else do nI[Li[2]]=nI[Li[0X5]][nI[Li[0X4]]];end;end;end;end;end;else if oi>=0xC then if not(oi<14)then if oi<15 then do(nI)[Li[0X002]]=tI[Li[0X6]];end;else if oi~=0x10 then(nI)[Li[0X2]]={V({},1,Li[5])};else(nI)[Li[0x002]]=nI[Li[5]]/nI[Li[0x00004]];end;end;else if oi==0X000d then else(nI)[Li[2]]=nI[Li[5]]%nI[Li[4]];end;end;else do if not(oi<10)then if oi==11 then repeat local Ge,ze=iG,nI;do if#Ge>0 then local SB=({});do for ij,dj in l,Ge do for vV,oV in l,dj do do if oV[1]==ze and oV[2]>=0X0 then local FH=oV[2];if not(not SB[FH])then else SB[FH]={ze[FH]};end;oV[1]=SB[FH];do(oV)[0X02]=1;end;end;end;end;end;end;end;end;until true;local uG=(Li[0X2]);return false,uG,uG;else do(nI)[0]=tI[Li[6]];end;fI=fI+1;fI=fI+0X00001;Li=TG[fI];fI=fI+1;do nI[0]=nI[0x00000][Li[0X1]];end;fI=fI+0X0001;nI[0X0]=not nI[0X0];do Li=TG[fI];end;fI=fI+0X1;do if not nI[0x0]then fI=Li[5];end;end;end;else if oi==9 then if not(not nI[Li[2]])then else fI=Li[0X5];end;else if not(nI[Li[5]]<=nI[Li[0x4]])then do fI=Li[2];end;end;end;end;end;end;end;end;end);if not(sI)then do if C(yI)~="string"then E(yI,0x0000);else if M(yI,'\097\116t\em\112\116\ \116\o\ \yi\e\l\d \097\c\114\111\s\s\ \109e\116\097\m\et\ho\d/C\037-\ca\108\l\032\098o\117\110d\097r\121')then return coroutine.yield();end;if not(M(yI,'\^.\045:\037d\+:\032'))then E(yI,0);else(E)("Luraph Script:"..(YG[fI-0x001]or"\(i\110\116\101rn\097\l)")..": "..x(yI),0);end;end;end;else do if yI then if jI==1 then do return nI[WI]();end;else do return nI[WI](V(nI,WI+0X00001,vI));end;end;elseif WI then return V(nI,WI,jI);end;end;end;end;end;else do if lG==0X72 then hG=function(...)local t6,R6=1,0x0;local Z6={};local r6=(I());local Q6,B6=Cd(...);local K6=({[0X0002]=Z6,[0X1]=FG});Q6=Q6-1;local j6=(r6==a and SG or r6);for wr=0x0,Q6 do if IG>wr then(Z6)[wr]=B6[wr+1];else break;end;end;if not OG then B6=nil;elseif zG then Z6[IG]={n=Q6>=IG and Q6-IG+0X0001 or 0X0,V(B6,IG+0x001,Q6+0X001)};end;if j6~=r6 then R(hG,j6);end;while true do local Xk=TG[t6];local zk=(Xk[3]);t6=t6+0X1;return(function(z,c,...)local P=z[0];return Client.Backpack:FindFirstChild(P);end)(Z6,cG,...);end;end;else do hG=function(...)local XD,hD=0X0001,({});local HD=(0);local wD=I();local YD=((wD==a and SG or wD));local ED,MD=Cd(...);local AD={[0X1]=FG,[0X0002]=hD};ED=ED-0x1;for Kv=0X00,ED do if not(IG>Kv)then break;else(hD)[Kv]=MD[Kv+1];end;end;do if not OG then MD=nil;elseif zG then hD[IG]={n=ED>=IG and ED-IG+1 or 0X00,V(MD,IG+0X1,ED+0X001)};end;end;do if YD==wD then else R(hG,YD);end;end;local dD,FD,tD,aD=A(function()while true do local PG=TG[XD];local mG=(PG[0X0003]);do XD=XD+1;end;if not(mG>=0X7)then if mG>=3 then if mG<5 then if mG==0X4 then do hD[0]=YD[PG[6]];end;XD=XD+0x1;XD=XD+1;do PG=TG[XD];end;local FB=(0X0);do XD=XD+0X1;end;local PB=hD[0X0000];(hD)[FB+1]=PB;do(hD)[FB]=PB[PG[0X01]];end;PG=TG[XD];XD=XD+1;(hD)[0x2]=PG[0x006];XD=XD+1;FB=0x0;(hD)[FB]=hD[FB](hD[FB+1],hD[FB+0x00002]);do HD=FB;end;do PG=TG[XD];end;XD=XD+0X1;hD[0x01]=YD[PG[0X6]];do XD=XD+1;end;XD=XD+0x01;PG=TG[XD];do XD=XD+0X1;end;(hD)[1]=hD[1][PG[0X1]];do XD=XD+0X1;end;do XD=XD+0X1;end;do PG=TG[XD];end;local kB=(JG[PG[0x5]]);XD=XD+1;local jB,KB=nil,kB[0x0004];local xB=#KB;do if xB>0 then jB={};do for Hf=0X1,xB do local tf=KB[Hf];if tf[1]~=0X00000 then(jB)[Hf-0X1]=cG[tf[2]];else jB[Hf-0X1]={hD,tf[2]};end;end;end;(H)(iG,jB);end;end;do hD[0X02]=ed(YD,kB,jB);end;XD=XD+0x1;do FB=1;end;(hD[FB])(hD[FB+0x01]);HD=FB-0X01;XD=XD+1;do repeat local CM,FM=iG,(hD);if not(#CM>0)then else local pw=({});for I9,N9 in l,CM do for xg,Jg in l,N9 do if Jg[0X1]==FM and Jg[0X2]>=0 then local sE=(Jg[2]);if not pw[sE]then pw[sE]={FM[sE]};end;Jg[0X1]=pw[sE];Jg[2]=0X1;end;end;end;end;until true;end;do return;end;else if not(hD[PG[0X005]]<hD[PG[4]])then else XD=PG[2];end;end;else if mG~=0X6 then(hD)[PG[0x2]]=PG[0X6];else hD[PG[2]]=YD[PG[0X06]];end;end;else if not(mG<0X1)then if mG~=0X02 then else hD[PG[2]]=#hD[PG[0X5]];end;else local Nz=JG[PG[5]];local fz,gz=Nz[4],(nil);local Qz=(#fz);do if not(Qz>0x0)then else do gz={};end;do for TY=0X1,Qz do local SY=fz[TY];if SY[1]~=0 then do(gz)[TY-1]=cG[SY[2]];end;else gz[TY-1]={hD,SY[2]};end;end;end;H(iG,gz);end;end;do hD[PG[2]]=ed(YD,Nz,gz);end;end;end;else if not(mG>=10)then if not(mG<0X008)then if mG~=9 then(hD)[PG[2]]=hD[PG[0X00005]]~=hD[PG[4]];else local E0=(PG[0X2]);local j0=(hD[PG[0X5]]);hD[E0+1]=j0;(hD)[E0]=j0[PG[0X1]];end;else do(hD)[PG[0X02]]={V({},1,PG[0x5])};end;end;else if not(mG>=0X00c)then do if mG==0Xb then XD=PG[0X5];else(hD)[PG[2]]=true;end;end;else if mG~=13 then hD[PG[0X00002]][hD[PG[5]]]=hD[PG[0x00004]];else do hD[PG[0x2]]=PG[0x6];end;end;end;end;end;end;end);if dD then do if FD then do if aD==1 then do return hD[tD]();end;else return hD[tD](V(hD,tD+0X1,HD));end;end;elseif tD then return V(hD,tD,aD);end;end;else if C(FD)~="\115\116\114\i\110g"then(E)(FD,0X00000);else if not(M(FD,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(M(FD,"^.-:%d+: "))then E(FD,0);else E("Luraph Script:"..(YG[XD-1]or'\(int\erna\108)')..':\ '..x(FD),0);end;end;end;end;end;end;end;end;end;end;else do if not(lG>=0X7C)then do if not(lG>=122)then if lG==0X79 then hG=function(...)local Bo,Eo=0X1,{};local qo=(I());local Zo,Yo=0X00000,{[0X1]=FG,[0X0002]=Eo};local Ko,ro=Cd(...);Ko=Ko-1;local co=(qo==a and SG or qo);for EU=0,Ko do if not(IG>EU)then do break;end;else Eo[EU]=ro[EU+1];end;end;if not OG then do ro=nil;end;elseif not(zG)then else do(Eo)[IG]={n=Ko>=IG and Ko-IG+1 or 0X0,V(ro,IG+1,Ko+0x001)};end;end;do if co==qo then else(R)(hG,co);end;end;local Io,Uo,Jo,lo=A(function()do while true do local y0=(TG[Bo]);local F0=(y0[0X03]);Bo=Bo+1;if F0<13 then do if F0<0X6 then if F0>=0X3 then if not(F0>=0X4)then Eo[y0[0X00002]]=true;else do if F0==5 then Eo[y0[0X2]]=Eo[y0[0X5]]>=Eo[y0[4]];else(Eo)[0]=co[y0[0X6]];do y0=TG[Bo];end;Bo=Bo+0X01;(Eo)[0]=Eo[0][y0[1]];Bo=Bo+1;Bo=Bo+0X1;y0=TG[Bo];Bo=Bo+1;if not(not Eo[0X0000])then else Bo=y0[5];end;end;end;end;else if not(F0<0X001)then if F0~=2 then do Eo[y0[2]]=Eo[y0[0X5]];end;else local n7=(JG[y0[5]]);local D7=(n7[4]);local r7,G7=#D7,nil;if r7>0X00000 then G7={};for B1=1,r7 do local W1=D7[B1];if W1[1]~=0 then do G7[B1-1]=cG[W1[0x2]];end;else(G7)[B1-1]={Eo,W1[2]};end;end;H(iG,G7);end;Eo[y0[0X00002]]=ed(co,n7,G7);end;else(Eo)[0x0]=co[y0[0x6]];y0=TG[Bo];Bo=Bo+0x00001;local Fh=(0x0);(Eo)[0]=Eo[0X00][y0[1]];Bo=Bo+1;Bo=Bo+1;do y0=TG[Bo];end;Bo=Bo+1;(Eo)[0X0001]=y0[0X6];Bo=Bo+0x0001;(Eo)[Fh]=Eo[Fh](Eo[Fh+1]);Zo=Fh;Bo=Bo+1;Bo=Bo+1;y0=TG[Bo];Bo=Bo+1;if not Eo[0]then Bo=y0[0X5];end;end;end;else if not(F0>=9)then if not(F0>=7)then Bo=y0[5];else if F0==8 then(Eo)[y0[2]]=y0[6];else(Eo)[y0[0x2]]=b(Eo[y0[5]],Eo[y0[4]]);end;end;else if not(F0>=11)then do if F0==0Xa then do(Eo)[0X0]=co[y0[6]];end;do y0=TG[Bo];end;do Bo=Bo+1;end;Eo[0]=Eo[0][y0[1]];do y0=TG[Bo];end;Bo=Bo+0X0001;if not(not Eo[0x0])then else Bo=y0[5];end;else local u0=cG[0X0];do(Eo)[0x00000]=u0[1][u0[0x2]];end;Bo=Bo+0X01;do Bo=Bo+1;end;local l0=(0);y0=TG[Bo];Bo=Bo+0X1;local P0=(Eo[0]);(Eo)[l0+0x1]=P0;(Eo)[l0]=P0[y0[1]];Bo=Bo+1;l0=0;Eo[l0](Eo[l0+1]);Zo=l0-0X1;Bo=Bo+1;do repeat local F2,I2=iG,(Eo);if#F2>0 then local lm=({});for W5,u5 in l,F2 do do for ED,KD in l,u5 do if KD[1]==I2 and KD[0x2]>=0X0 then local oB=(KD[2]);if not(not lm[oB])then else(lm)[oB]={I2[oB]};end;(KD)[1]=lm[oB];KD[2]=1;end;end;end;end;end;until true;end;do return;end;end;end;else if F0==12 then(Eo)[0X0]=co[y0[0X00006]];y0=TG[Bo];local hs,Ps=JG[y0[5]],(0);local Vs=hs[4];Bo=Bo+1;local Os,zs=nil,(#Vs);if zs>0x0 then Os={};do for MB=0X1,zs do local eB=Vs[MB];do if eB[1]==0X0 then(Os)[MB-0X1]={Eo,eB[0X00002]};else do(Os)[MB-0x00001]=cG[eB[2]];end;end;end;end;end;(H)(iG,Os);end;Eo[1]=ed(co,hs,Os);Bo=Bo+0X001;Eo[Ps](Eo[Ps+0X0001]);Zo=Ps-0X1;do Bo=Bo+1;end;Bo=Bo+1;y0=TG[Bo];Bo=Bo+1;(Eo)[0]=co[y0[0X6]];Bo=Bo+1;do Bo=Bo+0X1;end;y0=TG[Bo];Bo=Bo+0X1;do Eo[0X1]=y0[6];end;Bo=Bo+1;Ps=0;(Eo)[Ps]=Eo[Ps](Eo[Ps+0X1]);Zo=Ps;do y0=TG[Bo];end;Bo=Bo+1;do if not Eo[0]then Bo=y0[5];end;end;else Eo[y0[0X2]]=Eo[y0[0x5]]*Eo[y0[4]];end;end;end;end;end;else do if not(F0<0X13)then do if not(F0>=0X000016)then do if not(F0<0X14)then if F0~=21 then do Yo[y0[0X5]]=Eo[y0[0X00002]];end;else Eo[y0[2]]={V({},0X00001,y0[5])};end;else repeat local pU,iU=iG,(Eo);if not(#pU>0)then else local r8={};for c6,Y6 in l,pU do for vS,gS in l,Y6 do do if not(gS[0x1]==iU and gS[0X02]>=0)then else local W8=(gS[0X002]);if not r8[W8]then(r8)[W8]={iU[W8]};end;(gS)[1]=r8[W8];(gS)[0X00002]=0X01;end;end;end;end;end;until true;return;end;end;else if F0>=24 then do if F0==25 then if not(Eo[y0[0X00002]])then else do Bo=y0[5];end;end;else for wg=y0[0X2],y0[5]do Eo[wg]=nil;end;end;end;else if F0~=23 then else(Eo)[y0[0X002]]=-Eo[y0[5]];end;end;end;end;else do if F0>=16 then if not(F0>=0X11)then local l3=cG[0X00];(Eo)[0]=l3[1][l3[0X2]];y0=TG[Bo];Bo=Bo+1;local G3,o3=Eo[0X0000],0;do Eo[o3+1]=G3;end;Eo[o3]=G3[y0[0X001]];Bo=Bo+1;do o3=0;end;Eo[o3]=Eo[o3](Eo[o3+0X1]);Zo=o3;do y0=TG[Bo];end;Bo=Bo+1;if not(not Eo[0])then else Bo=y0[5];end;else if F0==18 then Eo[y0[0x02]]=co[y0[0X06]];else(Eo)[0]=co[y0[0X6]];do y0=TG[Bo];end;do Bo=Bo+1;end;do Eo[0x0]=Eo[0][y0[1]];end;y0=TG[Bo];do Bo=Bo+0x1;end;(Eo)[0X0]=Eo[0x0][y0[0X001]];do Bo=Bo+0X1;end;Bo=Bo+1;y0=TG[Bo];do Bo=Bo+0x1;end;if not(not(Eo[0X0]<y0[1]))then else Bo=y0[2];end;end;end;else if F0>=14 then if F0~=0Xf then(Eo)[0x0]=co[y0[0X6]];y0=TG[Bo];Bo=Bo+1;do Eo[0x1]=y0[0X6];end;Bo=Bo+1;local Vr=(0X00);(Eo)[Vr]=Eo[Vr](Eo[Vr+1]);do Zo=Vr;end;do Bo=Bo+0X1;end;Bo=Bo+0X1;y0=TG[Bo];Bo=Bo+1;if not(not Eo[0])then else do Bo=y0[5];end;end;else Eo[0]=co[y0[0X006]];Bo=Bo+0X0001;Bo=Bo+0X001;Bo=Bo+0X1;Zo=0;(Eo)[Zo]=Eo[Zo]();Bo=Bo+1;Bo=Bo+0X1;do y0=TG[Bo];end;Bo=Bo+0X00001;do if Eo[0]then Bo=y0[5];end;end;end;else Eo[y0[0x00002]]=Eo[y0[5]]^Eo[y0[4]];end;end;end;end;end;end;end;end;end);do if Io then if Uo then if lo~=0X1 then do return Eo[Jo](V(Eo,Jo+1,Zo));end;else do return Eo[Jo]();end;end;elseif Jo then return V(Eo,Jo,lo);end;else if C(Uo)~="string"then(E)(Uo,0X00000);else if M(Uo,'att\e\m\112\116\ t\o \121\iel\d\ acr\111\s\s\ \me\116a\m\101\116\h\o\100\047\C\037-\c\097\l\l\032b\ound\097r\y')then return coroutine.yield();end;if not(M(Uo,"^\.-\058\%\d\043\:\ "))then(E)(Uo,0);else E("\076\117\114\097\p\104\ S\099\114\105\112t:"..(YG[Bo-1]or"(internal)")..": "..x(Uo),0X0);end;end;end;end;end;else hG=function(...)local jR,OR,JR=1,{},(0);local TR=I();local hR,nR={[0X1]=FG,[0X0002]=OR},((TR==a and SG or TR));local pR,oR=Cd(...);pR=pR-1;for RO=0,pR do do if not(IG>RO)then break;else(OR)[RO]=oR[RO+0X1];end;end;end;if not OG then do oR=nil;end;elseif zG then OR[IG]={n=pR>=IG and pR-IG+0x01 or 0,V(oR,IG+1,pR+0x01)};end;if nR==TR then else R(hG,nR);end;local iR,QR,kR,YR=A(function()while true do local Z4=(TG[jR]);local S4=(Z4[0x0003]);jR=jR+0X00001;do if S4<0X7 then if S4<0x3 then if S4>=0X00001 then do if S4~=2 then(OR)[Z4[2]]={V({},0X1,Z4[0X05])};else do for L9=Z4[0X2],Z4[5]do(OR)[L9]=nil;end;end;end;end;else(OR)[Z4[0x002]]=OR[Z4[0X5]]/OR[Z4[0X4]];end;else if not(S4<0X5)then do if S4~=0X0006 then(OR)[Z4[2]]=OR[Z4[0X005]]==OR[Z4[4]];else(OR)[Z4[0x2]]=nR[Z4[0X6]];end;end;else if S4~=4 then repeat local s6,P6=iG,(OR);if not(#s6>0)then else local tN=({});for QT,pT in l,s6 do for YX,CX in l,pT do if not(CX[0X1]==P6 and CX[2]>=0X00)then else local Jj=CX[0x2];if not tN[Jj]then(tN)[Jj]={P6[Jj]};end;do(CX)[0x1]=tN[Jj];end;CX[2]=1;end;end;end;end;until true;do return;end;else if OR[Z4[0x2]]then jR=Z4[5];end;end;end;end;else if not(S4<10)then if S4>=12 then if S4~=13 then local s2=Z4[0X2];local E2=h(function(...)(t)();for b0,N0,v0,d0,z0,p0,B0,f0,Q0,X0 in...do t(true,{b0,N0,v0,d0,z0,p0,B0,f0,Q0,X0});end;end);E2(OR[s2],OR[s2+1],OR[s2+0X2]);do JR=s2;end;(OR)[s2]=E2;jR=Z4[5];else repeat local Fc,pc,ic=iG,OR,(Z4[2]);do if not(#Fc>0x0)then else local Bn={};for ah,Bh in l,Fc do for Dd,hg in l,Bh do do if not(hg[1]==pc and hg[0X2]>=ic)then else local WG=(hg[2]);if not Bn[WG]then Bn[WG]={pc[WG]};end;hg[0x1]=Bn[WG];hg[0X2]=1;end;end;end;end;end;end;until true;end;else if S4==0XB then else do jR=Z4[5];end;end;end;else if S4>=8 then if S4==9 then OR[0X0]=nR[Z4[6]];jR=jR+0X1;jR=jR+0X01;Z4=TG[jR];jR=jR+1;do OR[1]=Z4[0X06];end;jR=jR+0X01;local hr=0;(OR[hr])(OR[hr+1]);JR=hr-1;do jR=jR+1;end;jR=jR+1;do Z4=TG[jR];end;do jR=jR+1;end;jR=Z4[5];else local ne=(JG[Z4[0X5]]);local Le=(nil);local Xe=(ne[0X04]);local pe=#Xe;do if pe>0 then Le={};do for k1=1,pe do local w1=Xe[k1];if w1[1]~=0X0 then do(Le)[k1-1]=cG[w1[2]];end;else Le[k1-0X00001]={OR,w1[2]};end;end;end;(H)(iG,Le);end;end;OR[Z4[0X2]]=ed(nR,ne,Le);end;else do OR[Z4[0x2]]=Z4[6];end;end;end;end;end;end;end);if not(iR)then if C(QR)~="string"then(E)(QR,0);else if M(QR,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if not(M(QR,'\094\.-\058\037\d\043\:\032'))then E(QR,0x0);else(E)('L\117r\097\p\h \083\cri\pt\:'..(YG[jR-1]or"\(i\110t\e\114nal\)")..': '..x(QR),0);end;end;else if QR then if YR==1 then return OR[kR]();else return OR[kR](V(OR,kR+0X0001,JR));end;elseif kR then return V(OR,kR,YR);end;end;end;end;else if lG==0X7B then hG=function(...)local V5=1;local P5={};local H5=(I());local d5=0X00000;local m5,v5=Cd(...);local o5,p5={[0X0002]=P5,[0X1]=FG},(H5==a and SG or H5);m5=m5-0X001;do for lc=0,m5 do if not(IG>lc)then break;else(P5)[lc]=v5[lc+0x1];end;end;end;if not OG then v5=nil;elseif zG then P5[IG]={n=m5>=IG and m5-IG+0x1 or 0X00000,V(v5,IG+0x1,m5+0X1)};end;do if p5==H5 then else(R)(hG,p5);end;end;while true do local oO=(TG[V5]);local rO=oO[3];V5=V5+0X1;return(function(Q,F,...)local u=Q[0];local d=u.Character;if d and d:FindFirstChild("Humanoid")then if d.Humanoid.Health>0 and d.Humanoid.RootPart then for O,m in pairs(WorldData.SafeZones:GetChildren())do if(d.HumanoidRootPart.Position-m.Position).magnitude<=m.Mesh.Scale.X/2 then return true;end;end;end;end;end)(P5,cG,...);end;end;else hG=function(...)local Sa,sa=0X0001,{};local pa=(I());local ya,aa=Cd(...);local va={[0X0002]=sa,[0X1]=FG};ya=ya-0X1;do for C_=0,ya do if not(IG>C_)then do break;end;else(sa)[C_]=aa[C_+1];end;end;end;local Xa=(0X00);local na=(pa==a and SG or pa);if not OG then aa=nil;elseif not(zG)then else do(sa)[IG]={n=ya>=IG and ya-IG+0x1 or 0,V(aa,IG+1,ya+1)};end;end;do if na==pa then else R(hG,na);end;end;do while true do local dS=(TG[Sa]);local gS=(dS[3]);do Sa=Sa+0x1;end;return(function(w,Z,...)local j={...};local E=network:Send("CommE",...);return E;end)(sa,cG,...);end;end;end;end;end;end;else do if not(lG>=0X00007E)then if lG==125 then do hG=function(...)local he,we=0X0001,({});local Ne=({[0X1]=FG,[0X0002]=we});local ge=I();local te,ue=Cd(...);local Qe=0X0;te=te-1;local Ze=(ge==a and SG or ge);for zA=0X00,te do if not(IG>zA)then break;else(we)[zA]=ue[zA+0x1];end;end;if not OG then ue=nil;elseif not(zG)then else(we)[IG]={n=te>=IG and te-IG+1 or 0,V(ue,IG+0X0001,te+1)};end;if Ze==ge then else R(hG,Ze);end;do while true do local q6=TG[he];he=he+1;local M6=q6[3];return(function(m,K,...)local P,l,Q=m[0],m[1],m[2];if Q~=nil then if Q then for A,F in pairs(game.Players.LocalPlayer.Backpack:GetChildren())do if F:IsA("Tool")and(F.ToolTip==P or l and F.Name==P)then return F;end;end;else local U=game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool");do if U and U:IsA("Tool")and(U.ToolTip==P or l and U.Name==P)then return U;end;end;end;else for q,B in pairs(game.Players.LocalPlayer.Backpack:GetChildren())do if B:IsA("Tool")and(B.ToolTip==P or l and B.Name==P)then return B;end;end;local R=game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool");do if R and R:IsA("Tool")and(R.ToolTip==P or l and R.Name==P)then return R;end;end;end;end)(we,cG,...);end;end;end;end;else hG=function(...)local ND,LD,sD=1,{},0;local TD=I();local fD,CD=(TD==a and SG or TD),{[0X1]=FG,[0X0002]=LD};local oD,SD=Cd(...);oD=oD-0X001;do for Gf=0,oD do if not(IG>Gf)then break;else(LD)[Gf]=SD[Gf+1];end;end;end;do if not OG then do SD=nil;end;elseif not(zG)then else(LD)[IG]={n=oD>=IG and oD-IG+1 or 0x00000,V(SD,IG+0X0001,oD+0X01)};end;end;if fD~=TD then(R)(hG,fD);end;local HD,UD,MD,iD=A(function()do while true do local aT=TG[ND];local MT=aT[3];do ND=ND+0x1;end;if not(MT<8)then do if not(MT<12)then if not(MT<0X0000E)then do if MT<15 then LD[aT[0X2]]=aT[0X0006];else if MT~=0x10 then else local kU=cG[0X0];(LD)[0]=kU[1][kU[2]];ND=ND+0X1;ND=ND+1;do ND=ND+1;end;sD=0;(LD)[sD]=LD[sD]();ND=ND+0X01;LD[0]=not LD[0];local rU=(0X000);ND=ND+0x1;repeat local Gn,Cn=iG,LD;do if not(#Gn>0)then else local Vk=({});for aV,fV in l,Gn do do for il,yl in l,fV do do if yl[1]==Cn and yl[2]>=0 then local vz=(yl[2]);do if not Vk[vz]then(Vk)[vz]={Cn[vz]};end;end;yl[1]=Vk[vz];(yl)[0x2]=1;end;end;end;end;end;end;end;until true;return false,rU,rU;end;end;end;else if MT~=13 then local Yp=aT[0X00002];local Ip=h(function(...)(t)();for zq,Zq,Uq,Bq,Sq,Eq,wq,Hq,lq,gq in...do t(true,{zq,Zq,Uq,Bq,Sq,Eq,wq,Hq,lq,gq});end;end);Ip(LD[Yp],LD[Yp+1],LD[Yp+0x2]);sD=Yp;(LD)[Yp]=Ip;do ND=aT[0x5];end;else repeat local e4,G4=iG,(LD);do if not(#e4>0)then else local mf={};do for v1,q1 in l,e4 do do for ga,Ja in l,q1 do if not(Ja[0X001]==G4 and Ja[0X2]>=0)then else local rj=Ja[0X00002];if not(not mf[rj])then else mf[rj]={G4[rj]};end;(Ja)[1]=mf[rj];do(Ja)[0x2]=0X1;end;end;end;end;end;end;end;end;until true;return;end;end;else if MT>=0X00a then if MT==11 then LD[aT[0X0002]]=fD[aT[0X06]];else do LD[aT[2]]=LD[aT[0X005]]>=LD[aT[0X4]];end;end;else if MT==0X9 then local op,dp=JG[aT[0x5]],(nil);local Ep=op[0x4];local Np=(#Ep);if Np>0x00 then dp={};for oO=1,Np do local QO=(Ep[oO]);if QO[1]==0 then dp[oO-0X1]={LD,QO[2]};else(dp)[oO-1]=cG[QO[0x2]];end;end;H(iG,dp);end;(LD)[aT[2]]=ed(fD,op,dp);else repeat local Mb,vb=iG,LD;if not(#Mb>0x00)then else local f8={};for Uc,dc in l,Mb do for Cx,nx in l,dc do if nx[1]==vb and nx[0X2]>=0 then local AA=nx[2];if not(not f8[AA])then else do(f8)[AA]={vb[AA]};end;end;nx[0X1]=f8[AA];nx[0X0002]=1;end;end;end;end;until true;local st=(aT[0X2]);return false,st,st+aT[5]-2;end;end;end;end;else if not(MT>=4)then if not(MT>=2)then do if MT~=0X1 then LD[aT[0X0002]]=LD[aT[0x5]]+LD[aT[0x4]];else if LD[aT[0X05]]<LD[aT[0X0004]]then ND=aT[0X2];end;end;end;else if MT==0X3 then LD[aT[0X00002]]={V({},0X1,aT[5])};else(LD)[aT[2]]=CD[aT[5]];end;end;else if not(MT<0X6)then if MT==7 then ND=aT[0X5];else do LD[aT[2]]=LD[aT[0X5]]-LD[aT[4]];end;end;else if MT==5 then do LD[aT[0X0002]]=#LD[aT[0x0005]];end;else LD[aT[0x2]]=LD[aT[5]]<=LD[aT[4]];end;end;end;end;end;end;end);if not(HD)then if C(UD)~="strin\g"then(E)(UD,0);else if not(M(UD,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(M(UD,'^\046\-\:\%d\+\:\032'))then(E)(UD,0X0);else(E)('Lurap\h \083c\114i\pt\:'..(YG[ND-0X001]or"\(\105\110\116\er\110a\l\)")..": "..x(UD),0x00);end;end;else if UD then if iD==0X0001 then do return LD[MD]();end;else return LD[MD](V(LD,MD+0X0001,sD));end;elseif MD then do return V(LD,MD,iD);end;end;end;end;end;else do if not(lG<0x07F)then if lG==0X0080 then hG=function(...)local qs,ss,Vs=0x1,0X00000,{};local us={[0X0002]=Vs,[0X1]=FG};local hs=I();local Js=((hs==a and SG or hs));local Ps,Ts=Cd(...);do Ps=Ps-0X1;end;do for cU=0,Ps do do if not(IG>cU)then break;else Vs[cU]=Ts[cU+0x0001];end;end;end;end;if not OG then Ts=nil;elseif not(zG)then else(Vs)[IG]={n=Ps>=IG and Ps-IG+1 or 0,V(Ts,IG+0x1,Ps+0X001)};end;if Js~=hs then(R)(hG,Js);end;local Is,bs,Es,Hs=A(function()while true do local QZ=(TG[qs]);local sZ=QZ[0X3];qs=qs+1;do if sZ<8 then do if sZ<0X0004 then if sZ>=2 then do if sZ~=3 then repeat local mX,zX=iG,Vs;if#mX>0x0 then local ix=({});do for Jw,Fw in l,mX do do for LQ,hQ in l,Fw do if hQ[1]==zX and hQ[0X2]>=0 then local UR=hQ[2];if not ix[UR]then(ix)[UR]={zX[UR]};end;hQ[0x1]=ix[UR];hQ[0x2]=1;end;end;end;end;end;end;until true;return;else(Vs)[QZ[2]]=Vs[QZ[0X5]]==Vs[QZ[4]];end;end;else if sZ==1 then repeat local jZ,xZ=iG,(Vs);if not(#jZ>0)then else local pJ=({});do for o2,b2 in l,jZ do do for qQ,AQ in l,b2 do if AQ[0X1]==xZ and AQ[2]>=0X00 then local QG=(AQ[2]);if not(not pJ[QG])then else do(pJ)[QG]={xZ[QG]};end;end;do AQ[0X1]=pJ[QG];end;AQ[0x0002]=1;end;end;end;end;end;end;until true;return false,QZ[2],ss;else local ks=(Vs[QZ[5]]);local Fs=(QZ[2]);Vs[Fs+0X1]=ks;(Vs)[Fs]=ks[QZ[0X1]];end;end;else if not(sZ<0X00006)then if sZ~=7 then do Vs[QZ[2]]=QZ[6];end;else if Vs[QZ[0x2]]then do qs=QZ[5];end;end;end;else if sZ~=5 then do(Vs)[QZ[0X2]]={V({},1,QZ[5])};end;else(Vs)[3]=Vs[0X000]+QZ[1];qs=qs+1;Vs[0X00]=Vs[0X3];qs=qs+0X1;(Vs)[0x03]=Vs[1]-Vs[2];qs=qs+0X1;do Vs[1]=Vs[3];end;do QZ=TG[qs];end;qs=qs+0X1;do qs=QZ[0x00005];end;end;end;end;end;else if sZ>=12 then if sZ>=0Xe then do if sZ>=0X0000f then if sZ~=0x10 then Vs[0x00]=Js[QZ[6]];qs=qs+0X01;qs=qs+1;do QZ=TG[qs];end;qs=qs+0x001;Vs[0x0]=Vs[0X0][QZ[0X001]];qs=qs+1;qs=qs+1;QZ=TG[qs];qs=qs+0X1;Vs[0]=Vs[0x0][QZ[1]];qs=qs+0X01;do qs=qs+0X1;end;do QZ=TG[qs];end;qs=qs+1;Vs[0]=Vs[0][QZ[0X0001]];QZ=TG[qs];do qs=qs+1;end;do(Vs)[1]=Js[QZ[6]];end;qs=qs+0X00001;do qs=qs+1;end;QZ=TG[qs];qs=qs+1;Vs[1]=Vs[0X1][QZ[0X001]];QZ=TG[qs];qs=qs+0x00001;(Vs)[1]=Vs[0X1][QZ[0x001]];qs=qs+0X1;qs=qs+0X1;do QZ=TG[qs];end;do qs=qs+0x01;end;(Vs)[1]=Vs[1][QZ[1]];qs=qs+0X00001;do qs=qs+0x1;end;QZ=TG[qs];qs=qs+1;qs=QZ[5];else(Vs)[QZ[2]]=Js[QZ[0x6]];end;else local Y9=(JG[QZ[5]]);local k9,b9=Y9[0x04],(nil);local q9=#k9;if q9>0 then b9={};do for ec=1,q9 do local Rc=k9[ec];if Rc[1]==0 then(b9)[ec-1]={Vs,Rc[0X2]};else(b9)[ec-1]=cG[Rc[0x2]];end;end;end;(H)(iG,b9);end;Vs[QZ[0X00002]]=ed(Js,Y9,b9);end;end;else do if sZ==0X0d then(Vs)[2]=Js[QZ[6]];local Ef=2;qs=qs+0X1;qs=qs+1;qs=qs+0X1;Vs[3]=Vs[0X00000];qs=qs+1;(Vs)[Ef]=Vs[Ef](Vs[Ef+0X1]);do ss=Ef;end;qs=qs+0x01;do qs=qs+1;end;QZ=TG[qs];do qs=qs+1;end;if not(not(Vs[2]<=Vs[0X001]))then else qs=QZ[0X02];end;else local fi=(QZ[2]);local Bi,Vi=Vs[fi]();if Bi then for W3=0X0001,QZ[4]do do(Vs)[fi+W3]=Vi[W3];end;end;qs=QZ[5];end;end;end;end;else if sZ>=10 then if sZ~=11 then(Vs)[2]=Js[QZ[6]];qs=qs+1;qs=qs+1;do QZ=TG[qs];end;qs=qs+1;do Vs[2]=Vs[0X2][QZ[0X1]];end;qs=qs+0X001;local x5=2;qs=qs+0X00001;do qs=qs+0x01;end;Vs[3]=Vs[0X00000];QZ=TG[qs];do qs=qs+1;end;(Vs)[4]=QZ[6];QZ=TG[qs];qs=qs+1;Vs[5]=Js[QZ[0x00006]];qs=qs+1;qs=qs+1;do qs=qs+1;end;local K5=4;ss=x5+K5-1;repeat local RS,eS=iG,Vs;do if#RS>0 then local as={};for r6,u6 in l,RS do for Pz,Lz in l,u6 do do if not(Lz[1]==eS and Lz[2]>=0x0)then else local I0=Lz[2];do if not as[I0]then do as[I0]={eS[I0]};end;end;end;do(Lz)[0X1]=as[I0];end;do(Lz)[2]=0X1;end;end;end;end;end;end;end;until true;return true,x5,K5;else end;else if sZ~=9 then for xI=QZ[2],QZ[0x5]do Vs[xI]=nil;end;else qs=QZ[0x5];end;end;end;end;end;end;end);if not(Is)then if C(bs)=="string"then if M(bs,"att\e\m\pt\ \116\o\ \y\ie\108\d\ a\c\114o\s\s\032\109\101tam\101\116h\111d\/\C\%\-\099\097\108\108\032b\111\117\110\100\097\114y")then return coroutine.yield();end;if not(M(bs,"^.-:%d+: "))then(E)(bs,0);else E("\076u\114\097ph\032\Scr\ipt\:"..(YG[qs-0X001]or"(\i\110ter\110\097\l\)").."\:\ "..x(bs),0);end;else(E)(bs,0);end;else do if bs then if Hs==0x0001 then do return Vs[Es]();end;else return Vs[Es](V(Vs,Es+0X1,ss));end;elseif not(Es)then else return V(Vs,Es,Hs);end;end;end;end;else do hG=function(...)local oX=0;local aX,VX=0X1,{};local DX={[0X0002]=VX,[0X1]=FG};local tX=(I());local hX,SX=Cd(...);hX=hX-1;local OX=(tX==a and SG or tX);for Gs=0x0,hX do do if IG>Gs then VX[Gs]=SX[Gs+1];else break;end;end;end;if not OG then SX=nil;elseif zG then(VX)[IG]={n=hX>=IG and hX-IG+1 or 0X0,V(SX,IG+0X1,hX+1)};end;if OX==tX then else R(hG,OX);end;local vX,pX,sX,NX=A(function()while true do local mr=(TG[aX]);local Rr=(mr[0X3]);aX=aX+1;do if not(Rr<8)then do if not(Rr>=0XC)then if not(Rr<10)then do if Rr==11 then(VX)[mr[0x2]]=L(VX[mr[0X5]],VX[mr[4]]);else(VX)[mr[2]]=VX[mr[5]][VX[mr[0X4]]];end;end;else if Rr==9 then do VX[0X0]=OX[mr[0X6]];end;mr=TG[aX];aX=aX+1;VX[1]=mr[0X6];aX=aX+0X1;local HN=(0x00);do(VX)[HN]=VX[HN](VX[HN+1]);end;do oX=HN;end;local GN=(cG[0]);aX=aX+0X001;do(VX)[0X1]=GN[0X001][GN[0X2]];end;do mr=TG[aX];end;aX=aX+0x1;(VX)[0x01]=VX[1][mr[0X001]];aX=aX+1;do aX=aX+1;end;aX=aX+0x001;(VX)[2]=VX[0];aX=aX+1;HN=1;do VX[HN]=VX[HN](VX[HN+0X1]);end;oX=HN;aX=aX+0X1;aX=aX+0X001;mr=TG[aX];do aX=aX+1;end;if not VX[0X1]then aX=mr[5];end;else VX[mr[2]]=OX[mr[0X6]];end;end;else if Rr<0Xe then if Rr==0XD then(VX)[mr[0X2]]=VX[mr[0x5]]>VX[mr[4]];else for AD=mr[0X02],mr[0X5]do(VX)[AD]=nil;end;end;else if Rr==0X0F then VX[mr[2]]=mr[0X006];else local l3=(JG[mr[0X5]]);local t3,u3=l3[0X4],nil;local A3=(#t3);do if not(A3>0)then else do u3={};end;for Dz=0X1,A3 do local fz=(t3[Dz]);if fz[0X1]~=0 then do u3[Dz-0X1]=cG[fz[0x2]];end;else u3[Dz-1]={VX,fz[0X0002]};end;end;(H)(iG,u3);end;end;VX[mr[0x2]]=ed(OX,l3,u3);end;end;end;end;else if Rr>=0x4 then if not(Rr<6)then if Rr~=0x0007 then VX[mr[0X2]]=VX[mr[0X005]]-VX[mr[0X004]];else end;else if Rr==0x0005 then local Gw=(mr[2]);local Ww=(VX[mr[5]]);do(VX)[Gw+1]=Ww;end;VX[Gw]=Ww[mr[0x1]];else aX=mr[0X00005];end;end;else if Rr<0X2 then if Rr==0X1 then do repeat local C8,H8=iG,(VX);if#C8>0 then local oO=({});for BU,MU in l,C8 do for Bj,Gj in l,MU do if Gj[1]==H8 and Gj[0X2]>=0X00 then local Nb=Gj[0X2];if not oO[Nb]then oO[Nb]={H8[Nb]};end;Gj[0X0001]=oO[Nb];do Gj[2]=0X1;end;end;end;end;end;until true;end;return;else local jO=cG[0];VX[0X1]=jO[0X1][jO[0X2]];aX=aX+1;aX=aX+1;mr=TG[aX];aX=aX+1;local ZO=(0X1);do(VX)[1]=VX[1][mr[1]];end;aX=aX+0X001;aX=aX+0x1;aX=aX+1;do(VX)[2]=VX[0];end;aX=aX+0X1;jO=cG[0X001];(VX)[3]=jO[1][jO[2]];do aX=aX+1;end;aX=aX+1;do aX=aX+1;end;(VX[ZO])(VX[ZO+1],VX[ZO+0X2]);oX=ZO-0x01;aX=aX+1;aX=aX+0x00001;do mr=TG[aX];end;aX=aX+1;do aX=mr[5];end;end;else if Rr==0X003 then VX[1]=OX[mr[6]];aX=aX+1;aX=aX+0X1;mr=TG[aX];aX=aX+0X001;do VX[0X1]=VX[1][mr[0X001]];end;aX=aX+1;aX=aX+1;mr=TG[aX];do aX=aX+0X0001;end;if not(not VX[1])then else aX=mr[5];end;else(VX)[mr[0X2]]={V({},0X00001,mr[5])};end;end;end;end;end;end;end);if vX then if pX then if NX==0x1 then return VX[sX]();else do return VX[sX](V(VX,sX+1,oX));end;end;elseif sX then do return V(VX,sX,NX);end;end;else if C(pX)=="string"then do if not(M(pX,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(M(pX,"\094\.\045\:\%\100\+\:\032"))then E(pX,0);else(E)("Luraph Script:"..(YG[aX-0X01]or"(internal)")..": "..x(pX),0X0);end;else(E)(pX,0);end;end;end;end;end;else hG=function(...)local sU={};local oU=(0x1);local AU,dU={[0X1]=FG,[0X0002]=sU},(0X0);local pU=(I());local gU,ZU=Cd(...);local GU=(pU==a and SG or pU);gU=gU-0X001;for k5=0,gU do if not(IG>k5)then break;else sU[k5]=ZU[k5+1];end;end;do if not OG then ZU=nil;elseif zG then do(sU)[IG]={n=gU>=IG and gU-IG+1 or 0X00000,V(ZU,IG+0X1,gU+0X1)};end;end;end;if GU==pU then else(R)(hG,GU);end;while true do local dc=(TG[oU]);oU=oU+0X1;local lc=(dc[0X3]);return(function(I,z,...)_C("AbandonQuest");end)(sU,cG,...);end;end;end;end;end;end;end;end;end;end;end;end;elseif not(lG<0X25)then if lG>=55 then if lG>=64 then do if not(lG>=69)then if lG<0X42 then if lG~=0X041 then hG=function(...)local JJ={};local hJ=(1);local VJ={[0X0002]=JJ,[0X1]=FG};local sJ=(I());local CJ,AJ=Cd(...);local xJ=((sJ==a and SG or sJ));CJ=CJ-1;for Ci=0,CJ do if not(IG>Ci)then do break;end;else(JJ)[Ci]=AJ[Ci+1];end;end;if not OG then AJ=nil;elseif not(zG)then else do JJ[IG]={n=CJ>=IG and CJ-IG+0X1 or 0,V(AJ,IG+0x1,CJ+1)};end;end;local XJ=0x00;if xJ~=sJ then(R)(hG,xJ);end;local eJ,EJ,yJ,aJ=A(function()while true do local uA=(TG[hJ]);local PA=(uA[0X3]);hJ=hJ+1;do if not(PA>=9)then if PA<4 then if PA<2 then if PA==0x1 then JJ[uA[0X002]]={V({},0X1,uA[5])};else do JJ[1]=xJ[uA[6]];end;hJ=hJ+1;XJ=0X001;(JJ[XJ])();do XJ=XJ-0X1;end;uA=TG[hJ];hJ=hJ+1;JJ[1]=xJ[uA[0x6]];hJ=hJ+0x0001;hJ=hJ+0X1;do hJ=hJ+1;end;XJ=1;JJ[XJ]=JJ[XJ]();hJ=hJ+0x1;do hJ=hJ+1;end;uA=TG[hJ];hJ=hJ+0X00001;if JJ[0X1]then hJ=uA[5];end;end;else if PA~=0X3 then for HR=uA[0x2],uA[5]do do JJ[HR]=nil;end;end;else JJ[uA[2]]=uA[0x0006];end;end;else if PA<6 then if PA==0X00005 then do(JJ)[1]=xJ[uA[0X6]];end;local WQ=(1);hJ=hJ+0X1;do hJ=hJ+1;end;uA=TG[hJ];hJ=hJ+0x1;(JJ)[2]=uA[0x006];do hJ=hJ+1;end;JJ[WQ](JJ[WQ+1]);XJ=WQ-0x1;hJ=hJ+0X1;hJ=hJ+1;uA=TG[hJ];hJ=hJ+1;hJ=uA[5];else repeat local SW,OW=iG,JJ;if not(#SW>0)then else local o5={};for qr,yr in l,SW do for Q3,F3 in l,yr do if not(F3[1]==OW and F3[2]>=0)then else local wH=F3[2];if not o5[wH]then o5[wH]={OW[wH]};end;(F3)[1]=o5[wH];do(F3)[0X00002]=1;end;end;end;end;end;until true;return;end;else do if PA<0X007 then do(JJ)[uA[2]]=JJ[uA[0x5]]^JJ[uA[4]];end;else do if PA~=8 then(JJ)[uA[2]]=f(JJ[uA[5]]);else local Cm=(JG[uA[5]]);local om=Cm[0X4];local Xm,hm=#om,(nil);if not(Xm>0X00)then else hm={};for QI=1,Xm do local EI=(om[QI]);if EI[0x1]==0X00 then do(hm)[QI-0X1]={JJ,EI[2]};end;else do hm[QI-1]=cG[EI[0X02]];end;end;end;(H)(iG,hm);end;(JJ)[uA[2]]=ed(xJ,Cm,hm);end;end;end;end;end;end;else if PA>=13 then do if PA<0xF then if PA~=0Xe then(JJ)[1]=xJ[uA[0x6]];do hJ=hJ+1;end;do hJ=hJ+1;end;hJ=hJ+1;XJ=1;(JJ[XJ])();XJ=XJ-1;hJ=hJ+0X0001;hJ=hJ+1;do uA=TG[hJ];end;do hJ=hJ+0x1;end;do(JJ)[1]=xJ[uA[6]];end;do uA=TG[hJ];end;do hJ=hJ+0X01;end;(JJ)[0x001]=JJ[0X1][uA[1]];hJ=hJ+0X1;do hJ=hJ+0X1;end;uA=TG[hJ];hJ=hJ+1;(JJ)[1]=JJ[1][uA[0X001]];do hJ=hJ+1;end;hJ=hJ+0X0001;uA=TG[hJ];do hJ=hJ+1;end;(JJ)[0X001]=JJ[0X1][uA[0X1]];hJ=hJ+1;do hJ=hJ+0X1;end;uA=TG[hJ];hJ=hJ+0X1;if not JJ[1]then hJ=uA[0X5];end;else local uC=uA[2];local zC,TC=JJ[uC]();if not(zC)then else hJ=uA[5];JJ[uC+0X03]=TC;end;end;else if PA>=0X10 then if PA==0X000011 then do hJ=uA[0X5];end;else do JJ[uA[0X002]]=xJ[uA[0X6]];end;end;else(JJ)[0x1]=xJ[uA[6]];hJ=hJ+0X1;hJ=hJ+0x0001;hJ=hJ+1;XJ=1;(JJ[XJ])();XJ=XJ-1;uA=TG[hJ];hJ=hJ+1;do JJ[0X1]=xJ[uA[0X0006]];end;hJ=hJ+1;hJ=hJ+1;hJ=hJ+1;XJ=1;JJ[XJ]();XJ=XJ-0X0001;uA=TG[hJ];hJ=hJ+1;(JJ)[1]=xJ[uA[0X00006]];do hJ=hJ+0X00001;end;hJ=hJ+1;do uA=TG[hJ];end;do hJ=hJ+0X1;end;(JJ)[0X0002]=uA[0X0006];local V2=(1);do hJ=hJ+0x1;end;JJ[V2](JJ[V2+1]);XJ=V2-0X1;hJ=hJ+1;hJ=hJ+0X1;uA=TG[hJ];do hJ=hJ+0X1;end;if not JJ[0]then hJ=uA[5];end;end;end;end;else do if PA>=0xb then if PA==12 then JJ[uA[0X02]][JJ[uA[0X5]]]=JJ[uA[4]];else if not(not(JJ[uA[0X5]]<=JJ[uA[0X4]]))then else hJ=uA[2];end;end;else do if PA==0X0a then do JJ[uA[2]]=JJ[uA[5]]<JJ[uA[0X4]];end;else end;end;end;end;end;end;end;end;end);if not(eJ)then do if C(EJ)~="string"then E(EJ,0);else do if M(EJ,"\097tte\109\pt \116o \121\ie\108\100\ a\099ro\115\s\ \109et\097\109\eth\o\100\/\C\%\045\c\097l\108\032b\o\117\110\d\097r\121")then do return coroutine.yield();end;end;end;if not(M(EJ,"\^\.-\:\%\d\043\058\ "))then(E)(EJ,0);else(E)('\L\117\114\097p\104\032\083\cr\105pt\:'..(YG[hJ-0X00001]or"(internal)").."\:\032"..x(EJ),0X0000);end;end;end;else if EJ then if aJ==1 then return JJ[yJ]();else do return JJ[yJ](V(JJ,yJ+1,XJ));end;end;elseif not(yJ)then else do return V(JJ,yJ,aJ);end;end;end;end;else do hG=function(...)local Be=({});local ue=(1);local ae=I();local Oe={[0X0002]=Be,[0X1]=FG};local Ue,ze=Cd(...);do Ue=Ue-1;end;for Lw=0,Ue do if not(IG>Lw)then break;else do(Be)[Lw]=ze[Lw+1];end;end;end;local le,ie=0x0000,((ae==a and SG or ae));if not OG then do ze=nil;end;elseif not(zG)then else do(Be)[IG]={n=Ue>=IG and Ue-IG+0X1 or 0,V(ze,IG+1,Ue+0X1)};end;end;if ie==ae then else R(hG,ie);end;local de,oe,He,We=A(function()while true do local Pi=(TG[ue]);local bi=(Pi[3]);ue=ue+0X001;if not(bi<0X7)then if bi<0XA then if not(bi<8)then if bi~=0X00009 then ue=Pi[0X5];else local Pm=(Pi[0X2]);for Wt=Pm,Pm+(Pi[5]-0x1)do do(Be)[Wt]=ze[IG+(Wt-Pm)+0X001];end;end;end;else do(Be)[Pi[0X02]]=Pi[0X06];end;end;else if bi>=12 then if bi==0Xd then else do repeat local ZV,KV,tV=iG,Be,(Pi[2]);if not(#ZV>0)then else local Dd={};do for k3,U3 in l,ZV do do for u4,p4 in l,U3 do do if p4[1]==KV and p4[0x2]>=tV then local Rc=(p4[0X2]);if not Dd[Rc]then Dd[Rc]={KV[Rc]};end;(p4)[0X1]=Dd[Rc];p4[2]=1;end;end;end;end;end;end;end;until true;end;end;else if bi==11 then(Be)[Pi[0X2]]={V({},1,Pi[5])};else Be[Pi[0X2]]=N(Be[Pi[5]],Be[Pi[4]]);end;end;end;else if bi>=3 then do if bi<5 then if bi==4 then local Eq=JG[Pi[0X005]];local yq=nil;local Dq=(Eq[4]);local Uq=#Dq;do if not(Uq>0)then else yq={};for F6=1,Uq do local S6=Dq[F6];if S6[0X1]==0X00 then yq[F6-1]={Be,S6[2]};else do yq[F6-1]=cG[S6[0X2]];end;end;end;H(iG,yq);end;end;Be[Pi[0X2]]=ed(ie,Eq,yq);else(Be)[0x0]=ie[Pi[6]];Pi=TG[ue];do ue=ue+1;end;local Ox,Vx=Be[0x0000],(0);do(Be)[Vx+0X1]=Ox;end;Be[Vx]=Ox[Pi[1]];Pi=TG[ue];ue=ue+0x1;(Be)[2]=Pi[6];ue=ue+1;Vx=0X00;do Be[Vx]=Be[Vx](Be[Vx+1],Be[Vx+0X002]);end;le=Vx;do ue=ue+0X1;end;ue=ue+0x1;Pi=TG[ue];ue=ue+0X1;do(Be)[0X00001]=ie[Pi[0X0006]];end;Pi=TG[ue];ue=ue+1;(Be)[1]=Be[0X001][Pi[1]];ue=ue+1;ue=ue+1;Pi=TG[ue];local yx=(JG[Pi[0x5]]);local bx=yx[0X4];do ue=ue+0X00001;end;local Dx=(#bx);local Zx=nil;if not(Dx>0X0)then else Zx={};for x8=0X1,Dx do local M8=bx[x8];if M8[0X1]~=0X0 then(Zx)[x8-1]=cG[M8[0X0002]];else Zx[x8-0X01]={Be,M8[2]};end;end;(H)(iG,Zx);end;Be[0X2]=ed(ie,yx,Zx);ue=ue+1;Vx=1;(Be[Vx])(Be[Vx+0x1]);le=Vx-1;ue=ue+0X1;repeat local Ft,lt=iG,(Be);if#Ft>0X0 then local th={};for ST,NT in l,Ft do for kS,yS in l,NT do if not(yS[1]==lt and yS[0x2]>=0X0)then else local z2=(yS[2]);do if not(not th[z2])then else th[z2]={lt[z2]};end;end;(yS)[0X1]=th[z2];(yS)[0X2]=1;end;end;end;end;until true;return;end;else if bi~=0x00006 then if not(Be[Pi[5]]<=Be[Pi[0X4]])then ue=Pi[2];end;else if Be[Pi[5]]==Be[Pi[0X00004]]then ue=Pi[2];end;end;end;end;else if not(bi<0X1)then if bi~=2 then Be[Pi[0X2]]=ie[Pi[0X0006]];else for Fv=Pi[0X0002],Pi[5]do(Be)[Fv]=nil;end;end;else do repeat local gY,KY=iG,Be;if#gY>0X0 then local TL={};for ls,ns in l,gY do for Y1,V1 in l,ns do if V1[1]==KY and V1[0x2]>=0X0 then local Uc=V1[2];if not TL[Uc]then(TL)[Uc]={KY[Uc]};end;(V1)[1]=TL[Uc];V1[0X02]=1;end;end;end;end;until true;end;local YW=Pi[2];do return false,YW,YW+Pi[0X5]-2;end;end;end;end;end;end);do if not(de)then do if C(oe)~='str\105\110\103'then(E)(oe,0);else if not(M(oe,'at\116e\m\p\116\ \116\111 \yi\e\l\100 a\cro\s\s\032\109\e\116\097\met\ho\d\/\067\%\-c\097\108\l \098\111un\100a\114\y'))then else return coroutine.yield();end;if M(oe,'\^\046\-:\037\d\043\:\ ')then E("\L\117\114\097\112h\032S\c\114i\p\116:"..(YG[ue-0x0001]or"\(i\110t\101\114n\097\l)")..'\: '..x(oe),0X0);else(E)(oe,0);end;end;end;else if oe then if We==0X1 then return Be[He]();else return Be[He](V(Be,He+0X1,le));end;elseif He then do return V(Be,He,We);end;end;end;end;end;end;end;else do if not(lG<0X43)then if lG~=68 then hG=function(...)local x4,V4,L4=1,{},0;local l4=(I());local e4={[0X1]=FG,[0X0002]=V4};local N4=((l4==a and SG or l4));local f4,X4=Cd(...);do f4=f4-1;end;for QC=0X00,f4 do do if IG>QC then do(V4)[QC]=X4[QC+1];end;else do break;end;end;end;end;do if not OG then X4=nil;elseif not(zG)then else V4[IG]={n=f4>=IG and f4-IG+1 or 0X0,V(X4,IG+1,f4+0X0001)};end;end;do if N4==l4 then else R(hG,N4);end;end;local M4,z4,i4,W4=A(function()do while true do local zB=(TG[x4]);local rB=(zB[3]);do x4=x4+1;end;if rB<0X00005 then do if rB>=0X2 then if rB>=0X3 then if rB~=4 then else if not(V4[zB[0X0005]]<=V4[zB[4]])then else do x4=zB[2];end;end;end;else local CA=JG[zB[0x5]];local iA=(nil);local rA=(CA[0X00004]);local GA=#rA;if not(GA>0)then else iA={};for cI=1,GA do local lI=(rA[cI]);if lI[1]==0X00 then(iA)[cI-1]={V4,lI[0X2]};else(iA)[cI-1]=cG[lI[2]];end;end;H(iG,iA);end;V4[zB[0X2]]=ed(N4,CA,iA);end;else if rB~=1 then V4[zB[2]]=N4[zB[0X6]];else if V4[zB[5]]==V4[zB[0x4]]then else do x4=zB[2];end;end;end;end;end;else do if not(rB>=0X8)then if not(rB>=0X0006)then do V4[0]=N4[zB[0x6]];end;x4=x4+0x1;local Ln=nil;do x4=x4+0X1;end;zB=TG[x4];x4=x4+1;V4[0X0]=V4[0X0000][zB[0X00001]];x4=x4+1;x4=x4+0x01;zB=TG[x4];x4=x4+0X01;local hn=(JG[zB[0x5]]);local Kn=hn[0X004];local kn=0;local tn=(#Kn);if tn>0 then Ln={};for D7=1,tn do local i7=(Kn[D7]);do if i7[0X1]==0x0 then do(Ln)[D7-1]={V4,i7[2]};end;else do(Ln)[D7-1]=cG[i7[0X00002]];end;end;end;end;(H)(iG,Ln);end;(V4)[0X1]=ed(N4,hn,Ln);x4=x4+1;(V4[kn])(V4[kn+0x1]);do L4=kn-1;end;do x4=x4+0X1;end;repeat local IW,pW=iG,V4;if#IW>0x0 then local dv={};do for UF,FF in l,IW do do for Bk,rk in l,FF do if rk[0X0001]==pW and rk[0X02]>=0X0 then local I2=(rk[0X2]);if not(not dv[I2])then else dv[I2]={pW[I2]};end;do rk[0x01]=dv[I2];end;rk[0X2]=1;end;end;end;end;end;end;until true;do return;end;else if rB==0X7 then if V4[zB[2]]then do x4=zB[0X05];end;end;else do V4[zB[2]]={V({},0X1,zB[0X5])};end;end;end;else if not(rB>=0X9)then x4=zB[5];else if rB==10 then if not(V4[zB[5]]<V4[zB[0X4]])then else x4=zB[0X2];end;else do V4[zB[0x00002]]=zB[6];end;end;end;end;end;end;end;end;end);if M4 then if z4 then if W4==1 then do return V4[i4]();end;else return V4[i4](V(V4,i4+0X1,L4));end;elseif i4 then do return V(V4,i4,W4);end;end;else if C(z4)~="\s\116\114\i\110\g"then(E)(z4,0x000);else if M(z4,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if not(M(z4,"^.-:%d+: "))then(E)(z4,0);else E("Luraph Script:"..(YG[x4-0X1]or"(internal)").."\: "..x(z4),0X0);end;end;end;end;else do hG=function(...)local RK,uK=0,{};local yK=(I());local JK=0X1;local LK=(yK==a and SG or yK);local aK=({[0X1]=FG,[0X0002]=uK});local zK,eK=Cd(...);zK=zK-1;for ce=0X0,zK do if not(IG>ce)then break;else uK[ce]=eK[ce+1];end;end;if not OG then do eK=nil;end;elseif not(zG)then else uK[IG]={n=zK>=IG and zK-IG+1 or 0,V(eK,IG+0X1,zK+1)};end;if LK~=yK then(R)(hG,LK);end;local NK,ZK,pK,bK=A(function()while true do local PB=(TG[JK]);local LB=PB[0X003];do JK=JK+1;end;if not(LB<13)then do if LB>=20 then if LB<0x017 then do if LB>=21 then if LB==0X16 then if not uK[PB[0x02]]then JK=PB[0X005];end;else(uK)[PB[0x0002]]=w(uK[PB[5]],uK[PB[4]]);end;else uK[0X7]=uK[0X6][PB[1]];do JK=JK+1;end;JK=JK+0x1;PB=TG[JK];local Jo=(7);JK=JK+0x1;local Bo=(uK[0X7]);uK[Jo+0x1]=Bo;(uK)[Jo]=Bo[PB[1]];JK=JK+0X0001;Jo=0x007;do uK[Jo]=uK[Jo](uK[Jo+1]);end;do RK=Jo;end;PB=TG[JK];JK=JK+0x1;uK[8]=LK[PB[0X006]];JK=JK+1;(uK)[0X9]=uK[0X2];do JK=JK+1;end;Jo=0X8;(uK)[Jo]=uK[Jo](uK[Jo+1]);do RK=Jo;end;PB=TG[JK];JK=JK+1;Jo=8;Bo=uK[8];(uK)[Jo+0X00001]=Bo;uK[Jo]=Bo[PB[1]];do JK=JK+0X1;end;Jo=0X08;uK[Jo]=uK[Jo](uK[Jo+0X1]);RK=Jo;do PB=TG[JK];end;JK=JK+0X1;if uK[0x007]~=uK[8]then do JK=PB[0X2];end;end;end;end;else do if LB<25 then if LB==0X0018 then uK[7]=LK[PB[6]];PB=TG[JK];JK=JK+0X001;local nX=(7);do(uK)[0X0008]=PB[0X0006];end;do PB=TG[JK];end;do JK=JK+1;end;do uK[0X9]=uK[6][PB[1]];end;JK=JK+1;JK=JK+1;JK=JK+0x1;do(uK)[10]=false;end;JK=JK+0X01;do RK=nX+4-0X1;end;uK[nX](V(uK,nX+1,RK));RK=nX-0X0001;do JK=JK+0X001;end;JK=JK+1;do PB=TG[JK];end;JK=JK+0X00001;do JK=PB[5];end;else uK[PB[2]]={V({},0X01,PB[5])};end;else if LB==0X1A then local Mo,Eo=PB[0X2],PB[0x5];if Eo==0 then else RK=Mo+Eo-1;end;local uo,Vo=nil,nil;local lo=PB[0X00004];if Eo~=0X1 then uo,Vo=Cd(uK[Mo](V(uK,Mo+0X1,RK)));else uo,Vo=Cd(uK[Mo]());end;do if lo==0x1 then do RK=Mo-1;end;else if lo==0 then uo=uo+Mo-1;RK=uo;else uo=Mo+lo-0X00002;RK=uo+0X1;end;local NH=(0X0);for T_=Mo,uo do do NH=NH+0X001;end;(uK)[T_]=Vo[NH];end;end;end;else do uK[PB[0x02]]=LK[PB[0X0006]];end;end;end;end;end;else if not(LB>=0x0010)then if not(LB<14)then if LB==15 then for ee=PB[0X2],PB[5]do do uK[ee]=nil;end;end;else do(uK)[0]=LK[PB[0x06]];end;do PB=TG[JK];end;local KY=(0);JK=JK+1;(uK)[1]=PB[6];JK=JK+1;(uK)[KY]=uK[KY](uK[KY+0X1]);RK=KY;do JK=JK+0X00001;end;JK=JK+1;PB=TG[JK];JK=JK+0x01;if not(not uK[0x0])then else JK=PB[5];end;end;else local b6=(PB[2]);local D6,Z6,Q6=uK[b6]();if D6 then uK[b6+1]=Z6;uK[b6+2]=Q6;JK=PB[5];end;end;else if LB<0x12 then if LB~=0x0011 then local uQ=(PB[0X2]);local iQ,BQ=uK[uQ]();if iQ then JK=PB[0X5];uK[uQ+0X0003]=BQ;end;else uK[0x004]=LK[PB[0X06]];JK=JK+1;(uK)[5]=uK[0];local Xu=(0x0004);JK=JK+1;local Ou=2;do if Ou==0X0 then else RK=Xu+Ou-1;end;end;local du,ou,bu=4,nil,nil;if Ou==0X00001 then do ou,bu=Cd(uK[Xu]());end;else ou,bu=Cd(uK[Xu](V(uK,Xu+1,RK)));end;if du~=1 then if du~=0x0 then ou=Xu+du-2;RK=ou+1;else do ou=ou+Xu-1;end;RK=ou;end;local WI=(0X0);for Sl=Xu,ou do WI=WI+0X1;uK[Sl]=bu[WI];end;else do RK=Xu-1;end;end;PB=TG[JK];JK=JK+1;Xu=4;local Qu=(h(function(...)t();for Qo,wo in...do t(true,Qo,wo);end;end));Qu(uK[Xu],uK[Xu+0X01],uK[Xu+2]);RK=Xu;uK[Xu]=Qu;do JK=PB[0X0005];end;end;else if LB==0X13 then uK[0X00]=LK[PB[0X6]];JK=JK+0X0001;JK=JK+1;do PB=TG[JK];end;local WO=0;JK=JK+1;(uK)[1]=PB[6];JK=JK+0X1;uK[WO]=uK[WO](uK[WO+1]);RK=WO;PB=TG[JK];JK=JK+0X1;uK[0X00001]=LK[PB[0X006]];do JK=JK+1;end;JK=JK+1;PB=TG[JK];JK=JK+0x1;uK[0X0002]=LK[PB[0X6]];PB=TG[JK];do JK=JK+1;end;do(uK)[2]=uK[2][PB[1]];end;JK=JK+0X001;do JK=JK+1;end;PB=TG[JK];JK=JK+0x001;do if not(uK[2])then else JK=PB[0X5];end;end;else(uK)[PB[2]]={};end;end;end;end;end;else do if not(LB>=0X6)then if not(LB<0X3)then if not(LB>=0X4)then else if LB==5 then uK[PB[0X2]]=uK[PB[0x5]][PB[0X1]];else local Hn=(PB[2]);local sn=(h(function(...)t();do for CG,HG in...do(t)(true,CG,HG);end;end;end));sn(uK[Hn],uK[Hn+0X01],uK[Hn+2]);RK=Hn;do uK[Hn]=sn;end;JK=PB[0x5];end;end;else if LB<1 then local NR=PB[0X0002];for vC=NR,NR+(PB[0X5]-0x0001)do(uK)[vC]=eK[IG+(vC-NR)+1];end;else if LB==0x002 then JK=PB[0X005];else(uK)[0]=LK[PB[6]];PB=TG[JK];do JK=JK+1;end;uK[0]=uK[0][PB[1]];PB=TG[JK];JK=JK+0X01;do if not uK[0X00]then JK=PB[5];end;end;end;end;end;else if not(LB<9)then if not(LB>=0xb)then if LB==0X0000A then do uK[0X0]=LK[PB[6]];end;PB=TG[JK];do JK=JK+0X1;end;uK[0X0]=uK[0][PB[1]];PB=TG[JK];JK=JK+0X001;uK[0X0]=uK[0x00][PB[0x1]];PB=TG[JK];JK=JK+0x1;if uK[0X0]~=PB[1]then JK=PB[2];end;else if uK[PB[0X5]]<=uK[PB[0X4]]then JK=PB[2];end;end;else if LB~=0Xc then uK[PB[2]]=PB[6];else repeat local r2,L2=iG,(uK);if#r2>0x0 then local FU={};for Dc,Ec in l,r2 do for Fi,Wi in l,Ec do if Wi[1]==L2 and Wi[0x002]>=0 then local RB=Wi[2];if not(not FU[RB])then else(FU)[RB]={L2[RB]};end;Wi[0X00001]=FU[RB];Wi[2]=0x1;end;end;end;end;until true;return;end;end;else do if LB<0X0007 then local XV=JG[PB[5]];local ZV=(XV[0x4]);local LV=(nil);local hV=#ZV;if not(hV>0X0)then else LV={};do for Nl=1,hV do local Zl=ZV[Nl];if Zl[0X00001]==0 then(LV)[Nl-0X1]={uK,Zl[2]};else do LV[Nl-0x1]=cG[Zl[0X02]];end;end;end;end;(H)(iG,LV);end;uK[PB[2]]=ed(LK,XV,LV);else if LB==8 then uK[0X00007]=LK[PB[6]];JK=JK+1;do JK=JK+0X1;end;PB=TG[JK];JK=JK+1;(uK)[7]=uK[0X7][PB[0x00001]];do PB=TG[JK];end;do JK=JK+1;end;uK[7]=uK[0X7][PB[1]];PB=TG[JK];JK=JK+1;(uK)[8]=uK[0X6][PB[1]];PB=TG[JK];JK=JK+1;if not(not(uK[8]<=uK[7]))then else JK=PB[0X2];end;else(uK)[PB[2]]=uK[PB[0x5]];end;end;end;end;end;end;end;end;end);if not(NK)then if C(ZK)=="string"then if M(ZK,"\097\116t\e\m\112t\ t\111 \121\105eld\ a\099\114\111\ss \m\etame\116\104\111\d\/\C%\045ca\l\l\ b\oun\d\097\114y")then return coroutine.yield();end;if M(ZK,"^\.\-:\%\d\+\058\032")then(E)("Luraph Script:"..(YG[JK-0X1]or"(internal)")..": "..x(ZK),0);else E(ZK,0);end;else(E)(ZK,0X000);end;else if ZK then if bK==1 then do return uK[pK]();end;else return uK[pK](V(uK,pK+0X1,RK));end;elseif not(pK)then else return V(uK,pK,bK);end;end;end;end;end;else do hG=function(...)local XW=1;local OW=({});local mW=(I());local vW=({[0X0002]=OW,[0X1]=FG});local xW=0;local YW,aW=Cd(...);YW=YW-0X1;local lW=(mW==a and SG or mW);for Mk=0,YW do if not(IG>Mk)then break;else do(OW)[Mk]=aW[Mk+0X1];end;end;end;if not OG then aW=nil;elseif zG then do(OW)[IG]={n=YW>=IG and YW-IG+1 or 0x0,V(aW,IG+1,YW+0X1)};end;end;if lW==mW then else R(hG,lW);end;local yW,AW,HW,RW=A(function()while true do local bj=TG[XW];local Zj=bj[3];XW=XW+0X1;if Zj>=18 then if not(Zj>=0x1b)then if Zj<22 then if Zj>=20 then do if Zj==0X000015 then do OW[0X5]=OW[5]*OW[1];end;local tR=(6);do bj=TG[XW];end;XW=XW+0x001;do(OW)[0X6]=lW[bj[6]];end;bj=TG[XW];XW=XW+0X1;(OW)[6]=OW[0x6][bj[1]];XW=XW+1;XW=XW+0X1;bj=TG[XW];XW=XW+1;do OW[7]=OW[3][bj[1]];end;XW=XW+1;do XW=XW+0X1;end;XW=XW+0x1;OW[tR]=OW[tR](OW[tR+0X1]);xW=tR;XW=XW+0X1;OW[6]=OW[0X6]<OW[4];do bj=TG[XW];end;XW=XW+0X01;if not(not OW[6])then else do XW=bj[0X5];end;end;else repeat local Sk,bk=iG,(OW);if not(#Sk>0)then else local t8=({});for ju,du in l,Sk do for ov,Ev in l,du do do if not(Ev[1]==bk and Ev[0X2]>=0X000)then else local KY=(Ev[2]);if not(not t8[KY])then else(t8)[KY]={bk[KY]};end;Ev[0x1]=t8[KY];(Ev)[2]=1;end;end;end;end;end;until true;return;end;end;else do if Zj~=0X13 then OW[0x4]=OW[4]*OW[1];bj=TG[XW];XW=XW+1;OW[5]=OW[3][bj[0x1]];XW=XW+1;do XW=XW+0x0001;end;do bj=TG[XW];end;XW=XW+1;OW[0x00005]=OW[0X5]<bj[0X1];bj=TG[XW];XW=XW+1;if not(not OW[0x0005])then else XW=bj[5];end;else local Qe=(10);xW=Qe+4-0x1;OW[Qe]=OW[Qe](V(OW,Qe+0x1,xW));xW=Qe;XW=XW+0x1;(OW)[0X00009]=OW[9]+OW[10];do bj=TG[XW];end;local oe=cG[0X0];do XW=XW+0x1;end;(OW[0x00008])[bj[6]]=OW[9];XW=XW+1;do OW[0X00008]=oe[0x1][oe[2]];end;do bj=TG[XW];end;XW=XW+1;(OW)[0X9]=lW[bj[0X00006]];bj=TG[XW];do XW=XW+0X001;end;OW[9]=OW[9][bj[1]];XW=XW+1;XW=XW+1;XW=XW+1;oe=cG[0];(OW)[10]=oe[1][oe[0X2]];bj=TG[XW];XW=XW+1;OW[0XA]=OW[0Xa][bj[1]];bj=TG[XW];do XW=XW+0X1;end;OW[10]=OW[10][bj[0X1]];do XW=XW+0x001;end;XW=XW+1;XW=XW+1;oe=cG[0X1];do(OW)[11]=oe[1][oe[2]];end;do bj=TG[XW];end;XW=XW+1;(OW)[11]=OW[0x00B][bj[1]];XW=XW+1;do XW=XW+0X001;end;XW=XW+1;oe=cG[0x0];(OW)[12]=oe[0X00001][oe[0X2]];do XW=XW+0X1;end;XW=XW+1;do bj=TG[XW];end;XW=XW+0x00001;do(OW)[0Xc]=OW[0X00C][bj[1]];end;bj=TG[XW];XW=XW+0X1;(OW)[12]=OW[0xc][bj[0X00001]];do XW=XW+1;end;do XW=XW+0x1;end;do XW=XW+0X01;end;Qe=9;do xW=Qe+0X4-1;end;(OW)[Qe]=OW[Qe](V(OW,Qe+1,xW));do xW=Qe;end;XW=XW+1;do XW=XW+0X00001;end;bj=TG[XW];XW=XW+1;OW[0X08][bj[0X06]]=OW[9];XW=XW+0x01;oe=cG[4];(OW)[0X0008]=oe[1][oe[0X2]];bj=TG[XW];XW=XW+1;OW[8]=OW[8][bj[1]];local Ue=OW[0X0008];bj=TG[XW];XW=XW+0X1;Qe=0x8;OW[Qe+1]=Ue;do(OW)[Qe]=Ue[bj[0X001]];end;do bj=TG[XW];end;XW=XW+1;do OW[10]=bj[0X6];end;XW=XW+0X0001;do Qe=8;end;(OW[Qe])(OW[Qe+0X1],OW[Qe+0X2]);xW=Qe-1;XW=XW+0x1;OW[0x8]=true;bj=TG[XW];do XW=XW+0X1;end;lW[bj[6]]=OW[0x0008];bj=TG[XW];XW=XW+0x001;(OW)[0X008]=lW[bj[6]];do XW=XW+1;end;XW=XW+0X01;bj=TG[XW];XW=XW+1;OW[8]=OW[0X8][bj[0X1]];do bj=TG[XW];end;XW=XW+0X001;do OW[0X9]=bj[6];end;do XW=XW+1;end;Qe=0X08;OW[Qe](OW[Qe+1]);do xW=Qe-1;end;bj=TG[XW];XW=XW+0X1;XW=bj[5];end;end;end;else if not(Zj>=24)then do if Zj~=23 then OW[bj[2]]=bj[6];else local AY=(cG[0X0]);(OW)[0X8]=AY[1][AY[2]];local oY=0X0000B;XW=XW+1;XW=XW+0x1;XW=XW+0X00001;AY=cG[0];OW[9]=AY[0X00001][AY[2]];XW=XW+1;XW=XW+0X1;do bj=TG[XW];end;XW=XW+0X001;(OW)[9]=OW[9][bj[0x1]];do XW=XW+0x001;end;XW=XW+1;do bj=TG[XW];end;XW=XW+1;do(OW)[0Xa]=lW[bj[0X00006]];end;XW=XW+0X1;XW=XW+1;bj=TG[XW];XW=XW+0x1;OW[10]=OW[10][bj[1]];bj=TG[XW];XW=XW+0x00001;(OW)[11]=lW[bj[6]];XW=XW+0x1;XW=XW+1;bj=TG[XW];XW=XW+0x1;OW[11]=OW[11][bj[0X1]];do XW=XW+1;end;(OW)[0xc]=OW[0X007];do XW=XW+1;end;do OW[oY]=OW[oY](OW[oY+0X0001]);end;xW=oY;bj=TG[XW];XW=XW+1;do OW[12]=bj[6]*OW[0];end;XW=XW+0x00001;OW[0X0b]=OW[11]<OW[0x0c];bj=TG[XW];XW=XW+1;do if not OW[0X0B]then XW=bj[5];end;end;end;end;else do if Zj>=0x000019 then do if Zj==0X1a then OW[bj[0X2]]=lW[bj[0X6]];else(OW)[bj[0X2]]=L(OW[bj[0X00005]],OW[bj[4]]);end;end;else for H5=bj[2],bj[0x00005]do OW[H5]=nil;end;end;end;end;end;else do if not(Zj>=0X1F)then if not(Zj>=0X001d)then if Zj~=0X1C then local hl=(cG[0X00002]);(OW)[0x00001]=hl[1][hl[2]];do XW=XW+0X00001;end;do xW=1;end;(OW)[xW]=OW[xW]();bj=TG[XW];XW=XW+0X1;if not OW[1]then XW=bj[0X05];end;else local KN=(cG[bj[0X00005]]);OW[bj[0x2]]=KN[1][KN[2]];end;else if Zj~=30 then do if not(not(OW[bj[0X5]]<=OW[bj[4]]))then else XW=bj[0X02];end;end;else local Ie=(cG[3]);do(OW)[1]=Ie[0X1][Ie[0X2]];end;XW=XW+0X1;XW=XW+1;do bj=TG[XW];end;do XW=XW+0X01;end;OW[0X2]=lW[bj[0X6]];XW=XW+0x1;XW=XW+0x1;bj=TG[XW];do XW=XW+1;end;if OW[0X1]~=OW[2]then do XW=bj[0X00002];end;end;end;end;else if not(Zj>=33)then if Zj==32 then local OF=cG[0X0];(OW)[0]=OF[0X1][OF[2]];XW=XW+1;do OF=cG[1];end;do OW[0X1]=OF[1][OF[2]];end;XW=XW+0X0001;XW=XW+1;bj=TG[XW];do XW=XW+0x1;end;(OW[0X0])[bj[6]]=OW[1];bj=TG[XW];XW=XW+1;XW=bj[0x00005];else OW[0X0]=lW[bj[6]];XW=XW+0X1;XW=XW+0X1;local kN=0;bj=TG[XW];XW=XW+1;OW[0x000]=OW[0X0][bj[1]];bj=TG[XW];XW=XW+0X0001;do(OW)[1]=lW[bj[0X06]];end;XW=XW+1;do XW=XW+1;end;bj=TG[XW];XW=XW+0X1;do(OW)[0X1]=OW[1][bj[0x1]];end;bj=TG[XW];XW=XW+0x1;(OW)[0X1]=OW[0X001][bj[1]];bj=TG[XW];XW=XW+1;do OW[0X2]=bj[6];end;bj=TG[XW];XW=XW+1;OW[0X3]=bj[0x0006];XW=XW+0X001;do xW=kN+4-1;end;OW[kN]=OW[kN](V(OW,kN+1,xW));xW=kN;local rN=cG[0X0];do bj=TG[XW];end;XW=XW+0x01;(OW)[0]=bj[6]/OW[0X00000];do bj=TG[XW];end;XW=XW+1;OW[1]=bj[6]*OW[0];XW=XW+0x1;do(OW)[2]=rN[1][rN[2]];end;bj=TG[XW];XW=XW+1;(OW)[2]=OW[0x2][bj[1]];bj=TG[XW];XW=XW+1;do(OW)[3]=lW[bj[0X06]];end;bj=TG[XW];do XW=XW+0X1;end;do(OW)[3]=OW[3][bj[0x1]];end;XW=XW+1;XW=XW+0X1;XW=XW+1;rN=cG[0X001];do OW[0X4]=rN[0X1][rN[2]];end;bj=TG[XW];XW=XW+0x1;(OW)[4]=OW[4][bj[0X1]];XW=XW+0x1;do XW=XW+1;end;bj=TG[XW];XW=XW+1;OW[0X5]=bj[0X06];XW=XW+1;rN=cG[0X001];(OW)[0X6]=rN[1][rN[2]];XW=XW+1;XW=XW+1;bj=TG[XW];XW=XW+1;OW[6]=OW[0X6][bj[1]];XW=XW+0X1;XW=XW+1;XW=XW+0X1;kN=0X003;xW=kN+0X04-1;(OW)[kN]=OW[kN](V(OW,kN+1,xW));do xW=kN;end;XW=XW+0X001;do XW=XW+0X1;end;bj=TG[XW];XW=XW+0X0001;do OW[0X00004]=lW[bj[0x6]];end;XW=XW+0X001;XW=XW+0X0001;bj=TG[XW];XW=XW+1;do OW[0X4]=OW[0X4][bj[0x0001]];end;bj=TG[XW];XW=XW+0X0001;OW[5]=OW[2][bj[0X1]];XW=XW+0x01;XW=XW+0X0001;bj=TG[XW];XW=XW+1;OW[0x6]=bj[6];bj=TG[XW];XW=XW+0X0001;OW[7]=OW[0x2][bj[1]];XW=XW+0X00001;kN=4;xW=kN+4-0X001;(OW)[kN]=OW[kN](V(OW,kN+1,xW));do xW=kN;end;XW=XW+0X1;OW[0x00003]=OW[0x03]-OW[4];bj=TG[XW];do XW=XW+0X00001;end;(OW)[0X4]=OW[0X03][bj[1]];XW=XW+0X1;XW=XW+1;bj=TG[XW];XW=XW+1;OW[4]=OW[0X0004]<bj[1];do bj=TG[XW];end;do XW=XW+1;end;if not(not OW[4])then else do XW=bj[5];end;end;end;else if not(Zj<0X0022)then if Zj~=0x00023 then else do OW[bj[2]]=OW[bj[0X05]]+OW[bj[4]];end;end;else local OZ=cG[0X002];do OW[0X001]=OZ[0x1][OZ[2]];end;XW=XW+1;do xW=1;end;(OW)[xW]=OW[xW]();bj=TG[XW];do XW=XW+1;end;if not OW[1]then XW=bj[5];end;end;end;end;end;end;else if Zj>=9 then if not(Zj>=0x00D)then if Zj<11 then do if Zj==10 then local wH=cG[4];(OW)[3]=wH[0X1][wH[2]];do XW=XW+0X01;end;XW=XW+1;bj=TG[XW];XW=XW+0x01;OW[3]=OW[3][bj[0X001]];do bj=TG[XW];end;XW=XW+1;do(OW)[3]=OW[3][bj[1]];end;bj=TG[XW];XW=XW+0x1;if not(bj[6]<OW[0X003])then do XW=bj[2];end;end;else(OW)[bj[0X2]]=OW[bj[0X5]]/bj[1];end;end;else do if Zj==0XC then do(OW)[bj[2]]=OW[bj[5]];end;else local tI=(JG[bj[0x0005]]);local cI=nil;local nI=tI[4];local yI=(#nI);if not(yI>0)then else do cI={};end;for Z0=0x00001,yI do local r0=(nI[Z0]);do if r0[0x1]==0X000 then cI[Z0-0X1]={OW,r0[0X002]};else(cI)[Z0-0X1]=cG[r0[2]];end;end;end;H(iG,cI);end;(OW)[bj[0X2]]=ed(lW,tI,cI);end;end;end;else if Zj<15 then if Zj~=14 then OW[0Xc]=bj[0X6];bj=TG[XW];XW=XW+0X1;(OW)[0Xd]=lW[bj[6]];bj=TG[XW];XW=XW+1;do OW[13]=OW[13][bj[0x001]];end;XW=XW+0X01;(OW)[14]=OW[6];local MV=(0Xd);XW=XW+1;OW[MV]=OW[MV](OW[MV+1]);xW=MV;XW=XW+0X1;do XW=XW+0X01;end;bj=TG[XW];XW=XW+0X0001;OW[0XE]=bj[0x0006]*OW[0X0];XW=XW+1;(OW)[13]=OW[0Xd]<OW[0XE];bj=TG[XW];XW=XW+0X1;if not OW[0X0000D]then do XW=bj[0X5];end;end;else local UB,eB=bj[0X00002],((bj[0x4]-0X1)*0X32);local OB=OW[UB];for yx=1,bj[0X5]do do(OB)[eB+yx]=OW[UB+yx];end;end;end;else if not(Zj<16)then if Zj~=17 then do if not OW[bj[2]]then XW=bj[0X5];end;end;else(OW)[0x0]=lW[bj[0X006]];XW=XW+0X001;local lj=(0);do XW=XW+1;end;local qj=(cG[0X0]);XW=XW+1;(OW)[0X00001]=qj[0X1][qj[0X2]];bj=TG[XW];XW=XW+0X1;(OW)[1]=OW[1][bj[1]];XW=XW+1;qj=cG[1];OW[2]=qj[0X1][qj[2]];XW=XW+0X01;OW[3]=true;XW=XW+0x01;do xW=lj+4-0X1;end;(OW)[lj]=OW[lj](V(OW,lj+0X1,xW));do xW=lj;end;bj=TG[XW];do XW=XW+1;end;if not(not(bj[0X6]<OW[0X000]))then else XW=bj[2];end;end;else(OW)[6]=OW[3][bj[1]];do XW=XW+0X01;end;XW=XW+1;do bj=TG[XW];end;XW=XW+0X01;XW=bj[0X5];end;end;end;else if Zj>=0x4 then do if Zj<6 then if Zj==5 then XW=bj[0X5];else local IR=(cG[3]);OW[0X0001]=IR[0x1][IR[2]];bj=TG[XW];XW=XW+1;do OW[0X2]=lW[bj[0X6]];end;XW=XW+1;do XW=XW+1;end;bj=TG[XW];do XW=XW+1;end;do if OW[1]~=OW[0x2]then do XW=bj[2];end;end;end;end;else do if not(Zj<0x7)then if Zj~=0x8 then OW[0X00]=false;bj=TG[XW];local lX=cG[0X00];XW=XW+1;do lW[bj[6]]=OW[0X0];end;bj=TG[XW];XW=XW+0X1;OW[0X0]=lW[bj[0X006]];XW=XW+0X1;OW[0X0001]=lX[1][lX[0x2]];bj=TG[XW];XW=XW+0X1;OW[0X01]=OW[0X001][bj[1]];XW=XW+0x1;do lX=cG[1];end;OW[2]=lX[1][lX[2]];do XW=XW+1;end;local wX=0;(OW)[3]=true;XW=XW+0X1;xW=wX+0X0004-0x1;OW[wX]=OW[wX](V(OW,wX+0X1,xW));do xW=wX;end;bj=TG[XW];XW=XW+0X00001;do if not(OW[0]<=bj[0X1])then do XW=bj[0X02];end;end;end;else if OW[bj[0X2]]then XW=bj[0X5];end;end;else do(OW)[0X7]=OW[0X3][bj[0X1]];end;do XW=XW+0X1;end;XW=XW+1;do bj=TG[XW];end;do XW=XW+0X1;end;XW=bj[0X5];end;end;end;end;else do if not(Zj>=2)then if Zj~=0X1 then local f7=(bj[5]);local q7=(bj[2]);xW=q7+f7-0x01;repeat local kc,fc=iG,OW;if not(#kc>0)then else local i6={};for nu,Qu in l,kc do for JB,kB in l,Qu do do if kB[1]==fc and kB[0x00002]>=0x0 then local SI=kB[0X002];if not i6[SI]then(i6)[SI]={fc[SI]};end;kB[0X01]=i6[SI];do(kB)[2]=1;end;end;end;end;end;end;until true;return true,q7,f7;else OW[7]=lW[bj[0X00006]];XW=XW+1;local RV=0X7;XW=XW+1;do bj=TG[XW];end;XW=XW+0X001;OW[0X7]=OW[0X7][bj[0X1]];bj=TG[XW];do XW=XW+1;end;OW[8]=OW[3][bj[0X1]];XW=XW+1;(OW)[RV]=OW[RV](OW[RV+0X1]);xW=RV;XW=XW+1;OW[7]=OW[7]<OW[0X5];bj=TG[XW];XW=XW+0X1;if not(not OW[0X7])then else XW=bj[0X5];end;end;else if Zj~=3 then lW[bj[0X6]]=OW[bj[2]];else do OW[bj[2]]={V({},1,bj[0X5])};end;end;end;end;end;end;end;end;end);if yW then if AW then if RW==1 then return OW[HW]();else return OW[HW](V(OW,HW+0X1,xW));end;elseif not(HW)then else return V(OW,HW,RW);end;else do if C(AW)~='\115t\114\ing'then E(AW,0X0);else if not(M(AW,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if M(AW,'\^\046\-:\%\d\+: ')then(E)("L\117ra\112\h\ S\c\114\105\112\116\:"..(YG[XW-0X1]or"\(\in\116\101rn\097\l\)").."\058 "..x(AW),0x0);else(E)(AW,0x0000);end;end;end;end;end;end;end;end;end;end;else if not(lG<71)then if lG<0X0048 then hG=function(...)local NE={};local YE=1;local QE=I();local DE=({[0X1]=FG,[0X0002]=NE});local qE,LE=Cd(...);qE=qE-1;for UR=0,qE do do if not(IG>UR)then break;else NE[UR]=LE[UR+1];end;end;end;if not OG then do LE=nil;end;elseif zG then(NE)[IG]={n=qE>=IG and qE-IG+0X1 or 0X0,V(LE,IG+0X0001,qE+1)};end;local RE=0x0;local CE=(QE==a and SG or QE);if CE==QE then else(R)(hG,CE);end;local ZE,kE,VE,rE=A(function()while true do local Yy=(TG[YE]);local Iy=Yy[0X3];YE=YE+0x01;if Iy<9 then if Iy>=0X00004 then if Iy>=0X00006 then if not(Iy>=0X7)then do(NE)[Yy[2]]=f(NE[Yy[5]]);end;else if Iy~=8 then else(NE)[Yy[2]]=N(NE[Yy[5]],NE[Yy[4]]);end;end;else do if Iy~=5 then if not(not NE[Yy[2]])then else YE=Yy[0X5];end;else NE[Yy[0x0002]][NE[Yy[0X005]]]=NE[Yy[4]];end;end;end;else if not(Iy<2)then if Iy~=0x3 then YE=Yy[0X0005];else local na=(JG[Yy[5]]);local Ma,sa=na[0x04],nil;local ra=#Ma;if ra>0X00000 then sa={};for iV=0X00001,ra do local rV=(Ma[iV]);if rV[1]==0 then sa[iV-0X00001]={NE,rV[2]};else sa[iV-1]=cG[rV[0X2]];end;end;H(iG,sa);end;NE[Yy[0X0002]]=ed(CE,na,sa);end;else if Iy==0X001 then do repeat local EZ,FZ=iG,(NE);do if#EZ>0x0 then local E_={};for AL,TL in l,EZ do do for RO,eO in l,TL do if eO[1]==FZ and eO[2]>=0X0 then local Mr=eO[2];if not(not E_[Mr])then else E_[Mr]={FZ[Mr]};end;do eO[0x1]=E_[Mr];end;eO[0X2]=0x1;end;end;end;end;end;end;until true;end;return;else local Rq=Yy[5];local oq=Yy[0x2];RE=oq+Rq-1;repeat local nY,NY=iG,(NE);if#nY>0X0 then local bf=({});for ll,Nl in l,nY do do for CW,fW in l,Nl do if not(fW[0X00001]==NY and fW[2]>=0)then else local f4=fW[0X2];if not(not bf[f4])then else(bf)[f4]={NY[f4]};end;fW[0X1]=bf[f4];do(fW)[0x2]=1;end;end;end;end;end;end;until true;return true,oq,Rq;end;end;end;else if Iy<14 then if Iy<11 then if Iy==10 then NE[Yy[0x2]]=NE[Yy[0X00005]]/NE[Yy[4]];else NE[0X0]=CE[Yy[6]];YE=YE+0X1;do YE=YE+1;end;Yy=TG[YE];YE=YE+1;NE[0X0]=NE[0x0][Yy[1]];do Yy=TG[YE];end;YE=YE+0x1;do YE=Yy[0X5];end;end;else if Iy<12 then do(NE)[Yy[0X002]]={V({},0x01,Yy[0X05])};end;else do if Iy~=13 then repeat local cu,Lu=iG,(NE);if not(#cu>0)then else local ct={};do for gG,NG in l,cu do for MU,eU in l,NG do do if not(eU[1]==Lu and eU[2]>=0X0)then else local yH=eU[0X2];if not ct[yH]then ct[yH]={Lu[yH]};end;(eU)[1]=ct[yH];(eU)[0X2]=1;end;end;end;end;end;end;until true;local z6=Yy[2];return false,z6,z6;else local hh=(cG[0X0]);NE[0]=hh[0X1][hh[0x2]];Yy=TG[YE];local qh=(0X0);YE=YE+1;local Ah=(NE[0X0000]);(NE)[qh+0X1]=Ah;(NE)[qh]=Ah[Yy[1]];YE=YE+1;qh=0X0000;(NE)[qh]=NE[qh](NE[qh+1]);RE=qh;end;end;end;end;else if Iy<16 then if Iy~=0X00F then NE[0]=CE[Yy[0X6]];local UH=0X0;YE=YE+0x1;YE=YE+1;Yy=TG[YE];do YE=YE+1;end;NE[1]=Yy[6];do YE=YE+1;end;(NE)[UH]=NE[UH](NE[UH+0X1]);RE=UH;do YE=YE+1;end;NE[0]=not NE[0X0];Yy=TG[YE];YE=YE+1;if not(not NE[0])then else YE=Yy[0X5];end;else NE[Yy[2]]=Yy[6];end;else do if not(Iy>=17)then do NE[Yy[0X2]]=CE[Yy[6]];end;else do if Iy~=0X12 then(NE)[Yy[2]]=NE[Yy[5]]*NE[Yy[0X4]];else(NE)[Yy[2]]=NE[Yy[0X5]]~=NE[Yy[0X4]];end;end;end;end;end;end;end;end;end);do if ZE then if kE then if rE~=0x1 then do return NE[VE](V(NE,VE+0X1,RE));end;else return NE[VE]();end;elseif not(VE)then else return V(NE,VE,rE);end;else if C(kE)~="string"then E(kE,0);else if not(M(kE,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(M(kE,"^.-:%d+: "))then(E)(kE,0x0);else(E)("Luraph Script:"..(YG[YE-1]or"(internal)")..": "..x(kE),0X0);end;end;end;end;end;else if lG==0x49 then hG=function(...)local Dl=({});local ml=1;local Jl=(I());local Tl=({[0X1]=FG,[0X0002]=Dl});local Fl,Vl=Cd(...);do Fl=Fl-1;end;for N1=0,Fl do if IG>N1 then Dl[N1]=Vl[N1+1];else break;end;end;local Ul,yl=0X000,((Jl==a and SG or Jl));if not OG then Vl=nil;elseif zG then(Dl)[IG]={n=Fl>=IG and Fl-IG+0X00001 or 0,V(Vl,IG+1,Fl+0X1)};end;do if yl~=Jl then(R)(hG,yl);end;end;local xl,Kl,Rl,Ml=A(function()while true do local NX=(TG[ml]);local LX=NX[3];ml=ml+0X1;if LX<17 then do if not(LX>=0X8)then do if LX<0X00004 then do if not(LX>=2)then do if LX~=1 then repeat local kF,iF=iG,(Dl);if#kF>0X0 then local Dd=({});for QX,GX in l,kF do for mL,tL in l,GX do if not(tL[0X1]==iF and tL[2]>=0x00000)then else local rW=tL[2];if not Dd[rW]then Dd[rW]={iF[rW]};end;tL[1]=Dd[rW];tL[0X002]=1;end;end;end;end;until true;local RK=NX[0X002];return false,RK,RK+NX[5]-2;else(Dl)[5]=Dl[3][NX[0X1]];do ml=ml+1;end;ml=ml+1;NX=TG[ml];do ml=ml+1;end;if not(not Dl[0X00005])then else ml=NX[5];end;end;end;else if LX~=0x3 then(Dl)[0]=true;do NX=TG[ml];end;ml=ml+0X1;local Dm=(cG[0x000]);yl[NX[6]]=Dl[0];ml=ml+0X0001;do Dl[0X0]=Dm[0x001][Dm[0x2]];end;NX=TG[ml];ml=ml+0X1;do Dl[0]=Dl[0][NX[1]];end;ml=ml+0X1;ml=ml+0X01;do ml=ml+1;end;do Ul=0X0;end;local nm=(0);(Dl[Ul])();Ul=Ul-1;ml=ml+0X1;Dm=cG[1];Dl[0X0]=Dm[1][Dm[2]];do NX=TG[ml];end;ml=ml+1;local zm=Dl[0];do(Dl)[nm+0X1]=zm;end;do(Dl)[nm]=zm[NX[1]];end;ml=ml+0x1;nm=0X0000;(Dl[nm])(Dl[nm+1]);Ul=nm-1;do ml=ml+1;end;ml=ml+1;ml=ml+0X1;Dm=cG[0X00000];(Dl)[0X0]=Dm[0X1][Dm[2]];NX=TG[ml];do ml=ml+1;end;Dl[0X000]=Dl[0][NX[1]];NX=TG[ml];ml=ml+1;if not Dl[0X0]then ml=NX[5];end;else end;end;end;else if LX>=0X6 then if LX~=0X7 then(Dl)[0]=yl[NX[0X00006]];do ml=ml+1;end;Ul=0;Dl[Ul]=Dl[Ul]();NX=TG[ml];ml=ml+1;if not(not Dl[0X0])then else ml=NX[5];end;else Dl[NX[0X2]]=NX[0X006];end;else do if LX==5 then Dl[4]=yl[NX[6]];do ml=ml+0X1;end;ml=ml+1;NX=TG[ml];ml=ml+1;local Jw=(4);do Dl[0X5]=Dl[3][NX[0X1]];end;do ml=ml+1;end;do ml=ml+0X1;end;NX=TG[ml];ml=ml+0X01;(Dl)[0x005]=Dl[0x5][NX[0X1]];ml=ml+0x1;ml=ml+0X1;ml=ml+1;do(Dl)[Jw]=Dl[Jw](Dl[Jw+0x0001]);end;Ul=Jw;do NX=TG[ml];end;ml=ml+1;do if not(Dl[0X4]<=NX[1])then ml=NX[0X02];end;end;else Dl[NX[0X02]]=Dl[NX[5]][NX[0X1]];end;end;end;end;end;else if LX<0xC then if not(LX<0X000A)then if LX~=11 then local jH=(NX[2]);local hH,qH,NH=Dl[jH]();if hH then(Dl)[jH+1]=qH;Dl[jH+2]=NH;ml=NX[5];end;else(Dl)[0]=yl[NX[0X6]];local pV=(0x00000);ml=ml+0X1;ml=ml+1;NX=TG[ml];ml=ml+1;(Dl)[0]=Dl[0][NX[0X1]];ml=ml+0X1;do ml=ml+0X01;end;do NX=TG[ml];end;ml=ml+1;Dl[0X01]=NX[0X6];do ml=ml+1;end;(Dl[pV])(Dl[pV+1]);do Ul=pV-1;end;ml=ml+1;ml=ml+0X00001;NX=TG[ml];ml=ml+0X01;do(Dl)[0X0]=yl[NX[6]];end;NX=TG[ml];ml=ml+1;do(Dl)[0]=Dl[0][NX[0x1]];end;ml=ml+1;ml=ml+0X1;NX=TG[ml];do ml=ml+1;end;if Dl[0]then do ml=NX[0x5];end;end;end;else if LX==0X9 then local io=(NX[2]);local Mo=((NX[4]-1)*50);local yo=Dl[io];for m_=0X1,NX[5]do yo[Mo+m_]=Dl[io+m_];end;else local Eq=cG[0X1];Dl[0X00001]=Eq[1][Eq[0x2]];ml=ml+0X0001;local lq=(1);ml=ml+1;do NX=TG[ml];end;ml=ml+0X1;local Zq=Dl[0X1];(Dl)[lq+0X1]=Zq;(Dl)[lq]=Zq[NX[1]];ml=ml+1;do lq=0X1;end;do Dl[lq]=Dl[lq](Dl[lq+0X1]);end;Ul=lq;NX=TG[ml];ml=ml+0x00001;if Dl[1]then ml=NX[0x5];end;end;end;else if LX>=0X0E then if LX>=15 then if LX==0X10 then Dl[7]=yl[NX[0x6]];do ml=ml+0X001;end;ml=ml+0X01;local zP=(7);do NX=TG[ml];end;do ml=ml+1;end;(Dl)[0X00008]=Dl[0x3][NX[0X01]];ml=ml+0x1;ml=ml+0X1;do ml=ml+1;end;do Dl[zP]=Dl[zP](Dl[zP+1]);end;Ul=zP;NX=TG[ml];ml=ml+0X1;if not Dl[7]then ml=NX[5];end;else Dl[4]=yl[NX[0x0006]];local lc=0X4;NX=TG[ml];do ml=ml+1;end;Dl[0X005]=Dl[3][NX[1]];do ml=ml+0X01;end;do(Dl)[lc]=Dl[lc](Dl[lc+0X00001]);end;Ul=lc;ml=ml+0x0001;do ml=ml+0X00001;end;NX=TG[ml];ml=ml+0X1;do if Dl[0x00004]then ml=NX[0x00005];end;end;end;else do for Lv=NX[2],NX[0X5]do(Dl)[Lv]=nil;end;end;end;else if LX~=13 then(Dl)[NX[2]]={V({},0x0001,NX[0X5])};else(Dl)[7]=yl[NX[0X06]];NX=TG[ml];ml=ml+1;Dl[7]=Dl[7][NX[0X1]];ml=ml+1;ml=ml+0X1;NX=TG[ml];ml=ml+0x001;if not(Dl[0X7])then else ml=NX[5];end;end;end;end;end;end;else if LX<26 then if LX<0x15 then do if LX<0X00013 then if LX==18 then local VX=(JG[NX[5]]);local lX=(VX[0X00004]);local DX=nil;local RX=#lX;if not(RX>0X0)then else DX={};for Iz=0X1,RX do local cz=lX[Iz];if cz[0x1]==0X000 then(DX)[Iz-0X1]={Dl,cz[0X00002]};else(DX)[Iz-1]=cG[cz[0x2]];end;end;(H)(iG,DX);end;(Dl)[NX[2]]=ed(yl,VX,DX);else Dl[0x5]=Dl[0X2][NX[1]];NX=TG[ml];ml=ml+0X1;(Dl)[6]=yl[NX[6]];do NX=TG[ml];end;ml=ml+1;(Dl)[6]=Dl[6][NX[0X1]];do NX=TG[ml];end;ml=ml+0X1;if Dl[5]==Dl[6]then else ml=NX[2];end;end;else if LX==20 then local Er=NX[0X2];local Rr,Mr=Dl[Er]();if Rr then for sk=0x1,NX[0X4]do do Dl[Er+sk]=Mr[sk];end;end;ml=NX[0X00005];end;else(Dl)[NX[0X00002]]=Dl[NX[0x5]]%Dl[NX[4]];end;end;end;else if LX<0X17 then if LX==0X16 then local K6=cG[1];do(Dl)[0X07]=K6[1][K6[0x02]];end;NX=TG[ml];local s6=(7);ml=ml+1;local D6=(Dl[0X0007]);Dl[s6+1]=D6;Dl[s6]=D6[NX[0X1]];do ml=ml+0X01;end;s6=0X00007;Dl[s6]=Dl[s6](Dl[s6+1]);Ul=s6;do NX=TG[ml];end;do ml=ml+0X0001;end;if Dl[0x7]then ml=NX[0X5];end;else do(Dl)[0X4]=yl[NX[6]];end;ml=ml+0X0001;ml=ml+1;NX=TG[ml];ml=ml+0X001;do(Dl)[4]=Dl[4][NX[0X1]];end;ml=ml+1;ml=ml+0X1;NX=TG[ml];do ml=ml+0X001;end;if not Dl[4]then ml=NX[0x5];end;end;else if LX<24 then(Dl)[0]=yl[NX[6]];do NX=TG[ml];end;ml=ml+0X1;Dl[0X0]=Dl[0X0][NX[0X1]];ml=ml+0X0001;ml=ml+0x1;NX=TG[ml];ml=ml+1;Dl[0]=Dl[0x0][NX[0X0001]];NX=TG[ml];ml=ml+0x001;Dl[0]=Dl[0X0][NX[1]];do NX=TG[ml];end;ml=ml+1;if Dl[0]<=NX[0X00001]then ml=NX[0X2];end;else if LX==0X00019 then if not(NX[6]<Dl[NX[0X04]])then ml=NX[0X2];end;else local T7=0X3;local Y7=Dl[2];Dl[T7+1]=Y7;Dl[T7]=Y7[NX[1]];NX=TG[ml];do ml=ml+0x1;end;Dl[5]=NX[6];ml=ml+1;T7=3;(Dl)[T7]=Dl[T7](Dl[T7+1],Dl[T7+2]);Ul=T7;NX=TG[ml];ml=ml+0x00001;if not(not Dl[0X003])then else ml=NX[5];end;end;end;end;end;else if LX<0X1E then if not(LX<0X1C)then if LX~=0X1D then(Dl)[NX[2]]=yl[NX[0x6]];else local MZ=cG[0X1];do Dl[0X4]=MZ[0x00001][MZ[0X2]];end;ml=ml+1;ml=ml+0X00001;NX=TG[ml];local AZ=(4);ml=ml+1;local dZ=(Dl[0X0004]);Dl[AZ+0X00001]=dZ;local ZZ=0X0003;(Dl)[AZ]=dZ[NX[1]];ml=ml+1;AZ=4;(Dl[AZ])(Dl[AZ+1]);Ul=AZ-1;ml=ml+1;do ml=ml+1;end;do NX=TG[ml];end;ml=ml+0X1;Dl[4]=yl[NX[6]];ml=ml+1;ml=ml+0X0001;ml=ml+0X1;Ul=4;local FZ=nil;(Dl[Ul])();Ul=Ul-0X001;do NX=TG[ml];end;ml=ml+1;do(Dl)[4]=Dl[3][NX[1]];end;ml=ml+1;ml=ml+0x1;NX=TG[ml];ml=ml+1;(Dl)[4]=Dl[0X4][NX[0X01]];ml=ml+0X1;ml=ml+1;NX=TG[ml];do ml=ml+0x1;end;do(Dl)[0X00005]=yl[NX[0X00006]];end;NX=TG[ml];ml=ml+1;(Dl)[6]=yl[NX[6]];do ml=ml+0X001;end;ml=ml+0x1;NX=TG[ml];ml=ml+0X00001;(Dl)[0X6]=Dl[6][NX[0X1]];NX=TG[ml];do ml=ml+0X1;end;(Dl)[7]=Dl[0x004][NX[0X0001]];do NX=TG[ml];end;do ml=ml+1;end;(Dl)[0X0008]=yl[NX[0x006]];ml=ml+0x1;do ml=ml+0X0001;end;NX=TG[ml];ml=ml+1;Dl[0X8]=Dl[8][NX[1]];ml=ml+1;ml=ml+1;NX=TG[ml];ml=ml+1;Dl[0X009]=Dl[0X4][NX[0x01]];NX=TG[ml];ml=ml+1;Dl[10]=NX[0X00006];NX=TG[ml];ml=ml+0X1;Dl[11]=NX[0X6]/NX[1];ml=ml+0x1;do AZ=0x008;end;Ul=AZ+0x4-1;Dl[AZ]=Dl[AZ](V(Dl,AZ+0X01,Ul));Ul=AZ;NX=TG[ml];ml=ml+0x1;Dl[9]=Dl[0X04][NX[0X1]];do ml=ml+1;end;do AZ=0X6;end;do Ul=AZ+4-1;end;Dl[AZ]=Dl[AZ](V(Dl,AZ+0x1,Ul));Ul=AZ;NX=TG[ml];ml=ml+0X1;(Dl)[7]=yl[NX[6]];NX=TG[ml];ml=ml+0X0001;Dl[7]=Dl[0X07][NX[1]];NX=TG[ml];ml=ml+1;(Dl)[8]=yl[NX[6]];ml=ml+0X00001;ml=ml+0X01;NX=TG[ml];ml=ml+0X001;Dl[0X008]=Dl[8][NX[1]];NX=TG[ml];ml=ml+1;do(Dl)[9]=NX[0X0006];end;NX=TG[ml];ml=ml+0X1;Dl[0X000a]=NX[6];ml=ml+0x1;do AZ=8;end;do(Dl)[AZ]=Dl[AZ](Dl[AZ+0x1],Dl[AZ+2]);end;Ul=AZ;ml=ml+1;ml=ml+1;NX=TG[ml];ml=ml+0X00001;Dl[0X00009]=NX[6];NX=TG[ml];ml=ml+0x1;(Dl)[10]=yl[NX[6]];ml=ml+1;ml=ml+1;do NX=TG[ml];end;do ml=ml+0x1;end;Dl[0XA]=Dl[10][NX[1]];NX=TG[ml];ml=ml+1;(Dl)[0XB]=NX[6];NX=TG[ml];do ml=ml+0X1;end;do Dl[0x00c]=NX[0X6];end;ml=ml+1;AZ=0Xa;local CZ=(0X0);do if ZZ==0 then else Ul=AZ+ZZ-0X01;end;end;local xZ,cZ=nil,nil;if ZZ~=0X01 then do xZ,cZ=Cd(Dl[AZ](V(Dl,AZ+1,Ul)));end;else xZ,cZ=Cd(Dl[AZ]());end;if CZ==1 then Ul=AZ-1;else if CZ==0X0 then xZ=xZ+AZ-0X1;do Ul=xZ;end;else do xZ=AZ+CZ-2;end;do Ul=xZ+1;end;end;local bW=(0X000);for MF=AZ,xZ do bW=bW+0x0001;(Dl)[MF]=cZ[bW];end;end;do ml=ml+0x1;end;ml=ml+1;ml=ml+1;AZ=7;do Dl[AZ]=Dl[AZ](V(Dl,AZ+0X01,Ul));end;Ul=AZ;do ml=ml+0X01;end;ml=ml+0X1;ml=ml+0X1;Dl[0X6]=Dl[6]*Dl[0X7];do NX=TG[ml];end;ml=ml+0x1;local bZ=JG[NX[0X05]];local GZ=bZ[0X4];local HZ=(#GZ);if HZ>0 then do FZ={};end;for TV=1,HZ do local vV=(GZ[TV]);do if vV[1]==0 then(FZ)[TV-1]={Dl,vV[2]};else(FZ)[TV-1]=cG[vV[0X02]];end;end;end;(H)(iG,FZ);end;Dl[7]=ed(yl,bZ,FZ);ml=ml+0x1;Dl[0X8]=true;do ml=ml+0X1;end;(Dl)[0x0009]=true;ml=ml+0X01;AZ=5;Ul=AZ+5-0x001;(Dl[AZ])(V(Dl,AZ+0X0001,Ul));Ul=AZ-1;ml=ml+0X1;do Dl[0X5]=true;end;do NX=TG[ml];end;ml=ml+0x1;yl[NX[0x6]]=Dl[0X5];do NX=TG[ml];end;ml=ml+0X1;do(Dl)[0X5]=yl[NX[6]];end;do ml=ml+0x001;end;ml=ml+1;NX=TG[ml];ml=ml+0X1;Dl[0X00006]=yl[NX[0X00006]];do NX=TG[ml];end;ml=ml+1;(Dl)[7]=yl[NX[0x6]];do NX=TG[ml];end;ml=ml+0X00001;Dl[0X07]=Dl[7][NX[0x1]];ml=ml+0x001;do ml=ml+0x001;end;ml=ml+1;AZ=0x6;ZZ=2;CZ=0X0;if ZZ~=0 then Ul=AZ+ZZ-1;end;xZ,cZ=nil;if ZZ~=1 then xZ,cZ=Cd(Dl[AZ](V(Dl,AZ+0X00001,Ul)));else xZ,cZ=Cd(Dl[AZ]());end;if CZ==0X01 then do Ul=AZ-0X0001;end;else do if CZ==0X0 then xZ=xZ+AZ-0x00001;Ul=xZ;else do xZ=AZ+CZ-0x00002;end;do Ul=xZ+1;end;end;end;local jr=0x0;for GG=AZ,xZ do jr=jr+1;(Dl)[GG]=cZ[jr];end;end;ml=ml+0X1;ml=ml+1;ml=ml+0x1;AZ=0X5;(Dl[AZ])(V(Dl,AZ+1,Ul));Ul=AZ-0X1;ml=ml+1;ml=ml+0X1;do NX=TG[ml];end;do ml=ml+0X01;end;Dl[5]=yl[NX[6]];ml=ml+1;ml=ml+0X01;do NX=TG[ml];end;ml=ml+1;do Dl[5]=Dl[0X5][NX[0X00001]];end;ml=ml+1;do ml=ml+1;end;do NX=TG[ml];end;ml=ml+0X1;(Dl)[6]=NX[6];ml=ml+1;AZ=5;Dl[AZ](Dl[AZ+0x1]);Ul=AZ-0X1;NX=TG[ml];ml=ml+0x1;do if not Dl[0x00003]then ml=NX[5];end;end;end;else if LX~=27 then Dl[0]=yl[NX[6]];ml=ml+0X1;ml=ml+1;do NX=TG[ml];end;ml=ml+0x0001;if not Dl[0]then ml=NX[0X0005];end;else ml=NX[5];end;end;else if not(LX<32)then if not(LX>=0X0021)then(Dl)[NX[2]]=Dl[NX[5]]>=Dl[NX[0x4]];else do if LX==34 then(Dl)[0X0]=yl[NX[6]];ml=ml+1;ml=ml+0x001;local LB=cG[0];ml=ml+0X001;do(Dl)[0X1]=LB[0x1][LB[0X2]];end;ml=ml+1;ml=ml+1;do NX=TG[ml];end;ml=ml+1;do(Dl)[1]=Dl[0X1][NX[1]];end;ml=ml+0X1;ml=ml+0X1;do NX=TG[ml];end;do ml=ml+1;end;Dl[0X001]=Dl[0X1][NX[1]];NX=TG[ml];ml=ml+1;do Dl[0X00002]=yl[NX[6]];end;ml=ml+1;ml=ml+0x001;NX=TG[ml];do ml=ml+1;end;(Dl)[0X02]=Dl[0X2][NX[1]];ml=ml+0x00001;ml=ml+0x1;NX=TG[ml];ml=ml+1;Dl[0X3]=NX[0X6];local sB,fB=2,nil;do NX=TG[ml];end;ml=ml+1;(Dl)[4]=NX[6];NX=TG[ml];do ml=ml+1;end;Dl[5]=NX[0X006];do ml=ml+1;end;Ul=sB+4-0x1;Dl[sB]=Dl[sB](V(Dl,sB+1,Ul));Ul=sB;ml=ml+0X1;do ml=ml+1;end;do ml=ml+1;end;(Dl)[0X1]=Dl[1]*Dl[2];NX=TG[ml];do ml=ml+1;end;local vB=JG[NX[0x5]];local qB=vB[4];local PB=#qB;if PB>0X000 then fB={};for n1=1,PB do local y1=qB[n1];do if y1[1]==0 then do(fB)[n1-0x0001]={Dl,y1[0X2]};end;else do(fB)[n1-1]=cG[y1[0X2]];end;end;end;end;H(iG,fB);end;(Dl)[0X02]=ed(yl,vB,fB);ml=ml+0x00001;(Dl)[3]=true;do ml=ml+0x1;end;(Dl)[0X4]=true;do ml=ml+1;end;sB=0x0;Ul=sB+0X5-0X1;Dl[sB](V(Dl,sB+1,Ul));Ul=sB-0x01;NX=TG[ml];ml=ml+1;Dl[0]=yl[NX[6]];NX=TG[ml];ml=ml+0X1;(Dl)[0X00001]=yl[NX[6]];ml=ml+0X01;ml=ml+1;do NX=TG[ml];end;ml=ml+0x01;(Dl)[0X1]=Dl[1][NX[1]];do ml=ml+0X00001;end;do ml=ml+0X1;end;local CB=(0X00002);do NX=TG[ml];end;local oB=Dl[0X1];do ml=ml+0X1;end;sB=0x01;(Dl)[sB+1]=oB;Dl[sB]=oB[NX[1]];do ml=ml+1;end;sB=0X01;local yB=(0x00);if CB==0x0 then else Ul=sB+CB-1;end;local XB,aB=nil,nil;do if CB~=1 then XB,aB=Cd(Dl[sB](V(Dl,sB+0x1,Ul)));else XB,aB=Cd(Dl[sB]());end;end;if yB~=1 then if yB==0 then XB=XB+sB-1;Ul=XB;else XB=sB+yB-0x2;do Ul=XB+0X01;end;end;local y0=(0);do for ZY=sB,XB do y0=y0+1;(Dl)[ZY]=aB[y0];end;end;else Ul=sB-0x001;end;do ml=ml+1;end;sB=0X0;do CB=0;end;yB=4;if CB~=0 then Ul=sB+CB-0X0001;end;XB,aB=nil;if CB==1 then XB,aB=Cd(Dl[sB]());else do XB,aB=Cd(Dl[sB](V(Dl,sB+0x0001,Ul)));end;end;if yB~=0X0001 then do if yB==0X0000 then XB=XB+sB-1;Ul=XB;else XB=sB+yB-0X2;Ul=XB+0X1;end;end;local EU=(0);for cm=sB,XB do EU=EU+1;do Dl[cm]=aB[EU];end;end;else do Ul=sB-1;end;end;ml=ml+0x0001;ml=ml+0X1;NX=TG[ml];ml=ml+0X00001;sB=0x0;local QB=h(function(...)(t)();for Hz,hz in...do t(true,Hz,hz);end;end);(QB)(Dl[sB],Dl[sB+1],Dl[sB+0X0002]);Ul=sB;(Dl)[sB]=QB;do ml=NX[5];end;else repeat local pp,lp=iG,(Dl);do if#pp>0 then local mz={};do for ch,kh in l,pp do do for OS,AS in l,kh do if not(AS[1]==lp and AS[2]>=0X0)then else local fi=(AS[2]);if not(not mz[fi])then else(mz)[fi]={lp[fi]};end;AS[0x1]=mz[fi];do(AS)[0X002]=1;end;end;end;end;end;end;end;end;until true;return;end;end;end;else do if LX~=0x1F then local L3=NX[0X2];for zq=L3,L3+(NX[0x5]-1)do Dl[zq]=Vl[IG+(zq-L3)+0X1];end;else Dl[0X0004]=false;do NX=TG[ml];end;ml=ml+0x1;yl[NX[0X6]]=Dl[4];NX=TG[ml];do ml=ml+0x00001;end;ml=NX[0X5];end;end;end;end;end;end;end;end);do if xl then if Kl then if Ml~=0x1 then return Dl[Rl](V(Dl,Rl+1,Ul));else return Dl[Rl]();end;elseif not(Rl)then else return V(Dl,Rl,Ml);end;else if C(Kl)~='str\in\g'then(E)(Kl,0);else if M(Kl,"att\e\m\p\116\ t\o\032\yi\101ld a\cr\111\s\s\ \109\e\116a\109et\104\111\d\/\C\%\-ca\108\108 \098\111\117\110d\097\114\121")then return coroutine.yield();end;if M(Kl,"^\.\-\058\037\100+:\032")then(E)("Luraph Script:"..(YG[ml-1]or"(i\110t\erna\l\)")..": "..x(Kl),0X0);else(E)(Kl,0);end;end;end;end;end;else do hG=function(...)local zD=0x001;local FD=({});local KD=(I());local gD,tD=(KD==a and SG or KD),({[0X0002]=FD,[0X1]=FG});local DD,hD=Cd(...);DD=DD-1;local sD=0;do for SH=0X0000,DD do if IG>SH then FD[SH]=hD[SH+1];else break;end;end;end;if not OG then do hD=nil;end;elseif not(zG)then else FD[IG]={n=DD>=IG and DD-IG+1 or 0X0,V(hD,IG+0x001,DD+0X01)};end;if gD==KD then else(R)(hG,gD);end;local MD,XD,YD,SD=A(function()while true do local j1=(TG[zD]);local O1=(j1[3]);zD=zD+1;do if O1<6 then if not(O1>=0x3)then do if not(O1<1)then if O1==0X0002 then local pU=FD[j1[5]];local uU=(j1[2]);do FD[uU+0X1]=pU;end;(FD)[uU]=pU[j1[0x1]];else if FD[j1[5]]<=FD[j1[4]]then zD=j1[2];end;end;else FD[j1[0X2]]={V({},0x1,j1[5])};end;end;else do if O1>=4 then do if O1~=0X5 then FD[j1[0X02]]=FD[j1[5]]*FD[j1[4]];else do(FD)[j1[2]]=gD[j1[6]];end;end;end;else(gD)[j1[6]]=FD[j1[0X00002]];end;end;end;else if not(O1>=0X009)then if not(O1>=7)then(FD)[j1[0X2]]=j1[6];else if O1==8 then local Y3=(JG[j1[5]]);local n3=nil;local G3=(Y3[0X4]);local M3=#G3;if not(M3>0X0)then else n3={};do for K9=0X001,M3 do local n9=(G3[K9]);do if n9[1]~=0 then(n3)[K9-1]=cG[n9[0X0002]];else n3[K9-1]={FD,n9[2]};end;end;end;end;(H)(iG,n3);end;FD[j1[0X2]]=ed(gD,Y3,n3);else(FD)[0]=gD[j1[0x6]];j1=TG[zD];do zD=zD+0x1;end;FD[0]=FD[0][j1[1]];zD=zD+1;zD=zD+0x00001;j1=TG[zD];zD=zD+1;(FD)[0X00]=FD[0][j1[0X1]];local pz=(0X0);j1=TG[zD];zD=zD+0X1;local qz=(FD[0x00000]);do FD[pz+0x1]=qz;end;do FD[pz]=qz[j1[0X1]];end;j1=TG[zD];local Iz=JG[j1[5]];zD=zD+0x01;local Ez=Iz[4];local rz=(nil);local yz=(#Ez);if yz>0 then rz={};do for B5=0X1,yz do local C5=(Ez[B5]);if C5[0x01]==0X0 then(rz)[B5-1]={FD,C5[2]};else(rz)[B5-1]=cG[C5[2]];end;end;end;H(iG,rz);end;(FD)[2]=ed(gD,Iz,rz);zD=zD+1;pz=0;FD[pz](FD[pz+0X1],FD[pz+0X2]);sD=pz-0X01;j1=TG[zD];do zD=zD+0x00001;end;(FD)[0X0]=gD[j1[0x6]];do j1=TG[zD];end;do zD=zD+1;end;Iz=JG[j1[0X5]];do rz=nil;end;Ez=Iz[4];yz=#Ez;if yz>0 then rz={};for zB=1,yz do local hB=Ez[zB];if hB[1]==0x0 then(rz)[zB-0X1]={FD,hB[2]};else(rz)[zB-1]=cG[hB[0x2]];end;end;(H)(iG,rz);end;do(FD)[1]=ed(gD,Iz,rz);end;j1=TG[zD];zD=zD+1;do(FD[0])[j1[0x6]]=FD[1];end;do j1=TG[zD];end;zD=zD+1;(FD)[0X0]=gD[j1[6]];zD=zD+1;do zD=zD+0X01;end;j1=TG[zD];zD=zD+1;Iz=JG[j1[5]];rz=nil;Ez=Iz[0X4];do yz=#Ez;end;if not(yz>0)then else do rz={};end;for NY=1,yz do local wY=(Ez[NY]);if wY[0X001]==0 then do rz[NY-0X0001]={FD,wY[2]};end;else rz[NY-0X0001]=cG[wY[0X2]];end;end;H(iG,rz);end;FD[0X1]=ed(gD,Iz,rz);j1=TG[zD];zD=zD+0X1;FD[0X0][j1[6]]=FD[0X01];do j1=TG[zD];end;zD=zD+1;(FD)[0]=gD[j1[0X6]];j1=TG[zD];zD=zD+0X1;Iz=JG[j1[5]];rz=nil;Ez=Iz[4];yz=#Ez;do if yz>0 then rz={};for qK=1,yz do local dK=(Ez[qK]);do if dK[0X1]~=0 then(rz)[qK-0X1]=cG[dK[0X2]];else do rz[qK-1]={FD,dK[2]};end;end;end;end;H(iG,rz);end;end;FD[1]=ed(gD,Iz,rz);do j1=TG[zD];end;zD=zD+0X0001;FD[0X0][j1[6]]=FD[0X1];j1=TG[zD];do zD=zD+1;end;FD[0]=gD[j1[6]];zD=zD+0X1;zD=zD+1;j1=TG[zD];zD=zD+1;Iz=JG[j1[5]];rz=nil;do Ez=Iz[0X00004];end;yz=#Ez;if yz>0X0 then rz={};for iT=1,yz do local VT=(Ez[iT]);do if VT[0X1]~=0X0 then rz[iT-1]=cG[VT[2]];else(rz)[iT-0X1]={FD,VT[2]};end;end;end;(H)(iG,rz);end;FD[1]=ed(gD,Iz,rz);j1=TG[zD];zD=zD+1;FD[0][j1[6]]=FD[0x1];j1=TG[zD];do zD=zD+1;end;FD[0x0]=gD[j1[6]];do j1=TG[zD];end;do zD=zD+1;end;Iz=JG[j1[0X5]];rz=nil;do Ez=Iz[4];end;yz=#Ez;if yz>0 then rz={};do for fU=1,yz do local OU=(Ez[fU]);if OU[1]~=0 then rz[fU-0X1]=cG[OU[0X02]];else rz[fU-1]={FD,OU[0X0002]};end;end;end;(H)(iG,rz);end;FD[1]=ed(gD,Iz,rz);j1=TG[zD];zD=zD+0X1;(FD[0X0])[j1[6]]=FD[1];j1=TG[zD];zD=zD+0X1;do FD[0]=gD[j1[6]];end;zD=zD+1;do zD=zD+0X00001;end;j1=TG[zD];zD=zD+0x1;Iz=JG[j1[5]];rz=nil;Ez=Iz[0X4];yz=#Ez;do if not(yz>0X00000)then else rz={};for XF=1,yz do local cF=(Ez[XF]);if cF[0X1]==0X00000 then(rz)[XF-1]={FD,cF[0X2]};else rz[XF-0x1]=cG[cF[0X00002]];end;end;H(iG,rz);end;end;(FD)[0X1]=ed(gD,Iz,rz);do j1=TG[zD];end;zD=zD+1;FD[0x0][j1[6]]=FD[0X1];j1=TG[zD];zD=zD+0X1;FD[0]=gD[j1[0X6]];j1=TG[zD];zD=zD+1;Iz=JG[j1[5]];rz=nil;do Ez=Iz[0X0004];end;yz=#Ez;if not(yz>0X0)then else rz={};for VH=1,yz do local zH=Ez[VH];do if zH[1]==0 then(rz)[VH-1]={FD,zH[2]};else do rz[VH-1]=cG[zH[0x2]];end;end;end;end;H(iG,rz);end;do(FD)[1]=ed(gD,Iz,rz);end;j1=TG[zD];zD=zD+0x1;(FD[0])[j1[0X6]]=FD[0X00001];j1=TG[zD];zD=zD+0x1;FD[0X00000]=gD[j1[0x6]];zD=zD+0X01;zD=zD+1;j1=TG[zD];zD=zD+1;do Iz=JG[j1[5]];end;rz=nil;do Ez=Iz[0X04];end;do yz=#Ez;end;if yz>0 then rz={};for fY=0X01,yz do local KY=(Ez[fY]);if KY[0X1]~=0 then rz[fY-0X1]=cG[KY[0X02]];else(rz)[fY-0X1]={FD,KY[0X00002]};end;end;H(iG,rz);end;FD[1]=ed(gD,Iz,rz);j1=TG[zD];zD=zD+1;do(FD[0])[j1[6]]=FD[1];end;do j1=TG[zD];end;zD=zD+1;FD[0]=gD[j1[6]];zD=zD+0X01;do zD=zD+1;end;do j1=TG[zD];end;do zD=zD+1;end;do Iz=JG[j1[5]];end;rz=nil;Ez=Iz[4];yz=#Ez;do if yz>0 then rz={};for OK=0X1,yz do local DK=(Ez[OK]);if DK[1]~=0 then(rz)[OK-0X1]=cG[DK[0X00002]];else rz[OK-0X1]={FD,DK[2]};end;end;H(iG,rz);end;end;(FD)[0x1]=ed(gD,Iz,rz);j1=TG[zD];do zD=zD+0x1;end;FD[0][j1[6]]=FD[1];j1=TG[zD];zD=zD+1;do(FD)[0]=gD[j1[6]];end;zD=zD+1;zD=zD+1;j1=TG[zD];do zD=zD+0x1;end;Iz=JG[j1[5]];do rz=nil;end;Ez=Iz[0X4];yz=#Ez;if not(yz>0)then else rz={};for DG=0X1,yz do local aG=(Ez[DG]);if aG[1]==0X0 then(rz)[DG-1]={FD,aG[2]};else(rz)[DG-1]=cG[aG[0x2]];end;end;(H)(iG,rz);end;(FD)[0X00001]=ed(gD,Iz,rz);j1=TG[zD];zD=zD+1;(FD[0])[j1[0X6]]=FD[0X0001];j1=TG[zD];do zD=zD+0X0001;end;FD[0X0]=gD[j1[6]];j1=TG[zD];zD=zD+1;Iz=JG[j1[5]];rz=nil;Ez=Iz[0X00004];do yz=#Ez;end;do if yz>0 then rz={};for NQ=1,yz do local bQ=(Ez[NQ]);if bQ[0x1]==0 then rz[NQ-1]={FD,bQ[0X02]};else rz[NQ-1]=cG[bQ[2]];end;end;(H)(iG,rz);end;end;(FD)[1]=ed(gD,Iz,rz);j1=TG[zD];zD=zD+1;FD[0][j1[0X6]]=FD[1];do j1=TG[zD];end;do zD=zD+1;end;(FD)[0X0]=gD[j1[0X6]];j1=TG[zD];zD=zD+0x1;Iz=JG[j1[5]];rz=nil;Ez=Iz[0x4];yz=#Ez;if not(yz>0x00)then else rz={};for wZ=1,yz do local JZ=Ez[wZ];if JZ[0X1]==0x0 then do rz[wZ-1]={FD,JZ[2]};end;else rz[wZ-1]=cG[JZ[0X2]];end;end;(H)(iG,rz);end;FD[1]=ed(gD,Iz,rz);j1=TG[zD];do zD=zD+0X001;end;(FD[0])[j1[0X06]]=FD[0x1];do j1=TG[zD];end;zD=zD+1;(FD)[0X00]=gD[j1[6]];zD=zD+0X1;do zD=zD+1;end;j1=TG[zD];zD=zD+1;Iz=JG[j1[5]];do rz=nil;end;Ez=Iz[4];yz=#Ez;if not(yz>0)then else rz={};do for U_=0X1,yz do local p_=Ez[U_];if p_[1]~=0 then rz[U_-0X0001]=cG[p_[2]];else(rz)[U_-0x1]={FD,p_[2]};end;end;end;H(iG,rz);end;FD[0X001]=ed(gD,Iz,rz);j1=TG[zD];zD=zD+1;do FD[0][j1[0X6]]=FD[1];end;j1=TG[zD];zD=zD+0X1;FD[0]=gD[j1[6]];do zD=zD+1;end;zD=zD+1;j1=TG[zD];do zD=zD+0X00001;end;Iz=JG[j1[5]];do rz=nil;end;Ez=Iz[4];yz=#Ez;do if yz>0 then rz={};for Ak=1,yz do local Yk=(Ez[Ak]);if Yk[0X0001]~=0 then(rz)[Ak-1]=cG[Yk[0X02]];else do rz[Ak-1]={FD,Yk[2]};end;end;end;H(iG,rz);end;end;do(FD)[1]=ed(gD,Iz,rz);end;j1=TG[zD];zD=zD+0x1;(FD[0])[j1[0X6]]=FD[1];do j1=TG[zD];end;do zD=zD+1;end;(FD)[0]=gD[j1[6]];j1=TG[zD];do zD=zD+1;end;do Iz=JG[j1[0X5]];end;rz=nil;do Ez=Iz[0X0004];end;yz=#Ez;if yz>0 then rz={};for AD=1,yz do local CD=Ez[AD];if CD[1]==0 then rz[AD-0X1]={FD,CD[0X002]};else(rz)[AD-0X1]=cG[CD[2]];end;end;H(iG,rz);end;FD[1]=ed(gD,Iz,rz);j1=TG[zD];zD=zD+1;do FD[0x0][j1[6]]=FD[1];end;j1=TG[zD];zD=zD+0X1;FD[0x0]=gD[j1[0x6]];do zD=zD+1;end;zD=zD+0X1;j1=TG[zD];zD=zD+0X1;Iz=JG[j1[0X5]];rz=nil;Ez=Iz[4];yz=#Ez;do if not(yz>0)then else rz={};do for i4=1,yz do local M4=(Ez[i4]);if M4[1]==0 then(rz)[i4-0x01]={FD,M4[0X2]};else do(rz)[i4-1]=cG[M4[2]];end;end;end;end;(H)(iG,rz);end;end;do(FD)[1]=ed(gD,Iz,rz);end;j1=TG[zD];zD=zD+1;do FD[0][j1[6]]=FD[0X00001];end;j1=TG[zD];do zD=zD+1;end;(FD)[0]=gD[j1[6]];do zD=zD+0x0001;end;zD=zD+1;j1=TG[zD];do zD=zD+0X1;end;Iz=JG[j1[0X5]];rz=nil;do Ez=Iz[0X0004];end;do yz=#Ez;end;if yz>0 then do rz={};end;for cA=0X1,yz do local gA=(Ez[cA]);if gA[0x001]~=0 then(rz)[cA-1]=cG[gA[0X002]];else rz[cA-1]={FD,gA[2]};end;end;H(iG,rz);end;do FD[0X01]=ed(gD,Iz,rz);end;j1=TG[zD];do zD=zD+0x0001;end;(FD[0])[j1[0X6]]=FD[1];j1=TG[zD];zD=zD+0X00001;FD[0X0]=gD[j1[6]];zD=zD+0X1;zD=zD+1;j1=TG[zD];do zD=zD+0x1;end;Iz=JG[j1[0X5]];do rz=nil;end;do Ez=Iz[0x004];end;yz=#Ez;if yz>0 then rz={};for lf=1,yz do local ff=Ez[lf];if ff[1]~=0 then(rz)[lf-1]=cG[ff[0X00002]];else rz[lf-1]={FD,ff[0X00002]};end;end;H(iG,rz);end;do(FD)[0X01]=ed(gD,Iz,rz);end;do j1=TG[zD];end;zD=zD+0X01;(FD[0X0])[j1[6]]=FD[0X1];j1=TG[zD];zD=zD+0X00001;do FD[0X0]=gD[j1[6]];end;zD=zD+1;zD=zD+1;do j1=TG[zD];end;zD=zD+0X1;Iz=JG[j1[0X5]];rz=nil;Ez=Iz[4];yz=#Ez;do if not(yz>0x0)then else do rz={};end;do for GJ=1,yz do local JJ=Ez[GJ];if JJ[1]==0x0000 then rz[GJ-0X1]={FD,JJ[0X00002]};else do rz[GJ-0x00001]=cG[JJ[0x2]];end;end;end;end;H(iG,rz);end;end;FD[0X01]=ed(gD,Iz,rz);j1=TG[zD];zD=zD+0X1;FD[0x0][j1[6]]=FD[0x1];j1=TG[zD];zD=zD+1;(FD)[0]=gD[j1[0X0006]];zD=zD+0x001;zD=zD+1;do j1=TG[zD];end;do zD=zD+0X00001;end;do Iz=JG[j1[5]];end;do rz=nil;end;Ez=Iz[0X004];do yz=#Ez;end;if not(yz>0X0)then else rz={};for TW=1,yz do local FW=Ez[TW];do if FW[1]==0 then rz[TW-0X1]={FD,FW[2]};else(rz)[TW-1]=cG[FW[2]];end;end;end;H(iG,rz);end;FD[1]=ed(gD,Iz,rz);do j1=TG[zD];end;do zD=zD+1;end;(FD[0X000])[j1[6]]=FD[0X0001];j1=TG[zD];zD=zD+0x001;FD[0x00000]=gD[j1[0X6]];zD=zD+0X1;zD=zD+1;j1=TG[zD];zD=zD+1;do Iz=JG[j1[5]];end;rz=nil;Ez=Iz[0X04];yz=#Ez;if yz>0X0 then rz={};for Ub=1,yz do local eb=(Ez[Ub]);do if eb[1]~=0X000 then rz[Ub-0X1]=cG[eb[0X0002]];else(rz)[Ub-1]={FD,eb[0X2]};end;end;end;H(iG,rz);end;FD[1]=ed(gD,Iz,rz);j1=TG[zD];zD=zD+1;(FD[0x0])[j1[6]]=FD[0X1];do j1=TG[zD];end;do zD=zD+0x0001;end;FD[0]=gD[j1[6]];zD=zD+0X001;zD=zD+0X1;j1=TG[zD];zD=zD+0x1;Iz=JG[j1[0X5]];rz=nil;Ez=Iz[4];yz=#Ez;do if not(yz>0)then else do rz={};end;for h4=0X1,yz do local j4=(Ez[h4]);if j4[1]==0 then rz[h4-0x1]={FD,j4[2]};else(rz)[h4-0X00001]=cG[j4[2]];end;end;(H)(iG,rz);end;end;FD[0x1]=ed(gD,Iz,rz);j1=TG[zD];zD=zD+0X1;FD[0][j1[0X00006]]=FD[1];j1=TG[zD];do zD=zD+1;end;FD[0x0000]=gD[j1[6]];j1=TG[zD];zD=zD+1;Iz=JG[j1[0X5]];rz=nil;Ez=Iz[0X4];do yz=#Ez;end;if not(yz>0X0)then else do rz={};end;for sh=0x1,yz do local gh=Ez[sh];if gh[1]~=0x0 then(rz)[sh-0X1]=cG[gh[2]];else rz[sh-1]={FD,gh[2]};end;end;(H)(iG,rz);end;FD[1]=ed(gD,Iz,rz);j1=TG[zD];do zD=zD+0x001;end;(FD[0X0])[j1[0X00006]]=FD[1];j1=TG[zD];zD=zD+0x1;FD[0X000]=gD[j1[0x006]];zD=zD+1;do zD=zD+0X1;end;j1=TG[zD];zD=zD+1;Iz=JG[j1[5]];do rz=nil;end;Ez=Iz[4];yz=#Ez;if yz>0 then rz={};for v8=0X00001,yz do local b8=Ez[v8];if b8[1]==0 then(rz)[v8-0X1]={FD,b8[0X02]};else rz[v8-1]=cG[b8[0X00002]];end;end;H(iG,rz);end;(FD)[1]=ed(gD,Iz,rz);do j1=TG[zD];end;zD=zD+1;FD[0X0][j1[0X6]]=FD[1];j1=TG[zD];zD=zD+0X01;(FD)[0X000]=gD[j1[6]];j1=TG[zD];zD=zD+0X1;Iz=JG[j1[5]];rz=nil;Ez=Iz[4];do yz=#Ez;end;if not(yz>0)then else rz={};for ND=0X1,yz do local QD=Ez[ND];if QD[1]~=0x00000 then(rz)[ND-1]=cG[QD[2]];else(rz)[ND-0X01]={FD,QD[0x2]};end;end;(H)(iG,rz);end;do(FD)[0x0001]=ed(gD,Iz,rz);end;j1=TG[zD];do zD=zD+0X001;end;(FD[0])[j1[6]]=FD[1];j1=TG[zD];do zD=zD+0X1;end;FD[0x0]=gD[j1[6]];j1=TG[zD];zD=zD+1;Iz=JG[j1[5]];rz=nil;Ez=Iz[4];yz=#Ez;do if yz>0 then rz={};do for G_=1,yz do local q_=(Ez[G_]);if q_[1]==0X0 then(rz)[G_-0X1]={FD,q_[0X2]};else rz[G_-1]=cG[q_[2]];end;end;end;H(iG,rz);end;end;do FD[0x1]=ed(gD,Iz,rz);end;j1=TG[zD];do zD=zD+0X001;end;do(FD[0X0000])[j1[0x6]]=FD[1];end;j1=TG[zD];zD=zD+0X1;FD[0X00]=gD[j1[6]];zD=zD+1;do zD=zD+0X0001;end;j1=TG[zD];zD=zD+0X1;Iz=JG[j1[0x5]];do rz=nil;end;do Ez=Iz[0X4];end;yz=#Ez;if not(yz>0X00)then else rz={};for dV=0x1,yz do local JV=(Ez[dV]);if JV[1]~=0X0 then(rz)[dV-1]=cG[JV[0X2]];else rz[dV-1]={FD,JV[2]};end;end;H(iG,rz);end;(FD)[0X1]=ed(gD,Iz,rz);j1=TG[zD];zD=zD+0X0001;FD[0X000][j1[6]]=FD[1];zD=zD+1;repeat local Ux,vx=iG,FD;do if#Ux>0x0 then local BE={};do for lW,HW in l,Ux do for SV,nV in l,HW do if nV[1]==vx and nV[0X02]>=0X0 then local nQ=(nV[2]);do if not(not BE[nQ])then else do BE[nQ]={vx[nQ]};end;end;end;nV[0X0001]=BE[nQ];(nV)[0X2]=1;end;end;end;end;end;end;until true;return;end;end;else if not(O1<0X0A)then if O1~=11 then if FD[j1[0X5]]==FD[j1[4]]then zD=j1[0X00002];end;else zD=j1[0x05];end;else end;end;end;end;end;end);if MD then if XD then if SD~=1 then return FD[YD](V(FD,YD+0X1,sD));else return FD[YD]();end;elseif YD then return V(FD,YD,SD);end;else if C(XD)~='\115\116r\105n\g'then E(XD,0);else if M(XD,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if M(XD,"^.-:%d+: ")then E("Luraph Script:"..(YG[zD-0X1]or'\040\int\er\110a\108\)')..": "..x(XD),0);else E(XD,0);end;end;end;end;end;end;end;else do if lG~=70 then do hG=function(...)local vg=(0);local lg,xg=1,{};local ag=({[0X0002]=xg,[0X1]=FG});local Bg=I();local rg,Tg=Cd(...);local Lg=((Bg==a and SG or Bg));rg=rg-1;do for Ro=0X0,rg do if IG>Ro then xg[Ro]=Tg[Ro+1];else break;end;end;end;do if not OG then Tg=nil;elseif not(zG)then else xg[IG]={n=rg>=IG and rg-IG+1 or 0X0,V(Tg,IG+1,rg+0X00001)};end;end;if Lg==Bg then else R(hG,Lg);end;local Jg,qg,Ng,cg=A(function()while true do local No=TG[lg];local Ao=(No[3]);do lg=lg+0X1;end;if not(Ao<12)then if not(Ao>=0X12)then do if not(Ao>=0Xf)then if Ao>=0XD then if Ao==14 then do xg[No[0x002]]=-xg[No[5]];end;else(xg)[0]=Lg[No[6]];lg=lg+0x00001;lg=lg+1;No=TG[lg];lg=lg+0X1;if not xg[0X0]then lg=No[0X05];end;end;else do xg[No[2]]=not xg[No[0X5]];end;end;else if Ao<0x10 then do if not(not(No[0X6]<xg[No[0X00004]]))then else lg=No[0x2];end;end;else do if Ao~=17 then xg[0X04]=Lg[No[6]];No=TG[lg];do lg=lg+0x0001;end;do xg[0X5]=xg[3][No[0X01]];end;lg=lg+1;local tZ=(4);lg=lg+0x1;lg=lg+1;do(xg)[tZ]=xg[tZ](xg[tZ+0x0001]);end;do vg=tZ;end;do lg=lg+1;end;lg=lg+0X001;No=TG[lg];lg=lg+1;do if not(not xg[4])then else do lg=No[0x05];end;end;end;else do xg[0X0003][No[0X00006]]=No[0X0001];end;No=TG[lg];lg=lg+1;(xg[3])[No[6]]=No[1];do No=TG[lg];end;lg=lg+1;lg=No[5];end;end;end;end;end;else if not(Ao<0X15)then do if Ao<23 then do if Ao==0X16 then repeat local qZ,kZ=iG,(xg);if not(#qZ>0X0)then else local s5=({});do for Zf,Xf in l,qZ do for RK,hK in l,Xf do if hK[1]==kZ and hK[0x2]>=0x0 then local yW=(hK[2]);do if not s5[yW]then(s5)[yW]={kZ[yW]};end;end;(hK)[0x1]=s5[yW];(hK)[0X2]=1;end;end;end;end;end;until true;return;else for Ew=No[2],No[5]do do xg[Ew]=nil;end;end;end;end;else if Ao~=24 then(xg)[No[0X2]]=xg[No[0X05]]+xg[No[4]];else xg[0]=Lg[No[0X6]];lg=lg+0x1;local Yj=0x00;do lg=lg+0X1;end;No=TG[lg];lg=lg+0X001;xg[0X1]=Lg[No[6]];do lg=lg+1;end;lg=lg+1;local Xj=(0X1);No=TG[lg];lg=lg+1;xg[0x00001]=xg[0x01][No[1]];do No=TG[lg];end;do lg=lg+0X1;end;local ij=(xg[0X1]);do xg[Xj+1]=ij;end;(xg)[Xj]=ij[No[0X1]];do lg=lg+1;end;Xj=0X1;local Lj=2;if Lj~=0X0 then vg=Xj+Lj-1;end;local lj,uj=nil,nil;if Lj==0X1 then lj,uj=Cd(xg[Xj]());else lj,uj=Cd(xg[Xj](V(xg,Xj+0X1,vg)));end;if Yj~=1 then if Yj==0X00 then lj=lj+Xj-1;do vg=lj;end;else lj=Xj+Yj-0X02;vg=lj+1;end;local pP=(0);for sX=Xj,lj do pP=pP+1;(xg)[sX]=uj[pP];end;else vg=Xj-1;end;lg=lg+0X1;do lg=lg+1;end;lg=lg+0x0001;Xj=0X0;Lj=0X0;Yj=0X4;if Lj==0 then else vg=Xj+Lj-0X1;end;lj,uj=nil;if Lj==0x1 then do lj,uj=Cd(xg[Xj]());end;else lj,uj=Cd(xg[Xj](V(xg,Xj+1,vg)));end;if Yj==0x00001 then vg=Xj-1;else if Yj==0X00 then do lj=lj+Xj-0x0001;end;do vg=lj;end;else lj=Xj+Yj-0x2;vg=lj+1;end;local V8=(0x0);for bG=Xj,lj do V8=V8+0X1;(xg)[bG]=uj[V8];end;end;lg=lg+0X001;lg=lg+0x0001;No=TG[lg];lg=lg+0X1;Xj=0;local ej=h(function(...)(t)();for uV,sV in...do t(true,uV,sV);end;end);(ej)(xg[Xj],xg[Xj+0x1],xg[Xj+2]);do vg=Xj;end;xg[Xj]=ej;lg=No[5];end;end;end;else do if Ao>=19 then if Ao==20 then else do xg[0X0]=Lg[No[6]];end;No=TG[lg];lg=lg+0x00001;xg[0X0]=xg[0][No[1]];lg=lg+0X0001;lg=lg+0X1;No=TG[lg];lg=lg+1;if not(not xg[0X0])then else do lg=No[0X005];end;end;end;else xg[0]=Lg[No[0X6]];lg=lg+0X1;vg=0X0;(xg)[vg]=xg[vg]();No=TG[lg];do lg=lg+1;end;if not xg[0X0]then lg=No[5];end;end;end;end;end;else if Ao<0x6 then if Ao<0X0003 then do if not(Ao>=1)then do xg[No[0x2]]=Lg[No[6]];end;else do if Ao~=0X00002 then(xg)[No[0x2]]={V({},0X1,No[0X5])};else local ff=JG[No[5]];local cf=ff[4];local If,Vf=#cf,(nil);do if not(If>0x0000)then else Vf={};for PF=1,If do local AF=cf[PF];if AF[1]==0X0 then(Vf)[PF-1]={xg,AF[2]};else do(Vf)[PF-1]=cG[AF[2]];end;end;end;H(iG,Vf);end;end;xg[No[0X2]]=ed(Lg,ff,Vf);end;end;end;end;else if not(Ao>=0X004)then(xg)[No[2]]=ag[No[0X05]];else if Ao~=0X5 then(xg)[No[0X00002]]=xg[No[0x5]]/xg[No[0X04]];else local pU=No[0x00002];local HU,AU,TU=xg[pU]();if HU then do(xg)[pU+0X1]=AU;end;do(xg)[pU+0X2]=TU;end;lg=No[0x005];end;end;end;end;else if not(Ao>=0X9)then if Ao>=7 then if Ao~=8 then xg[No[0x2]]=xg[No[0X0005]][No[1]];else lg=No[5];end;else xg[No[2]]=No[6];end;else if Ao>=0Xa then if Ao==0XB then xg[0]=Lg[No[6]];do lg=lg+1;end;lg=lg+0X0001;lg=lg+0x1;vg=0x000;xg[vg]=xg[vg]();lg=lg+1;lg=lg+0x1;No=TG[lg];lg=lg+0x1;do if not xg[0X00]then lg=No[0x5];end;end;else do if not(not xg[No[2]])then else do lg=No[0X005];end;end;end;end;else local b2,z2=0X3,xg[0x002];(xg)[b2+1]=z2;(xg)[b2]=z2[No[0X1]];do No=TG[lg];end;lg=lg+1;(xg)[5]=No[0X6];lg=lg+0x1;b2=0x0003;do xg[b2]=xg[b2](xg[b2+1],xg[b2+2]);end;do vg=b2;end;do lg=lg+1;end;lg=lg+1;No=TG[lg];lg=lg+1;do if not(not xg[0x3])then else lg=No[0x5];end;end;end;end;end;end;end;end);do if Jg then if qg then if cg==0x1 then return xg[Ng]();else do return xg[Ng](V(xg,Ng+0x00001,vg));end;end;elseif not(Ng)then else do return V(xg,Ng,cg);end;end;else if C(qg)~='\115t\114\i\110\g'then(E)(qg,0X0);else if M(qg,'\097\116te\m\112\116 \116\111 \y\ie\108d a\c\114\o\s\s m\e\116\097\109e\116\h\o\100\/C\%\045\c\097\l\108\ \098\111u\110d\097\114\121')then do return coroutine.yield();end;end;do if not(M(qg,'\^\.-:\037\100\043\058\ '))then E(qg,0);else(E)('\L\117raph\ \Scrip\116:'..(YG[lg-0x1]or'(\105\110t\erna\l\)')..'\058 '..x(qg),0X0000);end;end;end;end;end;end;end;else do hG=function(...)local mZ,RZ=1,({});local IZ=I();local vZ=(IZ==a and SG or IZ);local TZ=(0X0);local hZ,UZ=Cd(...);local MZ=({[0X1]=FG,[0X0002]=RZ});hZ=hZ-1;for so=0x0,hZ do do if not(IG>so)then break;else RZ[so]=UZ[so+1];end;end;end;if not OG then UZ=nil;elseif zG then do RZ[IG]={n=hZ>=IG and hZ-IG+1 or 0X0,V(UZ,IG+1,hZ+0X0001)};end;end;if vZ~=IZ then R(hG,vZ);end;local gZ,fZ,zZ,PZ=A(function()while true do local ZD=TG[mZ];local SD=ZD[0X3];mZ=mZ+0X1;if SD>=27 then if not(SD>=0x00028)then if not(SD<0X21)then if SD>=0X024 then if SD<38 then if SD==0X25 then do RZ[11]=vZ[ZD[6]];end;mZ=mZ+1;mZ=mZ+0X01;do ZD=TG[mZ];end;mZ=mZ+1;if RZ[0X0000A]==RZ[0XB]then else mZ=ZD[0X2];end;else RZ[ZD[0X2]]=MZ[ZD[0X5]];end;else if SD==0x027 then do RZ[5]=vZ[ZD[6]];end;local SX=5;mZ=mZ+1;mZ=mZ+1;ZD=TG[mZ];mZ=mZ+0X1;local QX=(RZ[5]);(RZ)[SX+1]=QX;RZ[SX]=QX[ZD[1]];ZD=TG[mZ];mZ=mZ+1;do RZ[0X007]=ZD[0X0006];end;ZD=TG[mZ];mZ=mZ+0x1;do RZ[8]=vZ[ZD[6]];end;mZ=mZ+1;mZ=mZ+0X001;do mZ=mZ+1;end;(RZ)[8]=#RZ[8];mZ=mZ+0X0001;SX=0X5;TZ=SX+0x4-0X1;RZ[SX]=RZ[SX](V(RZ,SX+0X0001,TZ));TZ=SX;ZD=TG[mZ];mZ=mZ+1;if RZ[0X5]==ZD[1]then else mZ=ZD[2];end;else do repeat local Sr,Qr=iG,(RZ);do if not(#Sr>0X00000)then else local K_={};for z2,q2 in l,Sr do do for zA,JA in l,q2 do if not(JA[0X1]==Qr and JA[2]>=0X0)then else local En=(JA[2]);do if not(not K_[En])then else(K_)[En]={Qr[En]};end;end;(JA)[1]=K_[En];JA[2]=1;end;end;end;end;end;end;until true;end;local aP=ZD[0X00002];do return false,aP,aP;end;end;end;else if not(SD<0X22)then if SD==35 then RZ[0X005]=vZ[ZD[0X006]];mZ=mZ+1;do mZ=mZ+0X01;end;ZD=TG[mZ];do mZ=mZ+0X01;end;RZ[6]=vZ[ZD[0X6]];ZD=TG[mZ];mZ=mZ+1;(RZ)[0X6]=RZ[6][ZD[1]];ZD=TG[mZ];mZ=mZ+0X001;do(RZ)[0X006]=RZ[6][ZD[0X1]];end;mZ=mZ+0X1;local P1=0X5;mZ=mZ+0X1;mZ=mZ+1;local I1,i1=0X2,(4);do if I1==0 then else do TZ=P1+I1-0X001;end;end;end;local a1,S1=nil,(nil);if I1~=1 then a1,S1=Cd(RZ[P1](V(RZ,P1+1,TZ)));else a1,S1=Cd(RZ[P1]());end;if i1~=0X1 then if i1~=0 then do a1=P1+i1-0x00002;end;TZ=a1+1;else a1=a1+P1-1;TZ=a1;end;local HM=(0);do for p_=P1,a1 do do HM=HM+1;end;RZ[p_]=S1[HM];end;end;else TZ=P1-1;end;ZD=TG[mZ];do mZ=mZ+1;end;P1=0X5;local V1=(h(function(...)(t)();for jJ,ZJ in...do(t)(true,jJ,ZJ);end;end));V1(RZ[P1],RZ[P1+0X1],RZ[P1+0X02]);TZ=P1;RZ[P1]=V1;mZ=ZD[0x5];else RZ[5]=vZ[ZD[6]];ZD=TG[mZ];mZ=mZ+1;RZ[5]=RZ[5][ZD[1]];local JF=0X5;mZ=mZ+1;mZ=mZ+0X1;ZD=TG[mZ];mZ=mZ+1;RZ[0X00006]=ZD[0X0006];ZD=TG[mZ];mZ=mZ+1;RZ[7]=ZD[6];ZD=TG[mZ];do mZ=mZ+1;end;do RZ[0X8]=ZD[6];end;mZ=mZ+0x001;TZ=JF+0x4-1;RZ[JF]=RZ[JF](V(RZ,JF+1,TZ));do TZ=JF;end;mZ=mZ+0X1;mZ=mZ+0X1;ZD=TG[mZ];mZ=mZ+1;vZ[ZD[0X0006]]=RZ[5];ZD=TG[mZ];mZ=mZ+1;do mZ=ZD[0X5];end;end;else do repeat local Dd,U7=iG,(RZ);if not(#Dd>0x0)then else local ms=({});for lM,mM in l,Dd do do for u9,a9 in l,mM do if a9[1]==U7 and a9[2]>=0 then local e5=(a9[2]);if not ms[e5]then(ms)[e5]={U7[e5]};end;a9[1]=ms[e5];(a9)[2]=0X1;end;end;end;end;end;until true;end;return;end;end;else if not(SD>=30)then if not(SD<0x01c)then do if SD~=29 then do RZ[3]=vZ[ZD[0x6]];end;do ZD=TG[mZ];end;mZ=mZ+1;do RZ[0x3]=RZ[3][ZD[1]];end;mZ=mZ+0X0001;mZ=mZ+1;ZD=TG[mZ];do mZ=mZ+1;end;(RZ)[0X003]=RZ[0x3][ZD[1]];mZ=mZ+0X1;mZ=mZ+1;ZD=TG[mZ];mZ=mZ+1;(RZ)[0X3]=RZ[0X3][ZD[1]];mZ=mZ+0x00001;mZ=mZ+1;ZD=TG[mZ];mZ=mZ+0x1;mZ=ZD[5];else(RZ)[0X5]=vZ[ZD[0X6]];ZD=TG[mZ];mZ=mZ+0x1;RZ[5]=RZ[0x005][ZD[1]];mZ=mZ+1;do mZ=mZ+1;end;do ZD=TG[mZ];end;local Je=(5);do mZ=mZ+0X1;end;RZ[6]=ZD[6];do ZD=TG[mZ];end;do mZ=mZ+0x1;end;(RZ)[7]=ZD[0X6];ZD=TG[mZ];mZ=mZ+1;(RZ)[8]=ZD[0X6];do mZ=mZ+1;end;TZ=Je+4-0X1;RZ[Je]=RZ[Je](V(RZ,Je+0X01,TZ));TZ=Je;mZ=mZ+1;mZ=mZ+0x1;ZD=TG[mZ];mZ=mZ+0x1;(vZ)[ZD[6]]=RZ[0X5];ZD=TG[mZ];do mZ=mZ+1;end;mZ=ZD[5];end;end;else do RZ[ZD[2]]=RZ[ZD[5]]%RZ[ZD[0X4]];end;end;else if not(SD<31)then if SD==0X20 then for Cg=ZD[2],ZD[0X05]do RZ[Cg]=nil;end;else if not(not RZ[ZD[2]])then else do mZ=ZD[5];end;end;end;else do(RZ)[5]=vZ[ZD[6]];end;local so=0x5;ZD=TG[mZ];mZ=mZ+0X1;(RZ)[0x5]=RZ[0X05][ZD[1]];do ZD=TG[mZ];end;mZ=mZ+1;do(RZ)[6]=ZD[0X006];end;ZD=TG[mZ];mZ=mZ+0X001;do(RZ)[7]=ZD[0X6];end;ZD=TG[mZ];do mZ=mZ+1;end;do(RZ)[8]=ZD[6];end;do mZ=mZ+0X0001;end;TZ=so+4-0X001;RZ[so]=RZ[so](V(RZ,so+0X1,TZ));TZ=so;ZD=TG[mZ];mZ=mZ+1;vZ[ZD[0X6]]=RZ[5];do ZD=TG[mZ];end;do mZ=mZ+1;end;do mZ=ZD[5];end;end;end;end;else if SD<0x2F then if SD<43 then if SD>=41 then if SD~=42 then(RZ)[ZD[0X2]]=RZ[ZD[0x5]][ZD[0X1]];else do RZ[11]=RZ[0X7][ZD[1]];end;ZD=TG[mZ];mZ=mZ+0X1;do(vZ)[ZD[0X6]]=RZ[0X00B];end;do ZD=TG[mZ];end;mZ=mZ+1;RZ[11]=vZ[ZD[0X6]];mZ=mZ+1;mZ=mZ+0X01;ZD=TG[mZ];mZ=mZ+0X1;(RZ)[11]=RZ[0XB][ZD[0X1]];mZ=mZ+1;do mZ=mZ+0X01;end;do ZD=TG[mZ];end;mZ=mZ+0X1;(RZ)[0xc]=RZ[7][ZD[1]];local ZP=(11);mZ=mZ+0x1;RZ[ZP]=RZ[ZP](RZ[ZP+1]);do TZ=ZP;end;mZ=mZ+1;mZ=mZ+1;ZD=TG[mZ];mZ=mZ+0X1;(vZ)[ZD[6]]=RZ[11];ZD=TG[mZ];mZ=mZ+0X001;do mZ=ZD[5];end;end;else if RZ[ZD[0X5]]~=ZD[1]then mZ=ZD[2];end;end;else if SD<45 then if SD==44 then else RZ[0X004]=vZ[ZD[6]];mZ=mZ+0x1;do mZ=mZ+0X1;end;ZD=TG[mZ];mZ=mZ+0X001;local kO=2;(RZ)[0X5]=vZ[ZD[6]];mZ=mZ+1;TZ=kO+4-1;RZ[kO]=RZ[kO](V(RZ,kO+0X001,TZ));TZ=kO;ZD=TG[mZ];mZ=mZ+1;local cO=0X2;RZ[3]=ZD[0X06]/ZD[1];do mZ=mZ+0X1;end;do RZ[4]={};end;mZ=mZ+1;do(RZ)[5]=nil;end;ZD=TG[mZ];mZ=mZ+0X001;(vZ)[ZD[6]]=RZ[5];ZD=TG[mZ];mZ=mZ+1;RZ[5]=vZ[ZD[6]];ZD=TG[mZ];mZ=mZ+0X1;RZ[0X006]=vZ[ZD[6]];mZ=mZ+0x1;do mZ=mZ+0X1;end;mZ=mZ+1;kO=5;local QO=(4);if cO~=0 then TZ=kO+cO-0x1;end;local bO,FO=nil,nil;if cO==0X0001 then bO,FO=Cd(RZ[kO]());else bO,FO=Cd(RZ[kO](V(RZ,kO+1,TZ)));end;if QO==1 then TZ=kO-1;else if QO==0 then bO=bO+kO-1;TZ=bO;else bO=kO+QO-2;TZ=bO+0X00001;end;local Tj=(0);for uz=kO,bO do Tj=Tj+1;RZ[uz]=FO[Tj];end;end;ZD=TG[mZ];do mZ=mZ+0X0001;end;do kO=0X5;end;local pO=h(function(...)t();for lZ,LZ in...do(t)(true,lZ,LZ);end;end);(pO)(RZ[kO],RZ[kO+0X00001],RZ[kO+2]);do TZ=kO;end;RZ[kO]=pO;mZ=ZD[0X5];end;else do if SD~=46 then RZ[0X5]=ZD[6];ZD=TG[mZ];local uE=(0x5);do mZ=mZ+0X0001;end;local ZE=RZ[5];(RZ)[uE+1]=ZE;do(RZ)[uE]=ZE[ZD[1]];end;do ZD=TG[mZ];end;do mZ=mZ+1;end;(RZ)[0x00007]=vZ[ZD[6]];mZ=mZ+1;uE=5;(RZ)[uE]=RZ[uE](RZ[uE+0x1],RZ[uE+0X002]);do TZ=uE;end;do ZD=TG[mZ];end;mZ=mZ+0X1;do if not(not RZ[0X5])then else mZ=ZD[0X00005];end;end;else(RZ)[8]=vZ[ZD[6]];ZD=TG[mZ];mZ=mZ+0X0001;local At=8;(vZ)[ZD[6]]=RZ[0X8];ZD=TG[mZ];do mZ=mZ+1;end;do RZ[8]=vZ[ZD[0X0006]];end;mZ=mZ+0X1;mZ=mZ+0X1;mZ=mZ+0X00001;(RZ)[9]=RZ[0X0006];do mZ=mZ+1;end;RZ[At]=RZ[At](RZ[At+1]);TZ=At;do ZD=TG[mZ];end;mZ=mZ+1;(vZ)[ZD[6]]=RZ[8];do ZD=TG[mZ];end;mZ=mZ+1;do RZ[8]=vZ[ZD[0x6]];end;do ZD=TG[mZ];end;do mZ=mZ+0x1;end;RZ[0X08]=RZ[0X8][ZD[1]];ZD=TG[mZ];do mZ=mZ+0X1;end;(RZ)[9]=RZ[0X007][ZD[1]];mZ=mZ+1;mZ=mZ+1;ZD=TG[mZ];mZ=mZ+1;RZ[10]=vZ[ZD[0X0006]];mZ=mZ+1;mZ=mZ+1;mZ=mZ+1;At=8;(RZ)[At]=RZ[At](RZ[At+1],RZ[At+0X2]);TZ=At;mZ=mZ+0X1;do mZ=mZ+0X0001;end;ZD=TG[mZ];mZ=mZ+1;do vZ[ZD[0x00006]]=RZ[0x00008];end;ZD=TG[mZ];do mZ=mZ+1;end;(RZ)[8]=RZ[7][ZD[0x01]];mZ=mZ+0x1;mZ=mZ+1;ZD=TG[mZ];mZ=mZ+0x1;(vZ)[ZD[6]]=RZ[0x8];ZD=TG[mZ];mZ=mZ+0x1;mZ=ZD[0X005];end;end;end;end;else if not(SD<50)then if not(SD>=0X00034)then if SD==51 then do(RZ)[11]=RZ[0X7][ZD[0X1]];end;mZ=mZ+0X01;mZ=mZ+1;local fV=(11);ZD=TG[mZ];mZ=mZ+1;(vZ)[ZD[0X00006]]=RZ[0X000B];ZD=TG[mZ];mZ=mZ+0x1;(RZ)[11]=vZ[ZD[0X6]];ZD=TG[mZ];mZ=mZ+0X01;(RZ)[0XB]=RZ[0X0000B][ZD[0X001]];do mZ=mZ+1;end;do mZ=mZ+1;end;do ZD=TG[mZ];end;mZ=mZ+1;(RZ)[12]=RZ[7][ZD[1]];mZ=mZ+1;do RZ[fV]=RZ[fV](RZ[fV+1]);end;TZ=fV;do mZ=mZ+0X1;end;mZ=mZ+1;ZD=TG[mZ];do mZ=mZ+1;end;vZ[ZD[6]]=RZ[0XB];ZD=TG[mZ];mZ=mZ+0X1;do mZ=ZD[5];end;else(RZ)[0X2]=vZ[ZD[0x0006]];mZ=mZ+1;mZ=mZ+0X1;ZD=TG[mZ];mZ=mZ+0X0001;(RZ)[2]=RZ[0X2][ZD[0X1]];mZ=mZ+1;do(RZ)[3]=RZ[0x0];end;do ZD=TG[mZ];end;mZ=mZ+0X0001;do if not(RZ[0X3])then else mZ=ZD[0X5];end;end;end;else if SD~=53 then local rW=JG[ZD[5]];local DW=rW[4];local RW,AW=#DW,(nil);if not(RW>0X00)then else AW={};do for wG=0x001,RW do local RG=DW[wG];if RG[1]~=0 then AW[wG-1]=cG[RG[0x2]];else(AW)[wG-1]={RZ,RG[2]};end;end;end;H(iG,AW);end;(RZ)[ZD[2]]=ed(vZ,rW,AW);else if not(RZ[ZD[0X0005]]<ZD[1])then mZ=ZD[0X2];end;end;end;else if not(SD>=48)then local VD=ZD[2];local PD,dD=RZ[VD]();if not(PD)then else mZ=ZD[0X0005];(RZ)[VD+3]=dD;end;else do if SD~=0x31 then(RZ)[0Xd]=vZ[ZD[0X6]];mZ=mZ+0X1;do mZ=mZ+0X1;end;do mZ=mZ+1;end;RZ[0X0e]=RZ[0X6];local uE=0xd;mZ=mZ+0X001;RZ[uE]=RZ[uE](RZ[uE+1]);TZ=uE;do mZ=mZ+0X1;end;mZ=mZ+1;ZD=TG[mZ];mZ=mZ+1;(vZ)[ZD[0X6]]=RZ[13];ZD=TG[mZ];do mZ=mZ+1;end;do(RZ)[0Xd]=vZ[ZD[0x6]];end;mZ=mZ+1;mZ=mZ+0X0001;do mZ=mZ+0X01;end;do(RZ)[0XE]=RZ[11];end;mZ=mZ+0X1;uE=0XD;do RZ[uE]=RZ[uE](RZ[uE+1]);end;TZ=uE;ZD=TG[mZ];mZ=mZ+0X001;do(vZ)[ZD[6]]=RZ[0XD];end;ZD=TG[mZ];do mZ=mZ+0X1;end;RZ[13]=vZ[ZD[6]];ZD=TG[mZ];mZ=mZ+0x00001;RZ[13]=RZ[13][ZD[1]];mZ=mZ+0X1;mZ=mZ+1;ZD=TG[mZ];do mZ=mZ+0X1;end;RZ[14]=RZ[12][ZD[0x1]];ZD=TG[mZ];do mZ=mZ+0x1;end;do RZ[15]=vZ[ZD[6]];end;mZ=mZ+0X1;uE=0X0D;(RZ)[uE]=RZ[uE](RZ[uE+1],RZ[uE+0x00002]);TZ=uE;ZD=TG[mZ];mZ=mZ+1;vZ[ZD[6]]=RZ[13];do ZD=TG[mZ];end;mZ=mZ+0X1;(RZ)[13]=RZ[12][ZD[0X1]];do ZD=TG[mZ];end;mZ=mZ+1;do(vZ)[ZD[6]]=RZ[0X000D];end;ZD=TG[mZ];mZ=mZ+1;do RZ[13]=RZ[0Xc][ZD[1]];end;do mZ=mZ+1;end;do RZ[0xd]=RZ[2]-RZ[13];end;do mZ=mZ+0X1;end;(RZ)[3]=RZ[13];ZD=TG[mZ];do mZ=mZ+0X1;end;RZ[13]=vZ[ZD[0X6]];do ZD=TG[mZ];end;mZ=mZ+0X1;RZ[13]=RZ[13][ZD[1]];mZ=mZ+0x1;RZ[14]=RZ[4];do ZD=TG[mZ];end;do mZ=mZ+1;end;do RZ[0XF]=ZD[0X6];end;mZ=mZ+1;do RZ[0X10]={};end;ZD=TG[mZ];mZ=mZ+0x1;(RZ)[0X011]=vZ[ZD[6]];mZ=mZ+1;(RZ)[0X012]=RZ[0X6];mZ=mZ+0X1;do uE=17;end;RZ[uE]=RZ[uE](RZ[uE+1]);TZ=uE;do mZ=mZ+1;end;do mZ=mZ+0x1;end;do ZD=TG[mZ];end;mZ=mZ+0X001;RZ[0X10][ZD[6]]=RZ[17];ZD=TG[mZ];mZ=mZ+0X1;RZ[17]=vZ[ZD[0X6]];mZ=mZ+1;mZ=mZ+0x1;do mZ=mZ+1;end;RZ[18]=RZ[11];mZ=mZ+0X1;uE=0X000011;do RZ[uE]=RZ[uE](RZ[uE+0X0001]);end;TZ=uE;ZD=TG[mZ];do mZ=mZ+1;end;do(RZ[16])[ZD[6]]=RZ[0X11];end;ZD=TG[mZ];mZ=mZ+0X1;do RZ[17]=vZ[ZD[0X0006]];end;ZD=TG[mZ];mZ=mZ+1;(RZ)[17]=RZ[17][ZD[1]];ZD=TG[mZ];mZ=mZ+1;(RZ)[0x00012]=RZ[0X0C][ZD[0X001]];do mZ=mZ+0x1;end;do mZ=mZ+0X1;end;ZD=TG[mZ];mZ=mZ+1;(RZ)[0x13]=vZ[ZD[0X6]];mZ=mZ+0X00001;mZ=mZ+1;mZ=mZ+1;uE=0X11;(RZ)[uE]=RZ[uE](RZ[uE+1],RZ[uE+0x002]);TZ=uE;mZ=mZ+1;mZ=mZ+1;ZD=TG[mZ];do mZ=mZ+1;end;(RZ[16])[ZD[0X006]]=RZ[0X11];ZD=TG[mZ];do mZ=mZ+1;end;do(RZ)[17]=RZ[0XC][ZD[1]];end;ZD=TG[mZ];mZ=mZ+1;RZ[16][ZD[6]]=RZ[17];do mZ=mZ+1;end;uE=13;TZ=uE+0X04-0x0001;RZ[uE](V(RZ,uE+1,TZ));TZ=uE-0X1;mZ=mZ+1;do mZ=mZ+0X1;end;ZD=TG[mZ];mZ=mZ+1;mZ=ZD[0X00005];else mZ=ZD[5];end;end;end;end;end;end;else if not(SD>=0x00D)then if SD>=6 then if not(SD<9)then if SD<11 then do if SD==0xA then RZ[11]=RZ[4][ZD[0X1]];ZD=TG[mZ];mZ=mZ+0X0001;(RZ)[12]=vZ[ZD[0X6]];do mZ=mZ+1;end;mZ=mZ+1;ZD=TG[mZ];mZ=mZ+0x001;(RZ)[12]=RZ[0X0000C][ZD[1]];ZD=TG[mZ];mZ=mZ+1;(RZ)[0xD]=RZ[7][ZD[0X001]];do mZ=mZ+1;end;local LP=0X000C;mZ=mZ+0X1;mZ=mZ+0x0001;RZ[LP]=RZ[LP](RZ[LP+0x001]);TZ=LP;mZ=mZ+1;do mZ=mZ+1;end;ZD=TG[mZ];do mZ=mZ+0X001;end;do(RZ[11])[ZD[6]]=RZ[12];end;ZD=TG[mZ];mZ=mZ+0X0001;RZ[0X0B]=RZ[0X04][ZD[1]];ZD=TG[mZ];mZ=mZ+1;(RZ)[0XC]=RZ[7][ZD[1]];mZ=mZ+1;mZ=mZ+1;ZD=TG[mZ];do mZ=mZ+1;end;(RZ[0Xb])[ZD[0X6]]=RZ[0XC];ZD=TG[mZ];mZ=mZ+0X1;mZ=ZD[5];else RZ[11]=RZ[4][ZD[0X1]];ZD=TG[mZ];mZ=mZ+0X0001;do RZ[0X0b]=RZ[11][ZD[1]];end;do ZD=TG[mZ];end;do mZ=mZ+0X1;end;if RZ[10]~=RZ[11]then mZ=ZD[0X2];end;end;end;else do if SD~=12 then RZ[ZD[2]]={V({},0X1,ZD[5])};else RZ[0Xd]=RZ[0XC][ZD[1]];ZD=TG[mZ];mZ=mZ+1;local Zt=0X000e;(RZ)[14]=vZ[ZD[6]];do ZD=TG[mZ];end;do mZ=mZ+0X1;end;RZ[14]=RZ[0Xe][ZD[1]];mZ=mZ+1;mZ=mZ+1;do ZD=TG[mZ];end;mZ=mZ+0X1;(RZ)[0xf]=RZ[12][ZD[1]];mZ=mZ+1;mZ=mZ+1;ZD=TG[mZ];mZ=mZ+0X01;(RZ)[0X000010]=vZ[ZD[6]];do mZ=mZ+0X1;end;(RZ)[Zt]=RZ[Zt](RZ[Zt+0x1],RZ[Zt+0X0002]);TZ=Zt;mZ=mZ+0X1;RZ[0X000d]=RZ[13][RZ[0xE]];ZD=TG[mZ];mZ=mZ+0X1;do if RZ[0X0000d]==ZD[0X1]then mZ=ZD[0x002];end;end;end;end;end;else if not(SD>=7)then local hY,RY,iY=ZD[2],ZD[0x5],ZD[0X4];if RY~=0X0 then TZ=hY+RY-1;end;local AY,TY=nil,(nil);do if RY~=0X1 then AY,TY=Cd(RZ[hY](V(RZ,hY+0X1,TZ)));else do AY,TY=Cd(RZ[hY]());end;end;end;if iY~=0x1 then do if iY~=0 then AY=hY+iY-2;TZ=AY+1;else AY=AY+hY-1;do TZ=AY;end;end;end;local QK=(0);for YA=hY,AY do QK=QK+1;(RZ)[YA]=TY[QK];end;else TZ=hY-0X0001;end;else if SD~=0X8 then RZ[5]=vZ[ZD[0X6]];ZD=TG[mZ];mZ=mZ+1;(RZ)[5]=RZ[5][ZD[1]];mZ=mZ+0x1;local fs=(5);do mZ=mZ+0X0001;end;ZD=TG[mZ];mZ=mZ+1;RZ[6]=ZD[6];ZD=TG[mZ];mZ=mZ+1;RZ[0X7]=ZD[6];ZD=TG[mZ];do mZ=mZ+1;end;(RZ)[0x8]=ZD[6];mZ=mZ+0X1;TZ=fs+4-0X001;(RZ)[fs]=RZ[fs](V(RZ,fs+1,TZ));do TZ=fs;end;mZ=mZ+0X0001;do mZ=mZ+0X1;end;ZD=TG[mZ];mZ=mZ+0X00001;(vZ)[ZD[0X6]]=RZ[5];do ZD=TG[mZ];end;do mZ=mZ+0x1;end;mZ=ZD[0X5];else RZ[ZD[2]]=RZ[ZD[0X5]];end;end;end;else if not(SD>=3)then if SD>=1 then if SD~=2 then do RZ[8]=RZ[7][ZD[1]];end;do mZ=mZ+1;end;do mZ=mZ+1;end;ZD=TG[mZ];do mZ=mZ+0X00001;end;if not(RZ[0X008]<=RZ[2])then mZ=ZD[0X002];end;else do if RZ[ZD[0X05]]<RZ[ZD[0X04]]then mZ=ZD[0X2];end;end;end;else RZ[8]=vZ[ZD[0x0006]];local ME=8;do ZD=TG[mZ];end;mZ=mZ+0X00001;RZ[9]=RZ[0x7][ZD[1]];local LE=(0X04);mZ=mZ+0X1;local fE=0x2;if fE~=0 then do TZ=ME+fE-0X1;end;end;local eE,oE=nil,nil;if fE==1 then eE,oE=Cd(RZ[ME]());else do eE,oE=Cd(RZ[ME](V(RZ,ME+0X1,TZ)));end;end;if LE==1 then TZ=ME-0x1;else if LE==0X0 then eE=eE+ME-0X001;TZ=eE;else eE=ME+LE-2;TZ=eE+1;end;local S7=0;for Wo=ME,eE do do S7=S7+0x0001;end;(RZ)[Wo]=oE[S7];end;end;ZD=TG[mZ];mZ=mZ+1;do ME=8;end;local dE=(h(function(...)t();do for Mq,pq in...do(t)(true,Mq,pq);end;end;end));(dE)(RZ[ME],RZ[ME+1],RZ[ME+2]);TZ=ME;RZ[ME]=dE;do mZ=ZD[5];end;end;else if SD>=0X4 then if SD==0X5 then(RZ)[5]=vZ[ZD[0x0006]];local Ih=RZ[0X5];do mZ=mZ+0X1;end;mZ=mZ+0x1;ZD=TG[mZ];mZ=mZ+1;local Ph=(0X5);RZ[Ph+1]=Ih;RZ[Ph]=Ih[ZD[0x0001]];ZD=TG[mZ];mZ=mZ+0x001;(RZ)[7]=ZD[6];ZD=TG[mZ];mZ=mZ+1;(RZ)[8]=vZ[ZD[0X00006]];mZ=mZ+1;mZ=mZ+1;do mZ=mZ+0x001;end;(RZ)[0X8]=#RZ[8];mZ=mZ+0X1;do Ph=5;end;TZ=Ph+0X004-1;RZ[Ph]=RZ[Ph](V(RZ,Ph+1,TZ));TZ=Ph;mZ=mZ+1;mZ=mZ+0X001;ZD=TG[mZ];do mZ=mZ+1;end;do if RZ[5]==ZD[0X1]then else mZ=ZD[2];end;end;else RZ[ZD[0X2]]=f(RZ[ZD[0X005]]);end;else do RZ[0X5]=vZ[ZD[6]];end;ZD=TG[mZ];do mZ=mZ+1;end;do RZ[6]=RZ[0X004][ZD[0X1]];end;mZ=mZ+1;mZ=mZ+0X0001;ZD=TG[mZ];mZ=mZ+0X1;RZ[0X6]=RZ[6][ZD[1]];mZ=mZ+0x00001;mZ=mZ+0X01;do ZD=TG[mZ];end;mZ=mZ+0X1;if RZ[0X5]~=RZ[6]then mZ=ZD[2];end;end;end;end;else do if not(SD<20)then if SD>=0X17 then if SD<25 then if SD~=0x18 then RZ[13]=RZ[12][ZD[0x1]];mZ=mZ+1;mZ=mZ+0X1;do mZ=mZ+1;end;RZ[13]=RZ[0x2]-RZ[0Xd];ZD=TG[mZ];mZ=mZ+0X01;if not(not(RZ[13]<RZ[3]))then else mZ=ZD[2];end;else do(RZ)[ZD[0X2]]=vZ[ZD[6]];end;end;else if SD==0X1A then RZ[0Xc]=RZ[0x7][RZ[0XB]];mZ=mZ+0X00001;mZ=mZ+1;do ZD=TG[mZ];end;mZ=mZ+1;(RZ)[0X0D]=RZ[12][ZD[0X1]];ZD=TG[mZ];do mZ=mZ+0X1;end;do if not(not(RZ[0xD]<=RZ[0X0002]))then else do mZ=ZD[2];end;end;end;else(RZ)[5]=RZ[4][ZD[0X0001]];do mZ=mZ+1;end;mZ=mZ+0x1;ZD=TG[mZ];mZ=mZ+0X01;RZ[0X05]=RZ[0X5][ZD[1]];ZD=TG[mZ];mZ=mZ+0X1;(vZ)[ZD[0X06]]=RZ[0X5];do ZD=TG[mZ];end;mZ=mZ+1;(RZ)[5]=RZ[4][ZD[1]];mZ=mZ+1;mZ=mZ+0X1;ZD=TG[mZ];do mZ=mZ+0X1;end;RZ[0X5]=RZ[0X5][ZD[0x1]];mZ=mZ+1;mZ=mZ+0x001;ZD=TG[mZ];do mZ=mZ+0X1;end;vZ[ZD[0X0006]]=RZ[0x005];ZD=TG[mZ];mZ=mZ+1;(RZ)[5]=RZ[0x4][ZD[0X00001]];do ZD=TG[mZ];end;mZ=mZ+1;RZ[0x00005]=RZ[5][ZD[1]];do ZD=TG[mZ];end;mZ=mZ+1;vZ[ZD[6]]=RZ[0X5];ZD=TG[mZ];mZ=mZ+1;(RZ)[5]=RZ[0X00004][ZD[1]];ZD=TG[mZ];mZ=mZ+1;(RZ)[0x0005]=RZ[5][ZD[1]];do ZD=TG[mZ];end;mZ=mZ+0X00001;(vZ)[ZD[0X6]]=RZ[0X5];ZD=TG[mZ];do mZ=mZ+1;end;(RZ)[0X0005]=RZ[0x4][ZD[1]];mZ=mZ+0x01;mZ=mZ+0X1;ZD=TG[mZ];mZ=mZ+0X1;do RZ[0X5]=RZ[5][ZD[0X00001]];end;do mZ=mZ+1;end;do mZ=mZ+1;end;ZD=TG[mZ];do mZ=mZ+1;end;do vZ[ZD[0X6]]=RZ[5];end;ZD=TG[mZ];mZ=mZ+0X1;do RZ[0X00005]=RZ[0X4][ZD[1]];end;mZ=mZ+0x1;mZ=mZ+0x00001;ZD=TG[mZ];mZ=mZ+1;RZ[5]=RZ[0X0005][ZD[0x1]];do ZD=TG[mZ];end;mZ=mZ+1;vZ[ZD[0X0006]]=RZ[0X00005];ZD=TG[mZ];mZ=mZ+1;mZ=ZD[5];end;end;else if SD>=21 then if SD==0X16 then RZ[0X5]=RZ[0X4][ZD[1]];mZ=mZ+1;mZ=mZ+0X1;do ZD=TG[mZ];end;mZ=mZ+1;if not(not RZ[0X005])then else mZ=ZD[0X5];end;else do(RZ)[ZD[0X2]]=ZD[6];end;end;else RZ[0X5]=ZD[6];local hz=(0X5);ZD=TG[mZ];do mZ=mZ+1;end;local az=(RZ[0X5]);(RZ)[hz+0X1]=az;RZ[hz]=az[ZD[0X00001]];ZD=TG[mZ];mZ=mZ+1;RZ[7]=vZ[ZD[6]];mZ=mZ+0X1;mZ=mZ+1;do mZ=mZ+0X1;end;do hz=0X005;end;(RZ)[hz]=RZ[hz](RZ[hz+0x01],RZ[hz+0X2]);TZ=hz;ZD=TG[mZ];mZ=mZ+1;do if not(RZ[0X005])then else mZ=ZD[5];end;end;end;end;else if SD>=16 then if SD>=0X00012 then if SD~=19 then do if RZ[ZD[5]]~=RZ[ZD[0X4]]then mZ=ZD[2];end;end;else(RZ)[8]=ZD[0X0006];mZ=mZ+1;do(RZ)[9]=#RZ[0X07];end;ZD=TG[mZ];mZ=mZ+1;local vq=(0X8);do(RZ)[10]=ZD[6];end;ZD=TG[mZ];do mZ=mZ+1;end;local qq=RZ[vq+0X02];local Dq,Eq=RZ[vq],(RZ[vq+1]);do RZ[vq]=h(function()do for En=Dq,Eq,qq do t(true,En);end;end;end);end;mZ=ZD[0X5];end;else if SD~=17 then RZ[9]=RZ[7][ZD[1]];do ZD=TG[mZ];end;mZ=mZ+1;local q7=(10);RZ[0x000A]=vZ[ZD[6]];do ZD=TG[mZ];end;do mZ=mZ+1;end;do(RZ)[10]=RZ[10][ZD[1]];end;ZD=TG[mZ];mZ=mZ+0x01;do(RZ)[11]=RZ[0x7][ZD[0X001]];end;ZD=TG[mZ];mZ=mZ+1;RZ[0X00C]=vZ[ZD[0X0006]];mZ=mZ+1;(RZ)[q7]=RZ[q7](RZ[q7+0X1],RZ[q7+0x2]);do TZ=q7;end;mZ=mZ+0X1;mZ=mZ+0X1;mZ=mZ+1;RZ[9]=RZ[0x9][RZ[0xa]];do mZ=mZ+1;end;do mZ=mZ+1;end;ZD=TG[mZ];do mZ=mZ+1;end;if RZ[0x9]~=ZD[1]then mZ=ZD[0X00002];end;else local sL=(ZD[0x0002]);local kL,VL,PL=RZ[sL]();do if not(kL)then else do RZ[sL+1]=VL;end;do(RZ)[sL+2]=PL;end;mZ=ZD[0x00005];end;end;end;end;else do if not(SD<14)then if SD==15 then(RZ)[0X00E]=RZ[0X0C][ZD[0X1]];do mZ=mZ+1;end;do mZ=mZ+1;end;ZD=TG[mZ];mZ=mZ+1;if not(RZ[0xe])then else do mZ=ZD[0X5];end;end;else do(RZ)[0X00009]=RZ[7][ZD[1]];end;mZ=mZ+0x1;do mZ=mZ+0X001;end;ZD=TG[mZ];mZ=mZ+1;if RZ[9]then mZ=ZD[0x5];end;end;else(RZ)[5]=vZ[ZD[6]];ZD=TG[mZ];mZ=mZ+1;RZ[6]=vZ[ZD[0X6]];ZD=TG[mZ];mZ=mZ+0X1;do RZ[0X7]=vZ[ZD[0x0006]];end;mZ=mZ+0X1;mZ=mZ+0X0001;mZ=mZ+1;RZ[0X6]=RZ[6][RZ[0X07]];mZ=mZ+0x1;local T3=5;mZ=mZ+1;local U3=4;mZ=mZ+0X001;local J3=2;if J3==0X000 then else TZ=T3+J3-1;end;local H3,g3=nil,(nil);if J3==0X1 then do H3,g3=Cd(RZ[T3]());end;else H3,g3=Cd(RZ[T3](V(RZ,T3+0X0001,TZ)));end;if U3==0X1 then TZ=T3-1;else if U3~=0 then H3=T3+U3-2;TZ=H3+0X01;else do H3=H3+T3-0X1;end;TZ=H3;end;local uH=(0);do for zD=T3,H3 do uH=uH+1;do RZ[zD]=g3[uH];end;end;end;end;ZD=TG[mZ];mZ=mZ+0X1;T3=5;local m3=(h(function(...)t();for FZ,jZ in...do(t)(true,FZ,jZ);end;end));(m3)(RZ[T3],RZ[T3+1],RZ[T3+2]);TZ=T3;do(RZ)[T3]=m3;end;mZ=ZD[0X0005];end;end;end;end;end;end;end;end;end);if gZ then do if fZ then if PZ~=1 then return RZ[zZ](V(RZ,zZ+1,TZ));else do return RZ[zZ]();end;end;elseif not(zZ)then else return V(RZ,zZ,PZ);end;end;else if C(fZ)=="string"then if M(fZ,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if not(M(fZ,"\094\046\-\058%\d+\058\ "))then(E)(fZ,0X0);else(E)('\Lu\114\097\ph\ Scr\105\p\116\:'..(YG[mZ-1]or"\(\i\110\116\101\114\110\097\l\)")..'\: '..x(fZ),0);end;end;else(E)(fZ,0);end;end;end;end;end;end;end;end;end;else if lG<59 then if not(lG<0X39)then if lG~=0x03a then do hG=function(...)local HW,PW=1,({});local SW=(I());local eW,FW=(SW==a and SG or SW),{[0X0002]=PW,[0X1]=FG};local kW,xW=Cd(...);kW=kW-1;for LX=0,kW do if IG>LX then PW[LX]=xW[LX+0X01];else do break;end;end;end;local cW=0;do if not OG then do xW=nil;end;elseif not(zG)then else do(PW)[IG]={n=kW>=IG and kW-IG+1 or 0,V(xW,IG+1,kW+1)};end;end;end;do if eW~=SW then(R)(hG,eW);end;end;local aW,uW,zW,ZW=A(function()while true do local Zs=TG[HW];local fs=Zs[3];HW=HW+1;do if not(fs<0X9)then if fs<0xe then if not(fs<11)then do if fs<12 then local Pt=(Zs[2]);local qt,zt,bt=PW[Pt]();if not(qt)then else(PW)[Pt+1]=zt;do PW[Pt+2]=bt;end;HW=Zs[0X5];end;else if fs~=0xd then do for kh=Zs[2],Zs[0X5]do(PW)[kh]=nil;end;end;else if PW[Zs[5]]<PW[Zs[0X4]]then HW=Zs[0X2];end;end;end;end;else if fs~=10 then repeat local Nz,cz=iG,(PW);if#Nz>0 then local wL=({});for c2,L2 in l,Nz do for yR,CR in l,L2 do if not(CR[0X1]==cz and CR[0x2]>=0)then else local on=(CR[2]);if not wL[on]then(wL)[on]={cz[on]};end;CR[1]=wL[on];do(CR)[0X2]=0X1;end;end;end;end;end;until true;return false,Zs[0X00002],cW;else local b1=(Zs[0x00002]);do for Si=b1,b1+(Zs[5]-1)do PW[Si]=xW[IG+(Si-b1)+1];end;end;end;end;else if not(fs<0X10)then if not(fs>=17)then else if fs~=18 then do(PW)[0x2]=eW[Zs[6]];end;Zs=TG[HW];do HW=HW+1;end;(PW)[Zs[0x2]]=PW[1];Zs=TG[HW];HW=HW+1;local YZ=Zs[2];repeat local ry,iy=iG,(PW);if not(#ry>0X0000)then else local rT=({});for uJ,jJ in l,ry do for xu,Lu in l,jJ do if Lu[1]==iy and Lu[0X2]>=0X0 then local wu=Lu[2];if not rT[wu]then rT[wu]={iy[wu]};end;Lu[0X01]=rT[wu];(Lu)[0X2]=1;end;end;end;end;until true;cW=YZ+1;do return true,YZ,0X2;end;else local o7=(Zs[2]);local A7=Zs[0x5];cW=o7+A7-1;repeat local RJ,BJ=iG,PW;if#RJ>0 then local Kn={};for Li,Ui in l,RJ do for s6,F6 in l,Ui do if F6[0X1]==BJ and F6[0x02]>=0 then local Z3=F6[0x2];if not Kn[Z3]then Kn[Z3]={BJ[Z3]};end;F6[1]=Kn[Z3];F6[0X2]=1;end;end;end;end;until true;do return true,o7,A7;end;end;end;else if fs~=15 then PW[3]=eW[Zs[6]];Zs=TG[HW];do HW=HW+1;end;do cW=Zs[0X2];end;(PW)[cW]=PW[cW]();Zs=TG[HW];HW=HW+1;do HW=Zs[0X5];end;else local Zb=Zs[2];do PW[Zb]=PW[Zb](PW[Zb+1],PW[Zb+2]);end;do cW=Zb;end;HW=HW+1;do HW=HW+0x1;end;do Zs=TG[HW];end;HW=HW+0X1;local nb=(PW[0X1]);do Zb=0X1;end;do PW[Zb+1]=nb;end;PW[Zb]=nb[Zs[1]];Zs=TG[HW];HW=HW+1;(PW)[0X3]=Zs[6];HW=HW+1;Zb=0X1;PW[Zb]=PW[Zb](PW[Zb+1],PW[Zb+2]);cW=Zb;Zs=TG[HW];HW=HW+0X001;(PW)[Zs[2]]=eW[Zs[6]];HW=HW+0x1;HW=HW+1;Zs=TG[HW];HW=HW+0x1;PW[Zs[0X2]]=PW[0x1];Zs=TG[HW];HW=HW+0X00001;do Zb=Zs[0X2];end;local kb=(Zs[5]);if kb~=0 then cW=Zb+kb-0x001;end;local Jb,Nb=nil,nil;local bb=Zs[0X4];if kb==0x00001 then Jb,Nb=Cd(PW[Zb]());else do Jb,Nb=Cd(PW[Zb](V(PW,Zb+1,cW)));end;end;if bb~=1 then if bb==0X0 then Jb=Jb+Zb-1;cW=Jb;else do Jb=Zb+bb-0x2;end;cW=Jb+0X1;end;local tX=0X0;do for hf=Zb,Jb do tX=tX+0x01;(PW)[hf]=Nb[tX];end;end;else cW=Zb-1;end;Zs=TG[HW];HW=HW+0X1;Zb=0X00002;local tb=(h(function(...)t();for Yw,Zw in...do(t)(true,Yw,Zw);end;end));tb(PW[Zb],PW[Zb+0x1],PW[Zb+0X0002]);cW=Zb;(PW)[Zb]=tb;HW=Zs[5];end;end;end;else if fs<0x04 then if not(fs<2)then do if fs==0x3 then HW=Zs[0X05];else(PW)[Zs[2]]=eW[Zs[0x6]];HW=HW+1;HW=HW+1;do Zs=TG[HW];end;HW=HW+0X1;(PW)[0X0001]=PW[0X01][Zs[0X1]];do Zs=TG[HW];end;HW=HW+1;do PW[Zs[2]]=Zs[6];end;Zs=TG[HW];do HW=HW+1;end;(PW)[Zs[2]]=PW[0X00];Zs=TG[HW];HW=HW+0X00001;if PW[0X3]then HW=Zs[0X5];end;end;end;else if fs==1 then PW[Zs[0X2]]=Zs[6];else local jb,Vb=JG[Zs[0X5]],nil;local nb=jb[4];local Bb=(#nb);if Bb>0X0 then Vb={};for xS=1,Bb do local HS=nb[xS];if HS[1]==0 then Vb[xS-1]={PW,HS[2]};else(Vb)[xS-0X1]=cG[HS[2]];end;end;(H)(iG,Vb);end;(PW)[Zs[0x00002]]=ed(eW,jb,Vb);end;end;else if fs>=0X6 then if not(fs>=7)then(PW)[0X5]=eW[Zs[0X00006]];Zs=TG[HW];do HW=HW+0X1;end;PW[Zs[2]]=PW[Zs[5]];local XD=(5);HW=HW+0X0001;do(PW)[XD]=PW[XD](PW[XD+0X00001]);end;cW=XD;do Zs=TG[HW];end;HW=HW+0X1;(PW[Zs[0X002]])[PW[0X0003]]=PW[Zs[4]];else if fs~=8 then do(PW)[Zs[0X2]]={V({},1,Zs[0X5])};end;else do PW[Zs[0x2]]=eW[Zs[0X6]];end;end;end;else if fs~=5 then repeat local KJ,hJ=iG,PW;do if#KJ>0X00 then local zl={};do for V1,C1 in l,KJ do for km,sm in l,C1 do do if sm[0X1]==hJ and sm[2]>=0X000 then local ez=(sm[0X0002]);if not(not zl[ez])then else zl[ez]={hJ[ez]};end;(sm)[1]=zl[ez];sm[2]=0X1;end;end;end;end;end;end;end;until true;return;else repeat local OI,VI=iG,PW;if not(#OI>0)then else local Cn=({});for aj,ij in l,OI do for Oe,ae in l,ij do do if ae[0X1]==VI and ae[2]>=0 then local p2=(ae[0X2]);if not(not Cn[p2])then else(Cn)[p2]={VI[p2]};end;(ae)[1]=Cn[p2];do(ae)[2]=0X1;end;end;end;end;end;end;until true;local Xk=(Zs[2]);do return false,Xk,Xk+Zs[0X5]-0X2;end;end;end;end;end;end;end;end);if aW then if uW then if ZW==1 then return PW[zW]();else return PW[zW](V(PW,zW+1,cW));end;elseif zW then return V(PW,zW,ZW);end;else if C(uW)~="string"then E(uW,0);else if M(uW,"\097\116t\e\mp\116\032t\o \121i\e\108\d\ \097\cro\s\115\ \109\et\097m\e\116h\od\/\067%-c\097\ll\032b\111u\110d\097ry")then return coroutine.yield();end;if M(uW,"\^\.\045\:\%\d+: ")then E("\076ur\097\ph\ \083\099\114\i\pt\:"..(YG[HW-0x1]or"(\in\116\er\110a\l\041")..": "..x(uW),0);else E(uW,0);end;end;end;end;end;else do hG=function(...)local Wr=1;local Nr=({});local Zr=({[0X0002]=Nr,[0X1]=FG});local Er=I();local Vr=((Er==a and SG or Er));local Ir,Pr=Cd(...);Ir=Ir-0X1;do for m2=0x00000,Ir do if IG>m2 then(Nr)[m2]=Pr[m2+0x01];else break;end;end;end;if not OG then Pr=nil;elseif zG then do(Nr)[IG]={n=Ir>=IG and Ir-IG+0X1 or 0,V(Pr,IG+0x0001,Ir+1)};end;end;if Vr==Er then else(R)(hG,Vr);end;local pr=(0X0);while true do local Dd=TG[Wr];local pZ=(Dd[3]);Wr=Wr+1;return(function(d,e,...)local h=d[0];if not h then return;end;local G="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";h=string.gsub(deCustomCrypt(h:split("!")),"[^"..G.."=]","");return(h:gsub(".",function(a)if a=="="then return"";end;local q,X="",(G:find(a)-1);for y=6,1,-1.0 do q=q..(X%2^y-X%2^(y-1)>0 and"1"or"0");end;return q;end):gsub("%d%d%d?%d?%d?%d?%d?%d?",function(V)if#V~=8 then return"";end;local Q=0;for H=1,8 do Q=Q+(V:sub(H,H)=="1"and 2^(8-H)or 0);end;return string.char(Q);end));end)(Nr,cG,...);end;end;end;end;else if lG~=0X038 then hG=function(...)local HK,wK=0X1,({});local GK=0X0;local YK={[0X0002]=wK,[0X1]=FG};local sK=(I());local XK,tK=Cd(...);XK=XK-1;local bK=(sK==a and SG or sK);do for iK=0x0,XK do if not(IG>iK)then break;else wK[iK]=tK[iK+0x001];end;end;end;if not OG then tK=nil;elseif zG then wK[IG]={n=XK>=IG and XK-IG+1 or 0,V(tK,IG+1,XK+1)};end;if bK==sK then else R(hG,bK);end;local KK,MK,cK,aK=A(function()do while true do local Lo=(TG[HK]);local bo=Lo[3];do HK=HK+0X1;end;do if not(bo>=0X00F)then if bo>=0X00007 then if bo<0x00B then if not(bo<9)then do if bo~=10 then wK[0x00]=bK[Lo[6]];Lo=TG[HK];HK=HK+1;do wK[0X00000]=wK[0][Lo[0x1]];end;Lo=TG[HK];HK=HK+0x1;if not(not wK[0])then else HK=Lo[5];end;else wK[Lo[2]]=wK[Lo[5]]/wK[Lo[4]];end;end;else if bo==0X8 then(wK)[2]=wK[1][Lo[1]];HK=HK+1;HK=HK+0x1;do Lo=TG[HK];end;HK=HK+1;if not wK[0x00002]then HK=Lo[0X5];end;else end;end;else if bo<13 then if bo~=0XC then wK[0X0]=bK[Lo[0X6]];Lo=TG[HK];HK=HK+1;wK[0]=wK[0][Lo[1]];do HK=HK+1;end;HK=HK+0X1;Lo=TG[HK];HK=HK+0X00001;if not wK[0x0]then HK=Lo[5];end;else wK[2]=bK[Lo[0X0006]];Lo=TG[HK];HK=HK+1;local RY=(JG[Lo[0X5]]);local HY=(nil);local aY=RY[4];local BY=#aY;if not(BY>0)then else HY={};for Gu=0X1,BY do local du=(aY[Gu]);if du[1]==0 then HY[Gu-1]={wK,du[0X002]};else do(HY)[Gu-0X001]=cG[du[0x02]];end;end;end;(H)(iG,HY);end;(wK)[0X03]=ed(bK,RY,HY);local fY=2;HK=HK+0X1;(wK[fY])(wK[fY+0X1]);GK=fY-0X1;HK=HK+1;do HK=HK+1;end;Lo=TG[HK];HK=HK+0x1;do(wK)[2]=bK[Lo[6]];end;Lo=TG[HK];do HK=HK+1;end;local yY=wK[0X2];do fY=2;end;wK[fY+0X01]=yY;wK[fY]=yY[Lo[1]];Lo=TG[HK];HK=HK+0X1;wK[4]=Lo[6];Lo=TG[HK];HK=HK+1;do wK[0X5]=Lo[6];end;Lo=TG[HK];do HK=HK+0X001;end;wK[6]=Lo[0X006];HK=HK+0X1;fY=0X2;GK=fY+0X05-0X001;wK[fY](V(wK,fY+1,GK));GK=fY-0X1;HK=HK+0x01;do HK=HK+0X00001;end;Lo=TG[HK];HK=HK+0X1;do HK=Lo[0X5];end;end;else if bo==0x0E then do wK[Lo[2]]={V({},0x1,Lo[5])};end;else do(wK)[Lo[2]]=bK[Lo[6]];end;end;end;end;else if not(bo<3)then if not(bo>=5)then if bo==0X4 then if not wK[Lo[0X2]]then HK=Lo[5];end;else local Xv=JG[Lo[0X05]];local Bv,iv=Xv[4],(nil);local Ov=#Bv;if Ov>0 then iv={};do for ng=1,Ov do local Vg=(Bv[ng]);if Vg[0X1]==0 then do iv[ng-1]={wK,Vg[0X2]};end;else iv[ng-1]=cG[Vg[2]];end;end;end;(H)(iG,iv);end;(wK)[Lo[0X2]]=ed(bK,Xv,iv);end;else if bo==6 then wK[3]=wK[1][Lo[1]];HK=HK+1;do HK=HK+0x1;end;Lo=TG[HK];do HK=HK+0x1;end;do(wK)[0x3]=wK[3][Lo[0x1]];end;Lo=TG[HK];HK=HK+0X00001;if wK[3]==Lo[1]then HK=Lo[2];end;else repeat local MW,aW=iG,(wK);if not(#MW>0)then else local J8={};for KJ,CJ in l,MW do do for Zu,fu in l,CJ do if fu[1]==aW and fu[0X2]>=0 then local nj=(fu[0X00002]);if not J8[nj]then do(J8)[nj]={aW[nj]};end;end;(fu)[0X1]=J8[nj];do fu[2]=1;end;end;end;end;end;end;until true;return;end;end;else if not(bo<0X1)then if bo==0x0002 then wK[0x00]=bK[Lo[0x06]];HK=HK+0X01;do GK=0;end;wK[GK]=wK[GK]();HK=HK+0X1;HK=HK+1;do Lo=TG[HK];end;HK=HK+1;do if wK[0X0]<Lo[1]then HK=Lo[0X2];end;end;else wK[2]=false;Lo=TG[HK];HK=HK+0X1;(bK)[Lo[0X006]]=wK[0X002];do Lo=TG[HK];end;HK=HK+1;do HK=Lo[0x05];end;end;else do(wK)[0x2]=wK[1][Lo[1]];end;Lo=TG[HK];HK=HK+1;wK[0X02]=wK[2][Lo[0x01]];HK=HK+1;do HK=HK+1;end;Lo=TG[HK];HK=HK+0X1;if wK[0X2]==Lo[1]then HK=Lo[0X2];end;end;end;end;else do if not(bo>=0x17)then do if not(bo<0X13)then do if not(bo<21)then do if bo==0X000016 then(wK)[Lo[2]]=wK[Lo[0X5]]-wK[Lo[4]];else wK[Lo[0x02]]=YK[Lo[5]];end;end;else if bo~=20 then HK=Lo[0X5];else do for Di=Lo[2],Lo[5]do(wK)[Di]=nil;end;end;end;end;end;else if bo<0x00011 then if bo~=0x10 then(wK)[1]=bK[Lo[6]];HK=HK+0X1;HK=HK+0X00001;Lo=TG[HK];HK=HK+0x00001;local mt=(1);(wK)[0X1]=wK[1][Lo[0X1]];Lo=TG[HK];HK=HK+0X001;local Kt=(wK[1]);wK[mt+0X1]=Kt;wK[mt]=Kt[Lo[1]];Lo=TG[HK];HK=HK+1;(wK)[3]=Lo[6];HK=HK+1;mt=0x1;do wK[mt]=wK[mt](wK[mt+1],wK[mt+0X00002]);end;do GK=mt;end;HK=HK+0X1;HK=HK+1;do Lo=TG[HK];end;do HK=HK+0x1;end;if not(wK[1])then else do HK=Lo[5];end;end;else local I6=(wK[0]);local j6=(0X1);wK[j6+1]=I6;do(wK)[j6]=I6[Lo[1]];end;Lo=TG[HK];HK=HK+0X0001;do(wK)[0X03]=Lo[6];end;HK=HK+0X1;j6=0X1;(wK)[j6]=wK[j6](wK[j6+1],wK[j6+2]);do GK=j6;end;HK=HK+1;HK=HK+0X1;Lo=TG[HK];HK=HK+1;if not wK[0X0001]then HK=Lo[5];end;end;else do if bo==0x12 then do(wK)[Lo[2]]=Lo[0x6];end;else wK[2]=true;Lo=TG[HK];local hm=0X02;do HK=HK+0x1;end;bK[Lo[0X006]]=wK[2];Lo=TG[HK];HK=HK+1;wK[2]=bK[Lo[0x6]];do HK=HK+1;end;HK=HK+1;Lo=TG[HK];HK=HK+0X1;wK[3]=Lo[6];HK=HK+0x1;(wK)[hm]=wK[hm](wK[hm+1]);GK=hm;do HK=HK+0x0001;end;HK=HK+1;Lo=TG[HK];HK=HK+1;do if not wK[0x2]then do HK=Lo[0X0005];end;end;end;end;end;end;end;end;else do if bo>=27 then if bo<0X01d then if bo~=0X01C then local iW=(cG[0x0]);(wK)[2]=iW[0X001][iW[0x2]];do Lo=TG[HK];end;HK=HK+1;local AW,WW=2,wK[2];wK[AW+0x1]=WW;wK[AW]=WW[Lo[1]];HK=HK+0X1;do AW=2;end;(wK[AW])(wK[AW+0X1]);GK=AW-0x1;HK=HK+1;HK=HK+0X1;HK=HK+1;repeat local Dd,Ic=iG,wK;do if not(#Dd>0)then else local Y2={};for kp,sp in l,Dd do for gB,cB in l,sp do if cB[0x1]==Ic and cB[0X00002]>=1 then local nQ=(cB[2]);if not Y2[nQ]then(Y2)[nQ]={Ic[nQ]};end;cB[0X00001]=Y2[nQ];(cB)[0x2]=1;end;end;end;end;end;until true;do Lo=TG[HK];end;do HK=HK+1;end;HK=Lo[0X005];else wK[0x001]={V({},1,0X1)};Lo=TG[HK];local UM=(0X2);HK=HK+0x01;wK[0x02]=bK[Lo[6]];Lo=TG[HK];do HK=HK+0X1;end;local rM=(wK[0X02]);wK[UM+0X1]=rM;(wK)[UM]=rM[Lo[1]];Lo=TG[HK];HK=HK+0X1;wK[0X04]=Lo[0X6];HK=HK+1;UM=0X02;(wK)[UM]=wK[UM](wK[UM+0X001],wK[UM+0X2]);local dM=(0X01-0x1)*50;GK=UM;Lo=TG[HK];HK=HK+0x1;wK[0X03]=bK[Lo[0X6]];HK=HK+1;HK=HK+0x00001;local tM=0x3;Lo=TG[HK];HK=HK+0x00001;UM=0x3;rM=wK[0X3];wK[UM+0X1]=rM;(wK)[UM]=rM[Lo[0x001]];Lo=TG[HK];HK=HK+0x001;do wK[5]=Lo[0X6];end;HK=HK+1;UM=0X3;local JM=0X0;if tM~=0 then GK=UM+tM-1;end;local eM,XM=nil,nil;do if tM~=0X1 then eM,XM=Cd(wK[UM](V(wK,UM+1,GK)));else do eM,XM=Cd(wK[UM]());end;end;end;if JM==1 then GK=UM-1;else if JM~=0 then eM=UM+JM-2;GK=eM+1;else eM=eM+UM-0X1;do GK=eM;end;end;local Bs=(0);for X0=UM,eM do do Bs=Bs+1;end;do(wK)[X0]=XM[Bs];end;end;end;HK=HK+1;UM=0X0001;local IM=(wK[UM]);for SJ=1,GK-UM do do IM[dM+SJ]=wK[UM+SJ];end;end;Lo=TG[HK];HK=HK+0X00001;do(wK)[0X0002]=bK[Lo[6]];end;do HK=HK+0X0001;end;HK=HK+1;Lo=TG[HK];do HK=HK+1;end;wK[3]=Lo[6];Lo=TG[HK];do HK=HK+0X1;end;(wK)[4]=Lo[6];HK=HK+0X1;do UM=2;end;(wK[UM])(wK[UM+1],wK[UM+0X2]);GK=UM-0X1;do HK=HK+1;end;do HK=HK+1;end;do Lo=TG[HK];end;HK=HK+1;do wK[0X0002]=wK[1][Lo[1]];end;HK=HK+0X01;HK=HK+0X1;Lo=TG[HK];HK=HK+0X01;do if not wK[0X2]then HK=Lo[5];end;end;end;else if bo==30 then(wK)[Lo[2]]=Lo[6];else wK[1]=bK[Lo[0X6]];HK=HK+1;do HK=HK+0X00001;end;do Lo=TG[HK];end;HK=HK+1;(wK)[1]=wK[1][Lo[0X0001]];Lo=TG[HK];HK=HK+0X1;do wK[1]=wK[0X1][Lo[0X1]];end;Lo=TG[HK];HK=HK+0x00001;if not(not(wK[0x0001]<Lo[1]))then else HK=Lo[0x0002];end;end;end;else if bo<0x00019 then do if bo~=0X18 then do wK[0X0002]=bK[Lo[0X00006]];end;Lo=TG[HK];local po=(0X00002);HK=HK+0X01;do wK[3]=Lo[0X006];end;do HK=HK+0X1;end;(wK[po])(wK[po+0X1]);do GK=po-1;end;Lo=TG[HK];HK=HK+1;do HK=Lo[0X5];end;else local uz,fz=cG[0x00],(1);(wK)[0x1]=uz[1][uz[2]];HK=HK+0x1;do HK=HK+1;end;Lo=TG[HK];do HK=HK+1;end;local pz=wK[1];wK[fz+1]=pz;(wK)[fz]=pz[Lo[0X001]];HK=HK+0X0001;fz=0x1;wK[fz]=wK[fz](wK[fz+0X00001]);GK=fz;HK=HK+0X1;do HK=HK+1;end;Lo=TG[HK];HK=HK+1;if not(not wK[0x01])then else HK=Lo[0X5];end;end;end;else if bo==0X001a then(wK)[0x000]=bK[Lo[6]];HK=HK+1;HK=HK+0X01;do Lo=TG[HK];end;HK=HK+1;do wK[0]=wK[0x0][Lo[0x1]];end;do Lo=TG[HK];end;local Es=0;do HK=HK+1;end;wK[1]=Lo[0X06];do HK=HK+1;end;wK[Es]=wK[Es](wK[Es+1]);GK=Es;HK=HK+1;HK=HK+1;Lo=TG[HK];HK=HK+1;if not wK[0]then HK=Lo[5];end;else wK[0X0000]=bK[Lo[0X0006]];do HK=HK+1;end;HK=HK+0X1;Lo=TG[HK];do HK=HK+1;end;(wK)[0X1]=Lo[0X06];local n7=0X0;do Lo=TG[HK];end;HK=HK+1;(wK)[2]=Lo[6];HK=HK+0X1;wK[n7]=wK[n7](wK[n7+0X00001],wK[n7+0x002]);GK=n7;HK=HK+0X1;do HK=HK+0X1;end;Lo=TG[HK];HK=HK+1;if not(not wK[0x0])then else HK=Lo[0X5];end;end;end;end;end;end;end;end;end;end;end;end);do if not(KK)then if C(MK)~="string"then E(MK,0X0);else if M(MK,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;do if M(MK,"^.-:%d+: ")then E("Luraph Script:"..(YG[HK-1]or"(internal)").."\:\ "..x(MK),0X0);else E(MK,0X0);end;end;end;else if MK then if aK~=1 then return wK[cK](V(wK,cK+1,GK));else return wK[cK]();end;elseif not(cK)then else return V(wK,cK,aK);end;end;end;end;else hG=function(...)local p3=(0);local S3=({});local f3=({[0X0002]=S3,[0X1]=FG});local i3=(I());local r3=0X001;local R3,X3=Cd(...);R3=R3-1;for Lo=0,R3 do do if IG>Lo then do S3[Lo]=X3[Lo+1];end;else break;end;end;end;local g3=((i3==a and SG or i3));if not OG then do X3=nil;end;elseif not(zG)then else S3[IG]={n=R3>=IG and R3-IG+0X00001 or 0X0,V(X3,IG+1,R3+1)};end;do if g3~=i3 then(R)(hG,g3);end;end;local C3,e3,u3,U3=A(function()while true do local Zn=TG[r3];local Mn=(Zn[0X3]);do r3=r3+1;end;if Mn>=0x7 then if Mn>=11 then do if not(Mn<0X0000d)then if Mn==0Xe then S3[Zn[2]]=g3[Zn[0X00006]];else(S3)[Zn[0X00002]]=T(S3[Zn[5]],S3[Zn[0X004]]);end;else do if Mn==12 then r3=Zn[5];else local Kk=Zn[2];local wk=(S3[Kk]);local Vk,Fk=S3[Kk+1],(S3[Kk+0x2]);(S3)[Kk]=h(function()for Nw=wk,Vk,Fk do(t)(true,Nw);end;end);do r3=Zn[5];end;end;end;end;end;else do if not(Mn>=0x9)then if Mn==0X08 then S3[Zn[2]]=b(S3[Zn[0X5]],S3[Zn[0X00004]]);else S3[0]=g3[Zn[6]];local cY=nil;Zn=TG[r3];local OY=(0X000);r3=r3+0x001;local tY=S3[0X0];S3[OY+0X1]=tY;(S3)[OY]=tY[Zn[1]];do Zn=TG[r3];end;r3=r3+1;do(S3)[2]=Zn[0X006];end;do r3=r3+0x0001;end;OY=0X0;(S3)[OY]=S3[OY](S3[OY+1],S3[OY+0x2]);p3=OY;do r3=r3+0X01;end;r3=r3+1;do Zn=TG[r3];end;r3=r3+0X00001;S3[1]=g3[Zn[0X006]];r3=r3+1;do r3=r3+0X01;end;Zn=TG[r3];r3=r3+0x01;do S3[0X1]=S3[0X1][Zn[0x1]];end;Zn=TG[r3];r3=r3+1;local mY=(JG[Zn[0x5]]);local UY=(mY[0x4]);local ZY=(#UY);do if not(ZY>0x0)then else cY={};do for O8=0X1,ZY do local v8=(UY[O8]);if v8[1]==0X0000 then(cY)[O8-0X1]={S3,v8[2]};else(cY)[O8-0X0001]=cG[v8[2]];end;end;end;H(iG,cY);end;end;(S3)[2]=ed(g3,mY,cY);do r3=r3+1;end;OY=0X1;(S3[OY])(S3[OY+0X1]);p3=OY-0X1;do r3=r3+1;end;do repeat local J8,X8=iG,(S3);if not(#J8>0X000)then else local Tq=({});do for sv,Bv in l,J8 do do for BS,IS in l,Bv do if IS[1]==X8 and IS[2]>=0 then local jb=(IS[0x02]);if not Tq[jb]then Tq[jb]={X8[jb]};end;do IS[1]=Tq[jb];end;IS[0X0002]=0X1;end;end;end;end;end;end;until true;end;return;end;else if Mn~=10 then local GA=(Zn[0X02]);local BA=(h(function(...)t();for Sl,Tl,Hl,Ml,ql,Al,nl,dl,hl,Dl in...do t(true,{Sl,Tl,Hl,Ml,ql,Al,nl,dl,hl,Dl});end;end));(BA)(S3[GA],S3[GA+0X1],S3[GA+0X2]);do p3=GA;end;S3[GA]=BA;r3=Zn[0X00005];else local DX=Zn[5];local MX=(S3[DX]);do for Oj=DX+1,Zn[0x4]do MX=MX..S3[Oj];end;end;do(S3)[Zn[2]]=MX;end;end;end;end;end;else if Mn<0X3 then if Mn<1 then for t6=Zn[0X2],Zn[5]do(S3)[t6]=nil;end;else if Mn~=0X2 then S3[Zn[0X2]]=true;else S3[Zn[0x00002]]={V({},0x1,Zn[5])};end;end;else if not(Mn>=0x005)then if Mn==0X00004 then local pS=(JG[Zn[5]]);local OS=(nil);local qS=pS[4];local jS=#qS;if not(jS>0)then else OS={};do for dx=1,jS do local mx=(qS[dx]);if mx[1]==0 then OS[dx-0X0001]={S3,mx[0x002]};else OS[dx-0X1]=cG[mx[0X2]];end;end;end;H(iG,OS);end;do S3[Zn[2]]=ed(g3,pS,OS);end;else S3[Zn[0X2]]=Zn[6];end;else if Mn~=0X006 then else do S3[Zn[0X2]]=S3[Zn[5]]>=S3[Zn[0X4]];end;end;end;end;end;end;end);do if C3 then do if e3 then if U3==1 then return S3[u3]();else do return S3[u3](V(S3,u3+0x1,p3));end;end;elseif u3 then return V(S3,u3,U3);end;end;else if C(e3)~="\115\116\114\105\110\g"then(E)(e3,0);else if not(M(e3,'\097\116\116\em\112\116 t\111\032y\i\101\ld\032a\cr\o\115\s\ met\097\109\e\116hod\047\C%\-\099\097\ll boun\d\097r\121'))then else return coroutine.yield();end;if M(e3,"^.-:%d+: ")then(E)("Luraph Script:"..(YG[r3-0X0001]or"(\i\110\116\er\110a\l\041")..'\:\032'..x(e3),0X0);else E(e3,0);end;end;end;end;end;end;end;else if lG<61 then if lG~=0X3C then do hG=function(...)local pf,If=1,{};local gf=(I());local Lf=(gf==a and SG or gf);local Yf,Pf=Cd(...);Yf=Yf-0X1;local mf,uf={[0X1]=FG,[0X0002]=If},0;for ES=0,Yf do if not(IG>ES)then break;else(If)[ES]=Pf[ES+0x001];end;end;if not OG then Pf=nil;elseif zG then If[IG]={n=Yf>=IG and Yf-IG+0X1 or 0,V(Pf,IG+0X0001,Yf+0x1)};end;if Lf~=gf then(R)(hG,Lf);end;local jf,df,Mf,Uf=A(function()while true do local ah=(TG[pf]);local Fh=(ah[0X00003]);do pf=pf+1;end;if not(Fh<13)then if not(Fh>=19)then if not(Fh<16)then do if not(Fh>=0X0011)then do(If)[1]=Lf[ah[0X00006]];end;pf=pf+0X1;pf=pf+0x00001;ah=TG[pf];do pf=pf+0X1;end;If[0X1]=If[0X1][ah[1]];ah=TG[pf];pf=pf+0x00001;pf=ah[5];else if Fh==0X12 then do(If)[ah[0X002]]=If[ah[0X5]]-ah[1];end;else If[ah[0X02]]=If[ah[5]]==If[ah[0X4]];end;end;end;else do if not(Fh>=0X000E)then local f3=ah[0x2];local M3,Q3,v3=If[f3]();if M3 then do If[f3+1]=Q3;end;If[f3+0X2]=v3;pf=ah[0x00005];end;else if Fh==15 then do(If)[0X0]=Lf[ah[0X006]];end;do pf=pf+0x00001;end;pf=pf+1;ah=TG[pf];pf=pf+1;do(If)[0X0000]=If[0x0][ah[0X00001]];end;pf=pf+0X0001;do pf=pf+0X001;end;ah=TG[pf];pf=pf+0X1;if not(If[0X0])then else do pf=ah[0X5];end;end;else(If)[0X1]=true;ah=TG[pf];do pf=pf+0x1;end;(Lf)[ah[0X0006]]=If[0x01];ah=TG[pf];pf=pf+0X01;do pf=ah[0x00005];end;end;end;end;end;else do if Fh>=0X16 then if Fh>=0X000018 then do if Fh~=25 then If[ah[2]]=ah[0X6];else end;end;else do if Fh~=0x00017 then If[ah[2]]=If[ah[5]]~=If[ah[0X4]];else do pf=ah[0X5];end;end;end;end;else do if not(Fh<20)then do if Fh==0X15 then local VX=JG[ah[0X5]];local xX=(VX[4]);local PX,fX=#xX,nil;do if PX>0 then fX={};for AE=0X00001,PX do local sE=(xX[AE]);if sE[1]==0X000 then fX[AE-1]={If,sE[0X00002]};else fX[AE-0X0001]=cG[sE[2]];end;end;H(iG,fX);end;end;(If)[ah[0x00002]]=ed(Lf,VX,fX);else(If)[4]=Lf[ah[0x6]];pf=pf+1;pf=pf+1;ah=TG[pf];pf=pf+1;If[0X4]=If[0X4][ah[0X1]];pf=pf+1;do pf=pf+0X0001;end;pf=pf+1;local Wn=(4);(If)[5]=If[0x000];pf=pf+1;(If)[6]=If[0X3];pf=pf+0x01;(If[Wn])(If[Wn+1],If[Wn+0X02]);uf=Wn-1;pf=pf+1;do pf=pf+1;end;end;end;else if not(not(If[ah[0X0005]]<If[ah[4]]))then else pf=ah[0X2];end;end;end;end;end;end;else if not(Fh>=0X6)then do if not(Fh>=3)then do if Fh>=0X0001 then if Fh==0X2 then do(If)[ah[0X2]]=Lf[ah[0X006]];end;else(If)[0]=Lf[ah[0X0006]];pf=pf+0X1;pf=pf+0X1;do ah=TG[pf];end;pf=pf+0x1;If[0x0]=If[0x000][ah[1]];pf=pf+1;pf=pf+1;ah=TG[pf];pf=pf+0x0001;(If)[0]=If[0X00][ah[1]];ah=TG[pf];pf=pf+0X001;If[1]=Lf[ah[6]];ah=TG[pf];do pf=pf+1;end;(If)[0X1]=If[1][ah[1]];ah=TG[pf];pf=pf+0X0001;if not If[1]then do pf=ah[5];end;end;end;else if If[ah[2]]then pf=ah[5];end;end;end;else if not(Fh>=0X4)then do for GB=ah[2],ah[5]do If[GB]=nil;end;end;else do if Fh~=0X5 then local tq=(JG[ah[5]]);local vq=(tq[0X00004]);local Oq,zq=#vq,(nil);do if Oq>0X000 then zq={};for cE=1,Oq do local dE=vq[cE];if dE[1]==0 then(zq)[cE-0x1]={If,dE[2]};else zq[cE-1]=cG[dE[0x02]];end;end;(H)(iG,zq);end;end;(If)[0]=ed(Lf,tq,zq);do ah=TG[pf];end;do pf=pf+1;end;do If[1]=Lf[ah[6]];end;do pf=pf+1;end;pf=pf+0x1;pf=pf+1;If[2]={V({},1,17)};ah=TG[pf];pf=pf+0X1;(If)[0X3]=ah[6];do ah=TG[pf];end;do pf=pf+0x0001;end;(If)[0X4]=ah[0X0006];ah=TG[pf];pf=pf+1;(If)[0X5]=ah[0X00006];ah=TG[pf];pf=pf+1;If[0x6]=ah[6];do ah=TG[pf];end;pf=pf+0X1;(If)[7]=ah[6];ah=TG[pf];do pf=pf+1;end;If[0X8]=ah[0X6];ah=TG[pf];pf=pf+1;If[9]=ah[6];ah=TG[pf];pf=pf+1;(If)[0X0000a]=ah[0X6];ah=TG[pf];do pf=pf+0x01;end;(If)[11]=ah[0x6];ah=TG[pf];pf=pf+0X01;do(If)[12]=ah[6];end;local yq=(0X002);ah=TG[pf];pf=pf+0X1;local sq=0X02;(If)[13]=ah[0X6];ah=TG[pf];pf=pf+0X1;(If)[14]=ah[0x6];ah=TG[pf];pf=pf+0X0001;do If[0XF]=ah[6];end;ah=TG[pf];do pf=pf+0X1;end;(If)[16]=ah[6];ah=TG[pf];pf=pf+1;If[0x11]=ah[6];ah=TG[pf];pf=pf+1;If[18]=ah[0X6];ah=TG[pf];pf=pf+1;If[0x13]=ah[0X006];ah=TG[pf];do pf=pf+0X1;end;(If)[20]=ah[0X6];local aq=(If[sq]);do pf=pf+0X001;end;local Eq=((1-1)*0X0032);do for sI=1,0X12 do do aq[Eq+sI]=If[sq+sI];end;end;end;pf=pf+1;do sq=0x1;end;local oq=(0X4);if yq~=0 then uf=sq+yq-0X1;end;local dq,jq=nil,(nil);do if yq~=1 then do dq,jq=Cd(If[sq](V(If,sq+1,uf)));end;else dq,jq=Cd(If[sq]());end;end;if oq~=1 then if oq==0X0 then dq=dq+sq-1;uf=dq;else dq=sq+oq-0X2;uf=dq+0X1;end;local Vl=0;for nv=sq,dq do do Vl=Vl+1;end;If[nv]=jq[Vl];end;else uf=sq-1;end;ah=TG[pf];pf=pf+1;sq=1;local Pq=h(function(...)t();for Dd,iw in...do(t)(true,Dd,iw);end;end);(Pq)(If[sq],If[sq+1],If[sq+0X00002]);do uf=sq;end;do(If)[sq]=Pq;end;pf=ah[5];else(If)[ah[2]]=If[ah[0x5]]^If[ah[4]];end;end;end;end;end;else if Fh>=9 then if not(Fh>=0xB)then if Fh~=10 then If[ah[0x2]]={V({},1,ah[0X00005])};else If[1]=Lf[ah[0X6]];pf=pf+0x1;do pf=pf+1;end;ah=TG[pf];pf=pf+1;pf=ah[0X5];end;else if Fh~=12 then do(If)[0x0001]=Lf[ah[0X6]];end;do ah=TG[pf];end;pf=pf+0X1;If[1]=If[1][ah[1]];ah=TG[pf];pf=pf+1;do If[0x0001]=If[1][ah[0x1]];end;ah=TG[pf];pf=pf+1;do if not(If[0]<=If[1])then pf=ah[2];end;end;else do If[ah[2]]=b(If[ah[0X005]],If[ah[4]]);end;end;end;else if Fh<0X7 then if not(not If[ah[2]])then else pf=ah[5];end;else if Fh~=8 then repeat local iR,IR=iG,(If);if not(#iR>0)then else local sZ=({});for gK,FK in l,iR do do for rY,sY in l,FK do if not(sY[0x1]==IR and sY[2]>=0)then else local ZU=(sY[2]);if not(not sZ[ZU])then else sZ[ZU]={IR[ZU]};end;sY[0X0001]=sZ[ZU];sY[0X2]=0x01;end;end;end;end;end;until true;return;else do(If)[ah[0X00002]]=w(If[ah[5]],If[ah[0X004]]);end;end;end;end;end;end;end;end);if jf then if df then if Uf~=0X01 then return If[Mf](V(If,Mf+0x1,uf));else return If[Mf]();end;elseif Mf then return V(If,Mf,Uf);end;else if C(df)~='\s\116r\105\110\103'then(E)(df,0X00);else do if M(df,"a\116t\em\pt t\o\ y\i\eld\ a\cros\s\032\m\e\116\097\109\et\hod\047\067\%\045ca\l\l\ \098\111\117\110\100ary")then do return coroutine.yield();end;end;end;if not(M(df,"\^\.\-\:\%\d\043\:\ "))then(E)(df,0X0);else E("\Lura\p\h S\099\114\i\p\116\:"..(YG[pf-0X0001]or"(internal)")..'\058\032'..x(df),0X0);end;end;end;end;end;else do hG=function(...)local WG=0X0001;local aG=({});local fG=(I());local dG={[0X0002]=aG,[0X1]=FG};local NG,rG=Cd(...);do NG=NG-1;end;local EG=(0);for Cf=0X0,NG do if not(IG>Cf)then do break;end;else aG[Cf]=rG[Cf+1];end;end;local DG=((fG==a and SG or fG));if not OG then rG=nil;elseif zG then do(aG)[IG]={n=NG>=IG and NG-IG+0X01 or 0,V(rG,IG+1,NG+1)};end;end;if DG~=fG then R(hG,DG);end;local bG,GG,yG,RG=A(function()while true do local lw=TG[WG];local Kw=lw[3];WG=WG+0X01;if Kw>=11 then if Kw<0X11 then do if not(Kw>=0xe)then if Kw>=0Xc then if Kw==0X0000d then aG[lw[2]]=lw[0x6];else WG=lw[0X0005];end;else aG[0X0]=DG[lw[0X00006]];do WG=WG+1;end;WG=WG+1;lw=TG[WG];WG=WG+1;do(aG)[0]=aG[0][lw[0X01]];end;WG=WG+0X1;WG=WG+1;end;else if Kw<0Xf then if not(not(aG[lw[5]]<aG[lw[0X4]]))then else WG=lw[0X2];end;else if Kw~=0x0010 then do aG[lw[0X2]]=N(aG[lw[5]],aG[lw[0X004]]);end;else(aG)[lw[0X2]]=w(aG[lw[0X5]],aG[lw[0X4]]);end;end;end;end;else if not(Kw<0X00014)then if not(Kw<0X00015)then do if Kw~=22 then do if aG[lw[0X2]]then do WG=lw[5];end;end;end;else aG[0X0]=DG[lw[0x00006]];lw=TG[WG];WG=WG+1;do aG[1]=DG[lw[0X00006]];end;WG=WG+0X1;aG[0x0]=aG[0X0][aG[1]];WG=WG+1;do(aG)[0X000]=not aG[0X0000];end;lw=TG[WG];WG=WG+0X1;WG=lw[0X5];end;end;else do repeat local Jp,fp=iG,aG;if#Jp>0X0000 then local kg={};for qW,iW in l,Jp do for mO,xO in l,iW do if not(xO[0X00001]==fp and xO[0X00002]>=0)then else local I_=(xO[2]);if not(not kg[I_])then else(kg)[I_]={fp[I_]};end;xO[1]=kg[I_];(xO)[0X002]=0X01;end;end;end;end;until true;end;local uC=(lw[0X2]);do return false,uC,uC+lw[5]-0X2;end;end;else if Kw<0x12 then local G4=cG[0X0];(aG)[0X0]=G4[0X00001][G4[2]];do WG=WG+0X1;end;do WG=WG+1;end;do lw=TG[WG];end;WG=WG+0X00001;aG[0]=aG[0][lw[0x1]];WG=WG+0X1;WG=WG+0X1;lw=TG[WG];WG=WG+1;aG[0x0]=aG[0X0]<=lw[1];lw=TG[WG];WG=WG+1;WG=lw[0X00005];else if Kw==0X13 then local rH=nil;local VH=JG[lw[0X5]];local NH=VH[0X4];local qH=#NH;if not(qH>0)then else rH={};do for k1=1,qH do local j1=(NH[k1]);if j1[1]~=0X0 then do(rH)[k1-1]=cG[j1[0x2]];end;else do(rH)[k1-0X1]={aG,j1[2]};end;end;end;end;H(iG,rH);end;(aG)[lw[0X2]]=ed(DG,VH,rH);else if not(aG[lw[0X5]]<aG[lw[4]])then else WG=lw[0x2];end;end;end;end;end;else if Kw>=0x5 then if Kw<0X8 then if Kw<0x6 then do(aG)[0X00000]=DG[lw[0X06]];end;do lw=TG[WG];end;WG=WG+0X1;(aG)[0]=aG[0][lw[1]];WG=WG+1;(aG)[0X0]=not aG[0];lw=TG[WG];WG=WG+0X0001;do WG=lw[0X005];end;else do if Kw~=0X7 then do(aG)[lw[0X2]]=#aG[lw[5]];end;else aG[0]=DG[lw[6]];WG=WG+1;WG=WG+1;do WG=WG+1;end;EG=0;(aG)[EG]=aG[EG]();lw=TG[WG];do WG=WG+1;end;WG=lw[0X5];end;end;end;else if not(Kw>=0X9)then do(aG)[lw[0x2]]=not aG[lw[0X5]];end;else if Kw~=0X0a then(aG)[lw[0x2]]={V({},0X1,lw[5])};else local JN=cG[0X0];aG[0]=JN[1][JN[2]];WG=WG+1;WG=WG+1;lw=TG[WG];WG=WG+1;do aG[0]=aG[0X0][lw[0X1]];end;WG=WG+0x1;do WG=WG+0X00001;end;WG=WG+0x1;(aG)[0X00]=not aG[0];do lw=TG[WG];end;WG=WG+0x1;if not(aG[0X0])then else WG=lw[0X5];end;end;end;end;else if not(Kw>=2)then if Kw==0X0001 then repeat local Dt,vt=iG,aG;if not(#Dt>0X000)then else local rA={};for RY,hY in l,Dt do for uW,dW in l,hY do if not(dW[0x1]==vt and dW[0X2]>=0)then else local cM=(dW[0x2]);if not rA[cM]then rA[cM]={vt[cM]};end;do(dW)[0X1]=rA[cM];end;do dW[0X2]=0X0001;end;end;end;end;end;until true;local wy=(lw[2]);do return false,wy,wy;end;else end;else if not(Kw<3)then if Kw==4 then do(aG)[lw[2]]=aG[lw[5]][aG[lw[0X4]]];end;else repeat local wY,nY=iG,aG;if#wY>0X00000 then local SS={};for RV,JV in l,wY do for wS,qS in l,JV do if qS[1]==nY and qS[2]>=0 then local gh=(qS[0X00002]);if not(not SS[gh])then else SS[gh]={nY[gh]};end;do(qS)[0X1]=SS[gh];end;qS[0X02]=0X00001;end;end;end;end;until true;return;end;else aG[lw[0x002]]=DG[lw[6]];end;end;end;end;end;end);do if bG then if GG then if RG~=1 then return aG[yG](V(aG,yG+1,EG));else return aG[yG]();end;elseif not(yG)then else return V(aG,yG,RG);end;else if C(GG)~='\s\116\114\ing'then E(GG,0);else if M(GG,"\097t\116\e\109\p\116\ \116\o\ \121\105\101\ld\ \097\099ro\ss\ \109\eta\met\104\o\100/C\037\-\099al\108\032b\oun\dary")then return coroutine.yield();end;do if not(M(GG,'\^\.-\:\%\100+\058\032'))then E(GG,0X0);else E("Luraph Script:"..(YG[WG-0X1]or"(internal)")..": "..x(GG),0X0000);end;end;end;end;end;end;end;end;else do if lG<62 then hG=function(...)local E6,g6=1,{};local P6=(0);local W6=({[0X0002]=g6,[0X1]=FG});local O6=(I());local T6,a6=Cd(...);T6=T6-0X00001;for fc=0X0,T6 do if not(IG>fc)then break;else do g6[fc]=a6[fc+0X1];end;end;end;local K6=(O6==a and SG or O6);if not OG then a6=nil;elseif zG then do(g6)[IG]={n=T6>=IG and T6-IG+0x1 or 0,V(a6,IG+0x1,T6+0x1)};end;end;if K6==O6 then else(R)(hG,K6);end;local w6,G6,B6,F6=A(function()while true do local cP=TG[E6];local mP=cP[3];E6=E6+0X1;if mP<16 then do if not(mP>=8)then if not(mP<4)then if not(mP>=0X6)then if mP~=5 then local cf=0X9;local tf=g6[0x8];g6[cf+1]=tf;do g6[cf]=tf[cP[0X00001]];end;cP=TG[E6];E6=E6+1;(g6)[0XB]=cP[0x6];do E6=E6+1;end;cf=0X009;(g6)[cf]=g6[cf](g6[cf+1],g6[cf+2]);P6=cf;cP=TG[E6];E6=E6+1;if not(not g6[9])then else E6=cP[0x5];end;else(g6)[4]=cP[0X6];E6=E6+1;(g6)[5]=#g6[3];do cP=TG[E6];end;E6=E6+1;(g6)[0X00006]=cP[0X006];local IL=0X004;do cP=TG[E6];end;E6=E6+1;local mL,sL,wL=g6[IL],g6[IL+1],g6[IL+0x2];(g6)[IL]=h(function()for u_=mL,sL,wL do t(true,u_);end;end);E6=cP[0X0005];end;else if mP==0x00007 then local di=g6[cP[0x5]]/g6[cP[0X4]];(g6)[cP[0X2]]=di-di%0X1;else local CI=JG[cP[5]];local MI=(CI[4]);local kI=(nil);local eI=#MI;if not(eI>0X0)then else kI={};for db=0X1,eI do local Db=(MI[db]);if Db[0X1]~=0X000 then(kI)[db-0X1]=cG[Db[2]];else do(kI)[db-1]={g6,Db[0X2]};end;end;end;H(iG,kI);end;(g6)[cP[2]]=ed(K6,CI,kI);end;end;else do if not(mP>=2)then if mP~=1 then local xD=(cP[0X5]);local cD=g6[xD];for S4=xD+0X01,cP[0X4]do cD=cD..g6[S4];end;do(g6)[cP[2]]=cD;end;else do(g6)[cP[0X02]]=cP[0X6];end;end;else if mP~=3 then(g6)[cP[2]]=g6[cP[5]];else g6[cP[0X2]]=g6[cP[0x0005]][cP[1]];end;end;end;end;else if not(mP>=0Xc)then if not(mP<0X0a)then if mP~=0xB then local wI=cP[2];local KI,SI=g6[wI]();if not(KI)then else E6=cP[0x5];(g6)[wI+3]=SI;end;else if not(not g6[cP[0X0002]])then else E6=cP[0X0005];end;end;else if mP~=9 then do g6[cP[2]]=not g6[cP[0X5]];end;else(g6)[0X000a]=K6[cP[0X6]];E6=E6+0X001;E6=E6+0X1;cP=TG[E6];E6=E6+1;do g6[0Xa]=g6[10][cP[1]];end;do E6=E6+1;end;E6=E6+0x1;E6=E6+0X1;(g6)[11]=g6[0X1];do cP=TG[E6];end;E6=E6+0X1;g6[0xC]=g6[0x9][cP[0X00001]];E6=E6+0x1;E6=E6+1;local tq=(10);do E6=E6+1;end;(g6[tq])(g6[tq+1],g6[tq+2]);P6=tq-0X001;cP=TG[E6];E6=E6+1;do E6=cP[0x5];end;end;end;else do if not(mP>=0Xe)then if mP==13 then do g6[cP[0X02]]={V({},1,cP[5])};end;else do g6[10]=g6[9][cP[0x1]];end;E6=E6+0x00001;E6=E6+0X1;cP=TG[E6];E6=E6+1;if not g6[0XA]then do E6=cP[5];end;end;end;else if mP==15 then for Fz=cP[0X00002],cP[0X5]do do g6[Fz]=nil;end;end;else if not(not(cP[6]<g6[cP[0X0004]]))then else do E6=cP[2];end;end;end;end;end;end;end;end;else do if not(mP>=0X000018)then if mP<20 then do if mP<18 then if mP~=17 then repeat local qe,de=iG,(g6);if#qe>0X0 then local Fv={};for pv,Ev in l,qe do for J6,L6 in l,Ev do do if not(L6[1]==de and L6[2]>=0X0)then else local f7=L6[0X0002];do if not Fv[f7]then do Fv[f7]={de[f7]};end;end;end;do(L6)[0x1]=Fv[f7];end;(L6)[2]=1;end;end;end;end;end;until true;do return;end;else do g6[cP[2]]=cP[0X00006];end;end;else do if mP~=19 then(g6)[0X8]=g6[2][g6[0x0007]];E6=E6+1;local aH=9;E6=E6+0X01;do cP=TG[E6];end;do E6=E6+1;end;local kH=(g6[8]);(g6)[aH+0X1]=kH;(g6)[aH]=kH[cP[1]];do cP=TG[E6];end;E6=E6+1;do(g6)[11]=cP[0x006];end;E6=E6+1;aH=0X009;(g6)[aH]=g6[aH](g6[aH+1],g6[aH+2]);P6=aH;E6=E6+1;E6=E6+0X1;cP=TG[E6];E6=E6+0X1;if not g6[9]then do E6=cP[5];end;end;else do g6[0x0B]=K6[cP[0X6]];end;E6=E6+1;E6=E6+1;local Nk=(0X00b);cP=TG[E6];E6=E6+1;g6[0X00c]=g6[9][cP[0X1]];do cP=TG[E6];end;E6=E6+0X0001;(g6)[12]=g6[0X000c][cP[0X1]];E6=E6+0X1;(g6)[Nk]=g6[Nk](g6[Nk+1]);do P6=Nk;end;E6=E6+0X1;E6=E6+0X0001;cP=TG[E6];E6=E6+1;(g6)[0Xc]=g6[0X0000]+cP[1];cP=TG[E6];E6=E6+0X001;if not(g6[0XB]<g6[0X00c])then E6=cP[0X2];end;end;end;end;end;else if not(mP<0X00016)then do if mP==0X17 then E6=cP[5];else(g6)[cP[2]]=W6[cP[5]];end;end;else do if mP~=0X15 then do repeat local X0,T0=iG,(g6);if not(#X0>0X0)then else local oh=({});for tN,hN in l,X0 do for zL,RL in l,hN do if RL[0X00001]==T0 and RL[0x2]>=0 then local ZS=(RL[0X00002]);do if not oh[ZS]then oh[ZS]={T0[ZS]};end;end;do RL[1]=oh[ZS];end;(RL)[2]=0X1;end;end;end;end;until true;end;local YI=cP[0X2];return false,YI,YI;else g6[10]=K6[cP[0x6]];E6=E6+0X1;E6=E6+1;cP=TG[E6];do E6=E6+0x001;end;do(g6)[10]=g6[0X0a][cP[0X1]];end;E6=E6+1;do E6=E6+0X1;end;E6=E6+1;(g6)[0x0000b]=g6[0X01];do cP=TG[E6];end;E6=E6+1;g6[0x00C]=g6[0x09][cP[1]];E6=E6+0X1;local bA=(0X00a);E6=E6+1;E6=E6+1;(g6[bA])(g6[bA+0X001],g6[bA+2]);P6=bA-0X00001;E6=E6+0X1;E6=E6+0X01;cP=TG[E6];E6=E6+1;E6=cP[5];end;end;end;end;else if not(mP>=0X1c)then if mP>=26 then if mP~=27 then if g6[cP[0X0005]]~=g6[cP[0x4]]then else E6=cP[2];end;else g6[0X00a]=g6[0X9][cP[0X1]];E6=E6+0x1;E6=E6+0x1;cP=TG[E6];E6=E6+0X1;if not(not(cP[6]<g6[10]))then else E6=cP[0X2];end;end;else if mP==0X19 then local qq=cP[5];local Eq=cP[2];do if qq==0 then else do P6=Eq+qq-0X0001;end;end;end;local kq,mq,dq=cP[0X04],nil,(nil);if qq~=1 then mq,dq=Cd(g6[Eq](V(g6,Eq+0X1,P6)));else mq,dq=Cd(g6[Eq]());end;if kq==1 then P6=Eq-0x1;else do if kq==0 then do mq=mq+Eq-1;end;P6=mq;else mq=Eq+kq-0X002;P6=mq+0X0001;end;end;local Qe=0;for i0=Eq,mq do Qe=Qe+1;g6[i0]=dq[Qe];end;end;else do(g6)[0X1]={};end;cP=TG[E6];E6=E6+1;g6[2]=K6[cP[0X6]];cP=TG[E6];do E6=E6+0x1;end;if not g6[2]then E6=cP[0X05];end;end;end;else if mP<0X001E then if mP~=29 then g6[0X00002]=K6[cP[0X6]];cP=TG[E6];do E6=E6+1;end;g6[2]=g6[2][cP[1]];local T5=(0X2);cP=TG[E6];E6=E6+1;local i5=(g6[0X002]);(g6)[T5+1]=i5;g6[T5]=i5[cP[1]];E6=E6+0X1;do T5=0X2;end;g6[T5]=g6[T5](g6[T5+0X0001]);P6=T5;do E6=E6+0x1;end;E6=E6+1;do cP=TG[E6];end;E6=E6+1;(g6)[3]=K6[cP[6]];do cP=TG[E6];end;E6=E6+1;(g6)[0X00003]=g6[0x3][cP[1]];cP=TG[E6];E6=E6+1;T5=3;do i5=g6[3];end;local a5=(0x4);(g6)[T5+0X1]=i5;do(g6)[T5]=i5[cP[0x00001]];end;E6=E6+1;do T5=0x00003;end;g6[T5]=g6[T5](g6[T5+0X001]);P6=T5;cP=TG[E6];do E6=E6+1;end;g6[4]=cP[0X6];E6=E6+1;do g6[5]=#g6[0X02];end;do cP=TG[E6];end;do E6=E6+0X001;end;(g6)[6]=cP[0X6];cP=TG[E6];do E6=E6+0X1;end;T5=g6[a5];local l5=(g6[a5+1]);local n5=(g6[a5+0x00002]);do(g6)[a5]=h(function()for D6=T5,l5,n5 do(t)(true,D6);end;end);end;do E6=cP[5];end;else end;else if mP>=0X001F then if mP==32 then(g6)[cP[0x2]]=K6[cP[0X6]];else g6[0Xb]=K6[cP[0X6]];local Li=(0X00b);do cP=TG[E6];end;E6=E6+0x001;g6[0Xc]=g6[0X9][cP[1]];E6=E6+0X1;do E6=E6+1;end;do cP=TG[E6];end;E6=E6+1;(g6)[12]=g6[0X00c][cP[1]];E6=E6+0X00001;do g6[Li]=g6[Li](g6[Li+1]);end;P6=Li;do E6=E6+1;end;E6=E6+0X01;cP=TG[E6];E6=E6+1;(g6)[0XC]=g6[0X0]+cP[0X1];do cP=TG[E6];end;E6=E6+1;if not(g6[11]<g6[0x000C])then E6=cP[0X2];end;end;else g6[0x8]=g6[3][g6[7]];do E6=E6+0x1;end;E6=E6+0X1;cP=TG[E6];E6=E6+0X0001;(g6)[9]=K6[cP[6]];E6=E6+1;E6=E6+0X1;cP=TG[E6];E6=E6+1;g6[0x9]=g6[0X9][cP[0X01]];cP=TG[E6];E6=E6+1;if g6[0X00008]==g6[0X00009]then do E6=cP[2];end;end;end;end;end;end;end;end;end;end);if not(w6)then if C(G6)=='st\114\in\g'then if M(G6,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if M(G6,"^.-:%d+: ")then(E)("Luraph Script:"..(YG[E6-1]or'\(\105\110\116e\114\110\097\l)')..'\: '..x(G6),0X0);else(E)(G6,0);end;else(E)(G6,0X00);end;else do if G6 then if F6==0X01 then return g6[B6]();else return g6[B6](V(g6,B6+1,P6));end;elseif B6 then return V(g6,B6,F6);end;end;end;end;else do if lG==0x003F then do hG=function(...)local L0=0;local k0,O0=0X00001,({});local W0=({[0X1]=FG,[0X0002]=O0});local q0=I();local X0,P0=Cd(...);do X0=X0-1;end;for vI=0,X0 do if IG>vI then do(O0)[vI]=P0[vI+0X1];end;else do break;end;end;end;local r0=(q0==a and SG or q0);if not OG then do P0=nil;end;elseif not(zG)then else do O0[IG]={n=X0>=IG and X0-IG+0X1 or 0,V(P0,IG+1,X0+0X001)};end;end;do if r0~=q0 then(R)(hG,r0);end;end;local j0,I0,N0,w0=A(function()while true do local gy=TG[k0];local oy=(gy[0X00003]);do k0=k0+1;end;if not(oy<0X8)then if oy<12 then if not(oy<0X0a)then if oy==0Xb then(O0)[0X00000]=r0[gy[0X6]];gy=TG[k0];do k0=k0+1;end;local cH=(nil);(O0)[0]=O0[0X0][gy[1]];gy=TG[k0];k0=k0+0X1;local vH=(JG[gy[5]]);local kH=(vH[4]);local xH=(0);local XH=#kH;do if XH>0x00000 then cH={};for Fh=0x1,XH do local zh=kH[Fh];if zh[0X1]==0X0 then do(cH)[Fh-0x1]={O0,zh[2]};end;else(cH)[Fh-1]=cG[zh[0X2]];end;end;(H)(iG,cH);end;end;(O0)[0x001]=ed(r0,vH,cH);k0=k0+1;O0[xH](O0[xH+0X1]);L0=xH-0X001;do k0=k0+0X0001;end;k0=k0+1;k0=k0+1;do repeat local m4,s4=iG,(O0);if not(#m4>0)then else local Hv={};for Q5,g5 in l,m4 do for Ch,Qh in l,g5 do if not(Qh[0X1]==s4 and Qh[0X2]>=0x0000)then else local CE=Qh[0x2];if not(not Hv[CE])then else Hv[CE]={s4[CE]};end;Qh[1]=Hv[CE];(Qh)[2]=0X1;end;end;end;end;until true;end;return;else local wY=(gy[0X002]);local mY,GY=O0[wY]();do if mY then k0=gy[5];(O0)[wY+0X003]=GY;end;end;end;else if oy==9 then(O0)[gy[2]]=O0[gy[5]]-O0[gy[0X4]];else end;end;else if not(oy>=0XE)then if oy~=0X00d then do for x7=gy[2],gy[5]do(O0)[x7]=nil;end;end;else local Zj=(gy[2]);local yj=O0[Zj];local xj=((gy[4]-0X1)*0X32);for lP=1,gy[5]do yj[xj+lP]=O0[Zj+lP];end;end;else if not(oy<0X0F)then if oy==16 then O0[gy[2]]=gy[0X006];else do(O0)[gy[0x2]]=r0[gy[6]];end;end;else O0[gy[0X2]]=O0[gy[0X5]]/O0[gy[4]];end;end;end;else if oy>=4 then if not(oy<0X6)then if oy~=0x7 then do(O0)[gy[0x2]]=O0[gy[5]]<=O0[gy[4]];end;else do k0=gy[5];end;end;else if oy==5 then local uu=(JG[gy[0X5]]);local Cu,nu=uu[0X004],(nil);local Zu=(#Cu);if Zu>0 then do nu={};end;for Yo=0x1,Zu do local po=Cu[Yo];if po[0X1]==0X000 then(nu)[Yo-0X1]={O0,po[2]};else(nu)[Yo-1]=cG[po[0X2]];end;end;(H)(iG,nu);end;do(O0)[gy[2]]=ed(r0,uu,nu);end;else do O0[gy[0X2]]=gy[0X0006];end;end;end;else do if not(oy>=2)then if oy==0x01 then(O0)[gy[0X2]]={V({},1,gy[5])};else(O0)[gy[0X2]]=b(O0[gy[5]],O0[gy[4]]);end;else if oy~=0X0003 then local yr=(gy[0X2]);local cr=O0[yr];local Xr,Wr=O0[yr+0X1],O0[yr+0X2];(O0)[yr]=h(function()do for Tm=cr,Xr,Wr do(t)(true,Tm);end;end;end);do k0=gy[0X5];end;else O0[gy[2]]=L(O0[gy[5]],O0[gy[4]]);end;end;end;end;end;end;end);if j0 then if I0 then if w0~=1 then do return O0[N0](V(O0,N0+1,L0));end;else do return O0[N0]();end;end;elseif not(N0)then else return V(O0,N0,w0);end;else do if C(I0)~="\st\114\105n\g"then E(I0,0);else do if not(M(I0,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(M(I0,"^.-:%d+: "))then(E)(I0,0x00000);else E("Luraph Script:"..(YG[k0-1]or"(internal)").."\058\ "..x(I0),0X00000);end;end;end;end;end;end;else hG=function(...)local Ft=({});local Gt=(0X01);local yt=(I());local Lt,st=(yt==a and SG or yt),({[0X0002]=Ft,[0X1]=FG});local Wt,Ct=Cd(...);Wt=Wt-1;for TD=0X0,Wt do do if IG>TD then Ft[TD]=Ct[TD+0X0001];else break;end;end;end;do if not OG then Ct=nil;elseif zG then Ft[IG]={n=Wt>=IG and Wt-IG+1 or 0,V(Ct,IG+0X1,Wt+1)};end;end;local at=0x0;if Lt==yt then else(R)(hG,Lt);end;local bt,Ht,ft,ht=A(function()do while true do local ay=(TG[Gt]);local sy=(ay[0x3]);Gt=Gt+1;if sy<0x6 then do if sy>=0X00003 then do if not(sy<0X004)then if sy~=0x5 then if Ft[ay[0x05]]<Ft[ay[4]]then Gt=ay[2];end;else Ft[ay[2]]={V({},0x001,ay[0X5])};end;else end;end;else if not(sy>=0X00001)then for lf=ay[0X002],ay[5]do do Ft[lf]=nil;end;end;else if sy==0X2 then do(Ft)[ay[2]]=Ft[ay[5]]==Ft[ay[0x04]];end;else local iB=(nil);local HB=(JG[ay[5]]);local RB=HB[4];local gB=#RB;if gB>0 then iB={};for Hp=1,gB do local Bp=RB[Hp];if Bp[1]~=0 then(iB)[Hp-1]=cG[Bp[0X2]];else(iB)[Hp-1]={Ft,Bp[0x0002]};end;end;(H)(iG,iB);end;(Ft)[ay[0X02]]=ed(Lt,HB,iB);end;end;end;end;else do if not(sy>=0X9)then if not(sy>=0X7)then do(Ft)[ay[2]]=Ft[ay[0X005]];end;else if sy~=8 then do if Ft[ay[0x005]]<=Ft[ay[0X4]]then Gt=ay[0X00002];end;end;else do Ft[ay[0X2]]=w(Ft[ay[5]],Ft[ay[0X4]]);end;end;end;else do if not(sy>=11)then do if sy~=0X00a then Ft[0X0]=Lt[ay[0X6]];do Gt=Gt+1;end;local k1=(0);Gt=Gt+1;ay=TG[Gt];do Gt=Gt+0X1;end;local A1=Ft[0];Ft[k1+1]=A1;Ft[k1]=A1[ay[1]];do ay=TG[Gt];end;Gt=Gt+1;Ft[0X002]=ay[0X0006];Gt=Gt+0X1;k1=0X0;(Ft)[k1]=Ft[k1](Ft[k1+1],Ft[k1+2]);do at=k1;end;Gt=Gt+0X1;Gt=Gt+1;ay=TG[Gt];do Gt=Gt+1;end;do(Ft)[1]=Lt[ay[0x6]];end;Gt=Gt+1;Gt=Gt+0X001;ay=TG[Gt];Gt=Gt+0x00001;(Ft)[1]=Ft[0X1][ay[1]];ay=TG[Gt];local o1=(JG[ay[0x005]]);Gt=Gt+1;local r1,Y1=nil,o1[4];local y1=(#Y1);do if not(y1>0X0)then else do r1={};end;for gl=0X1,y1 do local kl=Y1[gl];if kl[1]~=0X0 then(r1)[gl-0X1]=cG[kl[2]];else do r1[gl-0x0001]={Ft,kl[0X2]};end;end;end;H(iG,r1);end;end;(Ft)[0x2]=ed(Lt,o1,r1);Gt=Gt+1;k1=1;(Ft[k1])(Ft[k1+0X00001]);at=k1-1;do Gt=Gt+1;end;Gt=Gt+1;Gt=Gt+1;do repeat local RN,IN=iG,Ft;if#RN>0X0 then local uQ=({});for yW,xW in l,RN do for gw,Kw in l,xW do if Kw[1]==IN and Kw[0X2]>=0 then local Y8=Kw[2];if not uQ[Y8]then do uQ[Y8]={IN[Y8]};end;end;Kw[0X1]=uQ[Y8];do Kw[0x0002]=1;end;end;end;end;end;until true;end;return;else(Ft)[ay[0X02]]=Lt[ay[6]];end;end;else do if sy~=0XC then Gt=ay[0X5];else(Ft)[ay[2]]=ay[6];end;end;end;end;end;end;end;end;end;end);if bt then do if Ht then if ht~=1 then do return Ft[ft](V(Ft,ft+0X001,at));end;else return Ft[ft]();end;elseif not(ft)then else do return V(Ft,ft,ht);end;end;end;else do if C(Ht)~="string"then(E)(Ht,0);else do if not(M(Ht,"a\116t\101\109\112\116 to\ yi\el\d\ ac\114\o\s\s \meta\109\et\h\111\d\/\067\%\-\099\097\l\l \098\111u\110\d\097r\y"))then else return coroutine.yield();end;end;if not(M(Ht,"^.-:%d+: "))then(E)(Ht,0x0);else E("\Lur\097\p\104\032\S\c\114\ipt\:"..(YG[Gt-0X1]or"(\i\110t\e\114n\097\l\)")..": "..x(Ht),0X0000);end;end;end;end;end;end;end;end;end;end;end;end;else if lG>=46 then if not(lG>=50)then do if lG<48 then if lG==0x2f then do hG=function(...)local AY={};local GY=1;local NY=({[0X0002]=AY,[0X1]=FG});local JY=(I());local cY=((JY==a and SG or JY));local jY,bY=Cd(...);jY=jY-0X1;local QY=(0x0);do for o6=0X0,jY do if IG>o6 then AY[o6]=bY[o6+0X1];else break;end;end;end;if not OG then bY=nil;elseif zG then AY[IG]={n=jY>=IG and jY-IG+0X00001 or 0,V(bY,IG+0X00001,jY+1)};end;do if cY~=JY then(R)(hG,cY);end;end;local gY,pY,OY,CY=A(function()while true do local Aj=(TG[GY]);local Gj=(Aj[3]);GY=GY+1;do if Gj<16 then if not(Gj<0X08)then if not(Gj<12)then if not(Gj>=0X0000E)then if Gj~=0x00D then local w1=(cG[0]);(AY)[0x0005]=w1[1][w1[0X2]];do GY=GY+0X001;end;GY=GY+0X0001;Aj=TG[GY];local X1=0x5;GY=GY+0X1;local z1=(AY[0X0005]);do(AY)[X1+0x0001]=z1;end;(AY)[X1]=z1[Aj[1]];GY=GY+1;do X1=5;end;(AY[X1])(AY[X1+0X1]);QY=X1-1;do GY=GY+1;end;do GY=GY+0x1;end;do Aj=TG[GY];end;do GY=GY+0X001;end;do(AY)[0X05]=AY[0X4][Aj[0X1]];end;GY=GY+1;do GY=GY+0X00001;end;GY=GY+1;QY=0X5;(AY[QY])();QY=QY-1;do Aj=TG[GY];end;GY=GY+1;do GY=Aj[5];end;else AY[0]=cY[Aj[6]];do GY=GY+1;end;GY=GY+1;Aj=TG[GY];GY=GY+0X0001;AY[0X00]=AY[0X00][Aj[0X0001]];Aj=TG[GY];GY=GY+1;do if not AY[0X0]then GY=Aj[5];end;end;end;else if Gj~=0x0000F then local xb=JG[Aj[5]];local Gb=(xb[0x00004]);local Eb,Kb=#Gb,(nil);if not(Eb>0)then else Kb={};for i0=1,Eb do local Y0=(Gb[i0]);if Y0[1]==0 then Kb[i0-0X0001]={AY,Y0[0X2]};else(Kb)[i0-1]=cG[Y0[0X2]];end;end;H(iG,Kb);end;(AY)[Aj[0X2]]=ed(cY,xb,Kb);else local pz=cG[0x0];AY[0]=pz[1][pz[0X002]];GY=GY+1;local jz=(0);do GY=GY+1;end;Aj=TG[GY];GY=GY+1;local Zz=AY[0];AY[jz+0X001]=Zz;AY[jz]=Zz[Aj[0X0001]];GY=GY+0x1;jz=0x00000;do(AY)[jz]=AY[jz](AY[jz+1]);end;QY=jz;GY=GY+0X1;GY=GY+1;do Aj=TG[GY];end;GY=GY+1;if not(not AY[0])then else GY=Aj[0X005];end;end;end;else do if not(Gj>=10)then if Gj==9 then local VF=(Aj[0X002]);for JS=VF,VF+(Aj[0x5]-1)do AY[JS]=bY[IG+(JS-VF)+0X1];end;else NY[Aj[5]]=AY[Aj[2]];end;else if Gj~=11 then do AY[Aj[2]]=cY[Aj[6]];end;else(AY)[Aj[0X2]]={V({},1,Aj[0X00005])};end;end;end;end;else if not(Gj>=0x4)then if Gj<0x2 then if Gj~=0X1 then(AY)[Aj[0x00002]]=Aj[0X6];else local g6,k6=cG[0X0001],2;AY[2]=g6[0X00001][g6[2]];Aj=TG[GY];GY=GY+1;(AY)[2]=AY[0X02][Aj[0X1]];GY=GY+1;do GY=GY+1;end;do GY=GY+1;end;AY[3]=AY[1];GY=GY+1;do(AY)[k6]=AY[k6](AY[k6+1]);end;do QY=k6;end;GY=GY+0X01;GY=GY+1;Aj=TG[GY];do GY=GY+1;end;if not AY[2]then do GY=Aj[5];end;end;end;else if Gj==3 then do AY[0]=cY[Aj[6]];end;do Aj=TG[GY];end;GY=GY+0X0001;local my=0X0;AY[0X1]=Aj[0X006];GY=GY+0X001;(AY)[my]=AY[my](AY[my+1]);QY=my;do GY=GY+1;end;GY=GY+0X1;Aj=TG[GY];GY=GY+0X001;if not(not AY[0X00000])then else do GY=Aj[5];end;end;else local jS=(cG[0X1]);AY[0X2]=jS[0X1][jS[2]];Aj=TG[GY];GY=GY+0X1;(AY)[0X02]=AY[2][Aj[0X1]];GY=GY+1;(AY)[3]=AY[1];GY=GY+0X1;jS=cG[0];(AY)[4]=jS[1][jS[0X02]];local BS=0X002;do Aj=TG[GY];end;local KS=JG[Aj[0x005]];local bS=KS[0X4];GY=GY+0X01;local aS=(#bS);local pS=nil;if aS>0 then pS={};do for ot=0x1,aS do local Et=bS[ot];if Et[0X1]==0 then do(pS)[ot-1]={AY,Et[2]};end;else pS[ot-0X1]=cG[Et[2]];end;end;end;(H)(iG,pS);end;AY[0X5]=ed(cY,KS,pS);GY=GY+1;do QY=BS+0x4-0X1;end;(AY[BS])(V(AY,BS+1,QY));QY=BS-1;Aj=TG[GY];GY=GY+0x1;do GY=Aj[0x05];end;end;end;else if not(Gj>=6)then if Gj~=5 then AY[Aj[0X2]]=#AY[Aj[0X05]];else if AY[Aj[2]]then do GY=Aj[5];end;end;end;else if Gj~=0x7 then local Dd=cG[0];(AY)[0X0]=Dd[1][Dd[2]];do GY=GY+1;end;local Zh=0;GY=GY+0x1;Aj=TG[GY];GY=GY+0X1;local jh=(AY[0]);(AY)[Zh+1]=jh;(AY)[Zh]=jh[Aj[1]];GY=GY+0X1;Zh=0;AY[Zh](AY[Zh+1]);QY=Zh-1;do GY=GY+0X1;end;repeat local re,He=iG,AY;do if not(#re>0X0)then else local Q5=({});for Iq,yq in l,re do for KY,PY in l,yq do if PY[0X1]==He and PY[2]>=0 then local fQ=PY[0X2];if not Q5[fQ]then(Q5)[fQ]={He[fQ]};end;(PY)[0X1]=Q5[fQ];do PY[0X2]=0X01;end;end;end;end;end;end;until true;return;else do(AY)[0]=cY[Aj[6]];end;do GY=GY+0X1;end;local FI=nil;AY[1]={V({},0X001,3)};do Aj=TG[GY];end;do GY=GY+0X001;end;AY[0X2]=Aj[0x6];Aj=TG[GY];do GY=GY+1;end;AY[0x0003]=Aj[6];do Aj=TG[GY];end;local wI,OI=1,0x3;GY=GY+0X1;(AY)[0X4]=Aj[0X006];GY=GY+1;local XI=AY[wI];local MI=((0x1-0x0001)*50);do for sh=0X1,0X03 do XI[MI+sh]=AY[wI+sh];end;end;Aj=TG[GY];GY=GY+1;local YI=JG[Aj[0X5]];local qI=(YI[0X4]);local yI=(#qI);do if yI>0 then FI={};do for mY=1,yI do local PY=(qI[mY]);if PY[1]~=0 then do(FI)[mY-1]=cG[PY[2]];end;else FI[mY-1]={AY,PY[0X0002]};end;end;end;H(iG,FI);end;end;(AY)[2]=ed(cY,YI,FI);GY=GY+0X00001;wI=0X0;local rI=3;if OI~=0X0 then QY=wI+OI-1;end;local CI,dI=nil,nil;if OI~=1 then CI,dI=Cd(AY[wI](V(AY,wI+0X1,QY)));else do CI,dI=Cd(AY[wI]());end;end;do if rI==0X001 then QY=wI-1;else do if rI==0 then CI=CI+wI-1;QY=CI;else do CI=wI+rI-2;end;QY=CI+1;end;end;local JS=(0);for RE=wI,CI do JS=JS+1;do(AY)[RE]=dI[JS];end;end;end;end;do GY=GY+1;end;GY=GY+1;do Aj=TG[GY];end;GY=GY+0X1;(AY)[2]=cY[Aj[0X6]];do GY=GY+1;end;do GY=GY+1;end;GY=GY+0X01;AY[3]=AY[0X0];do GY=GY+1;end;do wI=0X0002;end;do OI=2;end;rI=0X004;if OI==0X0 then else do QY=wI+OI-0X1;end;end;CI,dI=nil;do if OI==1 then CI,dI=Cd(AY[wI]());else CI,dI=Cd(AY[wI](V(AY,wI+1,QY)));end;end;if rI~=1 then if rI==0 then CI=CI+wI-0X1;QY=CI;else CI=wI+rI-0X2;QY=CI+0X1;end;local CU=0X0000;for n6=wI,CI do CU=CU+0X1;(AY)[n6]=dI[CU];end;else QY=wI-0x1;end;Aj=TG[GY];GY=GY+1;wI=2;local jI=h(function(...)(t)();for Km,rm in...do(t)(true,Km,rm);end;end);(jI)(AY[wI],AY[wI+1],AY[wI+2]);QY=wI;(AY)[wI]=jI;GY=Aj[0x5];end;end;end;end;else if not(Gj<0x018)then do if Gj>=28 then if Gj>=30 then do if not(Gj<31)then do if Gj==0X00020 then do repeat local q7,L7=iG,(AY);if not(#q7>0x0000)then else local xD=({});for cH,tH in l,q7 do do for c5,k5 in l,tH do if k5[1]==L7 and k5[0X2]>=0 then local EJ=k5[0X2];do if not xD[EJ]then xD[EJ]={L7[EJ]};end;end;do(k5)[0X1]=xD[EJ];end;do(k5)[2]=0X1;end;end;end;end;end;end;until true;end;return;else(AY)[0X0000]=cY[Aj[0x6]];GY=GY+0X1;GY=GY+0x1;Aj=TG[GY];GY=GY+0x001;do AY[0]=AY[0X00][Aj[0x001]];end;do GY=GY+1;end;GY=GY+1;Aj=TG[GY];GY=GY+1;if not(not AY[0x0000])then else GY=Aj[5];end;end;end;else(AY)[0X00000]=cY[Aj[0X6]];GY=GY+0x1;GY=GY+1;do GY=GY+0X1;end;do QY=0X0;end;AY[QY]=AY[QY]();GY=GY+1;GY=GY+1;Aj=TG[GY];GY=GY+1;if not(not(AY[0X0000]<Aj[0x1]))then else GY=Aj[0X2];end;end;end;else do if Gj==0X1D then do GY=Aj[5];end;else local dy=(Aj[2]);local Dy,yy,oy=AY[dy]();do if Dy then AY[dy+1]=yy;(AY)[dy+0X2]=oy;GY=Aj[0X5];end;end;end;end;end;else do if Gj>=26 then if Gj~=0x1B then AY[0X0]=cY[Aj[0X0006]];GY=GY+1;QY=0x0;(AY)[QY]=AY[QY]();do GY=GY+1;end;do GY=GY+0X1;end;Aj=TG[GY];GY=GY+1;if not(not(AY[0]<Aj[1]))then else GY=Aj[2];end;else(AY)[0]=cY[Aj[6]];Aj=TG[GY];GY=GY+0X0001;do(AY)[0X00]=AY[0][Aj[0x1]];end;GY=GY+0x1;GY=GY+0X1;Aj=TG[GY];do GY=GY+1;end;if not AY[0]then GY=Aj[0X00005];end;end;else if Gj~=0X19 then AY[Aj[0x2]]=AY[Aj[0X0005]][Aj[1]];else end;end;end;end;end;else if not(Gj>=0x14)then if Gj>=0X12 then if Gj~=19 then for tV=Aj[2],Aj[5]do(AY)[tV]=nil;end;else(AY)[2]=cY[Aj[6]];do Aj=TG[GY];end;GY=GY+1;AY[3]=Aj[6];local Bs=(2);GY=GY+0x1;(AY)[Bs]=AY[Bs](AY[Bs+1]);QY=Bs;do GY=GY+1;end;local As=(cG[0x000]);GY=GY+1;Aj=TG[GY];do GY=GY+1;end;cY[Aj[0X6]]=AY[2];GY=GY+0X1;(AY)[2]=As[1][As[2]];do GY=GY+1;end;GY=GY+0X00001;Aj=TG[GY];GY=GY+1;Bs=0X2;local Ns=(AY[0X2]);(AY)[Bs+1]=Ns;(AY)[Bs]=Ns[Aj[1]];do GY=GY+0x01;end;Bs=0X02;AY[Bs](AY[Bs+0X1]);QY=Bs-0X1;do Aj=TG[GY];end;GY=GY+1;do GY=Aj[5];end;end;else do if Gj~=0X11 then do(AY)[0X0]=cY[Aj[0X6]];end;GY=GY+1;GY=GY+0x01;do Aj=TG[GY];end;GY=GY+0X1;local P7=(0X0);AY[0X00]=AY[0X0][Aj[0X1]];Aj=TG[GY];GY=GY+1;(AY)[1]=Aj[6];GY=GY+0X0001;AY[P7]=AY[P7](AY[P7+1]);QY=P7;do Aj=TG[GY];end;GY=GY+0X1;if not AY[0]then GY=Aj[0x5];end;else AY[Aj[0X2]]=NY[Aj[0X5]];end;end;end;else if not(Gj>=0X16)then if Gj~=21 then AY[5]=AY[4][Aj[0X1]];GY=GY+0X00001;GY=GY+0X0001;do GY=GY+0X01;end;AY[1]=AY[5];Aj=TG[GY];GY=GY+1;do if not AY[1]then GY=Aj[0X05];end;end;else(AY)[2]=cY[Aj[0X006]];Aj=TG[GY];do GY=GY+1;end;AY[2]=AY[2][Aj[1]];do GY=GY+1;end;GY=GY+0X1;local yY=(0X2);Aj=TG[GY];GY=GY+1;local UY=AY[0X002];(AY)[yY+1]=UY;AY[yY]=UY[Aj[0X1]];Aj=TG[GY];GY=GY+0X1;(AY)[0x00004]=Aj[0X6];GY=GY+0X01;yY=2;(AY)[yY]=AY[yY](AY[yY+1],AY[yY+2]);QY=yY;GY=GY+1;do GY=GY+1;end;Aj=TG[GY];GY=GY+0X1;do if not(not AY[0X00002])then else GY=Aj[5];end;end;end;else if Gj~=0X17 then(AY)[0X0]=cY[Aj[6]];do GY=GY+0x1;end;QY=0;AY[QY]=AY[QY]();Aj=TG[GY];GY=GY+0X1;if AY[0X0]then do GY=Aj[0X0005];end;end;else local Uh=(cG[0]);do(AY)[2]=Uh[0x001][Uh[0X0002]];end;GY=GY+0X1;do GY=GY+0x1;end;local Ih=2;do Aj=TG[GY];end;GY=GY+1;local Eh=AY[0x2];AY[Ih+0X1]=Eh;(AY)[Ih]=Eh[Aj[0X00001]];GY=GY+0X001;Ih=0X2;AY[Ih](AY[Ih+1]);QY=Ih-0X1;Aj=TG[GY];do GY=GY+1;end;do GY=Aj[5];end;end;end;end;end;end;end;end;end);do if not(gY)then if C(pY)=='\s\116\114\105n\103'then if M(pY,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if M(pY,'\^\.\-\:\037\100\+\: ')then(E)("Luraph Script:"..(YG[GY-1]or"(internal)").."\058 "..x(pY),0x00);else E(pY,0X0);end;else E(pY,0);end;else do if pY then if CY~=0X001 then return AY[OY](V(AY,OY+1,QY));else do return AY[OY]();end;end;elseif OY then return V(AY,OY,CY);end;end;end;end;end;end;else hG=function(...)local IJ,gJ=0x0001,{};local MJ=I();local SJ,DJ={[0X1]=FG,[0X0002]=gJ},(MJ==a and SG or MJ);local XJ,YJ=Cd(...);XJ=XJ-0x1;for Mr=0X0,XJ do if not(IG>Mr)then break;else gJ[Mr]=YJ[Mr+0x1];end;end;do if not OG then YJ=nil;elseif not(zG)then else do gJ[IG]={n=XJ>=IG and XJ-IG+0X1 or 0,V(YJ,IG+1,XJ+1)};end;end;end;local CJ=0;do if DJ~=MJ then R(hG,DJ);end;end;local FJ,EJ,fJ,LJ=A(function()while true do local Fm=TG[IJ];local Nm=(Fm[0X0003]);IJ=IJ+0X1;if not(Nm>=0X00001B)then if Nm>=0X000d then if not(Nm<0x00014)then if Nm>=23 then do if not(Nm<25)then if Nm~=0X1A then if not(not(gJ[Fm[5]]<gJ[Fm[0X4]]))then else IJ=Fm[0X002];end;else do(gJ)[3]=DJ[Fm[6]];end;IJ=IJ+1;IJ=IJ+1;IJ=IJ+0x0001;CJ=0x3;do gJ[CJ]=gJ[CJ]();end;IJ=IJ+0X1;do IJ=IJ+0X00001;end;Fm=TG[IJ];IJ=IJ+1;if not(gJ[3])then else IJ=Fm[5];end;end;else if Nm==24 then gJ[0X4]=DJ[Fm[6]];IJ=IJ+1;IJ=IJ+0X1;Fm=TG[IJ];do IJ=IJ+0x1;end;(gJ)[0X5]=DJ[Fm[0X6]];local Ma=(4);IJ=IJ+0x1;do(gJ)[Ma]=gJ[Ma](gJ[Ma+1]);end;CJ=Ma;do Fm=TG[IJ];end;IJ=IJ+0X1;if not(Fm[6]<=gJ[4])then IJ=Fm[2];end;else local y0=(Fm[2]);local U0,v0,d0=gJ[y0]();if U0 then gJ[y0+1]=v0;gJ[y0+0x002]=d0;IJ=Fm[5];end;end;end;end;else do if not(Nm>=0x00015)then do gJ[0x5]=DJ[Fm[6]];end;IJ=IJ+1;do CJ=0X005;end;gJ[CJ]=gJ[CJ]();Fm=TG[IJ];IJ=IJ+1;do if gJ[0X5]then IJ=Fm[0X5];end;end;else if Nm==22 then local rq=cG[2];(rq[1])[rq[0x02]]=gJ[3];Fm=TG[IJ];do IJ=IJ+1;end;(gJ)[3]=DJ[Fm[0x6]];Fm=TG[IJ];IJ=IJ+0X00001;gJ[0X3]=gJ[3][Fm[0X00001]];do IJ=IJ+0X01;end;IJ=IJ+0X1;do Fm=TG[IJ];end;IJ=IJ+0X0001;(gJ)[4]=gJ[0X3][Fm[0X1]];Fm=TG[IJ];IJ=IJ+1;do gJ[0X05]=DJ[Fm[0x0006]];end;IJ=IJ+0X01;IJ=IJ+0X1;Fm=TG[IJ];IJ=IJ+1;gJ[6]=DJ[Fm[0x6]];IJ=IJ+0X001;IJ=IJ+1;Fm=TG[IJ];IJ=IJ+1;(gJ)[0X006]=gJ[0X006][Fm[1]];do IJ=IJ+0X1;end;IJ=IJ+0X001;Fm=TG[IJ];do IJ=IJ+1;end;do(gJ)[6]=gJ[6][Fm[1]];end;Fm=TG[IJ];IJ=IJ+0x001;do if not(not(Fm[6]<gJ[0X006]))then else IJ=Fm[2];end;end;else gJ[3]=DJ[Fm[6]];IJ=IJ+1;IJ=IJ+0X01;IJ=IJ+0X1;do CJ=3;end;gJ[CJ]=gJ[CJ]();IJ=IJ+0x01;IJ=IJ+1;Fm=TG[IJ];IJ=IJ+0X1;if gJ[3]then IJ=Fm[5];end;end;end;end;end;else if not(Nm<0X0010)then do if not(Nm<0X12)then do if Nm~=19 then do gJ[0]=DJ[Fm[6]];end;IJ=IJ+0x1;IJ=IJ+1;local qW=0X0;IJ=IJ+1;local tW=(cG[0x0]);gJ[0x001]=tW[0X0001][tW[2]];IJ=IJ+1;IJ=IJ+0x1;IJ=IJ+0X1;(gJ)[2]=nil;IJ=IJ+1;do gJ[0X3]=true;end;IJ=IJ+0X0001;CJ=qW+0X4-1;(gJ)[qW]=gJ[qW](V(gJ,qW+0X1,CJ));do CJ=qW;end;Fm=TG[IJ];IJ=IJ+0X001;gJ[0x1]=Fm[6]/Fm[1];IJ=IJ+0X1;(gJ)[0X2]=nil;Fm=TG[IJ];do IJ=IJ+1;end;gJ[3]=DJ[Fm[6]];do Fm=TG[IJ];end;do IJ=IJ+0x001;end;if not gJ[3]then do IJ=Fm[0X05];end;end;else gJ[3]=DJ[Fm[0X0006]];do IJ=IJ+1;end;IJ=IJ+1;IJ=IJ+1;CJ=0X00003;gJ[CJ]=gJ[CJ]();Fm=TG[IJ];do IJ=IJ+1;end;if not(gJ[0X03])then else IJ=Fm[5];end;end;end;else if Nm~=0X00011 then local gv=JG[Fm[0X5]];local ov=(nil);local hv=(gv[0X4]);local vv=#hv;if not(vv>0X0)then else ov={};for zH=0X1,vv do local eH=(hv[zH]);if eH[0x1]~=0x0 then ov[zH-0X1]=cG[eH[2]];else do ov[zH-0X0001]={gJ,eH[2]};end;end;end;(H)(iG,ov);end;(gJ)[Fm[0X0002]]=ed(DJ,gv,ov);else local wC=cG[0X00001];gJ[3]=wC[0X00001][wC[2]];IJ=IJ+1;IJ=IJ+1;Fm=TG[IJ];IJ=IJ+0X001;do if not(gJ[0X00003])then else IJ=Fm[5];end;end;end;end;end;else if Nm>=0Xe then if Nm~=0Xf then gJ[0X07]=gJ[0x6];IJ=IJ+1;do gJ[0X8]=gJ[0x05];end;do IJ=IJ+1;end;do gJ[0X00002]=gJ[8];end;do IJ=IJ+1;end;(gJ)[1]=gJ[7];Fm=TG[IJ];IJ=IJ+1;IJ=Fm[0X005];else if gJ[Fm[5]]~=gJ[Fm[4]]then IJ=Fm[2];end;end;else(gJ)[0xa]=DJ[Fm[6]];Fm=TG[IJ];local uk,Nk=0X0A,JG[Fm[5]];IJ=IJ+0X1;local qk=Nk[4];local sk=(nil);local ek=(#qk);if not(ek>0X0)then else sk={};for QI=0x00001,ek do local MI=(qk[QI]);if MI[0X1]~=0x0 then do(sk)[QI-1]=cG[MI[0X2]];end;else sk[QI-0X1]={gJ,MI[2]};end;end;H(iG,sk);end;gJ[0Xb]=ed(DJ,Nk,sk);do IJ=IJ+1;end;(gJ[uk])(gJ[uk+0X1]);CJ=uk-0X1;Fm=TG[IJ];IJ=IJ+1;IJ=Fm[0x5];end;end;end;else if Nm<6 then if not(Nm<0X3)then do if Nm>=0X004 then do if Nm~=5 then local LE=Fm[0X2];local lE,UE=gJ[LE]();if not(lE)then else IJ=Fm[0X005];gJ[LE+3]=UE;end;else(gJ)[3]=DJ[Fm[0X6]];IJ=IJ+0X001;IJ=IJ+0X001;do Fm=TG[IJ];end;IJ=IJ+0X01;if not(not gJ[3])then else IJ=Fm[0X5];end;end;end;else end;end;else if not(Nm<1)then if Nm==2 then(gJ)[10]=DJ[Fm[6]];IJ=IJ+0X1;IJ=IJ+1;do IJ=IJ+1;end;CJ=10;local sq=0xA;(gJ[CJ])();do CJ=CJ-0X00001;end;Fm=TG[IJ];IJ=IJ+1;gJ[0X000A]=DJ[Fm[6]];do Fm=TG[IJ];end;IJ=IJ+1;do(gJ)[11]=DJ[Fm[6]];end;IJ=IJ+0X00001;do IJ=IJ+1;end;do Fm=TG[IJ];end;IJ=IJ+1;do(gJ)[11]=gJ[11][Fm[1]];end;IJ=IJ+1;do IJ=IJ+0X1;end;do Fm=TG[IJ];end;IJ=IJ+0x1;(gJ)[12]=DJ[Fm[6]];IJ=IJ+0x1;IJ=IJ+0X01;do Fm=TG[IJ];end;do IJ=IJ+1;end;gJ[13]=Fm[6];Fm=TG[IJ];IJ=IJ+0X1;gJ[0XE]=gJ[9][Fm[1]];IJ=IJ+1;IJ=IJ+0x1;IJ=IJ+0X01;CJ=sq+5-1;(gJ[sq])(V(gJ,sq+1,CJ));CJ=sq-1;IJ=IJ+1;IJ=IJ+1;Fm=TG[IJ];IJ=IJ+0X001;do(gJ)[10]=DJ[Fm[0X6]];end;do Fm=TG[IJ];end;IJ=IJ+0X1;gJ[0XA]=gJ[10][Fm[1]];Fm=TG[IJ];do IJ=IJ+1;end;do(gJ)[0XA]=gJ[0XA][Fm[1]];end;Fm=TG[IJ];IJ=IJ+1;gJ[11]=gJ[0X9][Fm[1]];Fm=TG[IJ];IJ=IJ+1;if gJ[10]~=gJ[0XB]then do IJ=Fm[0X2];end;end;else(gJ)[10]=DJ[Fm[6]];Fm=TG[IJ];local Lh=(10);IJ=IJ+0X00001;local Kh=(gJ[0Xa]);(gJ)[Lh+1]=Kh;(gJ)[Lh]=Kh[Fm[1]];Fm=TG[IJ];IJ=IJ+0x1;gJ[12]=Fm[6];IJ=IJ+1;Lh=0X000A;gJ[Lh]=gJ[Lh](gJ[Lh+1],gJ[Lh+0X2]);CJ=Lh;Fm=TG[IJ];IJ=IJ+1;if gJ[0XA]then IJ=Fm[5];end;end;else gJ[Fm[0X2]]=Fm[6];end;end;else if not(Nm>=0X00009)then do if not(Nm>=0X0007)then(gJ)[3]=DJ[Fm[0X006]];do IJ=IJ+0X001;end;IJ=IJ+1;IJ=IJ+1;do CJ=0X0003;end;gJ[CJ]=gJ[CJ]();do Fm=TG[IJ];end;IJ=IJ+1;gJ[4]=DJ[Fm[6]];IJ=IJ+1;gJ[3]=gJ[0x3]-gJ[4];Fm=TG[IJ];IJ=IJ+1;do if not(not(Fm[0X6]<gJ[0X0003]))then else IJ=Fm[0X00002];end;end;else if Nm==8 then gJ[0x3]=DJ[Fm[6]];do Fm=TG[IJ];end;do IJ=IJ+0x1;end;(gJ)[3]=gJ[0X003][Fm[1]];do IJ=IJ+0X1;end;IJ=IJ+0x00001;Fm=TG[IJ];IJ=IJ+1;if not gJ[3]then IJ=Fm[5];end;else if not(gJ[Fm[2]])then else do IJ=Fm[5];end;end;end;end;end;else if Nm<11 then if Nm~=0xa then repeat local sE,uE=iG,(gJ);if#sE>0 then local xC={};for sT,qT in l,sE do for yJ,kJ in l,qT do if not(kJ[1]==uE and kJ[0X002]>=0X0)then else local Nj=(kJ[2]);if not xC[Nj]then(xC)[Nj]={uE[Nj]};end;kJ[0X001]=xC[Nj];(kJ)[2]=0x0001;end;end;end;end;until true;do return;end;else(gJ)[Fm[0x2]]=N(gJ[Fm[5]],gJ[Fm[4]]);end;else do if Nm~=12 then(gJ)[15]=DJ[Fm[0X006]];IJ=IJ+0X001;IJ=IJ+1;local oB=0X00f;IJ=IJ+0x001;do(gJ)[0x010]=gJ[13];end;do IJ=IJ+1;end;do(gJ)[0X0011]=nil;end;IJ=IJ+0X1;do gJ[0X12]=true;end;do IJ=IJ+1;end;do CJ=oB+4-0X1;end;gJ[oB]=gJ[oB](V(gJ,oB+1,CJ));CJ=oB;IJ=IJ+0X1;(gJ)[8]=gJ[0X0f];IJ=IJ+0X1;(gJ)[15]=gJ[0XE];do IJ=IJ+1;end;do gJ[16]=gJ[0XC];end;IJ=IJ+1;(gJ)[0x0009]=gJ[0x10];IJ=IJ+0x00001;do(gJ)[0X6]=gJ[0Xf];end;Fm=TG[IJ];IJ=IJ+1;IJ=Fm[5];else(gJ)[Fm[2]]=DJ[Fm[6]];end;end;end;end;end;end;else if Nm>=0x00029 then do if Nm>=0X30 then if Nm>=0x33 then do if not(Nm>=0X35)then if Nm==52 then gJ[Fm[2]]={V({},1,Fm[5])};else if not(gJ[Fm[5]]<=Fm[1])then do IJ=Fm[2];end;end;end;else if Nm==54 then gJ[0x0000A]=DJ[Fm[0X00006]];IJ=IJ+0X001;IJ=IJ+1;Fm=TG[IJ];local mH=(10);IJ=IJ+0X001;gJ[10]=gJ[10][Fm[1]];do Fm=TG[IJ];end;do IJ=IJ+0X1;end;local qH=gJ[10];gJ[mH+1]=qH;(gJ)[mH]=qH[Fm[1]];Fm=TG[IJ];IJ=IJ+0X1;(gJ)[12]=Fm[6];IJ=IJ+1;do mH=10;end;do(gJ)[mH]=gJ[mH](gJ[mH+0X0001],gJ[mH+2]);end;do CJ=mH;end;do IJ=IJ+1;end;do IJ=IJ+0x0001;end;Fm=TG[IJ];do IJ=IJ+0X0001;end;if not gJ[10]then IJ=Fm[5];end;else if gJ[Fm[0x5]]==gJ[Fm[4]]then IJ=Fm[0x02];end;end;end;end;else if Nm<0X31 then local Ig=13;local Qg=(gJ[0X0C]);(gJ)[Ig+0x001]=Qg;(gJ)[Ig]=Qg[Fm[0X1]];IJ=IJ+1;Ig=13;(gJ)[Ig]=gJ[Ig](gJ[Ig+1]);local Dg=cG[0X0];CJ=Ig;do Fm=TG[IJ];end;do IJ=IJ+0x1;end;(gJ)[13]=gJ[13][Fm[0X01]];IJ=IJ+1;do IJ=IJ+1;end;Fm=TG[IJ];IJ=IJ+0X1;do gJ[0Xe]=DJ[Fm[0X06]];end;do IJ=IJ+1;end;do(gJ)[0X000f]=Dg[1][Dg[2]];end;do IJ=IJ+1;end;IJ=IJ+1;Fm=TG[IJ];do IJ=IJ+0X001;end;(gJ)[15]=gJ[0X0000F][Fm[1]];do IJ=IJ+0X001;end;IJ=IJ+0X1;IJ=IJ+0X0001;gJ[16]=gJ[0xd];IJ=IJ+0x1;(gJ)[0X0011]=true;IJ=IJ+0x1;Ig=14;CJ=Ig+0X4-0X001;gJ[Ig]=gJ[Ig](V(gJ,Ig+0X001,CJ));do CJ=Ig;end;Fm=TG[IJ];IJ=IJ+1;if not(gJ[0XE]<=gJ[0X06])then do IJ=Fm[0X2];end;end;else if Nm==0X32 then do gJ[3]=DJ[Fm[6]];end;do IJ=IJ+0X00001;end;local Am=(cG[0]);IJ=IJ+1;local om=(3);IJ=IJ+0X00001;(gJ)[0x004]=Am[1][Am[2]];Fm=TG[IJ];IJ=IJ+1;do(gJ)[4]=gJ[0x4][Fm[1]];end;IJ=IJ+0X1;do IJ=IJ+0x0001;end;IJ=IJ+0X1;gJ[om]=gJ[om](gJ[om+0x1]);CJ=om;do IJ=IJ+1;end;IJ=IJ+0X1;do Fm=TG[IJ];end;IJ=IJ+0x1;gJ[0X4]=DJ[Fm[0X6]];IJ=IJ+0X0001;do IJ=IJ+1;end;Fm=TG[IJ];do IJ=IJ+0X001;end;(gJ)[0X00005]=DJ[Fm[0X6]];Fm=TG[IJ];do IJ=IJ+0x1;end;(gJ)[5]=gJ[5][Fm[0X1]];IJ=IJ+0X1;IJ=IJ+1;Fm=TG[IJ];IJ=IJ+0x1;(gJ)[0X5]=gJ[0X5][Fm[0x1]];IJ=IJ+1;do om=0X4;end;gJ[om]=gJ[om](gJ[om+1]);CJ=om;Fm=TG[IJ];IJ=IJ+1;gJ[0X5]=DJ[Fm[6]];IJ=IJ+0X001;IJ=IJ+1;Fm=TG[IJ];do IJ=IJ+1;end;do gJ[5]=gJ[0X5][Fm[1]];end;do IJ=IJ+1;end;IJ=IJ+1;Fm=TG[IJ];IJ=IJ+0X0001;gJ[5]=gJ[5][Fm[1]];IJ=IJ+0X0001;do IJ=IJ+1;end;Fm=TG[IJ];IJ=IJ+1;(gJ)[6]=DJ[Fm[0X6]];Fm=TG[IJ];do IJ=IJ+0X001;end;(gJ)[0X6]=gJ[6][Fm[1]];do IJ=IJ+0x0001;end;IJ=IJ+1;Fm=TG[IJ];do IJ=IJ+1;end;(gJ)[0x0006]=gJ[6][Fm[1]];IJ=IJ+1;do IJ=IJ+0x1;end;do IJ=IJ+0X1;end;gJ[0x5]=gJ[0X5][gJ[6]];local Qm=gJ[0x5];Fm=TG[IJ];IJ=IJ+0x1;do om=0x0005;end;(gJ)[om+1]=Qm;(gJ)[om]=Qm[Fm[0X001]];IJ=IJ+0X1;om=0X5;gJ[om]=gJ[om](gJ[om+1]);CJ=om;do Fm=TG[IJ];end;do IJ=IJ+0X00001;end;(gJ)[6]=Fm[0x6];Fm=TG[IJ];IJ=IJ+1;gJ[0X7]=Fm[6];IJ=IJ+0X1;for xe=0x8,0X9 do(gJ)[xe]=nil;end;Fm=TG[IJ];IJ=IJ+0X01;gJ[10]=DJ[Fm[0X6]];do IJ=IJ+1;end;IJ=IJ+1;local hm=2;do IJ=IJ+0X01;end;do(gJ)[11]=gJ[5];end;IJ=IJ+1;om=0X0a;local Pm=(0X00004);if hm==0X0 then else CJ=om+hm-0X1;end;local Dm,em=nil,(nil);if hm~=1 then do Dm,em=Cd(gJ[om](V(gJ,om+1,CJ)));end;else Dm,em=Cd(gJ[om]());end;if Pm~=0X1 then if Pm~=0 then Dm=om+Pm-2;CJ=Dm+1;else Dm=Dm+om-1;CJ=Dm;end;local bu=0;for Nh=om,Dm do do bu=bu+1;end;do gJ[Nh]=em[bu];end;end;else CJ=om-0X001;end;IJ=IJ+1;IJ=IJ+1;Fm=TG[IJ];IJ=IJ+1;do om=10;end;local um=h(function(...)(t)();for BU,PU in...do t(true,BU,PU);end;end);um(gJ[om],gJ[om+1],gJ[om+2]);CJ=om;(gJ)[om]=um;IJ=Fm[0X00005];else do(gJ)[6]=DJ[Fm[6]];end;Fm=TG[IJ];IJ=IJ+1;local AK=0X006;do gJ[7]=Fm[6];end;IJ=IJ+0X1;(gJ[AK])(gJ[AK+0X0001]);do CJ=AK-1;end;IJ=IJ+0X0001;IJ=IJ+1;Fm=TG[IJ];do IJ=IJ+0X1;end;IJ=Fm[0X5];end;end;end;else if Nm<0X00002c then if not(Nm>=42)then local Y_=(Fm[0X2]);for ii=Y_,Y_+(Fm[5]-0x001)do do(gJ)[ii]=YJ[IG+(ii-Y_)+0x1];end;end;else if Nm==43 then do(gJ)[3]=gJ[3]+Fm[1];end;do Fm=TG[IJ];end;do IJ=IJ+1;end;DJ[Fm[0x006]]=gJ[0X3];IJ=IJ+1;local pH=(cG[0X000]);gJ[3]=pH[0X1][pH[2]];IJ=IJ+0X01;IJ=IJ+0X001;do Fm=TG[IJ];end;IJ=IJ+0X1;(DJ)[Fm[0X006]]=gJ[3];IJ=IJ+0X1;do pH=cG[0X2];end;do gJ[0X003]=pH[0X1][pH[0X02]];end;IJ=IJ+1;IJ=IJ+1;Fm=TG[IJ];IJ=IJ+1;if gJ[0X3]then do IJ=Fm[5];end;end;else gJ[3]=DJ[Fm[0X6]];do IJ=IJ+1;end;IJ=IJ+0x00001;do Fm=TG[IJ];end;IJ=IJ+0X00001;(gJ)[4]=DJ[Fm[6]];IJ=IJ+0x1;local Ob=(0X0003);do IJ=IJ+0X1;end;do Fm=TG[IJ];end;do IJ=IJ+0X1;end;(gJ)[5]=DJ[Fm[6]];IJ=IJ+0X00001;IJ=IJ+0X1;IJ=IJ+0X01;(gJ)[4]=gJ[4][gJ[0X5]];do IJ=IJ+1;end;IJ=IJ+1;IJ=IJ+1;local yb,gb=4,(2);if gb~=0X0 then CJ=Ob+gb-1;end;local Jb,Kb=nil,(nil);do if gb~=1 then do Jb,Kb=Cd(gJ[Ob](V(gJ,Ob+0X0001,CJ)));end;else Jb,Kb=Cd(gJ[Ob]());end;end;if yb~=0X1 then if yb~=0 then Jb=Ob+yb-2;CJ=Jb+0X1;else Jb=Jb+Ob-0x01;CJ=Jb;end;local ah=0X00000;for bt=Ob,Jb do ah=ah+1;do gJ[bt]=Kb[ah];end;end;else CJ=Ob-0X01;end;IJ=IJ+0X1;IJ=IJ+1;Fm=TG[IJ];do IJ=IJ+0X0001;end;Ob=0x3;local Lb=h(function(...)t();do for Og,zg in...do(t)(true,Og,zg);end;end;end);Lb(gJ[Ob],gJ[Ob+1],gJ[Ob+2]);CJ=Ob;(gJ)[Ob]=Lb;IJ=Fm[0x5];end;end;else do if Nm<46 then if Nm~=0X2D then(gJ)[0X006]=DJ[Fm[0x006]];do IJ=IJ+1;end;IJ=IJ+0X1;do IJ=IJ+1;end;local aD=cG[0X00];do(gJ)[7]=gJ[5];end;IJ=IJ+0X1;do gJ[0X8]=aD[1][aD[0x2]];end;do IJ=IJ+0X1;end;do IJ=IJ+1;end;IJ=IJ+1;local qD=6;do(gJ)[qD]=gJ[qD](gJ[qD+0X00001],gJ[qD+0X00002]);end;CJ=qD;IJ=IJ+1;IJ=IJ+1;Fm=TG[IJ];IJ=IJ+0X01;do gJ[7]=gJ[0x6]+Fm[1];end;Fm=TG[IJ];IJ=IJ+1;gJ[8]=DJ[Fm[6]];IJ=IJ+0X01;do aD=cG[0];end;gJ[0x09]=aD[0x1][aD[2]];IJ=IJ+1;IJ=IJ+0X1;IJ=IJ+1;do qD=0X8;end;gJ[qD]=gJ[qD](gJ[qD+0x0001]);CJ=qD;IJ=IJ+0x001;IJ=IJ+1;do Fm=TG[IJ];end;do IJ=IJ+0X0001;end;do if not(gJ[7]<gJ[0x8])then IJ=Fm[0x00002];end;end;else(gJ)[0x0003]=DJ[Fm[0X6]];IJ=IJ+0X1;do IJ=IJ+1;end;Fm=TG[IJ];IJ=IJ+0X1;if not gJ[0x0003]then do IJ=Fm[5];end;end;end;else do if Nm~=0X2F then(gJ)[0X3]=DJ[Fm[0X6]];IJ=IJ+0X001;IJ=IJ+0X1;IJ=IJ+0X1;CJ=3;gJ[CJ]=gJ[CJ]();Fm=TG[IJ];IJ=IJ+0X00001;do if gJ[3]then IJ=Fm[0X0005];end;end;else do if not(Fm[0x006]<=gJ[Fm[4]])then IJ=Fm[2];end;end;end;end;end;end;end;end;end;else if Nm>=34 then if Nm<0X000025 then do if Nm>=0X23 then if Nm==36 then IJ=Fm[0X5];else do for cs=Fm[0X2],Fm[5]do do gJ[cs]=nil;end;end;end;end;else do gJ[0XA]=DJ[Fm[6]];end;do Fm=TG[IJ];end;local kl=(0Xa);do IJ=IJ+0x00001;end;local ll=(gJ[0Xa]);(gJ)[kl+1]=ll;gJ[kl]=ll[Fm[1]];Fm=TG[IJ];IJ=IJ+0X001;(gJ)[12]=Fm[0X6];do IJ=IJ+1;end;kl=0xa;(gJ)[kl]=gJ[kl](gJ[kl+0x1],gJ[kl+0x0002]);do CJ=kl;end;IJ=IJ+1;IJ=IJ+0X001;do Fm=TG[IJ];end;IJ=IJ+0X1;if not(gJ[10])then else IJ=Fm[5];end;end;end;else if not(Nm<39)then if Nm==40 then do gJ[0x3]=DJ[Fm[0X6]];end;IJ=IJ+0X01;IJ=IJ+0X1;IJ=IJ+0X1;local bj,Hj=cG[0X0],(3);gJ[4]=bj[0X1][bj[0X00002]];do Fm=TG[IJ];end;IJ=IJ+1;(gJ)[0x5]=DJ[Fm[6]];IJ=IJ+1;(gJ)[Hj]=gJ[Hj](gJ[Hj+0X0001],gJ[Hj+0X2]);CJ=Hj;IJ=IJ+1;IJ=IJ+0X1;Fm=TG[IJ];IJ=IJ+1;if gJ[0x0003]<Fm[0X0001]then IJ=Fm[2];end;else(gJ)[10]=DJ[Fm[6]];IJ=IJ+1;IJ=IJ+1;Fm=TG[IJ];IJ=IJ+1;local bO=10;gJ[0X00A]=gJ[10][Fm[1]];do Fm=TG[IJ];end;IJ=IJ+0x0001;(gJ)[10]=gJ[10][Fm[1]];Fm=TG[IJ];IJ=IJ+1;local xO=gJ[10];gJ[bO+0X01]=xO;(gJ)[bO]=xO[Fm[1]];IJ=IJ+1;do bO=10;end;gJ[bO](gJ[bO+1]);CJ=bO-1;IJ=IJ+0x001;IJ=IJ+0X0001;Fm=TG[IJ];IJ=IJ+0x1;IJ=Fm[0X00005];end;else if Nm~=0X26 then(gJ)[Fm[2]]=gJ[Fm[0x5]]>=gJ[Fm[4]];else do(gJ)[6]=DJ[Fm[6]];end;IJ=IJ+1;do IJ=IJ+1;end;Fm=TG[IJ];IJ=IJ+0X00001;gJ[6]=gJ[6][Fm[1]];do IJ=IJ+0X1;end;IJ=IJ+0x1;Fm=TG[IJ];local lj=(6);local rj=nil;IJ=IJ+0X1;gJ[7]=DJ[Fm[6]];do IJ=IJ+1;end;do IJ=IJ+1;end;Fm=TG[IJ];IJ=IJ+1;local Zj=JG[Fm[0X5]];local wj=(Zj[0x4]);local Oj=#wj;if not(Oj>0X0)then else rj={};for dt=0X00001,Oj do local st=wj[dt];do if st[0X1]~=0X0 then(rj)[dt-1]=cG[st[0X00002]];else rj[dt-0X01]={gJ,st[2]};end;end;end;H(iG,rj);end;gJ[8]=ed(DJ,Zj,rj);IJ=IJ+0X001;(gJ[lj])(gJ[lj+0X1],gJ[lj+2]);CJ=lj-1;IJ=IJ+0X1;IJ=IJ+1;do IJ=IJ+0X1;end;repeat local N3,X3=iG,gJ;if not(#N3>0X00)then else local KL={};for YC,DC in l,N3 do for ML,GL in l,DC do if GL[1]==X3 and GL[0X2]>=0X0 then local cf=(GL[0x0002]);if not KL[cf]then KL[cf]={X3[cf]};end;GL[0X1]=KL[cf];GL[2]=0x1;end;end;end;end;until true;return;end;end;end;else if Nm>=0x1e then if Nm>=32 then if Nm~=33 then do(gJ)[3]=DJ[Fm[0X6]];end;Fm=TG[IJ];IJ=IJ+0X1;local RF=4;do gJ[4]=DJ[Fm[0X6]];end;IJ=IJ+1;do gJ[5]=gJ[2];end;do IJ=IJ+0X01;end;gJ[RF]=gJ[RF](gJ[RF+0X1]);CJ=RF;IJ=IJ+0X1;IJ=IJ+1;Fm=TG[IJ];IJ=IJ+0x1;do if gJ[0x0003]~=gJ[4]then else IJ=Fm[2];end;end;else(gJ)[Fm[2]]=#gJ[Fm[5]];end;else do if Nm~=31 then do if gJ[Fm[0X5]]<gJ[Fm[4]]then IJ=Fm[0x2];end;end;else(gJ)[10]=DJ[Fm[6]];local L_=(10);Fm=TG[IJ];IJ=IJ+0x1;gJ[11]=Fm[0X6];IJ=IJ+1;gJ[L_](gJ[L_+0x01]);CJ=L_-0X00001;Fm=TG[IJ];do IJ=IJ+1;end;gJ[0Xa]=DJ[Fm[6]];Fm=TG[IJ];IJ=IJ+1;gJ[10]=gJ[0X0a][Fm[1]];IJ=IJ+1;IJ=IJ+1;Fm=TG[IJ];do IJ=IJ+0x1;end;if not gJ[10]then IJ=Fm[5];end;end;end;end;else if Nm<0X1C then do gJ[3]=DJ[Fm[0x6]];end;local Xm=(3);do IJ=IJ+0X1;end;do IJ=IJ+1;end;Fm=TG[IJ];do IJ=IJ+1;end;(gJ)[0X0004]=Fm[0X6];IJ=IJ+0X001;(gJ)[5]=gJ[0X2];IJ=IJ+0X1;gJ[Xm](gJ[Xm+1],gJ[Xm+0X2]);CJ=Xm-1;Fm=TG[IJ];IJ=IJ+0X001;IJ=Fm[5];else if Nm~=0X1d then do if not gJ[Fm[2]]then IJ=Fm[0x0005];end;end;else gJ[0X03]=DJ[Fm[0x0006]];do IJ=IJ+0X1;end;IJ=IJ+1;do IJ=IJ+1;end;do CJ=0X3;end;do gJ[CJ]=gJ[CJ]();end;IJ=IJ+0X1;IJ=IJ+1;do Fm=TG[IJ];end;IJ=IJ+1;if gJ[0X3]then IJ=Fm[5];end;end;end;end;end;end;end;end;end);if FJ then if EJ then if LJ==0X01 then return gJ[fJ]();else return gJ[fJ](V(gJ,fJ+0x1,CJ));end;elseif not(fJ)then else return V(gJ,fJ,LJ);end;else if C(EJ)~="\s\116\114i\110\g"then E(EJ,0X0);else if M(EJ,'att\e\m\pt\032t\111 \y\105\e\108\d\032a\cr\o\s\s \m\e\116a\m\e\116\h\111\d\047\C\037\-\cal\l\ \098o\117\110\da\114\y')then do return coroutine.yield();end;end;if M(EJ,"^.-:%d+: ")then(E)("Luraph Script:"..(YG[IJ-0X001]or'\(int\101rn\097\l\041')..'\058\032'..x(EJ),0x000);else(E)(EJ,0X0);end;end;end;end;end;else if lG~=49 then hG=function(...)local oD,qD=1,({});local iD=({[0X0002]=qD,[0X1]=FG});local RD=I();local rD=((RD==a and SG or RD));local PD,ZD=Cd(...);local mD=(0X0);PD=PD-1;do for Yv=0X00000,PD do if IG>Yv then qD[Yv]=ZD[Yv+0X1];else do break;end;end;end;end;if not OG then do ZD=nil;end;elseif zG then qD[IG]={n=PD>=IG and PD-IG+0X00001 or 0X0,V(ZD,IG+0X00001,PD+1)};end;if rD~=RD then(R)(hG,rD);end;local fD,TD,WD,yD=A(function()while true do local qY=TG[oD];local YY=(qY[0X3]);do oD=oD+1;end;if not(YY<0XB)then do if YY>=16 then if not(YY>=0X13)then if YY<0X0011 then(rD)[qY[6]]=qD[qY[2]];else if YY==0X12 then do(qD)[qY[0X00002]]=qD[qY[5]]~=qD[qY[0X004]];end;else do(qD)[qY[2]]={V({},0X1,qY[0X00005])};end;end;end;else if YY>=0X14 then if YY~=21 then(qD)[qY[2]]=rD[qY[0X06]];else(qD)[qY[0X00002]]=qY[6];end;else local fm=cG[qY[5]];(qD)[qY[2]]=fm[1][fm[2]];end;end;else if YY>=0XD then if not(YY<0x00e)then do if YY==15 then(qD)[0]=rD[qY[6]];qY=TG[oD];oD=oD+1;do qD[0X000]=qD[0x0][qY[1]];end;oD=oD+1;oD=oD+1;qY=TG[oD];oD=oD+1;(qD)[0x0]=qD[0X0]>qY[1];do qY=TG[oD];end;oD=oD+1;oD=qY[0X5];else do(qD)[0X00000]=rD[qY[0X6]];end;local re=0;qY=TG[oD];oD=oD+0X1;local Oe=qD[0];qD[re+1]=Oe;qD[re]=Oe[qY[1]];oD=oD+0x0001;do re=0X0000;end;qD[re]=qD[re](qD[re+0x0001]);mD=re;qY=TG[oD];do oD=oD+1;end;do oD=qY[0x00005];end;end;end;else repeat local L6,E6=iG,qD;do if not(#L6>0)then else local aO={};do for Ck,Xk in l,L6 do for ZH,RH in l,Xk do if RH[1]==E6 and RH[2]>=0 then local vv=RH[0X002];if not aO[vv]then aO[vv]={E6[vv]};end;do RH[0x1]=aO[vv];end;(RH)[0X2]=0x1;end;end;end;end;end;end;until true;return;end;else do if YY~=0x000c then else repeat local aT,jT=iG,(qD);if#aT>0 then local MR={};do for zV,YV in l,aT do do for hr,nr in l,YV do do if nr[1]==jT and nr[2]>=0 then local uv=(nr[2]);if not(not MR[uv])then else(MR)[uv]={jT[uv]};end;do(nr)[0X1]=MR[uv];end;(nr)[0X0002]=1;end;end;end;end;end;end;end;until true;local Ij=qY[2];return false,Ij,Ij+qY[5]-0x0002;end;end;end;end;end;else do if YY<0X0005 then do if not(YY>=2)then if YY~=0X0001 then(qD)[0]=rD[qY[6]];local bB=(0);qY=TG[oD];do oD=oD+0X1;end;(qD)[1]=qY[0X6];oD=oD+1;do(qD)[bB]=qD[bB](qD[bB+0x1]);end;mD=bB;do oD=oD+1;end;do oD=oD+1;end;oD=oD+0X1;do(qD)[0]=not qD[0];end;do qY=TG[oD];end;do oD=oD+0X1;end;oD=qY[0X5];else local qK=(qY[2]);local fK,TK=qD[qK]();if fK then do for Dd=0X1,qY[0X4]do qD[qK+Dd]=TK[Dd];end;end;do oD=qY[0x5];end;end;end;else do if not(YY<0X3)then if YY==4 then for Dd=qY[0x2],qY[0x5]do qD[Dd]=nil;end;else(qD)[qY[0X2]]=L(qD[qY[0X5]],qD[qY[4]]);end;else(qD)[0]=rD[qY[6]];oD=oD+1;oD=oD+1;qY=TG[oD];oD=oD+0X1;oD=qY[5];end;end;end;end;else if not(YY>=0x8)then do if YY>=0X6 then do if YY~=0X7 then(qD)[0X0]=rD[qY[6]];oD=oD+1;oD=oD+1;qY=TG[oD];oD=oD+0x001;(qD)[0X0]=qD[0x000][qY[0X1]];qY=TG[oD];oD=oD+0X1;oD=qY[0X00005];else oD=qY[5];end;end;else do if not qD[qY[2]]then do oD=qY[0x5];end;end;end;end;end;else if YY>=9 then if YY==0X0A then local i5=qY[2];local c5,C5=qD[i5]();do if c5 then oD=qY[5];(qD)[i5+3]=C5;end;end;else repeat local tB,iB=iG,qD;if not(#tB>0)then else local Bf=({});for CQ,YQ in l,tB do for Tl,Rl in l,YQ do if Rl[0X1]==iB and Rl[0X2]>=0X0 then local Ev=Rl[0X0002];if not Bf[Ev]then do(Bf)[Ev]={iB[Ev]};end;end;Rl[0x00001]=Bf[Ev];(Rl)[0x002]=1;end;end;end;end;until true;local P5=(qY[0x0002]);return false,P5,P5;end;else local aF=JG[qY[0x5]];local nF=aF[4];local hF=nil;local lF=(#nF);do if lF>0 then hF={};for Y1=0X00001,lF do local R1=nF[Y1];do if R1[1]==0 then do hF[Y1-0X1]={qD,R1[0X0002]};end;else do(hF)[Y1-0X0001]=cG[R1[0X2]];end;end;end;end;H(iG,hF);end;end;qD[qY[2]]=ed(rD,aF,hF);end;end;end;end;end;end;end);if not(fD)then if C(TD)~="string"then E(TD,0x0000);else if M(TD,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(M(TD,"\^\.\-\:\%\d\043\:\ "))then E(TD,0x0);else E("Luraph Script:"..(YG[oD-0x1]or"(internal)")..": "..x(TD),0);end;end;else if TD then if yD~=0X0001 then return qD[WD](V(qD,WD+0X1,mD));else return qD[WD]();end;elseif WD then do return V(qD,WD,yD);end;end;end;end;else do hG=function(...)local kF,jF=0x1,{};local cF=I();local sF=({[0X1]=FG,[0X0002]=jF});local bF,qF=Cd(...);local wF=(cF==a and SG or cF);bF=bF-1;for mq=0,bF do if not(IG>mq)then do break;end;else jF[mq]=qF[mq+0x1];end;end;local IF=0;if not OG then qF=nil;elseif not(zG)then else do jF[IG]={n=bF>=IG and bF-IG+0X1 or 0,V(qF,IG+0X01,bF+0X0001)};end;end;do if wF~=cF then R(hG,wF);end;end;local iF,GF,aF,WF=A(function()do while true do local kk=(TG[kF]);local uk=(kk[3]);do kF=kF+0X0001;end;if uk>=0x7 then do if not(uk<0X00A)then if uk>=0XC then if uk==13 then local Hn=kk[2];do for up=Hn,Hn+(kk[5]-0X0001)do do(jF)[up]=qF[IG+(up-Hn)+1];end;end;end;else jF[kk[0X2]]=b(jF[kk[5]],jF[kk[4]]);end;else if uk~=0X0000b then do(jF)[0X0]=wF[kk[6]];end;local xA=0;kk=TG[kF];do kF=kF+0X0001;end;do(jF)[0]=jF[0X0000][kk[1]];end;kk=TG[kF];local cA=(0X0);kF=kF+0X1;local GA=jF[0X00000];jF[cA+0X1]=GA;jF[cA]=GA[kk[1]];kk=TG[kF];do kF=kF+1;end;jF[2]=kk[6];kF=kF+1;do cA=0;end;(jF)[cA]=jF[cA](jF[cA+0X1],jF[cA+0X02]);IF=cA;kF=kF+0x1;do(jF)[0]=not jF[0];end;kF=kF+1;repeat local Ru,Hu=iG,(jF);if not(#Ru>0)then else local EU=({});do for RG,yG in l,Ru do for H2,F2 in l,yG do if not(F2[1]==Hu and F2[2]>=0)then else local ze=(F2[0x2]);if not(not EU[ze])then else EU[ze]={Hu[ze]};end;do F2[1]=EU[ze];end;(F2)[2]=0X1;end;end;end;end;end;until true;do return false,xA,xA;end;else kF=kk[5];end;end;else do if not(uk>=8)then do if jF[kk[2]]then kF=kk[0X00005];end;end;else if uk~=9 then jF[kk[0X2]]=wF[kk[6]];else end;end;end;end;end;else if not(uk>=3)then if uk<0X00001 then do(jF)[kk[0x02]]={V({},1,kk[5])};end;else if uk==0X2 then do repeat local cT,KT=iG,(jF);do if not(#cT>0X0)then else local fM=({});do for cg,Fg in l,cT do for wi,Pi in l,Fg do do if Pi[1]==KT and Pi[2]>=0 then local Yt=Pi[0X2];if not(not fM[Yt])then else(fM)[Yt]={KT[Yt]};end;(Pi)[0X1]=fM[Yt];(Pi)[2]=1;end;end;end;end;end;end;end;until true;end;local wz=(kk[0x0002]);return false,wz,wz+kk[5]-0X00002;else repeat local Dx,zx=iG,jF;if not(#Dx>0X00)then else local RW={};for hV,wV in l,Dx do for HO,kO in l,wV do do if not(kO[0X1]==zx and kO[0x2]>=0X0)then else local OH=kO[2];if not(not RW[OH])then else(RW)[OH]={zx[OH]};end;kO[1]=RW[OH];(kO)[0X0002]=1;end;end;end;end;end;until true;return;end;end;else if not(uk>=0X5)then if uk~=0X4 then local Me=(kk[2]);local Te,de=jF[Me]();if not(Te)then else kF=kk[5];jF[Me+0X3]=de;end;else jF[kk[2]]=kk[6];end;else if uk==0X006 then local dZ=JG[kk[0X05]];local AZ=(dZ[4]);local xZ=nil;local NZ=#AZ;do if not(NZ>0X000)then else xZ={};for Nw=0X0001,NZ do local nw=(AZ[Nw]);if nw[1]==0 then(xZ)[Nw-0x1]={jF,nw[2]};else xZ[Nw-0X1]=cG[nw[0X2]];end;end;H(iG,xZ);end;end;do jF[kk[0X0002]]=ed(wF,dZ,xZ);end;else local pI,aI=kk[2],(kk[5]);do if aI~=0 then IF=pI+aI-0X1;end;end;local kI=(kk[0X4]);local sI,wI=nil,(nil);if aI~=1 then sI,wI=Cd(jF[pI](V(jF,pI+1,IF)));else sI,wI=Cd(jF[pI]());end;if kI==1 then IF=pI-1;else if kI~=0 then sI=pI+kI-2;IF=sI+1;else sI=sI+pI-0x1;IF=sI;end;local W2=0X0000;for i9=pI,sI do W2=W2+0X1;jF[i9]=wI[W2];end;end;end;end;end;end;end;end;end);if not(iF)then if C(GF)~='\115t\114\i\110\g'then E(GF,0X0);else do if M(GF,'\097\116t\e\m\p\116\ \116o \yi\101\l\100\032\097\cr\o\s\s\ \m\eta\m\101\116\h\o\d\047\C\037\045\c\097ll\032\098o\117nd\097\114\y')then return coroutine.yield();end;end;if not(M(GF,"^.-:%d+: "))then(E)(GF,0);else(E)("Luraph Script:"..(YG[kF-0X1]or"(internal)")..'\:\032'..x(GF),0);end;end;else if GF then if WF~=1 then return jF[aF](V(jF,aF+1,IF));else return jF[aF]();end;elseif aF then return V(jF,aF,WF);end;end;end;end;end;end;end;else if not(lG<52)then if not(lG>=53)then hG=function(...)local Ca,da=0X1,({});local Qa=({[0X0002]=da,[0X1]=FG});local Za=(I());local Fa,Ja=Cd(...);Fa=Fa-0X1;for Kp=0X000,Fa do if not(IG>Kp)then do break;end;else da[Kp]=Ja[Kp+0X001];end;end;local sa=((Za==a and SG or Za));if not OG then Ja=nil;elseif zG then do(da)[IG]={n=Fa>=IG and Fa-IG+1 or 0,V(Ja,IG+1,Fa+1)};end;end;local ja=(0);do if sa~=Za then(R)(hG,sa);end;end;local fa,va,Ba,oa=A(function()while true do local SV=(TG[Ca]);local xV=(SV[3]);Ca=Ca+0X00001;if not(xV>=18)then if not(xV<0X009)then if xV>=0X0000D then if xV>=15 then if xV<16 then else if xV==0X11 then(da)[0X002]=sa[SV[0X6]];SV=TG[Ca];Ca=Ca+0x1;local Ha=(0X2);do(da)[3]=SV[0X6];end;SV=TG[Ca];Ca=Ca+0X01;(da)[0X00004]=SV[0X6];Ca=Ca+0X1;(da)[Ha]=da[Ha](da[Ha+1],da[Ha+2]);ja=Ha;Ca=Ca+1;Ca=Ca+0X01;do SV=TG[Ca];end;do Ca=Ca+0X1;end;if not(da[0X2])then else do Ca=SV[0X0005];end;end;else da[0X0002]=sa[SV[0X0006]];SV=TG[Ca];do Ca=Ca+1;end;local c1=2;(da)[0X3]=SV[6];Ca=Ca+0X1;(da)[c1]=da[c1](da[c1+1]);ja=c1;SV=TG[Ca];Ca=Ca+1;if not da[2]then Ca=SV[5];end;end;end;else if xV==0XE then(da)[2]=sa[SV[6]];local Cc=2;SV=TG[Ca];do Ca=Ca+0X00001;end;do(da)[3]=SV[0x6];end;SV=TG[Ca];do Ca=Ca+1;end;do(da)[0X4]=SV[0X6];end;do Ca=Ca+1;end;(da)[Cc]=da[Cc](da[Cc+1],da[Cc+0x2]);do ja=Cc;end;Ca=Ca+1;Ca=Ca+0X1;SV=TG[Ca];Ca=Ca+1;if da[0X2]then Ca=SV[0x5];end;else local d3=SV[2];local n3,f3=da[d3]();if n3 then Ca=SV[5];da[d3+0x003]=f3;end;end;end;else if not(xV>=0XB)then do if xV==10 then da[0X3]=sa[SV[6]];Ca=Ca+0x00001;ja=3;da[ja]=da[ja]();SV=TG[Ca];Ca=Ca+1;do if da[3]then Ca=SV[0X5];end;end;else do da[2]=sa[SV[0X00006]];end;Ca=Ca+1;Ca=Ca+1;do SV=TG[Ca];end;do Ca=Ca+1;end;da[2]=da[0X2][SV[1]];SV=TG[Ca];Ca=Ca+0X1;if not(not da[2])then else Ca=SV[5];end;end;end;else if xV==0Xc then do(da)[0X02]=sa[SV[6]];end;Ca=Ca+0x01;do Ca=Ca+1;end;do SV=TG[Ca];end;Ca=Ca+0X1;da[0x2]=da[2][SV[0X1]];SV=TG[Ca];Ca=Ca+0X1;do if not da[0X002]then Ca=SV[0x5];end;end;else(da)[0x02]=sa[SV[6]];do Ca=Ca+0X001;end;Ca=Ca+0X01;SV=TG[Ca];Ca=Ca+1;(da)[0X002]=da[0X00002][SV[0x1]];SV=TG[Ca];Ca=Ca+0X1;da[2]=da[0X2][SV[0X00001]];do Ca=Ca+0X001;end;do Ca=Ca+0x1;end;SV=TG[Ca];Ca=Ca+1;if not(not(SV[0x6]<=da[2]))then else do Ca=SV[2];end;end;end;end;end;else if not(xV>=4)then if xV<2 then if xV~=0X1 then do da[0X2]=sa[SV[6]];end;do Ca=Ca+1;end;Ca=Ca+1;do SV=TG[Ca];end;do Ca=Ca+0X1;end;(da)[0X002]=da[2][SV[1]];do Ca=Ca+0X001;end;do Ca=Ca+1;end;SV=TG[Ca];Ca=Ca+1;if not(not da[0X02])then else Ca=SV[5];end;else do da[2]=sa[SV[0X6]];end;do Ca=Ca+1;end;Ca=Ca+1;SV=TG[Ca];Ca=Ca+1;(da)[0X2]=da[0X2][SV[1]];Ca=Ca+0X01;do Ca=Ca+1;end;SV=TG[Ca];Ca=Ca+0X01;da[0X00002]=da[2][SV[0X1]];SV=TG[Ca];Ca=Ca+1;da[0X2]=da[2][SV[1]];SV=TG[Ca];do Ca=Ca+0X1;end;if not(SV[0X6]<=da[0X2])then Ca=SV[0X2];end;end;else do if xV~=3 then(da)[2]=sa[SV[0X6]];Ca=Ca+1;ja=0x2;da[ja]();do ja=ja-1;end;do SV=TG[Ca];end;Ca=Ca+0X1;da[0x00002]=sa[SV[0x00006]];do Ca=Ca+0X1;end;Ca=Ca+0X1;SV=TG[Ca];Ca=Ca+1;do(da[2])[SV[0X00006]]=SV[1];end;Ca=Ca+1;repeat local Rh,Zh=iG,da;do if#Rh>0 then local pz={};do for T0,u0 in l,Rh do for qb,Gb in l,u0 do do if Gb[0X01]==Zh and Gb[2]>=0 then local Cv=(Gb[0x02]);if not(not pz[Cv])then else do(pz)[Cv]={Zh[Cv]};end;end;Gb[1]=pz[Cv];Gb[0X2]=1;end;end;end;end;end;end;end;until true;return;else(da)[0X0002]=sa[SV[6]];do Ca=Ca+0x00001;end;do Ca=Ca+0X00001;end;do SV=TG[Ca];end;Ca=Ca+1;(da)[3]=SV[6];SV=TG[Ca];local bD=2;do Ca=Ca+0X1;end;(da)[0X00004]=SV[6];Ca=Ca+0X01;(da)[bD]=da[bD](da[bD+0X1],da[bD+2]);ja=bD;do SV=TG[Ca];end;Ca=Ca+1;if da[2]then Ca=SV[0x5];end;end;end;end;else do if xV<6 then if xV~=5 then(da)[0X2]=sa[SV[6]];SV=TG[Ca];Ca=Ca+1;(da)[2]=da[0X02][SV[0X001]];Ca=Ca+1;do Ca=Ca+0X1;end;do SV=TG[Ca];end;Ca=Ca+0X1;if not da[2]then Ca=SV[0X5];end;else(da)[0x2]=sa[SV[0x0006]];Ca=Ca+0X01;Ca=Ca+1;local aY=0X02;SV=TG[Ca];do Ca=Ca+0X1;end;do(da)[0X3]=SV[0X006];end;SV=TG[Ca];Ca=Ca+0x001;(da)[4]=SV[0X00006];do Ca=Ca+1;end;do(da)[aY]=da[aY](da[aY+1],da[aY+0X002]);end;ja=aY;Ca=Ca+1;Ca=Ca+1;SV=TG[Ca];Ca=Ca+0X1;if not(da[0x2])then else Ca=SV[5];end;end;else if xV>=0X7 then if xV==0X8 then for Vf=SV[0X0002],SV[0X5]do da[Vf]=nil;end;else repeat local Zh,Mh=iG,da;if#Zh>0X0 then local Ya={};do for II,lI in l,Zh do for as,bs in l,lI do if bs[1]==Mh and bs[2]>=0X00000 then local FR=(bs[0x2]);if not Ya[FR]then Ya[FR]={Mh[FR]};end;(bs)[1]=Ya[FR];do(bs)[0X2]=0x1;end;end;end;end;end;end;until true;return;end;else Ca=SV[0X5];end;end;end;end;end;else if not(xV>=0X1B)then if not(xV>=22)then if xV>=0X014 then do if xV~=0X15 then do if da[SV[0X05]]==SV[1]then else Ca=SV[0X2];end;end;else(da)[SV[2]]=sa[SV[6]];end;end;else do if xV~=0X13 then(da)[SV[0X2]]={V({},1,SV[5])};else(da)[0X0]=sa[SV[6]];do Ca=Ca+1;end;do Ca=Ca+1;end;local u1=0x00;SV=TG[Ca];Ca=Ca+0x1;da[0X1]=sa[SV[0x00006]];Ca=Ca+0X00001;Ca=Ca+1;SV=TG[Ca];Ca=Ca+0x1;local f1=(3);(da)[0X00002]=SV[0X006];Ca=Ca+0X0001;(da)[0X3]=true;do Ca=Ca+0X1;end;local G1=(0X04);if G1==0X0000 then else ja=u1+G1-0X001;end;local W1,v1=nil,nil;if G1~=1 then W1,v1=Cd(da[u1](V(da,u1+0X1,ja)));else W1,v1=Cd(da[u1]());end;do if f1~=1 then if f1==0 then do W1=W1+u1-0x0001;end;ja=W1;else do W1=u1+f1-0X00002;end;do ja=W1+1;end;end;local wn=(0);for Kk=u1,W1 do wn=wn+1;(da)[Kk]=v1[wn];end;else ja=u1-0X00001;end;end;SV=TG[Ca];Ca=Ca+0x00001;do if da[0X0001]==SV[1]then do Ca=SV[0X2];end;end;end;end;end;end;else do if not(xV<0X00018)then if xV>=0X19 then do if xV~=0X001a then da[2]=sa[SV[6]];do Ca=Ca+1;end;Ca=Ca+1;SV=TG[Ca];Ca=Ca+1;da[2]=da[0X2][SV[1]];SV=TG[Ca];do Ca=Ca+1;end;if not da[0X2]then do Ca=SV[0X5];end;end;else local ib=JG[SV[5]];local fb=nil;local Db=(ib[4]);local nb=#Db;if not(nb>0)then else fb={};for SN=0X00001,nb do local dN=(Db[SN]);if dN[0x1]~=0x00 then fb[SN-0X001]=cG[dN[0x2]];else(fb)[SN-1]={da,dN[2]};end;end;H(iG,fb);end;da[SV[2]]=ed(sa,ib,fb);end;end;else(da)[0x2]=true;SV=TG[Ca];Ca=Ca+0x1;(sa)[SV[6]]=da[0x2];SV=TG[Ca];Ca=Ca+1;Ca=SV[0X5];end;else if xV~=23 then(da)[SV[0X2]]=SV[0X0006];else(da)[0X2]=sa[SV[6]];Ca=Ca+1;do Ca=Ca+0x1;end;do SV=TG[Ca];end;do Ca=Ca+0x1;end;da[2][SV[0X6]]=SV[0X1];Ca=Ca+0X1;repeat local bG,UG=iG,da;if#bG>0 then local v6=({});for Nu,ju in l,bG do do for WD,wD in l,ju do if not(wD[1]==UG and wD[0x2]>=0)then else local g4=(wD[2]);if not v6[g4]then v6[g4]={UG[g4]};end;wD[1]=v6[g4];(wD)[2]=1;end;end;end;end;end;until true;return;end;end;end;end;else do if xV<31 then do if xV<29 then if xV==28 then da[2]=sa[SV[0X6]];SV=TG[Ca];Ca=Ca+1;(da)[0X2]=da[2][SV[0X00001]];SV=TG[Ca];Ca=Ca+0X1;do if not da[2]then Ca=SV[5];end;end;else(da)[0X2]=sa[SV[6]];SV=TG[Ca];local fU=0X00002;Ca=Ca+0X1;da[3]=SV[0X6];SV=TG[Ca];Ca=Ca+1;(da)[0x00004]=SV[0X06];Ca=Ca+0X001;da[fU]=da[fU](da[fU+0X0001],da[fU+0x2]);ja=fU;Ca=Ca+1;do Ca=Ca+1;end;SV=TG[Ca];do Ca=Ca+1;end;do if da[0X2]then Ca=SV[0X05];end;end;end;else if xV~=30 then da[SV[0X002]]=da[SV[0x5]]>da[SV[0X4]];else(da)[2]=sa[SV[0X006]];Ca=Ca+0x1;Ca=Ca+1;SV=TG[Ca];Ca=Ca+0X1;da[0x3]=SV[6];Ca=Ca+0X1;(da)[4]=true;Ca=Ca+0X1;local mw=(2);(da)[mw]=da[mw](da[mw+1],da[mw+2]);ja=mw;Ca=Ca+0x00001;Ca=Ca+0X00001;do SV=TG[Ca];end;do Ca=Ca+0X1;end;if da[0X2]~=SV[1]then Ca=SV[0X2];end;end;end;end;else if xV<0X21 then if xV~=32 then da[SV[0X02]]=SV[6];else local Lf=SV[0X002];for zy=Lf,Lf+(SV[0X5]-0x0001)do da[zy]=Ja[IG+(zy-Lf)+1];end;end;else if xV>=0X22 then if xV~=0X023 then do(da)[SV[2]]=L(da[SV[0x5]],da[SV[0X0004]]);end;else do da[2]=sa[SV[6]];end;do Ca=Ca+1;end;Ca=Ca+1;SV=TG[Ca];Ca=Ca+0X1;da[2]=da[2][SV[1]];do SV=TG[Ca];end;do Ca=Ca+1;end;do if not(not da[2])then else Ca=SV[0x00005];end;end;end;else da[2]=false;do SV=TG[Ca];end;Ca=Ca+0X1;sa[SV[6]]=da[0X2];SV=TG[Ca];Ca=Ca+0X001;local yV=(2);da[2]=sa[SV[0X6]];Ca=Ca+1;Ca=Ca+0x0001;SV=TG[Ca];Ca=Ca+1;do da[0X3]=SV[6];end;do Ca=Ca+0X1;end;(da)[yV]=da[yV](da[yV+1]);do ja=yV;end;SV=TG[Ca];Ca=Ca+1;if not(not da[2])then else Ca=SV[0X5];end;end;end;end;end;end;end;end;end);if fa then if va then do if oa~=1 then do return da[Ba](V(da,Ba+1,ja));end;else do return da[Ba]();end;end;end;elseif not(Ba)then else return V(da,Ba,oa);end;else if C(va)=="\s\116r\ing"then do if not(M(va,"at\116\e\m\pt\ \116\111\ \yi\e\l\100\ \097\099ro\ss\032met\097m\et\ho\100\/\067\037\-\ca\l\l\032b\111u\110\100a\114\121"))then else return coroutine.yield();end;end;if M(va,"^.-:%d+: ")then E('\Lu\114\097\p\104\ \083\099\114\105\pt:'..(YG[Ca-0X1]or"(internal)")..'\:\ '..x(va),0);else(E)(va,0X00);end;else(E)(va,0X0);end;end;end;else do if lG~=54 then do hG=function(...)local T0,i0=1,({});local C0=I();local N0,f0=Cd(...);do N0=N0-1;end;local S0={[0X1]=FG,[0X0002]=i0};local v0=((C0==a and SG or C0));local u0=0;for AG=0,N0 do if not(IG>AG)then do break;end;else do(i0)[AG]=f0[AG+0X001];end;end;end;if not OG then f0=nil;elseif zG then(i0)[IG]={n=N0>=IG and N0-IG+1 or 0X000,V(f0,IG+0X1,N0+0x001)};end;if v0~=C0 then R(hG,v0);end;while true do local wV=(TG[T0]);local CV=wV[0x3];T0=T0+0X01;return(function(L,F,...)if not Client.Character:FindFirstChild("HasBuso")then task.spawn(_C,"Buso");end;end)(i0,cG,...);end;end;end;else do hG=function(...)local XG=(1);local NG={};local QG=I();local WG=((QG==a and SG or QG));local KG,kG=Cd(...);local uG=({[0X0002]=NG,[0X1]=FG});local DG=(0);do KG=KG-1;end;for MA=0X0000,KG do do if IG>MA then(NG)[MA]=kG[MA+0x1];else break;end;end;end;do if not OG then kG=nil;elseif not(zG)then else NG[IG]={n=KG>=IG and KG-IG+0X01 or 0,V(kG,IG+1,KG+1)};end;end;if WG~=QG then R(hG,WG);end;do while true do local le=TG[XG];local Ce=(le[0X03]);do XG=XG+0x01;end;do return(function(Y,Z,...)local S,U=Y[0],Y[1];local g,N;if S=="DragonClaw"then g,N=pcall(_C,"BlackbeardReward","DragonClaw","2");else g,N=pcall(_C,"Buy"..S,U);end;return g and(N==1 or N==2);end)(NG,cG,...);end;end;end;end;end;end;end;end;else if lG==51 then hG=function(...)local T6,w6={},(0);local J6=(0X01);local Z6=I();local V6=({[0X0002]=T6,[0X1]=FG});local l6,F6=Cd(...);l6=l6-0X001;local e6=((Z6==a and SG or Z6));for tc=0,l6 do if IG>tc then do(T6)[tc]=F6[tc+1];end;else do break;end;end;end;if not OG then do F6=nil;end;elseif not(zG)then else do T6[IG]={n=l6>=IG and l6-IG+0x1 or 0x0,V(F6,IG+1,l6+1)};end;end;if e6==Z6 then else(R)(hG,e6);end;local H6,u6,v6,Q6=A(function()do while true do local e0=(TG[J6]);local n0=e0[0X3];do J6=J6+0X1;end;if n0>=13 then do if n0>=20 then do if not(n0>=0x17)then if n0<0X0015 then(T6)[e0[2]]=T6[e0[0X5]]-T6[e0[4]];else if n0~=22 then do J6=e0[5];end;else T6[e0[0X02]]=true;end;end;else if n0<0x019 then if n0==24 then(T6)[0X03]={};local qP=4;e0=TG[J6];J6=J6+1;(T6)[0X4]=e6[e0[6]];J6=J6+1;J6=J6+0X1;J6=J6+1;do T6[0X5]=T6[0x002];end;local OP=(0x4);do J6=J6+1;end;local JP=(2);if JP~=0 then w6=OP+JP-0x0001;end;local BP,cP=nil,(nil);do if JP==1 then BP,cP=Cd(T6[OP]());else BP,cP=Cd(T6[OP](V(T6,OP+0X1,w6)));end;end;if qP==0X1 then w6=OP-0X01;else if qP~=0 then BP=OP+qP-2;do w6=BP+1;end;else BP=BP+OP-0x001;w6=BP;end;local xk=(0);for mt=OP,BP do xk=xk+0x001;(T6)[mt]=cP[xk];end;end;do J6=J6+0X1;end;J6=J6+0X0001;e0=TG[J6];J6=J6+1;do OP=4;end;local MP=h(function(...)t();for Tx,nx in...do t(true,Tx,nx);end;end);(MP)(T6[OP],T6[OP+1],T6[OP+0x2]);w6=OP;do(T6)[OP]=MP;end;J6=e0[5];else local YL=(e0[0X5]);local iL=T6[YL];for rD=YL+1,e0[0x4]do iL=iL..T6[rD];end;do(T6)[e0[0X2]]=iL;end;end;else do if n0==26 then repeat local Ph,Rh=iG,T6;do if#Ph>0 then local tH=({});do for T7,X7 in l,Ph do for fq,sq in l,X7 do do if not(sq[1]==Rh and sq[0x002]>=0)then else local Wu=(sq[2]);if not(not tH[Wu])then else do(tH)[Wu]={Rh[Wu]};end;end;do sq[0X1]=tH[Wu];end;sq[0x2]=1;end;end;end;end;end;end;end;until true;return;else end;end;end;end;end;else if not(n0<16)then do if not(n0<0X12)then if n0~=19 then T6[e0[0X002]]=e0[0x006];else local B2=(JG[e0[5]]);local D2=(nil);local n2=B2[4];local r2=#n2;if not(r2>0X0)then else do D2={};end;do for bw=1,r2 do local Pw=(n2[bw]);do if Pw[0x1]~=0 then(D2)[bw-1]=cG[Pw[0X2]];else do D2[bw-0X1]={T6,Pw[0X02]};end;end;end;end;end;(H)(iG,D2);end;(T6)[e0[2]]=ed(e6,B2,D2);end;else if n0==17 then(T6)[2]=T6[0];e0=TG[J6];J6=J6+1;T6[3]=e6[e0[6]];J6=J6+0x1;J6=J6+0X0001;J6=J6+1;local Qs=3;(T6)[4]=T6[0X0];do J6=J6+1;end;T6[Qs]=T6[Qs](T6[Qs+0X1]);w6=Qs;J6=J6+1;J6=J6+1;e0=TG[J6];J6=J6+0X1;do if T6[3]~=e0[1]then J6=e0[0X02];end;end;else(T6)[e0[2]]=b(T6[e0[0X5]],T6[e0[0x0004]]);end;end;end;else do if n0<14 then do repeat local dt,wt,ut=iG,T6,(e0[2]);if not(#dt>0)then else local Zp=({});for QD,AD in l,dt do for xu,mu in l,AD do if not(mu[1]==wt and mu[2]>=ut)then else local cs=(mu[0X2]);do if not Zp[cs]then(Zp)[cs]={wt[cs]};end;end;(mu)[0X1]=Zp[cs];(mu)[0x02]=0x1;end;end;end;end;until true;end;else if n0~=0xf then do T6[0X0009]=e6[e0[6]];end;do J6=J6+0X1;end;J6=J6+0X00001;J6=J6+0x00001;T6[0Xa]=T6[8];local Pr=(9);do J6=J6+1;end;local nr=4;local Mr=2;if Mr~=0 then w6=Pr+Mr-0X1;end;local pr,vr=nil,nil;if Mr==1 then pr,vr=Cd(T6[Pr]());else do pr,vr=Cd(T6[Pr](V(T6,Pr+1,w6)));end;end;if nr==0X00001 then w6=Pr-1;else if nr==0 then pr=pr+Pr-1;do w6=pr;end;else pr=Pr+nr-0X2;w6=pr+0x00001;end;local Dd=0x0000;for Ix=Pr,pr do Dd=Dd+1;T6[Ix]=vr[Dd];end;end;J6=J6+1;J6=J6+0X1;e0=TG[J6];do J6=J6+0X001;end;do Pr=0X0009;end;local qr=h(function(...)(t)();for b1,X1 in...do t(true,b1,X1);end;end);qr(T6[Pr],T6[Pr+0x001],T6[Pr+2]);do w6=Pr;end;T6[Pr]=qr;J6=e0[5];else do(T6)[e0[0X2]]={V({},0X001,e0[5])};end;end;end;end;end;end;end;else if not(n0>=6)then if not(n0<0X3)then if n0<0X4 then T6[0X7]=e6[e0[0x00006]];do J6=J6+0X1;end;local nt=7;(T6)[8]=T6[0X6];J6=J6+1;T6[nt]=T6[nt](T6[nt+1]);w6=nt;e0=TG[J6];J6=J6+1;(T6)[8]=e6[e0[6]];e0=TG[J6];J6=J6+1;(T6)[0X08]=T6[8][e0[0X01]];J6=J6+1;do T6[0X8]=T6[8][T6[0x6]];end;J6=J6+1;J6=J6+0x1;e0=TG[J6];do J6=J6+0X01;end;if not T6[0X8]then J6=e0[0X5];end;else do if n0~=0X00005 then T6[0X4]=e6[e0[6]];J6=J6+0x1;do J6=J6+0X0001;end;e0=TG[J6];J6=J6+0x001;T6[0X4]=T6[0X4][e0[1]];J6=J6+0X1;J6=J6+1;J6=J6+1;T6[0x5]=T6[0X3];do e0=TG[J6];end;local af=JG[e0[5]];J6=J6+0X01;local nf,lf=nil,af[0X00004];local of=#lf;if not(of>0X0)then else nf={};do for YS=0X01,of do local PS=(lf[YS]);if PS[0x1]==0 then(nf)[YS-0X00001]={T6,PS[0X02]};else do(nf)[YS-1]=cG[PS[0X2]];end;end;end;end;H(iG,nf);end;local Yf=(0X004);(T6)[6]=ed(e6,af,nf);J6=J6+1;local gf=4;(T6[gf])(T6[gf+0X1],T6[gf+0X00002]);do w6=gf-0x1;end;J6=J6+0X1;J6=J6+1;do J6=J6+0X1;end;T6[4]=T6[3];do J6=J6+0X01;end;repeat local U_,F_=iG,T6;if not(#U_>0x0)then else local vV=({});for XE,yE in l,U_ do do for lc,kc in l,yE do if not(kc[0X1]==F_ and kc[2]>=0)then else local xy=(kc[2]);if not(not vV[xy])then else vV[xy]={F_[xy]};end;do(kc)[0X001]=vV[xy];end;(kc)[2]=1;end;end;end;end;end;until true;do return false,Yf,Yf;end;else for ke=e0[2],e0[5]do do(T6)[ke]=nil;end;end;end;end;end;else do if n0<1 then local Dd=(e0[0x2]);local ZL,VL,xL=T6[Dd]();if not(ZL)then else do T6[Dd+1]=VL;end;T6[Dd+2]=xL;J6=e0[0x5];end;else do if n0~=2 then(T6[0X0000D])[e0[6]]=T6[14];do J6=J6+0X1;end;do T6[0X3][T6[0XC]]=T6[13];end;J6=J6+0X1;repeat local F2,s2=iG,(T6);if not(#F2>0X00000)then else local bu={};for nX,sX in l,F2 do for OB,vB in l,sX do do if vB[0X1]==s2 and vB[0X2]>=0x9 then local qp=(vB[2]);do if not(not bu[qp])then else do(bu)[qp]={s2[qp]};end;end;end;do(vB)[1]=bu[qp];end;do(vB)[0x2]=1;end;end;end;end;end;end;until true;do e0=TG[J6];end;do J6=J6+0x1;end;J6=e0[0X005];else(T6)[0X000E]=e6[e0[6]];do e0=TG[J6];end;do J6=J6+1;end;T6[15]=T6[7][e0[1]];do e0=TG[J6];end;J6=J6+1;do(T6)[15]=T6[15][e0[0x1]];end;J6=J6+0X01;J6=J6+0X1;local z9=0X0000e;J6=J6+1;do(T6)[z9]=T6[z9](T6[z9+0x001]);end;w6=z9;do e0=TG[J6];end;J6=J6+0X1;J6=e0[5];end;end;end;end;end;else if not(n0<0X0009)then do if not(n0<11)then do if n0==0Xc then(T6)[12]=#T6[0X003];e0=TG[J6];J6=J6+1;T6[12]=T6[0X0000C]+e0[1];do J6=J6+0X1;end;(T6)[0X00D]={};e0=TG[J6];J6=J6+0x01;T6[13][e0[0x6]]=T6[7];e0=TG[J6];J6=J6+0X1;(T6[13])[e0[0X6]]=T6[6];J6=J6+0X1;T6[0XE]=T6[7];e0=TG[J6];J6=J6+1;do if not T6[14]then J6=e0[0X5];end;end;else if T6[e0[0X2]]then do J6=e0[5];end;end;end;end;else do if n0==10 then local bf,Zf=e0[2],T6[e0[5]];(T6)[bf+1]=Zf;T6[bf]=Zf[e0[0X1]];else(T6)[3]={V({},1,0X0001)};J6=J6+1;(T6)[4]=T6[0];local ts=((0X1-0x1)*50);J6=J6+0X1;local ls=3;local ws=T6[ls];for A1=0X1,0X00001 do ws[ts+A1]=T6[ls+A1];end;J6=J6+0x001;T6[0X2]=T6[0X3];e0=TG[J6];do J6=J6+1;end;J6=e0[5];end;end;end;end;else if not(n0>=7)then T6[0Xe]=e6[e0[0X06]];J6=J6+0X1;J6=J6+1;e0=TG[J6];J6=J6+1;T6[0X0e]=T6[0x0e][e0[0X1]];J6=J6+0X0001;J6=J6+0X00001;do J6=J6+1;end;do(T6)[0XE]=T6[11]==T6[14];end;e0=TG[J6];do J6=J6+0X01;end;do J6=e0[0X5];end;else do if n0==8 then(T6)[e0[0x2]]=e6[e0[6]];else do(T6[13])[e0[0x0006]]=T6[0xE];end;e0=TG[J6];J6=J6+1;do(T6[13])[e0[6]]=T6[11];end;do e0=TG[J6];end;local QH=(JG[e0[0X005]]);local XH=QH[0X4];J6=J6+0X1;local HH=#XH;local dH=(nil);do if not(HH>0x0000)then else dH={};do for ev=1,HH do local kv=(XH[ev]);if kv[0X1]~=0 then do(dH)[ev-1]=cG[kv[0x02]];end;else dH[ev-1]={T6,kv[0X2]};end;end;end;H(iG,dH);end;end;T6[14]=ed(e6,QH,dH);e0=TG[J6];J6=J6+1;(T6[13])[e0[0X6]]=T6[0xe];e0=TG[J6];J6=J6+1;T6[0xe]=e6[e0[0X0006]];J6=J6+1;J6=J6+1;e0=TG[J6];J6=J6+0X1;do if not T6[0X000E]then J6=e0[5];end;end;end;end;end;end;end;end;end;end;end);if not(H6)then if C(u6)~='\s\116r\in\103'then(E)(u6,0);else do if M(u6,"\097\116\116e\109pt\ \116o \y\i\101\l\100 a\c\114\111s\115\ m\et\097\109\et\104od\/C\037\-\c\097\l\l\ \098\111\117\110d\097\114\y")then return coroutine.yield();end;end;if not(M(u6,'\^\.\-\058\037\d\043\: '))then(E)(u6,0X0000);else E("Luraph Script:"..(YG[J6-0X01]or"(internal)")..": "..x(u6),0);end;end;else if u6 then if Q6~=1 then return T6[v6](V(T6,v6+1,w6));else return T6[v6]();end;elseif not(v6)then else return V(T6,v6,Q6);end;end;end;else hG=function(...)local Le=0X1;local ne=0;local je={};local ae={[0X0002]=je,[0X1]=FG};local Te=(I());local Ue,Fe=Cd(...);Ue=Ue-0X001;for Mq=0,Ue do if not(IG>Mq)then break;else je[Mq]=Fe[Mq+0x1];end;end;local xe=(Te==a and SG or Te);if not OG then Fe=nil;elseif zG then do je[IG]={n=Ue>=IG and Ue-IG+0X01 or 0X0000,V(Fe,IG+1,Ue+0X001)};end;end;if xe~=Te then(R)(hG,xe);end;local Ye,Qe,Ee,be=A(function()while true do local q6=TG[Le];local E6=q6[0X003];Le=Le+0X1;if not(E6>=7)then if E6>=3 then if not(E6<5)then if E6==6 then je[q6[2]]=xe[q6[0X6]];else end;else if E6==4 then(je)[0]=xe[q6[6]];do Le=Le+0X1;end;Le=Le+1;q6=TG[Le];local Dd=0X00000;do Le=Le+0X1;end;local wh=je[0X000];do(je)[Dd+1]=wh;end;(je)[Dd]=wh[q6[0X1]];Le=Le+0X01;do Dd=0;end;(je[Dd])(je[Dd+0X1]);ne=Dd-1;Le=Le+1;Le=Le+1;Le=Le+1;repeat local mH,EH=iG,(je);if not(#mH>0)then else local JH={};for gx,vx in l,mH do for qD,OD in l,vx do if not(OD[1]==EH and OD[2]>=0X000)then else local xX=(OD[2]);if not(not JH[xX])then else JH[xX]={EH[xX]};end;(OD)[1]=JH[xX];OD[2]=0X1;end;end;end;end;until true;return;else local ep=(JG[q6[0X005]]);local Dp=(ep[0X4]);local Kp=nil;local up=(#Dp);if up>0 then do Kp={};end;for LL=0X1,up do local TL=(Dp[LL]);if TL[0X00001]~=0X0 then(Kp)[LL-1]=cG[TL[0X2]];else(Kp)[LL-1]={je,TL[2]};end;end;(H)(iG,Kp);end;je[q6[0X0002]]=ed(xe,ep,Kp);end;end;else do if E6<1 then(je)[q6[2]]=N(je[q6[5]],je[q6[4]]);else if E6==0X2 then je[q6[0X02]]=#je[q6[0x5]];else for kE=q6[2],q6[5]do(je)[kE]=nil;end;end;end;end;end;else if E6>=11 then if E6>=0X0000D then do if E6~=14 then je[q6[2]]={V({},0X1,q6[5])};else je[q6[0X0002]][je[q6[5]]]=je[q6[4]];end;end;else if E6~=12 then Le=q6[5];else do(je)[q6[0X002]]=q6[6];end;end;end;else if not(E6<9)then do if E6~=0X000A then local f7=q6[5];local D7=(je[f7]);for mC=f7+0x1,q6[4]do D7=D7..je[mC];end;je[q6[0X2]]=D7;else(je)[q6[0X0002]]=je[q6[0X00005]]*je[q6[0x4]];end;end;else if E6==0X8 then(je)[q6[0X2]]=je[q6[0X5]][je[q6[0X4]]];else je[q6[2]]=b(je[q6[0x00005]],je[q6[0x004]]);end;end;end;end;end;end);if Ye then if Qe then if be==1 then return je[Ee]();else do return je[Ee](V(je,Ee+0X1,ne));end;end;elseif not(Ee)then else do return V(je,Ee,be);end;end;else if C(Qe)~="string"then(E)(Qe,0X0000);else if not(M(Qe,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(M(Qe,'\^.-\058%\d\+\:\032'))then(E)(Qe,0);else E('\L\117ra\p\104 \083\c\114\i\112\116:'..(YG[Le-0X1]or"(internal)")..": "..x(Qe),0X000);end;end;end;end;end;end;end;end;else do if not(lG>=41)then if not(lG<0X27)then if lG==40 then hG=function(...)local bc=(1);local qc=({});local Ac=(I());local kc={[0X0002]=qc,[0X1]=FG};local mc,lc=Cd(...);mc=mc-0x1;local rc=((Ac==a and SG or Ac));for CZ=0,mc do do if IG>CZ then do(qc)[CZ]=lc[CZ+0x1];end;else break;end;end;end;do if not OG then lc=nil;elseif not(zG)then else qc[IG]={n=mc>=IG and mc-IG+1 or 0,V(lc,IG+0X01,mc+0X1)};end;end;local hc=0X00;do if rc==Ac then else R(hG,rc);end;end;local vc,xc,gc,Oc=A(function()do while true do local JO=TG[bc];local bO=(JO[0x03]);bc=bc+1;if not(bO>=16)then do if not(bO>=8)then do if bO<4 then if not(bO>=0X0002)then if bO~=0X00001 then local Es=JG[JO[5]];local Qs=Es[4];local bs=(nil);local ps=#Qs;if not(ps>0)then else bs={};do for Bk=0x1,ps do local sk=Qs[Bk];if sk[1]==0X0 then do(bs)[Bk-1]={qc,sk[0X2]};end;else bs[Bk-0X00001]=cG[sk[0X2]];end;end;end;H(iG,bs);end;qc[JO[0X0002]]=ed(rc,Es,bs);else(qc)[7]=qc[5][JO[0X01]];local Pm=(7);JO=TG[bc];bc=bc+0X1;local Dm=qc[7];(qc)[Pm+0x00001]=Dm;qc[Pm]=Dm[JO[1]];do bc=bc+1;end;Pm=0x7;(qc)[Pm]=qc[Pm](qc[Pm+0x00001]);hc=Pm;bc=bc+0X1;bc=bc+1;JO=TG[bc];do bc=bc+1;end;Pm=0x0007;Dm=qc[0X7];qc[Pm+1]=Dm;(qc)[Pm]=Dm[JO[0X001]];JO=TG[bc];bc=bc+1;do(qc)[0X00009]=JO[6];end;bc=bc+1;Pm=0x00007;(qc)[Pm]=qc[Pm](qc[Pm+0x00001],qc[Pm+2]);hc=Pm;do JO=TG[bc];end;bc=bc+0x00001;do if not(not qc[7])then else bc=JO[5];end;end;end;else if bO==0X3 then local LS=JO[2];local GS,qS,aS=qc[LS]();if not(GS)then else(qc)[LS+0X1]=qS;qc[LS+2]=aS;bc=JO[5];end;else(qc)[JO[2]]=qc[JO[5]]-qc[JO[0X4]];end;end;else if bO>=0X6 then if bO==0x7 then qc[JO[2]]={V({},1,JO[0X5])};else qc[0X3]=rc[JO[6]];bc=bc+0X00001;bc=bc+0X1;JO=TG[bc];do bc=bc+1;end;(qc)[0X004]=rc[JO[0x6]];bc=bc+1;local wq,dq=0X2,4;bc=bc+0X1;JO=TG[bc];bc=bc+0X1;qc[4]=qc[4][JO[1]];do bc=bc+0X00001;end;do bc=bc+0X1;end;do JO=TG[bc];end;bc=bc+0x1;local kq=qc[4];(qc)[dq+0x0001]=kq;(qc)[dq]=kq[JO[1]];bc=bc+0X00001;dq=4;local Vq=0X0;if wq~=0 then hc=dq+wq-0X0001;end;local Eq,jq=nil,(nil);do if wq~=0x1 then do Eq,jq=Cd(qc[dq](V(qc,dq+1,hc)));end;else do Eq,jq=Cd(qc[dq]());end;end;end;do if Vq~=1 then if Vq==0 then Eq=Eq+dq-1;hc=Eq;else do Eq=dq+Vq-2;end;hc=Eq+1;end;local eR=(0X0);for Ic=dq,Eq do do eR=eR+1;end;(qc)[Ic]=jq[eR];end;else do hc=dq-1;end;end;end;bc=bc+0X00001;dq=0x3;wq=0x00;Vq=4;if wq~=0 then hc=dq+wq-1;end;Eq,jq=nil;if wq==1 then Eq,jq=Cd(qc[dq]());else Eq,jq=Cd(qc[dq](V(qc,dq+0x001,hc)));end;do if Vq~=1 then if Vq~=0x0 then Eq=dq+Vq-0X002;hc=Eq+1;else Eq=Eq+dq-0x001;do hc=Eq;end;end;local d2=0;for A5=dq,Eq do do d2=d2+0X1;end;do qc[A5]=jq[d2];end;end;else hc=dq-0X001;end;end;JO=TG[bc];do bc=bc+0x0001;end;dq=0x3;local Xq=(h(function(...)(t)();for TZ,VZ in...do(t)(true,TZ,VZ);end;end));Xq(qc[dq],qc[dq+1],qc[dq+2]);do hc=dq;end;(qc)[dq]=Xq;bc=JO[0X00005];end;else do if bO~=0x5 then qc[0]=rc[JO[6]];JO=TG[bc];bc=bc+1;(qc)[0]=qc[0][JO[0X1]];JO=TG[bc];do bc=bc+0X1;end;do if not(not qc[0X000])then else bc=JO[5];end;end;else qc[0X7]=qc[5][JO[0X1]];local GG=0X7;JO=TG[bc];local bG=2;do bc=bc+0X1;end;local WG=(qc[0X7]);(qc)[GG+0X1]=WG;(qc)[GG]=WG[JO[1]];bc=bc+0X0001;do GG=0x007;end;qc[GG]=qc[GG](qc[GG+0X1]);do hc=GG;end;bc=bc+0X00001;do bc=bc+0x001;end;JO=TG[bc];bc=bc+1;do GG=7;end;WG=qc[7];do qc[GG+1]=WG;end;do(qc)[GG]=WG[JO[0x0001]];end;do JO=TG[bc];end;bc=bc+0x00001;GG=0X9;WG=qc[1];(qc)[GG+0X1]=WG;qc[GG]=WG[JO[0X00001]];do bc=bc+0x1;end;GG=9;local wG=0;do if bG==0X000 then else hc=GG+bG-0X00001;end;end;local jG,HG=nil,nil;if bG~=0X0001 then jG,HG=Cd(qc[GG](V(qc,GG+1,hc)));else jG,HG=Cd(qc[GG]());end;do if wG~=0X1 then do if wG==0x00 then jG=jG+GG-1;hc=jG;else jG=GG+wG-2;hc=jG+1;end;end;local iC=(0);for aB=GG,jG do iC=iC+0X0001;do(qc)[aB]=HG[iC];end;end;else do hc=GG-0x1;end;end;end;do bc=bc+0X0001;end;GG=0x7;qc[GG]=qc[GG](V(qc,GG+1,hc));hc=GG;do JO=TG[bc];end;do bc=bc+1;end;if not(not qc[0X7])then else bc=JO[0X5];end;end;end;end;end;end;else if bO<12 then if bO>=0XA then if bO~=11 then do(qc)[JO[2]]=rc[JO[6]];end;else end;else if bO==9 then(qc)[JO[2]]=#qc[JO[0x5]];else qc[0X00006]=rc[JO[0X6]];JO=TG[bc];do bc=bc+1;end;do(qc)[0X7]=JO[0X6];end;JO=TG[bc];bc=bc+0X1;do(qc)[8]=qc[5][JO[0X1]];end;bc=bc+1;bc=bc+1;bc=bc+1;local Dj=0X06;qc[Dj](qc[Dj+0X1],qc[Dj+0X2]);do hc=Dj-1;end;JO=TG[bc];bc=bc+0X1;bc=JO[0X05];end;end;else do if bO>=14 then do if bO~=15 then(qc)[0X0006]=qc[0X5][JO[1]];local df=6;JO=TG[bc];bc=bc+1;local Tf=(qc[0X6]);(qc)[df+1]=Tf;qc[df]=Tf[JO[1]];bc=bc+0X1;df=6;qc[df]=qc[df](qc[df+1]);hc=df;JO=TG[bc];bc=bc+0x1;qc[7]=rc[JO[6]];bc=bc+0X1;(qc)[8]=qc[0X1];do bc=bc+1;end;df=0x7;qc[df]=qc[df](qc[df+1]);hc=df;JO=TG[bc];bc=bc+0x1;df=7;Tf=qc[7];qc[df+1]=Tf;do(qc)[df]=Tf[JO[1]];end;do bc=bc+0X1;end;df=7;(qc)[df]=qc[df](qc[df+0X1]);do hc=df;end;bc=bc+0X001;do bc=bc+0X1;end;JO=TG[bc];do bc=bc+0X1;end;if qc[0X6]==qc[7]then else bc=JO[0X02];end;else qc[JO[2]]=qc[JO[5]]<=qc[JO[4]];end;end;else if bO~=13 then if qc[JO[0X5]]==JO[0X1]then bc=JO[0X2];end;else repeat local Jr,vr=iG,(qc);if#Jr>0 then local Es=({});for SF,bF in l,Jr do for wg,mg in l,bF do if not(mg[0X00001]==vr and mg[0X2]>=0X0)then else local bL=mg[0x2];do if not Es[bL]then do Es[bL]={vr[bL]};end;end;end;(mg)[0x001]=Es[bL];(mg)[0x0002]=0x1;end;end;end;end;until true;return;end;end;end;end;end;end;else do if bO>=0X0018 then if bO<28 then if bO<0x00001a then if bO~=0X19 then for T8=JO[2],JO[5]do do(qc)[T8]=nil;end;end;else qc[0]=rc[JO[6]];bc=bc+1;bc=bc+0X1;do JO=TG[bc];end;bc=bc+0X0001;(qc)[0]=qc[0X00000][JO[0X0001]];do JO=TG[bc];end;bc=bc+0x001;do qc[0]=qc[0X0000][JO[0X1]];end;JO=TG[bc];bc=bc+0x1;if qc[0]==JO[0x1]then else do bc=JO[2];end;end;end;else if bO~=27 then local QH=(0);local pH=2;do if pH~=0 then hc=QH+pH-0X1;end;end;local FH,JH,PH=0X4,nil,nil;if pH==0X1 then JH,PH=Cd(qc[QH]());else JH,PH=Cd(qc[QH](V(qc,QH+0X1,hc)));end;if FH~=0X00001 then if FH~=0 then JH=QH+FH-2;hc=JH+0x1;else JH=JH+QH-1;hc=JH;end;local EJ=0;for VU=QH,JH do EJ=EJ+0X001;do(qc)[VU]=PH[EJ];end;end;else hc=QH-0X1;end;bc=bc+1;bc=bc+1;JO=TG[bc];bc=bc+0X1;QH=0X00000;local rH=h(function(...)(t)();for y1,R1 in...do(t)(true,y1,R1);end;end);(rH)(qc[QH],qc[QH+1],qc[QH+2]);hc=QH;(qc)[QH]=rH;bc=JO[0x5];else do(qc)[0X0]=rc[JO[6]];end;do JO=TG[bc];end;bc=bc+0X1;(qc)[0]=qc[0x0][JO[0X01]];JO=TG[bc];bc=bc+1;if not(not qc[0])then else bc=JO[0X05];end;end;end;else do if not(bO>=30)then if bO==0X1D then do qc[JO[0x002]]=qc[JO[0x0005]]>qc[JO[4]];end;else do if qc[JO[0X00002]]then do bc=JO[5];end;end;end;end;else if not(bO>=31)then bc=JO[5];else if bO==0x20 then if not(qc[JO[0X00005]]<=qc[JO[0x4]])then bc=JO[0x2];end;else(qc)[0]=rc[JO[6]];do bc=bc+0X1;end;bc=bc+1;JO=TG[bc];bc=bc+0X1;(qc)[1]=rc[JO[0X06]];JO=TG[bc];bc=bc+0x01;(qc)[0x1]=qc[0X1][JO[0X0001]];JO=TG[bc];bc=bc+1;do if qc[0X001]then bc=JO[0x0005];end;end;end;end;end;end;end;else do if bO>=0X14 then if bO>=0X16 then if bO==23 then local gI,JI=0X02,(0X003);if gI~=0 then hc=JI+gI-1;end;local HI,vI,NI=nil,nil,4;if gI~=1 then do HI,vI=Cd(qc[JI](V(qc,JI+0X0001,hc)));end;else HI,vI=Cd(qc[JI]());end;do if NI~=1 then do if NI~=0X0 then do HI=JI+NI-0X0002;end;hc=HI+1;else do HI=HI+JI-1;end;do hc=HI;end;end;end;local n8=(0);do for PG=JI,HI do do n8=n8+0X1;end;(qc)[PG]=vI[n8];end;end;else hc=JI-0X00001;end;end;bc=bc+0X001;bc=bc+1;JO=TG[bc];bc=bc+1;do JI=3;end;local kI=h(function(...)(t)();for x8,k8 in...do t(true,x8,k8);end;end);(kI)(qc[JI],qc[JI+1],qc[JI+0X00002]);hc=JI;(qc)[JI]=kI;bc=JO[5];else(qc)[JO[0X2]]={};end;else do if bO~=21 then do(qc)[6]=rc[JO[0x06]];end;bc=bc+0X1;bc=bc+0X0001;do bc=bc+0X1;end;(qc)[0X7]=qc[0X05];do bc=bc+0x1;end;local iH=(6);(qc[iH])(qc[iH+0x00001]);hc=iH-1;bc=bc+1;qc[0x0006]=true;JO=TG[bc];bc=bc+1;rc[JO[6]]=qc[0x6];local AH=(qc[5]);do JO=TG[bc];end;do bc=bc+0X1;end;do iH=6;end;qc[iH+1]=AH;(qc)[iH]=AH[JO[1]];do JO=TG[bc];end;do bc=bc+0X1;end;qc[8]=JO[0x006];do bc=bc+1;end;iH=0X06;(qc)[iH]=qc[iH](qc[iH+1],qc[iH+0X2]);hc=iH;JO=TG[bc];bc=bc+1;do iH=6;end;do AH=qc[0X6];end;(qc)[iH+1]=AH;do qc[iH]=AH[JO[0x1]];end;bc=bc+1;iH=6;(qc[iH])(qc[iH+1]);do hc=iH-1;end;bc=bc+0X1;bc=bc+0X1;do JO=TG[bc];end;do bc=bc+0X0001;end;bc=JO[5];else if not(not qc[JO[2]])then else bc=JO[5];end;end;end;end;else if not(bO>=0X012)then if bO==17 then do qc[JO[2]]=JO[0X0006];end;else do qc[3]=rc[JO[6]];end;do JO=TG[bc];end;local fL=(0x0004);bc=bc+1;do(qc)[0x4]=rc[JO[6]];end;do bc=bc+0x0001;end;do bc=bc+0X1;end;JO=TG[bc];do bc=bc+1;end;qc[0X00005]=JO[6];do bc=bc+1;end;do qc[fL]=qc[fL](qc[fL+1]);end;hc=fL;JO=TG[bc];bc=bc+0X1;do if qc[0X4]then bc=JO[5];end;end;end;else if bO~=19 then(qc)[JO[0X2]]=qc[JO[5]][JO[1]];else(qc)[0]=rc[JO[0x6]];bc=bc+0X1;do bc=bc+0X0001;end;JO=TG[bc];do bc=bc+0X001;end;(qc)[1]=JO[6];bc=bc+0X1;local vB=(0);do qc[vB]=qc[vB](qc[vB+1]);end;do hc=vB;end;JO=TG[bc];bc=bc+0x1;if not(not qc[0X0])then else bc=JO[5];end;end;end;end;end;end;end;end;end;end;end);if not(vc)then if C(xc)~="s\116\114\ing"then(E)(xc,0);else do if M(xc,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if M(xc,"^.-:%d+: ")then(E)("Lu\114a\112\104\ S\099r\i\112t:"..(YG[bc-0X001]or"(internal)")..'\:\ '..x(xc),0);else E(xc,0);end;end;else if xc then if Oc~=1 then return qc[gc](V(qc,gc+0X1,hc));else return qc[gc]();end;elseif not(gc)then else return V(qc,gc,Oc);end;end;end;else hG=function(...)local uO=0X0;local vO=({});local zO=(I());local NO=((zO==a and SG or zO));local sO={[0X0002]=vO,[0X1]=FG};local IO,TO=Cd(...);local HO=(1);IO=IO-0x1;for iQ=0,IO do if IG>iQ then vO[iQ]=TO[iQ+0x1];else do break;end;end;end;if not OG then do TO=nil;end;elseif not(zG)then else(vO)[IG]={n=IO>=IG and IO-IG+1 or 0,V(TO,IG+0X1,IO+0x01)};end;if NO~=zO then R(hG,NO);end;local bO,YO,UO,QO=A(function()while true do local T6=TG[HO];local t6=T6[3];do HO=HO+0X0001;end;do if not(t6<0X19)then if not(t6<38)then if not(t6>=0x2c)then if not(t6<41)then if t6>=42 then if t6==43 then if vO[T6[0X0005]]~=T6[0X1]then HO=T6[0X2];end;else(vO)[0X5]=NO[T6[0x6]];T6=TG[HO];do HO=HO+1;end;vO[5]=vO[5][T6[0x0001]];T6=TG[HO];do HO=HO+1;end;if vO[0X0005]then HO=T6[5];end;end;else(vO)[3]=NO[T6[6]];T6=TG[HO];HO=HO+0x1;vO[0X3]=vO[3][T6[1]];do T6=TG[HO];end;do HO=HO+1;end;if not(vO[0X3])then else HO=T6[5];end;end;else if not(t6<39)then do if t6==0x000028 then do(NO)[T6[0X6]]=vO[3];end;T6=TG[HO];do HO=HO+1;end;vO[0x00003]=NO[T6[0X06]];HO=HO+1;HO=HO+0X01;T6=TG[HO];do HO=HO+0x1;end;if vO[3]then do HO=T6[0X5];end;end;else vO[0X3]=NO[T6[6]];T6=TG[HO];HO=HO+0X001;(vO)[4]=T6[0X6];HO=HO+1;(vO)[0X5]=true;HO=HO+1;local ug=(3);vO[ug]=vO[ug](vO[ug+1],vO[ug+2]);uO=ug;HO=HO+0X0001;vO[2]=vO[3];do T6=TG[HO];end;HO=HO+0X1;do vO[3]=vO[0X2]==T6[0X001];end;T6=TG[HO];HO=HO+1;if not(vO[0x03])then else HO=T6[5];end;end;end;else local n3=(T6[2]);local m3,L3=vO[n3]();if m3 then do for Zt=0X01,T6[4]do vO[n3+Zt]=L3[Zt];end;end;HO=T6[5];end;end;end;else if not(t6<47)then if t6>=49 then if t6~=50 then local z0=JG[T6[5]];local R0=(z0[4]);local h0=(nil);local H0=(#R0);if H0>0X0 then do h0={};end;for E_=0x1,H0 do local s_=(R0[E_]);if s_[1]==0X0 then do h0[E_-0x1]={vO,s_[0X2]};end;else(h0)[E_-1]=cG[s_[0X002]];end;end;(H)(iG,h0);end;vO[T6[2]]=ed(NO,z0,h0);else(vO)[3]=NO[T6[0X6]];HO=HO+0X1;HO=HO+1;T6=TG[HO];HO=HO+0X0001;do if not(vO[3])then else HO=T6[0X5];end;end;end;else if t6~=0X30 then local nU=cG[0X00001];do vO[0X004]=nU[1][nU[0X2]];end;T6=TG[HO];HO=HO+0x0001;(vO)[4]=vO[4][T6[0X00001]];HO=HO+0x1;do vO[5]=vO[0X0003];end;HO=HO+0X1;nU=cG[0x0];vO[6]=nU[0x1][nU[0x2]];local ZU=nil;T6=TG[HO];HO=HO+1;local kU=JG[T6[5]];local NU=(kU[0X4]);local oU,AU=#NU,0X4;if not(oU>0x0)then else ZU={};for jk=1,oU do local pk=(NU[jk]);if pk[1]==0 then(ZU)[jk-0x1]={vO,pk[2]};else(ZU)[jk-1]=cG[pk[0x2]];end;end;(H)(iG,ZU);end;vO[0x7]=ed(NO,kU,ZU);HO=HO+1;uO=AU+4-0X0001;(vO[AU])(V(vO,AU+0X1,uO));uO=AU-0X1;T6=TG[HO];do HO=HO+1;end;HO=T6[0X5];else(vO)[3]=NO[T6[6]];T6=TG[HO];HO=HO+1;(vO)[3]=vO[0X3][T6[1]];HO=HO+1;do HO=HO+1;end;T6=TG[HO];do HO=HO+0x1;end;if not(vO[0X0003])then else HO=T6[5];end;end;end;else if not(t6>=0X00002d)then(vO)[3]=NO[T6[6]];do HO=HO+1;end;HO=HO+1;T6=TG[HO];do HO=HO+1;end;(vO)[0X00003]=vO[0X3][T6[0X1]];HO=HO+1;HO=HO+1;T6=TG[HO];HO=HO+1;do if not(not vO[0X3])then else do HO=T6[0X5];end;end;end;else if t6==46 then for zY=T6[0x2],T6[5]do(vO)[zY]=nil;end;else vO[3]=NO[T6[0X0006]];do T6=TG[HO];end;HO=HO+0X00001;vO[3]=vO[0X03][T6[1]];HO=HO+0X1;HO=HO+0x0001;T6=TG[HO];HO=HO+0X01;if not(vO[3])then else HO=T6[5];end;end;end;end;end;else if t6>=31 then do if t6>=34 then if t6>=0x00024 then if t6~=0X25 then repeat local br,nr=iG,vO;do if#br>0X0 then local Dd=({});for Q4,f4 in l,br do for YV,HV in l,f4 do if HV[1]==nr and HV[2]>=0 then local Yk=(HV[2]);if not Dd[Yk]then Dd[Yk]={nr[Yk]};end;HV[0X0001]=Dd[Yk];(HV)[2]=0X1;end;end;end;end;end;until true;return;else vO[3]=NO[T6[0X6]];HO=HO+0X1;do HO=HO+0x1;end;do T6=TG[HO];end;do HO=HO+0X1;end;vO[3]=vO[0x00003][T6[0X1]];do HO=HO+1;end;HO=HO+0x1;T6=TG[HO];HO=HO+1;if not vO[3]then HO=T6[0X00005];end;end;else do if t6~=35 then vO[3]=NO[T6[6]];local nP=3;do T6=TG[HO];end;do HO=HO+1;end;(vO)[4]=T6[0X006];HO=HO+0X1;do vO[nP]=vO[nP](vO[nP+0X01]);end;do uO=nP;end;do T6=TG[HO];end;HO=HO+0X1;if not vO[3]then HO=T6[0X05];end;else(vO)[T6[0X2]]=NO[T6[0X6]];end;end;end;else do if t6<0X020 then(vO)[T6[0X2]]=sO[T6[5]];else do if t6~=0X21 then do(vO)[5]=NO[T6[0X006]];end;HO=HO+0X1;do HO=HO+0X1;end;T6=TG[HO];HO=HO+1;(vO)[5]=vO[5][T6[0X1]];do HO=HO+1;end;HO=HO+0X001;T6=TG[HO];HO=HO+1;if not(not vO[0x05])then else HO=T6[5];end;else do vO[0X3]=NO[T6[0X06]];end;do HO=HO+0X1;end;HO=HO+0X1;do T6=TG[HO];end;HO=HO+0X1;if not(not vO[0X0003])then else HO=T6[5];end;end;end;end;end;end;end;else if not(t6<0X0001C)then do if t6<29 then vO[0X3]=NO[T6[0X6]];T6=TG[HO];do HO=HO+1;end;(vO)[3]=vO[3][T6[0X01]];do HO=HO+1;end;HO=HO+1;T6=TG[HO];HO=HO+1;if not vO[0x3]then HO=T6[5];end;else if t6~=30 then vO[4]=NO[T6[0X6]];T6=TG[HO];HO=HO+0x1;(vO)[0X0004]=vO[0X4][T6[1]];HO=HO+1;HO=HO+0x01;do T6=TG[HO];end;do HO=HO+1;end;vO[0x4]=vO[0x4][T6[0X1]];do T6=TG[HO];end;HO=HO+0X01;if not(T6[6]<vO[4])then HO=T6[2];end;else vO[0x002]=vO[0x1];T6=TG[HO];HO=HO+1;(vO)[0X3]=vO[0X0001]==T6[0X01];do T6=TG[HO];end;HO=HO+0X1;if vO[3]then do HO=T6[0X005];end;end;end;end;end;else if t6<26 then(vO)[4]=NO[T6[6]];HO=HO+0X1;HO=HO+0X001;T6=TG[HO];HO=HO+0X001;local KB=(4);do vO[5]=T6[0x0006];end;HO=HO+1;(vO)[0X0006]=true;HO=HO+0X001;do vO[KB]=vO[KB](vO[KB+1],vO[KB+0X2]);end;do uO=KB;end;HO=HO+1;vO[2]=vO[0X4];T6=TG[HO];do HO=HO+0X01;end;HO=T6[0X00005];else if t6~=0X1b then local ZO=(T6[2]);local RO,dO=vO[ZO]();if RO then HO=T6[0X00005];vO[ZO+3]=dO;end;else local Rc=(cG[0X01]);vO[4]=Rc[1][Rc[2]];T6=TG[HO];HO=HO+1;local Sc=4;vO[4]=vO[4][T6[0x1]];do HO=HO+1;end;HO=HO+1;do HO=HO+1;end;do(vO)[0x5]=vO[3];end;HO=HO+1;(vO)[Sc]=vO[Sc](vO[Sc+1]);do uO=Sc;end;T6=TG[HO];HO=HO+0X1;if not(not vO[4])then else HO=T6[5];end;end;end;end;end;end;else if t6<0x0000c then do if not(t6>=0X6)then if t6>=3 then if not(t6>=4)then vO[0X3]=NO[T6[6]];do T6=TG[HO];end;HO=HO+1;do(vO)[3]=vO[0x00003][T6[1]];end;HO=HO+0X1;HO=HO+0x1;T6=TG[HO];HO=HO+1;if vO[3]then HO=T6[0X5];end;else do if t6==5 then vO[T6[2]]=vO[T6[0x00005]]==T6[0X00001];else do(NO)[T6[0X0006]]=vO[3];end;HO=HO+1;local h4=cG[0];do vO[3]=h4[1][h4[2]];end;local B4=3;HO=HO+0X1;HO=HO+0X01;do T6=TG[HO];end;HO=HO+1;local G4=(vO[3]);(vO)[B4+0X1]=G4;do vO[B4]=G4[T6[1]];end;do HO=HO+0X00001;end;B4=3;vO[B4]=vO[B4](vO[B4+0X0001]);uO=B4;HO=HO+0X00001;do HO=HO+0x1;end;do T6=TG[HO];end;HO=HO+1;if not vO[0X3]then HO=T6[0X5];end;end;end;end;else if not(t6>=0X1)then vO[0X003]=NO[T6[6]];HO=HO+0X01;HO=HO+0x01;local RG=3;T6=TG[HO];do HO=HO+1;end;local CG=(JG[T6[0x5]]);local jG=nil;local KG=CG[0x4];local LG=#KG;if LG>0x0 then jG={};do for sW=1,LG do local bW=(KG[sW]);if bW[1]==0x0 then do jG[sW-1]={vO,bW[0X2]};end;else jG[sW-1]=cG[bW[0X02]];end;end;end;(H)(iG,jG);end;do(vO)[4]=ed(NO,CG,jG);end;do HO=HO+1;end;(vO[RG])(vO[RG+0X1]);uO=RG-0x1;HO=HO+0X1;HO=HO+1;T6=TG[HO];HO=HO+1;do HO=T6[5];end;else if t6~=0X2 then vO[4]=NO[T6[0X06]];T6=TG[HO];HO=HO+1;(vO)[0X0005]=T6[6];HO=HO+1;local O5=(4);vO[O5]=vO[O5](vO[O5+1]);uO=O5;T6=TG[HO];do HO=HO+1;end;if not(not vO[0X4])then else do HO=T6[5];end;end;else if not(not vO[T6[0X2]])then else HO=T6[0X5];end;end;end;end;else if not(t6<0X9)then do if t6>=0xa then if t6~=0X0b then vO[3]=NO[T6[6]];do HO=HO+1;end;HO=HO+1;T6=TG[HO];HO=HO+1;do if not(not vO[3])then else HO=T6[5];end;end;else if not(vO[T6[2]])then else HO=T6[0X5];end;end;else(vO)[0X00003]=NO[T6[0X6]];T6=TG[HO];HO=HO+0X001;do vO[3]=vO[3][T6[1]];end;T6=TG[HO];HO=HO+0x1;if vO[0X3]then HO=T6[0X05];end;end;end;else if not(t6>=0X00007)then do(vO)[T6[2]]=vO[T6[5]]>=vO[T6[4]];end;else do if t6~=8 then if vO[T6[5]]~=T6[0x1]then else HO=T6[2];end;else do(vO)[T6[2]]=vO[T6[5]]==vO[T6[0X4]];end;end;end;end;end;end;end;else do if t6>=0X12 then if not(t6>=0X15)then if t6>=19 then do if t6~=20 then do(vO)[3]=NO[T6[6]];end;T6=TG[HO];HO=HO+1;do vO[3]=vO[0x3][T6[1]];end;HO=HO+0X1;do HO=HO+0X1;end;T6=TG[HO];do HO=HO+1;end;if not(vO[0X3])then else HO=T6[5];end;else(vO)[0X03]=NO[T6[0X6]];T6=TG[HO];HO=HO+0x1;(vO)[0x00003]=vO[0X00003][T6[1]];HO=HO+1;do HO=HO+1;end;T6=TG[HO];HO=HO+1;do if not(vO[0X3])then else HO=T6[0X5];end;end;end;end;else vO[0X2]=NO[T6[6]];HO=HO+0X01;HO=HO+0X1;HO=HO+0X001;do uO=2;end;(vO[uO])();uO=uO-0X1;T6=TG[HO];HO=HO+1;vO[2]=NO[T6[0x6]];HO=HO+0X1;do HO=HO+1;end;T6=TG[HO];HO=HO+1;(vO[2])[T6[0X6]]=T6[1];do T6=TG[HO];end;HO=HO+0X1;do vO[0X0002]=NO[T6[0x06]];end;T6=TG[HO];HO=HO+1;(vO[2])[T6[0X6]]=T6[0X001];HO=HO+1;repeat local er,hr=iG,(vO);if#er>0 then local Op={};for dv,Tv in l,er do for Re,Xe in l,Tv do if not(Xe[0X0001]==hr and Xe[2]>=0x0)then else local ib=Xe[2];if not(not Op[ib])then else(Op)[ib]={hr[ib]};end;Xe[1]=Op[ib];(Xe)[2]=1;end;end;end;end;until true;do return;end;end;else if not(t6<23)then if t6~=0X18 then vO[4]=NO[T6[0X6]];do HO=HO+1;end;local xz=0X4;do HO=HO+0X001;end;T6=TG[HO];HO=HO+1;vO[0x5]=T6[6];HO=HO+0X0001;(vO[xz])(vO[xz+1]);uO=xz-1;do T6=TG[HO];end;HO=HO+1;HO=T6[5];else end;else do if t6~=0X16 then HO=T6[0X0005];else repeat local Bx,Qx,bx=iG,vO,(T6[2]);do if#Bx>0X00000 then local Wm=({});for lZ,mZ in l,Bx do for KN,MN in l,mZ do if not(MN[0x1]==Qx and MN[2]>=bx)then else local tl=(MN[2]);if not(not Wm[tl])then else Wm[tl]={Qx[tl]};end;MN[0x1]=Wm[tl];MN[0X2]=1;end;end;end;end;end;until true;end;end;end;end;else if t6<15 then if not(t6>=0XD)then do(vO)[T6[2]]=T6[0X0006];end;else if t6==0X000e then do vO[0X0]=NO[T6[6]];end;HO=HO+0X0001;do HO=HO+1;end;T6=TG[HO];HO=HO+0X0001;do(vO)[0X1]=NO[T6[6]];end;T6=TG[HO];do HO=HO+1;end;vO[0X2]=T6[0x6];HO=HO+0x0001;do(vO)[3]=true;end;HO=HO+1;local wc=0X3;local kc,Dd=4,0x0;if kc==0 then else do uO=Dd+kc-0X1;end;end;local Cc,Gc=nil,nil;do if kc~=0X1 then do Cc,Gc=Cd(vO[Dd](V(vO,Dd+1,uO)));end;else Cc,Gc=Cd(vO[Dd]());end;end;if wc==0X1 then uO=Dd-0X1;else if wc~=0x0 then do Cc=Dd+wc-2;end;uO=Cc+1;else Cc=Cc+Dd-1;uO=Cc;end;local c0=0;do for Pf=Dd,Cc do c0=c0+1;(vO)[Pf]=Gc[c0];end;end;end;HO=HO+1;HO=HO+1;T6=TG[HO];do HO=HO+0x01;end;if vO[1]~=T6[0x01]then else HO=T6[0X02];end;else vO[T6[2]]={V({},1,T6[5])};end;end;else if t6>=0x10 then do if t6~=17 then vO[0X00003]=NO[T6[6]];local sC=3;do HO=HO+0X001;end;do HO=HO+1;end;T6=TG[HO];do HO=HO+1;end;(vO)[0X4]=T6[6];HO=HO+1;(vO)[sC]=vO[sC](vO[sC+1]);uO=sC;HO=HO+0X0001;HO=HO+1;T6=TG[HO];HO=HO+1;vO[0X0004]=NO[T6[0X6]];T6=TG[HO];HO=HO+1;do(vO)[0x4]=vO[0X4][T6[1]];end;do T6=TG[HO];end;HO=HO+1;vO[0x4]=vO[4][T6[0x1]];HO=HO+0X0001;HO=HO+1;T6=TG[HO];HO=HO+0X001;if not(not(T6[6]<vO[0x04]))then else HO=T6[2];end;else vO[0x00004]=NO[T6[6]];T6=TG[HO];HO=HO+1;(vO)[0X5]=T6[0X06];local B5=4;HO=HO+0x1;vO[B5](vO[B5+0X01]);do uO=B5-1;end;T6=TG[HO];HO=HO+0x001;HO=T6[5];end;end;else vO[0x03]=NO[T6[0X006]];HO=HO+1;HO=HO+1;T6=TG[HO];HO=HO+0X1;(vO)[3]=vO[0X3][T6[1]];do T6=TG[HO];end;do HO=HO+0X1;end;do if not(not vO[0X0003])then else HO=T6[5];end;end;end;end;end;end;end;end;end;end;end);if not(bO)then if C(YO)~="\115tr\in\103"then(E)(YO,0);else if M(YO,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(M(YO,"^.-:%d+: "))then E(YO,0);else(E)("Luraph Script:"..(YG[HO-0X1]or'\(\i\110te\114nal\)')..": "..x(YO),0X0000);end;end;else if YO then if QO~=0X1 then return vO[UO](V(vO,UO+1,uO));else return vO[UO]();end;elseif not(UO)then else return V(vO,UO,QO);end;end;end;end;else if lG~=0X26 then do hG=function(...)local Vo=0X1;local io=({});local lo=I();local No={[0X0002]=io,[0X1]=FG};local Uo,vo=Cd(...);Uo=Uo-1;for A2=0X0,Uo do do if not(IG>A2)then break;else(io)[A2]=vo[A2+1];end;end;end;local jo=(lo==a and SG or lo);if not OG then vo=nil;elseif not(zG)then else io[IG]={n=Uo>=IG and Uo-IG+1 or 0,V(vo,IG+1,Uo+0x1)};end;local Do=(0);do if jo~=lo then R(hG,jo);end;end;local Xo,zo,eo,wo=A(function()do while true do local U4=(TG[Vo]);local t4=(U4[3]);do Vo=Vo+1;end;do if t4>=17 then if not(t4<26)then if t4<0X1e then if not(t4<0X0001c)then if t4~=0X001D then if io[U4[2]]then Vo=U4[5];end;else(io)[U4[0X2]]=io[U4[0x5]]~=io[U4[0X4]];end;else if t4==27 then do(io)[U4[0X2]]=io[U4[0X005]]>=io[U4[0X00004]];end;else(io)[1]=jo[U4[6]];do Vo=Vo+0x00001;end;do Vo=Vo+1;end;do Vo=Vo+1;end;Do=1;io[Do]=io[Do]();U4=TG[Vo];Vo=Vo+0X1;if io[0X0001]then Vo=U4[0X5];end;end;end;else if not(t4>=32)then if t4==31 then repeat local xN,rN=iG,(io);if not(#xN>0)then else local WU=({});do for LS,yS in l,xN do for uc,Cc in l,yS do do if not(Cc[1]==rN and Cc[2]>=0)then else local vH=Cc[2];do if not WU[vH]then(WU)[vH]={rN[vH]};end;end;(Cc)[0X0001]=WU[vH];do(Cc)[0X00002]=0X1;end;end;end;end;end;end;end;until true;return;else do(io)[U4[2]]=L(io[U4[5]],io[U4[4]]);end;end;else if not(t4<0X21)then if t4==0X22 then do io[2]=jo[U4[6]];end;local gq=(0X02);do Vo=Vo+1;end;Vo=Vo+1;U4=TG[Vo];Vo=Vo+1;do(io)[3]=U4[0x0006];end;Vo=Vo+0x1;io[gq](io[gq+0x001]);Do=gq-0x1;Vo=Vo+1;Vo=Vo+0x1;U4=TG[Vo];do Vo=Vo+1;end;do Vo=U4[5];end;else do io[U4[0x2]]=No[U4[5]];end;end;else local YW=(JG[U4[5]]);local dW=YW[0X00004];local xW,eW=#dW,(nil);if not(xW>0x0)then else eW={};for se=0x001,xW do local De=(dW[se]);if De[0X1]~=0 then eW[se-0x00001]=cG[De[0X002]];else eW[se-1]={io,De[2]};end;end;(H)(iG,eW);end;io[U4[0x02]]=ed(jo,YW,eW);end;end;end;else do if not(t4<0X15)then if t4>=0X0017 then if t4<24 then(io)[U4[2]]=jo[U4[0X6]];else do if t4~=25 then io[1]=jo[U4[0x6]];Vo=Vo+1;Vo=Vo+1;do U4=TG[Vo];end;do Vo=Vo+0X1;end;(io)[1]=io[0X1][U4[0X1]];do U4=TG[Vo];end;Vo=Vo+1;do io[0X00002]=U4[0X6];end;local Oh=0X00001;Vo=Vo+1;(io)[Oh]=io[Oh](io[Oh+1]);do Do=Oh;end;do Vo=Vo+1;end;Vo=Vo+0X1;U4=TG[Vo];Vo=Vo+0x00001;do if not io[1]then Vo=U4[5];end;end;else local Gh=(U4[0X00002]);local ah,eh=io[Gh]();do if ah then for cO=0X1,U4[0X4]do(io)[Gh+cO]=eh[cO];end;Vo=U4[5];end;end;end;end;end;else if t4~=22 then else do io[U4[2]]={V({},1,U4[5])};end;end;end;else if t4<19 then do if t4~=18 then local Es=cG[0x0];io[0X1]=Es[1][Es[0X0002]];local Ps=1;U4=TG[Vo];Vo=Vo+1;local Rs=io[1];do(io)[Ps+0x1]=Rs;end;io[Ps]=Rs[U4[1]];do Vo=Vo+0X1;end;do Ps=1;end;io[Ps](io[Ps+0X0001]);Do=Ps-1;Vo=Vo+1;repeat local pH,eH=iG,(io);if#pH>0 then local Y2=({});for Km,Ym in l,pH do do for iw,gw in l,Ym do do if gw[1]==eH and gw[0X2]>=0X00000 then local Lx=(gw[2]);if not Y2[Lx]then Y2[Lx]={eH[Lx]};end;(gw)[0X1]=Y2[Lx];gw[0X2]=1;end;end;end;end;end;end;until true;return;else Vo=U4[5];end;end;else do if t4==0X14 then do if not(not(io[U4[0X05]]<U4[0X001]))then else Vo=U4[0X0002];end;end;else local rk,jk=cG[0X0],(0X002);io[2]=rk[0X1][rk[2]];U4=TG[Vo];do Vo=Vo+0X1;end;local fk=(io[2]);io[jk+0X1]=fk;(io)[jk]=fk[U4[1]];Vo=Vo+1;jk=2;io[jk](io[jk+0X1]);Do=jk-1;Vo=Vo+0X1;Vo=Vo+0X1;U4=TG[Vo];Vo=Vo+1;Vo=U4[0X5];end;end;end;end;end;end;else if not(t4>=0x8)then do if t4>=4 then do if t4<0X6 then if t4==0X005 then(io)[0X00000]=jo[U4[0X6]];local m7=0X0;Vo=Vo+0X1;do Vo=Vo+0X1;end;U4=TG[Vo];Vo=Vo+0x1;io[0x01]=U4[6];U4=TG[Vo];do Vo=Vo+1;end;io[0X002]=U4[6];Vo=Vo+1;do(io)[m7]=io[m7](io[m7+0X1],io[m7+0X00002]);end;Do=m7;U4=TG[Vo];do Vo=Vo+0X0001;end;(io)[0X1]=jo[U4[6]];U4=TG[Vo];Vo=Vo+1;local p7=(0X3);local R7=(io[1]);m7=0X001;io[m7+1]=R7;do io[m7]=R7[U4[1]];end;do U4=TG[Vo];end;Vo=Vo+1;(io)[3]=U4[0X0006];U4=TG[Vo];Vo=Vo+1;(io)[0X4]=jo[U4[6]];Vo=Vo+1;io[0x5]=io[0X000];Vo=Vo+0X001;m7=4;(io)[m7]=io[m7](io[m7+0X1]);Do=m7;Vo=Vo+0x1;do io[0x3]=io[p7]..io[p7+1];end;Vo=Vo+1;m7=0X1;(io[m7])(io[m7+1],io[m7+0X2]);Do=m7-0x1;Vo=Vo+0X01;Vo=Vo+1;U4=TG[Vo];Vo=Vo+1;Vo=U4[5];else(io)[U4[2]]=U4[0x0006];end;else do if t4~=7 then(io)[2]=jo[U4[0X06]];Vo=Vo+1;Vo=Vo+0X1;do U4=TG[Vo];end;Vo=Vo+1;do io[2]=io[0x2][U4[1]];end;U4=TG[Vo];Vo=Vo+0x1;if not(not io[0X002])then else Vo=U4[5];end;else local av=cG[0x0];io[0X2]=av[0X01][av[0X002]];Vo=Vo+0x1;local Cv=(2);Vo=Vo+0X1;U4=TG[Vo];do Vo=Vo+0X00001;end;local Wv=io[2];do(io)[Cv+0X1]=Wv;end;io[Cv]=Wv[U4[0X1]];do Vo=Vo+0X1;end;(io)[0X4]=true;Vo=Vo+0X1;do Cv=2;end;(io[Cv])(io[Cv+1],io[Cv+0X2]);Do=Cv-1;U4=TG[Vo];Vo=Vo+1;(io)[0x2]=jo[U4[0X6]];Vo=Vo+0X1;do Vo=Vo+0X01;end;U4=TG[Vo];do Vo=Vo+1;end;do(io)[0x3]=jo[U4[6]];end;Vo=Vo+1;Cv=2;do io[Cv]=io[Cv](io[Cv+0X001]);end;Do=Cv;do Vo=Vo+1;end;do Vo=Vo+1;end;Vo=Vo+0x1;do av=cG[0X01];end;io[0x3]=av[1][av[2]];do Vo=Vo+1;end;Vo=Vo+1;U4=TG[Vo];Vo=Vo+1;do io[3]=io[0X3][U4[1]];end;Vo=Vo+1;Vo=Vo+0X001;do Vo=Vo+0x1;end;do io[0X4]=io[0X2];end;Vo=Vo+1;Cv=0x3;do io[Cv]=io[Cv](io[Cv+0x1]);end;Do=Cv;U4=TG[Vo];Vo=Vo+1;if not io[3]then Vo=U4[0X5];end;end;end;end;end;else do if not(t4<0X00002)then do if t4==3 then io[0x002]=jo[U4[6]];Vo=Vo+0X1;Vo=Vo+1;local mq=0x2;U4=TG[Vo];Vo=Vo+1;(io)[3]=U4[0X6];Vo=Vo+1;(io)[mq]=io[mq](io[mq+1]);do Do=mq;end;Vo=Vo+1;Vo=Vo+0X0001;do U4=TG[Vo];end;Vo=Vo+0X0001;if io[0x2]then Vo=U4[0X5];end;else io[0x00001]=jo[U4[6]];Vo=Vo+1;Vo=Vo+0X00001;U4=TG[Vo];Vo=Vo+1;do(io)[0x1]=io[1][U4[0X1]];end;Vo=Vo+0X00001;Vo=Vo+1;U4=TG[Vo];do Vo=Vo+1;end;do if not(not io[1])then else Vo=U4[5];end;end;end;end;else if t4~=1 then local V4=(cG[1]);io[0X3]=V4[1][V4[0x2]];Vo=Vo+1;do Vo=Vo+0x1;end;U4=TG[Vo];Vo=Vo+1;(io)[0x003]=io[3][U4[0x1]];do Vo=Vo+0X1;end;do Vo=Vo+1;end;do Vo=Vo+1;end;io[4]=io[2];local P4=(nil);do Vo=Vo+1;end;V4=cG[0];(io)[5]=V4[0X1][V4[0X02]];Vo=Vo+1;Vo=Vo+0X1;Vo=Vo+0X1;io[0X6]=nil;do Vo=Vo+1;end;do io[7]={};end;U4=TG[Vo];Vo=Vo+1;local s4=JG[U4[5]];local y4=(s4[0x0004]);local F4=#y4;do if F4>0 then do P4={};end;for bX=0X1,F4 do local mX=(y4[bX]);do if mX[1]==0 then do P4[bX-0x001]={io,mX[2]};end;else do P4[bX-0X00001]=cG[mX[0X02]];end;end;end;end;(H)(iG,P4);end;end;(io)[0X8]=ed(jo,s4,P4);local n4=3;U4=TG[Vo];Vo=Vo+0x0001;(io[7])[U4[6]]=io[8];Vo=Vo+1;Do=n4+0x0005-0X1;(io[n4])(V(io,n4+1,Do));Do=n4-1;do Vo=Vo+1;end;Vo=Vo+1;U4=TG[Vo];do Vo=Vo+0X1;end;do Vo=U4[5];end;else io[3]=jo[U4[0x006]];Vo=Vo+0x1;Vo=Vo+0x001;U4=TG[Vo];Vo=Vo+0X01;io[3]=io[0X3][U4[0X1]];do Vo=Vo+0X00001;end;Vo=Vo+1;U4=TG[Vo];do Vo=Vo+1;end;if not(io[3])then else Vo=U4[0X5];end;end;end;end;end;end;else do if not(t4<0Xc)then do if not(t4>=14)then if t4==13 then(io)[0x3]=jo[U4[0X6]];Vo=Vo+0x1;Vo=Vo+1;U4=TG[Vo];do Vo=Vo+1;end;io[3]=io[3][U4[1]];U4=TG[Vo];Vo=Vo+1;if not(io[0X003])then else Vo=U4[5];end;else(io)[0X000]=jo[U4[0X06]];Vo=Vo+0X0001;Vo=Vo+0X1;U4=TG[Vo];Vo=Vo+0X001;if io[0]then Vo=U4[5];end;end;else if not(t4<15)then if t4~=16 then local oN,yN=0X00002,(io[0X0002]);io[oN+0X00001]=yN;io[oN]=yN[U4[0X1]];do U4=TG[Vo];end;do Vo=Vo+0X00001;end;(io)[0X04]=U4[6];Vo=Vo+0X1;oN=2;(io)[oN]=io[oN](io[oN+0X01],io[oN+0X2]);Do=oN;Vo=Vo+0X1;do Vo=Vo+1;end;U4=TG[Vo];Vo=Vo+1;if not(io[0X2])then else Vo=U4[0X005];end;else for e5=U4[0X2],U4[0X00005]do io[e5]=nil;end;end;else(io)[U4[0x2]]=-io[U4[0X5]];end;end;end;else do if t4>=10 then if t4==11 then local Mj=(cG[0]);do(io)[0X0001]=Mj[1][Mj[0x2]];end;Vo=Vo+1;Vo=Vo+0X1;U4=TG[Vo];Vo=Vo+1;local Jj=(1);local Tj=(io[0x1]);io[Jj+0x1]=Tj;(io)[Jj]=Tj[U4[1]];do Vo=Vo+0x001;end;Jj=1;(io)[Jj]=io[Jj](io[Jj+0X1]);Do=Jj;do U4=TG[Vo];end;Vo=Vo+1;if not(not io[1])then else do Vo=U4[0X05];end;end;else io[1]=jo[U4[6]];Vo=Vo+0X1;Vo=Vo+0x1;U4=TG[Vo];do Vo=Vo+1;end;(io)[0X1]=io[0X01][U4[0X1]];U4=TG[Vo];Vo=Vo+0X1;if not(not io[1])then else do Vo=U4[5];end;end;end;else if t4~=0x9 then local hh=(U4[5]);local kh=(U4[0x2]);Do=kh+hh-1;repeat local D_,U_=iG,(io);if not(#D_>0X0)then else local IB={};do for zt,ct in l,D_ do for pi,ui in l,ct do if not(ui[0x0001]==U_ and ui[0x00002]>=0)then else local EX=ui[0x2];if not IB[EX]then IB[EX]={U_[EX]};end;ui[1]=IB[EX];do(ui)[0X2]=1;end;end;end;end;end;end;until true;return true,kh,hh;else do(io)[1]=jo[U4[6]];end;local ji=(1);Vo=Vo+0X1;do Vo=Vo+0x1;end;U4=TG[Vo];do Vo=Vo+0X00001;end;io[2]=U4[6];U4=TG[Vo];Vo=Vo+1;(io)[0X3]=U4[6];Vo=Vo+1;local Pi=4;(io)[ji]=io[ji](io[ji+0X1],io[ji+0x2]);Do=ji;Vo=Vo+0x01;Vo=Vo+0x1;U4=TG[Vo];Vo=Vo+0X1;(io)[0X2]=jo[U4[6]];U4=TG[Vo];Vo=Vo+1;ji=2;local wi=(io[0x02]);do io[ji+0X1]=wi;end;io[ji]=wi[U4[1]];do U4=TG[Vo];end;do Vo=Vo+0x1;end;(io)[0X4]=U4[6];U4=TG[Vo];Vo=Vo+1;(io)[0X005]=jo[U4[6]];Vo=Vo+0X1;Vo=Vo+1;Vo=Vo+1;io[0X6]=io[0X1];Vo=Vo+1;do ji=5;end;io[ji]=io[ji](io[ji+1]);Do=ji;Vo=Vo+0X001;Vo=Vo+0x1;do Vo=Vo+0X01;end;io[0X4]=io[Pi]..io[Pi+0X1];do Vo=Vo+1;end;do ji=2;end;(io[ji])(io[ji+0X1],io[ji+0X2]);Do=ji-1;Vo=Vo+0X01;(io)[0X002]=io[1];U4=TG[Vo];Vo=Vo+1;if not(io[2])then else Vo=U4[0x0005];end;end;end;end;end;end;end;end;end;end;end;end);if Xo then if zo then if wo~=0X0001 then return io[eo](V(io,eo+1,Do));else return io[eo]();end;elseif eo then do return V(io,eo,wo);end;end;else if C(zo)~='\115t\114\105\110\g'then(E)(zo,0x0000);else if M(zo,'\097tt\em\pt\ \116\111 y\105\el\d\ \097\c\114\111\115\s\ \109\e\116\097\met\104\111\d\047\C%\045\cal\108 b\oun\100\097r\y')then return coroutine.yield();end;if not(M(zo,'\^\.\-\:\%d\+\:\ '))then(E)(zo,0X0);else(E)("\Lur\097p\h\ \S\cr\i\112\116:"..(YG[Vo-0X1]or'\040in\116\101r\110\097\l\)')..": "..x(zo),0x000);end;end;end;end;end;else hG=function(...)local mR=({});local PR=0x1;local sR=(I());local rR,tR=(sR==a and SG or sR),{[0X0002]=mR,[0X1]=FG};local aR,wR=Cd(...);local hR=(0);aR=aR-0X1;for Jo=0X0,aR do if IG>Jo then mR[Jo]=wR[Jo+1];else break;end;end;if not OG then wR=nil;elseif not(zG)then else mR[IG]={n=aR>=IG and aR-IG+1 or 0,V(wR,IG+1,aR+1)};end;if rR~=sR then(R)(hG,rR);end;local cR,WR,yR,eR=A(function()while true do local o0=TG[PR];local i0=o0[0X003];PR=PR+1;do if i0>=12 then if i0>=18 then do if not(i0<21)then if not(i0>=0X016)then mR[o0[0X00002]]=o0[0X6];else if i0==23 then local zp=JG[o0[0x0005]];local Gp=zp[0X4];local Jp=(nil);local cp=#Gp;if cp>0 then do Jp={};end;for Go=1,cp do local zo=(Gp[Go]);if zo[0X1]==0X0 then(Jp)[Go-1]={mR,zo[0x2]};else Jp[Go-0x1]=cG[zo[2]];end;end;(H)(iG,Jp);end;(mR)[o0[2]]=ed(rR,zp,Jp);else mR[o0[0X02]]=mR[o0[0X5]]-mR[o0[0X004]];end;end;else do if i0>=0X13 then if i0~=20 then local q9=o0[0x002];local R9,V9=mR[q9]();if R9 then for w8=0X1,o0[4]do do mR[q9+w8]=V9[w8];end;end;PR=o0[5];end;else for O1=o0[0X2],o0[5]do(mR)[O1]=nil;end;end;else(mR)[o0[2]]={};end;end;end;end;else if not(i0<15)then if i0>=16 then if i0==0X00011 then do PR=o0[5];end;else do repeat local i8,W8=iG,(mR);if not(#i8>0X0)then else local w_={};for hp,tp in l,i8 do do for Ne,ze in l,tp do do if ze[1]==W8 and ze[2]>=0x00000 then local MV=(ze[2]);if not w_[MV]then w_[MV]={W8[MV]};end;(ze)[0X00001]=w_[MV];(ze)[0X0002]=1;end;end;end;end;end;end;until true;end;local Ym=o0[0x2];return false,Ym,Ym+o0[5]-0X2;end;else do mR[o0[2]]={V({},0X0001,o0[0X5])};end;end;else if i0>=0Xd then do if i0~=14 then local xJ,IJ=o0[0X02],o0[0X05];if IJ~=0X00000 then hR=xJ+IJ-1;end;local BJ,fJ,zJ=o0[0X4],nil,(nil);if IJ~=1 then fJ,zJ=Cd(mR[xJ](V(mR,xJ+0x1,hR)));else fJ,zJ=Cd(mR[xJ]());end;if BJ==0X0001 then hR=xJ-1;else if BJ==0X00 then do fJ=fJ+xJ-0x1;end;hR=fJ;else do fJ=xJ+BJ-2;end;do hR=fJ+0X1;end;end;local jX=(0);for ke=xJ,fJ do jX=jX+1;(mR)[ke]=zJ[jX];end;end;else(mR)[o0[2]]=mR[o0[5]]==mR[o0[0x04]];end;end;else repeat local aU,RU=iG,(mR);do if#aU>0 then local ik={};do for HR,uR in l,aU do for kS,RS in l,uR do if RS[1]==RU and RS[2]>=0 then local Ih=RS[2];do if not(not ik[Ih])then else ik[Ih]={RU[Ih]};end;end;(RS)[0X1]=ik[Ih];(RS)[2]=1;end;end;end;end;end;end;until true;return;end;end;end;else if not(i0<6)then if not(i0<0X009)then do if not(i0<10)then if i0~=0Xb then(mR)[o0[2]]=mR[o0[5]]<mR[o0[4]];else if not(mR[o0[2]])then else PR=o0[0X00005];end;end;else(mR)[o0[0X00002]]=mR[o0[0X0005]];end;end;else if not(i0<7)then if i0==8 then(mR)[o0[0X02]]=rR[o0[6]];else mR[0X009]=nil;o0=TG[PR];PR=PR+1;(rR)[o0[6]]=mR[0X9];PR=PR+1;(mR)[0X009]=false;o0=TG[PR];PR=PR+0X001;rR[o0[6]]=mR[0X9];PR=PR+0X1;mR[9]=false;o0=TG[PR];PR=PR+0X0001;rR[o0[0X6]]=mR[0X9];PR=PR+1;mR[0X9]=false;do o0=TG[PR];end;do PR=PR+1;end;rR[o0[6]]=mR[0X9];o0=TG[PR];PR=PR+1;do if not(not mR[0X1])then else PR=o0[0x00005];end;end;end;else mR[0X00006]=rR[o0[6]];do PR=PR+0X1;end;PR=PR+0x00001;o0=TG[PR];PR=PR+1;(mR)[0X6]=mR[6][o0[1]];o0=TG[PR];PR=PR+0x1;if not mR[0X6]then PR=o0[0X5];end;end;end;else if not(i0>=3)then do if i0<1 then(mR)[6]=mR[0X00000][o0[1]];local aD,mD=0X3,(0X7);do o0=TG[PR];end;PR=PR+0X01;(mR)[7]=rR[o0[6]];o0=TG[PR];PR=PR+1;local zD,DD=JG[o0[5]],nil;local cD=zD[0X4];local WD=#cD;do if not(WD>0)then else DD={};for LF=0x01,WD do local sF=cD[LF];do if sF[1]==0 then do DD[LF-1]={mR,sF[2]};end;else(DD)[LF-0X1]=cG[sF[2]];end;end;end;(H)(iG,DD);end;end;(mR)[8]=ed(rR,zD,DD);PR=PR+0x1;local LD=2;if LD==0X0 then else do hR=mD+LD-1;end;end;local YD,nD=nil,nil;do if LD==1 then do YD,nD=Cd(mR[mD]());end;else YD,nD=Cd(mR[mD](V(mR,mD+0x1,hR)));end;end;if aD~=1 then do if aD~=0 then YD=mD+aD-2;hR=YD+1;else do YD=YD+mD-0X1;end;do hR=YD;end;end;end;local rV=0;for Wr=mD,YD do rV=rV+0X00001;mR[Wr]=nD[rV];end;else do hR=mD-0X001;end;end;PR=PR+0X00001;PR=PR+0X001;o0=TG[PR];PR=PR+0x1;if mR[0x0007]then PR=o0[5];end;else do if i0==2 then do mR[0x9]=rR[o0[0X6]];end;do PR=PR+0X1;end;local lr=9;PR=PR+1;o0=TG[PR];PR=PR+1;(mR)[10]=o0[0X06];PR=PR+1;mR[0X000b]=mR[0X8];PR=PR+0X1;mR[lr](mR[lr+0X01],mR[lr+2]);hR=lr-1;PR=PR+0X1;PR=PR+0X1;do o0=TG[PR];end;PR=PR+0X0001;PR=o0[5];else mR[o0[0x002]]=mR[o0[0X05]]^mR[o0[0X4]];end;end;end;end;else if not(i0>=0X4)then local PZ=9;local VZ=mR[1];mR[PZ+0X0001]=VZ;(mR)[PZ]=VZ[o0[1]];PR=PR+0X001;PZ=0X009;(mR[PZ])(mR[PZ+1]);hR=PZ-0X1;PR=PR+0x00001;PR=PR+1;do o0=TG[PR];end;PR=PR+0X1;PR=o0[0X005];else do if i0~=0x5 then if not(not mR[o0[2]])then else do PR=o0[0x0005];end;end;else end;end;end;end;end;end;end;end;end);if cR then if WR then do if eR~=0X1 then return mR[yR](V(mR,yR+1,hR));else return mR[yR]();end;end;elseif not(yR)then else return V(mR,yR,eR);end;else do if C(WR)~="string"then(E)(WR,0);else do if not(M(WR,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if M(WR,"^.-:%d+: ")then(E)("Luraph Script:"..(YG[PR-1]or"(internal)")..": "..x(WR),0);else(E)(WR,0X0);end;end;end;end;end;end;end;else if not(lG>=43)then do if lG~=42 then hG=function(...)local Li=({});local ai=0X1;local xi=(I());local Qi,qi=0X0,({[0X1]=FG,[0X0002]=Li});local bi,li=Cd(...);bi=bi-0x1;local Ni=(xi==a and SG or xi);for Kl=0X0,bi do if not(IG>Kl)then do break;end;else(Li)[Kl]=li[Kl+1];end;end;if not OG then li=nil;elseif zG then Li[IG]={n=bi>=IG and bi-IG+0X1 or 0X0,V(li,IG+0X00001,bi+1)};end;if Ni~=xi then R(hG,Ni);end;do while true do local Z8=(TG[ai]);do ai=ai+0X1;end;local f8=Z8[0X00003];return(function(D,s,...)return Client.PlayerGui.Main.InCombat.Visible;end)(Li,cG,...);end;end;end;else hG=function(...)local e9=(0);local p9,m9=0X00001,{};local O9=({[0X0002]=m9,[0X1]=FG});local u9=I();local y9,S9=Cd(...);y9=y9-1;for ZP=0X0,y9 do if not(IG>ZP)then break;else m9[ZP]=S9[ZP+0X1];end;end;local w9=(u9==a and SG or u9);do if not OG then S9=nil;elseif not(zG)then else do m9[IG]={n=y9>=IG and y9-IG+1 or 0X0,V(S9,IG+0X1,y9+0X0001)};end;end;end;do if w9==u9 then else R(hG,w9);end;end;local x9,v9,Q9,N9=A(function()while true do local iq=TG[p9];local Zq=(iq[0X3]);do p9=p9+0x1;end;do if Zq<0X008 then do if not(Zq>=0X4)then if not(Zq>=0X0002)then if Zq==1 then do w9[iq[0X6]]=m9[iq[2]];end;else local G8=m9[iq[5]]/m9[iq[0X4]];(m9)[iq[2]]=G8-G8%0x1;end;else do if Zq==3 then do p9=iq[0X5];end;else m9[0]=w9[iq[6]];p9=p9+0X1;do p9=p9+0X0001;end;iq=TG[p9];local gx=(m9[0]);do p9=p9+0x1;end;local dx=0x00;(m9)[dx+1]=gx;do m9[dx]=gx[iq[0X01]];end;do iq=TG[p9];end;p9=p9+0X001;m9[2]=iq[0X0006];do p9=p9+0X1;end;dx=0X00000;m9[dx]=m9[dx](m9[dx+0X1],m9[dx+2]);e9=dx;do iq=TG[p9];end;do p9=p9+0x1;end;do m9[1]=w9[iq[6]];end;p9=p9+0X1;do p9=p9+0X01;end;iq=TG[p9];do p9=p9+1;end;m9[0X1]=m9[1][iq[0X001]];iq=TG[p9];local ox=JG[iq[0X5]];local ax=ox[0x4];p9=p9+1;local Tx=#ax;local Px=(nil);if not(Tx>0)then else Px={};for nR=0x0001,Tx do local wR=ax[nR];if wR[0X1]==0 then do Px[nR-0X1]={m9,wR[2]};end;else Px[nR-0X1]=cG[wR[0X2]];end;end;H(iG,Px);end;do(m9)[2]=ed(w9,ox,Px);end;p9=p9+1;dx=1;m9[dx](m9[dx+0X1]);e9=dx-0X1;p9=p9+1;repeat local U7,j7=iG,m9;do if#U7>0x0 then local G_=({});for pA,VA in l,U7 do for pJ,PJ in l,VA do if PJ[1]==j7 and PJ[2]>=0X00000 then local xQ=(PJ[2]);if not G_[xQ]then(G_)[xQ]={j7[xQ]};end;(PJ)[1]=G_[xQ];(PJ)[0x00002]=1;end;end;end;end;end;until true;return;end;end;end;else if not(Zq>=6)then if Zq~=0x00005 then do(m9)[iq[2]]={V({},1,iq[0X5])};end;else end;else if Zq~=0X00007 then(m9)[iq[2]]=w9[iq[6]];else local OY=(iq[5]);local lY=m9[OY];for oO=OY+1,iq[4]do lY=lY..m9[oO];end;(m9)[iq[0X2]]=lY;end;end;end;end;else do if not(Zq<12)then if not(Zq<0X000E)then do if Zq>=15 then if Zq~=16 then local bv=m9[iq[0x005]];local Lv=(iq[0x2]);(m9)[Lv+0X1]=bv;(m9)[Lv]=bv[iq[0X1]];else m9[iq[2]]=m9[iq[5]];end;else do m9[iq[2]]=m9[iq[5]]<m9[iq[0X4]];end;end;end;else if Zq~=13 then do if m9[iq[0X5]]<=m9[iq[4]]then do p9=iq[0X0002];end;end;end;else do m9[iq[2]]=iq[6];end;end;end;else if not(Zq<10)then if Zq==0XB then local GJ=iq[0X2];local sJ,KJ,CJ=m9[GJ],m9[GJ+1],(m9[GJ+2]);(m9)[GJ]=h(function()for hb=sJ,KJ,CJ do(t)(true,hb);end;end);p9=iq[0X5];else for O6=iq[2],iq[0X05]do m9[O6]=nil;end;end;else if Zq~=0X0009 then local gG=(iq[0X2]);local NG=((iq[0X00004]-1)*50);local uG=(m9[gG]);for Vw=1,iq[5]do uG[NG+Vw]=m9[gG+Vw];end;else local Oi,mi=JG[iq[5]],(nil);local Wi=Oi[4];local Ui=#Wi;if Ui>0 then mi={};for Cy=0X1,Ui do local Xy=(Wi[Cy]);if Xy[0X001]~=0X0 then mi[Cy-1]=cG[Xy[0X2]];else mi[Cy-0X1]={m9,Xy[2]};end;end;(H)(iG,mi);end;do(m9)[iq[2]]=ed(w9,Oi,mi);end;end;end;end;end;end;end;end;end);do if x9 then if v9 then do if N9~=1 then return m9[Q9](V(m9,Q9+0X1,e9));else return m9[Q9]();end;end;elseif not(Q9)then else return V(m9,Q9,N9);end;else if C(v9)~="string"then E(v9,0X0);else if M(v9,'att\empt\ t\o\ \121i\101\l\d\ \097cr\o\115\s \met\097\m\et\104\od\/\C\037\-\cal\l\032\098\111\117\110\dar\y')then return coroutine.yield();end;if not(M(v9,"\094\.\-\058\%\d\+\058\032"))then(E)(v9,0x0);else E("Luraph Script:"..(YG[p9-0X1]or'(\i\110\116\101\114n\097\l\)').."\: "..x(v9),0);end;end;end;end;end;end;end;else if lG>=0X0002c then if lG~=0x0002D then do hG=function(...)local YV,dV=1,({});local eV=I();local MV,oV=0,{[0X0002]=dV,[0X1]=FG};local KV,qV=Cd(...);KV=KV-1;for Js=0,KV do if not(IG>Js)then break;else do dV[Js]=qV[Js+1];end;end;end;local xV=((eV==a and SG or eV));if not OG then qV=nil;elseif zG then(dV)[IG]={n=KV>=IG and KV-IG+1 or 0,V(qV,IG+0X00001,KV+0X1)};end;if xV~=eV then(R)(hG,xV);end;local RV,TV,ZV,IV=A(function()do while true do local mH=(TG[YV]);local kH=(mH[0X3]);YV=YV+0X1;do if kH<0X000012 then do if not(kH<9)then do if not(kH<0XD)then if not(kH>=15)then if kH~=14 then do YV=mH[0x5];end;else for EW=mH[2],mH[0X5]do dV[EW]=nil;end;end;else do if not(kH>=16)then(dV)[17]=dV[0XE][mH[0X1]];YV=YV+0X00001;(dV)[0X12]=dV[13];YV=YV+1;dV[0x08]=dV[0X012];YV=YV+1;(dV)[0X007]=dV[0X0011];YV=YV+1;do(dV)[0X6]=dV[16];end;mH=TG[YV];YV=YV+0x001;YV=mH[0x05];else if kH~=17 then if not(not(dV[mH[0X5]]<mH[0X01]))then else do YV=mH[0X0002];end;end;else local yL=mH[0X2];local ML,aL=dV[yL]();if not(ML)then else YV=mH[0x0005];dV[yL+3]=aL;end;end;end;end;end;else if kH<11 then do if kH==10 then(dV)[mH[2]]=mH[6]/mH[1];else if not(dV[mH[0X0002]])then else YV=mH[5];end;end;end;else if kH~=0X00C then repeat local FR,NR=iG,dV;if not(#FR>0)then else local W9=({});for i0,M0 in l,FR do do for CQ,tQ in l,M0 do if tQ[1]==NR and tQ[2]>=0X0000 then local cq=tQ[2];if not(not W9[cq])then else do W9[cq]={NR[cq]};end;end;(tQ)[1]=W9[cq];tQ[2]=0X1;end;end;end;end;end;until true;do return;end;else(dV)[mH[0X02]]=xV[mH[0X06]];end;end;end;end;else do if not(kH>=4)then if not(kH<0X2)then if kH~=3 then(dV)[mH[0X2]]=mH[0X6];else local b9=dV[13];local s9=0X10;(dV)[s9+0X1]=b9;do(dV)[s9]=b9[mH[1]];end;mH=TG[YV];YV=YV+0X1;dV[18]=mH[0x6];YV=YV+1;(dV)[0X13]=true;YV=YV+0x1;do s9=16;end;MV=s9+0X004-1;do(dV)[s9]=dV[s9](V(dV,s9+0X1,MV));end;do MV=s9;end;YV=YV+1;do YV=YV+0X01;end;do mH=TG[YV];end;YV=YV+0X1;if not dV[0x0010]then YV=mH[5];end;end;else if kH==0X001 then dV[0xF]=xV[mH[0x6]];YV=YV+1;YV=YV+1;mH=TG[YV];YV=YV+0X1;dV[16]=dV[13][mH[0X1]];local AT=15;YV=YV+1;do(dV)[17]=dV[0X000];end;YV=YV+1;(dV)[AT]=dV[AT](dV[AT+1],dV[AT+0X2]);MV=AT;mH=TG[YV];YV=YV+0X1;if not(dV[0X00f])then else YV=mH[5];end;else if not dV[mH[0X2]]then YV=mH[0X5];end;end;end;else do if not(kH<0X00006)then if kH>=0X7 then if kH==8 then do(dV)[mH[0X2]]=dV[mH[0X5]]-dV[mH[0X00004]];end;else do dV[0X00f]=xV[mH[6]];end;mH=TG[YV];YV=YV+1;dV[16]=dV[0Xe][mH[1]];mH=TG[YV];YV=YV+1;local n9=(0X0000F);dV[0X10]=dV[16][mH[0X00001]];YV=YV+0x1;YV=YV+0X1;do YV=YV+0X1;end;(dV)[n9]=dV[n9](dV[n9+0X1]);MV=n9;mH=TG[YV];YV=YV+0X001;if not(dV[15]<dV[6])then else YV=mH[2];end;end;else end;else do if kH==5 then(dV)[mH[0X2]]=dV[mH[5]][mH[1]];else dV[mH[0X2]][dV[mH[5]]]=dV[mH[0x4]];end;end;end;end;end;end;end;end;else if kH<0X1B then do if kH<0X16 then do if not(kH<0X014)then if kH~=0X15 then repeat local RH,zH=iG,dV;do if#RH>0 then local kr={};do for XK,hK in l,RH do for lu,Zu in l,hK do if Zu[0x0001]==zH and Zu[0x002]>=0 then local ue=Zu[0X00002];if not(not kr[ue])then else(kr)[ue]={zH[ue]};end;(Zu)[0X1]=kr[ue];Zu[0X02]=1;end;end;end;end;end;end;until true;local X2=(mH[0X00002]);do return false,X2,X2;end;else local vs=mH[2];local ys=(h(function(...)t();do for Rh,Sh,Zh,qh,Kh,mh,Dh,Ch,uh,Nh in...do(t)(true,{Rh,Sh,Zh,qh,Kh,mh,Dh,Ch,uh,Nh});end;end;end));(ys)(dV[vs],dV[vs+1],dV[vs+2]);MV=vs;dV[vs]=ys;YV=mH[5];end;else if kH~=0X13 then local gg=(mH[2]);local zg,Ig=dV[gg]();if zg then for ET=1,mH[0X4]do(dV)[gg+ET]=Ig[ET];end;YV=mH[5];end;else if dV[mH[0X05]]==mH[1]then else do YV=mH[2];end;end;end;end;end;else if not(kH<24)then if not(kH>=0X19)then local uD=(JG[mH[5]]);local DD=(uD[0X04]);local VD=(#DD);local GD=(nil);if not(VD>0X000)then else do GD={};end;for wV=0X01,VD do local kV=DD[wV];if kV[1]==0 then GD[wV-0x00001]={dV,kV[0X2]};else(GD)[wV-0X0001]=cG[kV[2]];end;end;H(iG,GD);end;do(dV)[mH[2]]=ed(xV,uD,GD);end;else if kH~=26 then if not(not(dV[mH[5]]<=dV[mH[0x4]]))then else YV=mH[0X02];end;else do xV[mH[6]]=dV[mH[2]];end;end;end;else if kH==23 then if not(not(mH[6]<dV[mH[0X0004]]))then else YV=mH[2];end;else do if not(not(dV[mH[0X005]]<dV[mH[0X4]]))then else YV=mH[2];end;end;end;end;end;end;else if kH<32 then if kH<29 then if kH~=0x00001c then dV[5]=false;do YV=YV+1;end;do(dV)[0x00004]=dV[0X5];end;YV=YV+1;dV[0X5]=nil;YV=YV+0X1;dV[0]=dV[0x005];mH=TG[YV];YV=YV+1;YV=mH[5];else do(dV)[mH[0X2]]=true;end;end;else if kH>=30 then if kH==0X1F then dV[mH[2]]={V({},1,mH[5])};else dV[0X7]=mH[0X6]/mH[0X1];YV=YV+1;dV[0X8]=nil;do mH=TG[YV];end;local hA=9;YV=YV+1;dV[0X9]=mH[6];YV=YV+0X1;dV[10]=#dV[5];mH=TG[YV];YV=YV+1;dV[11]=mH[0X006];mH=TG[YV];do YV=YV+1;end;local pA,DA=dV[hA+1],dV[hA+2];local VA=(dV[hA]);dV[hA]=h(function()for dy=VA,pA,DA do(t)(true,dy);end;end);YV=mH[0X0005];end;else do(dV)[15]=dV[0Xd][mH[1]];end;mH=TG[YV];YV=YV+0X1;do dV[0X0010]=xV[mH[0X6]];end;do YV=YV+1;end;do YV=YV+0X1;end;do mH=TG[YV];end;do YV=YV+0X1;end;(dV)[16]=dV[16][mH[1]];do YV=YV+1;end;do YV=YV+1;end;mH=TG[YV];do YV=YV+0x1;end;do if dV[0XF]~=dV[0X10]then else YV=mH[2];end;end;end;end;else do if kH<0X22 then if kH~=0X21 then if dV[mH[5]]==dV[mH[0X004]]then YV=mH[2];end;else dV[mH[2]]=dV[mH[0X5]];end;else do if not(kH<0x0023)then if kH~=36 then do dV[mH[2]]=dV[mH[0X005]]/dV[mH[0X4]];end;else dV[0x0D]=dV[5][dV[0xC]];mH=TG[YV];local Nf=14;YV=YV+1;local Uf=(dV[0Xd]);(dV)[Nf+1]=Uf;(dV)[Nf]=Uf[mH[0x01]];mH=TG[YV];YV=YV+0X0001;do(dV)[16]=mH[6];end;YV=YV+0X1;Nf=14;do dV[Nf]=dV[Nf](dV[Nf+1],dV[Nf+2]);end;MV=Nf;YV=YV+1;YV=YV+1;mH=TG[YV];YV=YV+0X1;do if not dV[0]then do YV=mH[5];end;end;end;end;else(dV)[0X012]=xV[mH[0X6]];YV=YV+0x1;do YV=YV+1;end;do mH=TG[YV];end;YV=YV+1;(dV)[18]=dV[18][mH[1]];mH=TG[YV];YV=YV+1;(dV)[19]=xV[mH[0X6]];local EQ=(0X0012);mH=TG[YV];YV=YV+0X1;(dV)[0X14]=dV[13][mH[0X001]];YV=YV+0x0001;dV[EQ]=dV[EQ](dV[EQ+1],dV[EQ+0X2]);MV=EQ;mH=TG[YV];YV=YV+1;if not(dV[0X12])then else YV=mH[0X5];end;end;end;end;end;end;end;end;end;end;end;end);if not(RV)then if C(TV)=="\115\116\114ing"then if not(M(TV,"at\116em\112t\ to\032\121\i\eld\032acro\115\s\032\109\eta\m\101th\od\/\067%\045\call b\ound\097\114\y"))then else do return coroutine.yield();end;end;if not(M(TV,"\^\046\045:\%\100\043:\ "))then E(TV,0X0);else E("Luraph Script:"..(YG[YV-0X1]or'\(\105n\116er\110al\)')..'\:\ '..x(TV),0);end;else E(TV,0x0);end;else do if TV then if IV==0X001 then do return dV[ZV]();end;else return dV[ZV](V(dV,ZV+1,MV));end;elseif ZV then do return V(dV,ZV,IV);end;end;end;end;end;end;else do hG=function(...)local Kb,Qb,Ob=0X001,{},(0);local eb=I();local Fb=({[0X1]=FG,[0X0002]=Qb});local db,Zb=Cd(...);db=db-1;for Vn=0X0000,db do if not(IG>Vn)then break;else do Qb[Vn]=Zb[Vn+1];end;end;end;local fb=(eb==a and SG or eb);if not OG then Zb=nil;elseif not(zG)then else Qb[IG]={n=db>=IG and db-IG+0x1 or 0,V(Zb,IG+1,db+0X1)};end;do if fb==eb then else R(hG,fb);end;end;local gb,mb,Mb,Wb=A(function()while true do local hY=(TG[Kb]);local OY=(hY[0X3]);do Kb=Kb+0X0001;end;if not(OY>=7)then if OY<0X3 then if not(OY>=0x1)then if not(Qb[hY[5]]<=Qb[hY[0X4]])then else Kb=hY[0x002];end;else if OY~=0X2 then do Qb[hY[2]]=true;end;else do(Qb)[0]=fb[hY[0X6]];end;hY=TG[Kb];do Kb=Kb+1;end;do Qb[0X0]=Qb[0][hY[1]];end;local js=0X0;hY=TG[Kb];local xs=JG[hY[0X05]];do Kb=Kb+1;end;local rs=nil;local is=xs[4];local Is=(#is);if not(Is>0x0)then else rs={};do for Os=0X1,Is do local ds=(is[Os]);if ds[1]==0X00 then do(rs)[Os-1]={Qb,ds[0X2]};end;else(rs)[Os-0X001]=cG[ds[0X2]];end;end;end;H(iG,rs);end;Qb[1]=ed(fb,xs,rs);Kb=Kb+0X1;Qb[js](Qb[js+1]);Ob=js-0X1;Kb=Kb+0X1;repeat local CR,oR=iG,Qb;if not(#CR>0)then else local at={};for Uh,wh in l,CR do do for Uj,Oj in l,wh do if Oj[1]==oR and Oj[2]>=0X0 then local JC=(Oj[2]);if not at[JC]then at[JC]={oR[JC]};end;Oj[1]=at[JC];do(Oj)[2]=0x01;end;end;end;end;end;end;until true;return;end;end;else if OY>=5 then do if OY~=0X6 then Qb[hY[2]]=not Qb[hY[5]];else(Qb[hY[2]])[Qb[hY[0X00005]]]=Qb[hY[4]];end;end;else do if OY==4 then do Qb[hY[0x2]]={V({},0x1,hY[5])};end;else Qb[hY[2]]=hY[0X6];end;end;end;end;else if OY<0Xa then if OY<8 then Kb=hY[0X5];else if OY~=9 then local OV=(JG[hY[5]]);local QV,gV=OV[0X0004],(nil);local yV=(#QV);do if yV>0 then do gV={};end;do for TZ=1,yV do local SZ=(QV[TZ]);do if SZ[1]==0 then do(gV)[TZ-0x1]={Qb,SZ[2]};end;else do(gV)[TZ-0X1]=cG[SZ[0X2]];end;end;end;end;end;H(iG,gV);end;end;do(Qb)[hY[0X2]]=ed(fb,OV,gV);end;else local l2=(hY[2]);local R2,b2=Qb[l2]();if R2 then Kb=hY[0X0005];(Qb)[l2+0x3]=b2;end;end;end;else do if not(OY<12)then if OY==0X000d then else do Qb[hY[0X002]]=Qb[hY[5]][Qb[hY[0X4]]];end;end;else do if OY==0Xb then Qb[hY[0X00002]]=fb[hY[6]];else if not(not(Qb[hY[5]]<=Qb[hY[4]]))then else Kb=hY[0X2];end;end;end;end;end;end;end;end;end);if not(gb)then if C(mb)~="string"then(E)(mb,0X0);else if M(mb,'\097\116\116\e\109\p\116\032\116\o \y\i\e\l\d\032a\cro\ss\ \m\eta\109et\104\o\100\/\C%\-c\097\l\108\032b\oun\dar\121')then return coroutine.yield();end;if not(M(mb,'^\046\-\:\037\100+\:\032'))then(E)(mb,0X0);else(E)('\076ur\097p\104 \083\099\114\i\pt\:'..(YG[Kb-0X1]or"(internal)")..": "..x(mb),0);end;end;else if mb then if Wb==0X1 then return Qb[Mb]();else do return Qb[Mb](V(Qb,Mb+1,Ob));end;end;elseif not(Mb)then else return V(Qb,Mb,Wb);end;end;end;end;end;else hG=function(...)local Qt,ot=0X001,({});local Jt=0;local dt={[0X0002]=ot,[0X1]=FG};local st=(I());local nt,Xt=Cd(...);nt=nt-1;for Vs=0x0,nt do if IG>Vs then(ot)[Vs]=Xt[Vs+0X1];else do break;end;end;end;local yt=(st==a and SG or st);do if not OG then Xt=nil;elseif not(zG)then else ot[IG]={n=nt>=IG and nt-IG+0X00001 or 0,V(Xt,IG+1,nt+0X00001)};end;end;if yt==st then else(R)(hG,yt);end;local pt,Pt,At,lt=A(function()while true do local jC=TG[Qt];local EC=(jC[3]);Qt=Qt+1;if EC>=18 then if not(EC<0X1b)then do if not(EC>=31)then if EC<29 then do if EC~=0x1c then Qt=jC[0X0005];else do(yt)[jC[0X006]]=ot[0];end;jC=TG[Qt];Qt=Qt+1;(ot)[0X0]=yt[jC[0x006]];Qt=Qt+0x1;Qt=Qt+1;do jC=TG[Qt];end;Qt=Qt+1;(ot)[0]=ot[0x0][jC[1]];jC=TG[Qt];do Qt=Qt+1;end;if ot[0x0]then do Qt=jC[0X5];end;end;end;end;else if EC~=0X1E then local Ic=(cG[0x0]);ot[0]=Ic[0X001][Ic[2]];do jC=TG[Qt];end;Qt=Qt+1;(ot)[0X0]=ot[0]==jC[1];jC=TG[Qt];Qt=Qt+0X1;do Qt=jC[5];end;else ot[jC[2]]=ot[jC[0x00005]][ot[jC[0X4]]];end;end;else do if EC<0X21 then if EC==32 then local Nk=(jC[5]);local gk=(jC[2]);Jt=gk+Nk-0X1;repeat local yI,tI=iG,ot;if not(#yI>0)then else local JV={};for cV,aV in l,yI do for Is,Us in l,aV do if Us[1]==tI and Us[2]>=0 then local qk=(Us[2]);do if not JV[qk]then JV[qk]={tI[qk]};end;end;do(Us)[0x01]=JV[qk];end;Us[2]=0X1;end;end;end;end;until true;return true,gk,Nk;else ot[0X1]=yt[jC[0X06]];jC=TG[Qt];Qt=Qt+0x001;ot[1][jC[6]]=jC[1];jC=TG[Qt];do Qt=Qt+0X1;end;Qt=jC[0X00005];end;else if not(EC<34)then if EC~=35 then if ot[jC[0X2]]then Qt=jC[5];end;else(ot)[jC[0X2]]=yt[jC[0X6]];end;else ot[1]=yt[jC[6]];Qt=Qt+0X1;Qt=Qt+0X1;jC=TG[Qt];Qt=Qt+0X0001;(ot[1])[jC[0X06]]=jC[1];jC=TG[Qt];Qt=Qt+1;(ot)[1]=yt[jC[0X6]];jC=TG[Qt];Qt=Qt+1;do(ot)[1]=ot[1][jC[1]];end;Qt=Qt+1;do Qt=Qt+0X1;end;jC=TG[Qt];Qt=Qt+0X1;ot[0X1]=ot[1][jC[0X1]];do jC=TG[Qt];end;Qt=Qt+0X1;(ot)[1]=ot[1][jC[1]];Qt=Qt+0X1;Qt=Qt+1;do jC=TG[Qt];end;do Qt=Qt+0x1;end;if not(not(jC[0X6]<=ot[0X1]))then else do Qt=jC[0x2];end;end;end;end;end;end;end;else if EC<22 then if EC<20 then if EC==0X13 then ot[0X0002]=yt[jC[6]];Qt=Qt+0x01;do Qt=Qt+0X1;end;jC=TG[Qt];Qt=Qt+0X1;do ot[0x0002]=ot[2][jC[0X1]];end;Qt=Qt+1;Qt=Qt+0x00001;jC=TG[Qt];Qt=Qt+0x1;if not(ot[2])then else Qt=jC[5];end;else(ot)[0X01]=yt[jC[0X00006]];jC=TG[Qt];Qt=Qt+0X1;do(ot)[0X00001]=ot[0X1][jC[1]];end;Qt=Qt+0X001;Qt=Qt+1;jC=TG[Qt];Qt=Qt+0X00001;if not ot[1]then Qt=jC[5];end;end;else if EC~=0X15 then repeat local Dw,iw=iG,ot;do if not(#Dw>0X0)then else local PL=({});do for to,Io in l,Dw do for yS,ZS in l,Io do if ZS[0X1]==iw and ZS[0X0002]>=0X0000 then local z6=(ZS[2]);if not(not PL[z6])then else do PL[z6]={iw[z6]};end;end;ZS[0X1]=PL[z6];ZS[0X2]=1;end;end;end;end;end;end;until true;return;else(ot)[0X001]=yt[jC[0X6]];local uT=(0x1);Qt=Qt+1;do Qt=Qt+1;end;do Qt=Qt+1;end;(ot)[0X2]=ot[0];do Qt=Qt+0X1;end;ot[uT]=ot[uT](ot[uT+1]);do Jt=uT;end;Qt=Qt+0X1;do Qt=Qt+0X00001;end;jC=TG[Qt];Qt=Qt+0X1;if ot[0x1]~=jC[1]then do Qt=jC[0x2];end;end;end;end;else if EC>=24 then do if EC>=25 then if EC~=26 then if not(not(jC[0X6]<=ot[jC[0X4]]))then else Qt=jC[0x2];end;else do ot[0X1]=yt[jC[6]];end;do jC=TG[Qt];end;Qt=Qt+0X1;ot[0X1][jC[6]]=jC[1];jC=TG[Qt];do Qt=Qt+1;end;ot[0X1]=yt[jC[6]];jC=TG[Qt];Qt=Qt+0X1;ot[1][jC[0X6]]=jC[1];jC=TG[Qt];do Qt=Qt+1;end;(ot)[1]=yt[jC[6]];do Qt=Qt+1;end;Jt=1;local tU=(cG[1]);ot[Jt]();Jt=Jt-0X1;do jC=TG[Qt];end;Qt=Qt+0X00001;do(ot)[0X00001]=yt[jC[6]];end;Qt=Qt+0x01;Qt=Qt+1;do jC=TG[Qt];end;Qt=Qt+1;local vU=(1);ot[2]=yt[jC[0X6]];Qt=Qt+0X1;ot[vU](ot[vU+0x1]);Jt=vU-1;Qt=Qt+0x1;Qt=Qt+0x1;Qt=Qt+1;ot[0X1]=tU[1][tU[2]];local uU=ot[1];jC=TG[Qt];Qt=Qt+1;vU=1;(ot)[vU+1]=uU;(ot)[vU]=uU[jC[0x001]];do Qt=Qt+1;end;vU=1;(ot[vU])(ot[vU+1]);Jt=vU-1;Qt=Qt+0X0001;Qt=Qt+1;Qt=Qt+0x1;do repeat local sw,iw=iG,(ot);if not(#sw>0x000)then else local fq={};for Ke,Oe in l,sw do for Qf,ff in l,Oe do if not(ff[1]==iw and ff[0X02]>=0X0)then else local ID=ff[0X2];if not fq[ID]then fq[ID]={iw[ID]};end;do ff[0X1]=fq[ID];end;do ff[2]=1;end;end;end;end;end;until true;end;return;end;else ot[1]=yt[jC[6]];Qt=Qt+0X001;Qt=Qt+0X1;jC=TG[Qt];Qt=Qt+1;do ot[0X1]=ot[1][jC[0X1]];end;do Qt=Qt+1;end;Qt=Qt+1;do jC=TG[Qt];end;Qt=Qt+0X01;do if not ot[1]then Qt=jC[5];end;end;end;end;else if EC~=23 then for Zh=jC[0X00002],jC[0X5]do do(ot)[Zh]=nil;end;end;else(ot)[jC[2]]={V({},1,jC[0X005])};end;end;end;end;else if EC<0X9 then do if not(EC<0X4)then if EC>=6 then if EC<7 then do if not(not(jC[6]<ot[jC[0X4]]))then else Qt=jC[2];end;end;else if EC==0x008 then else(ot)[0x1]=true;do jC=TG[Qt];end;Qt=Qt+1;yt[jC[0X6]]=ot[1];jC=TG[Qt];do Qt=Qt+0X1;end;Qt=jC[5];end;end;else if EC~=5 then(ot)[0]=yt[jC[6]];jC=TG[Qt];local os=(0X0);Qt=Qt+1;ot[1]=jC[6];Qt=Qt+1;(ot)[os]=ot[os](ot[os+0X1]);Jt=os;Qt=Qt+0X0001;do Qt=Qt+1;end;jC=TG[Qt];Qt=Qt+1;Qt=jC[5];else local LT=(cG[0x00000]);ot[0x00]=LT[0x0001][LT[2]];Qt=Qt+0x1;Qt=Qt+0X01;jC=TG[Qt];do Qt=Qt+0x1;end;(ot)[0x00000]=ot[0]==jC[0X00001];do jC=TG[Qt];end;Qt=Qt+0x1;Qt=jC[0x005];end;end;else if not(EC<2)then if EC~=0X3 then do ot[jC[2]]=ot[jC[5]]-ot[jC[4]];end;else ot[0X2]=yt[jC[6]];jC=TG[Qt];do Qt=Qt+1;end;ot[0x3]=jC[6];Qt=Qt+0X1;ot[4]=true;local IC=(0X02);do Qt=Qt+1;end;do ot[IC]=ot[IC](ot[IC+0X1],ot[IC+2]);end;Jt=IC;do Qt=Qt+0X1;end;local nC=ot[0X2];Qt=Qt+1;jC=TG[Qt];Qt=Qt+1;IC=2;ot[IC+0X0001]=nC;ot[IC]=nC[jC[0X1]];do jC=TG[Qt];end;Qt=Qt+1;ot[0X0004]=jC[6];Qt=Qt+1;IC=0x02;(ot)[IC]=ot[IC](ot[IC+1],ot[IC+2]);do Jt=IC;end;Qt=Qt+0X1;Qt=Qt+1;jC=TG[Qt];Qt=Qt+0X1;do ot[2]=ot[0X2][jC[0X1]];end;Qt=Qt+1;do Qt=Qt+0X1;end;do jC=TG[Qt];end;do Qt=Qt+0X1;end;Qt=jC[0x5];end;else if EC~=1 then(ot)[jC[2]]=w(ot[jC[0X5]],ot[jC[4]]);else do if ot[jC[5]]~=jC[0x0001]then else Qt=jC[0X0002];end;end;end;end;end;end;else do if EC>=0X0000D then do if not(EC<0X0000f)then do if not(EC>=16)then yt[jC[6]]=ot[jC[0X2]];else if EC~=17 then ot[jC[2]]=jC[0X6];else local cX=JG[jC[0x00005]];local fX=nil;local BX=(cX[0X04]);local zX=(#BX);if not(zX>0x00000)then else do fX={};end;for GJ=0X1,zX do local fJ=BX[GJ];if fJ[1]==0 then(fX)[GJ-1]={ot,fJ[0X2]};else(fX)[GJ-1]=cG[fJ[0X2]];end;end;H(iG,fX);end;do ot[jC[2]]=ed(yt,cX,fX);end;end;end;end;else if EC==0XE then local SF=cG[0];(ot)[0X0]=SF[0X1][SF[0x002]];do jC=TG[Qt];end;Qt=Qt+1;ot[0X0000]=ot[0X0]==jC[1];do jC=TG[Qt];end;Qt=Qt+0X001;if ot[0X00]then Qt=jC[5];end;else ot[0X1]=yt[jC[6]];jC=TG[Qt];Qt=Qt+1;do(ot)[1]=ot[0x1][jC[0X1]];end;Qt=Qt+0X0001;do Qt=Qt+0X1;end;jC=TG[Qt];Qt=Qt+0X1;if not(not ot[0X1])then else Qt=jC[5];end;end;end;end;else if EC>=11 then do if EC~=0X00c then(ot)[2]=yt[jC[0X06]];do Qt=Qt+0X001;end;Qt=Qt+0x1;Qt=Qt+1;Jt=0X2;ot[Jt]=ot[Jt]();do Qt=Qt+0x001;end;do Qt=Qt+0X1;end;jC=TG[Qt];do Qt=Qt+0X1;end;if not(ot[2])then else do Qt=jC[5];end;end;else ot[1]=yt[jC[6]];Qt=Qt+1;Qt=Qt+0X1;jC=TG[Qt];Qt=Qt+1;if not(ot[0X001])then else do Qt=jC[5];end;end;end;end;else do if EC~=0XA then do if not ot[jC[2]]then Qt=jC[5];end;end;else ot[0x1]=false;jC=TG[Qt];do Qt=Qt+0X1;end;yt[jC[6]]=ot[1];jC=TG[Qt];Qt=Qt+0x1;(ot)[1]=yt[jC[6]];jC=TG[Qt];Qt=Qt+0X1;local Kc=(1);ot[2]=jC[0X6];Qt=Qt+1;ot[Kc]=ot[Kc](ot[Kc+1]);do Jt=Kc;end;jC=TG[Qt];do Qt=Qt+0X1;end;if not(not ot[1])then else Qt=jC[5];end;end;end;end;end;end;end;end;end;end);do if pt then do if Pt then if lt~=1 then return ot[At](V(ot,At+0X1,Jt));else return ot[At]();end;elseif At then return V(ot,At,lt);end;end;else do if C(Pt)=='\115\116\114\in\103'then if not(M(Pt,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(M(Pt,'\^\046\-\:\%\d\043\:\032'))then E(Pt,0);else E("Luraph Script:"..(YG[Qt-1]or'\(i\110\116\er\110a\108\)')..": "..x(Pt),0);end;else(E)(Pt,0x0000);end;end;end;end;end;end;end;end;end;end;end;else do if not(lG<18)then if lG>=0X1b then if lG>=32 then if lG<34 then do if lG==0X0021 then hG=function(...)local vO,YO=1,({});local kO=I();local CO,mO=(kO==a and SG or kO),({[0X1]=FG,[0X0002]=YO});local Dd=0;local ZO,TO=Cd(...);ZO=ZO-0X00001;do for Sx=0X00,ZO do if not(IG>Sx)then do break;end;else do(YO)[Sx]=TO[Sx+1];end;end;end;end;do if not OG then TO=nil;elseif zG then do YO[IG]={n=ZO>=IG and ZO-IG+1 or 0,V(TO,IG+0x1,ZO+0X1)};end;end;end;if CO~=kO then(R)(hG,CO);end;local IO,AO,hO,nO=A(function()while true do local qa=(TG[vO]);local xa=qa[0X3];vO=vO+1;if xa<7 then if not(xa<3)then if not(xa>=5)then if xa==4 then YO[qa[0X00002]]=w(YO[qa[0x5]],YO[qa[4]]);else local Sf=(qa[2]);for ua=Sf,Sf+(qa[5]-1)do(YO)[ua]=TO[IG+(ua-Sf)+0x1];end;end;else if xa~=6 then else do if YO[qa[0x5]]==YO[qa[0X004]]then else vO=qa[2];end;end;end;end;else if not(xa<0x001)then do if xa~=2 then do YO[qa[2]]=qa[6];end;else do YO[0X0]=CO[qa[6]];end;qa=TG[vO];vO=vO+0X1;local gE=(nil);(YO)[0x0000]=YO[0x0][qa[1]];local mE=(0X000);vO=vO+0x0001;vO=vO+1;do qa=TG[vO];end;do vO=vO+1;end;local VE=(JG[qa[5]]);local FE=VE[0X4];local YE=#FE;if YE>0 then gE={};for Ty=0X01,YE do local Qy=(FE[Ty]);if Qy[1]~=0X0000 then(gE)[Ty-1]=cG[Qy[2]];else gE[Ty-0X1]={YO,Qy[0x2]};end;end;H(iG,gE);end;(YO)[1]=ed(CO,VE,gE);vO=vO+1;(YO[mE])(YO[mE+0X01]);do Dd=mE-1;end;vO=vO+0X001;repeat local s3,A3=iG,YO;if#s3>0 then local WS=({});for eR,JR in l,s3 do do for Aa,Ka in l,JR do if Ka[1]==A3 and Ka[2]>=0 then local lM=Ka[0X02];if not(not WS[lM])then else(WS)[lM]={A3[lM]};end;Ka[1]=WS[lM];Ka[2]=1;end;end;end;end;end;until true;return;end;end;else repeat local CI,FI,TI=iG,YO,(qa[2]);if#CI>0X0 then local kl={};for It,qt in l,CI do for EW,UW in l,qt do if UW[1]==FI and UW[2]>=TI then local gH=(UW[2]);if not kl[gH]then do kl[gH]={FI[gH]};end;end;UW[1]=kl[gH];UW[0X2]=1;end;end;end;end;until true;end;end;else if not(xa<0X000a)then if not(xa<12)then do if xa~=0X0D then local mH=JG[qa[5]];local NH,SH=mH[0X4],nil;local EH=(#NH);if EH>0X000 then SH={};for Zz=0x1,EH do local Dz=NH[Zz];if Dz[1]==0 then(SH)[Zz-1]={YO,Dz[2]};else(SH)[Zz-0X1]=cG[Dz[2]];end;end;H(iG,SH);end;(YO)[qa[0X2]]=ed(CO,mH,SH);else mO[qa[0X5]]=YO[qa[0x00002]];end;end;else if xa==0XB then vO=qa[0X5];else local bu=YO[qa[5]]/YO[qa[0X4]];YO[qa[2]]=bu-bu%0X1;end;end;else if xa<0X08 then(YO)[qa[2]]=CO[qa[0X6]];else do if xa~=9 then do if YO[qa[5]]==YO[qa[4]]then vO=qa[0x2];end;end;else YO[qa[0X2]]={V({},0x001,qa[0X5])};end;end;end;end;end;end;end);if not(IO)then if C(AO)~="\115tr\i\110\g"then E(AO,0);else if M(AO,'a\116tem\112t\ t\111\ y\ie\108\d\ \097\099r\111\s\115\ m\101\116a\m\101\116\h\o\100\/C%\-\099a\108\108\032b\ou\110\d\097\114y')then return coroutine.yield();end;if M(AO,"^.-:%d+: ")then E("Luraph Script:"..(YG[vO-1]or"(internal)").."\:\032"..x(AO),0X000);else(E)(AO,0x000);end;end;else if AO then if nO==0X0001 then do return YO[hO]();end;else return YO[hO](V(YO,hO+0X001,Dd));end;elseif hO then return V(YO,hO,nO);end;end;end;else hG=function(...)local ge,Fe={},(1);local Je=(0);local be={[0X1]=FG,[0X0002]=ge};local je=I();local oe,ce=Cd(...);oe=oe-1;local Ue=((je==a and SG or je));for Gx=0,oe do if not(IG>Gx)then break;else ge[Gx]=ce[Gx+1];end;end;if not OG then ce=nil;elseif not(zG)then else do(ge)[IG]={n=oe>=IG and oe-IG+1 or 0,V(ce,IG+0x00001,oe+0X1)};end;end;if Ue~=je then R(hG,Ue);end;local Ge,Le,Re,ee=A(function()while true do local IW=TG[Fe];local dW=IW[0X3];Fe=Fe+1;if dW<0X00e then if not(dW<0x7)then if dW<0Xa then if not(dW>=8)then do(ge)[0X3]=Ue[IW[6]];end;local Mj=3;Fe=Fe+1;Fe=Fe+1;do Fe=Fe+1;end;(ge)[0X0004]=ge[2];Fe=Fe+0X1;do ge[Mj]=ge[Mj](ge[Mj+1]);end;Je=Mj;Fe=Fe+1;do Fe=Fe+0X1;end;IW=TG[Fe];do Fe=Fe+1;end;(ge)[0X03]=ge[3][IW[1]];do IW=TG[Fe];end;Fe=Fe+0X1;if not(not ge[3])then else do Fe=IW[5];end;end;else if dW==0x9 then if ge[IW[5]]==ge[IW[0X4]]then else Fe=IW[2];end;else do for yk=IW[0X2],IW[0x005]do(ge)[yk]=nil;end;end;end;end;else if not(dW<12)then if dW==13 then(ge)[4]=ge[0X3][IW[1]];do Fe=Fe+1;end;do Fe=Fe+0X01;end;IW=TG[Fe];do Fe=Fe+0X1;end;ge[0X5]=Ue[IW[0X06]];IW=TG[Fe];Fe=Fe+1;if ge[0X4]==ge[5]then else do Fe=IW[2];end;end;else ge[IW[0X2]]=Ue[IW[6]];end;else if dW~=0x0b then do ge[3]=Ue[IW[6]];end;Fe=Fe+0X1;local Tk=(0X0003);(ge)[0X4]=ge[0x0002];Fe=Fe+1;(ge)[Tk]=ge[Tk](ge[Tk+1]);Je=Tk;Fe=Fe+0X1;Fe=Fe+1;IW=TG[Fe];Fe=Fe+1;if ge[0X3]~=IW[1]then Fe=IW[0x02];end;else(ge)[7]=Ue[IW[0X6]];Fe=Fe+1;Fe=Fe+0X00001;do IW=TG[Fe];end;Fe=Fe+1;(Ue)[IW[6]]=ge[7];IW=TG[Fe];Fe=Fe+0X1;ge[7]=Ue[IW[6]];Fe=Fe+0X1;do Fe=Fe+1;end;IW=TG[Fe];Fe=Fe+1;ge[7]=ge[0X07][IW[1]];Fe=Fe+0X001;Fe=Fe+0X00001;Fe=Fe+0X1;ge[8]=ge[0x2];IW=TG[Fe];Fe=Fe+0X001;ge[9]=IW[6];do IW=TG[Fe];end;Fe=Fe+0X1;(ge)[10]=Ue[IW[6]];Fe=Fe+0X01;do Fe=Fe+1;end;IW=TG[Fe];local gA=0XA;Fe=Fe+0X01;(ge)[10]=ge[0Xa][IW[1]];do Fe=Fe+1;end;Fe=Fe+1;IW=TG[Fe];do Fe=Fe+1;end;do(ge)[0Xb]=IW[0X006];end;IW=TG[Fe];Fe=Fe+0X0001;do ge[0XC]=IW[0X6];end;IW=TG[Fe];Fe=Fe+0X001;(ge)[13]=IW[0X6];Fe=Fe+1;local eA,rA=0x00004,0X000;do if eA==0x0 then else do Je=gA+eA-1;end;end;end;local PA,SA=nil,nil;if eA~=0x0001 then PA,SA=Cd(ge[gA](V(ge,gA+0X1,Je)));else do PA,SA=Cd(ge[gA]());end;end;do if rA~=0x1 then do if rA~=0 then PA=gA+rA-2;Je=PA+0x1;else PA=PA+gA-0X0001;Je=PA;end;end;local IP=0x0;for IX=gA,PA do do IP=IP+0x1;end;do(ge)[IX]=SA[IP];end;end;else Je=gA-0X0001;end;end;Fe=Fe+0x1;Fe=Fe+0x01;do Fe=Fe+1;end;gA=0X07;ge[gA](V(ge,gA+1,Je));do Je=gA-1;end;end;end;end;else if not(dW<3)then do if not(dW>=5)then if dW==0x4 then local rM=JG[IW[5]];local RM,yM=rM[0X4],nil;local sM=#RM;if sM>0X000 then do yM={};end;for p5=0X0001,sM do local b5=(RM[p5]);if b5[1]==0 then do(yM)[p5-1]={ge,b5[2]};end;else(yM)[p5-1]=cG[b5[0X2]];end;end;(H)(iG,yM);end;do ge[IW[2]]=ed(Ue,rM,yM);end;else Fe=IW[5];end;else if dW~=0x6 then ge[7]=Ue[IW[6]];local RH=7;Fe=Fe+0x1;do(ge)[8]=ge[6];end;Fe=Fe+0X1;do(ge)[RH]=ge[RH](ge[RH+0X1]);end;Je=RH;Fe=Fe+1;Fe=Fe+0x0001;IW=TG[Fe];Fe=Fe+0X001;do if ge[0X007]==IW[0X1]then else Fe=IW[2];end;end;else ge[0X00006][IW[6]]=IW[1];IW=TG[Fe];do Fe=Fe+0X01;end;do ge[6][IW[6]]=IW[0X1];end;do IW=TG[Fe];end;Fe=Fe+1;do(ge)[0X07]=Ue[IW[0X6]];end;do Fe=Fe+0X1;end;Fe=Fe+0x1;local qb=(7);do Fe=Fe+0x1;end;ge[0x8]=ge[6];Fe=Fe+1;ge[0x0009]={};local jb=(nil);do IW=TG[Fe];end;Fe=Fe+1;local Rb=JG[IW[5]];local Yb=Rb[4];local pb=#Yb;if pb>0 then jb={};for Eb=1,pb do local vb=(Yb[Eb]);if vb[0X001]==0x0 then(jb)[Eb-0x1]={ge,vb[2]};else do jb[Eb-0x1]=cG[vb[0x2]];end;end;end;H(iG,jb);end;ge[10]=ed(Ue,Rb,jb);IW=TG[Fe];do Fe=Fe+1;end;do(ge[0X9])[IW[6]]=ge[10];end;do IW=TG[Fe];end;do Fe=Fe+1;end;Rb=JG[IW[5]];jb=nil;Yb=Rb[4];pb=#Yb;do if not(pb>0X00)then else do jb={};end;for NW=0x01,pb do local nW=Yb[NW];if nW[0x1]==0 then jb[NW-1]={ge,nW[2]};else(jb)[NW-0X1]=cG[nW[2]];end;end;H(iG,jb);end;end;ge[0X00A]=ed(Ue,Rb,jb);IW=TG[Fe];do Fe=Fe+1;end;(ge[9])[IW[6]]=ge[10];Fe=Fe+0x1;ge[qb](ge[qb+0X01],ge[qb+0X2]);Je=qb-1;Fe=Fe+0X1;do Fe=Fe+1;end;end;end;end;else do if dW>=0X1 then do if dW~=2 then ge[0x4]=Ue[IW[6]];local h7=(0x0);local c7=5;IW=TG[Fe];Fe=Fe+1;ge[0X5]=Ue[IW[0x00006]];Fe=Fe+1;Fe=Fe+0X00001;Fe=Fe+0x1;do(ge)[6]=ge[0X2];end;Fe=Fe+1;local W7=0X2;if W7==0x00000 then else Je=c7+W7-0X1;end;local Q7,e7=nil,(nil);if W7==0X1 then Q7,e7=Cd(ge[c7]());else Q7,e7=Cd(ge[c7](V(ge,c7+0x1,Je)));end;if h7~=1 then if h7==0 then do Q7=Q7+c7-0X1;end;Je=Q7;else Q7=c7+h7-0x02;Je=Q7+0X1;end;local ob=0;do for iN=c7,Q7 do ob=ob+0X01;do(ge)[iN]=e7[ob];end;end;end;else Je=c7-1;end;Fe=Fe+0X00001;c7=0X4;do W7=0x0;end;h7=0x4;if W7~=0X0 then Je=c7+W7-0X1;end;Q7,e7=nil;if W7~=1 then Q7,e7=Cd(ge[c7](V(ge,c7+0x00001,Je)));else Q7,e7=Cd(ge[c7]());end;do if h7==0X00001 then do Je=c7-0x1;end;else if h7~=0 then do Q7=c7+h7-0X2;end;Je=Q7+1;else Q7=Q7+c7-1;Je=Q7;end;local T9=(0);for sr=c7,Q7 do T9=T9+1;(ge)[sr]=e7[T9];end;end;end;Fe=Fe+0x1;Fe=Fe+1;IW=TG[Fe];do Fe=Fe+0X1;end;c7=0X4;local x7=(h(function(...)t();for m2,V2 in...do t(true,m2,V2);end;end));(x7)(ge[c7],ge[c7+1],ge[c7+0x2]);Je=c7;(ge)[c7]=x7;Fe=IW[5];else(ge)[IW[2]]=L(ge[IW[0X0005]],ge[IW[4]]);end;end;else(ge)[IW[2]]=ge[IW[0x5]]>=ge[IW[4]];end;end;end;end;else do if not(dW>=21)then do if not(dW>=17)then do if not(dW<15)then if dW~=0X10 then local OV=(IW[2]);local oV,aV,NV=ge[OV]();do if oV then ge[OV+1]=aV;ge[OV+0X2]=NV;Fe=IW[0X5];end;end;else local Ui=(IW[0X00002]);local gi=(IW[4]-1)*0X32;local Ni=ge[Ui];for Dd=0X1,IW[5]do(Ni)[gi+Dd]=ge[Ui+Dd];end;end;else repeat local Uh,vh,Th=iG,ge,IW[0x2];if#Uh>0X0000 then local X_={};for sE,qE in l,Uh do do for K9,b9 in l,qE do if b9[1]==vh and b9[2]>=Th then local zb=b9[0X2];if not(not X_[zb])then else X_[zb]={vh[zb]};end;do b9[0X00001]=X_[zb];end;do(b9)[0x002]=1;end;end;end;end;end;end;until true;end;end;else if not(dW<0X000013)then if dW~=0X014 then ge[0X0008]=Ue[IW[0X0006]];IW=TG[Fe];Fe=Fe+1;do ge[0X0009]=Ue[IW[0X6]];end;Fe=Fe+1;Fe=Fe+1;do IW=TG[Fe];end;Fe=Fe+0x01;if ge[8]==ge[0X9]then Fe=IW[0X2];end;else local ss=(IW[0X00002]);local Ts=h(function(...)(t)();do for C6,Y6,O6,w6,P6,f6,z6,D6,A6,X6 in...do(t)(true,{C6,Y6,O6,w6,P6,f6,z6,D6,A6,X6});end;end;end);Ts(ge[ss],ge[ss+0x1],ge[ss+2]);Je=ss;ge[ss]=Ts;Fe=IW[5];end;else if dW==0X000012 then(ge)[IW[0X0002]]={V({},1,IW[0X5])};else ge[IW[2]]=ge[IW[0x05]]>ge[IW[4]];end;end;end;end;else if not(dW<24)then if dW<0X1A then if dW==25 then ge[0X0]=Ue[IW[0x6]];Fe=Fe+0X01;Fe=Fe+1;IW=TG[Fe];Fe=Fe+0X1;do ge[1]=Ue[IW[6]];end;do Fe=Fe+1;end;do Fe=Fe+0X1;end;Fe=Fe+0X1;local oU,DU,pU=1,0,(0X1);do if oU==0X0000 then else Je=pU+oU-0X1;end;end;local PU,QU=nil,(nil);if oU~=0X1 then do PU,QU=Cd(ge[pU](V(ge,pU+1,Je)));end;else PU,QU=Cd(ge[pU]());end;if DU~=1 then do if DU~=0 then PU=pU+DU-0X0002;Je=PU+1;else PU=PU+pU-0x00001;do Je=PU;end;end;end;local dK=0;for PD=pU,PU do do dK=dK+0X1;end;do(ge)[PD]=QU[dK];end;end;else Je=pU-0X01;end;Fe=Fe+1;pU=0X0;oU=0X0;DU=0X04;if oU==0 then else do Je=pU+oU-0X00001;end;end;PU,QU=nil;if oU==0x0001 then PU,QU=Cd(ge[pU]());else PU,QU=Cd(ge[pU](V(ge,pU+0X00001,Je)));end;if DU~=0X1 then if DU~=0 then do PU=pU+DU-0x02;end;Je=PU+1;else do PU=PU+pU-1;end;Je=PU;end;local Ik=0;for kT=pU,PU do Ik=Ik+0x1;ge[kT]=QU[Ik];end;else Je=pU-1;end;Fe=Fe+0X1;do Fe=Fe+1;end;IW=TG[Fe];Fe=Fe+0X1;pU=0X0;local RU=h(function(...)(t)();for yr,Jr in...do t(true,yr,Jr);end;end);(RU)(ge[pU],ge[pU+0X001],ge[pU+2]);Je=pU;ge[pU]=RU;Fe=IW[0X005];else repeat local Lj,uj=iG,(ge);do if#Lj>0 then local zP=({});for Fg,hg in l,Lj do do for As,Qs in l,hg do if not(Qs[0X1]==uj and Qs[2]>=0X0)then else local It=Qs[0x2];if not zP[It]then do zP[It]={uj[It]};end;end;(Qs)[0x1]=zP[It];Qs[0X02]=1;end;end;end;end;end;end;until true;do return;end;end;else if dW~=27 then(ge)[0X07]=ge[3][IW[1]];Fe=Fe+1;Fe=Fe+1;do IW=TG[Fe];end;Fe=Fe+1;if ge[7]~=IW[0X1]then do Fe=IW[0X002];end;end;else(ge)[IW[0X2]]=IW[6];end;end;else do if not(dW>=22)then do ge[0X8]=Ue[IW[0X6]];end;do Fe=Fe+0X0001;end;Fe=Fe+1;do Fe=Fe+0X0001;end;do(ge)[9]=ge[6];end;IW=TG[Fe];local qZ=(0X8);do Fe=Fe+0X0001;end;do ge[0xa]=IW[6];end;Fe=Fe+0X1;ge[qZ]=ge[qZ](ge[qZ+1],ge[qZ+0X2]);do Je=qZ;end;do Fe=Fe+0X1;end;do Fe=Fe+1;end;IW=TG[Fe];Fe=Fe+1;if not(not ge[0x8])then else do Fe=IW[5];end;end;else if dW~=0X17 then else(ge)[IW[0X0002]]=ge[IW[0X005]]/ge[IW[0X04]];end;end;end;end;end;end;end;end;end);if not(Ge)then if C(Le)~="string"then(E)(Le,0);else do if M(Le,"a\116\116e\m\p\116 t\o\ \y\i\e\108\d\ ac\114o\s\s\ \m\101\116\097\109et\ho\100\047\C\037\-\ca\l\l\ \098\ou\110\da\114\121")then return coroutine.yield();end;end;if M(Le,"^.-:%d+: ")then(E)('Lura\p\h \S\c\114\105pt\058'..(YG[Fe-0X1]or"(internal)")..'\058\032'..x(Le),0x0);else E(Le,0x0);end;end;else do if Le then if ee~=0X1 then do return ge[Re](V(ge,Re+1,Je));end;else return ge[Re]();end;elseif not(Re)then else do return V(ge,Re,ee);end;end;end;end;end;end;end;else if lG>=35 then if lG~=36 then do hG=function(...)local H4,y4,b4=1,{},(0X0);local s4=I();local w4,g4=(s4==a and SG or s4),({[0X1]=FG,[0X0002]=y4});local P4,K4=Cd(...);P4=P4-0X1;do for Vk=0X0,P4 do if not(IG>Vk)then do break;end;else(y4)[Vk]=K4[Vk+0x0001];end;end;end;if not OG then K4=nil;elseif zG then do y4[IG]={n=P4>=IG and P4-IG+1 or 0,V(K4,IG+1,P4+1)};end;end;do if w4~=s4 then R(hG,w4);end;end;local l4,I4,U4,C4=A(function()while true do local U0=(TG[H4]);local G0=U0[0X0003];do H4=H4+1;end;if G0<9 then if G0<0X04 then if G0<2 then if G0~=0x1 then else(y4)[U0[0x2]]=w4[U0[6]];end;else if G0==0x0003 then g4[U0[5]]=y4[U0[0x0002]];else do if not(not y4[U0[2]])then else do H4=U0[0X5];end;end;end;end;end;else do if not(G0>=0X6)then do if G0==0X0005 then local kE=(U0[0x0002]);local mE,ME=y4[kE]();if mE then for e8=0X0001,U0[4]do do y4[kE+e8]=ME[e8];end;end;H4=U0[0X005];end;else for Ln=U0[0X0002],U0[0X5]do y4[Ln]=nil;end;end;end;else if not(G0>=0x7)then local P9=(U0[2]);local f9,D9=y4[P9]();if not(f9)then else H4=U0[0x005];do y4[P9+3]=D9;end;end;else if G0~=8 then do if not(not(y4[U0[5]]<y4[U0[0X4]]))then else H4=U0[0X00002];end;end;else do repeat local ic,Qc=iG,(y4);do if not(#ic>0x0)then else local en={};for u1,i1 in l,ic do for tA,TA in l,i1 do do if not(TA[1]==Qc and TA[2]>=0)then else local xf=TA[0X2];if not(not en[xf])then else en[xf]={Qc[xf]};end;TA[1]=en[xf];(TA)[0X2]=1;end;end;end;end;end;end;until true;end;return;end;end;end;end;end;else if G0>=0XE then if G0<16 then if G0==0XF then do y4[U0[2]]=y4[U0[5]]~=y4[U0[4]];end;else if not(not(y4[U0[0X0005]]<=y4[U0[4]]))then else do H4=U0[2];end;end;end;else if not(G0<17)then if G0==0X000012 then y4[U0[0X2]]=U0[0X6];else local a0=((U0[0X0004]-1)*50);local i0=U0[0X002];local u0=(y4[i0]);for Py=1,U0[5]do do u0[a0+Py]=y4[i0+Py];end;end;end;else do repeat local kf,Hf=iG,(y4);if#kf>0x0 then local CS=({});for V1,a1 in l,kf do do for sU,RU in l,a1 do if not(RU[1]==Hf and RU[0X002]>=0)then else local h9=(RU[0X2]);if not(not CS[h9])then else CS[h9]={Hf[h9]};end;(RU)[0X01]=CS[h9];do RU[2]=1;end;end;end;end;end;end;until true;end;local j9=U0[0x2];return false,j9,j9+U0[5]-0x02;end;end;else if G0<11 then if G0~=10 then H4=U0[5];else(y4)[0X0]=w4[U0[0X6]];local jT=(nil);do U0=TG[H4];end;local ZT=(0);H4=H4+1;local JT=(y4[0X000]);(y4)[ZT+1]=JT;(y4)[ZT]=JT[U0[0x1]];U0=TG[H4];do H4=H4+1;end;(y4)[0X2]=U0[0X0006];H4=H4+0x001;ZT=0;y4[ZT]=y4[ZT](y4[ZT+0X0001],y4[ZT+0X00002]);b4=ZT;do H4=H4+1;end;H4=H4+0X1;U0=TG[H4];H4=H4+0X001;(y4)[1]=w4[U0[6]];do H4=H4+1;end;H4=H4+0X1;do U0=TG[H4];end;do H4=H4+1;end;(y4)[0X1]=y4[0X1][U0[1]];U0=TG[H4];H4=H4+1;local UT=(JG[U0[0x5]]);local OT=(UT[4]);local sT=#OT;if not(sT>0)then else do jT={};end;for Uf=0X1,sT do local gf=OT[Uf];do if gf[1]==0 then jT[Uf-1]={y4,gf[2]};else(jT)[Uf-1]=cG[gf[2]];end;end;end;(H)(iG,jT);end;do(y4)[2]=ed(w4,UT,jT);end;H4=H4+0X1;ZT=1;(y4[ZT])(y4[ZT+0X1]);b4=ZT-1;do H4=H4+1;end;H4=H4+1;H4=H4+1;repeat local VX,WX=iG,y4;do if#VX>0 then local nc={};do for zA,jA in l,VX do do for ZO,DO in l,jA do if not(DO[1]==WX and DO[2]>=0x0)then else local hC=DO[2];if not nc[hC]then(nc)[hC]={WX[hC]};end;DO[1]=nc[hC];DO[0x2]=1;end;end;end;end;end;end;end;until true;return;end;else if not(G0>=12)then do(y4)[U0[0x2]]={V({},1,U0[5])};end;else if G0==13 then local Oz=(JG[U0[0X05]]);local Tz,jz=Oz[0X004],(nil);local Kz=(#Tz);do if Kz>0X000 then jz={};for Rq=0X1,Kz do local zq=(Tz[Rq]);if zq[1]==0X0 then(jz)[Rq-0X1]={y4,zq[2]};else jz[Rq-0X1]=cG[zq[2]];end;end;(H)(iG,jz);end;end;y4[U0[0X2]]=ed(w4,Oz,jz);else do(y4)[0]=w4[U0[6]];end;H4=H4+1;H4=H4+0X00001;U0=TG[H4];H4=H4+1;if not(y4[0X0])then else H4=U0[0X005];end;end;end;end;end;end;end;end);if l4 then if I4 then if C4~=1 then return y4[U4](V(y4,U4+0X00001,b4));else return y4[U4]();end;elseif U4 then return V(y4,U4,C4);end;else do if C(I4)~="string"then E(I4,0X0);else if M(I4,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(M(I4,"^.-:%d+: "))then(E)(I4,0x000);else E("Lur\097\112h\ \S\099ri\112t\:"..(YG[H4-1]or"(internal)").."\:\ "..x(I4),0X0);end;end;end;end;end;end;else hG=function(...)local jp,Up=0X001,({});local Fp={[0X0002]=Up,[0X1]=FG};local op=I();local dp=0;local kp,Np=Cd(...);kp=kp-1;local ap=(op==a and SG or op);for uc=0X00,kp do do if IG>uc then(Up)[uc]=Np[uc+0X1];else break;end;end;end;if not OG then Np=nil;elseif zG then do Up[IG]={n=kp>=IG and kp-IG+0x1 or 0X0,V(Np,IG+1,kp+1)};end;end;if ap~=op then(R)(hG,ap);end;local Dp,Gp,Qp,Kp=A(function()while true do local am=(TG[jp]);local Nm=(am[0X3]);do jp=jp+0X1;end;if Nm>=7 then if not(Nm>=0X00b)then if Nm<9 then if Nm~=0x08 then local la=(JG[am[5]]);local La=la[4];local fa=(nil);local Ua=(#La);if not(Ua>0)then else do fa={};end;do for Gm=1,Ua do local Fm=(La[Gm]);do if Fm[0X1]~=0 then fa[Gm-0x1]=cG[Fm[0x0002]];else(fa)[Gm-0X1]={Up,Fm[0X00002]};end;end;end;end;(H)(iG,fa);end;Up[am[0x0002]]=ed(ap,la,fa);else local hb=(am[5]);local ab=(Up[hb]);for vn=hb+1,am[4]do ab=ab..Up[vn];end;do(Up)[am[0X02]]=ab;end;end;else if Nm~=10 then repeat local Ar,mr=iG,(Up);if#Ar>0X00 then local sC=({});do for Gr,Jr in l,Ar do for Ow,Mw in l,Jr do do if Mw[0x1]==mr and Mw[0X00002]>=0x000 then local Of=Mw[0x2];if not(not sC[Of])then else(sC)[Of]={mr[Of]};end;do(Mw)[0X1]=sC[Of];end;Mw[2]=0x0001;end;end;end;end;end;end;until true;return;else do(Up)[0X00001]=ap[am[0X6]];end;do am=TG[jp];end;do jp=jp+0x1;end;(Up)[0X1]=Up[1][am[1]];do jp=jp+1;end;jp=jp+1;do am=TG[jp];end;jp=jp+1;local mW=(nil);local YW=JG[am[0X5]];local jW=(YW[0X4]);local tW,pW=#jW,1;if not(tW>0)then else mW={};for ih=0X1,tW do local Ch=jW[ih];if Ch[1]~=0 then do(mW)[ih-1]=cG[Ch[0X00002]];end;else mW[ih-0X0001]={Up,Ch[2]};end;end;H(iG,mW);end;do Up[2]=ed(ap,YW,mW);end;do jp=jp+1;end;Up[pW](Up[pW+0X00001]);dp=pW-0x0001;jp=jp+1;repeat local TD,JD=iG,(Up);do if#TD>0 then local qH=({});for LB,EB in l,TD do do for NW,HW in l,EB do if not(HW[1]==JD and HW[2]>=0X0)then else local Ai=HW[0x02];if not qH[Ai]then do(qH)[Ai]={JD[Ai]};end;end;HW[1]=qH[Ai];HW[2]=1;end;end;end;end;end;end;until true;return;end;end;else do if Nm<13 then do if Nm~=0Xc then for VG=am[0X2],am[0x5]do Up[VG]=nil;end;else Up[am[2]]=Up[am[5]]-Up[am[4]];end;end;else do if Nm==14 then local R3=Up[am[5]]/Up[am[0X4]];(Up)[am[2]]=R3-R3%0X1;else(Up)[am[2]]=am[6];end;end;end;end;end;else do if Nm<0x0003 then do if Nm>=1 then if Nm~=0X00002 then if not(Up[am[5]]<Up[am[4]])then else do jp=am[0X2];end;end;else end;else Up[am[0X2]]=ap[am[0X6]];end;end;else do if Nm>=0x5 then if Nm==0X06 then jp=am[0x05];else(Up)[0]=ap[am[0X6]];local Bs=(0X0);do am=TG[jp];end;do jp=jp+0x1;end;local Ns=(Up[0]);do Up[Bs+0X00001]=Ns;end;do(Up)[Bs]=Ns[am[1]];end;am=TG[jp];jp=jp+0x001;(Up)[2]=am[0x6];jp=jp+0X0001;do Bs=0X000;end;do Up[Bs]=Up[Bs](Up[Bs+1],Up[Bs+0x02]);end;dp=Bs;jp=jp+0X1;jp=jp+1;do am=TG[jp];end;jp=jp+1;(Up)[0X01]=ap[am[0x06]];jp=jp+0X1;do jp=jp+0x1;end;am=TG[jp];jp=jp+0x001;if Up[1]then jp=am[0x5];end;end;else if Nm~=4 then do(Up)[am[0x2]]={V({},1,am[0X5])};end;else local zH,gH=am[2],(Up[am[0X5]]);do(Up)[zH+0X0001]=gH;end;(Up)[zH]=gH[am[1]];end;end;end;end;end;end;end;end);if not(Dp)then if C(Gp)=="\s\116r\105\110\103"then do if M(Gp,"a\116t\e\109\pt \116\o\ yi\101\108\d \097\099\114o\115s\ \m\101ta\me\116\h\o\d/\067\%\-\c\097\l\l\ b\111undar\121")then do return coroutine.yield();end;end;end;if not(M(Gp,"^.-:%d+: "))then E(Gp,0);else E("Luraph Script:"..(YG[jp-1]or"(internal)")..'\: '..x(Gp),0X00);end;else(E)(Gp,0);end;else do if Gp then if Kp==0X1 then do return Up[Qp]();end;else return Up[Qp](V(Up,Qp+0X1,dp));end;elseif not(Qp)then else return V(Up,Qp,Kp);end;end;end;end;end;else hG=function(...)local m9,J9=0x1,({});local H9,v9={[0X1]=FG,[0X0002]=J9},0;local c9=(I());local f9,N9=Cd(...);f9=f9-0x1;local A9=((c9==a and SG or c9));for cr=0,f9 do if not(IG>cr)then do break;end;else do(J9)[cr]=N9[cr+0X0001];end;end;end;do if not OG then do N9=nil;end;elseif zG then J9[IG]={n=f9>=IG and f9-IG+0X1 or 0,V(N9,IG+0x1,f9+1)};end;end;if A9~=c9 then(R)(hG,A9);end;local o9,X9,h9,s9=A(function()while true do local ru=(TG[m9]);local tu=ru[3];do m9=m9+0X0001;end;if not(tu<10)then if not(tu>=15)then if tu<12 then if tu~=11 then do J9[ru[0X002]]=ru[6];end;else(J9)[ru[2]]={V({},1,ru[5])};end;else if not(tu>=13)then do m9=ru[5];end;else if tu~=14 then(J9)[0x0]=A9[ru[0X006]];local Ev=(0);ru=TG[m9];do m9=m9+0X1;end;J9[1]=ru[0X06];do m9=m9+1;end;(J9)[Ev]=J9[Ev](J9[Ev+0X01]);v9=Ev;do ru=TG[m9];end;m9=m9+1;(J9)[1]=J9[0][ru[0X01]];ru=TG[m9];do m9=m9+1;end;do if J9[1]then do m9=ru[5];end;end;end;else local GH=ru[0X2];local BH=(J9[GH+2]);local AH,xH=J9[GH],(J9[GH+0X1]);(J9)[GH]=h(function()for r9=AH,xH,BH do t(true,r9);end;end);m9=ru[0X005];end;end;end;else do if tu<0X11 then if tu==0X0010 then(J9)[1]=A9[ru[6]];ru=TG[m9];m9=m9+1;J9[1]=J9[1][ru[0X1]];do ru=TG[m9];end;m9=m9+1;if not J9[1]then do m9=ru[5];end;end;else J9[1]=A9[ru[6]];do m9=m9+0X01;end;m9=m9+0X0001;ru=TG[m9];do m9=m9+0X001;end;do if J9[1]then m9=ru[5];end;end;end;else if tu>=0x00012 then if tu==19 then J9[ru[0X02]]=J9[ru[0X005]]/J9[ru[0x4]];else for Oz=ru[2],ru[0X05]do(J9)[Oz]=nil;end;end;else local T6,O6=ru[0x2],(J9[ru[0X00005]]);(J9)[T6+1]=O6;(J9)[T6]=O6[ru[1]];end;end;end;end;else if not(tu>=0X005)then do if not(tu<2)then if tu>=3 then if tu~=4 then(J9)[0X01]=A9[ru[6]];do m9=m9+1;end;m9=m9+1;ru=TG[m9];do m9=m9+0X1;end;do(J9)[1]=J9[0X0001][ru[0X001]];end;do ru=TG[m9];end;local j3=(1);m9=m9+0x1;do(J9)[0X2]=ru[0X00006];end;m9=m9+1;do J9[j3]=J9[j3](J9[j3+0X1]);end;v9=j3;m9=m9+0x1;m9=m9+1;do ru=TG[m9];end;m9=m9+0X1;if not(not J9[1])then else m9=ru[0X5];end;else J9[2]=A9[ru[6]];do m9=m9+0X1;end;m9=m9+1;ru=TG[m9];local mu=0X002;local du=JG[ru[0X5]];m9=m9+0X001;local bu,qu=du[4],nil;local Ju=(#bu);if not(Ju>0X00)then else do qu={};end;for Yl=1,Ju do local Xl=(bu[Yl]);if Xl[0x001]==0 then(qu)[Yl-1]={J9,Xl[0X2]};else do qu[Yl-1]=cG[Xl[2]];end;end;end;H(iG,qu);end;(J9)[0X00003]=ed(A9,du,qu);local fu=(cG[1]);do m9=m9+0X1;end;J9[mu](J9[mu+0X1]);do v9=mu-0x1;end;m9=m9+0x1;do m9=m9+1;end;m9=m9+1;do J9[2]=fu[0X1][fu[0X002]];end;m9=m9+0x1;m9=m9+1;ru=TG[m9];m9=m9+1;mu=0x2;local nu=(J9[0X2]);do(J9)[mu+0X1]=nu;end;J9[mu]=nu[ru[1]];m9=m9+0X1;mu=2;J9[mu](J9[mu+0X1]);v9=mu-1;do m9=m9+0X1;end;repeat local Ib,Fb=iG,(J9);if#Ib>0 then local cg=({});do for ML,PL in l,Ib do do for Dd,B5 in l,PL do if not(B5[0x001]==Fb and B5[0X2]>=0X1)then else local FO=B5[2];if not cg[FO]then(cg)[FO]={Fb[FO]};end;B5[1]=cg[FO];B5[2]=0x00001;end;end;end;end;end;end;until true;ru=TG[m9];m9=m9+0X1;do m9=ru[0X5];end;end;else end;else if tu==0x00001 then J9[1]=A9[ru[0X06]];ru=TG[m9];m9=m9+0X001;(J9)[0X1]=J9[1][ru[1]];do ru=TG[m9];end;do m9=m9+0X1;end;if not J9[1]then m9=ru[0X5];end;else J9[1]=A9[ru[0X6]];local aK=J9[1];m9=m9+1;do m9=m9+0X00001;end;ru=TG[m9];m9=m9+0X1;local iK=(1);(J9)[iK+0X1]=aK;(J9)[iK]=aK[ru[1]];do ru=TG[m9];end;m9=m9+1;(J9)[0X3]=ru[0X6];m9=m9+0X01;do iK=1;end;do J9[iK]=J9[iK](J9[iK+0X1],J9[iK+2]);end;v9=iK;m9=m9+0X00001;m9=m9+0x0001;ru=TG[m9];m9=m9+1;do if not J9[1]then m9=ru[0x005];end;end;end;end;end;else if tu>=0X7 then if not(tu<0X00008)then do if tu==0X9 then local ZD,iD=JG[ru[5]],nil;local RD=(ZD[4]);local fD=#RD;if not(fD>0X0)then else iD={};do for cv=1,fD do local gv=(RD[cv]);if gv[1]==0X0 then do(iD)[cv-0X1]={J9,gv[0x00002]};end;else(iD)[cv-0x1]=cG[gv[2]];end;end;end;H(iG,iD);end;do(J9)[ru[0X2]]=ed(A9,ZD,iD);end;else if not(not J9[ru[2]])then else m9=ru[5];end;end;end;else repeat local Io,xo=iG,(J9);if not(#Io>0X0)then else local Dd={};for iz,oz in l,Io do for z5,v5 in l,oz do do if not(v5[1]==xo and v5[0X2]>=0)then else local YE=v5[2];if not(not Dd[YE])then else Dd[YE]={xo[YE]};end;v5[0X1]=Dd[YE];do(v5)[2]=1;end;end;end;end;end;end;until true;return;end;else do if tu==0x006 then(J9)[ru[0X2]]=A9[ru[0X06]];else(J9)[1]=A9[ru[0x006]];do ru=TG[m9];end;m9=m9+0X00001;J9[2]=ru[0X6];m9=m9+1;local qZ=(0X1);J9[qZ]=J9[qZ](J9[qZ+1]);v9=qZ;ru=TG[m9];m9=m9+1;do(J9)[0x2]=J9[0x00001][ru[1]];end;do ru=TG[m9];end;m9=m9+1;do if not(not J9[2])then else do m9=ru[0X5];end;end;end;end;end;end;end;end;end;end);if not(o9)then if C(X9)=='\115\116r\105\110g'then if not(M(X9,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if M(X9,"^\.\-\:\037\100\+: ")then(E)("Luraph Script:"..(YG[m9-0X1]or"\(\105nt\er\110a\l\041").."\:\032"..x(X9),0);else E(X9,0X0);end;else(E)(X9,0X00000);end;else if X9 then if s9~=1 then return J9[h9](V(J9,h9+0X001,v9));else return J9[h9]();end;elseif h9 then do return V(J9,h9,s9);end;end;end;end;end;end;else do if lG>=0X1d then if not(lG<30)then if lG==31 then hG=function(...)local Sm=(0X1);local um,em={},0;local mm=I();local hm=({[0X1]=FG,[0X0002]=um});local wm,Gm=Cd(...);local Rm=((mm==a and SG or mm));wm=wm-1;for eR=0X00000,wm do do if not(IG>eR)then break;else um[eR]=Gm[eR+1];end;end;end;if not OG then Gm=nil;elseif zG then do(um)[IG]={n=wm>=IG and wm-IG+0X001 or 0X0000,V(Gm,IG+1,wm+0X001)};end;end;if Rm==mm then else R(hG,Rm);end;local Cm,Vm,tm,Dm=A(function()while true do local Dd=TG[Sm];local lk=(Dd[3]);Sm=Sm+0x1;if lk>=0x00C then if not(lk>=18)then do if lk>=0XF then if not(lk>=16)then local D7=(um[7]);local x7=8;(um)[x7+1]=D7;local G7=cG[0X0];(um)[x7]=D7[Dd[0x01]];Sm=Sm+1;(um)[10]=G7[1][G7[2]];Sm=Sm+1;Sm=Sm+0X0001;do Dd=TG[Sm];end;Sm=Sm+1;um[0xA]=um[0xA][Dd[0x1]];Sm=Sm+1;x7=8;um[x7]=um[x7](um[x7+0X0001],um[x7+2]);do em=x7;end;Sm=Sm+0x01;Sm=Sm+1;Dd=TG[Sm];do Sm=Sm+0X0001;end;if not um[0X8]then do Sm=Dd[0X5];end;end;else if lk==0X11 then do(um)[Dd[2]]={V({},0X01,Dd[5])};end;else local i3=(Dd[5]);local S3=Dd[0X0002];em=S3+i3-1;do repeat local e4,f4=iG,um;if not(#e4>0)then else local aa={};for GC,eC in l,e4 do for Oo,yo in l,eC do do if yo[1]==f4 and yo[2]>=0x0 then local ux=yo[2];if not aa[ux]then do aa[ux]={f4[ux]};end;end;yo[0x1]=aa[ux];yo[2]=1;end;end;end;end;end;until true;end;do return true,S3,i3;end;end;end;else if lk>=13 then do if lk~=0Xe then(um)[5]=Rm[Dd[6]];do Sm=Sm+1;end;Sm=Sm+0X00001;local WP=(cG[1]);do Sm=Sm+1;end;local GP=6;um[6]=WP[1][WP[2]];Dd=TG[Sm];Sm=Sm+1;local DP=um[6];(um)[GP+0x01]=DP;um[GP]=DP[Dd[1]];do Sm=Sm+0X0001;end;local zP=0X2;GP=6;local aP=0;do if zP==0X0 then else em=GP+zP-0x1;end;end;local gP,RP=nil,(nil);do if zP~=0X1 then gP,RP=Cd(um[GP](V(um,GP+1,em)));else do gP,RP=Cd(um[GP]());end;end;end;do if aP==0X1 then do em=GP-1;end;else if aP~=0 then gP=GP+aP-0X00002;em=gP+1;else gP=gP+GP-0X1;do em=gP;end;end;local Y4=0;for bK=GP,gP do do Y4=Y4+1;end;(um)[bK]=RP[Y4];end;end;end;Sm=Sm+1;GP=5;zP=0X0;do aP=0X4;end;if zP==0 then else em=GP+zP-1;end;gP,RP=nil;if zP~=0x1 then gP,RP=Cd(um[GP](V(um,GP+0x1,em)));else gP,RP=Cd(um[GP]());end;if aP==0X01 then em=GP-1;else if aP~=0 then do gP=GP+aP-0x0002;end;do em=gP+1;end;else gP=gP+GP-1;em=gP;end;local AO=0X0000;for zY=GP,gP do AO=AO+1;(um)[zY]=RP[AO];end;end;do Sm=Sm+1;end;Sm=Sm+1;Dd=TG[Sm];do Sm=Sm+0X1;end;GP=5;local eP=(h(function(...)(t)();do for FI,lI in...do t(true,FI,lI);end;end;end));eP(um[GP],um[GP+1],um[GP+0x2]);em=GP;um[GP]=eP;Sm=Dd[0X5];else local gC=(cG[0x0]);um[0X1]=gC[1][gC[2]];do Sm=Sm+1;end;Sm=Sm+1;Dd=TG[Sm];Sm=Sm+0X1;(um)[1]=um[1][Dd[0X01]];Dd=TG[Sm];Sm=Sm+0X1;do if um[0X1]then Sm=Dd[0X5];end;end;end;end;else local kc=cG[Dd[5]];(um)[Dd[2]]=kc[0x00001][kc[0X2]];end;end;end;else if not(lk<0X15)then do if lk>=23 then if lk==0x00018 then um[Dd[2]]=L(um[Dd[0X00005]],um[Dd[4]]);else do(um)[Dd[2]]=um[Dd[5]];end;end;else if lk==0X16 then repeat local bt,dt=iG,um;if#bt>0 then local nO=({});do for zm,Om in l,bt do for gl,pl in l,Om do if pl[0X001]==dt and pl[2]>=0 then local Un=(pl[2]);do if not nO[Un]then nO[Un]={dt[Un]};end;end;do pl[0X1]=nO[Un];end;do pl[0X2]=0X01;end;end;end;end;end;end;until true;local Ez=(Dd[0X002]);return false,Ez,Ez;else repeat local oF,CF=iG,um;if not(#oF>0x0)then else local MN=({});for Rg,Bg in l,oF do do for ij,Pj in l,Bg do if Pj[0X00001]==CF and Pj[2]>=0 then local So=Pj[0X2];if not MN[So]then MN[So]={CF[So]};end;do(Pj)[1]=MN[So];end;(Pj)[0X00002]=1;end;end;end;end;end;until true;return;end;end;end;else if not(lk>=0x13)then if um[Dd[0x005]]~=um[Dd[4]]then do Sm=Dd[2];end;end;else if lk~=0X000014 then else local EB=(cG[0X0]);do(um)[8]=EB[1][EB[2]];end;do Sm=Sm+0x1;end;Sm=Sm+0x00001;Sm=Sm+0x1;do um[9]=um[7];end;Dd=TG[Sm];Sm=Sm+0X1;(um[8])[Dd[0X6]]=um[0x0009];Sm=Sm+0x1;EB=cG[0X00];(um)[0X8]=EB[0X1][EB[2]];Sm=Sm+0X01;um[9]=um[0X004];Dd=TG[Sm];do Sm=Sm+0x1;end;(um[0X8])[Dd[6]]=um[0X09];Dd=TG[Sm];Sm=Sm+1;do Sm=Dd[5];end;end;end;end;end;else if lk>=0X6 then if not(lk<9)then if not(lk<0XA)then if lk==11 then um[8]=um[7][Dd[0x01]];local b6=(8);Dd=TG[Sm];do Sm=Sm+1;end;local R6=um[8];(um)[b6+0X1]=R6;um[b6]=R6[Dd[0X01]];Dd=TG[Sm];Sm=Sm+1;um[10]=Dd[6];Dd=TG[Sm];Sm=Sm+0X1;b6=0X00A;R6=um[10];um[b6+1]=R6;local e6=3;um[b6]=R6[Dd[1]];do Sm=Sm+1;end;(um)[12]=um[0X4];Sm=Sm+1;b6=10;local t6=0X00;if e6~=0X0000 then em=b6+e6-1;end;local f6,r6=nil,nil;if e6==1 then do f6,r6=Cd(um[b6]());end;else f6,r6=Cd(um[b6](V(um,b6+1,em)));end;do if t6==0X1 then do em=b6-1;end;else if t6==0X0 then f6=f6+b6-0x1;do em=f6;end;else f6=b6+t6-0X2;em=f6+0X1;end;local uM=0;do for cH=b6,f6 do uM=uM+1;um[cH]=r6[uM];end;end;end;end;Sm=Sm+0X00001;Sm=Sm+1;Sm=Sm+1;do b6=8;end;do(um)[b6]=um[b6](V(um,b6+1,em));end;do em=b6;end;Sm=Sm+0X001;Sm=Sm+0x0001;Dd=TG[Sm];Sm=Sm+0X1;if not(not um[8])then else Sm=Dd[5];end;else local GP=(Dd[2]);local QP,HP,yP=um[GP]();if QP then(um)[GP+0X1]=HP;um[GP+0X2]=yP;Sm=Dd[5];end;end;else um[0X1]=Dd[6];Dd=TG[Sm];local gO=(1);Sm=Sm+1;do um[0X02]=Dd[6];end;do Dd=TG[Sm];end;Sm=Sm+1;do um[3]=Dd[0X6];end;do Dd=TG[Sm];end;Sm=Sm+1;local MO,tO,BO=um[gO],um[gO+0X1],um[gO+0X02];(um)[gO]=h(function()for RO=MO,tO,BO do(t)(true,RO);end;end);Sm=Dd[5];end;else if not(lk>=7)then for uq=Dd[2],Dd[5]do(um)[uq]=nil;end;else if lk==0X8 then um[Dd[2]]=Rm[Dd[0X06]];else um[Dd[0x02]]=um[Dd[5]]>um[Dd[0X4]];end;end;end;else if lk>=3 then if not(lk<0X0004)then if lk==0X5 then do um[0x0001]=Rm[Dd[0X00006]];end;Sm=Sm+0X1;Sm=Sm+1;do Sm=Sm+0X1;end;do em=1;end;(um)[em]=um[em]();do Dd=TG[Sm];end;do Sm=Sm+0X1;end;if not(um[0X001])then else do Sm=Dd[5];end;end;else local Ty=Dd[2];local ky,Oy=um[Ty]();if ky then Sm=Dd[0x05];do um[Ty+3]=Oy;end;end;end;else Sm=Dd[0X5];end;else if not(lk<0X0001)then if lk==2 then local Ht=JG[Dd[0X5]];local qt=Ht[0X00004];local At=(nil);local Xt=(#qt);if not(Xt>0X0)then else At={};for JJ=0x1,Xt do local CJ=(qt[JJ]);if CJ[1]==0 then At[JJ-0X1]={um,CJ[0X2]};else(At)[JJ-0X001]=cG[CJ[2]];end;end;(H)(iG,At);end;um[Dd[0X2]]=ed(Rm,Ht,At);else(um)[Dd[2]]=Dd[6];end;else local ZL=cG[0];(um)[1]=ZL[0X1][ZL[0X00002]];Dd=TG[Sm];Sm=Sm+0X1;(um[1])[Dd[0X6]]=Dd[1];Dd=TG[Sm];Sm=Sm+1;Sm=Dd[0X00005];end;end;end;end;end;end);if Cm then do if Vm then if Dm==0X00001 then return um[tm]();else return um[tm](V(um,tm+1,em));end;elseif tm then return V(um,tm,Dm);end;end;else do if C(Vm)~="st\114\i\110g"then E(Vm,0x0);else if M(Vm,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if M(Vm,"^\.\-\:\037\d\+\:\ ")then(E)('\076ura\ph\ \S\cr\i\112t\:'..(YG[Sm-1]or"(internal)").."\: "..x(Vm),0);else E(Vm,0x0);end;end;end;end;end;else hG=function(...)local Va=0;local Ya=({});local na=1;local ga=({[0X1]=FG,[0X0002]=Ya});local ca=I();local ua=((ca==a and SG or ca));local aa,pa=Cd(...);do aa=aa-1;end;for D4=0X000,aa do if not(IG>D4)then do break;end;else do Ya[D4]=pa[D4+0X1];end;end;end;if not OG then do pa=nil;end;elseif not(zG)then else Ya[IG]={n=aa>=IG and aa-IG+0X1 or 0X0,V(pa,IG+1,aa+1)};end;if ua~=ca then(R)(hG,ua);end;local sa,da,ja,ra=A(function()while true do local aG=(TG[na]);local xG=aG[3];na=na+1;do if not(xG<0XC)then if not(xG>=0X0012)then if xG<15 then if xG>=13 then if xG~=14 then if Ya[aG[5]]~=Ya[aG[0x4]]then do na=aG[2];end;end;else(Ya)[0]=ua[aG[6]];na=na+1;na=na+1;local HH,qH=0x0,(cG[1]);aG=TG[na];na=na+1;Ya[1]=aG[6];na=na+1;(Ya)[HH]=Ya[HH](Ya[HH+0x00001]);Va=HH;na=na+1;na=na+0x001;do na=na+1;end;(Ya)[0X01]=qH[1][qH[0x2]];aG=TG[na];na=na+1;(Ya)[1]=Ya[0x1][aG[1]];na=na+1;na=na+1;na=na+1;do(Ya)[0X2]=Ya[0X0];end;do na=na+1;end;HH=1;(Ya)[HH]=Ya[HH](Ya[HH+0x0001]);Va=HH;na=na+0x01;do na=na+1;end;do aG=TG[na];end;na=na+1;if not(not Ya[1])then else na=aG[5];end;end;else repeat local Ra,Pa=iG,(Ya);if#Ra>0X00 then local mG=({});do for XG,CG in l,Ra do do for rG,eG in l,CG do if eG[1]==Pa and eG[0X2]>=0X0 then local iN=(eG[0X002]);if not mG[iN]then mG[iN]={Pa[iN]};end;(eG)[0X00001]=mG[iN];eG[2]=1;end;end;end;end;end;end;until true;return;end;else if not(xG>=16)then for Qh=aG[2],aG[0X5]do(Ya)[Qh]=nil;end;else if xG~=0X11 then(Ya)[aG[0X2]]=Ya[aG[0X5]]<=Ya[aG[0X4]];else local v3=Ya[aG[0X5]]/Ya[aG[4]];Ya[aG[0X2]]=v3-v3%0x1;end;end;end;else if xG>=21 then if xG>=22 then if xG~=0X00017 then(Ya)[aG[2]]=Ya[aG[5]]<Ya[aG[4]];else(Ya)[aG[2]]=Ya[aG[0X5]]^Ya[aG[0X4]];end;else(Ya)[aG[0x002]]=Ya[aG[5]]%Ya[aG[4]];end;else if xG<19 then local Z4=aG[2];for tk=Z4,Z4+(aG[0x5]-0X001)do(Ya)[tk]=pa[IG+(tk-Z4)+0X0001];end;else if xG~=20 then else Ya[aG[0x2]]=aG[6];end;end;end;end;else if xG<0X6 then do if xG<0X00003 then if xG>=1 then if xG==0X2 then na=aG[5];else(Ya)[aG[2]]={V({},1,aG[0X5])};end;else do Ya[0X0]=aG[6];end;do aG=TG[na];end;na=na+1;do Ya[1]=aG[6];end;aG=TG[na];local Mx=0;na=na+0X1;(Ya)[2]=aG[0X00006];aG=TG[na];na=na+1;local Ex,ox,cx=Ya[Mx],Ya[Mx+0X01],Ya[Mx+0X2];(Ya)[Mx]=h(function()for Ox=Ex,ox,cx do t(true,Ox);end;end);na=aG[5];end;else do if not(xG>=0X4)then do if Ya[aG[0X5]]<=Ya[aG[4]]then do na=aG[2];end;end;end;else if xG==0X05 then local vy=cG[1];(Ya)[0X1]=vy[0X1][vy[0X0002]];do na=na+1;end;na=na+0X00001;aG=TG[na];na=na+0x1;do(Ya)[0X1]=Ya[1][aG[1]];end;na=na+0X1;local ey=1;do(Ya)[0X2]=Ya[0];end;na=na+0X1;vy=cG[2];Ya[0x3]=vy[0x001][vy[2]];na=na+0X1;na=na+1;na=na+0X00001;Ya[ey](Ya[ey+0X1],Ya[ey+2]);Va=ey-0X1;na=na+1;do na=na+1;end;aG=TG[na];na=na+1;na=aG[5];else Ya[aG[2]]=ua[aG[6]];end;end;end;end;end;else if not(xG<0x9)then do if not(xG<10)then if xG==0Xb then local Hq=(JG[aG[5]]);local Gq=(Hq[4]);local dq,Iq=#Gq,(nil);if dq>0 then Iq={};do for l3=1,dq do local d3=(Gq[l3]);do if d3[0X1]~=0 then Iq[l3-1]=cG[d3[2]];else do(Iq)[l3-1]={Ya,d3[0X2]};end;end;end;end;end;(H)(iG,Iq);end;Ya[aG[0x02]]=ed(ua,Hq,Iq);else local Q0=aG[2];local a0,d0=Ya[Q0]();if not(a0)then else na=aG[0X5];(Ya)[Q0+0X3]=d0;end;end;else Ya[0X4]=ua[aG[6]];do aG=TG[na];end;na=na+0X00001;do(Ya)[0X5]=aG[0X6];end;aG=TG[na];na=na+1;(Ya)[6]=aG[0X6];na=na+0X001;do Ya[0X7]=Ya[3];end;na=na+0x1;local zp=(0X4);Va=zp+0X0004-0X1;(Ya[zp])(V(Ya,zp+0X1,Va));Va=zp-1;do aG=TG[na];end;do na=na+0X1;end;na=aG[0X5];end;end;else do if not(xG<7)then do if xG~=0X8 then local mp=aG[5];local xp=aG[2];if mp==0X000 then else Va=xp+mp-0X1;end;local jp,Lp,dp=nil,nil,(aG[4]);if mp==1 then do jp,Lp=Cd(Ya[xp]());end;else jp,Lp=Cd(Ya[xp](V(Ya,xp+0X00001,Va)));end;if dp~=0X1 then if dp~=0 then jp=xp+dp-2;Va=jp+0x1;else jp=jp+xp-1;do Va=jp;end;end;local SZ=0x0;for z7=xp,jp do SZ=SZ+0x001;(Ya)[z7]=Lp[SZ];end;else Va=xp-0X1;end;else Ya[0X0]=ua[aG[6]];na=na+0X0001;na=na+1;local aD=0;aG=TG[na];na=na+1;(Ya)[0X1]=ua[aG[6]];do na=na+0X1;end;na=na+0X01;aG=TG[na];na=na+1;(Ya)[1]=Ya[0X01][aG[1]];na=na+0X0001;na=na+1;aG=TG[na];na=na+1;Ya[2]=ua[aG[0x0006]];aG=TG[na];na=na+1;do Ya[2]=Ya[0X2][aG[0x00001]];end;aG=TG[na];na=na+1;Ya[2]=Ya[2][aG[1]];aG=TG[na];na=na+1;do(Ya)[0X0002]=Ya[2][aG[0X1]];end;aG=TG[na];do na=na+0X001;end;(Ya)[0x2]=Ya[2][aG[1]];na=na+1;do na=na+1;end;aG=TG[na];do na=na+1;end;(Ya)[0X2]=Ya[0X2][aG[1]];aG=TG[na];na=na+1;do Ya[2]=Ya[0X2][aG[1]];end;do na=na+1;end;na=na+0X1;aG=TG[na];na=na+1;(Ya)[0x02]=Ya[0x2][aG[1]];na=na+0X1;na=na+1;aG=TG[na];na=na+0X1;(Ya)[3]=aG[6];na=na+0x1;do Va=aD+4-1;end;(Ya[aD])(V(Ya,aD+1,Va));Va=aD-0X00001;aG=TG[na];na=na+1;(Ya)[0x0]=ua[aG[6]];do aG=TG[na];end;na=na+0x1;Ya[1]=ua[aG[0x6]];do na=na+1;end;na=na+0X1;aG=TG[na];na=na+1;Ya[1]=Ya[0X1][aG[0X1]];na=na+1;na=na+1;aG=TG[na];na=na+0x1;(Ya)[2]=ua[aG[6]];aG=TG[na];na=na+1;do Ya[2]=Ya[2][aG[0X1]];end;aG=TG[na];do na=na+1;end;do(Ya)[0x2]=Ya[0x2][aG[1]];end;do aG=TG[na];end;na=na+1;Ya[2]=Ya[2][aG[0X0001]];aG=TG[na];na=na+1;Ya[2]=Ya[2][aG[0X1]];do na=na+0x01;end;na=na+0X00001;aG=TG[na];do na=na+1;end;(Ya)[2]=Ya[0X002][aG[1]];na=na+0X1;do na=na+0x0001;end;aG=TG[na];na=na+0X1;Ya[0X002]=Ya[2][aG[1]];aG=TG[na];do na=na+1;end;do(Ya)[0X02]=Ya[0X2][aG[1]];end;do aG=TG[na];end;do na=na+1;end;(Ya)[3]=aG[6];na=na+1;do aD=0X0;end;Va=aD+0X4-1;Ya[aD](V(Ya,aD+1,Va));do Va=aD-1;end;do aG=TG[na];end;na=na+1;do(Ya)[0]=ua[aG[6]];end;do aG=TG[na];end;na=na+1;(Ya)[0X1]=aG[0X0006];do na=na+0x1;end;aD=0;(Ya[aD])(Ya[aD+0x001]);do Va=aD-1;end;do aG=TG[na];end;na=na+0X1;do(Ya)[0X0]=ua[aG[0X6]];end;aG=TG[na];do na=na+1;end;Ya[0X0001]=aG[6];do na=na+1;end;aD=0X0;(Ya)[aD]=Ya[aD](Ya[aD+0X001]);Va=aD;na=na+1;na=na+0x1;aG=TG[na];na=na+0X1;if not(not Ya[0])then else na=aG[0X5];end;end;end;else local o8=(cG[0X00]);Ya[0X0]=o8[1][o8[0X2]];na=na+0X1;na=na+1;aG=TG[na];na=na+1;Ya[0]=Ya[0][aG[1]];na=na+0X1;do na=na+1;end;aG=TG[na];na=na+0x001;if not(not Ya[0X0])then else na=aG[0X005];end;end;end;end;end;end;end;end;end);if not(sa)then if C(da)~="string"then(E)(da,0);else if M(da,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if not(M(da,"^.-:%d+: "))then E(da,0);else(E)("\L\117\114\097\p\h\ \Sc\114\ipt\058"..(YG[na-0x1]or'\(i\110\116\e\114\110a\l\)')..": "..x(da),0X0);end;end;else if da then if ra~=1 then return Ya[ja](V(Ya,ja+0X001,Va));else do return Ya[ja]();end;end;elseif ja then do return V(Ya,ja,ra);end;end;end;end;end;else do hG=function(...)local dX=0x1;local IX,LX={},(0X0000);local DX=I();local BX={[0X1]=FG,[0X0002]=IX};local JX,RX=Cd(...);local WX=(DX==a and SG or DX);JX=JX-1;for eP=0X0,JX do do if IG>eP then(IX)[eP]=RX[eP+1];else break;end;end;end;if not OG then RX=nil;elseif zG then IX[IG]={n=JX>=IG and JX-IG+1 or 0X0,V(RX,IG+1,JX+0X1)};end;do if WX~=DX then R(hG,WX);end;end;local NX,OX,eX,oX=A(function()while true do local ow=TG[dX];local nw=ow[0X3];dX=dX+1;if nw>=0X000A then if not(nw>=15)then if not(nw<12)then if nw>=13 then if nw~=0xE then(IX[ow[2]])[IX[ow[5]]]=IX[ow[0X4]];else do IX[ow[0X2]]=#IX[ow[5]];end;end;else IX[ow[2]]=ow[6];end;else if nw~=11 then IX[ow[2]]=b(IX[ow[5]],IX[ow[4]]);else do IX[ow[0X002]]=not IX[ow[0x5]];end;end;end;else if not(nw>=0X12)then if nw<0X0010 then repeat local nT,pT=iG,(IX);if#nT>0 then local RZ={};for an,mn in l,nT do for Wf,Df in l,mn do do if not(Df[0X1]==pT and Df[0X2]>=0X0)then else local Dd=Df[0X2];if not(not RZ[Dd])then else RZ[Dd]={pT[Dd]};end;(Df)[0X1]=RZ[Dd];(Df)[2]=1;end;end;end;end;end;until true;return;else if nw==17 then IX[ow[0X2]]=IX[ow[5]]<IX[ow[4]];else repeat local XR,wR=iG,IX;do if#XR>0X0 then local Il={};for K1,L1 in l,XR do do for Mf,If in l,L1 do do if not(If[1]==wR and If[0X02]>=0X0)then else local CU=(If[2]);if not(not Il[CU])then else Il[CU]={wR[CU]};end;If[1]=Il[CU];(If)[0X002]=0X1;end;end;end;end;end;end;end;until true;local g4=(ow[2]);return false,g4,g4;end;end;else if nw<0X0013 then(IX)[ow[2]]={V({},0x001,ow[5])};else do if nw==20 then local M3=(JG[ow[0x5]]);local s3=M3[0X04];local C3=nil;local g3=#s3;if not(g3>0)then else do C3={};end;for Oe=1,g3 do local ye=s3[Oe];do if ye[0x1]~=0 then C3[Oe-0x00001]=cG[ye[2]];else(C3)[Oe-1]={IX,ye[2]};end;end;end;(H)(iG,C3);end;(IX)[ow[0x0002]]=ed(WX,M3,C3);else if IX[ow[0X005]]<=IX[ow[0X4]]then dX=ow[0X2];end;end;end;end;end;end;else do if not(nw>=5)then if nw<0X2 then do if nw==1 then(IX)[ow[2]]=WX[ow[6]];else local lA=ow[0X00005];local dA=IX[lA];for Km=lA+1,ow[0x04]do dA=dA..IX[Km];end;do(IX)[ow[0X0002]]=dA;end;end;end;else if not(nw>=3)then for Xy=ow[2],ow[0X5]do IX[Xy]=nil;end;else if nw==0x4 then dX=ow[0X005];else local CZ=cG[0];do IX[0X00000]=CZ[0X1][CZ[2]];end;local oZ=(0X00000);do ow=TG[dX];end;do dX=dX+1;end;local qZ=IX[0X0];(IX)[oZ+1]=qZ;(IX)[oZ]=qZ[ow[1]];dX=dX+1;oZ=0;IX[oZ](IX[oZ+1]);LX=oZ-0X1;dX=dX+1;do dX=dX+0X1;end;dX=dX+0X1;do CZ=cG[0];end;(IX)[0X0]=CZ[1][CZ[0x2]];dX=dX+0X001;do dX=dX+1;end;ow=TG[dX];dX=dX+1;do oZ=0;end;do qZ=IX[0];end;IX[oZ+1]=qZ;IX[oZ]=qZ[ow[1]];dX=dX+1;oZ=0X0;IX[oZ]=IX[oZ](IX[oZ+0X1]);do LX=oZ;end;dX=dX+1;dX=dX+0X1;ow=TG[dX];do dX=dX+0X01;end;if not IX[0X00]then dX=ow[0x5];end;end;end;end;else if nw<0X00007 then do if nw==0X6 then IX[0]=WX[ow[0X6]];dX=dX+1;do LX=0;end;do(IX)[LX]=IX[LX]();end;dX=dX+1;dX=dX+1;dX=dX+1;IX[0X0]=not IX[0];do ow=TG[dX];end;dX=dX+1;do dX=ow[5];end;else IX[ow[0X2]]=IX[ow[5]]*IX[ow[4]];end;end;else if not(nw<8)then if nw==0X9 then(IX)[0x0]=WX[ow[0x6]];dX=dX+0X0001;(IX)[0]=not IX[0];ow=TG[dX];dX=dX+1;do dX=ow[5];end;else if not(not IX[ow[2]])then else dX=ow[0X5];end;end;else end;end;end;end;end;end;end);if NX then do if OX then do if oX~=1 then return IX[eX](V(IX,eX+0X1,LX));else do return IX[eX]();end;end;end;elseif eX then do return V(IX,eX,oX);end;end;end;else do if C(OX)=="string"then if M(OX,"a\116t\e\109\p\116 \116o\032\121i\e\108\d\ \097cr\111\115\s\ \m\e\116a\me\116h\o\d\047C\%\-c\097\l\l\ \098\oun\100a\114\y")then return coroutine.yield();end;if M(OX,'\^\.\-\058\037d\+:\032')then(E)("L\117\114\097\ph\032S\c\114i\p\116:"..(YG[dX-1]or"(internal)")..": "..x(OX),0X0);else E(OX,0x0);end;else E(OX,0x0);end;end;end;end;end;end;else do if lG==0X1c then hG=function(...)local Au,Ou=0x0,({});local fu=(I());local qu={[0X1]=FG,[0X0002]=Ou};local Eu,Nu=Cd(...);local Iu,Wu=1,((fu==a and SG or fu));Eu=Eu-1;for Fm=0X0,Eu do if not(IG>Fm)then break;else(Ou)[Fm]=Nu[Fm+0X1];end;end;if not OG then Nu=nil;elseif not(zG)then else do Ou[IG]={n=Eu>=IG and Eu-IG+0X01 or 0X0,V(Nu,IG+1,Eu+0X00001)};end;end;if Wu~=fu then R(hG,Wu);end;local Ju,tu,mu,Ku=A(function()while true do local wW=(TG[Iu]);local qW=(wW[0X3]);Iu=Iu+0X1;do if qW>=0xE then if qW<21 then do if qW<0X11 then if qW<15 then do(Ou)[wW[0X2]]=wW[0X6];end;else if qW==16 then if not(not(Ou[wW[5]]<Ou[wW[0X4]]))then else Iu=wW[0X2];end;else Ou[wW[0X02]]={V({},0X0001,wW[0X00005])};end;end;else if qW<19 then if qW==18 then local Pg=cG[0];(Ou)[0]=Pg[0x0001][Pg[2]];do Iu=Iu+1;end;Iu=Iu+0X1;wW=TG[Iu];Iu=Iu+1;do Ou[0]=Ou[0X0][wW[1]];end;wW=TG[Iu];Iu=Iu+0x01;if not(Ou[0X0])then else Iu=wW[0X5];end;else repeat local rJ,JJ=iG,(Ou);if#rJ>0x0 then local Ux=({});for FL,mL in l,rJ do for U_,S_ in l,mL do if S_[0x1]==JJ and S_[0x2]>=0 then local fZ=S_[0X2];if not Ux[fZ]then(Ux)[fZ]={JJ[fZ]};end;S_[0X1]=Ux[fZ];S_[2]=1;end;end;end;end;until true;return;end;else do if qW~=20 then Iu=wW[0X05];else do(Ou)[0X0]=Wu[wW[0X6]];end;Iu=Iu+0X0001;Iu=Iu+0X1;wW=TG[Iu];do Iu=Iu+0X1;end;(Ou)[0X1]=wW[6];local lM=(0X000);wW=TG[Iu];Iu=Iu+0X001;(Ou)[2]=wW[0x006];do Iu=Iu+1;end;Ou[lM](Ou[lM+1],Ou[lM+2]);Au=lM-1;Iu=Iu+0X0001;Iu=Iu+1;wW=TG[Iu];Iu=Iu+0x1;do Ou[0X00000]=Wu[wW[0X06]];end;Iu=Iu+0X001;do Au=0X0000;end;(Ou[Au])();Au=Au-0X01;Iu=Iu+0x0001;do Iu=Iu+0X001;end;wW=TG[Iu];do Iu=Iu+1;end;do(Ou)[0X0]=Wu[wW[0X6]];end;wW=TG[Iu];Iu=Iu+0x001;Ou[0X0000]=Ou[0X00][wW[0X1]];local eM=Ou[0];wW=TG[Iu];Iu=Iu+0x1;do lM=0;end;Ou[lM+1]=eM;(Ou)[lM]=eM[wW[1]];wW=TG[Iu];Iu=Iu+1;do Ou[2]=wW[6];end;Iu=Iu+1;lM=0X0;(Ou)[lM]=Ou[lM](Ou[lM+0x1],Ou[lM+2]);Au=lM;do Iu=Iu+0x0001;end;Iu=Iu+1;wW=TG[Iu];do Iu=Iu+0X1;end;do if not Ou[0]then Iu=wW[0x5];end;end;end;end;end;end;end;else if qW<24 then if not(qW<22)then do if qW==0X17 then Ou[0]=Wu[wW[6]];wW=TG[Iu];Iu=Iu+1;Ou[0X1]=wW[6];wW=TG[Iu];Iu=Iu+0X1;Ou[0X2]=wW[0X6];local CD=(0x00000);Iu=Iu+0X1;Ou[CD](Ou[CD+0X0001],Ou[CD+2]);do Au=CD-1;end;wW=TG[Iu];do Iu=Iu+0X00001;end;do(Ou)[0X0]=Wu[wW[0X6]];end;Iu=Iu+1;Iu=Iu+1;do Iu=Iu+1;end;do Au=0;end;Ou[Au]();Au=Au-0x1;do wW=TG[Iu];end;Iu=Iu+1;Ou[0]=Wu[wW[0X6]];Iu=Iu+1;Iu=Iu+1;wW=TG[Iu];Iu=Iu+0X1;do Ou[0]=Ou[0x0][wW[1]];end;wW=TG[Iu];Iu=Iu+1;CD=0;local hD=(Ou[0]);Ou[CD+0X1]=hD;Ou[CD]=hD[wW[0x1]];wW=TG[Iu];Iu=Iu+1;(Ou)[0x2]=wW[0X0006];do Iu=Iu+1;end;CD=0X000;(Ou)[CD]=Ou[CD](Ou[CD+0x1],Ou[CD+2]);Au=CD;wW=TG[Iu];Iu=Iu+0X1;if not Ou[0]then Iu=wW[5];end;else if Ou[wW[5]]~=Ou[wW[4]]then else Iu=wW[0X2];end;end;end;else local gE=JG[wW[0X5]];local aE=nil;local IE=(gE[4]);local lE=#IE;if lE>0X0 then aE={};do for lp=1,lE do local fp=(IE[lp]);if fp[1]==0 then aE[lp-1]={Ou,fp[0X2]};else aE[lp-0X1]=cG[fp[0X2]];end;end;end;(H)(iG,aE);end;(Ou)[wW[2]]=ed(Wu,gE,aE);end;else do if not(qW>=0x1A)then do if qW==0x19 then local ba=(cG[1]);Ou[1]=ba[0X0001][ba[0X2]];do Iu=Iu+1;end;Iu=Iu+0X1;wW=TG[Iu];do Iu=Iu+1;end;(Ou)[1]=Ou[0X00001][wW[0x00001]];local ma=1;Iu=Iu+0X00001;Iu=Iu+0X1;Iu=Iu+1;do Ou[0x2]=Ou[0];end;Iu=Iu+1;ba=cG[2];Ou[3]=ba[1][ba[0X00002]];Iu=Iu+1;Iu=Iu+0X0001;Iu=Iu+1;(Ou[ma])(Ou[ma+1],Ou[ma+2]);Au=ma-1;wW=TG[Iu];Iu=Iu+1;Iu=wW[0X5];else do(Ou)[0X000]=Wu[wW[6]];end;Iu=Iu+1;Iu=Iu+1;wW=TG[Iu];Iu=Iu+1;(Ou)[0X0001]=wW[0X6];local Nn=0;Iu=Iu+1;do Ou[Nn]=Ou[Nn](Ou[Nn+0X001]);end;local dn=cG[0X1];Au=Nn;Iu=Iu+1;Ou[1]=dn[1][dn[2]];wW=TG[Iu];Iu=Iu+0x0001;(Ou)[1]=Ou[1][wW[1]];Iu=Iu+1;(Ou)[2]=Ou[0X0];do Iu=Iu+0X1;end;Nn=1;do(Ou)[Nn]=Ou[Nn](Ou[Nn+1]);end;Au=Nn;wW=TG[Iu];Iu=Iu+0X00001;if not(not Ou[0x00001])then else Iu=wW[5];end;end;end;else if qW~=0X1B then do Ou[wW[2]]=not Ou[wW[0X5]];end;else local Zy=cG[0];(Ou)[0]=Zy[0X01][Zy[2]];Iu=Iu+0X00001;Iu=Iu+0x1;do wW=TG[Iu];end;Iu=Iu+0X1;(Ou)[0x00000]=Ou[0X0][wW[0X1]];Iu=Iu+0x1;do Iu=Iu+0X1;end;do wW=TG[Iu];end;do Iu=Iu+0x1;end;if Ou[0]then Iu=wW[0X5];end;end;end;end;end;end;else if qW>=7 then do if qW<10 then if not(qW>=8)then else if qW==0X9 then Ou[wW[2]]=Ou[wW[0X5]]<Ou[wW[4]];else(Ou)[wW[2]]=Wu[wW[6]];end;end;else if not(qW<12)then do if qW==0xD then local Dd=(cG[0X0]);(Ou)[0x0]=Dd[0x0001][Dd[2]];wW=TG[Iu];do Iu=Iu+1;end;Ou[0X00]=Ou[0][wW[1]];do Iu=Iu+1;end;Iu=Iu+1;wW=TG[Iu];Iu=Iu+0X001;if not(Ou[0X00])then else Iu=wW[5];end;else(Ou)[0]=Wu[wW[6]];wW=TG[Iu];Iu=Iu+0X00001;(Ou)[0x0]=Ou[0X0000][wW[1]];do wW=TG[Iu];end;do Iu=Iu+1;end;if not Ou[0x000]then Iu=wW[5];end;end;end;else if qW==0Xb then Ou[0]=Wu[wW[6]];Iu=Iu+0X1;do Iu=Iu+0X1;end;wW=TG[Iu];Iu=Iu+0X001;Ou[0X1]=wW[0X6];wW=TG[Iu];Iu=Iu+0X0001;local MK=0;do Ou[0X002]=wW[6];end;Iu=Iu+1;Ou[MK](Ou[MK+1],Ou[MK+2]);Au=MK-1;wW=TG[Iu];do Iu=Iu+1;end;(Ou)[0X00000]=Wu[wW[6]];Iu=Iu+0X1;Au=0;Ou[Au]();Au=Au-1;wW=TG[Iu];Iu=Iu+1;Ou[0]=Wu[wW[0X6]];Iu=Iu+1;Iu=Iu+0X00001;wW=TG[Iu];Iu=Iu+1;(Ou)[0X00]=Ou[0X0][wW[0x1]];local vK=(Ou[0]);wW=TG[Iu];Iu=Iu+0X1;MK=0X0;(Ou)[MK+1]=vK;do Ou[MK]=vK[wW[1]];end;wW=TG[Iu];Iu=Iu+1;do Ou[0X2]=wW[6];end;Iu=Iu+1;MK=0;Ou[MK]=Ou[MK](Ou[MK+1],Ou[MK+2]);Au=MK;wW=TG[Iu];do Iu=Iu+0X1;end;if not(Ou[0X0])then else Iu=wW[0X5];end;else do Ou[0]=Wu[wW[0X6]];end;Iu=Iu+0x01;Iu=Iu+0X1;wW=TG[Iu];Iu=Iu+0x1;(Ou)[1]=wW[6];local l4=(0);do Iu=Iu+1;end;do(Ou)[l4]=Ou[l4](Ou[l4+0x1]);end;do Au=l4;end;do wW=TG[Iu];end;Iu=Iu+0X1;do Ou[0X0]=Ou[0x000][wW[0x1]];end;Iu=Iu+1;Iu=Iu+1;do wW=TG[Iu];end;Iu=Iu+0X1;if Ou[0]then do Iu=wW[5];end;end;end;end;end;end;else if not(qW>=3)then if not(qW<0X01)then do if qW~=0X2 then local XO=cG[0];Ou[0X0]=XO[1][XO[2]];wW=TG[Iu];Iu=Iu+0X001;do(Ou)[0]=Ou[0X0][wW[1]];end;wW=TG[Iu];do Iu=Iu+0X0001;end;if not Ou[0]then Iu=wW[5];end;else(Ou)[0X0]=Wu[wW[0X6]];wW=TG[Iu];Iu=Iu+1;local iU=(0X0000);do Ou[1]=wW[0x6];end;Iu=Iu+0x1;Ou[iU](Ou[iU+1]);Au=iU-1;Iu=Iu+0X1;do Iu=Iu+1;end;wW=TG[Iu];Iu=Iu+0X00001;do Iu=wW[0x005];end;end;end;else Ou[wW[2]]=#Ou[wW[5]];end;else if not(qW>=5)then if qW==4 then(Ou)[0X0]=Wu[wW[6]];local NT=(0x0);wW=TG[Iu];Iu=Iu+0X01;(Ou)[1]=wW[6];do Iu=Iu+0x01;end;(Ou)[NT]=Ou[NT](Ou[NT+0X1]);do Au=NT;end;wW=TG[Iu];Iu=Iu+1;Ou[0]=Ou[0][wW[0x1]];do wW=TG[Iu];end;Iu=Iu+1;if not(not Ou[0])then else Iu=wW[0X5];end;else do Ou[0]=Wu[wW[0x6]];end;do Iu=Iu+0X1;end;Iu=Iu+1;wW=TG[Iu];Iu=Iu+0x00001;local Fx=(0);Ou[0X1]=wW[0x6];Iu=Iu+1;Ou[Fx](Ou[Fx+1]);Au=Fx-0X01;wW=TG[Iu];Iu=Iu+0X1;do Iu=wW[0X005];end;end;else if qW~=6 then(Ou)[0X0]=Wu[wW[6]];wW=TG[Iu];local ww=0;Iu=Iu+0X1;do(Ou)[1]=wW[0X6];end;Iu=Iu+1;(Ou[ww])(Ou[ww+0X0001]);Au=ww-1;Iu=Iu+0x1;Iu=Iu+1;do wW=TG[Iu];end;Iu=Iu+1;(Ou)[0]=Wu[wW[6]];Iu=Iu+1;Iu=Iu+0X1;do Iu=Iu+1;end;Au=0X000;Ou[Au]();Au=Au-1;wW=TG[Iu];Iu=Iu+0X1;Iu=wW[5];else for eS=wW[0X00002],wW[0x0005]do Ou[eS]=nil;end;end;end;end;end;end;end;end;end);do if Ju then if tu then if Ku~=1 then do return Ou[mu](V(Ou,mu+0X1,Au));end;else return Ou[mu]();end;elseif not(mu)then else return V(Ou,mu,Ku);end;else do if C(tu)~='\115\116r\105n\g'then(E)(tu,0);else if M(tu,'\097tt\101\m\p\116\ \116\111\ \121\i\el\d\032a\c\114\o\115\s\032\m\101t\097m\e\116\h\o\100/C%\045\099\097\ll \098\111\117\110\dary')then return coroutine.yield();end;if M(tu,"^.-:%d+: ")then E('\Lu\114a\112h \083\c\114\105\pt:'..(YG[Iu-0x1]or"(\in\116ern\097\108)")..": "..x(tu),0X00000);else E(tu,0X0);end;end;end;end;end;end;else hG=function(...)local o3=({});local q3=(0X1);local E3=I();local Y3=0X0;local W3=({[0X1]=FG,[0X0002]=o3});local J3,w3=Cd(...);J3=J3-1;local f3=(E3==a and SG or E3);for ly=0,J3 do if IG>ly then o3[ly]=w3[ly+1];else break;end;end;if not OG then do w3=nil;end;elseif zG then do(o3)[IG]={n=J3>=IG and J3-IG+1 or 0X0,V(w3,IG+1,J3+1)};end;end;if f3~=E3 then R(hG,f3);end;local y3,l3,i3,u3=A(function()while true do local nP=TG[q3];local oP=(nP[3]);q3=q3+1;do if oP>=7 then if not(oP>=10)then if not(oP<0X8)then if oP~=9 then q3=nP[0x5];else if not(not(o3[nP[5]]<=o3[nP[0X0004]]))then else q3=nP[2];end;end;else(o3)[0]=f3[nP[0x6]];local fD=(0X000);q3=q3+0x1;q3=q3+0X1;nP=TG[q3];q3=q3+0X00001;local SD=nil;local tD=(o3[0X0000]);o3[fD+1]=tD;o3[fD]=tD[nP[1]];nP=TG[q3];q3=q3+1;o3[2]=nP[0X06];q3=q3+1;fD=0X0;o3[fD]=o3[fD](o3[fD+1],o3[fD+2]);Y3=fD;nP=TG[q3];do q3=q3+1;end;(o3)[1]=f3[nP[0X06]];q3=q3+0X001;q3=q3+0X1;do nP=TG[q3];end;q3=q3+1;(o3)[1]=o3[1][nP[0X1]];nP=TG[q3];q3=q3+0X01;local zD=JG[nP[5]];local OD=zD[4];local pD=(#OD);do if not(pD>0X00)then else SD={};for iJ=1,pD do local sJ=OD[iJ];if sJ[0X1]==0 then do(SD)[iJ-1]={o3,sJ[0X0002]};end;else(SD)[iJ-1]=cG[sJ[0X00002]];end;end;H(iG,SD);end;end;o3[2]=ed(f3,zD,SD);q3=q3+0x0001;fD=1;(o3[fD])(o3[fD+0X1]);Y3=fD-1;do q3=q3+1;end;do q3=q3+1;end;do q3=q3+0X01;end;repeat local gM,RM=iG,o3;if not(#gM>0)then else local ob=({});for al,wl in l,gM do for g7,P7 in l,wl do if not(P7[0X0001]==RM and P7[2]>=0)then else local rl=P7[0X00002];do if not(not ob[rl])then else do ob[rl]={RM[rl]};end;end;end;(P7)[0x1]=ob[rl];P7[2]=0X00001;end;end;end;end;until true;return;end;else if oP>=0Xc then if oP==0Xd then o3[nP[0x2]]={V({},1,nP[5])};else(o3)[nP[2]]=o3[nP[0X5]]~=o3[nP[4]];end;else if oP~=0Xb then local T5,x5=nP[0x00002],nP[5];if x5==0X0 then else Y3=T5+x5-1;end;local A5=nP[0X4];local L5,S5=nil,nil;if x5~=1 then L5,S5=Cd(o3[T5](V(o3,T5+0X1,Y3)));else do L5,S5=Cd(o3[T5]());end;end;if A5~=1 then if A5~=0x0 then L5=T5+A5-2;do Y3=L5+0X1;end;else L5=L5+T5-0X1;Y3=L5;end;local JV=0X0;do for TY=T5,L5 do do JV=JV+1;end;(o3)[TY]=S5[JV];end;end;else Y3=T5-0X00001;end;else end;end;end;else if oP<3 then if not(oP>=1)then if o3[nP[0X00005]]~=o3[nP[0X04]]then else do q3=nP[2];end;end;else if oP~=2 then o3[nP[2]]=nP[0x00006];else o3[nP[0x2]]=T(o3[nP[5]],o3[nP[0X004]]);end;end;else if oP<0X05 then if oP~=0X04 then for WG=nP[2],nP[5]do o3[WG]=nil;end;else local pA=(nP[2]);local tA=(h(function(...)t();do for mF,aF,EF,RF,JF,LF,ZF,bF,kF,UF in...do(t)(true,{mF,aF,EF,RF,JF,LF,ZF,bF,kF,UF});end;end;end));tA(o3[pA],o3[pA+1],o3[pA+0x2]);Y3=pA;(o3)[pA]=tA;do q3=nP[5];end;end;else do if oP~=0X06 then o3[nP[0X2]]=f3[nP[0X00006]];else local Fb=(JG[nP[0X005]]);local Kb,yb=Fb[4],nil;local Bb=#Kb;if Bb>0 then yb={};for mj=0x1,Bb do local Uj=Kb[mj];if Uj[1]==0x0 then do(yb)[mj-1]={o3,Uj[0X02]};end;else(yb)[mj-0X01]=cG[Uj[0X2]];end;end;(H)(iG,yb);end;(o3)[nP[2]]=ed(f3,Fb,yb);end;end;end;end;end;end;end;end);do if y3 then if l3 then if u3==1 then return o3[i3]();else return o3[i3](V(o3,i3+0X1,Y3));end;elseif i3 then return V(o3,i3,u3);end;else if C(l3)=="string"then if not(M(l3,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(M(l3,"^.-:%d+: "))then E(l3,0);else(E)('\076\117r\097\p\h \S\099ri\pt:'..(YG[q3-0X001]or"(internal)").."\:\ "..x(l3),0);end;else E(l3,0X0);end;end;end;end;end;end;end;end;end;else do if not(lG<0X16)then do if not(lG<24)then do if not(lG>=0X19)then hG=function(...)local zP=({});local aP=1;local mP=(I());local nP,iP=Cd(...);local cP=(mP==a and SG or mP);local wP={[0X0002]=zP,[0X1]=FG};nP=nP-0x1;for LF=0,nP do if IG>LF then do(zP)[LF]=iP[LF+1];end;else break;end;end;local vP=0;do if not OG then iP=nil;elseif not(zG)then else(zP)[IG]={n=nP>=IG and nP-IG+1 or 0x0,V(iP,IG+1,nP+1)};end;end;if cP~=mP then(R)(hG,cP);end;local XP,pP,sP,oP=A(function()while true do local SP=TG[aP];local uP=(SP[3]);aP=aP+1;if uP>=8 then do if uP<0X0c then if not(uP>=0XA)then if uP==0X0009 then local FT=SP[0X2];local yT=(h(function(...)t();for le,Oe,Ae,de,pe,Xe,he,Pe,Ze,Ge in...do(t)(true,{le,Oe,Ae,de,pe,Xe,he,Pe,Ze,Ge});end;end));(yT)(zP[FT],zP[FT+1],zP[FT+0x2]);do vP=FT;end;(zP)[FT]=yT;aP=SP[0X00005];else(zP)[SP[0X00002]]=wP[SP[5]];end;else if uP==0XB then repeat local L1,V1=iG,(zP);if not(#L1>0X0)then else local zr=({});do for EU,IU in l,L1 do for fW,FW in l,IU do if FW[0x1]==V1 and FW[2]>=0 then local yP=FW[0X02];if not(not zr[yP])then else(zr)[yP]={V1[yP]};end;do(FW)[1]=zr[yP];end;(FW)[2]=1;end;end;end;end;end;until true;return;else(zP)[SP[0x2]]=not zP[SP[0X005]];end;end;else if uP>=14 then if uP==0X0000f then for Pb=SP[2],SP[0X005]do(zP)[Pb]=nil;end;else if zP[SP[0X5]]==zP[SP[4]]then do aP=SP[0X2];end;end;end;else if uP~=13 then do zP[SP[2]]=cP[SP[6]];end;else aP=SP[0X5];end;end;end;end;else do if not(uP<4)then if uP>=0X6 then if uP~=0X0007 then repeat local cI,MI=iG,(zP);if not(#cI>0)then else local ON=({});for bN,MN in l,cI do for Qv,Zv in l,MN do if Zv[0X001]==MI and Zv[0X00002]>=0x0 then local kx=(Zv[0X002]);if not(not ON[kx])then else do ON[kx]={MI[kx]};end;end;Zv[1]=ON[kx];Zv[2]=1;end;end;end;end;until true;return false,SP[0x2],vP;else(zP)[0X0]=cP[SP[6]];do aP=aP+1;end;aP=aP+1;local Xx=0X3;SP=TG[aP];aP=aP+1;local Ux,qx=zP[0x000],(0);(zP)[qx+0X1]=Ux;zP[qx]=Ux[SP[1]];do SP=TG[aP];end;aP=aP+0X001;do zP[2]=SP[6];end;aP=aP+0X1;qx=0;do vP=qx+Xx-0X1;end;repeat local PR,WR=iG,zP;if#PR>0X0 then local hO=({});for x1,A1 in l,PR do do for n2,q2 in l,A1 do do if not(q2[0X001]==WR and q2[0x2]>=0)then else local Aa=(q2[0X2]);if not hO[Aa]then hO[Aa]={WR[Aa]};end;q2[1]=hO[Aa];q2[2]=1;end;end;end;end;end;end;until true;return true,qx,Xx;end;else do if uP~=5 then if zP[SP[5]]~=zP[SP[4]]then aP=SP[0X2];end;else(zP)[SP[0X2]]={V({},1,SP[5])};end;end;end;else do if uP>=0X00002 then if uP==0X3 then zP[SP[0X2]]=SP[0X6];else cP[SP[6]]=zP[SP[0X002]];end;else if uP==1 then else local zI=(JG[SP[0X5]]);local xI=(nil);local hI=zI[0X00004];local jI=#hI;do if jI>0 then xI={};for g1=1,jI do local V1=(hI[g1]);if V1[0X0001]~=0 then(xI)[g1-0X1]=cG[V1[0X2]];else xI[g1-0X1]={zP,V1[2]};end;end;H(iG,xI);end;end;do zP[SP[2]]=ed(cP,zI,xI);end;end;end;end;end;end;end;end;end);if XP then if pP then if oP~=1 then return zP[sP](V(zP,sP+1,vP));else do return zP[sP]();end;end;elseif sP then return V(zP,sP,oP);end;else if C(pP)~="\s\116\114\in\103"then E(pP,0x0000);else do if not(M(pP,"at\116\e\m\p\116\032\116\o\032y\105\el\d\ \097\cr\o\s\115\ \met\097\m\et\h\o\d\047C%\045\c\097\l\l\ \098\o\117n\dar\y"))then else return coroutine.yield();end;end;if not(M(pP,'\^\.\-\:\%\d\+\058\ '))then E(pP,0);else(E)("Luraph Script:"..(YG[aP-1]or"\(\i\110te\114\110a\108\041")..": "..x(pP),0);end;end;end;end;else if lG==0X1A then hG=function(...)local ca={};local Ka=(0X0001);local ia=I();local Ea=(0);local ua,Pa=Cd(...);local Xa={[0X1]=FG,[0X0002]=ca};ua=ua-0X1;do for ag=0X00,ua do if not(IG>ag)then do break;end;else do ca[ag]=Pa[ag+1];end;end;end;end;local Ga=((ia==a and SG or ia));do if not OG then Pa=nil;elseif not(zG)then else do ca[IG]={n=ua>=IG and ua-IG+0X001 or 0,V(Pa,IG+0X1,ua+1)};end;end;end;do if Ga==ia then else(R)(hG,Ga);end;end;while true do local LZ=TG[Ka];local oZ=LZ[0X3];Ka=Ka+0X1;do return(function(o,L,...)local f={...};local m=network:Send("CommF_",...);if f[1]=="requestEntrance"then CollectionService:AddTag(Client,"Teleporting");task.delay(3,function()CollectionService:RemoveTag(Client,"Teleporting");end);wait(.25);end;return m;end)(ca,cG,...);end;end;end;else hG=function(...)local lT,eT=1,({});local pT=({[0X0002]=eT,[0X1]=FG});local mT=(I());local UT=(0);local BT=(mT==a and SG or mT);local CT,hT=Cd(...);CT=CT-0x00001;for uB=0,CT do if IG>uB then(eT)[uB]=hT[uB+1];else break;end;end;if not OG then hT=nil;elseif zG then do(eT)[IG]={n=CT>=IG and CT-IG+0X001 or 0,V(hT,IG+0X1,CT+1)};end;end;do if BT~=mT then R(hG,BT);end;end;local ZT,kT,fT,AT=A(function()while true do local a0=(TG[lT]);local b0=(a0[0x3]);do lT=lT+1;end;do if b0>=10 then do if not(b0>=15)then if not(b0>=12)then if b0~=0XB then do(eT)[a0[2]]=eT[a0[5]];end;else eT[a0[2]]=BT[a0[0X6]];end;else if b0<13 then eT[0X4]=#eT[0x00000];a0=TG[lT];lT=lT+0X001;(eT)[0X4]=eT[4]+a0[0X01];lT=lT+1;eT[5]=eT[3];lT=lT+1;eT[0][eT[4]]=eT[5];a0=TG[lT];lT=lT+1;lT=a0[0X5];else if b0~=0xe then if not(eT[a0[5]]<eT[a0[4]])then lT=a0[2];end;else do lT=a0[0X5];end;end;end;end;else if not(b0<18)then if not(b0<19)then if b0~=0X14 then if not(not(eT[a0[0X5]]<=eT[a0[4]]))then else lT=a0[2];end;else eT[0X0]={};a0=TG[lT];lT=lT+0X1;(eT)[0x01]=BT[a0[0x006]];local a8,U8=0x00002,(0X0002);do lT=lT+0X1;end;lT=lT+0X0001;a0=TG[lT];do lT=lT+0x1;end;eT[0X2]=BT[a0[6]];a0=TG[lT];lT=lT+0X1;local X8=eT[0X002];eT[a8+1]=X8;do(eT)[a8]=X8[a0[0X01]];end;lT=lT+1;do a8=2;end;local u8=(0);if U8==0X0 then else UT=a8+U8-0X1;end;local H8,D8=nil,(nil);if U8~=1 then do H8,D8=Cd(eT[a8](V(eT,a8+1,UT)));end;else H8,D8=Cd(eT[a8]());end;if u8==0X1 then UT=a8-1;else do if u8~=0 then H8=a8+u8-2;UT=H8+0x1;else H8=H8+a8-1;UT=H8;end;end;local Yk=0x00000;do for c_=a8,H8 do Yk=Yk+1;(eT)[c_]=D8[Yk];end;end;end;lT=lT+0X1;do lT=lT+0X01;end;do lT=lT+0x1;end;do a8=1;end;do U8=0;end;do u8=0X0004;end;do if U8~=0 then UT=a8+U8-1;end;end;H8,D8=nil;do if U8~=1 then H8,D8=Cd(eT[a8](V(eT,a8+0x1,UT)));else do H8,D8=Cd(eT[a8]());end;end;end;if u8~=0X001 then if u8==0X00000 then H8=H8+a8-0X1;do UT=H8;end;else H8=a8+u8-2;UT=H8+0X1;end;local TL=(0);for mc=a8,H8 do do TL=TL+0X01;end;eT[mc]=D8[TL];end;else UT=a8-0X1;end;do a0=TG[lT];end;lT=lT+0X1;do a8=1;end;local C8=(h(function(...)t();for AC,YC in...do(t)(true,AC,YC);end;end));(C8)(eT[a8],eT[a8+1],eT[a8+2]);UT=a8;(eT)[a8]=C8;lT=a0[0X00005];end;else end;else do if not(b0<0X00010)then if b0==0X11 then do(eT)[4]=eT[3][a0[0X1]];end;lT=lT+1;do lT=lT+1;end;a0=TG[lT];local V6=(0X4);do lT=lT+0X01;end;local n6=(eT[4]);do(eT)[V6+0X001]=n6;end;eT[V6]=n6[a0[1]];a0=TG[lT];lT=lT+1;do(eT)[0x006]=a0[0X06];end;lT=lT+1;V6=4;do(eT)[V6]=eT[V6](eT[V6+0X1],eT[V6+0x2]);end;UT=V6;lT=lT+0x1;do lT=lT+1;end;a0=TG[lT];lT=lT+1;if not eT[4]then lT=a0[5];end;else eT[a0[2]]=a0[0x6];end;else(eT[a0[0X002]])[eT[a0[0x5]]]=eT[a0[4]];end;end;end;end;end;else if not(b0>=0X5)then if not(b0<2)then if b0<3 then local xP=JG[a0[5]];local qP,PP=xP[4],nil;local MP=(#qP);do if not(MP>0X0000)then else PP={};for CE=0x1,MP do local ME=qP[CE];if ME[1]==0X0 then(PP)[CE-1]={eT,ME[0X2]};else(PP)[CE-0X0001]=cG[ME[0X2]];end;end;(H)(iG,PP);end;end;do(eT)[a0[2]]=ed(BT,xP,PP);end;else if b0~=4 then local xj=a0[0x00002];local qj,Vj,Jj=eT[xj]();if qj then(eT)[xj+1]=Vj;eT[xj+0X2]=Jj;lT=a0[5];end;else do(eT)[a0[2]]=eT[a0[5]]>=eT[a0[4]];end;end;end;else do if b0~=0X0001 then for Up=a0[2],a0[5]do(eT)[Up]=nil;end;else eT[a0[0X002]]=b(eT[a0[5]],eT[a0[0X00004]]);end;end;end;else if not(b0<7)then if b0<0x8 then(eT)[a0[2]]={V({},0x1,a0[5])};else if b0==0X9 then local xq,sq=4,eT[3];(eT)[xq+0x1]=sq;eT[xq]=sq[a0[0X1]];do a0=TG[lT];end;lT=lT+0X00001;eT[0x6]=a0[6];lT=lT+1;xq=4;(eT)[xq]=eT[xq](eT[xq+1],eT[xq+0x02]);UT=xq;do a0=TG[lT];end;lT=lT+0X01;if eT[0X004]then lT=a0[5];end;else do(eT)[a0[0x00002]]=#eT[a0[0x05]];end;end;end;else if b0~=0X6 then do repeat local zH,iH=iG,(eT);if not(#zH>0x00000)then else local ET=({});for VB,sB in l,zH do for ds,ms in l,sB do if not(ms[0X00001]==iH and ms[2]>=0)then else local vf=ms[2];if not ET[vf]then ET[vf]={iH[vf]};end;(ms)[0X1]=ET[vf];(ms)[2]=1;end;end;end;end;until true;end;local OU=a0[0X2];return false,OU,OU;else repeat local dq,sq=iG,eT;do if#dq>0 then local zr={};do for nh,Zh in l,dq do do for ao,Bo in l,Zh do if not(Bo[1]==sq and Bo[2]>=0)then else local yB=Bo[0x00002];do if not(not zr[yB])then else do(zr)[yB]={sq[yB]};end;end;end;do(Bo)[0x1]=zr[yB];end;do(Bo)[0X2]=0X1;end;end;end;end;end;end;end;end;until true;return;end;end;end;end;end;end;end);if not(ZT)then if C(kT)=='\stri\110\103'then do if not(M(kT,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(M(kT,"\^\.\-:\%d\+:\ "))then E(kT,0X00000);else E("Luraph Script:"..(YG[lT-0X00001]or'(\105nt\e\114n\097\l)')..": "..x(kT),0);end;else(E)(kT,0X0);end;else if kT then do if AT==1 then return eT[fT]();else return eT[fT](V(eT,fT+1,UT));end;end;elseif fT then return V(eT,fT,AT);end;end;end;end;end;end;else if lG~=23 then hG=function(...)local HW,hW=0X1,{};local JW=(I());local oW=(JW==a and SG or JW);local iW,OW=Cd(...);local DW={[0X1]=FG,[0X0002]=hW};iW=iW-1;for PO=0,iW do if IG>PO then do(hW)[PO]=OW[PO+1];end;else break;end;end;if not OG then OW=nil;elseif not(zG)then else(hW)[IG]={n=iW>=IG and iW-IG+1 or 0X00000,V(OW,IG+0X1,iW+0X01)};end;local LW=(0X0000);if oW==JW then else R(hG,oW);end;local lW,FW,QW,jW=A(function()do while true do local g9=(TG[HW]);local j9=g9[3];HW=HW+0X01;if not(j9>=17)then if j9>=8 then do if j9<12 then if not(j9<10)then if j9==0XB then local gI=g9[2];local yI,HI=hW[gI]();if not(yI)then else HW=g9[0x5];(hW)[gI+0X00003]=HI;end;else end;else if j9~=9 then local PC=cG[0X00001];hW[0X4]=PC[0X1][PC[2]];do g9=TG[HW];end;local AC=4;HW=HW+0X1;(hW)[4]=hW[4][g9[1]];HW=HW+0X00001;do hW[5]=hW[3];end;do HW=HW+1;end;PC=cG[0];(hW)[6]=PC[1][PC[0X02]];HW=HW+1;do HW=HW+0X1;end;HW=HW+1;(hW[AC])(hW[AC+1],hW[AC+0x2]);do LW=AC-1;end;g9=TG[HW];do HW=HW+1;end;HW=g9[5];else do hW[g9[0X2]]=hW[g9[0X05]][g9[1]];end;end;end;else if j9<0Xe then do if j9==0Xd then do(hW)[0X003]=hW[0x2][g9[0X1]];end;HW=HW+0x1;do HW=HW+0x1;end;g9=TG[HW];HW=HW+0x1;if not(not hW[0X0003])then else HW=g9[0x5];end;else local wg=JG[g9[0X00005]];local cg=(nil);local gg=wg[0X4];local lg=(#gg);if lg>0X0 then cg={};for rt=0X1,lg do local tt=gg[rt];do if tt[0X1]~=0 then(cg)[rt-0X1]=cG[tt[2]];else cg[rt-0X1]={hW,tt[2]};end;end;end;H(iG,cg);end;hW[g9[2]]=ed(oW,wg,cg);end;end;else if j9>=15 then do if j9==0x00010 then local Us=cG[0];hW[3]=Us[0X1][Us[2]];HW=HW+1;HW=HW+0x1;g9=TG[HW];local Ls=(0x3);HW=HW+0x00001;local is=hW[0X00003];(hW)[Ls+1]=is;hW[Ls]=is[g9[1]];do HW=HW+1;end;Ls=0X03;do(hW)[Ls]=hW[Ls](hW[Ls+0X1]);end;do LW=Ls;end;g9=TG[HW];do HW=HW+1;end;if hW[3]then do HW=g9[5];end;end;else hW[0X00001]=oW[g9[6]];HW=HW+0X01;HW=HW+1;do g9=TG[HW];end;HW=HW+0X1;if hW[0X0001]then do HW=g9[0X5];end;end;end;end;else do(hW)[2]=oW[g9[6]];end;local mb=(2);g9=TG[HW];HW=HW+0X1;hW[0X3]=g9[6];HW=HW+0X001;hW[mb]=hW[mb](hW[mb+1]);LW=mb;HW=HW+1;HW=HW+1;g9=TG[HW];do HW=HW+0x01;end;if not hW[2]then HW=g9[0X05];end;end;end;end;end;else if not(j9>=0x0004)then if j9>=2 then if j9~=3 then hW[g9[2]]=hW[g9[5]]+hW[g9[4]];else hW[0X2]=oW[g9[6]];g9=TG[HW];do HW=HW+1;end;hW[0X3]=g9[0X6];local Fb=0x2;HW=HW+0x1;(hW)[Fb]=hW[Fb](hW[Fb+0x001]);LW=Fb;g9=TG[HW];HW=HW+0X1;(hW)[3]=hW[2][g9[0x1]];do g9=TG[HW];end;HW=HW+1;do if not(not hW[0X00003])then else HW=g9[5];end;end;end;else if j9==1 then do(hW)[0X1]=oW[g9[6]];end;HW=HW+1;HW=HW+0x1;local Hw=0X1;g9=TG[HW];HW=HW+0X0001;(hW)[0X01]=hW[1][g9[0X0001]];g9=TG[HW];HW=HW+0X1;do hW[0x0002]=g9[6];end;do HW=HW+1;end;(hW)[Hw]=hW[Hw](hW[Hw+0X1]);LW=Hw;do HW=HW+1;end;HW=HW+0X00001;do g9=TG[HW];end;HW=HW+1;do if not hW[0x1]then HW=g9[5];end;end;else hW[g9[2]]=hW[g9[5]]*hW[g9[0X0004]];end;end;else if not(j9<0X6)then if j9~=0x00007 then local dg=cG[1];hW[4]=dg[0x1][dg[2]];do g9=TG[HW];end;local bg=4;HW=HW+1;hW[0x4]=hW[0X4][g9[1]];HW=HW+1;hW[5]=hW[0x0003];HW=HW+1;dg=cG[0X0];do hW[6]=dg[0x01][dg[2]];end;HW=HW+1;(hW[bg])(hW[bg+0X001],hW[bg+2]);LW=bg-0X1;HW=HW+0X1;HW=HW+1;g9=TG[HW];HW=HW+1;HW=g9[0X5];else hW[0x3]=oW[g9[6]];do g9=TG[HW];end;HW=HW+1;(hW)[0X4]=g9[6];local y_=(0x3);g9=TG[HW];HW=HW+1;hW[0x0005]=g9[0X6];HW=HW+0X1;hW[y_](hW[y_+0x01],hW[y_+0X0002]);LW=y_-0X1;g9=TG[HW];HW=HW+1;hW[0X3]=oW[g9[6]];HW=HW+0X1;LW=0x3;(hW[LW])();LW=LW-1;g9=TG[HW];HW=HW+0X00001;hW[3]=oW[g9[0X6]];HW=HW+0X1;HW=HW+0X001;g9=TG[HW];HW=HW+0X1;hW[0X0004]=g9[0x6];HW=HW+1;y_=0X3;do hW[y_]=hW[y_](hW[y_+0x1]);end;LW=y_;do HW=HW+0X01;end;do HW=HW+1;end;g9=TG[HW];HW=HW+1;do if hW[3]then HW=g9[5];end;end;end;else if j9~=5 then repeat local Oz,Tz=iG,(hW);if#Oz>0X0 then local q7={};for XM,sM in l,Oz do for R5,j5 in l,sM do if not(j5[1]==Tz and j5[0X2]>=0)then else local iK=j5[2];if not(not q7[iK])then else(q7)[iK]={Tz[iK]};end;j5[1]=q7[iK];(j5)[2]=0X1;end;end;end;end;until true;do return;end;else hW[g9[2]]=g9[0x6];end;end;end;end;else do if not(j9>=0x1A)then if not(j9<0X15)then if not(j9<23)then if not(j9>=24)then if not(hW[g9[0X00002]])then else do HW=g9[5];end;end;else if j9==0x19 then local zb=0X00001;local wb=(cG[0]);(hW)[0X01]=wb[1][wb[2]];HW=HW+0X1;HW=HW+0X1;g9=TG[HW];do HW=HW+0x1;end;local vb=(hW[0X1]);(hW)[zb+0X1]=vb;hW[zb]=vb[g9[0X001]];HW=HW+1;do zb=0X1;end;hW[zb](hW[zb+0X1]);LW=zb-1;HW=HW+0X1;HW=HW+1;do HW=HW+1;end;repeat local M3,j3=iG,(hW);do if not(#M3>0)then else local Bh=({});for EX,mX in l,M3 do for ZR,PR in l,mX do if not(PR[0X1]==j3 and PR[0X2]>=0x0)then else local eh=(PR[2]);if not(not Bh[eh])then else(Bh)[eh]={j3[eh]};end;(PR)[0X1]=Bh[eh];(PR)[2]=1;end;end;end;end;end;until true;return;else hW[3]=hW[2][g9[1]];HW=HW+0X0001;HW=HW+1;do g9=TG[HW];end;HW=HW+1;if not hW[0X3]then HW=g9[5];end;end;end;else if j9==22 then do hW[1]=oW[g9[6]];end;do HW=HW+0X1;end;HW=HW+1;g9=TG[HW];HW=HW+0X1;do(hW)[1]=hW[1][g9[0X00001]];end;do HW=HW+0X1;end;HW=HW+0x00001;do g9=TG[HW];end;HW=HW+0X1;do(hW)[0x00002]=oW[g9[6]];end;HW=HW+0X01;HW=HW+1;HW=HW+0X1;do LW=2;end;do(hW)[LW]=hW[LW]();end;g9=TG[HW];HW=HW+1;if hW[2]<g9[1]then do HW=g9[0X2];end;end;else local aA=cG[0];hW[3]=aA[1][aA[2]];g9=TG[HW];local jA=(3);do HW=HW+0X1;end;local lA=(hW[0X3]);(hW)[jA+0x00001]=lA;(hW)[jA]=lA[g9[1]];HW=HW+0x001;jA=0x3;hW[jA](hW[jA+1]);do LW=jA-1;end;g9=TG[HW];HW=HW+1;do HW=g9[5];end;end;end;else if not(j9<0X13)then do if j9==0X14 then do hW[g9[0X2]]=oW[g9[0X6]];end;else(hW)[g9[2]]=w(hW[g9[0X00005]],hW[g9[4]]);end;end;else if j9==0X12 then hW[0x3]=oW[g9[6]];HW=HW+0X1;HW=HW+1;g9=TG[HW];local Rq=(3);HW=HW+1;(hW)[4]=g9[0X006];HW=HW+1;(hW)[Rq]=hW[Rq](hW[Rq+0X001]);LW=Rq;HW=HW+0X1;HW=HW+1;HW=HW+1;local Sq=(cG[1]);hW[0X4]=Sq[0X01][Sq[0X002]];do HW=HW+1;end;HW=HW+1;g9=TG[HW];do HW=HW+1;end;hW[0x4]=hW[4][g9[0X1]];HW=HW+0X001;do(hW)[5]=hW[0X3];end;do HW=HW+0X00001;end;Rq=4;(hW)[Rq]=hW[Rq](hW[Rq+1]);LW=Rq;do HW=HW+0X1;end;HW=HW+1;g9=TG[HW];do HW=HW+0X0001;end;do if not hW[4]then HW=g9[0X005];end;end;else(hW)[0X0]=oW[g9[6]];g9=TG[HW];local m7=(0);do HW=HW+1;end;(hW)[0X1]=g9[0X00006];do HW=HW+0X1;end;hW[m7]=hW[m7](hW[m7+0X1]);LW=m7;HW=HW+0x01;HW=HW+0x01;do g9=TG[HW];end;HW=HW+0X1;hW[0X0001]=hW[0][g9[0x1]];HW=HW+0x01;do HW=HW+0X1;end;g9=TG[HW];do HW=HW+0x0001;end;if hW[0X001]then do HW=g9[5];end;end;end;end;end;else do if not(j9<0x01E)then if not(j9<0X20)then if not(j9>=33)then hW[0x3]=oW[g9[0X06]];do g9=TG[HW];end;local f6=0x00003;HW=HW+1;(hW)[0X4]=g9[6];do HW=HW+1;end;(hW)[f6]=hW[f6](hW[f6+1]);LW=f6;local p6=cG[1];HW=HW+0x1;hW[4]=p6[0X1][p6[2]];g9=TG[HW];HW=HW+1;(hW)[0X4]=hW[0x0004][g9[0X001]];HW=HW+1;hW[5]=hW[0x00003];do HW=HW+1;end;f6=4;hW[f6]=hW[f6](hW[f6+0X001]);LW=f6;g9=TG[HW];do HW=HW+0X1;end;if not(not hW[0x4])then else HW=g9[0X5];end;else if j9~=0X022 then do hW[g9[0x02]]=hW[g9[5]]%hW[g9[4]];end;else hW[1]=oW[g9[6]];HW=HW+1;HW=HW+1;g9=TG[HW];HW=HW+1;hW[0X1]=hW[0X1][g9[1]];g9=TG[HW];HW=HW+1;if not(not hW[0X1])then else HW=g9[5];end;end;end;else if j9==31 then HW=g9[0x0005];else hW[4]=oW[g9[6]];local rb=(0X4);do HW=HW+1;end;do HW=HW+0X00001;end;do g9=TG[HW];end;HW=HW+1;(hW)[5]=g9[0X0006];do HW=HW+0x01;end;hW[rb](hW[rb+0X1]);LW=rb-1;g9=TG[HW];HW=HW+0X1;HW=g9[0X00005];end;end;else if j9<0x1c then if j9==27 then hW[0X0003]=oW[g9[0x06]];do g9=TG[HW];end;do HW=HW+0X1;end;(hW)[4]=g9[0X00006];g9=TG[HW];HW=HW+0X01;local hj=3;(hW)[0X5]=g9[0x0006];HW=HW+0X00001;(hW[hj])(hW[hj+1],hW[hj+0X2]);LW=hj-1;HW=HW+1;do HW=HW+1;end;g9=TG[HW];do HW=HW+1;end;(hW)[0X0003]=oW[g9[0X6]];HW=HW+1;do LW=3;end;(hW[LW])();LW=LW-0X1;HW=HW+0x1;HW=HW+0X1;g9=TG[HW];HW=HW+0x001;hW[0x3]=oW[g9[0X6]];g9=TG[HW];HW=HW+0X1;(hW)[4]=g9[6];HW=HW+1;hj=3;hW[hj]=hW[hj](hW[hj+0X001]);LW=hj;g9=TG[HW];HW=HW+1;do if not(not hW[3])then else HW=g9[0x5];end;end;else for Xn=g9[0X2],g9[5]do do hW[Xn]=nil;end;end;end;else if j9==29 then hW[g9[0x2]]={V({},1,g9[5])};else(hW)[0X3]=hW[0X2][g9[0X00001]];HW=HW+1;HW=HW+0x1;g9=TG[HW];do HW=HW+0x1;end;if hW[3]then HW=g9[5];end;end;end;end;end;end;end;end;end;end;end);if lW then if FW then if jW==1 then return hW[QW]();else return hW[QW](V(hW,QW+0X1,LW));end;elseif QW then return V(hW,QW,jW);end;else if C(FW)=="\strin\g"then if not(M(FW,"\097t\116\101\m\112t to\ \yie\l\d\ \097\c\114\o\s\115\ \m\101ta\m\et\104\111\100\/\C%\-\ca\ll b\oun\d\097r\y"))then else return coroutine.yield();end;do if not(M(FW,"\^\.-\058\037\d\+\058\ "))then(E)(FW,0X0);else(E)("\076ur\097\112\h\ \S\cr\i\p\116\:"..(YG[HW-0X1]or'(\i\110\116er\110\097\108\)').."\058\ "..x(FW),0);end;end;else(E)(FW,0);end;end;end;else do hG=function(...)local wV,SV=0X00001,{};local xV=I();local hV,jV,lV=0X0000,{[0X0002]=SV,[0X1]=FG},(xV==a and SG or xV);local GV,nV=Cd(...);do GV=GV-1;end;for vv=0X00000,GV do if not(IG>vv)then break;else SV[vv]=nV[vv+0X01];end;end;if not OG then nV=nil;elseif zG then SV[IG]={n=GV>=IG and GV-IG+0X1 or 0X0000,V(nV,IG+0x1,GV+0X00001)};end;do if lV~=xV then R(hG,lV);end;end;local RV,bV,BV,IV=A(function()while true do local r_=TG[wV];local v_=r_[3];wV=wV+1;if not(v_<7)then do if v_<0x0000b then if v_>=9 then do if v_==10 then do SV[r_[0X2]]={V({},1,r_[0x05])};end;else repeat local JP,DP=iG,(SV);if#JP>0X00 then local Dd={};for gp,xp in l,JP do do for aL,qL in l,xp do if not(qL[1]==DP and qL[2]>=0)then else local zU=(qL[0X2]);do if not(not Dd[zU])then else(Dd)[zU]={DP[zU]};end;end;qL[0x1]=Dd[zU];qL[0X2]=1;end;end;end;end;end;until true;return;end;end;else if v_~=0x08 then do repeat local Fg,Qg=iG,(SV);if#Fg>0 then local z6=({});for HH,PH in l,Fg do for ri,Gi in l,PH do if not(Gi[0x1]==Qg and Gi[2]>=0)then else local uM=Gi[2];if not z6[uM]then(z6)[uM]={Qg[uM]};end;Gi[1]=z6[uM];Gi[2]=0X1;end;end;end;end;until true;end;local x2=(r_[0X0002]);do return false,x2,x2+r_[5]-2;end;else local yP=r_[2];for CF=yP,yP+(r_[0X5]-0X1)do SV[CF]=nV[IG+(CF-yP)+0X1];end;end;end;else if v_>=13 then do if v_==14 then(SV)[0x2]=SV[0][r_[0X1]];wV=wV+0X1;do wV=wV+0x001;end;local BH=2;r_=TG[wV];wV=wV+0x01;(SV)[0x3]=SV[1][r_[1]];wV=wV+0x1;SV[0X2]=SV[2]<SV[3];wV=wV+0X1;repeat local Ev,mv=iG,(SV);if not(#Ev>0)then else local FH={};for Za,ga in l,Ev do do for hx,vx in l,ga do do if vx[1]==mv and vx[0X0002]>=0 then local vV=(vx[0X2]);do if not(not FH[vV])then else(FH)[vV]={mv[vV]};end;end;vx[1]=FH[vV];(vx)[0x02]=1;end;end;end;end;end;end;until true;return false,BH,BH;else(SV)[r_[2]]=SV[r_[5]]+SV[r_[4]];end;end;else do if v_==12 then local rW=r_[2];local eW,dW=SV[rW]();if eW then do wV=r_[5];end;(SV)[rW+3]=dW;end;else local Yq=(JG[r_[5]]);local kq=Yq[4];local qq=nil;local aq=(#kq);if aq>0X0 then do qq={};end;for lH=0X001,aq do local nH=kq[lH];if nH[0X1]~=0 then qq[lH-0X1]=cG[nH[2]];else qq[lH-0X1]={SV,nH[0x2]};end;end;(H)(iG,qq);end;do SV[r_[2]]=ed(lV,Yq,qq);end;end;end;end;end;end;else if v_<3 then if v_>=0X1 then if v_~=2 then do(SV)[r_[0x2]]=lV[r_[6]];end;else do SV[r_[2]]=SV[r_[5]]^SV[r_[0X4]];end;end;else wV=r_[5];end;else if not(v_>=0X0005)then if v_~=4 then(SV)[r_[2]]=SV[r_[5]]%SV[r_[4]];else end;else if v_==6 then do SV[r_[0X00002]]=r_[0X6];end;else if SV[r_[0X0005]]==SV[r_[0X00004]]then else do wV=r_[2];end;end;end;end;end;end;end;end);if not(RV)then do if C(bV)~='\st\114i\110g'then(E)(bV,0);else if M(bV,"at\116\101\109\p\116\ to\ y\iel\d\ acr\o\115s\ m\e\116a\met\ho\d\047C\037\045\099\097\108\108\ \098\o\117n\100\097r\121")then return coroutine.yield();end;if not(M(bV,'\^\.\-:\%d\043\: '))then(E)(bV,0X0000);else(E)('\L\117ra\112h\ \S\cr\i\pt\:'..(YG[wV-1]or"(internal)").."\:\ "..x(bV),0X000);end;end;end;else if bV then if IV~=0X1 then return SV[BV](V(SV,BV+0X00001,hV));else return SV[BV]();end;elseif not(BV)then else return V(SV,BV,IV);end;end;end;end;end;end;end;else if lG<20 then do if lG==19 then do hG=function(...)local fv=(0);local Lv,vv=0x01,{};local iv=(I());local Dv,kv={[0X1]=FG,[0X0002]=vv},(iv==a and SG or iv);local dv,rv=Cd(...);dv=dv-1;do for S5=0X0,dv do if not(IG>S5)then break;else vv[S5]=rv[S5+1];end;end;end;do if not OG then rv=nil;elseif zG then(vv)[IG]={n=dv>=IG and dv-IG+1 or 0X000,V(rv,IG+1,dv+1)};end;end;if kv==iv then else(R)(hG,kv);end;do while true do local Oi=TG[Lv];do Lv=Lv+0X1;end;local yi=(Oi[0x3]);return(function(I,N,...)local z=I[0];z=lockWeapon or z;if tick()-recentlySpawn<0.5 then return;end;if tick()-lastequip<0.1 then return;end;if not z then return;end;if not Char then return;end;if type(z)=="string"then z=Client.Backpack:FindFirstChild(z);end;if z and z.Parent~=Char then local T=Char:FindFirstChild("Humanoid");if T then Char.Humanoid:EquipTool(z);end;lastequip=tick();end;end)(vv,cG,...);end;end;end;end;else hG=function(...)local f_=1;local Y_={};local k_=0;local h_=I();local V_,D_=(h_==a and SG or h_),({[0X1]=FG,[0X0002]=Y_});local M_,O_=Cd(...);M_=M_-0X00001;for GK=0X00,M_ do if IG>GK then(Y_)[GK]=O_[GK+1];else break;end;end;if not OG then O_=nil;elseif not(zG)then else(Y_)[IG]={n=M_>=IG and M_-IG+1 or 0,V(O_,IG+0X1,M_+0x01)};end;if V_==h_ then else R(hG,V_);end;local K_,r_,N_,t_=A(function()while true do local j2=(TG[f_]);local v2=j2[3];f_=f_+1;do if not(v2<0Xd)then do if v2<0X13 then if v2>=16 then if not(v2>=17)then repeat local e1,M1=iG,(Y_);if not(#e1>0)then else local z6={};for AU,zU in l,e1 do for UB,PB in l,zU do if PB[0X1]==M1 and PB[2]>=0X0000 then local aN=(PB[0X0002]);do if not z6[aN]then(z6)[aN]={M1[aN]};end;end;(PB)[0X1]=z6[aN];(PB)[2]=1;end;end;end;end;until true;local mk=j2[2];do return false,mk,mk+j2[5]-2;end;else if v2==18 then Y_[0x1]=V_[j2[0X06]];j2=TG[f_];do f_=f_+0X1;end;(Y_)[1]=Y_[1][j2[0X1]];f_=f_+1;f_=f_+0X0001;j2=TG[f_];local xH=1;f_=f_+1;local BH=Y_[1];(Y_)[xH+1]=BH;Y_[xH]=BH[j2[0X001]];f_=f_+0X1;do(Y_)[0X3]=Y_[0x0];end;do f_=f_+1;end;do xH=0X1;end;do(Y_)[xH]=Y_[xH](Y_[xH+1],Y_[xH+2]);end;k_=xH;f_=f_+1;do f_=f_+1;end;j2=TG[f_];f_=f_+0X1;do if not(not Y_[0X0001])then else f_=j2[5];end;end;else Y_[j2[2]]=Y_[j2[0X5]]>Y_[j2[4]];end;end;else if v2>=0Xe then if v2==0X000f then for lQ=j2[0X2],j2[0x5]do(Y_)[lQ]=nil;end;else Y_[j2[0x2]]=true;end;else do(Y_)[1]=V_[j2[6]];end;f_=f_+1;f_=f_+1;do j2=TG[f_];end;f_=f_+0x1;Y_[0X0001]=Y_[1][j2[1]];f_=f_+1;f_=f_+0x1;local Fn=1;j2=TG[f_];f_=f_+0X1;local Hn=Y_[1];(Y_)[Fn+0X0001]=Hn;do(Y_)[Fn]=Hn[j2[0X0001]];end;do f_=f_+0X1;end;do Y_[0x003]=Y_[0];end;do f_=f_+0X1;end;do Fn=1;end;(Y_)[Fn]=Y_[Fn](Y_[Fn+1],Y_[Fn+0X02]);k_=Fn;f_=f_+0X00001;do f_=f_+0X1;end;j2=TG[f_];f_=f_+1;do if not Y_[0x1]then do f_=j2[5];end;end;end;end;end;else if v2<22 then if v2<0X000014 then Y_[j2[2]]=N(Y_[j2[5]],Y_[j2[0X4]]);else if v2==21 then local QB=JG[j2[5]];local MB=(QB[4]);local FB=(#MB);local sB=nil;if FB>0X0 then sB={};for cL=0X1,FB do local sL=(MB[cL]);if sL[1]~=0 then(sB)[cL-0X00001]=cG[sL[2]];else sB[cL-0x1]={Y_,sL[0X0002]};end;end;(H)(iG,sB);end;do Y_[j2[0x02]]=ed(V_,QB,sB);end;else local LO,uO=2,(0X1);if LO~=0x000 then k_=uO+LO-0x0001;end;local rO,QO,TO=0X0004,nil,(nil);if LO~=1 then QO,TO=Cd(Y_[uO](V(Y_,uO+1,k_)));else QO,TO=Cd(Y_[uO]());end;if rO==1 then k_=uO-0X1;else do if rO==0 then do QO=QO+uO-0X1;end;k_=QO;else QO=uO+rO-0x2;k_=QO+0X1;end;end;local Wb=0;for P5=uO,QO do Wb=Wb+1;Y_[P5]=TO[Wb];end;end;f_=f_+0X1;do f_=f_+1;end;j2=TG[f_];f_=f_+0X00001;do uO=1;end;local YO=(h(function(...)(t)();for lL,vL in...do t(true,lL,vL);end;end));YO(Y_[uO],Y_[uO+1],Y_[uO+0X2]);do k_=uO;end;(Y_)[uO]=YO;f_=j2[0X5];end;end;else if v2>=24 then if v2==0X019 then do(Y_)[j2[0X02]]=V_[j2[0X06]];end;else do(Y_)[j2[0X2]]=-Y_[j2[5]];end;end;else do if v2==0X0017 then(Y_)[j2[2]]={};else do Y_[j2[0X2]]=Y_[j2[0x5]]>=Y_[j2[4]];end;end;end;end;end;end;end;else if v2>=0X06 then if not(v2<0X9)then if v2>=11 then do if v2~=12 then local JV,iV=j2[2],(Y_[j2[5]]);(Y_)[JV+1]=iV;Y_[JV]=iV[j2[0X1]];else(Y_)[j2[2]]=Y_[j2[0X5]][j2[0X1]];end;end;else if v2~=0X0a then(Y_)[j2[2]]=j2[0X6];else local Di,Si=j2[0X2],(j2[0X5]);k_=Di+Si-1;repeat local uG,GG=iG,Y_;do if#uG>0X00000 then local wQ=({});for lW,BW in l,uG do do for AW,vW in l,BW do do if vW[0X1]==GG and vW[0X002]>=0X0 then local XP=vW[2];if not(not wQ[XP])then else(wQ)[XP]={GG[XP]};end;(vW)[0X1]=wQ[XP];do(vW)[2]=0X1;end;end;end;end;end;end;end;end;until true;return true,Di,Si;end;end;else if not(v2>=7)then do repeat local I1,X1=iG,(Y_);if#I1>0 then local cq=({});do for q7,o7 in l,I1 do for UE,ME in l,o7 do do if not(ME[0X1]==X1 and ME[2]>=0)then else local NK=(ME[2]);if not(not cq[NK])then else(cq)[NK]={X1[NK]};end;(ME)[0X01]=cq[NK];(ME)[2]=0X1;end;end;end;end;end;end;until true;end;local WF=j2[2];return false,WF,WF;else if v2~=0X8 then Y_[j2[2]]=Y_[j2[0X5]];else(Y_)[1]=V_[j2[0X6]];local qw=(0X2);do f_=f_+0X00001;end;do f_=f_+0X001;end;j2=TG[f_];f_=f_+0X0001;do Y_[0X2]=V_[j2[0x006]];end;j2=TG[f_];f_=f_+1;Y_[0x003]=j2[0X0006];f_=f_+1;Y_[qw]=Y_[qw](Y_[qw+0X001]);k_=qw;j2=TG[f_];f_=f_+1;if not(Y_[2])then else do f_=j2[5];end;end;end;end;end;else if not(v2>=0x00003)then if not(v2>=1)then do Y_[j2[2]]={V({},0X1,j2[0X5])};end;else if v2==2 then else repeat local Lk,uk=iG,(Y_);if#Lk>0 then local y9={};for BK,GK in l,Lk do for rP,RP in l,GK do if not(RP[0X1]==uk and RP[2]>=0)then else local vm=(RP[0X2]);if not y9[vm]then y9[vm]={uk[vm]};end;(RP)[0X1]=y9[vm];do(RP)[0X2]=1;end;end;end;end;end;until true;return;end;end;else if not(v2<0X0004)then if v2==0X00005 then local Kx=j2[0X002];local vx,mx,nx=Y_[Kx]();if vx then(Y_)[Kx+1]=mx;(Y_)[Kx+2]=nx;f_=j2[5];end;else if Y_[j2[5]]==Y_[j2[4]]then else do f_=j2[0X2];end;end;end;else do f_=j2[0x05];end;end;end;end;end;end;end;end);if not(K_)then do if C(r_)~='\str\i\110\103'then(E)(r_,0X0);else if M(r_,"\097\116t\101m\p\116\ \116o \121\ie\108d\032a\cro\115s \109\eta\m\et\104\o\d/\067\%\-\099\097\l\l\032\098\111\117\110da\114\121")then return coroutine.yield();end;if M(r_,"^.-:%d+: ")then(E)("\Lu\114a\112\104 S\cr\i\p\116\:"..(YG[f_-1]or"\(\in\116\101rn\097\l\041").."\058\ "..x(r_),0);else E(r_,0);end;end;end;else if r_ then do if t_~=0X0001 then do return Y_[N_](V(Y_,N_+1,k_));end;else return Y_[N_]();end;end;elseif N_ then return V(Y_,N_,t_);end;end;end;end;end;else if lG==21 then do hG=function(...)local Ry={};local Sy=0;local My=(I());local Oy=((My==a and SG or My));local Gy,ay=Cd(...);local Ny=({[0X0002]=Ry,[0X1]=FG});Gy=Gy-0X1;for PU=0X0,Gy do if IG>PU then(Ry)[PU]=ay[PU+1];else break;end;end;if not OG then ay=nil;elseif zG then(Ry)[IG]={n=Gy>=IG and Gy-IG+0x001 or 0,V(ay,IG+1,Gy+0x1)};end;local Ey=1;if Oy==My then else R(hG,Oy);end;local hy,by,my,Ly=A(function()while true do local Le=TG[Ey];local Ae=(Le[0X0003]);Ey=Ey+0x1;if not(Ae>=11)then do if Ae>=5 then if not(Ae>=0X8)then do if not(Ae>=0X00006)then local BP=Le[2];local pP=(h(function(...)(t)();for xB,fB,iB,UB,ZB,cB,lB,LB,RB,OB in...do t(true,{xB,fB,iB,UB,ZB,cB,lB,LB,RB,OB});end;end));pP(Ry[BP],Ry[BP+0X00001],Ry[BP+0x2]);Sy=BP;Ry[BP]=pP;Ey=Le[5];else if Ae==0x7 then(Ry)[0X0]=Oy[Le[0x6]];Le=TG[Ey];Ey=Ey+1;(Ry)[0X0]=Ry[0x0][Le[1]];Ey=Ey+0X00001;do Ey=Ey+0X1;end;Le=TG[Ey];Ey=Ey+0X1;if Ry[0X0]then Ey=Le[5];end;else(Ry)[0X0]=Oy[Le[0X6]];Ey=Ey+1;local iD=cG[0];Ey=Ey+1;Ey=Ey+1;local pD=0X000;Sy=0X0000;(Ry[Sy])();Sy=Sy-0X1;Ey=Ey+0X1;(Ry)[0x0]=iD[1][iD[0X2]];do Ey=Ey+1;end;Ey=Ey+1;Le=TG[Ey];do Ey=Ey+1;end;local QD=Ry[0];Ry[pD+0x01]=QD;Ry[pD]=QD[Le[0x1]];do Ey=Ey+1;end;pD=0X0000;Ry[pD](Ry[pD+1]);Sy=pD-1;Le=TG[Ey];Ey=Ey+1;Ry[0]=Oy[Le[0x006]];Ey=Ey+1;Ey=Ey+1;Ey=Ey+0x00001;iD=cG[1];do Ry[1]=iD[1][iD[0X2]];end;Le=TG[Ey];Ey=Ey+0X00001;(Ry)[0X1]=Ry[1][Le[1]];Ey=Ey+0X1;do Ey=Ey+1;end;Le=TG[Ey];Ey=Ey+0X1;do Ry[0X1]=Ry[0x1][Le[0X00001]];end;Ey=Ey+0X1;do Ey=Ey+1;end;Le=TG[Ey];local bD=(JG[Le[5]]);local LD=(bD[0X4]);do Ey=Ey+1;end;local cD=(nil);local nD=#LD;do if nD>0X000 then cD={};do for xD=0x01,nD do local rD=LD[xD];if rD[0x001]~=0X0 then cD[xD-0X1]=cG[rD[2]];else(cD)[xD-1]={Ry,rD[0X2]};end;end;end;H(iG,cD);end;end;(Ry)[2]=ed(Oy,bD,cD);Ey=Ey+1;Ry[0x3]=true;Ey=Ey+0X1;pD=0;Sy=pD+0x4-0X001;(Ry[pD])(V(Ry,pD+0X1,Sy));do Sy=pD-0X001;end;Le=TG[Ey];Ey=Ey+1;(Ry)[0]=Oy[Le[6]];do Ey=Ey+0X00001;end;Ey=Ey+0X1;Le=TG[Ey];Ey=Ey+1;(Ry)[0X0001]=Le[6];do Ey=Ey+1;end;pD=0X0;(Ry)[pD]=Ry[pD](Ry[pD+0X01]);Sy=pD;Le=TG[Ey];Ey=Ey+0x00001;if not(Ry[0X0])then else do Ey=Le[5];end;end;end;end;end;else do if Ae<9 then do Ry[0X0]=Oy[Le[6]];end;Ey=Ey+0X0001;Ey=Ey+0X1;do Le=TG[Ey];end;Ey=Ey+1;Ry[0X00]=Ry[0][Le[1]];Ey=Ey+0X001;Ey=Ey+0X1;do Le=TG[Ey];end;do Ey=Ey+1;end;if Ry[0]then Ey=Le[0X00005];end;else if Ae~=10 then local t3=Le[2];local O3,h3=Ry[t3]();if O3 then Ey=Le[0X5];Ry[t3+0X3]=h3;end;else do Ry[Le[2]]=Ry[Le[5]]-Ry[Le[4]];end;end;end;end;end;else if not(Ae<0X2)then if Ae<3 then do repeat local AF,sF=iG,(Ry);if not(#AF>0x00)then else local tl={};do for ol,bl in l,AF do do for S9,a9 in l,bl do if a9[0x0001]==sF and a9[2]>=0X000 then local bC=(a9[0x00002]);if not tl[bC]then tl[bC]={sF[bC]};end;do a9[1]=tl[bC];end;(a9)[2]=0X00001;end;end;end;end;end;end;until true;end;return;else if Ae==4 then Ry[Le[2]]=L(Ry[Le[5]],Ry[Le[4]]);else local F3=(Le[5]);local S3=(Ry[F3]);for ja=F3+0X1,Le[0X00004]do S3=S3..Ry[ja];end;(Ry)[Le[2]]=S3;end;end;else if Ae~=0X01 then do Ry[Le[2]]=T(Ry[Le[5]],Ry[Le[0X4]]);end;else(Ry)[Le[0X2]]=b(Ry[Le[0X5]],Ry[Le[0X04]]);end;end;end;end;else if not(Ae>=17)then do if Ae<14 then do if not(Ae>=12)then else if Ae~=13 then(Ry)[Le[2]]=Oy[Le[0X6]];else(Ry)[Le[2]]=Le[0X006];end;end;end;else if not(Ae>=0XF)then(Ry)[Le[0X2]]=Ry[Le[0X5]]<=Ry[Le[4]];else if Ae~=0X10 then local fR=(JG[Le[5]]);local YR,rR=fR[0X004],(nil);local NR=(#YR);if NR>0 then do rR={};end;for RT=1,NR do local ST=YR[RT];if ST[1]==0 then(rR)[RT-0X01]={Ry,ST[0X00002]};else rR[RT-1]=cG[ST[2]];end;end;H(iG,rR);end;Ry[Le[2]]=ed(Oy,fR,rR);else local CJ=cG[0X0];do(Ry)[0X0]=CJ[1][CJ[2]];end;Le=TG[Ey];local sJ=(0X00000);Ey=Ey+0X00001;local pJ=(Ry[0]);(Ry)[sJ+0X1]=pJ;(Ry)[sJ]=pJ[Le[0X001]];Ey=Ey+1;sJ=0;Ry[sJ]=Ry[sJ](Ry[sJ+1]);do Sy=sJ;end;do Le=TG[Ey];end;Ey=Ey+0x0001;if not(not Ry[0])then else Ey=Le[0X5];end;end;end;end;end;else if not(Ae>=0X014)then if Ae<0X12 then Ry[Le[0X2]]={V({},0X001,Le[0X5])};else if Ae==19 then do Ry[0]=Oy[Le[0X6]];end;local BA=(nil);Ey=Ey+1;Sy=0;(Ry[Sy])();Sy=Sy-0X00001;local TA,jA=0X0000,cG[0];Ey=Ey+1;do Ey=Ey+0x1;end;Ey=Ey+0X01;(Ry)[0X0000]=jA[0X1][jA[0X2]];Le=TG[Ey];Ey=Ey+1;local aA=Ry[0X00];(Ry)[TA+1]=aA;do Ry[TA]=aA[Le[1]];end;Ey=Ey+1;do TA=0;end;(Ry[TA])(Ry[TA+0x0001]);Sy=TA-1;Ey=Ey+0X1;Ey=Ey+1;Le=TG[Ey];Ey=Ey+0X01;(Ry)[0]=Oy[Le[0X6]];Ey=Ey+1;Ey=Ey+1;Ey=Ey+0X1;jA=cG[0X001];Ry[0x1]=jA[0X1][jA[0X2]];Ey=Ey+0X1;Ey=Ey+1;Le=TG[Ey];Ey=Ey+1;Ry[1]=Ry[0x0001][Le[1]];Ey=Ey+0X1;Ey=Ey+0X0001;do Le=TG[Ey];end;do Ey=Ey+1;end;(Ry)[0X1]=Ry[0x1][Le[1]];do Le=TG[Ey];end;Ey=Ey+1;local sA=JG[Le[5]];local FA=sA[4];local uA=#FA;if not(uA>0X000)then else BA={};for aZ=0x1,uA do local SZ=(FA[aZ]);if SZ[1]==0 then do(BA)[aZ-1]={Ry,SZ[2]};end;else BA[aZ-1]=cG[SZ[2]];end;end;H(iG,BA);end;Ry[0X2]=ed(Oy,sA,BA);Ey=Ey+0X0001;Ry[0x0003]=true;Ey=Ey+1;TA=0X0;Sy=TA+0X04-1;Ry[TA](V(Ry,TA+0x1,Sy));Sy=TA-0X1;Ey=Ey+0x1;do Ey=Ey+1;end;Le=TG[Ey];do Ey=Ey+1;end;Ry[0X0]=Oy[Le[6]];do Ey=Ey+0X1;end;Ey=Ey+0x00001;Le=TG[Ey];Ey=Ey+0x00001;(Ry)[1]=Le[6];do Ey=Ey+0X001;end;do TA=0;end;Ry[TA]=Ry[TA](Ry[TA+1]);do Sy=TA;end;do Le=TG[Ey];end;Ey=Ey+0X1;if Ry[0x0]then do Ey=Le[0X05];end;end;else do if not(not(Ry[Le[5]]<=Ry[Le[0X04]]))then else Ey=Le[2];end;end;end;end;else if not(Ae<0X15)then if Ae==0X00016 then do for TV=Le[2],Le[5]do Ry[TV]=nil;end;end;else local wh=(cG[0]);do(Ry)[0]=wh[0X1][wh[2]];end;local Kh=0X00;Le=TG[Ey];do Ey=Ey+1;end;local Oh=Ry[0X0];(Ry)[Kh+1]=Oh;do(Ry)[Kh]=Oh[Le[1]];end;Ey=Ey+1;Kh=0;do(Ry)[Kh]=Ry[Kh](Ry[Kh+1]);end;do Sy=Kh;end;Ey=Ey+1;Ey=Ey+1;do Le=TG[Ey];end;Ey=Ey+1;if not Ry[0X0]then do Ey=Le[5];end;end;end;else Ey=Le[0X5];end;end;end;end;end;end);if not(hy)then if C(by)~="string"then(E)(by,0X0);else do if not(M(by,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;if M(by,"^.-:%d+: ")then E("Luraph Script:"..(YG[Ey-1]or"(internal)")..':\ '..x(by),0);else E(by,0x0);end;end;else if by then if Ly==0X1 then return Ry[my]();else return Ry[my](V(Ry,my+1,Sy));end;elseif not(my)then else return V(Ry,my,Ly);end;end;end;end;else hG=function(...)local yt={};local At=1;local It=(0X00000);local ot=({[0X0002]=yt,[0X1]=FG});local zt=(I());local Yt,xt=Cd(...);local Bt=(zt==a and SG or zt);do Yt=Yt-0x1;end;for GV=0X0,Yt do if IG>GV then do(yt)[GV]=xt[GV+1];end;else break;end;end;do if not OG then xt=nil;elseif zG then yt[IG]={n=Yt>=IG and Yt-IG+0X1 or 0,V(xt,IG+0X1,Yt+0X00001)};end;end;if Bt==zt then else(R)(hG,Bt);end;local nt,wt,Nt,mt=A(function()do while true do local I7=(TG[At]);local P7=(I7[3]);At=At+0X1;if not(P7<0Xd)then if not(P7<0X13)then if not(P7<22)then do if not(P7<0X0018)then if P7==25 then do repeat local bs,As=iG,(yt);if not(#bs>0X0)then else local T7=({});for fI,iI in l,bs do do for Ws,es in l,iI do if es[1]==As and es[0X2]>=0x0 then local DF=(es[2]);if not(not T7[DF])then else(T7)[DF]={As[DF]};end;do(es)[0X001]=T7[DF];end;es[0X2]=1;end;end;end;end;end;until true;end;return;else yt[I7[2]]=I7[6];end;else do if P7~=23 then do yt[0X0]=Bt[I7[6]];end;local Fk=0;I7=TG[At];At=At+1;(yt)[0X1]=Bt[I7[0x0006]];I7=TG[At];do At=At+0X00001;end;yt[2]=I7[6];local Sk=3;do At=At+0X1;end;(yt)[0X3]=true;At=At+1;local qk=0X4;do if qk==0 then else do It=Fk+qk-1;end;end;end;local dk,uk=nil,(nil);do if qk~=1 then dk,uk=Cd(yt[Fk](V(yt,Fk+0X1,It)));else dk,uk=Cd(yt[Fk]());end;end;if Sk==1 then It=Fk-0X1;else do if Sk~=0X000 then dk=Fk+Sk-2;It=dk+0X00001;else do dk=dk+Fk-1;end;It=dk;end;end;local ST=0X0;do for Lr=Fk,dk do ST=ST+0X00001;yt[Lr]=uk[ST];end;end;end;I7=TG[At];At=At+0X1;if yt[1]==I7[0X1]then At=I7[0x2];end;else do if yt[I7[5]]~=yt[I7[0x4]]then At=I7[2];end;end;end;end;end;end;else if not(P7>=20)then yt[I7[2]]=L(yt[I7[5]],yt[I7[4]]);else if P7==0X15 then local Su=I7[2];local lu=yt[I7[5]];yt[Su+0X0001]=lu;do yt[Su]=lu[I7[0X01]];end;else do yt[I7[2]]=yt[I7[0X05]]%yt[I7[4]];end;end;end;end;else if not(P7<16)then if P7>=17 then if P7~=18 then yt[0X3]=Bt[I7[0x6]];local Xi=(0X0003);I7=TG[At];At=At+0X1;(yt)[4]=I7[0X6];At=At+0X1;yt[Xi]=yt[Xi](yt[Xi+0X1]);It=Xi;I7=TG[At];At=At+1;if not yt[0X3]then At=I7[0x5];end;else for dE=I7[0x2],I7[0X005]do(yt)[dE]=nil;end;end;else(yt)[2]=Bt[I7[0X6]];I7=TG[At];At=At+1;yt[2]=yt[2][I7[1]];I7=TG[At];At=At+0X00001;(yt)[2]=yt[0X2][I7[1]];I7=TG[At];At=At+1;if not(not(I7[6]<=yt[0X2]))then else At=I7[0X2];end;end;else if P7<0xe then yt[2]=Bt[I7[6]];do I7=TG[At];end;At=At+1;(yt)[0x3]=I7[6];do I7=TG[At];end;At=At+1;yt[4]=I7[0x6];At=At+1;local bu=2;yt[bu]=yt[bu](yt[bu+0x1],yt[bu+2]);It=bu;do At=At+1;end;At=At+0X001;I7=TG[At];At=At+1;do if yt[2]then At=I7[5];end;end;else do if P7==0xf then At=I7[5];else yt[I7[0X2]]=f(yt[I7[5]]);end;end;end;end;end;else if not(P7>=0x00006)then if P7<3 then if not(P7<1)then if P7==0x2 then yt[2]=Bt[I7[6]];I7=TG[At];At=At+0X1;(yt)[3]=I7[0x6];I7=TG[At];local Pq=(0X0002);At=At+0X1;yt[4]=I7[6];do At=At+1;end;do yt[Pq]=yt[Pq](yt[Pq+1],yt[Pq+2]);end;It=Pq;At=At+1;do At=At+1;end;I7=TG[At];do At=At+0X00001;end;if not(yt[2])then else At=I7[0X5];end;else end;else(yt)[0x2]=Bt[I7[0X006]];local Dd=2;At=At+1;At=At+0X1;I7=TG[At];do At=At+0x1;end;(yt)[0X3]=I7[6];At=At+0X00001;yt[Dd]=yt[Dd](yt[Dd+0x1]);It=Dd;I7=TG[At];At=At+0x00001;if not yt[2]then At=I7[0x005];end;end;else if not(P7<4)then if P7~=0X5 then yt[2]=Bt[I7[6]];I7=TG[At];local lY=2;At=At+1;(yt)[0X00003]=I7[0X6];I7=TG[At];At=At+1;do yt[4]=I7[6];end;At=At+0X1;(yt)[lY]=yt[lY](yt[lY+0x01],yt[lY+2]);It=lY;I7=TG[At];At=At+0X1;if yt[2]then At=I7[0X5];end;else yt[2]=Bt[I7[6]];do I7=TG[At];end;local st=0X002;At=At+0X01;yt[3]=I7[6];I7=TG[At];do At=At+1;end;yt[0X004]=I7[0X6];At=At+0x1;yt[st]=yt[st](yt[st+1],yt[st+2]);It=st;At=At+1;At=At+1;do I7=TG[At];end;At=At+1;if yt[0X0002]then do At=I7[5];end;end;end;else(yt)[I7[2]]=ot[I7[5]];end;end;else if not(P7<9)then do if P7<11 then if P7==0x000a then local Lc=JG[I7[0X5]];local Dc=(nil);local fc=Lc[4];local vc=#fc;if vc>0x00000 then Dc={};for n5=1,vc do local S5=fc[n5];if S5[0X1]==0 then(Dc)[n5-1]={yt,S5[0X2]};else(Dc)[n5-1]=cG[S5[0X0002]];end;end;(H)(iG,Dc);end;yt[I7[0X2]]=ed(Bt,Lc,Dc);else(yt)[I7[0X2]]={V({},0X0001,I7[0X0005])};end;else if P7==0XC then if yt[I7[0X5]]==I7[1]then else do At=I7[2];end;end;else(yt)[0X02]=Bt[I7[0x6]];do I7=TG[At];end;At=At+0x1;(yt[0X2])[I7[6]]=I7[1];do At=At+0X1;end;repeat local U2,y2=iG,yt;do if not(#U2>0X00000)then else local lm=({});do for p5,l5 in l,U2 do do for Xf,Qf in l,l5 do if not(Qf[1]==y2 and Qf[2]>=0)then else local bu=Qf[2];if not(not lm[bu])then else(lm)[bu]={y2[bu]};end;do Qf[0X01]=lm[bu];end;(Qf)[0X02]=1;end;end;end;end;end;end;end;until true;do return;end;end;end;end;else if not(P7<7)then do if P7~=0X00008 then do yt[I7[0x2]]=Bt[I7[6]];end;else yt[2]=Bt[I7[6]];do I7=TG[At];end;do At=At+1;end;(yt)[2]=yt[0x02][I7[0x001]];do I7=TG[At];end;do At=At+1;end;if not(not yt[2])then else At=I7[0x5];end;end;end;else(yt)[0X002]=Bt[I7[0x00006]];I7=TG[At];At=At+1;yt[2][I7[0X6]]=I7[1];At=At+1;repeat local I6,j6=iG,yt;if not(#I6>0)then else local BB={};for Z3,g3 in l,I6 do for eR,iR in l,g3 do do if not(iR[0X1]==j6 and iR[2]>=0x00000)then else local UQ=iR[2];if not BB[UQ]then(BB)[UQ]={j6[UQ]};end;do(iR)[0X1]=BB[UQ];end;(iR)[0X2]=1;end;end;end;end;end;until true;return;end;end;end;end;end;end;end);if nt then if wt then if mt~=0X00001 then return yt[Nt](V(yt,Nt+1,It));else return yt[Nt]();end;elseif not(Nt)then else do return V(yt,Nt,mt);end;end;else do if C(wt)=="string"then if not(M(wt,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(M(wt,'\^.\045\:\037d\043\058\ '))then(E)(wt,0);else(E)("Luraph Script:"..(YG[At-1]or"(internal)")..'\:\032'..x(wt),0X0);end;else(E)(wt,0X0);end;end;end;end;end;end;end;end;end;else if not(lG<0X9)then if not(lG>=13)then if lG<0XB then do if lG==0x0000A then hG=function(...)local iP,HP=1,({});local xP=I();local JP=0;local YP,GP=Cd(...);local AP=({[0X1]=FG,[0X0002]=HP});YP=YP-0X1;for OT=0X0,YP do if not(IG>OT)then do break;end;else HP[OT]=GP[OT+1];end;end;local qP=((xP==a and SG or xP));do if not OG then GP=nil;elseif not(zG)then else(HP)[IG]={n=YP>=IG and YP-IG+0x1 or 0,V(GP,IG+1,YP+0X1)};end;end;do if qP~=xP then(R)(hG,qP);end;end;local sP,XP,kP,QP=A(function()while true do local hS=(TG[iP]);local ZS=hS[0X003];do iP=iP+1;end;if ZS>=14 then if not(ZS<0X15)then if not(ZS>=25)then if ZS>=0X17 then if ZS==0X18 then for Mu=hS[0X00002],hS[5]do do HP[Mu]=nil;end;end;else local I5=hS[2];local W5,K5=HP[I5+0x1],HP[I5+0X2];local o5=(HP[I5]);HP[I5]=h(function()for OV=o5,W5,K5 do(t)(true,OV);end;end);do iP=hS[5];end;end;else if ZS==0X0016 then repeat local JD,qD=iG,HP;do if not(#JD>0X000)then else local E2={};do for Eh,hh in l,JD do for Wb,Mb in l,hh do if Mb[0X1]==qD and Mb[2]>=0X0000 then local xx=(Mb[0X2]);if not(not E2[xx])then else E2[xx]={qD[xx]};end;do(Mb)[1]=E2[xx];end;do(Mb)[0x2]=0X1;end;end;end;end;end;end;end;until true;return;else HP[hS[0X2]]=qP[hS[0x06]];end;end;else if not(ZS<0X1B)then if ZS~=0X1c then HP[0X0]=qP[hS[0x06]];do iP=iP+1;end;iP=iP+0X1;iP=iP+0X1;JP=0;HP[JP]=HP[JP]();hS=TG[iP];do iP=iP+1;end;do if not(not(hS[6]<=HP[0X0]))then else iP=hS[2];end;end;else local UV=cG[0x00001];do(HP)[0X1]=UV[0X1][UV[2]];end;local bV=(0X1);iP=iP+1;iP=iP+1;hS=TG[iP];iP=iP+1;(HP)[0X00001]=HP[0x1][hS[0X1]];iP=iP+0X1;(HP)[2]=HP[0x0];iP=iP+0X1;do UV=cG[0X0];end;HP[0X3]=UV[0X0001][UV[2]];iP=iP+0X1;(HP[bV])(HP[bV+0X0001],HP[bV+0X2]);JP=bV-1;do iP=iP+0x1;end;iP=iP+1;hS=TG[iP];iP=iP+0x1;iP=hS[5];end;else do if ZS==26 then do iP=hS[0x005];end;else do(HP)[0]=qP[hS[6]];end;iP=iP+0X1;iP=iP+0x1;do hS=TG[iP];end;do iP=iP+1;end;do HP[0]=HP[0X0][hS[1]];end;do hS=TG[iP];end;iP=iP+1;if not(not HP[0X0])then else iP=hS[0X5];end;end;end;end;end;else do if ZS>=0X11 then if ZS>=19 then if ZS~=20 then do(HP)[hS[2]]={V({},0X01,hS[0X5])};end;else HP[0]=qP[hS[6]];hS=TG[iP];iP=iP+1;HP[0]=HP[0][hS[0x1]];do iP=iP+1;end;do iP=iP+1;end;hS=TG[iP];iP=iP+1;if not(not HP[0])then else iP=hS[0X0005];end;end;else if ZS~=18 then if HP[hS[0X5]]<=HP[hS[0x00004]]then iP=hS[2];end;else HP[0X0]=qP[hS[0X6]];hS=TG[iP];iP=iP+0X1;local Br=0;do(HP)[0X1]=hS[0X00006];end;do iP=iP+0X0001;end;local zr=cG[0X1];(HP)[Br]=HP[Br](HP[Br+0x1]);JP=Br;do iP=iP+0X1;end;(HP)[1]=zr[1][zr[0x2]];hS=TG[iP];iP=iP+1;(HP)[0X1]=HP[0X001][hS[1]];do iP=iP+1;end;(HP)[0X0002]=HP[0X0];iP=iP+1;Br=0X0001;(HP)[Br]=HP[Br](HP[Br+0x1]);JP=Br;iP=iP+1;iP=iP+0X01;hS=TG[iP];iP=iP+1;if not HP[0X1]then iP=hS[5];end;end;end;else do if not(ZS<15)then do if ZS==0X10 then(HP)[0x0000]=qP[hS[6]];iP=iP+0X1;iP=iP+1;hS=TG[iP];iP=iP+0X1;do HP[0]=HP[0X0][hS[0x1]];end;hS=TG[iP];iP=iP+1;if not(not HP[0X00])then else do iP=hS[5];end;end;else local ga,Pa=hS[2],(hS[5]);do JP=ga+Pa-1;end;repeat local Qz,az=iG,(HP);do if not(#Qz>0)then else local Gr=({});do for uS,RS in l,Qz do for JU,EU in l,RS do if EU[0x00001]==az and EU[2]>=0X000 then local Mv=(EU[0X2]);do if not Gr[Mv]then(Gr)[Mv]={az[Mv]};end;end;(EU)[0x1]=Gr[Mv];(EU)[0x2]=1;end;end;end;end;end;end;until true;return true,ga,Pa;end;end;else if HP[hS[0X0005]]~=hS[0x001]then iP=hS[2];end;end;end;end;end;end;else if not(ZS>=7)then if not(ZS>=3)then if ZS>=0X001 then if ZS==0X02 then do(HP)[hS[0X00002]]=hS[6];end;else HP[0X0]=qP[hS[0X006]];hS=TG[iP];iP=iP+0X0001;HP[0X1]=hS[6];local dp=(0);iP=iP+0X1;HP[dp]=HP[dp](HP[dp+0x1]);JP=dp;hS=TG[iP];iP=iP+0X1;if not HP[0]then iP=hS[0X05];end;end;else if HP[hS[5]]~=HP[hS[0X4]]then else do iP=hS[0x0002];end;end;end;else do if not(ZS>=5)then if ZS==4 then if not(HP[hS[2]])then else do iP=hS[0X5];end;end;else local Xa=HP[hS[5]]/HP[hS[4]];do(HP)[hS[0X2]]=Xa-Xa%1;end;end;else do if ZS~=6 then do HP[0]=qP[hS[0X0006]];end;local DP=0x0;iP=iP+0X1;iP=iP+1;do hS=TG[iP];end;iP=iP+0X1;HP[1]=hS[6];iP=iP+0X001;(HP[DP])(HP[DP+0X01]);do JP=DP-0X0001;end;hS=TG[iP];iP=iP+1;iP=hS[5];else HP[0X0]=qP[hS[0X6]];local Ci=(0X0);hS=TG[iP];iP=iP+1;(HP)[1]=hS[6];iP=iP+0X01;HP[Ci]=HP[Ci](HP[Ci+1]);JP=Ci;hS=TG[iP];do iP=iP+1;end;if not HP[0x0]then iP=hS[5];end;end;end;end;end;end;else do if ZS>=0X00a then if not(ZS>=12)then do if ZS~=11 then else local yx=(JG[hS[5]]);local Lx=yx[0X00004];local Tx=nil;local Ex=(#Lx);if Ex>0 then do Tx={};end;for NE=1,Ex do local gE=Lx[NE];if gE[1]==0 then(Tx)[NE-1]={HP,gE[0X2]};else do Tx[NE-0x01]=cG[gE[0X2]];end;end;end;(H)(iG,Tx);end;HP[hS[0X002]]=ed(qP,yx,Tx);end;end;else if ZS==13 then(HP)[0X0]=qP[hS[0X6]];hS=TG[iP];iP=iP+1;do HP[1]=hS[0X6];end;iP=iP+1;local L9=0;(HP)[L9]=HP[L9](HP[L9+1]);JP=L9;iP=iP+1;do iP=iP+1;end;do hS=TG[iP];end;iP=iP+0X1;if not(not HP[0x0000])then else iP=hS[5];end;else local IP=cG[0X0];(HP)[1]=IP[1][IP[2]];local aP=1;hS=TG[iP];iP=iP+1;local zP=(HP[0X001]);HP[aP+1]=zP;HP[aP]=zP[hS[0X1]];iP=iP+0X1;aP=0X1;do HP[aP]=HP[aP](HP[aP+0X001]);end;do JP=aP;end;do iP=iP+0X1;end;do iP=iP+0X1;end;hS=TG[iP];iP=iP+0X001;if not HP[1]then iP=hS[0x005];end;end;end;else if ZS>=0X8 then if ZS==0X9 then HP[hS[2]]=HP[hS[0X5]]^HP[hS[0X4]];else HP[0X000]=qP[hS[6]];iP=iP+1;iP=iP+1;hS=TG[iP];local gr=(HP[0]);do iP=iP+0X001;end;local Xr=(0);(HP)[Xr+1]=gr;HP[Xr]=gr[hS[1]];hS=TG[iP];iP=iP+0X01;HP[0x2]=hS[6];do hS=TG[iP];end;iP=iP+1;HP[0x3]=hS[6];iP=iP+0X0001;Xr=0X0;do JP=Xr+0x04-1;end;do HP[Xr]=HP[Xr](V(HP,Xr+0X1,JP));end;do JP=Xr;end;do hS=TG[iP];end;iP=iP+1;if not HP[0]then do iP=hS[0X5];end;end;end;else(HP)[0X0000]=qP[hS[0X6]];iP=iP+0x01;do JP=0;end;HP[JP]=HP[JP]();do iP=iP+1;end;do iP=iP+1;end;hS=TG[iP];do iP=iP+1;end;(HP)[1]=qP[hS[6]];iP=iP+1;do iP=iP+0X00001;end;iP=iP+1;(HP)[0]=HP[0X0]-HP[1];hS=TG[iP];iP=iP+1;if not(hS[0X06]<HP[0X0])then else iP=hS[0x00002];end;end;end;end;end;end;end;end);do if sP then do if XP then if QP~=0x1 then return HP[kP](V(HP,kP+1,JP));else do return HP[kP]();end;end;elseif kP then do return V(HP,kP,QP);end;end;end;else if C(XP)=='\str\in\g'then if M(XP,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if M(XP,'^.\045:%d\043\058\ ')then(E)("Luraph Script:"..(YG[iP-0X01]or'(\105n\116\101r\110a\108\)').."\058\032"..x(XP),0x00);else(E)(XP,0X0);end;else E(XP,0x0);end;end;end;end;else hG=function(...)local k_=({});local L_=1;local u_=I();local N_,E_=Cd(...);local S_=0;local T_={[0X0002]=k_,[0X1]=FG};local p_=((u_==a and SG or u_));N_=N_-0X01;for PB=0X0,N_ do if not(IG>PB)then break;else k_[PB]=E_[PB+0X01];end;end;if not OG then E_=nil;elseif zG then(k_)[IG]={n=N_>=IG and N_-IG+0X1 or 0X0,V(E_,IG+1,N_+1)};end;do if p_==u_ then else R(hG,p_);end;end;local M_,o_,A_,f_=A(function()while true do local At=TG[L_];local at=At[3];L_=L_+0x1;if not(at<8)then do if at<12 then if at>=0XA then if at==11 then do L_=At[0X5];end;else do k_[1]=p_[At[0X6]];end;At=TG[L_];L_=L_+0X1;k_[0X02]=k_[0X0][At[1]];At=TG[L_];do L_=L_+0X0001;end;(k_)[2]=k_[0X2][At[1]];L_=L_+0X1;L_=L_+0X00001;do L_=L_+0x1;end;local zE=(0X1);k_[zE]=k_[zE](k_[zE+0x0001]);S_=zE;At=TG[L_];L_=L_+1;if not(not(At[6]<k_[0X0001]))then else L_=At[2];end;end;else do if at==0X9 then k_[1]=p_[At[6]];local zM=(3);L_=L_+1;L_=L_+0X1;do At=TG[L_];end;L_=L_+1;local sM=(0X00000);k_[2]=At[6];At=TG[L_];L_=L_+0X1;do(k_)[3]=p_[At[6]];end;do At=TG[L_];end;L_=L_+0X1;k_[3]=k_[3][At[1]];At=TG[L_];L_=L_+0X00001;do k_[4]=At[6];end;do At=TG[L_];end;L_=L_+1;do k_[5]=At[6];end;At=TG[L_];L_=L_+1;k_[0x6]=At[6];do L_=L_+1;end;local SM=0X00004;if SM==0X00000 then else S_=zM+SM-1;end;local oM,GM=nil,(nil);if SM~=0X1 then oM,GM=Cd(k_[zM](V(k_,zM+1,S_)));else oM,GM=Cd(k_[zM]());end;if sM==1 then S_=zM-0X1;else if sM~=0x0 then oM=zM+sM-2;S_=oM+0X1;else do oM=oM+zM-0x1;end;S_=oM;end;local OQ=0;for NN=zM,oM do OQ=OQ+0X001;(k_)[NN]=GM[OQ];end;end;do L_=L_+0X00001;end;zM=1;k_[zM](V(k_,zM+0x1,S_));do S_=zM-0X1;end;At=TG[L_];L_=L_+0x1;L_=At[0X5];else local NS=At[0X2];local bS,mS=k_[NS]();if bS then do L_=At[5];end;k_[NS+3]=mS;end;end;end;end;else if at>=0Xe then if at>=15 then if at==16 then local Qc,uc=JG[At[0X05]],nil;local sc=(Qc[0X004]);local cc=#sc;if cc>0 then uc={};for Pf=0x1,cc do local Kf=sc[Pf];do if Kf[0x01]==0x0 then(uc)[Pf-0X1]={k_,Kf[0X00002]};else do(uc)[Pf-0X0001]=cG[Kf[2]];end;end;end;end;(H)(iG,uc);end;do k_[At[2]]=ed(p_,Qc,uc);end;else do(k_)[At[2]]=k_[At[5]]~=k_[At[0x04]];end;end;else k_[At[2]]=k_[At[5]]*k_[At[4]];end;else if at==13 then(k_)[At[0X2]]={V({},0X1,At[5])};else(k_)[At[0X0002]]=k_[At[5]][k_[At[4]]];end;end;end;end;else if at>=0X0004 then if at>=0X00006 then if at==7 then k_[At[0X0002]]=At[6];else(T_)[At[5]]=k_[At[0X00002]];end;else if at~=0X5 then k_[At[2]]=p_[At[6]];else k_[At[2]]=At[6];end;end;else do if not(at<2)then do if at==0x3 then if k_[At[0x5]]~=k_[At[0X00004]]then else L_=At[2];end;else repeat local co,Po=iG,(k_);do if#co>0X0 then local XT=({});for GA,OA in l,co do do for uG,qG in l,OA do if qG[1]==Po and qG[0X2]>=0X0 then local vr=(qG[0X002]);if not(not XT[vr])then else XT[vr]={Po[vr]};end;qG[0X0001]=XT[vr];(qG)[0X2]=0X0001;end;end;end;end;end;end;until true;local np=At[2];do return false,np,np+At[5]-0X02;end;end;end;else if at==0x01 then else repeat local Eo,Go=iG,(k_);if#Eo>0 then local y9={};for VB,LB in l,Eo do for QS,gS in l,LB do if gS[0X1]==Go and gS[0X2]>=0 then local WC=gS[2];if not(not y9[WC])then else(y9)[WC]={Go[WC]};end;(gS)[1]=y9[WC];(gS)[0X02]=1;end;end;end;end;until true;return;end;end;end;end;end;end;end);if M_ then if o_ then if f_==1 then do return k_[A_]();end;else return k_[A_](V(k_,A_+0x1,S_));end;elseif A_ then do return V(k_,A_,f_);end;end;else do if C(o_)~='\115\116\114\105\110\g'then E(o_,0);else do if M(o_,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(M(o_,"\^.\-\058\%\100\+\:\ "))then(E)(o_,0);else(E)("Luraph Script:"..(YG[L_-1]or"\(\105\110\116\e\114\110\097\l)")..'\:\ '..x(o_),0x0);end;end;end;end;end;end;end;else do if lG==12 then hG=function(...)local WN={};local uN=(1);local JN=I();local FN,nN=Cd(...);local lN={[0X0002]=WN,[0X1]=FG};FN=FN-1;for bl=0X000,FN do if IG>bl then WN[bl]=nN[bl+0X1];else break;end;end;local gN=(JN==a and SG or JN);do if not OG then nN=nil;elseif not(zG)then else(WN)[IG]={n=FN>=IG and FN-IG+1 or 0,V(nN,IG+0X001,FN+0x1)};end;end;local tN=(0);if gN==JN then else R(hG,gN);end;local yN,rN,AN,ON=A(function()while true do local zb=TG[uN];local kb=(zb[3]);do uN=uN+0X1;end;if kb<8 then if kb<4 then if not(kb<2)then if kb~=3 then(WN)[zb[0x0002]]=zb[0x6];else uN=zb[0x05];end;else if kb~=0X1 then WN[zb[0x2]]=WN[zb[0X00005]]^WN[zb[0X4]];else do(WN)[zb[2]]=N(WN[zb[5]],WN[zb[0X4]]);end;end;end;else if not(kb>=0X6)then do if kb==5 then if not(WN[zb[2]])then else do uN=zb[0X5];end;end;else for Ht=zb[2],zb[0X5]do(WN)[Ht]=nil;end;end;end;else do if kb~=7 then else local rm=(zb[0X2]);local Im,Em=WN[rm]();if not(Im)then else for n1=1,zb[4]do(WN)[rm+n1]=Em[n1];end;uN=zb[5];end;end;end;end;end;else if kb<12 then if kb<10 then if kb~=0X9 then WN[4]=gN[zb[0x6]];uN=uN+1;uN=uN+1;do zb=TG[uN];end;local pZ=JG[zb[5]];uN=uN+0X01;local IZ=pZ[0X4];local cZ=(nil);local hZ,mZ=#IZ,(4);if hZ>0 then cZ={};for FA=0X0001,hZ do local DA=IZ[FA];if DA[0X1]~=0x0 then(cZ)[FA-0x1]=cG[DA[0X0002]];else cZ[FA-0X1]={WN,DA[2]};end;end;H(iG,cZ);end;WN[5]=ed(gN,pZ,cZ);uN=uN+0X1;WN[mZ](WN[mZ+1]);tN=mZ-1;do uN=uN+0X1;end;repeat local I1,s1=iG,(WN);if not(#I1>0x000)then else local oL=({});for ED,wD in l,I1 do for w8,Q8 in l,wD do if Q8[0X1]==s1 and Q8[2]>=0 then local Ht=Q8[0x002];if not(not oL[Ht])then else(oL)[Ht]={s1[Ht]};end;Q8[0x01]=oL[Ht];(Q8)[0X2]=1;end;end;end;end;until true;do return;end;else do if WN[zb[0X5]]==WN[zb[4]]then else uN=zb[0X2];end;end;end;else do if kb~=11 then local c2,n2=JG[zb[0X5]],nil;local x2=c2[0X4];local m2=(#x2);if not(m2>0)then else n2={};for p7=1,m2 do local l7=x2[p7];do if l7[1]==0X0000 then n2[p7-1]={WN,l7[0X0002]};else(n2)[p7-1]=cG[l7[0X2]];end;end;end;(H)(iG,n2);end;WN[zb[0x2]]=ed(gN,c2,n2);else do(WN)[4]=gN[zb[0x6]];end;do uN=uN+0X1;end;do tN=4;end;WN[tN]=WN[tN]();do uN=uN+1;end;uN=uN+0X1;zb=TG[uN];do uN=uN+1;end;do if not WN[0X4]then uN=zb[5];end;end;end;end;end;else if kb>=14 then if kb~=15 then WN[zb[2]]={V({},1,zb[5])};else(WN)[zb[2]]=-WN[zb[0x5]];end;else do if kb==13 then WN[zb[0X02]]=gN[zb[0x6]];else repeat local lK,YK=iG,WN;if not(#lK>0X0)then else local br=({});for SB,bB in l,lK do do for Xz,Ez in l,bB do if not(Ez[1]==YK and Ez[0x00002]>=0x000)then else local Oc=Ez[0X2];do if not(not br[Oc])then else(br)[Oc]={YK[Oc]};end;end;do Ez[0X001]=br[Oc];end;(Ez)[0X2]=1;end;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end);if yN then do if rN then if ON==1 then return WN[AN]();else return WN[AN](V(WN,AN+0X1,tN));end;elseif AN then do return V(WN,AN,ON);end;end;end;else if C(rN)=="string"then if M(rN,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if M(rN,"^.-:%d+: ")then(E)("\076\117ra\p\104\ \083\c\114\i\pt\:"..(YG[uN-0x0001]or"\(int\er\110\097\l\041")..": "..x(rN),0);else E(rN,0);end;else(E)(rN,0x0);end;end;end;else hG=function(...)local bO=(0);local hO,BO=1,({});local eO=(I());local rO={[0X0002]=BO,[0X1]=FG};local RO,cO=Cd(...);local lO=((eO==a and SG or eO));RO=RO-1;for EH=0,RO do if IG>EH then(BO)[EH]=cO[EH+1];else break;end;end;do if not OG then cO=nil;elseif not(zG)then else do BO[IG]={n=RO>=IG and RO-IG+0X0001 or 0X0,V(cO,IG+0X1,RO+0X1)};end;end;end;do if lO==eO then else(R)(hG,lO);end;end;local qO,GO,uO,KO=A(function()while true do local P5=(TG[hO]);local U5=P5[0x3];do hO=hO+0x01;end;if U5>=11 then if U5>=16 then if not(U5<0X13)then if not(U5<0X00014)then if U5~=0X000015 then do repeat local ko,no=iG,(BO);do if not(#ko>0X0)then else local D_={};for zn,Hn in l,ko do do for cY,yY in l,Hn do do if not(yY[1]==no and yY[0x00002]>=0X0)then else local T7=(yY[2]);do if not(not D_[T7])then else(D_)[T7]={no[T7]};end;end;(yY)[0X1]=D_[T7];(yY)[0X02]=1;end;end;end;end;end;end;end;until true;end;return;else do hO=P5[5];end;end;else for In=P5[0x02],P5[0X05]do BO[In]=nil;end;end;else if not(U5<0X11)then if U5~=18 then local Vy=(P5[0x02]);local qy=(h(function(...)t();for Qm,Am,Tm,Cm,qm,km,sm,Gm,xm,wm in...do(t)(true,{Qm,Am,Tm,Cm,qm,km,sm,Gm,xm,wm});end;end));qy(BO[Vy],BO[Vy+1],BO[Vy+2]);do bO=Vy;end;do BO[Vy]=qy;end;hO=P5[0X005];else BO[P5[2]]=#BO[P5[5]];end;else repeat local Ro,Po=iG,BO;do if#Ro>0 then local k9={};for DZ,iZ in l,Ro do for Ml,bl in l,iZ do if bl[1]==Po and bl[2]>=0X0 then local uV=bl[0X2];if not k9[uV]then(k9)[uV]={Po[uV]};end;do bl[0X001]=k9[uV];end;(bl)[0X00002]=1;end;end;end;end;end;until true;local N3=P5[2];return false,N3,N3+P5[5]-0X002;end;end;else if U5>=0Xd then do if not(U5>=0XE)then if BO[P5[0x5]]==P5[1]then else hO=P5[2];end;else if U5==0Xf then do if BO[P5[0X05]]<BO[P5[4]]then hO=P5[2];end;end;else(BO)[P5[2]]={V({},0x0001,P5[0X5])};end;end;end;else do if U5==0X0c then(BO)[P5[0X2]]=P5[6];else local og=P5[0x2];local ig,Jg=BO[og]();if not(ig)then else for Zy=0X1,P5[4]do BO[og+Zy]=Jg[Zy];end;do hO=P5[5];end;end;end;end;end;end;else if U5<5 then do if not(U5<2)then if U5<0X00003 then do(BO)[P5[0x2]]=BO[P5[5]][BO[P5[0x4]]];end;else if U5==4 then BO[0X1]=lO[P5[6]];do hO=hO+0X1;end;hO=hO+1;do P5=TG[hO];end;hO=hO+0X00001;BO[0X00002]=lO[P5[0x6]];P5=TG[hO];hO=hO+1;do BO[0X2]=BO[0X02][P5[0x1]];end;do hO=hO+1;end;do hO=hO+1;end;local TY=(0x001);P5=TG[hO];hO=hO+0X1;do BO[0x2]=BO[2][P5[0x1]];end;P5=TG[hO];hO=hO+0x001;(BO)[0x2]=BO[0x2][P5[0X1]];hO=hO+0X1;do hO=hO+1;end;P5=TG[hO];hO=hO+0X0001;(BO)[0x2]=BO[2][P5[1]];do hO=hO+1;end;(BO)[TY]=BO[TY](BO[TY+1]);bO=TY;hO=hO+0X1;hO=hO+1;P5=TG[hO];hO=hO+0X1;if not(BO[0X01]<=P5[0X1])then hO=P5[2];end;else(BO)[1]=lO[P5[6]];P5=TG[hO];do hO=hO+1;end;BO[0X002]=P5[6];P5=TG[hO];hO=hO+0X0001;(BO)[3]=lO[P5[0x6]];hO=hO+0x01;hO=hO+1;P5=TG[hO];hO=hO+0X1;BO[3]=BO[0x3][P5[0X1]];local n9=0X1;hO=hO+0X1;hO=hO+0X1;do P5=TG[hO];end;hO=hO+1;do(BO)[0X003]=BO[3][P5[0X1]];end;do P5=TG[hO];end;hO=hO+0X1;BO[3]=BO[0X0003][P5[1]];do hO=hO+1;end;hO=hO+0X01;P5=TG[hO];do hO=hO+1;end;BO[3]=BO[3][P5[0X00001]];hO=hO+0X01;hO=hO+1;P5=TG[hO];hO=hO+1;(BO)[3]=BO[0X3][P5[0X1]];do hO=hO+1;end;hO=hO+0X1;hO=hO+1;BO[n9](BO[n9+1],BO[n9+0X002]);do bO=n9-1;end;P5=TG[hO];hO=hO+0X1;do hO=P5[5];end;end;end;else if U5==1 then do if not BO[P5[0X2]]then hO=P5[5];end;end;else BO[P5[2]]=lO[P5[0x6]];end;end;end;else if U5>=8 then if not(U5>=0X09)then do BO[0X01]=lO[P5[0X006]];end;P5=TG[hO];hO=hO+0X0001;BO[0X2]=lO[P5[0X6]];P5=TG[hO];local Dd=(1);hO=hO+0X01;BO[0X2]=BO[2][P5[1]];do hO=hO+1;end;do hO=hO+1;end;P5=TG[hO];do hO=hO+1;end;(BO)[2]=BO[2][P5[1]];hO=hO+1;hO=hO+1;P5=TG[hO];do hO=hO+0x00001;end;BO[2]=BO[2][P5[1]];P5=TG[hO];hO=hO+1;do(BO)[2]=BO[2][P5[1]];end;hO=hO+0X1;do hO=hO+1;end;do P5=TG[hO];end;do hO=hO+1;end;(BO)[2]=BO[0X2][P5[0x1]];hO=hO+1;hO=hO+0x1;do hO=hO+1;end;(BO)[Dd]=BO[Dd](BO[Dd+1]);bO=Dd;do P5=TG[hO];end;hO=hO+1;if not(BO[0x1]<=P5[1])then hO=P5[0x2];end;else if U5==10 then local hw=(JG[P5[0X0005]]);local Kw=hw[4];local tw=nil;local pw=(#Kw);if pw>0 then tw={};do for Il=1,pw do local ul=Kw[Il];do if ul[0X001]==0X0 then do tw[Il-1]={BO,ul[0X2]};end;else tw[Il-1]=cG[ul[2]];end;end;end;end;H(iG,tw);end;(BO)[P5[0X2]]=ed(lO,hw,tw);else BO[1]=lO[P5[6]];hO=hO+1;hO=hO+0X1;P5=TG[hO];hO=hO+1;do BO[0X002]=P5[0X6];end;P5=TG[hO];hO=hO+0x00001;do(BO)[3]=lO[P5[0X00006]];end;hO=hO+1;hO=hO+1;P5=TG[hO];local YS=(0X3);hO=hO+1;(BO)[0x3]=BO[3][P5[0X1]];hO=hO+0X01;hO=hO+0X001;do P5=TG[hO];end;hO=hO+0X1;do BO[4]=P5[6];end;P5=TG[hO];hO=hO+0X001;do(BO)[5]=P5[0X6];end;P5=TG[hO];local GS=(0);hO=hO+0X1;do(BO)[0x0006]=P5[6];end;do hO=hO+0X1;end;local yS=(4);if yS~=0X0 then do bO=YS+yS-1;end;end;local kS,wS=nil,(nil);if yS==1 then do kS,wS=Cd(BO[YS]());end;else kS,wS=Cd(BO[YS](V(BO,YS+1,bO)));end;do if GS~=0X1 then do if GS==0 then kS=kS+YS-1;do bO=kS;end;else do kS=YS+GS-0X2;end;bO=kS+0X1;end;end;local b_=(0X0);for Pw=YS,kS do b_=b_+1;(BO)[Pw]=wS[b_];end;else bO=YS-1;end;end;hO=hO+1;YS=1;(BO[YS])(V(BO,YS+0X1,bO));do bO=YS-1;end;do P5=TG[hO];end;hO=hO+1;hO=P5[5];end;end;else if U5<6 then BO[0X1]=lO[P5[0x6]];hO=hO+0X01;hO=hO+0X0001;P5=TG[hO];hO=hO+0X00001;BO[2]=P5[6];do P5=TG[hO];end;do hO=hO+0X1;end;do BO[3]=lO[P5[6]];end;hO=hO+0X1;do hO=hO+1;end;P5=TG[hO];hO=hO+0x01;(BO)[3]=BO[3][P5[0X1]];hO=hO+0X001;do hO=hO+0X1;end;P5=TG[hO];local BN=(0X3);hO=hO+0X00001;BO[0X4]=P5[0x6];do P5=TG[hO];end;hO=hO+1;BO[5]=P5[6];P5=TG[hO];hO=hO+0x1;BO[0X06]=P5[0X6];hO=hO+1;local TN,wN=4,0X0000;do if TN==0X0 then else bO=BN+TN-1;end;end;local gN,nN=nil,(nil);if TN==1 then do gN,nN=Cd(BO[BN]());end;else gN,nN=Cd(BO[BN](V(BO,BN+1,bO)));end;do if wN==1 then do bO=BN-0X00001;end;else if wN~=0 then do gN=BN+wN-2;end;bO=gN+1;else gN=gN+BN-0X1;bO=gN;end;local fu=0X000;do for uA=BN,gN do fu=fu+1;BO[uA]=nN[fu];end;end;end;end;do hO=hO+1;end;do BN=0X1;end;BO[BN](V(BO,BN+1,bO));do bO=BN-0X1;end;hO=hO+1;do hO=hO+0X1;end;do P5=TG[hO];end;hO=hO+0X0001;hO=P5[0X0005];else if U5~=7 then else(BO)[1]=lO[P5[6]];hO=hO+1;local Rq=(0X001);do hO=hO+0X1;end;do P5=TG[hO];end;hO=hO+0X01;(BO)[0x2]=lO[P5[0X6]];P5=TG[hO];hO=hO+0X0001;BO[2]=BO[0X2][P5[1]];hO=hO+1;hO=hO+0x0001;P5=TG[hO];hO=hO+0x1;do(BO)[0x2]=BO[0x0002][P5[0X01]];end;hO=hO+1;do hO=hO+0X1;end;P5=TG[hO];hO=hO+0x00001;(BO)[2]=BO[2][P5[0X01]];P5=TG[hO];hO=hO+1;(BO)[0X002]=BO[2][P5[0X1]];hO=hO+1;do BO[Rq]=BO[Rq](BO[Rq+1]);end;bO=Rq;P5=TG[hO];do hO=hO+0X1;end;if not(BO[0X01]<=P5[1])then do hO=P5[2];end;end;end;end;end;end;end;end;end);if not(qO)then if C(GO)~='\str\i\110g'then(E)(GO,0X0);else if M(GO,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(M(GO,"\^\.\045\:\%d\+:\ "))then E(GO,0);else E("Luraph Script:"..(YG[hO-0X1]or"(internal)")..": "..x(GO),0);end;end;else if GO then if KO~=0X1 then return BO[uO](V(BO,uO+0X1,bO));else return BO[uO]();end;elseif not(uO)then else return V(BO,uO,KO);end;end;end;end;end;end;else do if not(lG<0Xf)then do if lG<16 then do hG=function(...)local nU,AU=1,({});local DU=0;local RU={[0X1]=FG,[0X0002]=AU};local qU=(I());local sU,vU=Cd(...);sU=sU-1;do for v6=0,sU do do if IG>v6 then(AU)[v6]=vU[v6+0X1];else break;end;end;end;end;local LU=((qU==a and SG or qU));do if not OG then vU=nil;elseif zG then(AU)[IG]={n=sU>=IG and sU-IG+0X1 or 0,V(vU,IG+0X1,sU+1)};end;end;if LU==qU then else(R)(hG,LU);end;local OU,dU,UU,oU=A(function()while true do local Ko=TG[nU];local wo=(Ko[0X3]);nU=nU+1;if not(wo>=0x00B)then if wo<5 then if not(wo>=0X2)then if wo~=1 then do AU[Ko[0x0002]]=L(AU[Ko[5]],AU[Ko[4]]);end;else AU[0x0]=LU[Ko[6]];Ko=TG[nU];do nU=nU+1;end;do(AU)[1]=Ko[6];end;local hP=(0X0);nU=nU+0x1;do(AU)[hP]=AU[hP](AU[hP+0X1]);end;DU=hP;Ko=TG[nU];nU=nU+1;if not AU[0X0]then nU=Ko[5];end;end;else if not(wo<0X3)then if wo~=0X4 then AU[Ko[0X2]]=AU[Ko[0x5]]%AU[Ko[0x4]];else do AU[0]=LU[Ko[6]];end;Ko=TG[nU];do nU=nU+1;end;local Mz=(0);(AU)[0X0]=AU[0][Ko[0x1]];nU=nU+1;nU=nU+0x01;Ko=TG[nU];do nU=nU+1;end;local Nz=(AU[0]);do(AU)[Mz+1]=Nz;end;do AU[Mz]=Nz[Ko[1]];end;do Ko=TG[nU];end;do nU=nU+1;end;AU[2]=Ko[0X6];nU=nU+0X1;do Mz=0X0;end;AU[Mz]=AU[Mz](AU[Mz+1],AU[Mz+0x2]);do DU=Mz;end;do nU=nU+1;end;nU=nU+0x00001;Ko=TG[nU];nU=nU+0x001;if not(not AU[0])then else nU=Ko[0x5];end;end;else nU=Ko[5];end;end;else if not(wo<8)then do if not(wo>=9)then AU[0]=LU[Ko[6]];nU=nU+1;do nU=nU+0X0001;end;Ko=TG[nU];nU=nU+1;do if AU[0]then do nU=Ko[0x5];end;end;end;else if wo~=10 then(AU)[Ko[0X02]]=AU[Ko[0X005]]<=AU[Ko[4]];else local KW=(JG[Ko[5]]);local wW=KW[4];local NW=nil;local kW=(#wW);if kW>0X0 then do NW={};end;for Wf=0x1,kW do local zf=wW[Wf];do if zf[0X1]==0X000 then do NW[Wf-0x1]={AU,zf[0x2]};end;else NW[Wf-1]=cG[zf[2]];end;end;end;(H)(iG,NW);end;AU[Ko[0X00002]]=ed(LU,KW,NW);end;end;end;else if not(wo<0X06)then if wo==0X7 then AU[Ko[0x2]]=Ko[6];else for fW=Ko[0X00002],Ko[0X00005]do(AU)[fW]=nil;end;end;else do AU[0X0]=LU[Ko[6]];end;nU=nU+1;nU=nU+1;Ko=TG[nU];do nU=nU+1;end;AU[0]=AU[0X00000][Ko[0X001]];Ko=TG[nU];do nU=nU+0X001;end;if not AU[0x00000]then do nU=Ko[5];end;end;end;end;end;else do if not(wo<16)then if wo<0X13 then if wo<17 then AU[Ko[2]]={V({},1,Ko[0X0005])};else do if wo==18 then do AU[0X0000]=LU[Ko[6]];end;Ko=TG[nU];nU=nU+0x1;local gI=(0X0);do(AU)[0X001]=Ko[0X00006];end;Ko=TG[nU];nU=nU+1;AU[2]=Ko[6];nU=nU+0X1;AU[gI]=AU[gI](AU[gI+1],AU[gI+0X2]);DU=gI;nU=nU+0X1;nU=nU+0X1;Ko=TG[nU];do nU=nU+0X1;end;do if not(Ko[0X6]<=AU[0])then do nU=Ko[0X2];end;end;end;else(AU)[Ko[2]]=AU[Ko[5]];end;end;end;else if not(wo>=0x14)then AU[0X000]=LU[Ko[0x0006]];nU=nU+1;do nU=nU+0X1;end;Ko=TG[nU];local ic=0x0;nU=nU+1;AU[0]=AU[0][Ko[0X1]];Ko=TG[nU];nU=nU+1;local ac=(AU[0X0]);do AU[ic+0x1]=ac;end;AU[ic]=ac[Ko[1]];do Ko=TG[nU];end;nU=nU+1;AU[0x00002]=Ko[0X006];nU=nU+1;ic=0;AU[ic]=AU[ic](AU[ic+0x1],AU[ic+0x2]);DU=ic;Ko=TG[nU];nU=nU+1;if not AU[0]then nU=Ko[5];end;else if wo~=21 then(AU)[0]=LU[Ko[0X00006]];Ko=TG[nU];nU=nU+1;AU[0]=AU[0][Ko[0x1]];local xl=(0X0);Ko=TG[nU];nU=nU+0X0001;do(AU)[1]=Ko[0X6];end;nU=nU+1;AU[xl]=AU[xl](AU[xl+0x1]);DU=xl;do nU=nU+0X1;end;nU=nU+1;do Ko=TG[nU];end;nU=nU+1;if not AU[0x0]then nU=Ko[5];end;else AU[0X00000]=LU[Ko[0X0006]];Ko=TG[nU];nU=nU+1;do(AU)[1]=LU[Ko[6]];end;local E7=(1);Ko=TG[nU];do nU=nU+1;end;local u7=AU[0X1];do AU[E7+0X1]=u7;end;do(AU)[E7]=u7[Ko[0X1]];end;Ko=TG[nU];nU=nU+0X1;(AU)[3]=Ko[6];nU=nU+0X001;do(AU)[0x4]=true;end;nU=nU+1;do E7=0x1;end;DU=E7+4-0X001;AU[E7]=AU[E7](V(AU,E7+0x1,DU));DU=E7;do nU=nU+1;end;nU=nU+0X1;Ko=TG[nU];do nU=nU+0X1;end;(AU)[1]=AU[0X0001][Ko[0x01]];nU=nU+1;nU=nU+1;Ko=TG[nU];nU=nU+1;do(AU)[0X001]=AU[0x0001][Ko[0x1]];end;nU=nU+1;E7=0x0;AU[E7](AU[E7+1]);DU=E7-0x1;Ko=TG[nU];nU=nU+0X1;AU[0]=LU[Ko[6]];nU=nU+1;nU=nU+1;do Ko=TG[nU];end;nU=nU+0X1;do AU[1]=Ko[0X006];end;nU=nU+1;E7=0X0000;AU[E7](AU[E7+1]);DU=E7-0X1;nU=nU+1;nU=nU+0X0001;Ko=TG[nU];nU=nU+0X1;(AU)[0X0]=LU[Ko[6]];nU=nU+0X1;do nU=nU+0X1;end;do Ko=TG[nU];end;nU=nU+1;(AU)[0X000]=AU[0x0][Ko[0X1]];do nU=nU+1;end;do nU=nU+1;end;Ko=TG[nU];do nU=nU+0X001;end;do if not AU[0]then do nU=Ko[5];end;end;end;end;end;end;else if wo>=0XD then do if wo>=0X0000E then if wo~=15 then(AU)[Ko[2]]=LU[Ko[6]];else do repeat local IF,iF=iG,AU;if#IF>0X0 then local h0=({});do for H_,n_ in l,IF do for tz,mz in l,n_ do if mz[0X0001]==iF and mz[0x2]>=0 then local Dp=(mz[2]);if not(not h0[Dp])then else do h0[Dp]={iF[Dp]};end;end;do(mz)[1]=h0[Dp];end;(mz)[0X02]=1;end;end;end;end;end;until true;end;return;end;else end;end;else if wo~=12 then do AU[0x00000]=LU[Ko[0x6]];end;nU=nU+0x1;nU=nU+0X01;do Ko=TG[nU];end;nU=nU+0X1;do(AU)[0X0]=AU[0X00000][Ko[1]];end;do nU=nU+0X1;end;nU=nU+0X1;Ko=TG[nU];do nU=nU+0X0001;end;if not(not AU[0x00])then else nU=Ko[0x005];end;else(AU)[Ko[2]]=AU[Ko[5]]+AU[Ko[0X0004]];end;end;end;end;end;end;end);if not(OU)then if C(dU)~='\st\114\i\110\103'then E(dU,0);else if M(dU,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(M(dU,'\094\.-\:\%\d\+\058\ '))then(E)(dU,0);else E("\076u\114ap\h \S\c\114\105\pt\:"..(YG[nU-1]or'(\i\110ter\110a\108\041')..": "..x(dU),0);end;end;else if dU then do if oU~=0X0001 then return AU[UU](V(AU,UU+0X001,DU));else do return AU[UU]();end;end;end;elseif UU then return V(AU,UU,oU);end;end;end;end;else if lG==0x11 then hG=function(...)local G6,l6=0X1,{};local L6=(I());local y6=((L6==a and SG or L6));local M6=0;local v6,Y6=Cd(...);local f6=({[0X0002]=l6,[0X1]=FG});v6=v6-1;do for kL=0,v6 do if IG>kL then(l6)[kL]=Y6[kL+0x01];else break;end;end;end;if not OG then Y6=nil;elseif not(zG)then else(l6)[IG]={n=v6>=IG and v6-IG+1 or 0X0,V(Y6,IG+1,v6+1)};end;do if y6==L6 then else(R)(hG,y6);end;end;local u6,F6,x6,i6=A(function()while true do local ce=(TG[G6]);local Fe=(ce[3]);G6=G6+0X1;if Fe>=26 then if Fe<0x27 then if Fe<0X020 then if not(Fe>=0X00001D)then if not(Fe>=27)then do l6[ce[0X002]]=N(l6[ce[5]],l6[ce[0X4]]);end;else do if Fe~=0X001C then else if not(l6[ce[0X2]])then else do G6=ce[5];end;end;end;end;end;else if Fe<0X00001E then(l6)[4]=y6[ce[6]];G6=G6+0x00001;G6=G6+0x1;ce=TG[G6];G6=G6+1;local Dd=0X4;do l6[5]=ce[0X6];end;do G6=G6+0x1;end;do(l6)[6]=true;end;G6=G6+1;(l6)[Dd]=l6[Dd](l6[Dd+1],l6[Dd+0X02]);M6=Dd;ce=TG[G6];G6=G6+0x0001;if l6[0X4]then G6=ce[0X5];end;else if Fe~=0X1f then(l6)[4]=true;ce=TG[G6];G6=G6+0X1;(y6)[ce[6]]=l6[4];ce=TG[G6];do G6=G6+1;end;G6=ce[5];else do if l6[ce[5]]==ce[1]then else G6=ce[0X0002];end;end;end;end;end;else if Fe<0X023 then if Fe<0X21 then(y6)[ce[6]]=l6[ce[2]];else if Fe==0x22 then do l6[2]=y6[ce[6]];end;G6=G6+0x1;G6=G6+1;ce=TG[G6];G6=G6+1;do(l6)[2]=l6[2][ce[0X1]];end;ce=TG[G6];G6=G6+0X1;if not l6[0X2]then do G6=ce[5];end;end;else l6[0X04]=y6[ce[6]];ce=TG[G6];do G6=G6+0X01;end;(l6)[0x5]=ce[6];ce=TG[G6];G6=G6+0X01;l6[0X6]=ce[6];G6=G6+0X1;local GU=0X4;(l6[GU])(l6[GU+1],l6[GU+0X002]);M6=GU-0X1;ce=TG[G6];G6=G6+0X001;(l6)[0X0004]=y6[ce[0X6]];do ce=TG[G6];end;G6=G6+0X1;(l6)[5]=ce[6];G6=G6+0X1;GU=4;do l6[GU]=l6[GU](l6[GU+0x01]);end;M6=GU;ce=TG[G6];do G6=G6+1;end;if l6[4]~=ce[1]then else do G6=ce[0X2];end;end;end;end;else do if Fe<37 then do if Fe==0X00024 then do(l6)[ce[0X02]]=y6[ce[6]];end;else(l6)[0x04]=y6[ce[6]];local jv=4;G6=G6+0X1;G6=G6+1;ce=TG[G6];G6=G6+1;(l6)[5]=ce[0x6];G6=G6+1;l6[jv](l6[jv+0X01]);do M6=jv-1;end;G6=G6+0X1;do G6=G6+1;end;ce=TG[G6];do G6=G6+1;end;do l6[0X4]=y6[ce[6]];end;ce=TG[G6];G6=G6+0X001;l6[4][ce[6]]=ce[1];ce=TG[G6];G6=G6+1;do l6[4]=y6[ce[6]];end;G6=G6+1;do G6=G6+0X01;end;G6=G6+0x01;do M6=4;end;l6[M6]();do M6=M6-1;end;do ce=TG[G6];end;G6=G6+0X01;(l6)[0x4]=y6[ce[6]];do G6=G6+1;end;G6=G6+0X1;ce=TG[G6];do G6=G6+1;end;l6[5]=y6[ce[0x00006]];G6=G6+1;do G6=G6+0X1;end;G6=G6+0X0001;do jv=0X04;end;l6[jv](l6[jv+1]);M6=jv-0x001;do ce=TG[G6];end;do G6=G6+0X1;end;G6=ce[0X0005];end;end;else do if Fe~=38 then l6[ce[2]]=l6[ce[5]];else do repeat local tN,ZN=iG,(l6);do if not(#tN>0X00)then else local qQ={};for J7,n7 in l,tN do do for hk,Ak in l,n7 do if Ak[0X1]==ZN and Ak[2]>=0x00000 then local BN=Ak[0X2];do if not(not qQ[BN])then else do(qQ)[BN]={ZN[BN]};end;end;end;(Ak)[0x01]=qQ[BN];do(Ak)[0X002]=1;end;end;end;end;end;end;end;until true;end;return;end;end;end;end;end;end;else if not(Fe<45)then if Fe<48 then do if Fe>=46 then if Fe~=0X2F then(l6)[2]=y6[ce[0X6]];G6=G6+1;G6=G6+1;ce=TG[G6];do G6=G6+0X01;end;(l6)[0X02]=l6[2][ce[0x00001]];ce=TG[G6];do G6=G6+0X01;end;if not(l6[0X0002])then else G6=ce[5];end;else local go=ce[2];for lk=go,go+(ce[5]-0X0001)do do l6[lk]=Y6[IG+(lk-go)+0X1];end;end;end;else if l6[ce[0X00005]]==ce[0X00001]then G6=ce[2];end;end;end;else if not(Fe>=50)then if Fe==49 then for Xa=ce[0X2],ce[0X0005]do l6[Xa]=nil;end;else(l6)[0x0002]=y6[ce[0X06]];G6=G6+0X1;G6=G6+0X1;do ce=TG[G6];end;G6=G6+1;l6[0x0002]=l6[2][ce[1]];ce=TG[G6];G6=G6+1;if not(l6[2])then else G6=ce[5];end;end;else if Fe~=51 then do l6[0X00002]=y6[ce[0x6]];end;G6=G6+0X001;G6=G6+0X00001;ce=TG[G6];G6=G6+0x1;l6[0X2]=l6[0X00002][ce[1]];ce=TG[G6];G6=G6+0X001;if l6[2]then G6=ce[5];end;else if not(ce[0X006]<l6[ce[0X0004]])then G6=ce[2];end;end;end;end;else do if Fe<0X2a then if not(Fe<40)then if Fe==0x0029 then do if not l6[ce[0X02]]then G6=ce[0x00005];end;end;else l6[ce[2]]=L(l6[ce[5]],l6[ce[0X04]]);end;else l6[2]=y6[ce[0x6]];G6=G6+0X1;G6=G6+1;do G6=G6+0X0001;end;M6=2;(l6[M6])();M6=M6-1;G6=G6+1;G6=G6+0x1;ce=TG[G6];G6=G6+0x1;do l6[2]=y6[ce[0X6]];end;do G6=G6+1;end;G6=G6+0X01;ce=TG[G6];G6=G6+0X1;l6[2][ce[6]]=ce[0X1];do G6=G6+0X0001;end;repeat local ZQ,GQ=iG,(l6);if#ZQ>0X00000 then local fq=({});for VB,HB in l,ZQ do for jx,ux in l,HB do if ux[0X1]==GQ and ux[2]>=0X0 then local mL=ux[0X2];if not(not fq[mL])then else fq[mL]={GQ[mL]};end;(ux)[1]=fq[mL];(ux)[2]=1;end;end;end;end;until true;return;end;else if not(Fe>=43)then(l6)[5]=y6[ce[0x00006]];G6=G6+0X00001;G6=G6+0X1;G6=G6+0X00001;M6=0X005;(l6)[M6]=l6[M6]();ce=TG[G6];G6=G6+0x1;if not(l6[5])then else G6=ce[0X5];end;else if Fe==44 then(l6)[0x00004]=y6[ce[6]];do ce=TG[G6];end;G6=G6+1;l6[4][ce[6]]=ce[1];ce=TG[G6];G6=G6+1;(l6)[0X0004]=y6[ce[0x0006]];G6=G6+1;do G6=G6+1;end;do ce=TG[G6];end;G6=G6+1;l6[4]=l6[0X0004][ce[0X00001]];ce=TG[G6];G6=G6+0X1;(l6)[4]=l6[0x4][ce[0X00001]];do G6=G6+0X1;end;G6=G6+0X1;ce=TG[G6];G6=G6+0x0001;(l6)[0X04]=l6[0X4][ce[0x1]];G6=G6+0X1;do G6=G6+1;end;do ce=TG[G6];end;do G6=G6+0x0001;end;do if not(not(ce[6]<=l6[4]))then else G6=ce[0X02];end;end;else l6[0x0005]=y6[ce[6]];G6=G6+0x1;G6=G6+1;local cN=(0X00005);do ce=TG[G6];end;G6=G6+0X1;do(l6)[0X6]=ce[6];end;G6=G6+0X1;l6[cN]=l6[cN](l6[cN+1]);M6=cN;ce=TG[G6];G6=G6+1;if l6[5]~=ce[1]then G6=ce[0X0002];end;end;end;end;end;end;end;else if Fe>=0XD then if not(Fe<19)then if not(Fe>=22)then if Fe<0X00014 then l6[0X4]=y6[ce[6]];do G6=G6+0X1;end;local Am=4;l6[5]=l6[3];G6=G6+1;(l6)[Am]=l6[Am](l6[Am+0X1]);M6=Am;ce=TG[G6];G6=G6+0X1;if l6[4]~=ce[1]then G6=ce[2];end;else if Fe==0X015 then local Dd=ce[0X00005];local iP=l6[Dd];for n6=Dd+0x1,ce[4]do iP=iP..l6[n6];end;(l6)[ce[0x2]]=iP;else do l6[0X00004]=y6[ce[0x6]];end;G6=G6+0x01;G6=G6+1;ce=TG[G6];do G6=G6+1;end;(l6)[5]=y6[ce[0x6]];do ce=TG[G6];end;local E0=0X4;local S0=(3);G6=G6+0X1;(l6)[0X006]=ce[6];do ce=TG[G6];end;G6=G6+0x0001;do(l6)[7]=ce[0x6];end;ce=TG[G6];G6=G6+1;(l6)[8]=ce[6];G6=G6+1;local F0=0X5;do if F0~=0x0 then M6=E0+F0-0X00001;end;end;local e0,N0=nil,(nil);if F0~=0x0001 then e0,N0=Cd(l6[E0](V(l6,E0+1,M6)));else e0,N0=Cd(l6[E0]());end;if S0==0X01 then M6=E0-1;else if S0~=0X0000 then e0=E0+S0-0X02;M6=e0+1;else do e0=e0+E0-1;end;M6=e0;end;local eX=(0);for xc=E0,e0 do eX=eX+0x001;(l6)[xc]=N0[eX];end;end;G6=G6+0X1;G6=G6+1;G6=G6+1;do(l6)[0X0003]=l6[5];end;G6=G6+0X0001;(l6)[2]=l6[4];do ce=TG[G6];end;G6=G6+0x1;G6=ce[0x00005];end;end;else if Fe>=24 then do if Fe~=0X19 then l6[4]=y6[ce[6]];do ce=TG[G6];end;G6=G6+0X1;(l6)[0X5]=ce[0x6];ce=TG[G6];do G6=G6+0X1;end;l6[0X06]=ce[0X6];ce=TG[G6];G6=G6+1;(l6)[7]=ce[0X6];ce=TG[G6];G6=G6+0x1;(l6)[8]=ce[6];local RQ=(4);G6=G6+0x0001;M6=RQ+0X05-0x1;(l6[RQ])(V(l6,RQ+0x1,M6));M6=RQ-1;G6=G6+0x1;G6=G6+1;do ce=TG[G6];end;G6=G6+0X1;l6[0X04]=y6[ce[6]];ce=TG[G6];do G6=G6+0X1;end;do l6[0X4]=l6[0X4]+ce[1];end;ce=TG[G6];G6=G6+0X01;do y6[ce[6]]=l6[0X0004];end;ce=TG[G6];G6=G6+1;G6=ce[0x5];else local Lk,Ik=JG[ce[5]],nil;local kk=Lk[0X4];local tk=(#kk);do if not(tk>0)then else Ik={};for NW=0x00001,tk do local bW=(kk[NW]);if bW[0x1]~=0 then(Ik)[NW-1]=cG[bW[0X00002]];else(Ik)[NW-0X1]={l6,bW[2]};end;end;H(iG,Ik);end;end;do l6[ce[0X02]]=ed(y6,Lk,Ik);end;end;end;else do if Fe==23 then do l6[0X6]=y6[ce[6]];end;G6=G6+1;G6=G6+1;ce=TG[G6];G6=G6+0x1;(l6)[0X06]=l6[6][ce[0X1]];ce=TG[G6];G6=G6+0X00001;if not(l6[0X6])then else G6=ce[0X5];end;else l6[0X2]=y6[ce[0x00006]];G6=G6+1;G6=G6+1;ce=TG[G6];G6=G6+0X1;do(l6)[2]=l6[0x00002][ce[0X1]];end;G6=G6+0X1;do G6=G6+0X1;end;do ce=TG[G6];end;G6=G6+0X1;if l6[0X2]then G6=ce[5];end;end;end;end;end;else do if Fe>=0X010 then if not(Fe<0x0011)then do if Fe==18 then do(l6)[6]=y6[ce[6]];end;ce=TG[G6];G6=G6+0x1;(l6)[7]=ce[6];G6=G6+0x1;(l6)[8]=true;G6=G6+0x1;local lI=6;(l6)[lI]=l6[lI](l6[lI+1],l6[lI+0x2]);M6=lI;do G6=G6+1;end;G6=G6+0X1;do ce=TG[G6];end;G6=G6+1;lI=6;local VI=l6[6];(l6)[lI+1]=VI;(l6)[lI]=VI[ce[1]];ce=TG[G6];do G6=G6+0X001;end;(l6)[8]=ce[6];G6=G6+1;lI=0X6;(l6)[lI]=l6[lI](l6[lI+0x1],l6[lI+0X002]);M6=lI;G6=G6+0X1;G6=G6+0X00001;ce=TG[G6];G6=G6+1;do(l6)[0X6]=l6[0X6][ce[0X0001]];end;G6=G6+0X1;G6=G6+1;ce=TG[G6];G6=G6+1;G6=ce[5];else do(l6)[0X2]=true;end;G6=G6+1;do(l6)[0x3]=nil;end;ce=TG[G6];G6=G6+1;(l6)[0X0004]=y6[ce[0X006]];ce=TG[G6];do G6=G6+0x1;end;(l6)[0X4]=l6[4][ce[1]];do ce=TG[G6];end;G6=G6+0X1;if l6[0x4]then G6=ce[5];end;end;end;else l6[2]=y6[ce[6]];G6=G6+0x1;do G6=G6+0X1;end;ce=TG[G6];G6=G6+0x00001;do(l6)[2]=l6[0X2][ce[1]];end;do G6=G6+1;end;G6=G6+1;ce=TG[G6];do G6=G6+0X001;end;if not(not l6[0X002])then else G6=ce[0X5];end;end;else if not(Fe>=0X00e)then repeat local P1,N1=iG,(l6);do if not(#P1>0X0)then else local Tr={};for CP,AP in l,P1 do do for dk,Bk in l,AP do do if not(Bk[0X1]==N1 and Bk[0X0002]>=0X0)then else local af=(Bk[0X2]);if not(not Tr[af])then else Tr[af]={N1[af]};end;(Bk)[1]=Tr[af];do(Bk)[0X2]=1;end;end;end;end;end;end;end;end;until true;local IW=(ce[2]);return false,IW,IW+ce[5]-2;else if Fe==0XF then(l6)[4]=false;do ce=TG[G6];end;G6=G6+1;do(y6)[ce[0X06]]=l6[4];end;ce=TG[G6];G6=G6+0X1;do(l6)[4]=y6[ce[0X06]];end;do ce=TG[G6];end;G6=G6+1;do if not l6[4]then G6=ce[5];end;end;else(l6)[2]=y6[ce[0X6]];do G6=G6+0X001;end;G6=G6+1;ce=TG[G6];G6=G6+1;l6[0x02]=l6[0X02][ce[0X0001]];do G6=G6+0x1;end;G6=G6+1;ce=TG[G6];G6=G6+0X1;do if not(l6[2])then else G6=ce[0x5];end;end;end;end;end;end;end;else if not(Fe<6)then do if not(Fe>=9)then if Fe<7 then(l6)[ce[2]]=ce[6];else do if Fe~=8 then do l6[4]=true;end;G6=G6+0X0001;do l6[2]=l6[0X4];end;do ce=TG[G6];end;G6=G6+0x1;l6[0X4]=ce[6];G6=G6+1;l6[0X3]=l6[4];else do l6[ce[0X2]]=l6[ce[0X5]]-l6[ce[4]];end;end;end;end;else if not(Fe>=0xB)then if Fe==10 then l6[2]=y6[ce[6]];do G6=G6+1;end;G6=G6+1;ce=TG[G6];G6=G6+0X1;l6[0X2]=l6[2][ce[0X1]];do G6=G6+0x1;end;G6=G6+1;ce=TG[G6];G6=G6+1;if not(l6[2])then else G6=ce[5];end;else(l6)[ce[0x002]]=-l6[ce[5]];end;else if Fe~=0XC then if not(not(ce[6]<=l6[ce[4]]))then else G6=ce[0X2];end;else l6[2]=y6[ce[0X6]];ce=TG[G6];G6=G6+0x01;local AI=(0x02);(l6)[0X3]=ce[0X0006];G6=G6+1;l6[AI]=l6[AI](l6[AI+0X1]);M6=AI;do ce=TG[G6];end;G6=G6+1;if not(not l6[2])then else G6=ce[0x5];end;end;end;end;end;else if Fe>=0x3 then if Fe<4 then(l6)[ce[0X2]]={V({},1,ce[5])};else if Fe==0X5 then(l6)[2]=y6[ce[0x6]];ce=TG[G6];G6=G6+0x1;do(l6)[0X002]=l6[0X002][ce[1]];end;G6=G6+0X01;G6=G6+1;ce=TG[G6];G6=G6+0x1;if not(l6[0X2])then else do G6=ce[5];end;end;else f6[ce[0X5]]=l6[ce[2]];end;end;else if not(Fe>=0x1)then do l6[0x0]=ce[0x06];end;ce=TG[G6];G6=G6+1;do(y6)[ce[0X6]]=l6[0];end;do ce=TG[G6];end;G6=G6+1;l6[0]=y6[ce[0X00006]];ce=TG[G6];local Xt=(0X0);G6=G6+1;do l6[0x01]=y6[ce[6]];end;ce=TG[G6];G6=G6+0X1;(l6)[2]=ce[6];G6=G6+0x01;(l6)[0X3]=true;G6=G6+0X01;local Et=(0X4);local Wt=0X03;if Et~=0X0 then M6=Xt+Et-1;end;local Zt,Yt=nil,nil;if Et~=1 then do Zt,Yt=Cd(l6[Xt](V(l6,Xt+1,M6)));end;else Zt,Yt=Cd(l6[Xt]());end;if Wt==0X01 then M6=Xt-0X00001;else if Wt~=0x00000 then Zt=Xt+Wt-2;M6=Zt+1;else do Zt=Zt+Xt-1;end;do M6=Zt;end;end;local QN=0X0;do for wH=Xt,Zt do QN=QN+1;(l6)[wH]=Yt[QN];end;end;end;ce=TG[G6];G6=G6+0x1;if l6[1]==ce[0X1]then do G6=ce[2];end;end;else if Fe~=0X2 then do(l6)[2]=y6[ce[0X00006]];end;G6=G6+0X1;G6=G6+0X0001;do ce=TG[G6];end;G6=G6+1;do l6[2]=l6[2][ce[1]];end;G6=G6+1;do G6=G6+1;end;ce=TG[G6];G6=G6+0X0001;if not(l6[2])then else G6=ce[5];end;else G6=ce[5];end;end;end;end;end;end;end;end);if u6 then do if F6 then do if i6==1 then do return l6[x6]();end;else return l6[x6](V(l6,x6+1,M6));end;end;elseif x6 then do return V(l6,x6,i6);end;end;end;else if C(F6)~="\115t\114\i\110\103"then(E)(F6,0X0);else if M(F6,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if not(M(F6,'\^\.\-:%\d\043\:\ '))then E(F6,0X0);else(E)("Luraph Script:"..(YG[G6-1]or'\040\in\116er\110\097\108\)')..": "..x(F6),0X000);end;end;end;end;else do hG=function(...)local NW,LW=0,(0x0001);local KW={};local dW=I();local DW={[0X1]=FG,[0X0002]=KW};local RW,uW=Cd(...);local iW=((dW==a and SG or dW));do RW=RW-0X00001;end;for E_=0X0,RW do if IG>E_ then(KW)[E_]=uW[E_+1];else break;end;end;if not OG then do uW=nil;end;elseif zG then do(KW)[IG]={n=RW>=IG and RW-IG+0X1 or 0X0,V(uW,IG+1,RW+0X01)};end;end;if iW~=dW then(R)(hG,iW);end;local yW,MW,bW,eW=A(function()do while true do local u5=TG[LW];local E5=(u5[3]);do LW=LW+0X001;end;if E5<0X0000a then if E5<5 then do if E5>=0X2 then if E5<0X0003 then local Pi=cG[0];do KW[0]=Pi[1][Pi[0x002]];end;LW=LW+1;do LW=LW+0X01;end;local Di=0;u5=TG[LW];LW=LW+0x00001;local Ei=KW[0];KW[Di+0X1]=Ei;do(KW)[Di]=Ei[u5[0x00001]];end;LW=LW+1;do Di=0X0;end;do(KW)[Di]=KW[Di](KW[Di+0x1]);end;NW=Di;do u5=TG[LW];end;LW=LW+0X0001;do LW=u5[5];end;else if E5~=4 then(KW)[0]=iW[u5[6]];do u5=TG[LW];end;do LW=LW+0X001;end;(KW)[0]=KW[0x0][u5[1]];do LW=LW+0X0001;end;LW=LW+0x00001;do u5=TG[LW];end;LW=LW+1;do if not(KW[0X00])then else do LW=u5[0X5];end;end;end;else(KW)[u5[2]]=iW[u5[6]];end;end;else if E5~=0X0001 then if not(KW[u5[5]]<=KW[u5[4]])then LW=u5[2];end;else KW[u5[0X2]]=KW[u5[5]]<KW[u5[4]];end;end;end;else if not(E5<7)then do if E5<8 then(KW)[0]=iW[u5[0X0006]];do LW=LW+0x1;end;LW=LW+1;u5=TG[LW];LW=LW+1;do(KW)[0x0]=KW[0][u5[1]];end;u5=TG[LW];do LW=LW+1;end;KW[0]=KW[0X0][u5[1]];do u5=TG[LW];end;do LW=LW+0X1;end;(KW)[0X0]=KW[0][u5[1]];u5=TG[LW];LW=LW+1;do(KW)[0X0]=KW[0X0]>u5[0X1];end;u5=TG[LW];LW=LW+1;LW=u5[5];else do if E5~=9 then repeat local Q7,D7=iG,(KW);if#Q7>0X00 then local yo={};do for J3,n3 in l,Q7 do for Pm,vm in l,n3 do do if vm[1]==D7 and vm[2]>=0x0 then local Lk=vm[2];if not(not yo[Lk])then else yo[Lk]={D7[Lk]};end;(vm)[1]=yo[Lk];do vm[0X02]=1;end;end;end;end;end;end;end;until true;return;else if not KW[u5[0X00002]]then do LW=u5[5];end;end;end;end;end;end;else do if E5~=6 then(KW)[u5[2]]=true;else repeat local Qu,eu=iG,(KW);if#Qu>0X0 then local i5={};for Fx,Hx in l,Qu do for uk,qk in l,Hx do do if qk[1]==eu and qk[0X0002]>=0X00000 then local ca=(qk[0X00002]);if not i5[ca]then do i5[ca]={eu[ca]};end;end;qk[0X1]=i5[ca];(qk)[0x0002]=1;end;end;end;end;end;until true;local Vu=(u5[2]);return false,Vu,Vu;end;end;end;end;else if not(E5<15)then if E5<18 then do if E5<0X000010 then local rD=(u5[0X02]);local aD,hD=KW[rD]();if aD then do LW=u5[0X5];end;KW[rD+0X3]=hD;end;else if E5==17 then if not(KW[u5[5]]<KW[u5[4]])then else LW=u5[2];end;else end;end;end;else do if E5>=0X13 then do if E5==0X014 then KW[0X0]=iW[u5[6]];do LW=LW+1;end;LW=LW+0X1;u5=TG[LW];LW=LW+0X001;LW=u5[5];else for ER=u5[2],u5[0X5]do KW[ER]=nil;end;end;end;else(KW)[0]=iW[u5[0X6]];do LW=LW+0X1;end;NW=0x0;do(KW)[NW]=KW[NW]();end;LW=LW+1;do LW=LW+1;end;u5=TG[LW];do LW=LW+0X1;end;LW=u5[0x5];end;end;end;else do if not(E5>=0X0c)then if E5~=11 then do KW[u5[0X02]]={V({},1,u5[0X005])};end;else(KW)[u5[0X2]]=KW[u5[5]]~=KW[u5[4]];end;else do if E5<0X0D then local Fn=JG[u5[5]];local gn=(nil);local cn=Fn[0X04];local an=(#cn);do if an>0X0000 then gn={};do for Ug=0x1,an do local mg=cn[Ug];if mg[1]~=0x0000 then do(gn)[Ug-1]=cG[mg[0X2]];end;else(gn)[Ug-1]={KW,mg[0X2]};end;end;end;H(iG,gn);end;end;KW[u5[0X2]]=ed(iW,Fn,gn);else if E5==14 then KW[u5[0x2]]=u5[0X06];else LW=u5[0x00005];end;end;end;end;end;end;end;end;end;end);if not(yW)then if C(MW)=="string"then do if not(M(MW,'att\101\109p\116\ \116o\032\y\105e\108d\ a\cro\115s me\116\097\m\e\116\h\o\d\/\C\%\-ca\108l\ b\o\117nd\097r\y'))then else do return coroutine.yield();end;end;end;do if M(MW,'\094\.\-\:%\100+\:\032')then(E)("Luraph Script:"..(YG[LW-1]or"(internal)")..":\032"..x(MW),0);else(E)(MW,0);end;end;else(E)(MW,0);end;else if MW then if eW~=1 then return KW[bW](V(KW,bW+1,NW));else do return KW[bW]();end;end;elseif bW then return V(KW,bW,eW);end;end;end;end;end;end;end;else if lG==0XE then do hG=function(...)local CN,tN=0X01,{};local oN=(I());local QN,nN={[0X0002]=tN,[0X1]=FG},((oN==a and SG or oN));local YN,XN=Cd(...);local IN=(0);YN=YN-0X00001;for eh=0,YN do if IG>eh then do tN[eh]=XN[eh+0x001];end;else break;end;end;if not OG then do XN=nil;end;elseif zG then do tN[IG]={n=YN>=IG and YN-IG+1 or 0,V(XN,IG+0x1,YN+0x1)};end;end;do if nN==oN then else(R)(hG,nN);end;end;local BN,PN,ON,jN=A(function()while true do local wb=TG[CN];local Zb=wb[0X3];CN=CN+1;if not(Zb>=0X8)then if Zb>=0X4 then do if not(Zb<0X0006)then if Zb==7 then for CG=wb[0x00002],wb[0X0005]do(tN)[CG]=nil;end;else local C6=(JG[wb[0X5]]);local t6=nil;local I6=(C6[4]);local r6=(#I6);if not(r6>0X00)then else t6={};for Em=1,r6 do local Um=(I6[Em]);if Um[0X1]==0x0000 then(t6)[Em-1]={tN,Um[0X2]};else do(t6)[Em-0X00001]=cG[Um[2]];end;end;end;(H)(iG,t6);end;(tN)[wb[2]]=ed(nN,C6,t6);end;else if Zb~=0X5 then if not(tN[wb[5]]<=tN[wb[0X4]])then CN=wb[2];end;else CN=wb[0X5];end;end;end;else if not(Zb<0X0002)then if Zb~=3 then if tN[wb[0X5]]<tN[wb[0X00004]]then do CN=wb[2];end;end;else if not(tN[wb[5]]<=tN[wb[4]])then else CN=wb[2];end;end;else if Zb==0X1 then(tN)[0]=nN[wb[0x6]];local Dt=(0);wb=TG[CN];CN=CN+1;local at=tN[0x000];(tN)[Dt+0x1]=at;tN[Dt]=at[wb[1]];wb=TG[CN];CN=CN+0X0001;do tN[2]=wb[0X06];end;CN=CN+0X1;Dt=0X0;tN[Dt]=tN[Dt](tN[Dt+0X00001],tN[Dt+0X00002]);do IN=Dt;end;do CN=CN+1;end;CN=CN+0X0001;wb=TG[CN];local st=nil;CN=CN+0X1;(tN)[1]=nN[wb[0X6]];wb=TG[CN];CN=CN+0X0001;(tN)[1]=tN[0X0001][wb[1]];CN=CN+0x1;CN=CN+0x1;wb=TG[CN];do CN=CN+1;end;local it=JG[wb[0X5]];local pt=it[0X4];local Ot=(#pt);if not(Ot>0X00)then else do st={};end;for lA=1,Ot do local wA=pt[lA];do if wA[1]==0 then(st)[lA-1]={tN,wA[0X02]};else(st)[lA-0x1]=cG[wA[2]];end;end;end;H(iG,st);end;do tN[0x2]=ed(nN,it,st);end;CN=CN+1;Dt=1;tN[Dt](tN[Dt+0X01]);IN=Dt-1;do CN=CN+1;end;do CN=CN+1;end;CN=CN+1;repeat local Z3,K3=iG,tN;do if#Z3>0X00 then local xV=({});for SF,iF in l,Z3 do for hJ,SJ in l,iF do if not(SJ[0X1]==K3 and SJ[0X2]>=0X0000)then else local a5=(SJ[2]);if not xV[a5]then(xV)[a5]={K3[a5]};end;SJ[1]=xV[a5];SJ[0X002]=1;end;end;end;end;end;until true;return;else tN[wb[2]]={V({},0X001,wb[0X5])};end;end;end;else do if Zb<0xC then do if not(Zb>=10)then if Zb~=9 then tN[wb[2]]=not tN[wb[5]];else(tN)[wb[2]]=wb[0X6];end;else if Zb~=11 then do if tN[wb[5]]==tN[wb[4]]then CN=wb[2];end;end;else do(tN)[wb[0x2]]=tN[wb[5]];end;end;end;end;else if Zb<14 then if Zb~=13 then tN[wb[2]]=nN[wb[0X6]];else end;else if Zb~=0X000F then(tN)[wb[2]]=T(tN[wb[5]],tN[wb[4]]);else if not(tN[wb[2]])then else CN=wb[5];end;end;end;end;end;end;end;end);if not(BN)then if C(PN)~="s\116\114\ing"then(E)(PN,0);else do if not(M(PN,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(M(PN,'\^.-\058%d\+\:\ '))then(E)(PN,0X0);else E("Luraph Script:"..(YG[CN-0X1]or"\(\in\116e\114\110\097\l\)").."\: "..x(PN),0);end;end;else do if PN then do if jN==1 then return tN[ON]();else return tN[ON](V(tN,ON+1,IN));end;end;elseif ON then return V(tN,ON,jN);end;end;end;end;end;else hG=function(...)local uj,Pj=0X00001,({});local Mj=I();local wj,Gj=Cd(...);local Lj,vj={[0X1]=FG,[0X0002]=Pj},(0);local gj=(Mj==a and SG or Mj);wj=wj-1;for X0=0,wj do if IG>X0 then do Pj[X0]=Gj[X0+0X1];end;else do break;end;end;end;if not OG then Gj=nil;elseif zG then do Pj[IG]={n=wj>=IG and wj-IG+1 or 0X00000,V(Gj,IG+1,wj+0x0001)};end;end;if gj==Mj then else R(hG,gj);end;local zj,Kj,yj,dj=A(function()while true do local cE=(TG[uj]);local fE=(cE[0X3]);uj=uj+0x1;if not(fE>=0X7)then do if fE<3 then if fE<0x1 then Pj[cE[0X2]]=Pj[cE[0X5]]>Pj[cE[0x4]];else if fE~=0X2 then else do uj=cE[5];end;end;end;else if fE>=5 then if fE~=0x0006 then local ty=(JG[cE[5]]);local ay,Ny=ty[0X4],(nil);local My=#ay;if My>0X0 then Ny={};for dm=1,My do local em=(ay[dm]);if em[0X1]==0X00 then do(Ny)[dm-1]={Pj,em[2]};end;else Ny[dm-0x1]=cG[em[2]];end;end;(H)(iG,Ny);end;(Pj)[cE[0X2]]=ed(gj,ty,Ny);else Pj[1]=gj[cE[0X0006]];do uj=uj+1;end;uj=uj+0X1;cE=TG[uj];uj=uj+0X1;(Pj)[1]=Pj[0X01][cE[1]];uj=uj+0X001;do uj=uj+0x1;end;do cE=TG[uj];end;do uj=uj+0X1;end;if not Pj[1]then uj=cE[0X5];end;end;else if fE==4 then if not(not(Pj[cE[0X5]]<Pj[cE[0X4]]))then else uj=cE[2];end;else do Pj[cE[2]]=Pj[cE[0x5]][Pj[cE[4]]];end;end;end;end;end;else if not(fE<11)then do if fE>=13 then if fE~=14 then(Pj)[0]=gj[cE[0X06]];uj=uj+1;uj=uj+1;cE=TG[uj];local tI=cG[0X0];uj=uj+1;(Pj)[0X1]=cE[6];uj=uj+1;local aI=0x0;do(Pj)[aI]=Pj[aI](Pj[aI+0x1]);end;vj=aI;uj=uj+1;(Pj)[1]=tI[0x1][tI[0X0002]];cE=TG[uj];uj=uj+0X01;do Pj[0X0001]=Pj[0X0001][cE[1]];end;uj=uj+0X01;(Pj)[2]=Pj[0X0];uj=uj+0X1;aI=0X1;do(Pj)[aI]=Pj[aI](Pj[aI+0X1]);end;vj=aI;cE=TG[uj];uj=uj+0X1;do if not Pj[1]then uj=cE[5];end;end;else(Pj)[cE[2]]=gj[cE[6]];end;else if fE==12 then(Pj)[cE[2]]=cE[0X00006];else local UA=(cG[0X0]);(Pj)[0X00001]=UA[1][UA[0x2]];cE=TG[uj];uj=uj+0x1;Pj[0x1]=Pj[1][cE[1]];uj=uj+0X001;local VA=(0X1);Pj[2]=Pj[0x000];uj=uj+1;UA=cG[0X0001];do Pj[0X003]=UA[1][UA[2]];end;uj=uj+1;do uj=uj+0X1;end;uj=uj+1;Pj[VA](Pj[VA+0X1],Pj[VA+0X2]);do vj=VA-1;end;uj=uj+0x1;uj=uj+1;do cE=TG[uj];end;uj=uj+1;uj=cE[0X5];end;end;end;else do if not(fE>=9)then if fE~=0X00008 then for Nc=cE[2],cE[0X005]do Pj[Nc]=nil;end;else Pj[cE[0X2]]=Pj[cE[0X5]];end;else do if fE==0Xa then repeat local vr,ar=iG,Pj;do if not(#vr>0x0)then else local Hs={};for Rp,op in l,vr do do for Is,rs in l,op do if rs[1]==ar and rs[2]>=0 then local zb=(rs[2]);do if not Hs[zb]then do(Hs)[zb]={ar[zb]};end;end;end;rs[1]=Hs[zb];(rs)[0X2]=1;end;end;end;end;end;end;until true;return;else Pj[cE[2]]={V({},0X1,cE[5])};end;end;end;end;end;end;end;end);do if not(zj)then if C(Kj)~="string"then(E)(Kj,0);else if M(Kj,'\097\116\116e\m\pt\032\116\o\ \121i\e\108d\ \097\c\114\111\s\115\ \met\097\m\101\116\h\111d\/C\%-\c\097\ll\032\098\o\117\110\d\097\114\y')then return coroutine.yield();end;do if M(Kj,"^\046\-:\%\d\+\:\032")then(E)("Luraph Script:"..(YG[uj-1]or"(internal)")..':\ '..x(Kj),0);else E(Kj,0X0);end;end;end;else if Kj then if dj==0X1 then do return Pj[yj]();end;else return Pj[yj](V(Pj,yj+1,vj));end;elseif yj then return V(Pj,yj,dj);end;end;end;end;end;end;end;end;else if lG>=0X004 then do if lG<6 then if lG~=0X5 then hG=function(...)local lE=(1);local sE,fE={},0;local kE=({[0X0002]=sE,[0X1]=FG});local iE=(I());local SE,KE=Cd(...);local LE=((iE==a and SG or iE));do SE=SE-0X01;end;for xq=0,SE do if IG>xq then sE[xq]=KE[xq+0X1];else do break;end;end;end;if not OG then do KE=nil;end;elseif zG then do sE[IG]={n=SE>=IG and SE-IG+1 or 0,V(KE,IG+0X1,SE+0x1)};end;end;do if LE~=iE then R(hG,LE);end;end;local JE,tE,UE,PE=A(function()while true do local bo=TG[lE];local eo=bo[3];do lE=lE+0X1;end;if not(eo>=0X0009)then do if not(eo<0X4)then if eo<0X6 then do if eo~=0x5 then do repeat local rh,kh=iG,sE;if#rh>0X0 then local eE={};for TD,YD in l,rh do for HZ,PZ in l,YD do do if not(PZ[1]==kh and PZ[2]>=0)then else local dY=PZ[0X2];if not eE[dY]then(eE)[dY]={kh[dY]};end;do(PZ)[0X1]=eE[dY];end;(PZ)[2]=0X1;end;end;end;end;end;until true;end;return;else local Xr=(bo[0x00002]);local zr,mr=sE[Xr]();if zr then lE=bo[5];sE[Xr+3]=mr;end;end;end;else if not(eo<0X7)then do if eo~=8 then local QK=sE[bo[5]]/sE[bo[0X4]];(sE)[bo[0X2]]=QK-QK%0X1;else(sE)[bo[2]]=sE[bo[0X05]]>sE[bo[4]];end;end;else local wG=cG[0X0];do sE[1]=wG[1][wG[2]];end;lE=lE+1;lE=lE+0x1;bo=TG[lE];lE=lE+1;sE[0X1]=sE[1][bo[0x1]];lE=lE+0X01;sE[0x02]=sE[0];lE=lE+0x1;local eG=(1);wG=cG[1];do(sE)[3]=wG[1][wG[2]];end;lE=lE+1;(sE[eG])(sE[eG+1],sE[eG+0x02]);do fE=eG-1;end;bo=TG[lE];do lE=lE+0X00001;end;do lE=bo[5];end;end;end;else if not(eo>=2)then if eo~=0X1 then(sE)[bo[0X2]]=sE[bo[5]]^sE[bo[0x4]];else for mb=bo[0x2],bo[0X5]do do(sE)[mb]=nil;end;end;end;else if eo~=0X003 then local d_=JG[bo[0X05]];local U_=d_[4];local k_=(nil);local n_=#U_;if not(n_>0X0)then else k_={};for eN=1,n_ do local aN=(U_[eN]);do if aN[0X1]~=0 then(k_)[eN-1]=cG[aN[2]];else k_[eN-0x1]={sE,aN[2]};end;end;end;H(iG,k_);end;sE[bo[2]]=ed(LE,d_,k_);else sE[0X001]=LE[bo[6]];bo=TG[lE];lE=lE+1;do sE[2]=bo[0X0006];end;lE=lE+0X1;local YL=(1);sE[YL](sE[YL+0X01]);fE=YL-1;lE=lE+0X0001;lE=lE+1;bo=TG[lE];do lE=lE+1;end;lE=bo[0x00005];end;end;end;end;else if not(eo>=0Xd)then if eo<0X000b then if eo~=0X0000a then do(sE)[bo[0X02]]=b(sE[bo[0X5]],sE[bo[0x4]]);end;else do sE[bo[2]]={V({},0X001,bo[0x005])};end;end;else if eo==12 then if not(sE[bo[0x5]]<sE[bo[4]])then else lE=bo[2];end;else(sE)[bo[2]]=LE[bo[0x0006]];end;end;else if eo>=15 then if eo>=16 then do if eo~=17 then else sE[bo[0X0002]]=bo[0x6];end;end;else(sE)[0X0]=LE[bo[6]];bo=TG[lE];lE=lE+1;local mb=(cG[0X00000]);sE[0x1]=bo[6];local Yb=0x0000;lE=lE+1;(sE)[Yb]=sE[Yb](sE[Yb+1]);fE=Yb;lE=lE+1;(sE)[0X0001]=mb[0X00001][mb[0x2]];lE=lE+0X01;lE=lE+0x1;bo=TG[lE];do lE=lE+1;end;(sE)[1]=sE[1][bo[0X1]];lE=lE+1;lE=lE+1;lE=lE+1;sE[2]=sE[0X0];do lE=lE+0X01;end;Yb=1;sE[Yb]=sE[Yb](sE[Yb+0x1]);fE=Yb;bo=TG[lE];do lE=lE+1;end;if not(not sE[1])then else lE=bo[5];end;end;else if eo==14 then do lE=bo[0x0005];end;else repeat local C9,p9=iG,(sE);if not(#C9>0)then else local Tw={};do for kR,KR in l,C9 do for hA,tA in l,KR do if not(tA[1]==p9 and tA[0X2]>=0X00000)then else local Kc=(tA[2]);if not Tw[Kc]then do(Tw)[Kc]={p9[Kc]};end;end;tA[0X1]=Tw[Kc];do(tA)[0X00002]=0X1;end;end;end;end;end;end;until true;local q6=(bo[2]);do return false,q6,q6+bo[0X5]-0x2;end;end;end;end;end;end;end);do if not(JE)then if C(tE)~="string"then E(tE,0X0);else if M(tE,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(M(tE,'\^\.\-\:\037\100\+\: '))then E(tE,0);else(E)("Luraph Script:"..(YG[lE-0X1]or'(in\116\er\110\097\108\)')..": "..x(tE),0);end;end;else if tE then if PE==1 then return sE[UE]();else return sE[UE](V(sE,UE+0X1,fE));end;elseif UE then return V(sE,UE,PE);end;end;end;end;else do hG=function(...)local M3,k3={},(0);local c3=(1);local q3=I();local y3,Z3=Cd(...);local u3={[0X0002]=M3,[0X1]=FG};y3=y3-1;for Dv=0X00000,y3 do if IG>Dv then do(M3)[Dv]=Z3[Dv+0X1];end;else do break;end;end;end;local d3=((q3==a and SG or q3));do if not OG then Z3=nil;elseif zG then M3[IG]={n=y3>=IG and y3-IG+0X01 or 0x0,V(Z3,IG+0x1,y3+0x0001)};end;end;do if d3~=q3 then(R)(hG,d3);end;end;do while true do local vA=TG[c3];c3=c3+0X1;local bA=(vA[3]);return(function(C,T,...)if not Client.Character:FindFirstChild("HasBuso")then task.spawn(_C,"Buso");end;end)(M3,cG,...);end;end;end;end;end;else if not(lG>=7)then hG=function(...)local bz,dz=0x1,({});local az=(I());local Vz=({[0X1]=FG,[0X0002]=dz});local Zz=0;local Rz=((az==a and SG or az));local Iz,qz=Cd(...);Iz=Iz-1;do for RR=0,Iz do if IG>RR then dz[RR]=qz[RR+1];else break;end;end;end;if not OG then qz=nil;elseif zG then dz[IG]={n=Iz>=IG and Iz-IG+0X1 or 0x0,V(qz,IG+0X1,Iz+0X00001)};end;do if Rz~=az then R(hG,Rz);end;end;local Lz,Cz,mz,Fz=A(function()do while true do local MV=(TG[bz]);local yV=(MV[0X3]);bz=bz+0X1;if not(yV>=13)then do if not(yV<6)then if not(yV<9)then if not(yV<0Xb)then if yV==0Xc then do(dz)[4]=Rz[MV[6]];end;do MV=TG[bz];end;do bz=bz+1;end;dz[4]=dz[0X4][MV[0X001]];bz=bz+0X1;bz=bz+0X001;bz=bz+1;dz[0x5]=dz[0X00000];MV=TG[bz];do bz=bz+1;end;(dz)[6]=dz[0X3][MV[0X1]];bz=bz+0X1;do bz=bz+1;end;do MV=TG[bz];end;bz=bz+0X01;local LT=(0X4);dz[0X6]=dz[6][MV[0X1]];bz=bz+0X1;bz=bz+0X1;bz=bz+0X1;dz[LT]=dz[LT](dz[LT+1],dz[LT+0X02]);Zz=LT;MV=TG[bz];bz=bz+0X1;if not(dz[4])then else bz=MV[5];end;else(dz)[4]=dz[3][MV[0X1]];do bz=bz+1;end;bz=bz+0X1;MV=TG[bz];local uJ=(0X005);bz=bz+1;(dz)[5]=Rz[MV[0X0006]];MV=TG[bz];do bz=bz+0X01;end;do(dz)[5]=dz[0X5][MV[1]];end;do MV=TG[bz];end;do bz=bz+1;end;dz[0X6]=MV[0X00006];do MV=TG[bz];end;bz=bz+0X1;(dz)[0X7]=MV[0x6];MV=TG[bz];bz=bz+1;do(dz)[0X8]=MV[6];end;do bz=bz+1;end;Zz=uJ+0X4-1;do(dz)[uJ]=dz[uJ](V(dz,uJ+0X0001,Zz));end;do Zz=uJ;end;bz=bz+1;do bz=bz+1;end;do MV=TG[bz];end;bz=bz+0X1;if dz[4]~=dz[5]then bz=MV[0X02];end;end;else if yV~=10 then dz[MV[0x2]]=Rz[MV[6]];else do if not(not dz[MV[2]])then else bz=MV[0x5];end;end;end;end;else if not(yV<0X7)then do if yV~=8 then dz[0X4]=Rz[MV[0X6]];do MV=TG[bz];end;do bz=bz+1;end;(dz)[4]=dz[0x4][MV[0X00001]];bz=bz+0X001;bz=bz+1;bz=bz+1;local YV=(4);do dz[0X005]=dz[0];end;MV=TG[bz];bz=bz+0X1;do(dz)[0X06]=dz[0X00003][MV[0x0001]];end;MV=TG[bz];do bz=bz+1;end;dz[6]=dz[0x6][MV[0X1]];bz=bz+0X1;(dz)[YV]=dz[YV](dz[YV+0X1],dz[YV+0X00002]);do Zz=YV;end;MV=TG[bz];bz=bz+0x0001;do if not dz[4]then bz=MV[0X5];end;end;else dz[MV[0X002]]=dz[MV[5]][MV[1]];end;end;else bz=MV[5];end;end;else if yV>=3 then if yV<4 then else if yV~=0X5 then dz[MV[2]]=dz[MV[0X5]]%dz[MV[4]];else(dz)[0X4]=Rz[MV[0X6]];local qe=(0X4);do MV=TG[bz];end;bz=bz+0X1;do dz[4]=dz[4][MV[1]];end;bz=bz+0X1;dz[0X00005]=dz[0X00];MV=TG[bz];do bz=bz+1;end;dz[0X0006]=dz[0X3][MV[0X01]];MV=TG[bz];do bz=bz+0X01;end;(dz)[6]=dz[0X006][MV[1]];do bz=bz+0X1;end;(dz[qe])(dz[qe+0X001],dz[qe+0X0002]);do Zz=qe-0X00001;end;do bz=bz+0x1;end;do bz=bz+1;end;MV=TG[bz];bz=bz+1;bz=MV[5];end;end;else if yV>=1 then if yV~=2 then local Ha,ia=MV[2],(dz[MV[5]]);dz[Ha+0X1]=ia;dz[Ha]=ia[MV[0X001]];else(dz)[MV[2]]={V({},1,MV[5])};end;else if dz[MV[5]]~=MV[1]then bz=MV[2];end;end;end;end;end;else do if not(yV<19)then if yV<0X16 then do if yV<0X00014 then dz[MV[0x2]]=MV[6];else do if yV~=0X15 then do if dz[MV[5]]<=dz[MV[4]]then bz=MV[2];end;end;else dz[0]={};local kC=(0X00003);MV=TG[bz];bz=bz+0X0001;(dz)[0x0001]=Rz[MV[6]];MV=TG[bz];local LC=2;do bz=bz+0X0001;end;do dz[0X00002]=Rz[MV[6]];end;do MV=TG[bz];end;do bz=bz+1;end;(dz)[2]=dz[0X2][MV[0X1]];bz=bz+0X1;bz=bz+0X1;MV=TG[bz];bz=bz+0X1;(dz)[0X2]=dz[0x2][MV[1]];do bz=bz+0x1;end;bz=bz+1;MV=TG[bz];bz=bz+0X1;do dz[0x0002]=dz[2][MV[1]];end;do MV=TG[bz];end;bz=bz+0X1;(dz)[3]=Rz[MV[0X6]];bz=bz+0X1;bz=bz+1;MV=TG[bz];bz=bz+0X00001;dz[0X00003]=dz[0x3][MV[0X1]];do MV=TG[bz];end;do bz=bz+1;end;dz[0x03]=dz[3][MV[0X00001]];MV=TG[bz];do bz=bz+1;end;do dz[3]=dz[0X3][MV[0x001]];end;bz=bz+0X1;bz=bz+0x1;MV=TG[bz];bz=bz+0x01;local TC=(dz[0x00003]);(dz)[kC+1]=TC;do dz[kC]=TC[MV[1]];end;MV=TG[bz];bz=bz+0x00001;(dz)[0X5]=MV[6];do bz=bz+0X1;end;do kC=3;end;dz[kC]=dz[kC](dz[kC+1],dz[kC+2]);Zz=kC;do bz=bz+0X00001;end;bz=bz+1;MV=TG[bz];bz=bz+1;do(dz)[0X0003]=dz[0x0003][MV[0X1]];end;bz=bz+0X1;(dz)[0X2]=dz[0X2][dz[3]];MV=TG[bz];bz=bz+0X00001;kC=2;TC=dz[0X2];dz[kC+1]=TC;(dz)[kC]=TC[MV[1]];do bz=bz+1;end;kC=0X2;local QC=0X0;if LC~=0 then Zz=kC+LC-1;end;local bC,qC=nil,nil;if LC~=0X1 then bC,qC=Cd(dz[kC](V(dz,kC+0X1,Zz)));else bC,qC=Cd(dz[kC]());end;do if QC==1 then do Zz=kC-1;end;else do if QC==0 then do bC=bC+kC-1;end;do Zz=bC;end;else bC=kC+QC-0X2;Zz=bC+1;end;end;local wQ=(0x0);for aR=kC,bC do wQ=wQ+0X01;(dz)[aR]=qC[wQ];end;end;end;bz=bz+1;bz=bz+1;do bz=bz+0X1;end;kC=0X1;LC=0;QC=4;if LC==0 then else Zz=kC+LC-1;end;bC,qC=nil;do if LC~=1 then bC,qC=Cd(dz[kC](V(dz,kC+0X1,Zz)));else bC,qC=Cd(dz[kC]());end;end;if QC~=0X1 then if QC~=0 then bC=kC+QC-0X2;Zz=bC+0x1;else bC=bC+kC-0X1;Zz=bC;end;local qE=(0X00000);for Wn=kC,bC do qE=qE+0X1;do dz[Wn]=qC[qE];end;end;else Zz=kC-0X01;end;do bz=bz+1;end;do bz=bz+0x1;end;MV=TG[bz];bz=bz+0X001;do kC=0X01;end;local CC=h(function(...)t();for LK,EK in...do t(true,LK,EK);end;end);CC(dz[kC],dz[kC+0X1],dz[kC+2]);Zz=kC;dz[kC]=CC;bz=MV[5];end;end;end;end;else if not(yV<24)then if yV~=25 then do dz[0X6]=dz[3][MV[0x00001]];end;do MV=TG[bz];end;bz=bz+0x1;do(dz)[6]=dz[0X0006][MV[1]];end;do MV=TG[bz];end;bz=bz+1;if dz[0X006]==MV[1]then do bz=MV[0X2];end;end;else do if not(not(dz[MV[5]]<dz[MV[4]]))then else bz=MV[2];end;end;end;else if yV==0X17 then local Sr,Pr=JG[MV[5]],nil;local Br=Sr[0X00004];local ar=#Br;do if not(ar>0)then else Pr={};do for iD=0x01,ar do local LD=(Br[iD]);do if LD[0X0001]~=0 then do Pr[iD-0X001]=cG[LD[0X2]];end;else do Pr[iD-0X1]={dz,LD[0X2]};end;end;end;end;end;(H)(iG,Pr);end;end;dz[MV[2]]=ed(Rz,Sr,Pr);else(dz)[0X4]=Rz[MV[6]];bz=bz+0X1;bz=bz+0X1;MV=TG[bz];bz=bz+1;do(dz)[0x4]=dz[4][MV[1]];end;bz=bz+1;bz=bz+1;bz=bz+0X1;local ic=4;do dz[5]=dz[0x0];end;MV=TG[bz];bz=bz+1;(dz)[6]=dz[3][MV[1]];bz=bz+0X1;bz=bz+0x1;MV=TG[bz];bz=bz+0X1;dz[6]=dz[6][MV[0X1]];bz=bz+0X1;(dz[ic])(dz[ic+1],dz[ic+0X2]);Zz=ic-0X1;MV=TG[bz];bz=bz+1;bz=MV[5];end;end;end;else do if yV<0X10 then if yV>=14 then if yV~=15 then repeat local y8,d8=iG,dz;do if not(#y8>0)then else local zw=({});for Xs,ls in l,y8 do for Zl,cl in l,ls do if cl[1]==d8 and cl[2]>=0 then local k6=(cl[0X2]);if not zw[k6]then zw[k6]={d8[k6]};end;(cl)[0x1]=zw[k6];cl[2]=0x1;end;end;end;end;end;until true;return;else repeat local qn,Xn=iG,dz;if not(#qn>0)then else local xg={};for o5,v5 in l,qn do do for Su,Pu in l,v5 do if not(Pu[0X00001]==Xn and Pu[2]>=0x00000)then else local OX=Pu[0x002];do if not xg[OX]then(xg)[OX]={Xn[OX]};end;end;Pu[1]=xg[OX];(Pu)[0X00002]=1;end;end;end;end;end;until true;local WB=(MV[0X0002]);return false,WB,WB;end;else(dz)[MV[0x2]]=dz[MV[0X5]];end;else if not(yV<0X011)then do if yV==0x00012 then local nS=(MV[2]);local HS,US,iS=dz[nS]();if HS then dz[nS+1]=US;do(dz)[nS+2]=iS;end;bz=MV[5];end;else(dz)[MV[2]]=dz[MV[5]]-dz[MV[0X00004]];end;end;else for Mu=MV[0X2],MV[0X005]do do dz[Mu]=nil;end;end;end;end;end;end;end;end;end;end;end);if not(Lz)then do if C(Cz)=="string"then do if not(M(Cz,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;do if M(Cz,"\^\.\-:\%\100+\: ")then(E)("Luraph Script:"..(YG[bz-0X01]or'\(\in\116\101r\110al)')..": "..x(Cz),0);else E(Cz,0);end;end;else(E)(Cz,0X00);end;end;else if Cz then if Fz~=0X1 then return dz[mz](V(dz,mz+1,Zz));else return dz[mz]();end;elseif not(mz)then else return V(dz,mz,Fz);end;end;end;else if lG~=0X8 then do hG=function(...)local Vu=({});local Bu=1;local qu=(0X00);local Pu=({[0X0002]=Vu,[0X1]=FG});local Fu=I();local Au,hu=Cd(...);Au=Au-1;for T5=0,Au do do if IG>T5 then do Vu[T5]=hu[T5+1];end;else break;end;end;end;local Xu=(Fu==a and SG or Fu);if not OG then hu=nil;elseif not(zG)then else Vu[IG]={n=Au>=IG and Au-IG+0X001 or 0X0,V(hu,IG+0X1,Au+1)};end;if Xu~=Fu then R(hG,Xu);end;local Mu,nu,du,Su=A(function()while true do local ww=(TG[Bu]);local tw=(ww[3]);Bu=Bu+1;if not(tw>=8)then if not(tw<4)then do if tw<0X6 then do if tw==5 then(Vu)[ww[2]]=T(Vu[ww[5]],Vu[ww[0X00004]]);else Vu[ww[2]]=Vu[ww[0X00005]]^Vu[ww[4]];end;end;else do if tw~=0X7 then if Vu[ww[0X00005]]~=Vu[ww[0X0004]]then Bu=ww[0X2];end;else local M0=JG[ww[5]];local p0,g0=M0[4],nil;local A0=(#p0);if A0>0X0 then do g0={};end;for gk=1,A0 do local Yk=(p0[gk]);if Yk[0x01]==0X00 then(g0)[gk-1]={Vu,Yk[2]};else(g0)[gk-1]=cG[Yk[0X2]];end;end;(H)(iG,g0);end;Vu[ww[2]]=ed(Xu,M0,g0);end;end;end;end;else if not(tw>=0X02)then do if tw==0X001 then Vu[ww[0X2]]=not Vu[ww[5]];else Vu[1]=Xu[ww[0X6]];Bu=Bu+0x1;qu=0x1;do(Vu)[qu]=Vu[qu]();end;Bu=Bu+1;Bu=Bu+0X1;local An=(cG[0X0000]);Bu=Bu+1;do(Vu)[2]=An[1][An[2]];end;do Bu=Bu+1;end;Bu=Bu+0X1;Bu=Bu+1;(Vu)[0X0001]=Vu[1]-Vu[2];ww=TG[Bu];do Bu=Bu+0X001;end;if not(ww[6]<Vu[0X001])then Bu=ww[0x2];end;end;end;else do if tw~=0x0003 then repeat local IQ,jQ=iG,Vu;if not(#IQ>0x0)then else local t6={};for IL,iL in l,IQ do for EW,pW in l,iL do if pW[1]==jQ and pW[2]>=0 then local F3=pW[2];if not t6[F3]then t6[F3]={jQ[F3]};end;(pW)[1]=t6[F3];(pW)[2]=1;end;end;end;end;until true;do return;end;else do(Vu)[ww[0X2]]=Vu[ww[0X05]]%Vu[ww[0X4]];end;end;end;end;end;else if tw>=0X00c then do if tw<0X00e then if tw==0xD then Vu[ww[2]]=ww[6];else Vu[ww[0X2]]={V({},0X1,ww[5])};end;else do if not(tw<0XF)then if tw~=16 then Vu[0X1]=Xu[ww[0x6]];Bu=Bu+0X0001;Bu=Bu+0X1;do Bu=Bu+1;end;qu=1;Vu[qu]=Vu[qu]();Bu=Bu+1;do Bu=Bu+0X1;end;ww=TG[Bu];Bu=Bu+1;(Vu)[2]=Xu[ww[6]];ww=TG[Bu];Bu=Bu+1;do Vu[3]=ww[0X00006];end;Bu=Bu+1;local qf=cG[1];local gf=(0X02);Vu[gf]=Vu[gf](Vu[gf+1]);qu=gf;ww=TG[Bu];do Bu=Bu+0X01;end;Vu[0X2]=Vu[0X02][ww[1]];Bu=Bu+0X1;Bu=Bu+0X01;do Bu=Bu+0X1;end;do qf[1][qf[0X00002]]=Vu[2];end;do Bu=Bu+1;end;qf=cG[0X0];(qf[0x001])[qf[0x2]]=Vu[0X0001];do ww=TG[Bu];end;Bu=Bu+1;do Bu=ww[5];end;else end;else do for xL=ww[0X2],ww[0x5]do Vu[xL]=nil;end;end;end;end;end;end;else if not(tw>=0xA)then if tw~=0X00009 then Vu[0X1]=Xu[ww[0x06]];ww=TG[Bu];Bu=Bu+1;local xR=0x001;Vu[2]=ww[0X0006];ww=TG[Bu];Bu=Bu+0x01;(Vu)[3]=ww[6];Bu=Bu+0X01;Vu[xR](Vu[xR+1],Vu[xR+2]);qu=xR-0X1;ww=TG[Bu];do Bu=Bu+1;end;Bu=ww[5];else do Bu=ww[5];end;end;else if tw~=11 then Vu[1]=Xu[ww[6]];Bu=Bu+0X1;Bu=Bu+0X1;ww=TG[Bu];do Bu=Bu+1;end;(Vu)[2]=Vu[0x0][ww[0X01]];Bu=Bu+0x0001;Bu=Bu+1;local Dd=1;ww=TG[Bu];do Bu=Bu+1;end;do(Vu)[0X002]=Vu[2][ww[0x001]];end;ww=TG[Bu];Bu=Bu+0X001;Vu[0x2]=Vu[0x2][ww[1]];do Bu=Bu+1;end;Bu=Bu+1;Bu=Bu+1;do(Vu)[Dd]=Vu[Dd](Vu[Dd+1]);end;qu=Dd;ww=TG[Bu];Bu=Bu+1;if not(not(ww[6]<Vu[0X001]))then else Bu=ww[2];end;else Vu[ww[2]]=Xu[ww[0X006]];end;end;end;end;end;end);if Mu then do if nu then if Su==0X00001 then do return Vu[du]();end;else return Vu[du](V(Vu,du+0X1,qu));end;elseif du then return V(Vu,du,Su);end;end;else if C(nu)=="\115tri\110\g"then if M(nu,"a\116t\em\p\116\032\116o yi\e\l\100\032\097\099ro\s\s\032\109\e\116\097\109\e\116h\o\d\/C\037\-\c\097l\108 b\oun\100ar\121")then return coroutine.yield();end;do if M(nu,"^\.\-\:\%\100+\058\032")then E("\L\117r\097\p\104\ \S\cr\105\p\116:"..(YG[Bu-1]or"(\105\110t\er\110a\l\041")..': '..x(nu),0X0);else E(nu,0X0000);end;end;else E(nu,0);end;end;end;end;else hG=function(...)local Gr=(0X1);local nr={};local Xr=({[0X0002]=nr,[0X1]=FG});local ir=0;local gr=(I());local Mr,Cr=Cd(...);Mr=Mr-1;for n4=0X0,Mr do do if IG>n4 then do(nr)[n4]=Cr[n4+1];end;else do break;end;end;end;end;local cr=(gr==a and SG or gr);if not OG then Cr=nil;elseif zG then(nr)[IG]={n=Mr>=IG and Mr-IG+0X1 or 0x0,V(Cr,IG+0X01,Mr+1)};end;do if cr==gr then else R(hG,cr);end;end;local br,Kr,Vr,Zr=A(function()do while true do local Dd=TG[Gr];local Dr=Dd[0x3];Gr=Gr+1;if not(Dr>=0X7)then do if Dr<3 then if Dr>=1 then do if Dr==2 then if not nr[Dd[0X2]]then Gr=Dd[5];end;else repeat local ZP,FP=iG,(nr);if#ZP>0 then local J2={};do for xk,qk in l,ZP do for Na,ua in l,qk do do if ua[0X1]==FP and ua[0X2]>=0 then local nx=ua[2];if not J2[nx]then J2[nx]={FP[nx]};end;ua[0x1]=J2[nx];ua[0X00002]=0X001;end;end;end;end;end;end;until true;local kL=Dd[0x0002];return false,kL,kL+Dd[5]-0x2;end;end;else(nr)[Dd[2]]={V({},1,Dd[5])};end;else if not(Dr>=5)then if Dr==4 then nr[Dd[2]]=not nr[Dd[5]];else local wz=nil;local Zz=(JG[Dd[5]]);local Tz=(Zz[4]);local Cz=#Tz;if Cz>0 then wz={};do for i5=1,Cz do local L5=Tz[i5];if L5[1]~=0X00000 then(wz)[i5-0X1]=cG[L5[2]];else(wz)[i5-1]={nr,L5[2]};end;end;end;H(iG,wz);end;do nr[Dd[0x00002]]=ed(cr,Zz,wz);end;end;else if Dr==6 then do(nr)[Dd[2]]=Xr[Dd[5]];end;else nr[Dd[2]]=cr[Dd[0X06]];end;end;end;end;else if not(Dr<10)then if not(Dr<12)then if Dr~=13 then else nr[Dd[0X002]]=Dd[6];end;else do if Dr~=11 then repeat local zZ,NZ=iG,(nr);do if not(#zZ>0X0)then else local NY=({});for IO,sO in l,zZ do for yL,TL in l,sO do if TL[0X1]==NZ and TL[0X2]>=0 then local z7=TL[0X2];do if not NY[z7]then do NY[z7]={NZ[z7]};end;end;end;do TL[1]=NY[z7];end;TL[2]=1;end;end;end;end;end;until true;local jc=Dd[2];return false,jc,jc;else do repeat local M1,w1=iG,nr;do if#M1>0 then local Lc={};for sz,yz in l,M1 do for IC,NC in l,yz do if not(NC[1]==w1 and NC[0x2]>=0)then else local Hk=NC[0X2];do if not(not Lc[Hk])then else(Lc)[Hk]={w1[Hk]};end;end;NC[0X1]=Lc[Hk];(NC)[2]=1;end;end;end;end;end;until true;end;return;end;end;end;else if not(Dr<0X0008)then do if Dr==9 then repeat local PJ,VJ,BJ=iG,nr,(Dd[2]);if not(#PJ>0)then else local Hr=({});for h9,d9 in l,PJ do for O4,F4 in l,d9 do if not(F4[0X01]==VJ and F4[2]>=BJ)then else local tG=F4[2];if not Hr[tG]then do Hr[tG]={VJ[tG]};end;end;do F4[1]=Hr[tG];end;F4[0x2]=0x1;end;end;end;end;until true;else Gr=Dd[0X5];end;end;else nr[0x0]=cr[Dd[0X00006]];Gr=Gr+1;Gr=Gr+0X1;Dd=TG[Gr];local Ul=0;Gr=Gr+0X1;local Sl=(nr[0X0]);(nr)[Ul+1]=Sl;(nr)[Ul]=Sl[Dd[1]];Dd=TG[Gr];do Gr=Gr+0x1;end;do(nr)[0X02]=Dd[6];end;Gr=Gr+0x00001;Ul=0;nr[Ul]=nr[Ul](nr[Ul+0X1],nr[Ul+0X2]);ir=Ul;do Dd=TG[Gr];end;Gr=Gr+0X1;do Gr=Dd[0x05];end;end;end;end;end;end;end);if br then if Kr then if Zr==1 then return nr[Vr]();else return nr[Vr](V(nr,Vr+0X1,ir));end;elseif Vr then do return V(nr,Vr,Zr);end;end;else if C(Kr)=="string"then do if not(M(Kr,"\097t\116\101\m\112\116\ \116\o \y\iel\100\ a\cr\o\s\s \me\116\097m\eth\o\d\047\C%\045\ca\108\108\ b\111un\dary"))then else return coroutine.yield();end;end;if M(Kr,'^\.\045\058\037\100\+\:\ ')then(E)('\Lu\114a\p\104\032\S\c\114\i\112\116\:'..(YG[Gr-1]or"(internal)")..": "..x(Kr),0X0);else E(Kr,0);end;else E(Kr,0);end;end;end;end;end;end;end;else if lG>=0X2 then if lG==0X3 then hG=function(...)local KM=0x0;local dM,iM=0X1,({});local UM={[0X0002]=iM,[0X1]=FG};local CM=I();local zM=((CM==a and SG or CM));local IM,qM=Cd(...);IM=IM-1;for t8=0,IM do if not(IG>t8)then break;else iM[t8]=qM[t8+0X00001];end;end;if not OG then qM=nil;elseif not(zG)then else do iM[IG]={n=IM>=IG and IM-IG+0X01 or 0X000,V(qM,IG+0X01,IM+1)};end;end;if zM==CM then else(R)(hG,zM);end;local XM,FM,MM,sM=A(function()while true do local mi=TG[dM];local fi=(mi[0X03]);do dM=dM+0X1;end;if not(fi>=11)then if fi>=5 then do if fi>=8 then do if not(fi<9)then if fi==0X0000a then local UF=iM[mi[0x05]]/iM[mi[0X04]];iM[mi[2]]=UF-UF%0x0001;else do iM[0X4]=zM[mi[6]];end;dM=dM+0X1;do(iM)[0x5]=iM[0x00000];end;do mi=TG[dM];end;do dM=dM+1;end;(iM)[6]=iM[1][mi[1]];do dM=dM+0X001;end;do dM=dM+1;end;dM=dM+0X00001;local t9=(0X4);iM[0X0007]=true;dM=dM+1;KM=t9+4-0X1;do(iM)[t9]=iM[t9](V(iM,t9+0x00001,KM));end;do KM=t9;end;mi=TG[dM];dM=dM+1;iM[0X005]=iM[1][mi[0X1]];dM=dM+0X01;do dM=dM+1;end;mi=TG[dM];dM=dM+1;iM[5]=iM[0X00005][mi[0X1]];dM=dM+0X00001;dM=dM+0x001;mi=TG[dM];do dM=dM+1;end;iM[0X5]=iM[0X5][mi[0X1]];do mi=TG[dM];end;dM=dM+1;(iM)[0X00005]=iM[0X5]/mi[1];do mi=TG[dM];end;dM=dM+1;iM[5]=iM[0X5]+mi[0X1];mi=TG[dM];do dM=dM+1;end;if not(iM[4]<=iM[5])then dM=mi[2];end;end;else do repeat local ZZ,IZ=iG,(iM);do if#ZZ>0x0 then local PL=({});for Qy,uy in l,ZZ do for hH,YH in l,uy do if YH[1]==IZ and YH[0X2]>=0x0 then local yu=(YH[2]);do if not(not PL[yu])then else PL[yu]={IZ[yu]};end;end;do(YH)[0X1]=PL[yu];end;(YH)[2]=1;end;end;end;end;end;until true;end;local p3=(mi[2]);return false,p3,p3;end;end;else if not(fi>=0X06)then do iM[mi[0X2]]={V({},1,mi[5])};end;else do if fi==7 then do if not iM[mi[2]]then dM=mi[0X5];end;end;else local rz=mi[0X2];local Yz,oz,Xz=iM[rz]();if Yz then do(iM)[rz+0X00001]=oz;end;(iM)[rz+2]=Xz;dM=mi[0x5];end;end;end;end;end;end;else if fi>=2 then if not(fi<0x3)then if fi~=4 then local BM=mi[0X5];local lM=(iM[BM]);for Hw=BM+0x1,mi[0x4]do lM=lM..iM[Hw];end;(iM)[mi[0X002]]=lM;else do repeat local k_,P_=iG,(iM);do if#k_>0 then local O9=({});for hi,bi in l,k_ do for Gx,Tx in l,bi do if Tx[1]==P_ and Tx[0X2]>=0 then local BZ=(Tx[0x2]);if not(not O9[BZ])then else do O9[BZ]={P_[BZ]};end;end;Tx[0X00001]=O9[BZ];Tx[2]=1;end;end;end;end;end;until true;end;return;end;else do(iM)[mi[2]]=zM[mi[0X0006]];end;end;else if fi==0x001 then local VA=mi[0X02];local wA=(mi[5]);if wA==0X00 then else do KM=VA+wA-0X001;end;end;local OA,tA,dA=mi[4],nil,nil;do if wA==0X01 then tA,dA=Cd(iM[VA]());else tA,dA=Cd(iM[VA](V(iM,VA+0X001,KM)));end;end;if OA==0X1 then do KM=VA-1;end;else if OA==0 then do tA=tA+VA-0x0001;end;KM=tA;else tA=VA+OA-2;KM=tA+1;end;local DG=0X00000;for hJ=VA,tA do DG=DG+0x1;(iM)[hJ]=dA[DG];end;end;else local uW=(mi[0X02]);local bW=(h(function(...)t();for Dt,ut,Gt,zt,yt,pt,At,Kt,Yt,Wt in...do(t)(true,{Dt,ut,Gt,zt,yt,pt,At,Kt,Yt,Wt});end;end));(bW)(iM[uW],iM[uW+1],iM[uW+0X002]);KM=uW;iM[uW]=bW;dM=mi[5];end;end;end;else if fi>=16 then if not(fi>=0X13)then if not(fi>=0x11)then local Dd=(JG[mi[5]]);local b9=Dd[0X4];local W9,j9=#b9,(nil);if not(W9>0X0)then else j9={};for Fh=1,W9 do local gh=b9[Fh];if gh[1]==0X000 then do j9[Fh-0x1]={iM,gh[2]};end;else do j9[Fh-1]=cG[gh[0x2]];end;end;end;H(iG,j9);end;(iM)[mi[0x00002]]=ed(zM,Dd,j9);else if fi==0x00012 then iM[mi[2]]=iM[mi[0X5]];else(iM)[0X04]=zM[mi[6]];local aW=(5);dM=dM+0X1;dM=dM+0X01;mi=TG[dM];dM=dM+0X1;iM[0X5]=zM[mi[0X0006]];local uW=(2);mi=TG[dM];do dM=dM+0X1;end;local qW=(iM[0X0005]);(iM)[aW+0x00001]=qW;iM[aW]=qW[mi[1]];dM=dM+1;aW=5;local nW=(0);if uW==0 then else KM=aW+uW-0X1;end;local VW,IW=nil,nil;if uW==0X1 then VW,IW=Cd(iM[aW]());else do VW,IW=Cd(iM[aW](V(iM,aW+0x1,KM)));end;end;do if nW==1 then KM=aW-0X1;else do if nW==0 then VW=VW+aW-0X00001;do KM=VW;end;else do VW=aW+nW-2;end;KM=VW+0X01;end;end;local lR=(0);for Dd=aW,VW do lR=lR+1;iM[Dd]=IW[lR];end;end;end;dM=dM+0X0001;aW=0X00004;uW=0X0;nW=4;if uW~=0X000 then do KM=aW+uW-1;end;end;do VW,IW=nil;end;do if uW==1 then VW,IW=Cd(iM[aW]());else VW,IW=Cd(iM[aW](V(iM,aW+1,KM)));end;end;if nW~=0X01 then if nW~=0x0 then VW=aW+nW-0X02;KM=VW+0X1;else VW=VW+aW-0X1;KM=VW;end;local XW=0X00;for Ai=aW,VW do XW=XW+0X00001;iM[Ai]=IW[XW];end;else KM=aW-1;end;do mi=TG[dM];end;dM=dM+0X1;aW=0X004;local hW=h(function(...)t();for NC,iC in...do t(true,NC,iC);end;end);(hW)(iM[aW],iM[aW+1],iM[aW+0X0002]);KM=aW;do iM[aW]=hW;end;do dM=mi[5];end;end;end;else if not(fi>=0x14)then do iM[7]=iM[6][mi[0X00001]];end;mi=TG[dM];dM=dM+1;(iM)[7]=iM[7][mi[1]];dM=dM+1;dM=dM+0x1;mi=TG[dM];do dM=dM+0X1;end;iM[0x7]=iM[7][mi[1]];mi=TG[dM];dM=dM+1;do if not(iM[0x03]<iM[0X7])then do dM=mi[2];end;end;end;else do if fi~=0X15 then iM[mi[0x2]]=mi[6];else for zv=mi[2],mi[5]do iM[zv]=nil;end;end;end;end;end;else if not(fi<13)then if not(fi<14)then if fi~=15 then(iM)[0x7]=iM[0X6][mi[1]];dM=dM+0X1;dM=dM+0X00001;do mi=TG[dM];end;dM=dM+0X01;iM[7]=iM[0X07][mi[0X01]];mi=TG[dM];do dM=dM+0x1;end;iM[7]=iM[7][mi[0X00001]];dM=dM+1;do dM=dM+0X1;end;do dM=dM+1;end;iM[0X3]=iM[0x7];dM=dM+0X1;(iM)[7]=iM[0X6];do dM=dM+0X1;end;iM[2]=iM[0X7];mi=TG[dM];do dM=dM+1;end;dM=mi[5];else do dM=mi[5];end;end;else(iM)[0X7]=zM[mi[6]];dM=dM+0X1;dM=dM+1;dM=dM+0X1;iM[8]=iM[0X00];mi=TG[dM];local QB=0X007;dM=dM+0X1;iM[9]=iM[6][mi[1]];do dM=dM+1;end;iM[10]=true;dM=dM+1;KM=QB+0x4-1;iM[QB]=iM[QB](V(iM,QB+0X1,KM));KM=QB;dM=dM+0X1;dM=dM+0X0001;do mi=TG[dM];end;dM=dM+0X00001;do(iM)[8]=iM[6][mi[1]];end;dM=dM+1;dM=dM+0X1;do mi=TG[dM];end;dM=dM+0x001;(iM)[0x8]=iM[8][mi[0X1]];mi=TG[dM];dM=dM+0X1;iM[8]=iM[0X8][mi[1]];do dM=dM+1;end;do dM=dM+1;end;mi=TG[dM];dM=dM+1;do(iM)[8]=iM[0X8]/mi[0x01];end;mi=TG[dM];do dM=dM+1;end;iM[0x8]=iM[0x8]+mi[0X1];do mi=TG[dM];end;dM=dM+0X0001;if not(iM[7]<=iM[8])then dM=mi[0X2];end;end;else if fi~=0XC then iM[mi[0x2]]=iM[mi[0X5]]%iM[mi[4]];else end;end;end;end;end;end);if XM then do if FM then do if sM==1 then return iM[MM]();else do return iM[MM](V(iM,MM+0X1,KM));end;end;end;elseif MM then do return V(iM,MM,sM);end;end;end;else do if C(FM)~="string"then E(FM,0);else if not(M(FM,'\097t\116\e\109p\116\032\116o\ y\i\e\108d\ a\cro\115\s\032\m\etam\101tho\d\047\067\%\045\ca\ll b\o\117\110d\097\114y'))then else do return coroutine.yield();end;end;if M(FM,'\^\.-\:\%\d\043\:\ ')then(E)("Luraph Script:"..(YG[dM-1]or"(internal)")..": "..x(FM),0X0);else E(FM,0X00);end;end;end;end;end;else do hG=function(...)local q7,g7=1,({});local b7=(I());local r7=({[0X1]=FG,[0X0002]=g7});local U7,t7=Cd(...);U7=U7-1;for wp=0,U7 do do if IG>wp then do g7[wp]=t7[wp+0X01];end;else break;end;end;end;local x7=((b7==a and SG or b7));if not OG then t7=nil;elseif not(zG)then else(g7)[IG]={n=U7>=IG and U7-IG+1 or 0,V(t7,IG+0X1,U7+0X0001)};end;if x7~=b7 then(R)(hG,x7);end;local d7=0;while true do local LV=TG[q7];local nV=(LV[3]);q7=q7+1;return(function(l,Y,...)local a=l[0];if a==""then return"Fruitless";end;local h=string.match(a,"%-(.+)");if h then return h;end;return a;end)(g7,cG,...);end;end;end;end;else if lG==0X001 then hG=function(...)local x3=1;local A3={};local J3=(I());local P3=((J3==a and SG or J3));local k3={[0X0002]=A3,[0X1]=FG};local l3,s3=Cd(...);do l3=l3-1;end;for NF=0,l3 do if IG>NF then(A3)[NF]=s3[NF+1];else break;end;end;if not OG then s3=nil;elseif not(zG)then else do(A3)[IG]={n=l3>=IG and l3-IG+1 or 0,V(s3,IG+1,l3+1)};end;end;local f3=(0);do if P3~=J3 then R(hG,P3);end;end;local w3,b3,t3,g3=A(function()while true do local Er=TG[x3];local lr=Er[0X3];x3=x3+0X001;if not(lr<14)then if not(lr<0X15)then if not(lr>=24)then if lr>=22 then if lr==23 then for xZ=Er[2],Er[0X00005]do A3[xZ]=nil;end;else(A3)[0]=P3[Er[0x6]];x3=x3+0X1;do x3=x3+0X1;end;Er=TG[x3];x3=x3+0X1;do if not(A3[0X0])then else do x3=Er[0x0005];end;end;end;end;else A3[0X00000]=P3[Er[0x0006]];x3=x3+0X001;x3=x3+0X0001;Er=TG[x3];local nN=0;do x3=x3+1;end;do(A3)[0X0]=A3[0][Er[0x00001]];end;Er=TG[x3];x3=x3+0X1;(A3)[1]=Er[6];x3=x3+0X1;A3[nN]=A3[nN](A3[nN+0x01]);f3=nN;do Er=TG[x3];end;x3=x3+1;if not A3[0x0]then x3=Er[5];end;end;else if not(lr>=26)then if lr==25 then if not(A3[Er[5]]<A3[Er[0X0004]])then else x3=Er[2];end;else local Et=(cG[0]);do A3[0]=Et[0x1][Et[2]];end;local ct=A3[0X0];Er=TG[x3];x3=x3+0X01;local Zt=0X0;A3[Zt+1]=ct;A3[Zt]=ct[Er[1]];do x3=x3+0X1;end;Zt=0X0000;do A3[Zt]=A3[Zt](A3[Zt+1]);end;f3=Zt;do x3=x3+0X00001;end;do x3=x3+0X01;end;Er=TG[x3];x3=x3+0X1;do if not A3[0X0]then do x3=Er[0X005];end;end;end;end;else if lr~=27 then(A3)[0X0000]=P3[Er[0x006]];x3=x3+0x01;x3=x3+0X1;Er=TG[x3];x3=x3+0X1;do A3[0]=A3[0X00000][Er[0X1]];end;Er=TG[x3];x3=x3+1;do if not A3[0]then do x3=Er[5];end;end;end;else repeat local NK,ZK,EK=iG,A3,Er[2];if not(#NK>0X00000)then else local Lj=({});for dZ,jZ in l,NK do for jL,rL in l,jZ do if not(rL[1]==ZK and rL[2]>=EK)then else local Qr=rL[0X2];do if not Lj[Qr]then Lj[Qr]={ZK[Qr]};end;end;do rL[0X01]=Lj[Qr];end;(rL)[2]=0X00001;end;end;end;end;until true;end;end;end;else if lr>=17 then if lr<19 then if lr~=0x12 then(A3)[0]=P3[Er[0x6]];Er=TG[x3];local sH=0;x3=x3+0x0001;do A3[0X1]=Er[6];end;x3=x3+1;(A3[sH])(A3[sH+0x1]);f3=sH-1;Er=TG[x3];x3=x3+1;A3[0]=P3[Er[0x06]];x3=x3+0X1;f3=0;do A3[f3]=A3[f3]();end;x3=x3+1;x3=x3+1;Er=TG[x3];x3=x3+1;if not(not(Er[0x006]<=A3[0]))then else x3=Er[2];end;else repeat local MI,uI=iG,A3;if not(#MI>0)then else local MH={};do for fj,xj in l,MI do for tn,Xn in l,xj do if Xn[0X1]==uI and Xn[0X02]>=0x0 then local MM=(Xn[0X02]);if not MH[MM]then(MH)[MM]={uI[MM]};end;do(Xn)[0X1]=MH[MM];end;(Xn)[0X2]=0X1;end;end;end;end;end;until true;do return;end;end;else if lr~=20 then(A3)[0X0]=P3[Er[6]];x3=x3+0X0001;x3=x3+0X01;do Er=TG[x3];end;do x3=x3+1;end;A3[0X001]=Er[0x6];x3=x3+1;local Em=(0);A3[Em]=A3[Em](A3[Em+0X00001]);f3=Em;do x3=x3+0X001;end;do x3=x3+1;end;local sm=(nil);local Qm=2;Er=TG[x3];x3=x3+1;do A3[0X1]=P3[Er[0X6]];end;Er=TG[x3];x3=x3+1;local qm=JG[Er[0x5]];local vm=(qm[4]);local mm=#vm;if mm>0 then do sm={};end;for Ab=0X1,mm do local Nb=vm[Ab];if Nb[0X00001]~=0 then(sm)[Ab-0x001]=cG[Nb[2]];else(sm)[Ab-1]={A3,Nb[0X2]};end;end;H(iG,sm);end;A3[2]=ed(P3,qm,sm);x3=x3+1;Em=1;local Nm=0X03;if Qm~=0 then f3=Em+Qm-0X001;end;local Om,wm=nil,(nil);if Qm==1 then do Om,wm=Cd(A3[Em]());end;else Om,wm=Cd(A3[Em](V(A3,Em+0X01,f3)));end;if Nm~=0X1 then if Nm==0X0 then Om=Om+Em-1;f3=Om;else Om=Em+Nm-0X2;f3=Om+1;end;local jK=(0X0000);do for S2=Em,Om do jK=jK+0x00001;A3[S2]=wm[jK];end;end;else f3=Em-0X001;end;x3=x3+1;x3=x3+1;Er=TG[x3];do x3=x3+1;end;do if not(A3[1])then else x3=Er[5];end;end;else A3[0X000]=P3[Er[0X6]];x3=x3+1;x3=x3+1;x3=x3+1;f3=0;(A3)[f3]=A3[f3]();x3=x3+1;do x3=x3+1;end;Er=TG[x3];do x3=x3+1;end;if A3[0]then do x3=Er[0X5];end;end;end;end;else do if not(lr>=15)then do(A3)[0X0]=P3[Er[6]];end;x3=x3+1;x3=x3+1;Er=TG[x3];x3=x3+1;if not(A3[0X000])then else x3=Er[0X05];end;else if lr==0X10 then else A3[Er[0x0002]]=A3[Er[0X5]]+A3[Er[4]];end;end;end;end;end;else if lr<7 then if lr<3 then do if not(lr<0X00001)then do if lr==2 then A3[Er[0X002]]=A3[Er[5]]<A3[Er[0X4]];else A3[Er[0x2]]=A3[Er[0x5]]*A3[Er[4]];end;end;else(A3)[Er[2]]=Er[0X6];end;end;else if lr>=0X00005 then if lr~=0X6 then repeat local ab,ib=iG,(A3);do if not(#ab>0)then else local k1={};for yz,gz in l,ab do for Bg,Rg in l,gz do do if not(Rg[1]==ib and Rg[2]>=0)then else local vz=(Rg[0X2]);do if not(not k1[vz])then else(k1)[vz]={ib[vz]};end;end;Rg[1]=k1[vz];Rg[0X002]=0X1;end;end;end;end;end;end;until true;local iz=(Er[0x00002]);return false,iz,iz+Er[5]-0X2;else do A3[Er[0X00002]]=P3[Er[0X6]];end;end;else if lr~=4 then local Ep=cG[0X0];do(A3)[0x00]=Ep[1][Ep[2]];end;x3=x3+1;x3=x3+1;Er=TG[x3];x3=x3+1;local Qp,Cp=A3[0],0X0;do A3[Cp+1]=Qp;end;do(A3)[Cp]=Qp[Er[0X001]];end;x3=x3+0X1;Cp=0;A3[Cp](A3[Cp+0X1]);f3=Cp-1;do x3=x3+0X001;end;x3=x3+1;x3=x3+0x001;repeat local qw,Ww=iG,A3;if#qw>0X0 then local Wq=({});for px,Ux in l,qw do do for bF,cF in l,Ux do if cF[0x1]==Ww and cF[2]>=0X00000 then local F8=(cF[2]);if not(not Wq[F8])then else(Wq)[F8]={Ww[F8]};end;cF[0X1]=Wq[F8];cF[2]=0x1;end;end;end;end;end;until true;return;else(A3)[Er[0X2]]={V({},1,Er[5])};end;end;end;else if not(lr<0X000A)then if not(lr>=12)then if lr~=0XB then(A3)[0]=P3[Er[0X6]];x3=x3+0X01;x3=x3+1;do Er=TG[x3];end;do x3=x3+1;end;local C3=(0X000);A3[1]=Er[6];x3=x3+1;do(A3)[C3]=A3[C3](A3[C3+1]);end;f3=C3;x3=x3+0X01;do x3=x3+1;end;Er=TG[x3];x3=x3+1;A3[0x0]=A3[0][Er[1]];x3=x3+1;do x3=x3+0x1;end;Er=TG[x3];x3=x3+1;do if not(A3[0X0])then else x3=Er[5];end;end;else x3=Er[0X005];end;else do if lr~=13 then local QB=(Er[0x2]);local GB=(A3[QB]);local pB=A3[QB+1];local nB=A3[QB+2];(A3)[QB]=h(function()for Rh=GB,pB,nB do t(true,Rh);end;end);x3=Er[0X5];else local lq=(JG[Er[5]]);local gq=lq[4];local Hq=(nil);local sq=#gq;if not(sq>0X0)then else do Hq={};end;do for wT=0X0001,sq do local jT=(gq[wT]);if jT[0x1]==0 then(Hq)[wT-0X1]={A3,jT[2]};else do Hq[wT-0X00001]=cG[jT[2]];end;end;end;end;H(iG,Hq);end;do(A3)[Er[0X2]]=ed(P3,lq,Hq);end;end;end;end;else if lr<8 then do(A3)[3]=P3[Er[0x006]];end;Er=TG[x3];x3=x3+1;(A3)[4]=Er[6];local Vi=(4);Er=TG[x3];local Dd=5;x3=x3+0x01;A3[0X005]=P3[Er[0x0006]];x3=x3+1;do x3=x3+0X1;end;x3=x3+1;(A3)[0X6]=A3[2];x3=x3+1;(A3)[Dd]=A3[Dd](A3[Dd+0X1]);f3=Dd;x3=x3+0X001;x3=x3+0X001;x3=x3+1;do A3[0X4]=A3[Vi]..A3[Vi+1];end;do x3=x3+1;end;do Dd=0x003;end;A3[Dd](A3[Dd+0x1]);f3=Dd-0X1;x3=x3+1;x3=x3+1;Er=TG[x3];x3=x3+1;x3=Er[0x5];else if lr==9 then(A3)[0]=P3[Er[0X06]];Er=TG[x3];x3=x3+1;A3[0]=A3[0X000][Er[0X1]];Er=TG[x3];x3=x3+0x01;if not(not A3[0])then else x3=Er[0X005];end;else local DJ=(Er[0X2]);local cJ,pJ=A3[DJ]();if cJ then x3=Er[5];A3[DJ+0X3]=pJ;end;end;end;end;end;end;end;end);if w3 then if b3 then do if g3~=1 then return A3[t3](V(A3,t3+1,f3));else return A3[t3]();end;end;elseif t3 then return V(A3,t3,g3);end;else if C(b3)~="string"then E(b3,0X0);else if M(b3,'att\e\109\112t\032\116\o\032\yie\108\d\ a\099r\111\s\s\ \m\e\116a\m\et\104o\100\/\C\037\-ca\l\l\ bou\110d\097ry')then return coroutine.yield();end;if not(M(b3,"^.-:%d+: "))then(E)(b3,0);else E("Luraph Script:"..(YG[x3-1]or"\040\in\116\ern\097\108\041").."\058\ "..x(b3),0);end;end;end;end;else hG=function(...)local tZ,XZ=1,({});local VZ=(I());local xZ=(0);local IZ=({[0X0002]=XZ,[0X1]=FG});local LZ,OZ=Cd(...);LZ=LZ-0X1;local qZ=(VZ==a and SG or VZ);for LW=0x0,LZ do do if IG>LW then do(XZ)[LW]=OZ[LW+1];end;else break;end;end;end;if not OG then OZ=nil;elseif zG then XZ[IG]={n=LZ>=IG and LZ-IG+1 or 0,V(OZ,IG+1,LZ+1)};end;if qZ==VZ then else R(hG,qZ);end;local eZ,AZ,uZ,zZ=A(function()do while true do local pb=(TG[tZ]);local Eb=pb[3];tZ=tZ+0x1;if Eb<0Xa then if not(Eb>=0X00005)then if Eb<2 then if Eb~=0X1 then repeat local OM,fM,NM=iG,XZ,pb[2];if not(#OM>0)then else local qk={};for Ry,ky in l,OM do for GV,wV in l,ky do if not(wV[1]==fM and wV[2]>=NM)then else local CX=(wV[2]);if not(not qk[CX])then else do(qk)[CX]={fM[CX]};end;end;(wV)[0x1]=qk[CX];(wV)[2]=0X1;end;end;end;end;until true;else XZ[pb[0X2]]=qZ[pb[6]];end;else if not(Eb>=0x00003)then repeat local tB,RB=iG,XZ;do if not(#tB>0)then else local kO=({});do for wn,Un in l,tB do do for zD,XD in l,Un do do if XD[1]==RB and XD[2]>=0 then local A1=(XD[2]);if not kO[A1]then do(kO)[A1]={RB[A1]};end;end;(XD)[0X1]=kO[A1];(XD)[2]=0X1;end;end;end;end;end;end;end;end;until true;local jh=(pb[2]);do return false,jh,jh+pb[0X005]-2;end;else if Eb~=4 then local wP=(pb[2]);local YP,xP=XZ[wP]();do if YP then do tZ=pb[5];end;(XZ)[wP+3]=xP;end;end;else(XZ)[1]=qZ[pb[6]];tZ=tZ+0x00001;xZ=1;local wT=(cG[0X0001]);do XZ[xZ]=XZ[xZ]();end;tZ=tZ+1;wT[0X1][wT[0X2]]=XZ[1];tZ=tZ+1;wT=cG[0x2];(XZ)[1]=wT[1][wT[0X002]];do pb=TG[tZ];end;tZ=tZ+0X1;XZ[0X1]=XZ[1]+pb[0X1];tZ=tZ+1;do wT=cG[2];end;(wT[0X1])[wT[2]]=XZ[1];tZ=tZ+0X1;wT=cG[0X2];XZ[0X1]=wT[0X001][wT[0X2]];do pb=TG[tZ];end;tZ=tZ+1;XZ[2]=qZ[pb[6]];do tZ=tZ+1;end;XZ[2]=#XZ[0x2];do pb=TG[tZ];end;do tZ=tZ+0X01;end;do if not(XZ[2]<XZ[0X1])then tZ=pb[0X002];end;end;end;end;end;else if Eb>=0X7 then if Eb>=8 then do if Eb==0X9 then if not(not XZ[pb[0x2]])then else tZ=pb[5];end;else do(XZ)[1]=true;end;pb=TG[tZ];tZ=tZ+1;do qZ[pb[0X00006]]=XZ[0X1];end;pb=TG[tZ];tZ=tZ+1;XZ[1]=qZ[pb[0x6]];local pQ=(XZ[1]);pb=TG[tZ];tZ=tZ+1;local hQ=1;(XZ)[hQ+1]=pQ;(XZ)[hQ]=pQ[pb[1]];pb=TG[tZ];tZ=tZ+0X1;(XZ)[3]=pb[6];do tZ=tZ+0X1;end;hQ=0x0001;(XZ)[hQ]=XZ[hQ](XZ[hQ+1],XZ[hQ+0X2]);xZ=hQ;do pb=TG[tZ];end;tZ=tZ+1;if not XZ[0X1]then tZ=pb[5];end;end;end;else do(XZ)[0X1]=false;end;pb=TG[tZ];tZ=tZ+1;qZ[pb[0X0006]]=XZ[1];do tZ=tZ+1;end;repeat local Un,Vn=iG,(XZ);do if not(#Un>0X0)then else local ka={};for zA,dA in l,Un do for y2,P2 in l,dA do if not(P2[0X1]==Vn and P2[2]>=0X00)then else local Ce=(P2[2]);do if not(not ka[Ce])then else(ka)[Ce]={Vn[Ce]};end;end;do P2[0X00001]=ka[Ce];end;P2[0X002]=1;end;end;end;end;end;until true;return;end;else do if Eb~=6 then XZ[pb[2]]={V({},0x1,pb[0x05])};else XZ[0x1]=qZ[pb[0X0006]];do tZ=tZ+1;end;tZ=tZ+0X001;pb=TG[tZ];local H8=0X00001;tZ=tZ+0X1;XZ[0X02]=pb[6];tZ=tZ+0x1;(XZ[H8])(XZ[H8+1]);do xZ=H8-1;end;pb=TG[tZ];do tZ=tZ+1;end;do tZ=pb[0X5];end;end;end;end;end;else do if Eb<15 then if Eb<12 then if Eb~=11 then else if XZ[pb[0X05]]==XZ[pb[4]]then tZ=pb[2];end;end;else do if Eb<13 then if XZ[pb[0x0005]]==XZ[pb[4]]then else do tZ=pb[2];end;end;else if Eb~=14 then(XZ)[1]=pb[6];tZ=tZ+1;local ss=(cG[0x00002]);ss[1][ss[2]]=XZ[1];pb=TG[tZ];do tZ=tZ+0X1;end;tZ=pb[0X5];else(XZ)[pb[2]]=pb[6];end;end;end;end;else if Eb>=18 then if Eb<19 then qZ[pb[0X6]]=XZ[pb[2]];else if Eb~=0X14 then local VG=(JG[pb[0X0005]]);local rG=(VG[0X4]);local xG=(nil);local aG=(#rG);if not(aG>0X0)then else do xG={};end;for lC=1,aG do local zC=rG[lC];if zC[0x00001]==0X0 then do(xG)[lC-0x1]={XZ,zC[0x0002]};end;else(xG)[lC-1]=cG[zC[0X0002]];end;end;H(iG,xG);end;(XZ)[pb[0X0002]]=ed(qZ,VG,xG);else do(XZ)[0X00001]=qZ[pb[6]];end;pb=TG[tZ];tZ=tZ+0x1;local Qn,rn=2,0;XZ[2]=qZ[pb[6]];pb=TG[tZ];tZ=tZ+0X1;(XZ)[3]=qZ[pb[0X006]];tZ=tZ+1;do tZ=tZ+0X1;end;pb=TG[tZ];tZ=tZ+1;do XZ[0X3]=XZ[3][pb[0x1]];end;do tZ=tZ+1;end;tZ=tZ+1;do tZ=tZ+1;end;local Rn=(2);do if Rn==0X0 then else xZ=Qn+Rn-0X1;end;end;local Vn,Yn=nil,(nil);if Rn~=1 then Vn,Yn=Cd(XZ[Qn](V(XZ,Qn+1,xZ)));else Vn,Yn=Cd(XZ[Qn]());end;if rn~=1 then do if rn~=0 then Vn=Qn+rn-2;xZ=Vn+0X01;else Vn=Vn+Qn-0x1;xZ=Vn;end;end;local wq=(0);for KW=Qn,Vn do wq=wq+1;do(XZ)[KW]=Yn[wq];end;end;else xZ=Qn-1;end;tZ=tZ+1;Qn=0x1;XZ[Qn](V(XZ,Qn+1,xZ));xZ=Qn-1;pb=TG[tZ];tZ=tZ+1;do(XZ)[0x1]=qZ[pb[0X6]];end;tZ=tZ+0X1;do xZ=1;end;(XZ[xZ])();xZ=xZ-1;pb=TG[tZ];do tZ=tZ+0x1;end;do(XZ)[1]=qZ[pb[6]];end;tZ=tZ+0X1;tZ=tZ+0X1;pb=TG[tZ];tZ=tZ+1;(XZ)[0X01]=XZ[0X1][pb[1]];tZ=tZ+0X1;xZ=0X1;XZ[xZ]();do xZ=xZ-0x01;end;do tZ=tZ+0x1;end;tZ=tZ+0X1;tZ=tZ+0x1;do XZ[1]=XZ[0];end;tZ=tZ+1;xZ=0x1;do XZ[xZ]=XZ[xZ]();end;tZ=tZ+0X1;tZ=tZ+1;do pb=TG[tZ];end;tZ=tZ+1;if not XZ[1]then tZ=pb[5];end;end;end;else if Eb<16 then do XZ[1]=qZ[pb[6]];end;pb=TG[tZ];tZ=tZ+0X00001;(XZ)[2]=qZ[pb[6]];pb=TG[tZ];tZ=tZ+0x1;XZ[2]=XZ[0X02][pb[1]];local JO=cG[0];tZ=tZ+1;do tZ=tZ+0X01;end;do tZ=tZ+1;end;(XZ)[0X3]=JO[1][JO[0X0002]];tZ=tZ+1;tZ=tZ+0X01;do pb=TG[tZ];end;tZ=tZ+0X1;do(XZ)[3]=XZ[3][pb[0x1]];end;do tZ=tZ+0x0001;end;tZ=tZ+1;pb=TG[tZ];do tZ=tZ+0x00001;end;(XZ)[0X03]=XZ[3][pb[0X0001]];pb=TG[tZ];tZ=tZ+1;XZ[0X04]=qZ[pb[6]];local tO=5;pb=TG[tZ];tZ=tZ+1;do XZ[4]=XZ[0X4][pb[0X1]];end;pb=TG[tZ];tZ=tZ+0X1;do XZ[0x5]=qZ[pb[6]];end;pb=TG[tZ];do tZ=tZ+1;end;(XZ)[5]=XZ[0X5][pb[0X0001]];tZ=tZ+1;tZ=tZ+1;pb=TG[tZ];tZ=tZ+1;(XZ)[0X006]=pb[6];do pb=TG[tZ];end;do tZ=tZ+0x0001;end;XZ[0X7]=pb[0X0006];tZ=tZ+0x01;XZ[tO]=XZ[tO](XZ[tO+0X1],XZ[tO+2]);do xZ=tO;end;do pb=TG[tZ];end;do tZ=tZ+0X01;end;(XZ)[6]=qZ[pb[0X6]];pb=TG[tZ];tZ=tZ+1;do XZ[6]=XZ[0X006][pb[0x1]];end;pb=TG[tZ];tZ=tZ+1;(XZ)[0X00007]=pb[6];do pb=TG[tZ];end;tZ=tZ+1;do(XZ)[8]=pb[6];end;do tZ=tZ+1;end;tO=0X6;(XZ)[tO]=XZ[tO](XZ[tO+0X1],XZ[tO+0X2]);xZ=tO;pb=TG[tZ];do tZ=tZ+0X1;end;(XZ)[6]=XZ[6]/pb[0X0001];pb=TG[tZ];tZ=tZ+1;do XZ[0X007]=qZ[pb[6]];end;local DO=(0X3);tZ=tZ+0X1;do tZ=tZ+0X0001;end;do pb=TG[tZ];end;tZ=tZ+0X1;(XZ)[7]=XZ[7][pb[1]];tZ=tZ+1;tZ=tZ+0X1;do pb=TG[tZ];end;do tZ=tZ+0X1;end;XZ[8]=pb[6];do pb=TG[tZ];end;do tZ=tZ+0X00001;end;XZ[0X09]=pb[6];do tZ=tZ+1;end;do tO=7;end;local aO=0;if DO==0x0 then else xZ=tO+DO-0X1;end;local vO,nO=nil,(nil);do if DO==1 then vO,nO=Cd(XZ[tO]());else vO,nO=Cd(XZ[tO](V(XZ,tO+1,xZ)));end;end;if aO~=1 then if aO~=0 then vO=tO+aO-2;xZ=vO+1;else do vO=vO+tO-0x00001;end;xZ=vO;end;local CY=(0x000);for Ql=tO,vO do CY=CY+0X1;do XZ[Ql]=nO[CY];end;end;else xZ=tO-1;end;tZ=tZ+0X01;tZ=tZ+0X0001;tZ=tZ+1;do tO=4;end;do(XZ)[tO]=XZ[tO](V(XZ,tO+1,xZ));end;xZ=tO;tZ=tZ+0X1;XZ[0x0003]=XZ[3]+XZ[0X4];do tZ=tZ+0X1;end;tO=0x2;(XZ)[tO]=XZ[tO](XZ[tO+1]);do xZ=tO;end;pb=TG[tZ];local ZO=(JG[pb[5]]);tZ=tZ+1;local gO,IO=nil,(ZO[4]);local OO=#IO;if OO>0X0 then gO={};do for PX=1,OO do local JX=(IO[PX]);if JX[1]~=0X0 then(gO)[PX-1]=cG[JX[0x0002]];else gO[PX-0X1]={XZ,JX[2]};end;end;end;H(iG,gO);end;XZ[3]=ed(qZ,ZO,gO);tZ=tZ+0x1;do tO=0X1;end;XZ[tO](XZ[tO+0x0001],XZ[tO+2]);do xZ=tO-0X1;end;pb=TG[tZ];do tZ=tZ+0X1;end;XZ[0X01]=qZ[pb[0x06]];tZ=tZ+0X1;xZ=0X00001;(XZ)[xZ]=XZ[xZ]();do tZ=tZ+0X1;end;JO=cG[1];(XZ)[2]=JO[0x1][JO[0X2]];tZ=tZ+1;XZ[1]=XZ[0x1]-XZ[2];pb=TG[tZ];tZ=tZ+0X1;if not(not(pb[0X6]<XZ[1]))then else tZ=pb[0X00002];end;else if Eb~=17 then tZ=pb[5];else for ot=pb[2],pb[5]do(XZ)[ot]=nil;end;end;end;end;end;end;end;end;end;end);if not(eZ)then if C(AZ)=="string"then do if not(M(AZ,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if M(AZ,"\094\046\045\:\%\100\+\:\ ")then E('\L\117ra\p\h\ S\cri\pt\058'..(YG[tZ-0x1]or'\040\105n\116\er\110a\l\)')..": "..x(AZ),0);else E(AZ,0X0);end;else E(AZ,0x0);end;else do if AZ then do if zZ==1 then return XZ[uZ]();else do return XZ[uZ](V(XZ,uZ+1,xZ));end;end;end;elseif not(uZ)then else do return V(XZ,uZ,zZ);end;end;end;end;end;end;end;end;end;end;end;end;(R)(hG,SG);return hG;end;local function dd()local sR=nil;for UE=0,0X1 do if UE==0X0 then else sR={{},nil,{},qd,{},nil,nil,nil,qd};continue;end;end;local rR=(nil);for PK=0X0,0X1 do if PK~=0 then sR[0X7]=yd();else rR={};continue;end;end;local mR,hR,HR,IR=nil,nil,nil,(nil);local BR=(sR[0X01]);for R5=0X0,0x00009 do if not(R5<=4)then if not(R5<=6)then do if R5<=7 then(sR)[10]=u();else if R5~=8 then(sR)[wd]=j();else IR={};end;end;end;elseif R5~=5 then do(sR)[0Xb]=j();end;continue;else(sR)[0x8]=P(HR,0X2,0x1)~=0;end;else if R5<=1 then if R5==0 then mR=0x1;else hR=u()-Jd;end;else do if not(R5<=2)then if R5==0X0003 then HR=j();continue;else(sR)[9]=P(HR,0X1,0X1)~=0;do continue;end;end;else for hU=0X0001,hR do BR[hU]={[0x0006]=false,[0X04]=-0x18F45a81,[td]=od(),[0X4]=-0X69b9A255,[id]=0.4434542048329331,[0X7]=cd,[0x01]=j(),[Nd]=od(),[ud]=j(),[7]=j(),[5]=od(),[0X3]=yd()};end;continue;end;end;end;end;end;(sR)[0x000011]=j();do sR[6]=yd();end;local SR,OR=0X0,nil;do while SR<=1 do do if SR~=0X00000 then sR[4]=IR;SR=2;continue;else OR={};do SR=1;end;end;end;end;end;SR=0X0;local PR=nil;while true do do if SR==0X00 then do for MX=1,yd()do IR[MX]={j(),yd()};end;end;SR=1;continue;else PR=u()-bd;break;end;end;end;local YR=j();local XR=(j()~=0X00000);do for WZ=1,PR do local yZ=j();local AZ,KZ=nil,(0x0002);local pZ=(nil);while KZ~=0x6 do if not(KZ<=2)then do if KZ<=0X3 then do if not(XR)then else local P7=(0);while P7~=2 do if P7~=0X00000 then Ed=Ed+0X01;P7=2;do continue;end;else xd[Ed]=pZ;P7=1;end;end;end;end;KZ=6;else if KZ~=4 then pZ={AZ,{}};do KZ=4;end;do continue;end;else rR[mR]=pZ;KZ=0X1;do continue;end;end;end;end;elseif not(KZ<=0)then if KZ~=0X1 then OR[WZ-1]=mR;KZ=0X0;else mR=mR+0X0001;KZ=0X3;continue;end;else if yZ==86 then do AZ=u();end;elseif yZ==0XAe then AZ=e(nd(YR),16);elseif yZ==237 then AZ=c();elseif yZ==78 then AZ=e(nd(YR),j());elseif yZ==104 then AZ=e(nd(YR),6);elseif yZ==114 then AZ=J();elseif yZ==0XA7 then do AZ=J();end;elseif yZ==70 then AZ=fd;elseif yZ==Td then do AZ=u();end;elseif yZ==Ld then AZ=e(nd(YR),u());elseif yZ==195 then AZ=jd;end;KZ=0X5;end;end;end;end;SR=0;local tR=nil;do repeat if SR==0 then for E7=0X1,hR do local p7,W7=1,(nil);do while p7<0X2 do if p7==0X0 then for DP,rP in kd(k)do local iP,yP,TP=0,nil,nil;repeat if iP~=0X00 then TP=W7[yP];do iP=2;end;else yP=D[rP];iP=0X1;do continue;end;end;until iP>1;if TP==0Xb then local kX,LX=nil,nil;do for vq=0,0X2 do if vq<=0 then kX=OR[W7[rP]];else do if vq~=0X1 then if LX then local Yz,Bz=0X000,nil;do while true do if Yz==0 then do(W7)[yP]=LX[0x001];end;Yz=1;continue;else Bz=LX[2];break;end;end;end;(Bz)[#Bz+1]={W7,yP};end;else LX=rR[kX];end;end;end;end;end;else if TP==0XE then do W7[rP]=E7+W7[rP]+1;end;end;end;end;p7=2;else W7=sR[0X01][E7];p7=0X0;end;end;end;end;SR=0X01;else tR=u();SR=0X002;continue;end;until SR>=2;end;for c2=0,1 do if c2==0 then for vv=0x1,tR do local Pv=u();local Yv=u();local nv,Nv=0X01,(nil);do while"t\102"do if nv~=0 then Nv=u();nv=0X00;else for TA=Pv,Yv do(sR[5])[TA]=Nv;end;break;end;end;end;end;else(sR)[0X10]=u();do continue;end;end;end;(sR)[2]=yd();SR=0x0000;local LR=(nil);do repeat if SR~=0 then LR=u()-0X64fE;break;else(sR)[0X13]=j();SR=1;continue;end;until(false);end;local UR=sR[3];for Qy=0,LR-1 do(UR)[Qy]=dd();end;return sR;end;Zd=3;local md=(nil);repeat if Zd<=0X1 then if Zd==0X0000 then return ed(a,md,nil)(...);else(Xd)[2]=xd;do Zd=0X2;end;continue;end;else if Zd~=2 then md=dd();do Zd=0X01;end;else xd=qd;do Zd=0x00000;end;continue;end;end;until(false);end)(false,2,"#",0X1,-134531576,ipairs,65,207,'\062!\w\q\1186\#\E',string.match,0X9,7,nil,bit32.rshift,bit32.band,0x00014,0x6,type,"\050\057",0X18f4,next,setmetatable,string,0Xa1,true,coroutine,string.char,5,bit32,0X1046d,setfenv,coroutine.yield,string.rep,0xb,rawset,0X004,bit32.lshift,{7575,0x7A10307A,0XA4Ae3d35,3683276649,693020201,1108631390,0X007Af20443,2318639790,0X000D7Ac8Cbe},...);end;