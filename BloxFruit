return(function(I3,n3,W3,L3,A3,S3,t3,k3,y3,l3,xG,bG,M3,i3,w3,r3,h3,B3,H3,v3,s3,j3,R3,K3,T3,a3,Q3,Z3,d3,Y3,m3,P3,C3,N3,DG,o3,F3,E3,p3,J3,O3,D,...)local z,F,S=nil,nil,nil;local c,u=r3,tostring;local e=(S3);local b=select;local G=(n3);local gG=0X0;do repeat if not(gG<=0)then if gG==0X0001 then do S=O3;end;gG=0X3;else F=A3;do gG=1;end;end;else z=i3.gsub;gG=2;end;until gG>2;end;local R,U,A,M=F-0X0001,nil,nil,nil;local x=(assert);for Yn=0X0,0X2 do if not(Yn<=0)then if Yn~=0x00001 then M=P3;else A=M3;end;else U=string.byte;end;end;local g,B,E,P=tonumber,(bit or bit32),unpack or C3,(nil);for Rn=0,0X0001 do if Rn==0 then else do P=E3;end;end;end;local k,N,H=nil,nil,(nil);for qH=0,2 do do if not(qH<=0)then if qH==1 then N=1;else H=(k and k()or k3);end;else k=s3;end;end;end;gG=0x3;local W,f,t,h,m,p=nil,nil,nil,nil,nil,nil;while gG<8 do do if gG<=3 then if not(gG<=0x1)then if gG==2 then h={5,0X2,0X0004};gG=0;else gG=6;end;else if gG~=0X0 then p=function()local bw=nil;do for ki=0,2 do do if ki<=0 then bw=U(t,N,N);else if ki~=1 then return bw;else N=N+0X00001;end;end;end;end;end;end;gG=0X8;else gG=5;end;end;else if not(gG<=0X5)then if gG~=6 then t=N3;gG=0X2;else W=0X002^52;gG=0X4;end;elseif gG~=4 then t=z(G(t,5),Y3,function(CN)if U(CN,0X02)~=72 then local oM=(nil);local mM=(0X1);repeat if mM==0 then if not(m)then do return oM;end;else local g8=0X1;local p8=(nil);repeat if g8<=0X0000 then m=nil;g8=2;else if g8~=1 then return p8;else p8=f(oM,m);g8=0X000;end;end;until(false);end;mM=2;else oM=e(g(CN,0X00010));mM=0X0;end;until mM>=2;else do m=g(G(CN,0X1,1));end;do return"";end;end;end);gG=1;else f=H3;do gG=0X7;end;end;end;end;end;local O=(rawset);local d,L=nil,nil;for Pu=0,0x1 do do if Pu==0X0 then d=4294967296;else L=function()local CF,lF,QF,BF=nil,nil,nil,nil;local PF=2;while 0X792acE6a do do if not(PF<=0)then if PF==1 then do N=N+4;end;do PF=0;end;else CF,lF,QF,BF=U(t,N,N+0x3);PF=1;end;else do return BF*0X001000000+QF*0X00010000+lF*Z3+CF;end;end;end;end;end;end;end;end;local q=(error);local j=d-0X00001;gG=5;local q3,a,X3,I,l,y=nil,nil,nil,nil,nil,nil;while gG~=7 do if not(gG<=2)then if not(gG<=0X4)then if gG~=0x0005 then do local Bl=0;local fl=nil;while Bl<2 do if Bl==0 then fl=2;Bl=1;else do for VR=1,0x001F do local JR=0;while JR<=0X0001 do if JR==0 then do a[VR]=fl;end;JR=0X00001;else fl=fl*t3;JR=0X2;end;end;end;end;Bl=0X2;end;end;end;gG=0X4;else q3=function(...)return b("#",...),{...};end;do gG=0X00001;end;end;else if gG==3 then y=function()local Iw,sw,Pw,gw,jw,Uw=nil,nil,nil,nil,nil,nil;for kD=0,0X00008 do if not(kD<=0x3)then if not(kD<=5)then if kD<=6 then Uw=0x1;else do if kD~=7 then return Pw*(2^(gw-0X3Ff))*(jw/W+Uw);else if gw==0X0000 then if jw==m3 then return Pw*0x000;else do for mG=0,0X1 do if mG~=0X0 then Uw=0;else do gw=1;end;end;end;end;end;else if gw~=p3 then else if jw~=0 then return Pw*(1/0X00);else return Pw*(0X0/0X0);end;end;end;end;end;end;else do if kD~=0X0004 then jw=l(sw,0X0,0X000014)*d+Iw;else gw=l(sw,20,11);end;end;end;else if not(kD<=1)then if kD==2 then if Iw==0X0 and sw==0X0 then do return 0;end;end;else Pw=(-1)^l(sw,31,0x001);end;else do if kD~=0 then do sw=L();end;else do Iw=L();end;end;end;end;end;end;end;gG=7;else X3=0X0001;do gG=0X00000;end;end;end;else if gG<=0X00000 then I=function()local Vc,gc=L(),L();if gc>=F then do gc=gc-d;end;end;do return gc*d+Vc;end;end;gG=2;else if gG==1 then a={[0]=0X1};gG=0X6;else l=function(YE,bE,rE)local jE,gE=0X0,nil;do repeat if jE<=0 then do gE=(YE/a[bE])%a[rE];end;do jE=0x1;end;else if jE==1 then do gE=gE-gE%0X1;end;jE=2;else return gE;end;end;until false;end;end;gG=3;end;end;end;end;gG=0X1;local C,K=nil,nil;repeat if gG==0X0000 then K={[m3]={[0]=0,1,2,3,4,F3,6,0X7,0X8,0X9,10,0xb,0Xc,13,14,d3},{[0X0]=1,0,0X3,t3,5,4,W3,6,9,8,11,0Xa,0X0D,12,0xF,j3},{[0x0]=2,0X03,0,0X01,6,0X7,4,5,0X0A,11,8,9,0X0e,15,12,R3},{[0x0]=3,2,0X1,0,0x7,a3,F3,l3,0XB,I3,9,y3,15,14,0x00D,12},{[0]=4,F3,0X6,7,0X00000,0x1,2,0X3,12,0x0D,14,15,8,0X9,10,0xb},{[0X0]=0X05,4,0x07,6,0X001,0,3,2,13,12,15,14,0X00009,0X08,0xB,10},{[0X0]=a3,0X7,4,5,t3,K3,0,0X1,14,0XF,0X000c,13,0X0A,0X0b,y3,9},{[0X0]=7,0X6,5,4,3,0X0002,0X0001,0x00,0Xf,0x0000E,13,0XC,11,10,9,0X0008},{[0]=0X008,0X0009,0Xa,0X0000B,0xC,13,14,15,0X0000,1,2,3,4,F3,0x00006,7},{[0]=0X0009,8,11,10,0X0000D,0Xc,15,j3,B3,0,3,0X02,5,4,7,6},{[0]=10,w3,0x08,0x9,0XE,15,12,0x0D,2,0x3,m3,0X1,6,0X0007,0X4,0X005},{[0x0000]=0x00b,10,0X9,0X8,0X0000f,14,0Xd,12,3,0X2,0X0001,0,0x7,0X006,5,4},{[0]=0XC,0x0000d,j3,15,0X8,0X9,0xa,w3,0x4,5,0X6,7,0,0X0001,0X2,0x3},{[0X0]=0Xd,12,0X000f,0XE,9,0X8,0XB,10,0X00005,0X4,7,0X6,0X01,0,3,0X2},{[0]=14,15,J3,0X0000D,0XA,0X00B,0X0008,v3,0X06,7,4,5,0x2,0x3,0X0000,1},{[0]=15,0xE,13,12,11,0Xa,9,8,0X7,6,5,4,0x3,0X2,B3,0}};do break;end;else do C=L3;end;gG=0;end;until false;local w=B and B.bxor or function(Gp,Qp)do Gp=Gp%d;end;local bp,Up,cp=0,nil,(nil);repeat if not(bp<=1)then do if not(bp<=2)then if bp==3 then while Gp>0X0 and Qp>0X0 do local Oe=(Qp%0X10);local ae=(Gp%0X00010);do cp=cp+K[ae][Oe]*Up;end;local pe=0;repeat if pe==0X0 then do Gp=(Gp-ae)/0X10;end;pe=1;else do Qp=(Qp-Oe)/Q3;end;do pe=0x2;end;end;until pe==2;do Up=Up*16;end;end;bp=0x0001;else cp=0;bp=0X0003;end;else Qp=Qp%d;do bp=4;end;end;end;else do if bp~=0X000 then do return cp+Gp*Up+Qp*Up;end;else Up=0X00001;do bp=2;end;end;end;end;until(false);end;local J=(B and B[o3]or function(pR,IR)pR=pR%d;do IR=IR%d;end;return((pR+IR)-w(pR,IR))/0X02;end);local v=B and B.bor or function(eG,fG)do for jn=0,0X1 do if jn~=0 then fG=fG%d;else eG=eG%d;end;end;end;do return j-J(j-eG,j-fG);end;end;local Q=(B and B.bnot or function(M8)return j-(M8%d);end);do gG=0X4;end;local o,T,x3=nil,nil,(nil);repeat if gG<=1 then if gG~=0 then T=T or function(rF,gF)local kF,qF=0X1,nil;while(true)do do if not(kF<=1)then if kF~=2 then if gF<0 then return o(rF,-gF);end;kF=0X2;else qF=(rF%d/a[gF]);kF=0X00;end;else if kF==0 then do return qF-qF%1;end;else if gF>=32 then return 0X00000;end;do kF=3;end;end;end;end;end;end;gG=0;else x3=function()local jP,KP=0X00000,0;do while true do local LA=U(t,N,N);N=N+1;do KP=v(KP,o(J(LA,0X00007F),jP));end;if J(LA,128)==0X0 then return KP;end;jP=jP+0X7;end;end;end;gG=5;end;else if not(gG<=2)then if gG~=0X3 then o=B and B.lshift;gG=0X002;else do o=o or function(Of,jf)do if jf>=32 then return 0X0;end;end;local Zf=0X001;do while(true)do if Zf==0X000 then do return(Of*a[jf])%d;end;else if not(jf<0)then else return T(Of,-jf);end;Zf=0x0;end;end;end;end;end;gG=1;end;else T=B and B.rshift;gG=0X3;end;end;until gG==5;local D3,b3=nil,nil;for IZ=0,0x1 do if IZ==0X0 then D3={[5]=6,[W3]=9,[0X9]=B3,[6]=0X2,[7]=0x00000,[0X8]=6,[1]=0x1,[0X0004]=0X1,[2]=0X7,[0X9]=4,[1]=0X8};else b3=function()local kw=nil;do for AQ=0x0,2 do do if AQ<=0 then do kw=x3();end;else do if AQ==1 then if kw>R then return kw-d;end;else return kw;end;end;end;end;end;end;end;end;end;local g3=(p());local c3=p();gG=0;local s,V3=nil,nil;while gG~=2 do do if gG==0 then s=T3;gG=0X001;else do V3=function(Hh)local ih,Eh,yh,Wh=nil,nil,nil,(nil);local oh=(0);do while 0.9697265916467233 do if oh<=1 then if oh~=0 then yh=w(ih[2],c3);oh=2;else do ih={U(t,N,N+3)};end;oh=0X3;end;elseif oh~=2 then Eh=w(ih[1],c3);oh=1;else do Wh=w(ih[0x3],c3);end;break;end;end;end;local Yh=w(ih[0x04],c3);oh=0;do while"<"do do if not(oh<=0X0000)then do if oh==0X1 then do return Yh*0X001000000+Wh*65536+yh*256+Eh;end;else do N=N+0x004;end;do oh=1;end;end;end;else c3=(0X81*c3+Hh)%256;oh=0x2;end;end;end;end;end;end;do gG=2;end;end;end;end;local i=(setmetatable);gG=0X0;local G3,U3=nil,nil;do while gG~=0X2 do do if gG~=0x0 then do U3={};end;gG=2;else G3={};gG=0X1;end;end;end;end;local V=(type);do gG=2;end;local r,u3,e3,f3,z3=nil,nil,nil,nil,(nil);while true do if gG<=3 then do if gG<=0x0001 then do if gG~=0 then do(U3)[B3]=G3;end;gG=5;else function e3(Vc,jc,fc)local nc=Vc[7];local Sc=(Vc[0X002]);local Ac=Vc[0X9];local Qc=Vc[0X03];local Hc=(Vc[8]);local ac=(Vc[0x0004]);local bc,Uc=Vc[0x6],(Vc[1]);local Lc=(i({},{__mode="v"}));local ic=nil;if not(Sc>=126)then if Sc>=63 then if Sc>=94 then if Sc>=110 then if Sc<0X76 then if not(Sc<114)then if not(Sc<116)then if Sc==0X75 then ic=function(...)local Yw={};local gw=(0X0001);local lw=0;local Qw=((k and k()or _ENV));local fw={[1]=Yw,[2]=Vc};local ow,ww=q3(...);ow=ow-0x1;local ew=((Qw==H and fc or Qw));for GK=0X0,ow do if not(ac>GK)then do break;end;else Yw[GK]=ww[GK+0X00001];end;end;do if not nc then ww=nil;elseif not(Ac)then else Yw[ac]={n=ow>=ac and ow-ac+1 or 0,E(ww,ac+1,ow+0X1)};end;end;if ew~=Qw then do if s then(s)(ic,ew);else do _ENV=ew;end;end;end;end;local Sw,Nw,Iw,Tw=c(function()while true do local Gz=(bc[gw]);local tz=Gz[3];do gw=gw+0X1;end;if not(tz<6)then do if tz<9 then do if tz>=0x07 then if tz~=8 then for OO=Gz[2],Gz[0X5]do Yw[OO]=nil;end;else local Bw=Yw[Gz[0x05]]/Yw[Gz[0X00004]];(Yw)[Gz[0X2]]=Bw-Bw%1;end;else local nr=Uc[Gz[5]];local rr,Yr=nr[0X5],nil;local Xr=(#rr);if not(Xr>0)then else do Yr={};end;for bz=1,Xr do local Qz=(rr[bz]);do if Qz[1]==0x000 then do(Yr)[bz-1]={Yw,Qz[0X02]};end;else Yr[bz-0x1]=jc[Qz[0X02]];end;end;end;(S)(Lc,Yr);end;Yw[Gz[0x2]]=e3(nr,Yr,ew);end;end;else do if tz>=0XA then if tz==11 then(Yw)[Gz[2]]=ew[Gz[0X6]];else end;else if Yw[Gz[5]]<Yw[Gz[0x4]]then gw=Gz[2];end;end;end;end;end;else if tz<0X00003 then if not(tz>=1)then Yw[Gz[2]]=Gz[0X6];else if tz~=2 then do(Yw)[Gz[0X002]]=Yw[Gz[5]]>=Yw[Gz[0X4]];end;else do(Yw)[Gz[0X2]]={E({},0X1,Gz[0X5])};end;end;end;else if tz<0x4 then do gw=Gz[5];end;else if tz~=5 then(Yw)[Gz[0x02]]=Gz[6];else do(Yw)[0X0]=ew[Gz[0x0006]];end;do Gz=bc[gw];end;local Gn=(0);gw=gw+1;local Bn=Yw[0];do Yw[Gn+0X1]=Bn;end;do(Yw)[Gn]=Bn[Gz[1]];end;Gz=bc[gw];gw=gw+0X1;do(Yw)[0X00002]=Gz[0X00006];end;gw=gw+1;Gn=0x0;do(Yw)[Gn]=Yw[Gn](Yw[Gn+0X1],Yw[Gn+0X2]);end;lw=Gn;Gz=bc[gw];do gw=gw+0X1;end;do(Yw)[1]=ew[Gz[0X6]];end;do Gz=bc[gw];end;gw=gw+1;(Yw)[0X001]=Yw[1][Gz[0X1]];gw=gw+0X1;gw=gw+1;Gz=bc[gw];local Qn=(Uc[Gz[0X5]]);local Kn=(Qn[0X005]);gw=gw+0X01;local Fn=(#Kn);local An=(nil);if Fn>0 then An={};for W9=0x1,Fn do local q9=Kn[W9];do if q9[0X1]~=0x0 then(An)[W9-0X1]=jc[q9[0X2]];else An[W9-1]={Yw,q9[0X002]};end;end;end;S(Lc,An);end;do(Yw)[2]=e3(Qn,An,ew);end;do gw=gw+0x1;end;Gn=0X1;(Yw[Gn])(Yw[Gn+0X001]);lw=Gn-1;do gw=gw+0x1;end;gw=gw+0X001;gw=gw+1;repeat local yA,IA=Lc,(Yw);if#yA>0X0 then local Xo=({});do for Jz,Pz in M,yA do for AC,xC in M,Pz do if not(xC[0x01]==IA and xC[0X0002]>=0X000)then else local jB=(xC[0x2]);if not(not Xo[jB])then else do Xo[jB]={IA[jB]};end;end;xC[1]=Xo[jB];(xC)[0X00002]=1;end;end;end;end;end;until true;return;end;end;end;end;end;end);if not(Sw)then if V(Nw)~="string"then(q)(Nw,0X000);else if r(Nw,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if not(r(Nw,"^.-:%d+: "))then(q)(Nw,0X000);else q('\076ur\097ph \083\099\114ipt:'..(Qc[gw-0X1]or"(internal)")..": "..u(Nw),0);end;end;else if Nw then do if Tw==1 then return Yw[Iw]();else return Yw[Iw](E(Yw,Iw+0X1,lw));end;end;elseif Iw then return E(Yw,Iw,Tw);end;end;end;else ic=function(...)local dc,Ec=0X1,({});local ec=(k and k()or _ENV);local Fc=(0X0);local rc,Nc=q3(...);local oc={[2]=Vc,[1]=Ec};rc=rc-1;do for y0=0X0,rc do if not(ac>y0)then do break;end;else do(Ec)[y0]=Nc[y0+1];end;end;end;end;local hc=(ec==H and fc or ec);do if not nc then Nc=nil;elseif Ac then Ec[ac]={n=rc>=ac and rc-ac+0X01 or 0,E(Nc,ac+1,rc+1)};end;end;do if hc~=ec then if not(s)then _ENV=hc;else s(ic,hc);end;end;end;local xc,tc,Mc,Jc=c(function()while true do local kP=bc[dc];local SP=(kP[3]);do dc=dc+0X1;end;do if not(SP<0X7)then do if SP<10 then if SP>=0X8 then if SP==0X00009 then dc=kP[5];else do(Ec)[kP[0X00002]]=hc[kP[0X6]];end;end;else do Ec[kP[0X2]]=J(Ec[kP[5]],Ec[kP[0X0004]]);end;end;else if SP<0Xc then if SP~=0Xb then else Ec[kP[0x2]]=Ec[kP[0x005]]*Ec[kP[0X4]];end;else if SP==13 then local PR=Uc[kP[5]];local DR=PR[5];local cR,TR=#DR,(nil);if cR>0x00 then TR={};for jB=0X1,cR do local dB=DR[jB];if dB[0X1]~=0 then TR[jB-0X0001]=jc[dB[0x2]];else TR[jB-0X1]={Ec,dB[0x02]};end;end;S(Lc,TR);end;(Ec)[kP[0X2]]=e3(PR,TR,hc);else local UZ=kP[5];local QZ=Ec[UZ];for Mw=UZ+0X1,kP[4]do QZ=QZ..Ec[Mw];end;(Ec)[kP[0X2]]=QZ;end;end;end;end;else do if SP>=0X3 then if not(SP<0X0005)then if SP~=6 then(Ec)[2]=Ec[0][kP[1]];do kP=bc[dc];end;dc=dc+1;do(Ec)[3]=Ec[0x1][kP[1]];end;dc=dc+0X1;do dc=dc+1;end;local ak=(0X02);dc=dc+0X1;(Ec)[0x02]=Ec[2]<Ec[0x003];dc=dc+0X1;repeat local yj,cj=Lc,Ec;if#yj>0 then local HR={};for FQ,BQ in M,yj do for Q6,h6 in M,BQ do if not(h6[1]==cj and h6[0X2]>=0X0)then else local HZ=(h6[0X02]);if not(not HR[HZ])then else(HR)[HZ]={cj[HZ]};end;h6[1]=HR[HZ];h6[2]=1;end;end;end;end;until true;return false,ak,ak;else repeat local M2,s2=Lc,Ec;if#M2>0 then local MX=({});for Ku,ju in M,M2 do do for vX,oX in M,ju do do if not(oX[0X1]==s2 and oX[0X00002]>=0)then else local Kc=(oX[2]);if not MX[Kc]then(MX)[Kc]={s2[Kc]};end;oX[0X1]=MX[Kc];(oX)[0X0002]=1;end;end;end;end;end;end;until true;return;end;else if SP~=4 then Ec[kP[0X2]]=kP[0X6];else Ec[kP[2]]={E({},0X01,kP[5])};end;end;else if SP>=1 then if SP~=0X002 then(Ec)[kP[0X2]]=Ec[kP[0X5]][Ec[kP[0X4]]];else local e6,Z6=kP[0X2],((kP[0X4]-1)*50);local I6=Ec[e6];for lC=1,kP[5]do do(I6)[Z6+lC]=Ec[e6+lC];end;end;end;else Ec[kP[2]]=-Ec[kP[0x5]];end;end;end;end;end;end;end);if xc then if tc then do if Jc==1 then do return Ec[Mc]();end;else do return Ec[Mc](E(Ec,Mc+1,Fc));end;end;end;elseif not(Mc)then else do return E(Ec,Mc,Jc);end;end;else if V(tc)~="st\114\105\110g"then(q)(tc,0);else if r(tc,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if r(tc,"^.-:%d+: ")then q("\076urap\104\032Sc\114\105p\116\058"..(Qc[dc-1]or"(\105nte\114\110a\108\041")..": "..u(tc),0);else q(tc,0);end;end;end;end;end;else if Sc==115 then ic=function(...)local RG=(0);local PG=({});local hG=(0x1);local AG=({[2]=Vc,[1]=PG});local IG=((k and k()or _ENV));local kG,aG=q3(...);do kG=kG-0x1;end;do for oP=0,kG do if ac>oP then PG[oP]=aG[oP+1];else break;end;end;end;local FG=(IG==H and fc or IG);if not nc then aG=nil;elseif Ac then(PG)[ac]={n=kG>=ac and kG-ac+1 or 0X0,E(aG,ac+1,kG+1)};end;if FG==IG then else do if not(s)then _ENV=FG;else(s)(ic,FG);end;end;end;local wG,jG,SG,dG=c(function()while true do local Mk=(bc[hG]);local sk=Mk[3];do hG=hG+1;end;if not(sk>=0X9)then do if not(sk>=0X4)then if not(sk<2)then if sk==0X00003 then for ZN=Mk[0X2],Mk[0X5]do(PG)[ZN]=nil;end;else do(PG)[Mk[0X0002]]=not PG[Mk[0X5]];end;end;else if sk==0X1 then local n6=Mk[0X2];local S6,Z6=PG[n6]();if not(S6)then else do for Ep=0X1,Mk[4]do PG[n6+Ep]=Z6[Ep];end;end;hG=Mk[0X0005];end;else(PG)[Mk[0X2]]=w(PG[Mk[0x5]],PG[Mk[0x04]]);end;end;else do if not(sk>=0X00006)then if sk==5 then(PG)[Mk[2]]=Mk[0x06];else end;else if sk>=7 then if sk==0X008 then do hG=Mk[0X00005];end;else do(PG)[Mk[0x2]]=PG[Mk[0X5]]+PG[Mk[0X4]];end;end;else do(PG)[Mk[2]]=PG[Mk[0x5]]-PG[Mk[0X4]];end;end;end;end;end;end;else if not(sk>=13)then if not(sk<0X000b)then if sk~=12 then repeat local Yb,zb=Lc,(PG);if not(#Yb>0X0)then else local KD={};for Wk,bk in M,Yb do for MZ,eZ in M,bk do if eZ[0X1]==zb and eZ[2]>=0 then local Iy=(eZ[0X2]);if not(not KD[Iy])then else(KD)[Iy]={zb[Iy]};end;eZ[0X01]=KD[Iy];(eZ)[2]=0x1;end;end;end;end;until true;local pX=Mk[2];do return false,pX,pX;end;else(PG)[Mk[2]]=PG[Mk[5]]%PG[Mk[4]];end;else do if sk==0X0a then do PG[0]=FG[Mk[0X6]];end;Mk=bc[hG];hG=hG+0x1;(PG)[0]=PG[0X0][Mk[1]];hG=hG+1;PG[0]=not PG[0X0];Mk=bc[hG];do hG=hG+0X1;end;do if PG[0]then hG=Mk[5];end;end;else local Jq=(jc[0]);do PG[0]=Jq[1][Jq[2]];end;hG=hG+1;hG=hG+1;local Hq=(PG[0X0]);do Mk=bc[hG];end;hG=hG+1;local Qq=0;(PG)[Qq+1]=Hq;PG[Qq]=Hq[Mk[0X1]];do hG=hG+1;end;do Qq=0X0;end;PG[Qq]=PG[Qq](PG[Qq+0x1]);do RG=Qq;end;Mk=bc[hG];do hG=hG+1;end;if not PG[0]then do hG=Mk[0X05];end;end;end;end;end;else if sk<0xf then do if sk==0XE then local nM,MM=Uc[Mk[0x5]],nil;local oM=(nM[5]);local GM=(#oM);if GM>0X0 then MM={};for Y_=0X1,GM do local r_=oM[Y_];do if r_[1]==0X0 then do MM[Y_-1]={PG,r_[0x2]};end;else MM[Y_-1]=jc[r_[0X2]];end;end;end;(S)(Lc,MM);end;do(PG)[Mk[0X2]]=e3(nM,MM,FG);end;else(PG)[Mk[2]]={E({},0X0001,Mk[5])};end;end;else if not(sk<0X10)then if sk==17 then(PG)[Mk[2]]=FG[Mk[0X6]];else PG[0]=FG[Mk[6]];hG=hG+1;do hG=hG+1;end;hG=hG+1;RG=0;do PG[RG]=PG[RG]();end;hG=hG+1;hG=hG+0X1;end;else repeat local bC,LC=Lc,PG;if not(#bC>0X0000)then else local SQ={};for wL,WL in M,bC do do for qX,VX in M,WL do if not(VX[1]==LC and VX[0X002]>=0X00000)then else local Hu=VX[2];if not SQ[Hu]then SQ[Hu]={LC[Hu]};end;do(VX)[1]=SQ[Hu];end;VX[2]=1;end;end;end;end;end;until true;do return;end;end;end;end;end;end;end);if not(wG)then if V(jG)=='\115tring'then if not(r(jG,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(r(jG,"^.-:%d+: "))then q(jG,0);else q("Luraph Script:"..(Qc[hG-1]or"\040i\110\116\101rnal)")..'\058 '..u(jG),0X0);end;end;else(q)(jG,0X0);end;else if jG then if dG==0x1 then return PG[SG]();else return PG[SG](E(PG,SG+0X1,RG));end;elseif SG then return E(PG,SG,dG);end;end;end;else ic=function(...)local zQ,eQ=1,({});local fQ=((k and k()or _ENV));local gQ,CQ=(fQ==H and fc or fQ),{[2]=Vc,[1]=eQ};local mQ,AQ=q3(...);local RQ=(0X00);mQ=mQ-1;for mt=0X0,mQ do do if ac>mt then(eQ)[mt]=AQ[mt+0X00001];else break;end;end;end;if not nc then AQ=nil;elseif Ac then(eQ)[ac]={n=mQ>=ac and mQ-ac+1 or 0X0,E(AQ,ac+0X1,mQ+0X1)};end;if gQ==fQ then else if not(s)then _ENV=gQ;else s(ic,gQ);end;end;local ZQ,lQ,EQ,WQ=c(function()while true do local kg=(bc[zQ]);local Og=(kg[3]);zQ=zQ+1;do if Og>=11 then do if Og>=16 then if Og<19 then do if Og<17 then else if Og~=18 then local P_=(kg[0X2]);local X_=(P(function(...)(C)();do for gl,Fl,yl,al,kl,rl,ml,Vl,Tl,zl in...do C(true,{gl,Fl,yl,al,kl,rl,ml,Vl,Tl,zl});end;end;end));(X_)(eQ[P_],eQ[P_+0X1],eQ[P_+0X2]);RQ=P_;(eQ)[P_]=X_;zQ=kg[5];else local JK=kg[0X0005];local YK=eQ[JK];for k5=JK+1,kg[4]do YK=YK..eQ[k5];end;do eQ[kg[0X2]]=YK;end;end;end;end;else do if Og<0x014 then local xe,Ve=kg[0X0002],(kg[5]);RQ=xe+Ve-0x0001;repeat local UW,wW=Lc,(eQ);if not(#UW>0)then else local S2={};for EX,HX in M,UW do do for Pf,Rf in M,HX do if Rf[0X0001]==wW and Rf[2]>=0X00 then local rO=Rf[2];if not(not S2[rO])then else S2[rO]={wW[rO]};end;do Rf[1]=S2[rO];end;do(Rf)[2]=0X1;end;end;end;end;end;end;until true;return true,xe,Ve;else do if Og==0X0015 then do(eQ)[kg[0X2]]=kg[0x0006];end;else do(eQ)[kg[0X2]]=not eQ[kg[0X05]];end;end;end;end;end;end;else if Og<0x000D then if Og==0Xc then(eQ)[kg[0X02]]=gQ[kg[0X6]];else zQ=kg[0X5];end;else if Og<0XE then local xC=(kg[2]);RQ=xC+kg[5]-0X1;eQ[xC](E(eQ,xC+1,RQ));RQ=xC-1;else if Og~=0Xf then(eQ)[kg[0X2]]=false;else do if not(eQ[kg[0X5]]<eQ[kg[4]])then else zQ=kg[0X2];end;end;end;end;end;end;end;else if Og<0x5 then if Og>=2 then do if Og<0X3 then do if eQ[kg[0x5]]==eQ[kg[0X0004]]then else zQ=kg[2];end;end;else if Og==4 then for kT=kg[0X2],kg[0X5]do(eQ)[kT]=nil;end;else(eQ)[0]=gQ[kg[0x6]];local cr=0;do kg=bc[zQ];end;zQ=zQ+0x00001;local Xr=(eQ[0]);do(eQ)[cr+1]=Xr;end;eQ[cr]=Xr[kg[1]];zQ=zQ+1;local qr=jc[0];cr=0x0000;(eQ)[cr]=eQ[cr](eQ[cr+1]);RQ=cr;do zQ=zQ+1;end;zQ=zQ+1;kg=bc[zQ];do zQ=zQ+1;end;gQ[kg[0x6]]=eQ[0X00];do zQ=zQ+1;end;(eQ)[0]=qr[1][qr[2]];kg=bc[zQ];zQ=zQ+1;do eQ[0X001]=kg[0X6];end;kg=bc[zQ];do zQ=zQ+1;end;eQ[2]=gQ[kg[6]];kg=bc[zQ];zQ=zQ+1;(eQ)[0x02]=eQ[0X2][kg[1]];zQ=zQ+0x1;do zQ=zQ+1;end;kg=bc[zQ];zQ=zQ+1;if not(eQ[0X2])then else zQ=kg[0X0005];end;end;end;end;else do if Og~=0X1 then local IF=(jc[0]);(eQ)[0x0]=IF[0x1][IF[0x0002]];zQ=zQ+0x001;zQ=zQ+0x1;kg=bc[zQ];zQ=zQ+1;(eQ)[0X1]=kg[0x6];do kg=bc[zQ];end;zQ=zQ+1;eQ[2]=kg[6];kg=bc[zQ];zQ=zQ+0x001;(eQ)[3]=gQ[kg[6]];zQ=zQ+0X00001;zQ=zQ+1;kg=bc[zQ];zQ=zQ+1;do eQ[3]=eQ[3][kg[1]];end;kg=bc[zQ];zQ=zQ+0X1;do if not(eQ[3])then else zQ=kg[5];end;end;else repeat local Pv,mv=Lc,eQ;if#Pv>0X0 then local An={};for sj,oj in M,Pv do for hj,Ij in M,oj do if not(Ij[0X00001]==mv and Ij[0X002]>=0X0)then else local UX=Ij[0X2];if not(not An[UX])then else do An[UX]={mv[UX]};end;end;Ij[0X1]=An[UX];(Ij)[0X2]=1;end;end;end;end;until true;do return;end;end;end;end;else if not(Og<8)then if Og<0X9 then eQ[3]=gQ[kg[0x6]];zQ=zQ+1;zQ=zQ+0X1;kg=bc[zQ];do zQ=zQ+0X01;end;do eQ[0X3]=eQ[3][kg[0X1]];end;kg=bc[zQ];zQ=zQ+1;local nr=3;(eQ)[4]=kg[6];kg=bc[zQ];zQ=zQ+0X1;(eQ)[0X00005]=kg[6];zQ=zQ+0X1;do eQ[nr]=eQ[nr](eQ[nr+0X00001],eQ[nr+2]);end;RQ=nr;kg=bc[zQ];zQ=zQ+1;do zQ=kg[5];end;else if Og==10 then do(eQ)[kg[0x2]]=eQ[kg[0X05]]<eQ[kg[0X00004]];end;else local zN=0;(eQ[zN])(eQ[zN+1],eQ[zN+2]);do RQ=zN-0X0001;end;zQ=zQ+0X0001;zQ=zQ+1;do kg=bc[zQ];end;zQ=zQ+1;eQ[0]=gQ[kg[0X6]];zQ=zQ+0x01;do zQ=zQ+0X1;end;kg=bc[zQ];zQ=zQ+1;(eQ)[0x0]=eQ[0][kg[1]];kg=bc[zQ];zQ=zQ+1;if not(not eQ[0])then else do zQ=kg[5];end;end;end;end;else if Og>=0X06 then do if Og~=7 then(eQ)[kg[2]]={E({},1,kg[5])};else local by=Uc[kg[0X05]];local oy,zy=by[5],(nil);local Qy=(#oy);if not(Qy>0)then else do zy={};end;do for lT=1,Qy do local BT=oy[lT];do if BT[0X01]==0 then(zy)[lT-1]={eQ,BT[2]};else do(zy)[lT-0x1]=jc[BT[2]];end;end;end;end;end;(S)(Lc,zy);end;do(eQ)[kg[2]]=e3(by,zy,gQ);end;end;end;else local vz=0X0000;RQ=vz+4-1;(eQ[vz])(E(eQ,vz+0X1,RQ));do RQ=vz-1;end;local rz=jc[0x00000];zQ=zQ+1;(eQ)[0X000]=rz[0X1][rz[0X002]];do kg=bc[zQ];end;zQ=zQ+1;(eQ)[1]=kg[6];kg=bc[zQ];do zQ=zQ+0X00001;end;(eQ)[0X2]=kg[6];kg=bc[zQ];zQ=zQ+0X1;(eQ)[3]=gQ[kg[0X6]];zQ=zQ+1;zQ=zQ+1;kg=bc[zQ];zQ=zQ+0X0001;do if eQ[3]then zQ=kg[5];end;end;end;end;end;end;end;end;end);if not(ZQ)then do if V(lQ)=="string"then if r(lQ,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(lQ,"^.-:%d+: "))then q(lQ,0X000);else q('Lur\097ph\032Scr\105\112t\058'..(Qc[zQ-0X00001]or"(i\110\116\101r\110\097l)")..": "..u(lQ),0);end;else q(lQ,0x0);end;end;else if lQ then if WQ==1 then return eQ[EQ]();else return eQ[EQ](E(eQ,EQ+1,RQ));end;elseif not(EQ)then else return E(eQ,EQ,WQ);end;end;end;end;end;else if not(Sc<112)then do if Sc~=113 then ic=function(...)local Ug,Kg=1,{};local pg=(0X00000);local bg=((k and k()or _ENV));local fg=((bg==H and fc or bg));local Pg,Lg=q3(...);local jg=({[1]=Kg,[2]=Vc});Pg=Pg-1;do for rz=0X0,Pg do if not(ac>rz)then break;else do Kg[rz]=Lg[rz+1];end;end;end;end;if not nc then do Lg=nil;end;elseif not(Ac)then else Kg[ac]={n=Pg>=ac and Pg-ac+0x1 or 0X0000,E(Lg,ac+0x1,Pg+1)};end;if fg~=bg then do if not(s)then _ENV=fg;else s(ic,fg);end;end;end;local wg,Ng,yg,Vg=c(function()do while true do local vY=(bc[Ug]);local NY=(vY[3]);Ug=Ug+0X1;if NY>=0X0B then if NY>=0x11 then if not(NY>=20)then if not(NY<18)then if NY==0x000013 then Ug=vY[5];else(Kg)[vY[0X02]]=Kg[vY[0X5]]~=Kg[vY[0x4]];end;else local gr=(vY[0X2]);local Br=(Kg[gr]);local Ar=(vY[4]-1)*0x32;for QN=0X1,vY[5]do do(Br)[Ar+QN]=Kg[gr+QN];end;end;end;else do if not(NY>=0X15)then do Kg[vY[2]]=fg[vY[0X6]];end;else if NY==22 then Kg[vY[2]]=T(Kg[vY[0X0005]],Kg[vY[4]]);else local mM=(Uc[vY[0X00005]]);local QM=nil;local jM=mM[0X0005];local LM=#jM;if LM>0 then QM={};for Bd=1,LM do local qd=(jM[Bd]);if qd[1]==0 then QM[Bd-1]={Kg,qd[2]};else do(QM)[Bd-0X1]=jc[qd[0X2]];end;end;end;S(Lc,QM);end;(Kg)[vY[2]]=e3(mM,QM,fg);end;end;end;end;else if NY>=14 then if not(NY<15)then do if NY==0X10 then(Kg)[vY[2]]=vY[6];else if not(Kg[vY[5]]<Kg[vY[4]])then else Ug=vY[2];end;end;end;else if Kg[vY[0X00002]]then Ug=vY[5];end;end;else do if NY<0x00C then local cQ=jc[0X01];(Kg)[0x0]=cQ[0X1][cQ[2]];do Ug=Ug+0X1;end;Ug=Ug+0X1;Ug=Ug+0X00001;Kg[0]=not Kg[0X0];vY=bc[Ug];do Ug=Ug+1;end;if not(Kg[0])then else do Ug=vY[0x00005];end;end;else if NY~=13 then(Kg)[0]=fg[vY[0X6]];Ug=Ug+0X1;Ug=Ug+1;Ug=Ug+1;do pg=0;end;Kg[pg]=Kg[pg]();Ug=Ug+0X01;Kg[0X0]=not Kg[0];do vY=bc[Ug];end;Ug=Ug+1;Ug=vY[5];else Kg[vY[0X2]]={E({},1,vY[0X00005])};end;end;end;end;end;else if NY>=0X5 then if NY>=0X8 then if NY>=0X9 then if NY~=0Xa then(Kg)[0x0000]=fg[vY[6]];Ug=Ug+0X1;Ug=Ug+0X0001;local n7=jc[0X1];do Ug=Ug+1;end;Kg[0X1]=n7[1][n7[2]];do vY=bc[Ug];end;Ug=Ug+1;Kg[0X01]=Kg[1][vY[0X01]];Ug=Ug+0X1;(Kg)[0X0000]=Kg[0][Kg[0X1]];vY=bc[Ug];Ug=Ug+0x1;do Ug=vY[0x0005];end;else repeat local W4,z4=Lc,Kg;if#W4>0 then local zR={};do for Hd,td in M,W4 do for nW,QW in M,td do do if QW[1]==z4 and QW[2]>=0X0 then local E2=(QW[2]);if not zR[E2]then zR[E2]={z4[E2]};end;QW[0X0001]=zR[E2];(QW)[0X00002]=1;end;end;end;end;end;end;until true;do return;end;end;else end;else do if NY<6 then local gm=jc[1];(Kg)[0X0]=gm[0X1][gm[2]];do Ug=Ug+1;end;Ug=Ug+0X1;do vY=bc[Ug];end;Ug=Ug+1;if not Kg[0X0]then Ug=vY[0X5];end;else if NY~=7 then local Tx=(jc[1]);(Kg)[0]=Tx[0X001][Tx[2]];Ug=Ug+1;Ug=Ug+0x0001;Ug=Ug+0X1;Kg[0]=not Kg[0X0000];vY=bc[Ug];Ug=Ug+1;if not(not Kg[0X0])then else Ug=vY[5];end;else local Xa=(jc[1]);do(Kg)[0]=Xa[0x1][Xa[0X00002]];end;do Ug=Ug+1;end;Ug=Ug+0X1;local Ta=0;vY=bc[Ug];Ug=Ug+1;local Na=Kg[0];do Kg[Ta+0X1]=Na;end;do Kg[Ta]=Na[vY[1]];end;Ug=Ug+0X1;Ta=0;(Kg)[Ta]=Kg[Ta](Kg[Ta+1]);pg=Ta;vY=bc[Ug];do Ug=Ug+1;end;Ug=vY[5];end;end;end;end;else if NY>=0X2 then if NY>=3 then if NY==0x04 then repeat local Dp,Hp=Lc,(Kg);if#Dp>0 then local pf={};do for oi,Li in M,Dp do do for en,Gn in M,Li do if not(Gn[0X1]==Hp and Gn[0X2]>=0X0)then else local ir=Gn[0X002];if not pf[ir]then do(pf)[ir]={Hp[ir]};end;end;(Gn)[1]=pf[ir];do(Gn)[2]=1;end;end;end;end;end;end;end;until true;local XO=vY[0X002];return false,XO,XO;else local LC=(jc[0]);Kg[0]=LC[0X00001][LC[0X2]];Ug=Ug+0X1;Ug=Ug+0X001;Ug=Ug+1;pg=0x0;do(Kg)[pg]=Kg[pg]();end;Ug=Ug+1;do Ug=Ug+0X1;end;vY=bc[Ug];Ug=Ug+1;if not Kg[0]then Ug=vY[5];end;end;else do for Wh=vY[2],vY[5]do(Kg)[Wh]=nil;end;end;end;else do if NY~=1 then Kg[0]=fg[vY[6]];vY=bc[Ug];Ug=Ug+1;(Kg)[0x0]=Kg[0][vY[1]];do Ug=Ug+0X1;end;do Ug=Ug+0x01;end;else if Kg[vY[0x0005]]==Kg[vY[0x0004]]then do Ug=vY[2];end;end;end;end;end;end;end;end;end;end);if not(wg)then do if V(Ng)~='\115tr\105\110\103'then q(Ng,0);else do if r(Ng,"\097t\116em\112\116 t\111 \121\105eld a\099\114o\115s\032\109\101\116a\109\101tho\100/C%\045ca\108\108\032b\111\117\110dary")then return coroutine.yield();end;end;if not(r(Ng,"^\046-:%\100+:\032"))then(q)(Ng,0X00);else q("Luraph Script:"..(Qc[Ug-1]or"(internal)")..": "..u(Ng),0X0);end;end;end;else if Ng then if Vg==0x1 then do return Kg[yg]();end;else do return Kg[yg](E(Kg,yg+1,pg));end;end;elseif yg then return E(Kg,yg,Vg);end;end;end;else ic=function(...)local ie,qe,ze=1,{},0x00000;local He=((k and k()or _ENV));local we,de=q3(...);local pe=((He==H and fc or He));local Xe={[1]=qe,[2]=Vc};we=we-0x1;for lB=0x0,we do do if ac>lB then qe[lB]=de[lB+1];else break;end;end;end;do if not nc then de=nil;elseif not(Ac)then else(qe)[ac]={n=we>=ac and we-ac+0X1 or 0x000,E(de,ac+1,we+0X0001)};end;end;do if pe==He then else if s then s(ic,pe);else do _ENV=pe;end;end;end;end;local be,xe,Ae,Te=c(function()while true do local gp=(bc[ie]);local tp=gp[3];do ie=ie+1;end;if not(tp<0X0002E)then if not(tp<69)then if tp<81 then if tp<0X4B then if tp>=72 then if tp>=0X49 then if tp~=0X00004a then do qe[gp[0X00002]]=qe[gp[0X005]]~=gp[1];end;else local um=jc[0x0];(qe)[0x00006]=um[1][um[2]];ie=ie+0x1;ie=ie+0x1;gp=bc[ie];ie=ie+1;(qe)[0X006]=qe[6][gp[0X00001]];ie=ie+0X1;do ie=ie+1;end;do gp=bc[ie];end;ie=ie+0X1;if not(not qe[6])then else do ie=gp[0X0005];end;end;end;else qe[0x7]=pe[gp[0X6]];ie=ie+1;ze=0X07;qe[ze]=qe[ze]();ie=ie+0X00001;ie=ie+1;gp=bc[ie];ie=ie+1;if qe[0x7]then ie=gp[0X005];end;end;else do if tp<0x46 then local r5=gp[0X2];local H5=(gp[0X5]);do ze=r5+H5-1;end;do repeat local WK,gK=Lc,(qe);if#WK>0 then local g0={};for OD,RD in M,WK do for lU,GU in M,RD do do if not(GU[0X1]==gK and GU[0x2]>=0)then else local lm=GU[2];if not(not g0[lm])then else(g0)[lm]={gK[lm]};end;GU[0X0001]=g0[lm];GU[0X02]=1;end;end;end;end;end;until true;end;return true,r5,H5;else do if tp~=0X47 then local Ax=(jc[2]);(qe)[7]=Ax[1][Ax[0X002]];ie=ie+0x1;ie=ie+0X1;gp=bc[ie];ie=ie+0X01;if not qe[7]then ie=gp[5];end;else end;end;end;end;end;else if tp>=0x4e then do if tp>=0X4F then if tp~=80 then do(qe)[7]=pe[gp[0X6]];end;do gp=bc[ie];end;do ie=ie+1;end;(qe)[7]=qe[7][gp[0X00001]];gp=bc[ie];ie=ie+1;if not(qe[0X7])then else ie=gp[0X5];end;else do(qe)[0X6]=pe[gp[6]];end;ie=ie+1;ze=6;qe[ze]();ze=ze-1;ie=ie+0X1;ie=ie+0X1;do gp=bc[ie];end;do ie=ie+0X01;end;ie=gp[0X005];end;else qe[4]=pe[gp[0x6]];ie=ie+0X001;ie=ie+1;ie=ie+1;do(qe)[4]=qe[0X004][qe[1]];end;do gp=bc[ie];end;ie=ie+1;ie=gp[5];end;end;else if tp>=76 then do if tp~=77 then local KS=jc[2];qe[7]=KS[0X1][KS[0x2]];ie=ie+1;ie=ie+1;gp=bc[ie];ie=ie+0X1;do if not(qe[7])then else ie=gp[5];end;end;else local fO,oO=jc[2],(0X7);(qe)[7]=fO[1][fO[2]];ie=ie+1;ie=ie+1;gp=bc[ie];do ie=ie+0X00001;end;local RO=(qe[7]);(qe)[oO+0X1]=RO;qe[oO]=RO[gp[1]];ie=ie+1;oO=0X7;(qe)[oO]=qe[oO](qe[oO+0x001]);do ze=oO;end;gp=bc[ie];ie=ie+0X1;if not qe[0X7]then do ie=gp[0X5];end;end;end;end;else if qe[gp[0x5]]~=gp[0X1]then do ie=gp[2];end;end;end;end;end;else if not(tp>=0X00057)then if not(tp>=84)then if not(tp>=82)then(qe)[4]=pe[gp[0X6]];do ie=ie+1;end;do ie=ie+1;end;gp=bc[ie];do ie=ie+0x1;end;qe[0X4]=qe[0X4][gp[1]];local fk=(4);do gp=bc[ie];end;ie=ie+0X1;qe[5]=gp[6];ie=ie+0X1;qe[0x6]=qe[0];gp=bc[ie];do ie=ie+0X1;end;(qe)[7]=gp[0x00006];do ie=ie+1;end;do ze=fk+0X4-0X1;end;(qe)[fk]=qe[fk](E(qe,fk+0X1,ze));do ze=fk;end;gp=bc[ie];ie=ie+0x1;ie=gp[0X5];else if tp~=0X53 then qe[9]=qe[8];gp=bc[ie];do ie=ie+1;end;do pe[gp[0X6]]=qe[9];end;ie=ie+1;(qe)[0X009]=qe[8];gp=bc[ie];do ie=ie+1;end;if not qe[0X9]then do ie=gp[0X5];end;end;else local n5=jc[0X00000];(qe)[1]=n5[1][n5[0X2]];ie=ie+0X1;ie=ie+0x00001;gp=bc[ie];ie=ie+1;qe[0X1]=qe[0X00001][gp[1]];ie=ie+0x0001;ie=ie+0x0001;gp=bc[ie];ie=ie+0X01;if not(not qe[0X00001])then else ie=gp[0X5];end;end;end;else do if not(tp<85)then if tp~=0X056 then if qe[gp[5]]==qe[gp[0X4]]then ie=gp[2];end;else ie=gp[5];end;else local Fn=(jc[4]);qe[0x7]=Fn[1][Fn[2]];ie=ie+0X1;ie=ie+0X01;ie=ie+0X001;ze=7;(qe)[ze]=qe[ze]();do ie=ie+1;end;ie=ie+1;gp=bc[ie];ie=ie+0X1;if not(not qe[0X7])then else ie=gp[0X00005];end;end;end;end;else if not(tp>=0X5A)then do if tp>=88 then if tp==89 then(qe)[0X7]=pe[gp[6]];do ie=ie+1;end;ie=ie+1;ie=ie+1;local bs=jc[2];qe[8]=bs[0X1][bs[2]];ie=ie+1;do ie=ie+0X00001;end;gp=bc[ie];ie=ie+1;qe[8]=qe[0X0008][gp[0X00001]];ie=ie+0X001;ie=ie+0X00001;ie=ie+1;(qe)[0x7]=qe[7][qe[8]];gp=bc[ie];ie=ie+0X1;if not qe[7]then ie=gp[5];end;else if qe[gp[0X2]]then ie=gp[0x5];end;end;else local oe=(2);local Ne,Qe=7,0;do if oe~=0X0 then ze=Ne+oe-0X1;end;end;local Ve,he=nil,nil;do if oe~=1 then do Ve,he=q3(qe[Ne](E(qe,Ne+1,ze)));end;else Ve,he=q3(qe[Ne]());end;end;if Qe==1 then ze=Ne-1;else if Qe~=0x0000 then Ve=Ne+Qe-2;ze=Ve+0x1;else do Ve=Ve+Ne-1;end;ze=Ve;end;local JC=0;for Ye=Ne,Ve do JC=JC+0X1;do(qe)[Ye]=he[JC];end;end;end;do ie=ie+1;end;Ne=6;qe[Ne](E(qe,Ne+1,ze));do ze=Ne-1;end;ie=ie+1;ie=ie+0X001;do gp=bc[ie];end;ie=ie+1;do(qe)[6]=pe[gp[0X006]];end;ie=ie+0x1;ie=ie+0X001;gp=bc[ie];ie=ie+1;(qe)[6]=qe[0X00006][gp[0X1]];do ie=ie+1;end;ie=ie+1;gp=bc[ie];do ie=ie+1;end;qe[7]=gp[0X6];ie=ie+0X0001;Ne=0x6;(qe[Ne])(qe[Ne+0X01]);ze=Ne-1;local le=(jc[1]);ie=ie+1;qe[0x00006]=le[0x1][le[2]];ie=ie+0X001;ie=ie+0x1;gp=bc[ie];ie=ie+1;qe[6]=qe[6][gp[0X1]];do gp=bc[ie];end;ie=ie+0X0001;if not(not qe[0x0006])then else do ie=gp[5];end;end;end;end;else if tp<0X00005B then local N1=(gp[0X2]);local a1=(P(function(...)C();for kk,Lk,dk,mk,Bk,lk,Jk,zk,Hk,Sk in...do(C)(true,{kk,Lk,dk,mk,Bk,lk,Jk,zk,Hk,Sk});end;end));(a1)(qe[N1],qe[N1+1],qe[N1+2]);ze=N1;qe[N1]=a1;ie=gp[0X5];else do if tp~=0X5C then do qe[0XF]=pe[gp[0X0006]];end;do ie=ie+1;end;ie=ie+1;ie=ie+0x0001;local kc=(0x0000f);(qe)[16]=qe[6];ie=ie+1;do qe[0x11]=qe[0XD];end;ie=ie+1;(qe)[kc]=qe[kc](qe[kc+1],qe[kc+2]);ze=kc;ie=ie+0X001;ie=ie+1;ie=ie+1;qe[0X0010]=qe[11];do gp=bc[ie];end;ie=ie+0x01;if qe[16]then ie=gp[0x00005];end;else do qe[6]=pe[gp[0X6]];end;gp=bc[ie];ie=ie+0X1;local mo=6;(qe)[0X07]=gp[0X0006];do ie=ie+1;end;(qe[mo])(qe[mo+1]);ze=mo-0X1;gp=bc[ie];do ie=ie+0X1;end;qe[6]=pe[gp[0X6]];ie=ie+1;do ie=ie+0X1;end;gp=bc[ie];ie=ie+1;do(qe)[7]=gp[6];end;ie=ie+0X01;mo=6;qe[mo](qe[mo+1]);do ze=mo-1;end;ie=ie+0X1;do ie=ie+1;end;do gp=bc[ie];end;ie=ie+1;ie=gp[5];end;end;end;end;end;end;else if tp>=0X39 then if tp<0X3F then if tp<0X3c then if tp<58 then local jf=(jc[0X0]);(qe)[0X4]=jf[0X00001][jf[2]];do gp=bc[ie];end;do ie=ie+0x0001;end;do qe[4]=qe[0X4][gp[1]];end;do ie=ie+0X001;end;ie=ie+1;gp=bc[ie];ie=ie+1;if not(not qe[4])then else ie=gp[0X5];end;else if tp==59 then do qe[gp[0X2]]=pe[gp[0X6]];end;else local gR=jc[2];qe[7]=gR[0x001][gR[0X2]];ie=ie+1;do ie=ie+0X00001;end;gp=bc[ie];ie=ie+0X00001;if not(not qe[7])then else ie=gp[5];end;end;end;else do if tp>=0X3D then if tp==0X3e then qe[0X6]=pe[gp[6]];ie=ie+1;local SR=0x6;ie=ie+1;local WR=(jc[0X01]);ie=ie+0X1;(qe)[0x07]=WR[1][WR[0X2]];ie=ie+0x1;qe[SR](qe[SR+1]);ze=SR-1;gp=bc[ie];ie=ie+1;ie=gp[5];else local FG=(jc[3]);do(qe)[6]=FG[1][FG[0X00002]];end;gp=bc[ie];ie=ie+0X001;do(qe)[0X6]=qe[6][gp[0x00001]];end;ie=ie+0X01;ie=ie+1;gp=bc[ie];ie=ie+0x001;(qe)[0X006]=qe[6][gp[1]];gp=bc[ie];ie=ie+0X0001;do pe[gp[6]]=qe[0X6];end;ie=ie+1;FG=jc[0X3];(qe)[6]=FG[1][FG[0X2]];gp=bc[ie];ie=ie+1;qe[6][gp[0X0006]]=gp[0x1];ie=ie+0X1;FG=jc[0X3];(qe)[6]=FG[0X01][FG[0X2]];do gp=bc[ie];end;ie=ie+0X0001;(qe[0x6])[gp[0X6]]=gp[0X0001];do ie=ie+0X1;end;FG=jc[0X3];qe[0x0006]=FG[0X0001][FG[2]];gp=bc[ie];do ie=ie+1;end;(qe[6])[gp[0X6]]=gp[1];do ie=ie+0X00001;end;FG=jc[0X3];do qe[6]=FG[0X1][FG[0X2]];end;gp=bc[ie];do ie=ie+1;end;qe[6]=qe[6][gp[1]];do ie=ie+0X1;end;local GG=0X0006;ie=ie+0X1;do gp=bc[ie];end;ie=ie+1;qe[6][gp[0x6]]=gp[0X1];do ie=ie+0X0001;end;FG=jc[0X0003];do qe[6]=FG[0X1][FG[0X2]];end;ie=ie+1;ie=ie+1;do gp=bc[ie];end;ie=ie+0X1;local fG=qe[6];(qe)[GG+0X0001]=fG;qe[GG]=fG[gp[1]];gp=bc[ie];ie=ie+0x01;do(qe)[8]=gp[6];end;ie=ie+0x00001;do GG=0X6;end;qe[GG](qe[GG+0x1],qe[GG+0X2]);do ze=GG-1;end;gp=bc[ie];do ie=ie+1;end;do qe[0X6]=pe[gp[6]];end;gp=bc[ie];ie=ie+1;qe[6]=qe[0X6][gp[1]];do gp=bc[ie];end;ie=ie+0x1;GG=6;do fG=qe[6];end;qe[GG+1]=fG;qe[GG]=fG[gp[1]];gp=bc[ie];ie=ie+0X00001;qe[8]=gp[0x6];ie=ie+0X001;do GG=6;end;(qe[GG])(qe[GG+1],qe[GG+2]);ze=GG-1;do ie=ie+0X00001;end;FG=jc[2];do qe[0X6]=FG[0X1][FG[0X2]];end;ie=ie+1;ie=ie+1;gp=bc[ie];ie=ie+0X01;if not(not qe[0X06])then else do ie=gp[5];end;end;end;else qe[0X3]=pe[gp[0x6]];ie=ie+0x1;ze=3;(qe)[ze]=qe[ze]();do gp=bc[ie];end;ie=ie+1;ie=gp[5];end;end;end;else if tp>=66 then do if not(tp<0X00043)then do if tp==68 then(qe)[0XA]=qe[0XA]/gp[1];do ie=ie+0X001;end;(qe)[9]=qe[0X0009]*qe[10];ie=ie+0X0001;qe[0X08]=qe[8]<=qe[9];gp=bc[ie];ie=ie+1;ie=gp[0X005];else(qe)[gp[0X2]]=#qe[gp[5]];end;end;else local hh=jc[0X0000];(qe)[3]=hh[1][hh[0X0002]];ie=ie+0X1;ie=ie+0x1;gp=bc[ie];do ie=ie+0x1;end;(qe)[3]=qe[3][gp[0X00001]];local Gh=(3);ie=ie+0X1;ie=ie+1;ie=ie+0x001;do hh=jc[1];end;qe[0X0004]=hh[1][hh[0X002]];ie=ie+1;do ie=ie+0X1;end;ie=ie+1;qe[Gh](qe[Gh+0X1]);ze=Gh-0X1;gp=bc[ie];ie=ie+0X1;do ie=gp[0x5];end;end;end;else if not(tp<64)then if tp==65 then qe[0X012]=pe[gp[6]];gp=bc[ie];ie=ie+1;qe[0x0012]=qe[0X00012][gp[0x00001]];ie=ie+0X1;ie=ie+0X0001;do gp=bc[ie];end;ie=ie+1;if not qe[0X12]then ie=gp[0X05];end;else(qe)[0X0007]=qe[0X5][gp[0X0001]];gp=bc[ie];ie=ie+0x1;(qe)[7]=qe[7][gp[1]];gp=bc[ie];ie=ie+1;do if gp[0X6]<=qe[7]then ie=gp[2];end;end;end;else qe[0X9]=pe[gp[0X6]];ie=ie+1;ie=ie+0x00001;do gp=bc[ie];end;ie=ie+1;(qe)[10]=pe[gp[6]];ie=ie+1;do ie=ie+0x1;end;gp=bc[ie];ie=ie+1;do qe[0XB]=pe[gp[0X06]];end;local UF=10;ie=ie+1;ie=ie+0X1;gp=bc[ie];ie=ie+1;(qe)[0x00b]=qe[11][gp[0X0001]];local NF=(0);ie=ie+0X1;ie=ie+0X001;ie=ie+1;local KF=0X2;do if KF~=0 then do ze=UF+KF-0x001;end;end;end;local PF,iF=nil,(nil);if KF==0X001 then PF,iF=q3(qe[UF]());else PF,iF=q3(qe[UF](E(qe,UF+1,ze)));end;if NF~=0X1 then if NF==0 then PF=PF+UF-0X1;ze=PF;else PF=UF+NF-2;ze=PF+1;end;local U9=(0X000);do for B1=UF,PF do U9=U9+0X001;(qe)[B1]=iF[U9];end;end;else do ze=UF-0X01;end;end;ie=ie+0X1;UF=0x009;qe[UF](E(qe,UF+1,ze));ze=UF-1;ie=ie+0x1;ie=ie+1;do ie=ie+0x001;end;qe[9]=true;gp=bc[ie];do ie=ie+1;end;(pe)[gp[0x6]]=qe[9];ie=ie+0X1;do qe[9]=false;end;gp=bc[ie];ie=ie+1;(pe)[gp[6]]=qe[9];gp=bc[ie];do ie=ie+0X00001;end;qe[0X9]=pe[gp[6]];gp=bc[ie];ie=ie+0x1;qe[10]=gp[6];ie=ie+1;UF=0X9;qe[UF](qe[UF+1]);ze=UF-0X0001;ie=ie+0x00001;ie=ie+1;gp=bc[ie];ie=ie+1;qe[0X0009]=pe[gp[0X0006]];gp=bc[ie];do ie=ie+0X1;end;(qe)[0xA]=qe[0x6][gp[1]];ie=ie+1;UF=9;qe[UF]=qe[UF](qe[UF+0X0001]);do ze=UF;end;ie=ie+0X001;do ie=ie+1;end;ie=ie+1;(qe)[0XA]=false;ie=ie+0x1;do qe[0xB]=false;end;gp=bc[ie];do ie=ie+0X01;end;do(qe)[12]=pe[gp[0X6]];end;do ie=ie+0X1;end;do ze=0X000C;end;qe[ze]=qe[ze]();gp=bc[ie];do ie=ie+1;end;do pe[gp[6]]=qe[12];end;do gp=bc[ie];end;do ie=ie+1;end;(qe)[0XC]=pe[gp[6]];ie=ie+1;do qe[13]=false;end;ie=ie+1;UF=0x00c;qe[UF](qe[UF+0X1]);ze=UF-1;ie=ie+1;do ie=ie+1;end;ie=ie+1;(qe)[12]=nil;do ie=ie+0x001;end;qe[0x000]=qe[12];gp=bc[ie];ie=ie+0x1;do(qe)[12]=pe[gp[0X6]];end;do gp=bc[ie];end;ie=ie+0X1;(qe)[13]=pe[gp[0X6]];ie=ie+0X1;ie=ie+1;gp=bc[ie];do ie=ie+0X1;end;qe[13]=qe[0X000D][gp[1]];ie=ie+0x1;UF=12;KF=2;NF=4;if KF==0X0 then else ze=UF+KF-1;end;PF,iF=nil;if KF~=0X1 then PF,iF=q3(qe[UF](E(qe,UF+1,ze)));else PF,iF=q3(qe[UF]());end;if NF~=1 then if NF==0 then PF=PF+UF-0X1;ze=PF;else PF=UF+NF-0X2;ze=PF+0x1;end;local x7=0;for K2=UF,PF do do x7=x7+0X001;end;qe[K2]=iF[x7];end;else ze=UF-1;end;do ie=ie+1;end;ie=ie+1;gp=bc[ie];ie=ie+0x00001;UF=12;local MF=(P(function(...)(C)();for n5,B5 in...do(C)(true,n5,B5);end;end));MF(qe[UF],qe[UF+0X1],qe[UF+2]);ze=UF;qe[UF]=MF;do ie=gp[5];end;end;end;end;else if not(tp<0X33)then if not(tp<0x36)then do if tp<55 then do(qe)[gp[2]]={E({},1,gp[0X5])};end;else if tp~=0X38 then local nt=nil;local dt=Uc[gp[0x5]];local at=dt[5];local Ht=#at;if not(Ht>0)then else nt={};for GY=0X1,Ht do local wY=at[GY];if wY[1]~=0 then nt[GY-0X01]=jc[wY[0x2]];else nt[GY-0X01]={qe,wY[2]};end;end;(S)(Lc,nt);end;(qe)[gp[0x2]]=e3(dt,nt,pe);else qe[gp[2]]=o(qe[gp[0X5]],qe[gp[0X4]]);end;end;end;else if tp<52 then(qe)[0X0006]=pe[gp[0X6]];do ie=ie+0X1;end;local NU=(jc[1]);ie=ie+1;ie=ie+0x1;qe[0x7]=NU[1][NU[0X00002]];ie=ie+1;ie=ie+1;gp=bc[ie];ie=ie+0X1;qe[8]=pe[gp[0X006]];do ie=ie+0X1;end;local RU=(6);do ze=0X0008;end;qe[ze]=qe[ze]();do gp=bc[ie];end;ie=ie+0X00001;qe[8]=qe[8][gp[1]];gp=bc[ie];ie=ie+0X1;do qe[0X8]=qe[8]-gp[1];end;do ie=ie+0X1;end;(qe[RU])(qe[RU+1],qe[RU+0X02]);ze=RU-0X1;do gp=bc[ie];end;do ie=ie+0X0001;end;ie=gp[0X05];else if tp==53 then qe[7]=pe[gp[6]];do ie=ie+1;end;do ie=ie+0X1;end;ie=ie+1;ze=0X7;qe[ze]=qe[ze]();do gp=bc[ie];end;ie=ie+1;if not qe[0X7]then ie=gp[5];end;else qe[0X5]=gp[0X0006];ie=ie+0x001;qe[0X1]=qe[0x5];do gp=bc[ie];end;ie=ie+0X01;ie=gp[0X5];end;end;end;else if tp<0x00030 then do if tp~=0X2F then do(qe)[gp[2]]=qe[gp[5]][gp[1]];end;else local s2=jc[3];(qe)[0X5]=s2[1][s2[2]];gp=bc[ie];ie=ie+1;(qe)[0X5]=qe[0x0005][gp[1]];ie=ie+0X1;ie=ie+0X1;do ie=ie+1;end;s2=jc[3];do qe[0X6]=s2[0X1][s2[0X00002]];end;ie=ie+0x1;ie=ie+0X1;do gp=bc[ie];end;ie=ie+0x01;do qe[0X0006]=qe[0X00006][gp[0x1]];end;gp=bc[ie];ie=ie+0X1;(qe)[0X6]=qe[0X0006][gp[0X1]];ie=ie+0X1;ie=ie+1;gp=bc[ie];do ie=ie+1;end;qe[5][gp[0x6]]=qe[6];gp=bc[ie];ie=ie+0X0001;ie=gp[0X5];end;end;else if not(tp<49)then if tp==50 then pe[gp[6]]=qe[gp[2]];else(qe)[0X06]=pe[gp[0x6]];gp=bc[ie];ie=ie+1;do qe[0X6]=qe[0X006][gp[0X1]];end;ie=ie+1;ie=ie+1;gp=bc[ie];do ie=ie+0X001;end;(qe)[0X006]=qe[6][gp[1]];gp=bc[ie];do ie=ie+0X1;end;do if not(not(gp[6]<qe[0X6]))then else do ie=gp[2];end;end;end;end;else(qe)[15]=qe[0X009][gp[1]];ie=ie+0X1;(qe)[0XF]=qe[15][qe[13]];gp=bc[ie];do ie=ie+1;end;if not(not qe[15])then else do ie=gp[5];end;end;end;end;end;end;end;else do if not(tp>=0X017)then if tp>=0Xb then if tp<0X11 then if not(tp>=14)then if not(tp>=0XC)then do qe[4]=true;end;gp=bc[ie];do ie=ie+0X1;end;(pe)[gp[6]]=qe[4];ie=ie+0x1;(qe)[0x4]=true;do gp=bc[ie];end;ie=ie+0X1;(pe)[gp[0X6]]=qe[0x4];ie=ie+0X1;qe[0X00004]=true;gp=bc[ie];ie=ie+0X001;(pe)[gp[0X6]]=qe[4];gp=bc[ie];do ie=ie+1;end;(qe)[4]=pe[gp[0X6]];ie=ie+1;ze=0X04;qe[ze]();ze=ze-0x1;ie=ie+1;ie=ie+0X1;do ie=ie+0X00001;end;qe[0X4]=qe[0x0];gp=bc[ie];ie=ie+0X01;if not(not qe[4])then else do ie=gp[5];end;end;else if tp~=13 then qe[0X4]=pe[gp[6]];do ie=ie+0X1;end;do ie=ie+1;end;do gp=bc[ie];end;ie=ie+0X1;if qe[0X00004]then ie=gp[5];end;else if qe[gp[5]]~=qe[gp[4]]then ie=gp[0X02];end;end;end;else if not(tp<0Xf)then if tp~=0X10 then qe[0X1]=gp[0x6];gp=bc[ie];ie=ie+1;(qe)[2]=pe[gp[6]];ie=ie+0x001;ze=2;qe[ze]=qe[ze]();ie=ie+0X0001;ie=ie+1;gp=bc[ie];ie=ie+1;ie=gp[0X05];else local EM=jc[0];do(qe)[1]=EM[1][EM[2]];end;gp=bc[ie];ie=ie+1;do(qe)[1]=qe[1][gp[0X00001]];end;ie=ie+1;EM=jc[1];do qe[0X2]=EM[1][EM[2]];end;local nM=(0X1);do ie=ie+0X1;end;ie=ie+1;ie=ie+1;(qe[nM])(qe[nM+0X0001]);ze=nM-0x1;ie=ie+0X1;ie=ie+1;gp=bc[ie];ie=ie+0x1;do ie=gp[5];end;end;else(qe)[0X0c]=nil;do ie=ie+0x00001;end;(qe)[0]=qe[0XC];gp=bc[ie];ie=ie+1;ie=gp[5];end;end;else if tp<20 then if not(tp>=18)then(qe)[4]=pe[gp[0X6]];ie=ie+0X1;ie=ie+0X1;gp=bc[ie];do ie=ie+0X1;end;(qe)[4]=qe[0x4][gp[1]];ie=ie+0X00001;ie=ie+1;do gp=bc[ie];end;ie=ie+0X1;if not(not qe[4])then else ie=gp[5];end;else do if tp==0x13 then qe[6]=pe[gp[6]];ie=ie+1;do ie=ie+1;end;gp=bc[ie];ie=ie+0X1;qe[0X6]=qe[0X6][gp[1]];ie=ie+1;ie=ie+1;gp=bc[ie];do ie=ie+1;end;if qe[6]~=gp[0x1]then ie=gp[2];end;else(qe)[0X0009]=qe[5][gp[1]];do gp=bc[ie];end;do ie=ie+0x1;end;do qe[0x9]=qe[9][gp[1]];end;ie=ie+0X1;ie=ie+1;gp=bc[ie];do ie=ie+1;end;if not(gp[6]<=qe[0x9])then do ie=gp[0x0002];end;end;end;end;end;else if not(tp<21)then if tp==22 then for cC=gp[2],gp[5]do(qe)[cC]=nil;end;else do qe[0X009]=true;end;gp=bc[ie];ie=ie+1;(pe)[gp[6]]=qe[0X9];ie=ie+1;qe[0x9]=false;gp=bc[ie];local UG=(10);ie=ie+0X00001;local EG=(0X00);pe[gp[6]]=qe[9];ie=ie+1;(qe)[0X0009]=nil;ie=ie+0X001;qe[0X0]=qe[9];gp=bc[ie];ie=ie+1;(qe)[9]=pe[gp[6]];do gp=bc[ie];end;ie=ie+0x00001;qe[10]=pe[gp[6]];gp=bc[ie];ie=ie+0X1;(qe)[11]=pe[gp[6]];gp=bc[ie];do ie=ie+1;end;(qe)[11]=qe[0x0B][gp[1]];ie=ie+0x1;ie=ie+1;ie=ie+1;local MG=(0X02);if MG~=0 then do ze=UG+MG-1;end;end;local CG,VG=nil,(nil);do if MG~=0X1 then CG,VG=q3(qe[UG](E(qe,UG+0X1,ze)));else CG,VG=q3(qe[UG]());end;end;if EG~=1 then if EG~=0 then CG=UG+EG-2;ze=CG+0X1;else do CG=CG+UG-0X00001;end;ze=CG;end;local fp=(0x0);for Ah=UG,CG do fp=fp+1;do(qe)[Ah]=VG[fp];end;end;else ze=UG-0X1;end;ie=ie+1;do ie=ie+0X1;end;ie=ie+0X0001;do UG=0X09;end;(qe[UG])(E(qe,UG+1,ze));do ze=UG-0x01;end;gp=bc[ie];do ie=ie+0X1;end;(qe)[0X9]=pe[gp[0x0006]];do ie=ie+0X1;end;ie=ie+0X1;ie=ie+0X1;qe[0Xa]=true;ie=ie+0X1;UG=9;(qe[UG])(qe[UG+0x1]);ze=UG-1;gp=bc[ie];do ie=ie+0x1;end;ie=gp[0X05];end;else local du=jc[0X000];(qe)[0X03]=du[0X0001][du[0X2]];do gp=bc[ie];end;ie=ie+1;qe[0X00003]=qe[3][gp[1]];do gp=bc[ie];end;do ie=ie+0x01;end;if not(not qe[0X00003])then else do ie=gp[5];end;end;end;end;end;else if not(tp<5)then if not(tp>=8)then if not(tp<6)then do if tp==0X0007 then qe[4]=pe[gp[6]];gp=bc[ie];do ie=ie+0X1;end;qe[0X4]=qe[0X4][gp[0X01]];ie=ie+0X0001;ie=ie+1;do gp=bc[ie];end;do ie=ie+0X1;end;(qe)[0x5]=gp[0x06];do gp=bc[ie];end;ie=ie+1;(qe)[0X6]=gp[0X6];gp=bc[ie];ie=ie+0x1;do qe[7]=gp[6];end;local wk=(4);ie=ie+0X1;ze=wk+4-1;qe[wk]=qe[wk](E(qe,wk+1,ze));do ze=wk;end;gp=bc[ie];do ie=ie+0x01;end;do ie=gp[0x5];end;else qe[gp[0x2]]=qe[gp[5]]<=qe[gp[0X004]];end;end;else local JP=gp[2];local BP,pP,WP=qe[JP]();do if not(BP)then else do(qe)[JP+1]=pP;end;do(qe)[JP+0X2]=WP;end;ie=gp[0X5];end;end;end;else if tp<0X9 then(qe)[8]=qe[6][gp[1]];do ie=ie+1;end;ie=ie+1;do gp=bc[ie];end;ie=ie+1;qe[0x8]=qe[8][gp[0X01]];do ie=ie+0X0001;end;ie=ie+1;do ie=ie+0X1;end;(qe)[0X7]=qe[0X7]>qe[8];gp=bc[ie];ie=ie+1;ie=gp[0X5];else if tp==10 then local Fi=(jc[0X01]);(qe)[0x4]=Fi[0x00001][Fi[0X2]];do ie=ie+0X00001;end;ie=ie+0X0001;gp=bc[ie];ie=ie+1;(pe)[gp[0X06]]=qe[0X0004];ie=ie+0X1;Fi=jc[0x2];(qe)[4]=Fi[1][Fi[2]];do gp=bc[ie];end;ie=ie+0x0001;do if not(not qe[4])then else do ie=gp[5];end;end;end;else(qe)[gp[0X2]]=qe[gp[0X00005]];end;end;end;else if not(tp<2)then if tp>=0X3 then if tp==4 then(qe)[0X7]=pe[gp[0X0006]];gp=bc[ie];do ie=ie+0X1;end;qe[7]=qe[7][gp[1]];ie=ie+0X1;ie=ie+0x001;gp=bc[ie];ie=ie+0X1;do if not(qe[0x7])then else ie=gp[5];end;end;else(qe)[gp[0X2]]=gp[0X00006];end;else(qe)[0X10]=qe[0X9][gp[0x1]];do ie=ie+1;end;qe[0X010]=qe[16][qe[13]];gp=bc[ie];ie=ie+0x1;do(qe)[0X011]=qe[6][gp[1]];end;gp=bc[ie];ie=ie+1;(qe)[17]=qe[0X11][gp[1]];do gp=bc[ie];end;ie=ie+1;if not(not(qe[0X10]<=qe[0X00011]))then else do ie=gp[0X0002];end;end;end;else if tp~=0x1 then do(qe)[0x7]=pe[gp[0X6]];end;ie=ie+1;ze=7;(qe)[ze]=qe[ze]();do gp=bc[ie];end;ie=ie+1;if qe[7]then ie=gp[5];end;else qe[0x9]=pe[gp[0x6]];ie=ie+1;do ze=9;end;(qe[ze])();ze=ze-1;ie=ie+0X1;ie=ie+0X1;do gp=bc[ie];end;do ie=ie+1;end;ie=gp[5];end;end;end;end;else do if tp>=0X22 then do if tp>=40 then if tp>=43 then do if not(tp<44)then if tp~=0X02d then qe[0X00A]=qe[0X10];gp=bc[ie];ie=ie+1;local Om=(jc[0X3]);qe[0X000010]=pe[gp[6]];ie=ie+0X1;(qe)[17]=Om[1][Om[2]];gp=bc[ie];ie=ie+1;(qe)[17]=qe[0x11][gp[1]];do ie=ie+1;end;do ie=ie+0X1;end;gp=bc[ie];do ie=ie+1;end;do qe[17]=qe[0x11][gp[0x0001]];end;local Rm=(0x010);gp=bc[ie];do ie=ie+0X1;end;qe[17]=qe[0X000011][gp[1]];ie=ie+1;ie=ie+1;ie=ie+0X00001;qe[18]=qe[0XD];ie=ie+0X1;qe[Rm](qe[Rm+1],qe[Rm+0X0002]);ze=Rm-0X1;gp=bc[ie];ie=ie+1;(qe)[16]=pe[gp[6]];ie=ie+0X00001;ze=16;do(qe)[ze]=qe[ze]();end;do ie=ie+0x1;end;ie=ie+1;gp=bc[ie];ie=ie+0x0001;do(pe)[gp[0X6]]=qe[0X10];end;gp=bc[ie];do ie=ie+1;end;ie=gp[5];else local Bg=jc[0X0];do qe[0X7]=Bg[0X1][Bg[2]];end;ie=ie+0X1;do ie=ie+1;end;gp=bc[ie];ie=ie+0X1;do qe[0x7]=qe[7][gp[1]];end;do gp=bc[ie];end;ie=ie+0X1;if not(qe[7])then else ie=gp[5];end;end;else local sV=(gp[0x002]);for Gg=sV,sV+(gp[5]-1)do qe[Gg]=de[ac+(Gg-sV)+1];end;end;end;else if tp<41 then do qe[0X6]=pe[gp[0X6]];end;gp=bc[ie];do ie=ie+1;end;do qe[7]=pe[gp[0X6]];end;gp=bc[ie];local ye=6;ie=ie+1;do(qe)[7]=qe[7][gp[0x1]];end;do ie=ie+0X00001;end;do qe[ye]=qe[ye](qe[ye+0x1]);end;ze=ye;gp=bc[ie];ie=ie+1;qe[7]=pe[gp[6]];ie=ie+0X1;ie=ie+1;gp=bc[ie];ie=ie+1;(qe)[0X7]=qe[0X0007][gp[1]];gp=bc[ie];ie=ie+0X01;do if not(not qe[0x7])then else do ie=gp[5];end;end;end;else if tp==42 then qe[0X5]=pe[gp[6]];ie=ie+1;do ie=ie+0X0001;end;do ie=ie+1;end;ze=0X00005;(qe)[ze]=qe[ze]();ie=ie+1;do ie=ie+1;end;gp=bc[ie];ie=ie+0X01;if not qe[0X05]then ie=gp[5];end;else(qe)[0x00004]=qe[0X00003];do gp=bc[ie];end;ie=ie+0X1;pe[gp[6]]=qe[0X4];gp=bc[ie];ie=ie+1;do(qe)[4]=pe[gp[0X006]];end;ie=ie+0x01;ie=ie+1;ie=ie+0X00001;(qe)[5]=qe[3];gp=bc[ie];ie=ie+1;qe[6]=pe[gp[0X6]];ie=ie+1;ie=ie+0X1;ie=ie+0X1;local rP=4;(qe[rP])(qe[rP+1],qe[rP+0X2]);ze=rP-1;gp=bc[ie];ie=ie+1;ie=gp[0X5];end;end;end;else if not(tp>=0x25)then do if not(tp>=35)then qe[7]=pe[gp[0x6]];gp=bc[ie];ie=ie+0X0001;do qe[0x7]=qe[7][gp[1]];end;do gp=bc[ie];end;ie=ie+0X001;do if not(qe[0X7])then else ie=gp[5];end;end;else if tp==0X0024 then qe[0XC]=pe[gp[6]];ie=ie+1;ie=ie+1;ie=ie+0X1;ze=0X000C;do qe[ze]=qe[ze]();end;ie=ie+1;ie=ie+1;gp=bc[ie];ie=ie+0X001;qe[0x00D]=pe[gp[0X0006]];ie=ie+0X1;(qe)[0x0000C]=qe[0Xc]-qe[0X000d];gp=bc[ie];do ie=ie+0x1;end;if not(not(gp[0x6]<qe[12]))then else ie=gp[2];end;else local kG=jc[2];qe[4]=kG[0x1][kG[0x2]];local oG=(4);do gp=bc[ie];end;do ie=ie+0x1;end;local LG=qe[4];(qe)[oG+0x1]=LG;qe[oG]=LG[gp[0X00001]];ie=ie+0x1;oG=0X4;(qe[oG])(qe[oG+0X1]);do ze=oG-1;end;ie=ie+1;ie=ie+1;do gp=bc[ie];end;ie=ie+0x1;ie=gp[0x5];end;end;end;else if tp>=0X026 then do if tp~=0X0027 then if not(not qe[gp[2]])then else ie=gp[0X5];end;else qe[0X8]=pe[gp[6]];ie=ie+0x1;ie=ie+1;gp=bc[ie];ie=ie+0X1;do qe[8]=qe[0x8][gp[0X1]];end;gp=bc[ie];do ie=ie+1;end;ie=gp[5];end;end;else do qe[16]=gp[0X6];end;ie=ie+0X1;qe[0X0]=qe[16];gp=bc[ie];ie=ie+1;qe[0x010]=pe[gp[6]];local mx=jc[0X00003];do ie=ie+1;end;do ie=ie+0X001;end;ie=ie+1;do qe[0X11]=mx[0X1][mx[0X00002]];end;do gp=bc[ie];end;ie=ie+1;(qe)[17]=qe[17][gp[1]];do gp=bc[ie];end;ie=ie+0X1;qe[17]=qe[17][gp[0X1]];local Yx=(16);do ie=ie+1;end;(qe)[Yx]=qe[Yx](qe[Yx+0X1]);do ze=Yx;end;do ie=ie+1;end;do ie=ie+0X0001;end;gp=bc[ie];ie=ie+1;if not(not(qe[0X10]<gp[1]))then else ie=gp[0x2];end;end;end;end;end;else if not(tp<28)then if tp>=31 then if tp<0X20 then(qe)[0x6]=pe[gp[6]];ie=ie+0X1;do ie=ie+0X1;end;local U7=(jc[1]);ie=ie+1;qe[7]=U7[0X001][U7[0X2]];ie=ie+0X1;ie=ie+1;ie=ie+1;local a7=0x6;(qe)[0X08]=nil;gp=bc[ie];ie=ie+0X1;(qe)[0x9]=gp[0X06];ie=ie+1;ze=a7+0X4-1;qe[a7](E(qe,a7+0x1,ze));do ze=a7-1;end;ie=ie+0X1;do ie=ie+1;end;gp=bc[ie];ie=ie+0X1;ie=gp[0X5];else if tp==0X00021 then(qe)[0X5]=pe[gp[6]];ie=ie+0x1;ie=ie+1;local hM=(jc[0X3]);gp=bc[ie];do ie=ie+0X1;end;qe[6]=pe[gp[6]];local OM=(0x09);gp=bc[ie];ie=ie+1;do qe[0X6]=qe[6][gp[0X1]];end;do ie=ie+0X1;end;do qe[0X07]=hM[1][hM[0X00002]];end;ie=ie+0X0001;ie=ie+0x1;do gp=bc[ie];end;do ie=ie+0x0001;end;qe[0X007]=qe[7][gp[1]];gp=bc[ie];ie=ie+0X1;(qe)[0X7]=qe[7][gp[1]];do ie=ie+1;end;do(qe)[0X7]=qe[0X0007]+qe[4];end;gp=bc[ie];ie=ie+1;(qe)[0X8]=pe[gp[0x6]];gp=bc[ie];do ie=ie+1;end;(qe)[0X08]=qe[0X08][gp[0X1]];gp=bc[ie];ie=ie+1;qe[9]=pe[gp[6]];ie=ie+0X0001;ie=ie+0X00001;gp=bc[ie];ie=ie+1;qe[9]=qe[9][gp[1]];gp=bc[ie];ie=ie+1;do(qe)[10]=gp[0X6];end;gp=bc[ie];ie=ie+0X1;qe[0x0000b]=gp[6];ie=ie+1;(qe)[OM]=qe[OM](qe[OM+1],qe[OM+2]);ze=OM;do gp=bc[ie];end;ie=ie+1;qe[9]=qe[0X9]/gp[1];gp=bc[ie];ie=ie+0X0001;(qe)[10]=gp[0X6];gp=bc[ie];ie=ie+1;(qe)[0XB]=pe[gp[0x00006]];gp=bc[ie];local bM=(nil);ie=ie+0X1;qe[0x0000b]=qe[11][gp[1]];do gp=bc[ie];end;do ie=ie+0X1;end;qe[0XC]=gp[0X6];do gp=bc[ie];end;do ie=ie+0X1;end;do(qe)[0XD]=gp[0X00006];end;ie=ie+1;OM=11;(qe)[OM]=qe[OM](qe[OM+0X0001],qe[OM+2]);ze=OM;ie=ie+1;ie=ie+1;gp=bc[ie];ie=ie+0X0001;do qe[11]=qe[0X0b]/gp[0X1];end;do ie=ie+1;end;OM=8;ze=OM+4-1;do qe[OM]=qe[OM](E(qe,OM+1,ze));end;ze=OM;ie=ie+1;do ie=ie+0x00001;end;do ie=ie+0X1;end;qe[0X00007]=qe[0X7]+qe[0X8];ie=ie+1;hM=jc[0X00003];qe[8]=hM[1][hM[2]];do gp=bc[ie];end;ie=ie+1;qe[8]=qe[0X8][gp[1]];do gp=bc[ie];end;do ie=ie+1;end;(qe)[0X00008]=qe[0x008][gp[0X001]];ie=ie+1;do OM=6;end;(qe)[OM]=qe[OM](qe[OM+0x1],qe[OM+0X2]);ze=OM;ie=ie+0x001;ie=ie+1;do ie=ie+1;end;do qe[0X07]=true;end;do gp=bc[ie];end;ie=ie+0x1;local JM=(Uc[gp[5]]);local xM=(JM[0X5]);local qM=#xM;if not(qM>0)then else do bM={};end;for PT=1,qM do local UT=(xM[PT]);if UT[0X1]~=0 then bM[PT-0X1]=jc[UT[2]];else bM[PT-0X0001]={qe,UT[0x002]};end;end;(S)(Lc,bM);end;qe[8]=e3(JM,bM,pe);ie=ie+1;hM=jc[0];(qe)[9]=hM[1][hM[2]];do gp=bc[ie];end;ie=ie+0X1;do(qe)[0X9]=qe[9][gp[0X1]];end;ie=ie+0x001;OM=5;ze=OM+0X0005-0X01;qe[OM](E(qe,OM+1,ze));ze=OM-1;do ie=ie+1;end;ie=ie+1;gp=bc[ie];ie=ie+0X1;(qe)[0X005]=pe[gp[6]];ie=ie+1;hM=jc[0X3];(qe)[6]=hM[1][hM[0X2]];gp=bc[ie];do ie=ie+0x00001;end;qe[6]=qe[6][gp[0X1]];ie=ie+0X1;OM=5;do(qe)[OM]=qe[OM](qe[OM+0x1]);end;ze=OM;ie=ie+1;ie=ie+1;gp=bc[ie];ie=ie+1;if not qe[0X0005]then ie=gp[5];end;else qe[0X5]=pe[gp[0X06]];ie=ie+0x1;ie=ie+0X1;ie=ie+0x1;ze=0X005;do(qe)[ze]=qe[ze]();end;ie=ie+0X01;ie=ie+0x1;ie=ie+1;qe[5]=qe[0X0005]-qe[0X2];gp=bc[ie];ie=ie+1;do if not(not(gp[0X06]<qe[0X005]))then else ie=gp[0X2];end;end;end;end;else if not(tp<0X1D)then if tp~=0X0001e then qe[gp[2]]=w(qe[gp[5]],qe[gp[4]]);else do qe[5]=pe[gp[0X6]];end;ie=ie+1;do ie=ie+1;end;ie=ie+0X00001;ze=5;(qe)[ze]=qe[ze]();ie=ie+1;ie=ie+1;do ie=ie+0X1;end;do(qe)[0X02]=qe[5];end;gp=bc[ie];ie=ie+1;do qe[0X00005]=qe[0x01]+gp[1];end;ie=ie+1;qe[1]=qe[0X5];gp=bc[ie];ie=ie+0X1;(qe)[5]=pe[gp[0X6]];do ie=ie+0X1;end;qe[0X5]=#qe[0X05];gp=bc[ie];ie=ie+0X1;if not(not(qe[0X005]<qe[0x1]))then else do ie=gp[2];end;end;end;else(qe)[16]=pe[gp[0x6]];local Tc=0X13;ie=ie+0X01;ie=ie+0x1;do gp=bc[ie];end;do ie=ie+0X001;end;local mc=jc[3];do qe[0X10]=qe[0X0010][gp[0X1]];end;do ie=ie+0X1;end;ie=ie+1;gp=bc[ie];ie=ie+0X00001;qe[0x11]=pe[gp[6]];ie=ie+1;do ie=ie+1;end;gp=bc[ie];ie=ie+1;do qe[17]=qe[0X11][gp[0X01]];end;ie=ie+1;ie=ie+0X1;ie=ie+0x1;(qe)[18]=mc[1][mc[0X2]];ie=ie+0X1;do ie=ie+1;end;gp=bc[ie];ie=ie+0X0001;do(qe)[18]=qe[18][gp[0x1]];end;gp=bc[ie];ie=ie+1;do(qe)[18]=qe[18][gp[0X1]];end;ie=ie+1;do ie=ie+1;end;do gp=bc[ie];end;ie=ie+1;qe[19]=pe[gp[0X6]];ie=ie+1;ie=ie+1;gp=bc[ie];ie=ie+0x001;(qe)[0x13]=qe[0X000013][gp[1]];ie=ie+1;ie=ie+0x001;gp=bc[ie];ie=ie+0X1;qe[20]=gp[6];gp=bc[ie];do ie=ie+1;end;do(qe)[0X15]=gp[6];end;gp=bc[ie];ie=ie+0x00001;(qe)[22]=gp[6];ie=ie+0X1;ze=Tc+0X00004-1;(qe)[Tc]=qe[Tc](E(qe,Tc+1,ze));ze=Tc;ie=ie+1;qe[0X12]=qe[0X12]+qe[0X00013];ie=ie+1;mc=jc[3];(qe)[0x013]=mc[0X1][mc[2]];do ie=ie+1;end;ie=ie+0x1;do gp=bc[ie];end;do ie=ie+1;end;qe[0X13]=qe[0x13][gp[0X1]];gp=bc[ie];ie=ie+0X01;(qe)[19]=qe[0X13][gp[0x1]];ie=ie+0X1;Tc=0X11;qe[Tc]=qe[Tc](qe[Tc+0x0001],qe[Tc+2]);ze=Tc;ie=ie+0X1;ie=ie+0X1;gp=bc[ie];ie=ie+1;(qe[16])[gp[6]]=qe[0x00011];do ie=ie+0X00001;end;(qe)[16]=qe[10];gp=bc[ie];ie=ie+1;do if not(qe[16])then else ie=gp[5];end;end;end;end;else if tp<25 then if tp==0x018 then repeat local x5,K5=Lc,qe;if#x5>0 then local Qu=({});do for yr,cr in M,x5 do do for vx,Xx in M,cr do if Xx[1]==K5 and Xx[0X00002]>=0 then local dR=Xx[2];if not Qu[dR]then Qu[dR]={K5[dR]};end;do Xx[1]=Qu[dR];end;(Xx)[0X2]=0X1;end;end;end;end;end;end;until true;return;else do qe[6]=pe[gp[0X00006]];end;ie=ie+1;ie=ie+0X1;gp=bc[ie];do ie=ie+0X1;end;(qe)[6]=qe[0X00006][gp[0X00001]];ie=ie+0X1;ie=ie+1;do gp=bc[ie];end;ie=ie+0X1;do if not(not qe[6])then else ie=gp[0X5];end;end;end;else do if not(tp<0X1a)then if tp~=0X1b then(qe)[6]=pe[gp[6]];ie=ie+1;ie=ie+1;gp=bc[ie];ie=ie+0X01;local pi=jc[0x00000];do(qe)[0X00007]=pe[gp[0X6]];end;do ie=ie+1;end;qe[8]=pi[0x1][pi[2]];ie=ie+0X0001;ie=ie+1;gp=bc[ie];ie=ie+0X1;qe[0X8]=qe[0X8][gp[0x0001]];do gp=bc[ie];end;do ie=ie+0X1;end;do if qe[8]then do ie=gp[5];end;end;end;else local TG=jc[3];(qe)[0x6]=TG[1][TG[2]];ie=ie+0X001;do ie=ie+0x00001;end;gp=bc[ie];ie=ie+1;do qe[0X6]=qe[0X6][gp[0X0001]];end;do ie=ie+1;end;ie=ie+1;gp=bc[ie];ie=ie+0X00001;do if not(qe[0X6]<=gp[1])then else ie=gp[2];end;end;end;else local Gu=jc[0X0003];(qe)[8]=Gu[1][Gu[2]];gp=bc[ie];ie=ie+0X1;do(qe)[0X8]=qe[8][gp[1]];end;ie=ie+0X1;ie=ie+1;do ie=ie+0X1;end;Gu=jc[0X3];qe[9]=Gu[0X01][Gu[0X2]];gp=bc[ie];do ie=ie+0x1;end;do qe[9]=qe[0X0009][gp[0X1]];end;gp=bc[ie];ie=ie+1;qe[0xa]=pe[gp[6]];ie=ie+0X0001;ie=ie+0x1;do gp=bc[ie];end;ie=ie+0X01;qe[0X0000A]=qe[10][gp[1]];do ie=ie+0X01;end;ie=ie+1;gp=bc[ie];ie=ie+1;do if qe[0Xa]then do ie=gp[5];end;end;end;end;end;end;end;end;end;end;end;end;end;end);if be then if xe then if Te~=1 then return qe[Ae](E(qe,Ae+1,ze));else return qe[Ae]();end;elseif Ae then do return E(qe,Ae,Te);end;end;else if V(xe)=="string"then do if not(r(xe,'a\116\116\101m\112t\032to y\105eld\032a\099\114o\115s met\097me\116\104o\100/\067\037\045\099\097l\108 \098ound\097\114\121'))then else return coroutine.yield();end;end;if r(xe,'^.-\058%d+\058 ')then(q)('Luraph S\099ri\112\116:'..(Qc[ie-1]or"(internal)")..": "..u(xe),0X00000);else(q)(xe,0X00000);end;else q(xe,0x00);end;end;end;end;end;else if Sc==111 then ic=function(...)local fD,OD=0X00000,({});local bD={[2]=Vc,[1]=OD};local eD=((k and k()or _ENV));local pD,jD=q3(...);local tD=((eD==H and fc or eD));pD=pD-1;do for IZ=0,pD do do if not(ac>IZ)then break;else OD[IZ]=jD[IZ+1];end;end;end;end;local WD=0X1;if not nc then jD=nil;elseif Ac then do(OD)[ac]={n=pD>=ac and pD-ac+0X1 or 0x000,E(jD,ac+1,pD+0X1)};end;end;if tD==eD then else if not(s)then _ENV=tD;else(s)(ic,tD);end;end;local ND,AD,SD,xD=c(function()while true do local NU=(bc[WD]);local DU=NU[3];WD=WD+1;if DU>=6 then if not(DU<0X9)then do if DU>=0x0B then if DU~=0x00C then(OD)[NU[2]]={E({},0X1,NU[5])};else WD=NU[5];end;else if DU~=0X0000a then do OD[0x0]=tD[NU[0X006]];end;do WD=WD+0x1;end;WD=WD+0X00001;NU=bc[WD];do WD=WD+1;end;(OD)[0X1]=tD[NU[0x6]];WD=WD+0X00001;do WD=WD+0x1;end;NU=bc[WD];local Am=1;WD=WD+1;(OD)[0X2]=NU[0x06];WD=WD+0X1;OD[3]=true;do WD=WD+0X1;end;OD[Am]=OD[Am](OD[Am+0X1],OD[Am+2]);fD=Am;WD=WD+0X001;do WD=WD+0x001;end;NU=bc[WD];WD=WD+0X1;(OD)[1]=OD[1][NU[0X1]];do NU=bc[WD];end;WD=WD+0X1;(OD)[1]=OD[1][NU[1]];do NU=bc[WD];end;WD=WD+0X1;(OD[0x0])[NU[6]]=OD[0X1];WD=WD+0x1;do repeat local d2,D2=Lc,(OD);if#d2>0 then local EP=({});for Y6,Q6 in M,d2 do for Wg,tg in M,Q6 do if tg[0X1]==D2 and tg[2]>=0 then local lu=(tg[0X2]);if not EP[lu]then do EP[lu]={D2[lu]};end;end;do tg[0X1]=EP[lu];end;(tg)[0X2]=1;end;end;end;end;until true;end;return;else local zw=(OD[NU[5]]);local Mw=NU[0X02];OD[Mw+1]=zw;OD[Mw]=zw[NU[1]];end;end;end;else do if not(DU>=0x7)then(OD)[NU[2]]=tD[NU[6]];else if DU==8 then OD[NU[2]]=OD[NU[0X5]]+OD[NU[4]];else for K9=NU[0X0002],NU[0X5]do(OD)[K9]=nil;end;end;end;end;end;else if not(DU<3)then if DU>=0X4 then do if DU~=0x5 then OD[NU[2]]=NU[0X6];else(OD)[NU[2]]=T(OD[NU[5]],OD[NU[0x4]]);end;end;else local t1=nil;local K1=(Uc[NU[5]]);local o1=(K1[0X5]);local v1=(#o1);if not(v1>0X00000)then else t1={};for Q_=0X00001,v1 do local N_=o1[Q_];do if N_[1]==0X0000 then(t1)[Q_-0x01]={OD,N_[0X0002]};else do t1[Q_-0x1]=jc[N_[2]];end;end;end;end;S(Lc,t1);end;(OD)[NU[2]]=e3(K1,t1,tD);end;else if DU>=1 then if DU~=2 then(OD)[NU[0X2]]=OD[NU[5]]/OD[NU[0X4]];else OD[NU[0X2]]=not OD[NU[5]];end;else end;end;end;end;end);if not(ND)then do if V(AD)=="\115trin\103"then do if r(AD,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;end;if r(AD,'^\046-:\037\100\043: ')then q("Luraph Script:"..(Qc[WD-0X1]or'(i\110ter\110\097\108)')..": "..u(AD),0x0);else q(AD,0);end;else q(AD,0x0);end;end;else if AD then if xD~=0X1 then return OD[SD](E(OD,SD+0X0001,fD));else return OD[SD]();end;elseif SD then return E(OD,SD,xD);end;end;end;else ic=function(...)local TY=(0);local ZY,kY=1,{};local lY=({[2]=Vc,[1]=kY});local cY=((k and k()or _ENV));local hY,QY=q3(...);hY=hY-1;for O_=0,hY do if ac>O_ then do kY[O_]=QY[O_+0x0001];end;else break;end;end;local YY=((cY==H and fc or cY));do if not nc then QY=nil;elseif Ac then do(kY)[ac]={n=hY>=ac and hY-ac+1 or 0,E(QY,ac+0X001,hY+1)};end;end;end;if YY==cY then else if not(s)then do _ENV=YY;end;else(s)(ic,YY);end;end;local UY,uY,CY,zY=c(function()do while true do local Mf=bc[ZY];local Nf=Mf[0X00003];do ZY=ZY+0x1;end;if not(Nf<0x007)then if not(Nf>=11)then if not(Nf>=0X9)then if Nf==8 then do(kY)[Mf[0X2]]=YY[Mf[0X6]];end;else(lY)[Mf[5]]=kY[Mf[0x002]];end;else if Nf==0Xa then kY[Mf[0X02]]=kY[Mf[0X5]]<kY[Mf[0x4]];else local XF=(Mf[0X0002]);local qF,DF=kY[XF]();if not(qF)then else for gX=1,Mf[4]do(kY)[XF+gX]=DF[gX];end;do ZY=Mf[0X5];end;end;end;end;else if Nf>=0XD then do if Nf~=14 then do kY[0X0]=YY[Mf[6]];end;Mf=bc[ZY];local NZ=kY[0x00000];ZY=ZY+0X1;local SZ=(0);kY[SZ+1]=NZ;kY[SZ]=NZ[Mf[0X001]];Mf=bc[ZY];ZY=ZY+1;do kY[0X0002]=Mf[0X006];end;do ZY=ZY+0X1;end;SZ=0X000;kY[SZ]=kY[SZ](kY[SZ+0X1],kY[SZ+0X02]);TY=SZ;ZY=ZY+0X01;ZY=ZY+1;Mf=bc[ZY];do ZY=ZY+1;end;(kY)[1]=YY[Mf[6]];ZY=ZY+0x0001;ZY=ZY+1;do Mf=bc[ZY];end;ZY=ZY+1;kY[1]=kY[1][Mf[1]];Mf=bc[ZY];local eZ=(Uc[Mf[0X00005]]);local YZ=(eZ[5]);ZY=ZY+0X1;local TZ,iZ=nil,#YZ;do if not(iZ>0X0)then else TZ={};for Ky=0X1,iZ do local Uy=(YZ[Ky]);if Uy[0X1]==0 then TZ[Ky-0X1]={kY,Uy[2]};else TZ[Ky-0X1]=jc[Uy[0X2]];end;end;S(Lc,TZ);end;end;(kY)[0X02]=e3(eZ,TZ,YY);ZY=ZY+0x0001;SZ=1;kY[SZ](kY[SZ+1]);TY=SZ-1;ZY=ZY+0X1;repeat local FB,dB=Lc,kY;do if#FB>0X0 then local aq={};for Oi,pi in M,FB do for Wf,Ff in M,pi do if not(Ff[0X1]==dB and Ff[0X02]>=0X0000)then else local lv=(Ff[0x2]);if not aq[lv]then(aq)[lv]={dB[lv]};end;Ff[1]=aq[lv];(Ff)[2]=1;end;end;end;end;end;until true;do return;end;else local zV=(Uc[Mf[0X5]]);local JV,qV=zV[5],nil;local XV=#JV;do if not(XV>0X0)then else do qV={};end;for f4=0x1,XV do local N4=(JV[f4]);do if N4[1]==0X0 then do qV[f4-1]={kY,N4[0X02]};end;else qV[f4-1]=jc[N4[2]];end;end;end;(S)(Lc,qV);end;end;kY[Mf[0X2]]=e3(zV,qV,YY);end;end;else if Nf==0X00c then kY[Mf[2]]=kY[Mf[5]]>=kY[Mf[0X0004]];else for Jf=Mf[0x0002],Mf[0X05]do(kY)[Jf]=nil;end;end;end;end;else if Nf<0x00003 then if not(Nf>=1)then local B_,a_=Mf[2],(kY[Mf[5]]);do(kY)[B_+0X1]=a_;end;kY[B_]=a_[Mf[1]];else if Nf~=0X2 then kY[Mf[2]]={E({},1,Mf[0X5])};else end;end;else if Nf<5 then do if Nf~=0X04 then kY[Mf[2]]=Mf[0X6];else kY[Mf[2]]=J(kY[Mf[0X5]],kY[Mf[0X004]]);end;end;else if Nf~=0X006 then do(kY)[Mf[0X2]]=kY[Mf[0X5]]^kY[Mf[0X4]];end;else ZY=Mf[0x5];end;end;end;end;end;end;end);if UY then if uY then do if zY~=1 then return kY[CY](E(kY,CY+0x01,TY));else return kY[CY]();end;end;elseif CY then return E(kY,CY,zY);end;else if V(uY)=="s\116r\105\110g"then if not(r(uY,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(uY,"^.-:%d+: "))then q(uY,0);else q('\076urap\104 \083cri\112t:'..(Qc[ZY-0X01]or"\040\105n\116e\114\110\097l)").."\058\032"..u(uY),0X0000);end;else(q)(uY,0X00);end;end;end;end;end;end;else if not(Sc<0X7A)then if Sc>=0X7c then if Sc==125 then ic=function(...)local CW,qW=0X00001,({});local ZW=(k and k()or _ENV);local aW=0X00;local yW=({[1]=qW,[2]=Vc});local eW,jW=q3(...);eW=eW-1;for ir=0X00000,eW do if not(ac>ir)then break;else(qW)[ir]=jW[ir+1];end;end;local BW=(ZW==H and fc or ZW);if not nc then jW=nil;elseif not(Ac)then else qW[ac]={n=eW>=ac and eW-ac+1 or 0,E(jW,ac+0X1,eW+1)};end;if BW==ZW then else if not(s)then _ENV=BW;else(s)(ic,BW);end;end;local IW,AW,tW,EW=c(function()while true do local oL=bc[CW];local pL=(oL[0X3]);CW=CW+0x0001;if pL>=6 then if pL<9 then do if pL<7 then local PC=qW[oL[5]]/qW[oL[4]];(qW)[oL[2]]=PC-PC%0X1;else if pL~=0x8 then qW[oL[2]][qW[oL[0x5]]]=qW[oL[0x0004]];else do CW=oL[0X00005];end;end;end;end;else do if pL<10 then local JE=(Uc[oL[5]]);local AE=(JE[5]);local xE,aE=#AE,nil;if not(xE>0)then else aE={};for W_=1,xE do local o_=(AE[W_]);if o_[0X1]~=0X0 then do(aE)[W_-1]=jc[o_[0x2]];end;else aE[W_-0X1]={qW,o_[2]};end;end;(S)(Lc,aE);end;(qW)[oL[2]]=e3(JE,aE,BW);else if pL~=11 then do yW[oL[5]]=qW[oL[2]];end;else(qW)[oL[2]]=v(qW[oL[5]],qW[oL[4]]);end;end;end;end;else do if pL<0x0003 then if pL<1 then do qW[0]=BW[oL[6]];end;CW=CW+0x00001;local da=(jc[0X0]);CW=CW+0X01;oL=bc[CW];do CW=CW+0X01;end;qW[0]=qW[0X00000][oL[1]];oL=bc[CW];do CW=CW+0X1;end;(qW)[0x0]=qW[0][oL[0x1]];CW=CW+1;(qW)[0x1]=da[1][da[0X00002]];oL=bc[CW];CW=CW+0X00001;(qW[0])[oL[6]]=qW[1];CW=CW+1;repeat local Zz,xz=Lc,qW;if#Zz>0X0 then local o1=({});for jz,tz in M,Zz do for AF,kF in M,tz do if kF[1]==xz and kF[0X2]>=0x0 then local Rq=kF[0X2];if not o1[Rq]then(o1)[Rq]={xz[Rq]};end;kF[0x1]=o1[Rq];kF[2]=0X0001;end;end;end;end;until true;do return;end;else if pL==0x2 then(qW)[oL[0X2]]=oL[0x0006];else qW[oL[2]]=BW[oL[0x6]];end;end;else if pL>=4 then if pL~=0X0005 then do(qW)[oL[0X002]]={E({},1,oL[0x05])};end;else if qW[oL[5]]==qW[oL[4]]then else CW=oL[0X2];end;end;else end;end;end;end;end;end);do if IW then if AW then do if EW~=0X01 then do return qW[tW](E(qW,tW+0X01,aW));end;else return qW[tW]();end;end;elseif tW then return E(qW,tW,EW);end;else do if V(AW)~="\115t\114\105\110\103"then(q)(AW,0X0000);else if not(r(AW,'att\101\109p\116 t\111 yi\101\108d acr\111ss me\116\097\109\101t\104\111d/C%-\099a\108l\032\098\111\117nda\114y'))then else return coroutine.yield();end;if not(r(AW,"^.-:%d+: "))then(q)(AW,0);else(q)("Luraph Script:"..(Qc[CW-1]or"(\105nte\114nal\041")..": "..u(AW),0X0);end;end;end;end;end;end;else do ic=function(...)local Mj,Zj=0X1,{};local ij=((k and k()or _ENV));local tj,oj=q3(...);local Jj=({[1]=Zj,[2]=Vc});tj=tj-0X01;for nG=0x0,tj do if not(ac>nG)then do break;end;else(Zj)[nG]=oj[nG+0X00001];end;end;local fj=(ij==H and fc or ij);if not nc then oj=nil;elseif not(Ac)then else Zj[ac]={n=tj>=ac and tj-ac+0X1 or 0,E(oj,ac+1,tj+1)};end;local Ej=0;if fj~=ij then if s then s(ic,fj);else _ENV=fj;end;end;local Uj,kj,bj,aj=c(function()while true do local xV=bc[Mj];local yV=(xV[0x3]);do Mj=Mj+0X1;end;do if yV<0X15 then if not(yV<0XA)then do if yV<15 then if not(yV<12)then if yV<13 then repeat local gL,WL=Lc,Zj;if not(#gL>0)then else local Xk=({});for Ee,oe in M,gL do for Yj,Pj in M,oe do do if not(Pj[0X001]==WL and Pj[2]>=0X00000)then else local fl=Pj[0X2];do if not Xk[fl]then(Xk)[fl]={WL[fl]};end;end;do(Pj)[0X1]=Xk[fl];end;(Pj)[0X02]=1;end;end;end;end;end;until true;do return;end;else if yV~=0Xe then do if not(xV[6]<Zj[xV[4]])then Mj=xV[0X2];end;end;else if Zj[xV[0X5]]~=xV[0X001]then else Mj=xV[2];end;end;end;else if yV==0xB then if not(xV[6]<=Zj[xV[0X4]])then do Mj=xV[2];end;end;else(Zj)[2]=fj[xV[6]];Mj=Mj+1;do Mj=Mj+0X01;end;xV=bc[Mj];do Mj=Mj+0X01;end;Zj[0X2][xV[6]]=xV[0x1];xV=bc[Mj];Mj=Mj+0X001;Mj=xV[0X0005];end;end;else if not(yV<18)then if not(yV>=19)then Zj[4]=fj[xV[0X006]];Mj=Mj+1;Mj=Mj+1;xV=bc[Mj];Mj=Mj+1;Zj[5]=xV[0X0006];Mj=Mj+0x01;(Zj)[6]=true;local fo=4;Mj=Mj+1;(Zj)[fo]=Zj[fo](Zj[fo+0x001],Zj[fo+2]);Ej=fo;xV=bc[Mj];do Mj=Mj+0X1;end;if not(not Zj[4])then else Mj=xV[5];end;else if yV~=0X14 then(Zj)[2]=fj[xV[0X6]];Mj=Mj+1;Mj=Mj+1;xV=bc[Mj];do Mj=Mj+0x1;end;Zj[0x00002]=Zj[0X2][xV[1]];Mj=Mj+1;Mj=Mj+0X1;xV=bc[Mj];Mj=Mj+0x1;if not(Zj[2])then else Mj=xV[0x5];end;else Zj[6]=Zj[4][xV[0X001]];Mj=Mj+0x1;Mj=Mj+1;xV=bc[Mj];Mj=Mj+1;(Zj)[0x006]=Zj[0X0006][xV[0x1]];Mj=Mj+1;Mj=Mj+1;xV=bc[Mj];do Mj=Mj+1;end;Mj=xV[0X5];end;end;else if not(yV<16)then if yV~=0X0011 then do Zj[0x2]=fj[xV[0X6]];end;do xV=bc[Mj];end;Mj=Mj+1;Zj[0X2]=Zj[0X2][xV[1]];do Mj=Mj+0X001;end;Mj=Mj+0X1;do xV=bc[Mj];end;do Mj=Mj+1;end;if not Zj[0X002]then Mj=xV[5];end;else Zj[0X0]=fj[xV[6]];xV=bc[Mj];local t1=0;Mj=Mj+0x0001;Zj[1]=fj[xV[0X6]];xV=bc[Mj];do Mj=Mj+1;end;do(Zj)[0X00002]=xV[6];end;Mj=Mj+1;Zj[3]=true;Mj=Mj+1;local g1,R1=3,(0X0004);do if R1~=0 then do Ej=t1+R1-1;end;end;end;local u1,r1=nil,(nil);if R1~=0X00001 then u1,r1=q3(Zj[t1](E(Zj,t1+1,Ej)));else u1,r1=q3(Zj[t1]());end;do if g1~=0x1 then if g1~=0 then u1=t1+g1-2;Ej=u1+1;else u1=u1+t1-0X1;Ej=u1;end;local tT=0x0;do for ua=t1,u1 do do tT=tT+0X1;end;Zj[ua]=r1[tT];end;end;else Ej=t1-1;end;end;xV=bc[Mj];Mj=Mj+0X001;if not(not Zj[0X0])then else Mj=xV[5];end;end;else(Zj)[0X6]=fj[xV[6]];Mj=Mj+1;Mj=Mj+0X1;Mj=Mj+0X1;Ej=6;(Zj)[Ej]=Zj[Ej]();Mj=Mj+0x1;Mj=Mj+0x00001;xV=bc[Mj];do Mj=Mj+1;end;if not(Zj[6])then else do Mj=xV[0X5];end;end;end;end;end;end;else do if not(yV<5)then if yV<7 then if yV~=0x00006 then Zj[0X0002]=fj[xV[6]];xV=bc[Mj];Mj=Mj+1;Zj[2]=Zj[0x2][xV[0X1]];xV=bc[Mj];Mj=Mj+1;if not Zj[2]then Mj=xV[5];end;else Zj[4]=true;Mj=Mj+1;(Zj)[2]=Zj[0x4];xV=bc[Mj];do Mj=Mj+1;end;(Zj)[4]=xV[0x6];Mj=Mj+0X1;Zj[3]=Zj[4];do xV=bc[Mj];end;Mj=Mj+0X1;Mj=xV[5];end;else if not(yV>=0x8)then if Zj[xV[2]]then Mj=xV[0X5];end;else do if yV==9 then Mj=xV[0X05];else Zj[xV[0x2]]=fj[xV[0x0006]];end;end;end;end;else if not(yV>=0X2)then do if yV==1 then do Zj[7]=fj[xV[6]];end;Mj=Mj+1;Mj=Mj+0X01;Mj=Mj+0X1;Ej=0X007;(Zj)[Ej]=Zj[Ej]();xV=bc[Mj];do Mj=Mj+0x1;end;do if not(Zj[7])then else do Mj=xV[5];end;end;end;else Zj[0X00005]=fj[xV[6]];do Mj=Mj+0X1;end;do Mj=Mj+0X001;end;xV=bc[Mj];Mj=Mj+0X001;Zj[5][xV[0X0006]]=xV[1];xV=bc[Mj];Mj=Mj+0x1;Mj=xV[0x0005];end;end;else if yV>=3 then if yV~=4 then do(Zj)[0x5]=fj[xV[6]];end;local Cz=5;Mj=Mj+1;(Zj)[6]=Zj[3];do Mj=Mj+0X1;end;(Zj)[Cz]=Zj[Cz](Zj[Cz+0X1]);do Ej=Cz;end;do Mj=Mj+1;end;do Mj=Mj+1;end;xV=bc[Mj];Mj=Mj+1;if Zj[5]~=xV[1]then Mj=xV[0X2];end;else local uM=(jc[0X00]);Zj[0X5]=uM[0X00001][uM[2]];local nM=Zj[5];Mj=Mj+0x00001;Mj=Mj+1;xV=bc[Mj];Mj=Mj+1;local ZM=0X5;Zj[ZM+1]=nM;Zj[ZM]=nM[xV[0X001]];Mj=Mj+0x1;ZM=5;(Zj[ZM])(Zj[ZM+1]);Ej=ZM-0X1;Mj=Mj+0X1;Mj=Mj+1;do xV=bc[Mj];end;Mj=Mj+0X00001;(Zj)[5]=fj[xV[6]];Mj=Mj+1;Mj=Mj+1;do Mj=Mj+0X1;end;Ej=0x05;(Zj[Ej])();Ej=Ej-1;local UM=(0X4);xV=bc[Mj];Mj=Mj+1;Zj[0x0005]=fj[xV[6]];xV=bc[Mj];do Mj=Mj+1;end;Zj[6]=xV[6];xV=bc[Mj];Mj=Mj+1;(Zj)[0x0007]=xV[0X0006];do Mj=Mj+1;end;ZM=0X5;(Zj[ZM])(Zj[ZM+0X01],Zj[ZM+2]);do Ej=ZM-1;end;Mj=Mj+1;Mj=Mj+1;xV=bc[Mj];Mj=Mj+0X1;do Zj[5]=fj[xV[0X6]];end;xV=bc[Mj];do Mj=Mj+0X1;end;(Zj)[0X00006]=xV[6];xV=bc[Mj];Mj=Mj+0X01;Zj[7]=fj[xV[6]];xV=bc[Mj];Mj=Mj+1;(Zj)[0X0007]=Zj[7][xV[0X1]];Mj=Mj+0x00001;Mj=Mj+1;do xV=bc[Mj];end;do Mj=Mj+0X01;end;(Zj)[8]=xV[6];xV=bc[Mj];Mj=Mj+1;Zj[0X0009]=xV[0X6];xV=bc[Mj];Mj=Mj+1;Zj[0X000a]=xV[6];Mj=Mj+1;ZM=7;local DM=(0X0);if UM~=0 then Ej=ZM+UM-1;end;local QM,VM=nil,(nil);if UM~=1 then QM,VM=q3(Zj[ZM](E(Zj,ZM+0X1,Ej)));else QM,VM=q3(Zj[ZM]());end;if DM~=0X1 then do if DM==0X00 then do QM=QM+ZM-0X1;end;Ej=QM;else QM=ZM+DM-2;Ej=QM+1;end;end;local A_=0x00;for Ha=ZM,QM do A_=A_+0x001;(Zj)[Ha]=VM[A_];end;else Ej=ZM-1;end;Mj=Mj+0X00001;ZM=0X5;(Zj[ZM])(E(Zj,ZM+1,Ej));Ej=ZM-1;Mj=Mj+1;Mj=Mj+0X1;Mj=Mj+1;uM=jc[0];do(Zj)[0X5]=uM[1][uM[2]];end;Mj=Mj+1;Mj=Mj+1;xV=bc[Mj];Mj=Mj+1;ZM=5;do nM=Zj[0X5];end;Zj[ZM+0x00001]=nM;Zj[ZM]=nM[xV[1]];Mj=Mj+0X00001;ZM=5;Zj[ZM](Zj[ZM+0X1]);Ej=ZM-1;do xV=bc[Mj];end;Mj=Mj+0X1;do Mj=xV[0X5];end;end;else Zj[5]=false;xV=bc[Mj];Mj=Mj+1;fj[xV[6]]=Zj[0X5];do xV=bc[Mj];end;Mj=Mj+0X00001;Zj[0X5]=fj[xV[0X0006]];do Mj=Mj+0X1;end;do Mj=Mj+1;end;xV=bc[Mj];Mj=Mj+0X1;do(Zj)[6]=fj[xV[0X6]];end;do xV=bc[Mj];end;local Eo=0X5;Mj=Mj+1;local so=(3);(Zj)[0x07]=xV[6];do Mj=Mj+0X1;end;local Go=(3);if Go==0X0 then else Ej=Eo+Go-0X1;end;local Vo,Uo=nil,nil;if Go~=1 then Vo,Uo=q3(Zj[Eo](E(Zj,Eo+1,Ej)));else do Vo,Uo=q3(Zj[Eo]());end;end;if so~=1 then do if so==0 then Vo=Vo+Eo-1;Ej=Vo;else Vo=Eo+so-2;Ej=Vo+1;end;end;local fX=(0);do for XB=Eo,Vo do fX=fX+1;do(Zj)[XB]=Uo[fX];end;end;end;else Ej=Eo-0X1;end;do xV=bc[Mj];end;do Mj=Mj+1;end;if not Zj[5]then Mj=xV[0X5];end;end;end;end;end;end;else do if not(yV>=0x20)then do if not(yV>=26)then if yV<23 then if yV~=0X00016 then Zj[2]=fj[xV[0X6]];Mj=Mj+0X0001;Mj=Mj+0x00001;xV=bc[Mj];Mj=Mj+1;(Zj[0X2])[xV[0X6]]=xV[1];xV=bc[Mj];do Mj=Mj+1;end;(Zj)[2]=fj[xV[0X6]];Mj=Mj+0X001;Mj=Mj+0X01;Mj=Mj+1;Ej=0X0002;(Zj[Ej])();Ej=Ej-0X1;do Mj=Mj+0X00001;end;Mj=Mj+1;Mj=Mj+0X01;repeat local re,Ae=Lc,(Zj);if#re>0 then local n4=({});do for Z9,J9 in M,re do do for Eo,Vo in M,J9 do if Vo[0X1]==Ae and Vo[0X2]>=0x0 then local uG=Vo[2];if not n4[uG]then(n4)[uG]={Ae[uG]};end;do(Vo)[1]=n4[uG];end;do(Vo)[2]=1;end;end;end;end;end;end;end;until true;do return;end;else Zj[xV[2]]=true;end;else if not(yV<24)then if yV==25 then(Zj)[xV[2]]=xV[6];else Zj[5]=fj[xV[6]];xV=bc[Mj];Mj=Mj+1;local kF=5;do(Zj)[0X6]=xV[6];end;Mj=Mj+1;Zj[0X0007]=true;Mj=Mj+1;Zj[kF]=Zj[kF](Zj[kF+1],Zj[kF+2]);Ej=kF;xV=bc[Mj];do Mj=Mj+0X1;end;do if Zj[0X5]==xV[0X1]then Mj=xV[0X2];end;end;end;else for h7=xV[2],xV[0X5]do(Zj)[h7]=nil;end;end;end;else if yV<29 then if not(yV<27)then do if yV==0X1C then do(Zj)[xV[2]]=Jj[xV[5]];end;else Zj[xV[0X02]]=Zj[xV[0X0005]]-Zj[xV[0x0004]];end;end;else(Zj)[6]=fj[xV[6]];xV=bc[Mj];Mj=Mj+0X1;Zj[6]=Zj[0X06][xV[1]];do Mj=Mj+1;end;Mj=Mj+0X1;xV=bc[Mj];Mj=Mj+0X1;do if not(Zj[0X6])then else do Mj=xV[0X05];end;end;end;end;else if not(yV>=30)then Zj[2]=true;Mj=Mj+1;Zj[0X3]=nil;xV=bc[Mj];Mj=Mj+1;do(Zj)[4]=fj[xV[0X0006]];end;xV=bc[Mj];Mj=Mj+1;do(Zj)[4]=Zj[0X4][xV[0X00001]];end;do xV=bc[Mj];end;Mj=Mj+0X1;if Zj[4]then Mj=xV[5];end;else if yV~=31 then local rt=(nil);local it=(Uc[xV[5]]);local Mt=(it[0X005]);local Qt=(#Mt);if not(Qt>0X0)then else do rt={};end;for wv=1,Qt do local qv=Mt[wv];if qv[1]~=0 then rt[wv-1]=jc[qv[2]];else do rt[wv-0X1]={Zj,qv[0X02]};end;end;end;S(Lc,rt);end;Zj[xV[0X002]]=e3(it,rt,fj);else do Zj[0X5]=fj[xV[0x6]];end;xV=bc[Mj];do Mj=Mj+1;end;(Zj)[0x5]=Zj[5][xV[0X1]];do xV=bc[Mj];end;Mj=Mj+0X1;(Zj)[5]=Zj[5][xV[1]];do Mj=Mj+1;end;Mj=Mj+0x1;do xV=bc[Mj];end;Mj=Mj+1;(Zj)[5]=Zj[0X5][xV[0X001]];Mj=Mj+1;Mj=Mj+1;xV=bc[Mj];Mj=Mj+0x1;if not(xV[0X00006]<=Zj[0X5])then do Mj=xV[2];end;end;end;end;end;end;end;else if not(yV<37)then if not(yV<0X28)then do if yV>=0X029 then do if yV~=0x2A then(Zj)[0x005]=true;xV=bc[Mj];Mj=Mj+0X1;fj[xV[0X6]]=Zj[0X005];xV=bc[Mj];do Mj=Mj+0X0001;end;Mj=xV[0X5];else(Zj)[2]=fj[xV[6]];xV=bc[Mj];local IW=2;Mj=Mj+1;do(Zj)[0x003]=xV[6];end;Mj=Mj+1;Zj[IW]=Zj[IW](Zj[IW+1]);Ej=IW;Mj=Mj+1;Mj=Mj+1;xV=bc[Mj];Mj=Mj+0X1;if not Zj[2]then Mj=xV[0X00005];end;end;end;else Zj[5]=fj[xV[0X6]];xV=bc[Mj];do Mj=Mj+1;end;Zj[5][xV[6]]=xV[1];do xV=bc[Mj];end;Mj=Mj+1;(Zj)[0X00005]=fj[xV[0X0006]];do xV=bc[Mj];end;Mj=Mj+0X0001;if not(Zj[5])then else do Mj=xV[5];end;end;end;end;else if yV>=38 then if yV~=0x27 then do Zj[2]=fj[xV[0x6]];end;Mj=Mj+0X1;Mj=Mj+0x00001;xV=bc[Mj];do Mj=Mj+0X1;end;if Zj[2]then Mj=xV[0x005];end;else Zj[5]=fj[xV[6]];Mj=Mj+0X1;Mj=Mj+0X1;xV=bc[Mj];Mj=Mj+1;Zj[5]=Zj[5][xV[1]];xV=bc[Mj];do Mj=Mj+0X1;end;(Zj)[0X05]=Zj[5][xV[0x0001]];xV=bc[Mj];Mj=Mj+1;if not(xV[6]<=Zj[0X00005])then do Mj=xV[0X2];end;end;end;else Zj[0X7]=fj[xV[6]];do Mj=Mj+1;end;do Mj=Mj+0X1;end;xV=bc[Mj];Mj=Mj+1;Zj[0X007][xV[6]]=xV[1];do xV=bc[Mj];end;do Mj=Mj+0X1;end;(Zj)[0X07]=fj[xV[6]];Mj=Mj+1;do Mj=Mj+0X1;end;do Mj=Mj+1;end;Ej=0X7;(Zj[Ej])();local oV=(7);Ej=Ej-1;do Mj=Mj+0X1;end;do Mj=Mj+0X1;end;xV=bc[Mj];do Mj=Mj+1;end;(Zj)[0X7]=fj[xV[6]];Mj=Mj+0x1;Mj=Mj+1;xV=bc[Mj];Mj=Mj+0x1;(Zj)[0X0008]=fj[xV[6]];Mj=Mj+0X1;Mj=Mj+1;Mj=Mj+0X1;(Zj[oV])(Zj[oV+1]);Ej=oV-1;Mj=Mj+0X00001;Mj=Mj+0x00001;do xV=bc[Mj];end;do Mj=Mj+0X001;end;Mj=xV[5];end;end;else do if not(yV>=34)then if yV==0X21 then Zj[xV[2]]={E({},1,xV[0X5])};else if Zj[xV[5]]==xV[1]then else do Mj=xV[0x2];end;end;end;else do if yV>=35 then if yV==36 then Zj[0X2]=fj[xV[6]];do Mj=Mj+0X1;end;do Mj=Mj+1;end;xV=bc[Mj];Mj=Mj+0X1;do(Zj)[0X002]=Zj[0X2][xV[1]];end;Mj=Mj+1;Mj=Mj+0X0001;do xV=bc[Mj];end;Mj=Mj+1;if not(Zj[2])then else Mj=xV[5];end;else end;else(Zj)[4]=fj[xV[6]];do Mj=Mj+0x0001;end;Mj=Mj+0x1;xV=bc[Mj];do Mj=Mj+1;end;local x_=4;do Zj[0X0005]=fj[xV[0X006]];end;Mj=Mj+1;Mj=Mj+0X00001;do xV=bc[Mj];end;Mj=Mj+0X1;Zj[6]=xV[6];local D_=(3);Mj=Mj+1;local U_=3;do if U_==0 then else Ej=x_+U_-0X1;end;end;local I_,d_=nil,(nil);if U_==0X1 then I_,d_=q3(Zj[x_]());else I_,d_=q3(Zj[x_](E(Zj,x_+1,Ej)));end;if D_==1 then Ej=x_-1;else if D_~=0X000 then I_=x_+D_-2;Ej=I_+0x1;else I_=I_+x_-0x1;Ej=I_;end;local zn=(0X000);for M1=x_,I_ do zn=zn+0x1;(Zj)[M1]=d_[zn];end;end;Mj=Mj+0X1;do Zj[3]=Zj[0X5];end;Mj=Mj+0X00001;Zj[0X2]=Zj[0x4];xV=bc[Mj];do Mj=Mj+1;end;Mj=xV[5];end;end;end;end;end;end;end;end;end;end;end);if Uj then do if kj then do if aj==0X1 then return Zj[bj]();else return Zj[bj](E(Zj,bj+1,Ej));end;end;elseif not(bj)then else return E(Zj,bj,aj);end;end;else if V(kj)=="string"then if r(kj,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(kj,'\094\046-\058\037d+\058 '))then(q)(kj,0X0);else q("\076u\114a\112\104\032\083c\114i\112t:"..(Qc[Mj-1]or"(internal)")..":\032"..u(kj),0X0);end;else q(kj,0X0);end;end;end;end;end;else if Sc~=123 then do ic=function(...)local CZ,oZ={},(0);local ZZ=(0X1);local RZ=(k and k()or _ENV);local jZ=({[2]=Vc,[1]=CZ});local rZ,YZ=q3(...);local qZ=(RZ==H and fc or RZ);do rZ=rZ-1;end;for Ha=0,rZ do do if ac>Ha then CZ[Ha]=YZ[Ha+0X001];else break;end;end;end;if not nc then YZ=nil;elseif not(Ac)then else CZ[ac]={n=rZ>=ac and rZ-ac+0X1 or 0x0,E(YZ,ac+0X1,rZ+1)};end;do if qZ~=RZ then do if s then s(ic,qZ);else _ENV=qZ;end;end;end;end;local NZ,nZ,HZ,lZ=c(function()while true do local Rn=(bc[ZZ]);local fn=(Rn[3]);do ZZ=ZZ+0X1;end;do if fn>=0X8 then if not(fn<0Xc)then if not(fn<14)then do if fn<15 then do repeat local s9,l9=Lc,CZ;if#s9>0X0 then local be=({});for pk,qk in M,s9 do for j_,h_ in M,qk do if h_[1]==l9 and h_[0X2]>=0 then local pX=(h_[2]);if not(not be[pX])then else do be[pX]={l9[pX]};end;end;h_[1]=be[pX];(h_)[2]=1;end;end;end;end;until true;end;return;else if fn~=0X010 then do CZ[Rn[2]]=qZ[Rn[0X6]];end;else(CZ)[Rn[0x02]]=Rn[6];end;end;end;else do if fn~=13 then CZ[Rn[0X02]]=CZ[Rn[5]];else local eS=(Uc[Rn[5]]);local mS=(eS[0X5]);local SS=nil;local VS=(#mS);if not(VS>0x00)then else do SS={};end;do for BS=1,VS do local ZS=mS[BS];if ZS[0X1]==0 then SS[BS-1]={CZ,ZS[0X2]};else(SS)[BS-1]=jc[ZS[2]];end;end;end;S(Lc,SS);end;(CZ)[Rn[0x2]]=e3(eS,SS,qZ);end;end;end;else if fn<0X0A then if fn~=0X9 then CZ[Rn[0X2]][CZ[Rn[5]]]=CZ[Rn[4]];else do repeat local RE,EE,BE=Lc,CZ,(Rn[0X002]);if#RE>0X0 then local wG={};for Wg,Mg in M,RE do for eT,qT in M,Mg do do if not(qT[1]==EE and qT[0X2]>=BE)then else local Fx=(qT[0x00002]);if not wG[Fx]then(wG)[Fx]={EE[Fx]};end;(qT)[1]=wG[Fx];do qT[0X2]=1;end;end;end;end;end;end;until true;end;end;else if fn~=0Xb then local Ob=(Rn[0X04]);local gb,Yb=Rn[2],Rn[5];if Yb~=0 then oZ=gb+Yb-1;end;local xb,fb=nil,nil;if Yb==0X0001 then xb,fb=q3(CZ[gb]());else do xb,fb=q3(CZ[gb](E(CZ,gb+0X1,oZ)));end;end;if Ob==1 then oZ=gb-0X1;else if Ob==0 then xb=xb+gb-1;oZ=xb;else xb=gb+Ob-2;do oZ=xb+0X1;end;end;local Y2=(0);for bW=gb,xb do Y2=Y2+0X1;CZ[bW]=fb[Y2];end;end;else for rv=Rn[0X002],Rn[5]do CZ[rv]=nil;end;end;end;end;else if not(fn<4)then if fn<0X06 then if fn~=5 then CZ[0]=qZ[Rn[6]];Rn=bc[ZZ];ZZ=ZZ+1;(CZ)[1]=Rn[6];ZZ=ZZ+1;local mk=(0X00);(CZ[mk])(CZ[mk+0X1]);do oZ=mk-0x01;end;ZZ=ZZ+1;ZZ=ZZ+1;ZZ=ZZ+1;local tk=(jc[0x0]);do CZ[0]=tk[0X1][tk[0X2]];end;ZZ=ZZ+0X1;ZZ=ZZ+0X001;local Bk=(CZ[0X00]);Rn=bc[ZZ];ZZ=ZZ+1;do mk=0x0;end;(CZ)[mk+0X1]=Bk;CZ[mk]=Bk[Rn[1]];do ZZ=ZZ+0X1;end;do tk=jc[1];end;CZ[2]=tk[1][tk[2]];ZZ=ZZ+1;mk=0;(CZ[mk])(CZ[mk+0X01],CZ[mk+0X002]);oZ=mk-0x001;Rn=bc[ZZ];ZZ=ZZ+0x01;ZZ=Rn[0X5];else CZ[Rn[2]]={E({},0X1,Rn[0x005])};end;else if fn==0X7 then(CZ)[Rn[2]]=CZ[Rn[5]]%CZ[Rn[0X4]];else ZZ=Rn[0X005];end;end;else if not(fn<2)then do if fn~=3 then if not(CZ[Rn[5]]<CZ[Rn[4]])then else ZZ=Rn[0X2];end;else CZ[Rn[0x2]]=w(CZ[Rn[0X5]],CZ[Rn[4]]);end;end;else if fn~=1 then else(CZ)[Rn[2]]=CZ[Rn[0x5]]==CZ[Rn[4]];end;end;end;end;end;end;end);if not(NZ)then if V(nZ)=='\115tr\105\110g'then if r(nZ,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(nZ,"^.-:%d+: "))then(q)(nZ,0X0);else(q)("\076\117raph\032\083crip\116:"..(Qc[ZZ-0x1]or"(\105nte\114\110\097\108)")..": "..u(nZ),0);end;else(q)(nZ,0);end;else if nZ then if lZ==1 then return CZ[HZ]();else return CZ[HZ](E(CZ,HZ+1,oZ));end;elseif not(HZ)then else return E(CZ,HZ,lZ);end;end;end;end;else ic=function(...)local qV,MV,kV=0X00000,{},(0X1);local OV=((k and k()or _ENV));local TV=({[1]=MV,[2]=Vc});local SV,iV=q3(...);local AV=((OV==H and fc or OV));SV=SV-1;for K2=0x0,SV do if ac>K2 then(MV)[K2]=iV[K2+0x0001];else break;end;end;if not nc then iV=nil;elseif not(Ac)then else MV[ac]={n=SV>=ac and SV-ac+0x1 or 0,E(iV,ac+0x1,SV+1)};end;do if AV~=OV then if s then(s)(ic,AV);else do _ENV=AV;end;end;end;end;while true do local F2=(bc[kV]);kV=kV+1;local Z2=F2[0X0003];return(function(n,E,...)local u={};for e,O in pairs(_getboss())do local L=CheckMobLevel(O.Name);if ac_lvl()>=L-500 then table.insert(u,O);end;end;return u;end)(MV,jc,...);end;end;end;end;else do if not(Sc>=0X78)then if Sc==119 then ic=function(...)local v7,X7=0X001,{};local M7=(0);local W7=(k and k()or _ENV);local B7=({[2]=Vc,[1]=X7});local A7,N7=q3(...);local f7=((W7==H and fc or W7));A7=A7-1;for jX=0,A7 do if not(ac>jX)then break;else do(X7)[jX]=N7[jX+1];end;end;end;if not nc then N7=nil;elseif Ac then(X7)[ac]={n=A7>=ac and A7-ac+1 or 0,E(N7,ac+0X001,A7+1)};end;do if f7~=W7 then if s then s(ic,f7);else _ENV=f7;end;end;end;local E7,y7,e7,u7=c(function()while true do local Zs=(bc[v7]);local Ms=Zs[0X3];v7=v7+0X01;do if not(Ms<7)then if not(Ms>=0X00b)then if not(Ms<0x00009)then if Ms==10 then(X7)[0X0]=f7[Zs[0x006]];local ok=0;Zs=bc[v7];v7=v7+0X1;local gk=X7[0X0];do X7[ok+0x1]=gk;end;(X7)[ok]=gk[Zs[0X1]];Zs=bc[v7];v7=v7+0X1;do X7[2]=Zs[0x6];end;v7=v7+0X1;ok=0x00000;X7[ok]=X7[ok](X7[ok+0X00001],X7[ok+2]);do M7=ok;end;do v7=v7+0X1;end;v7=v7+0x1;do Zs=bc[v7];end;v7=v7+0X001;X7[0X01]=f7[Zs[6]];do v7=v7+1;end;do v7=v7+1;end;do Zs=bc[v7];end;v7=v7+1;(X7)[1]=X7[0X001][Zs[1]];v7=v7+1;do v7=v7+0X1;end;do Zs=bc[v7];end;v7=v7+0X1;local yk,Fk=nil,(Uc[Zs[0X5]]);local Tk=Fk[5];local nk=(#Tk);if not(nk>0)then else yk={};for TG=0X1,nk do local QG=Tk[TG];do if QG[1]~=0 then yk[TG-0X1]=jc[QG[0X2]];else do yk[TG-1]={X7,QG[2]};end;end;end;end;(S)(Lc,yk);end;do X7[0X2]=e3(Fk,yk,f7);end;v7=v7+1;ok=0X1;(X7[ok])(X7[ok+0x1]);do M7=ok-1;end;v7=v7+0X1;do v7=v7+0X1;end;v7=v7+1;repeat local RX,oX=Lc,(X7);if not(#RX>0X00)then else local d8={};for IR,UR in M,RX do for jg,Cg in M,UR do if not(Cg[0x001]==oX and Cg[0X2]>=0X0)then else local hT=(Cg[0x00002]);if not(not d8[hT])then else(d8)[hT]={oX[hT]};end;Cg[1]=d8[hT];(Cg)[0x2]=0X1;end;end;end;end;until true;do return;end;else for Ys=Zs[2],Zs[0X005]do(X7)[Ys]=nil;end;end;else if Ms==8 then local CZ=Zs[2];local rZ=(P(function(...)C();do for hp,cp,kp,Wp,Xp,Jp,qp,mp,vp,Np in...do C(true,{hp,cp,kp,Wp,Xp,Jp,qp,mp,vp,Np});end;end;end));(rZ)(X7[CZ],X7[CZ+1],X7[CZ+2]);M7=CZ;(X7)[CZ]=rZ;v7=Zs[0X5];else end;end;else if not(Ms>=13)then if Ms==12 then local k7=(Uc[Zs[0X5]]);local w7=(k7[0X05]);local x7,Y7=#w7,nil;do if x7>0 then Y7={};for xi=0X1,x7 do local Gi=(w7[xi]);if Gi[0X1]~=0 then Y7[xi-0X1]=jc[Gi[2]];else Y7[xi-0X001]={X7,Gi[2]};end;end;S(Lc,Y7);end;end;X7[Zs[2]]=e3(k7,Y7,f7);else v7=Zs[5];end;else if Ms==0XE then do X7[Zs[0X2]]=X7[Zs[0X5]]*X7[Zs[0X04]];end;else X7[Zs[0X2]]=T(X7[Zs[0X5]],X7[Zs[0X00004]]);end;end;end;else if Ms<3 then do if not(Ms>=1)then do(X7)[Zs[2]]=Zs[6];end;else if Ms~=0X00002 then(X7)[Zs[2]]=X7[Zs[5]]/X7[Zs[0x4]];else X7[Zs[2]]={E({},0X1,Zs[0x5])};end;end;end;else do if not(Ms>=0X5)then if Ms==4 then do X7[Zs[0x2]]=not X7[Zs[0X5]];end;else do X7[Zs[0x2]]=f7[Zs[0X6]];end;end;else if Ms~=0x0006 then local PS=Zs[2];local OS=X7[Zs[0x005]];(X7)[PS+1]=OS;(X7)[PS]=OS[Zs[0x1]];else do(X7)[Zs[2]]=X7[Zs[5]]-X7[Zs[0X0004]];end;end;end;end;end;end;end;end;end);if E7 then if y7 then if u7~=0X01 then return X7[e7](E(X7,e7+1,M7));else return X7[e7]();end;elseif e7 then do return E(X7,e7,u7);end;end;else if V(y7)~="string"then(q)(y7,0X000);else if not(r(y7,'at\116e\109\112t\032\116\111\032yiel\100\032ac\114oss \109e\116\097\109ethod\047\067\037\045\099\097ll b\111u\110d\097\114\121'))then else do return coroutine.yield();end;end;do if r(y7,"^.-:%d+: ")then q("Luraph Script:"..(Qc[v7-0X1]or"(internal)")..': '..u(y7),0);else(q)(y7,0X00);end;end;end;end;end;else ic=function(...)local JJ,oJ=1,({});local nJ=(k and k()or _ENV);local UJ={[2]=Vc,[1]=oJ};local sJ=(nJ==H and fc or nJ);local vJ,eJ=q3(...);vJ=vJ-1;local rJ=(0X0);for eu=0X00,vJ do if ac>eu then do oJ[eu]=eJ[eu+1];end;else do break;end;end;end;if not nc then eJ=nil;elseif Ac then(oJ)[ac]={n=vJ>=ac and vJ-ac+0X1 or 0X00000,E(eJ,ac+0X1,vJ+1)};end;if sJ==nJ then else if s then s(ic,sJ);else _ENV=sJ;end;end;local XJ,lJ,qJ,SJ=c(function()do while true do local gp=bc[JJ];local Up=gp[3];JJ=JJ+0X1;do if Up>=0X8 then if Up>=12 then do if Up<0Xe then do if Up~=0x0D then local Xf=Uc[gp[5]];local pf,Bf=Xf[5],(nil);local Pf=#pf;if Pf>0X0 then Bf={};for We=1,Pf do local Ge=(pf[We]);if Ge[0X00001]==0 then Bf[We-0X0001]={oJ,Ge[2]};else do Bf[We-1]=jc[Ge[0X00002]];end;end;end;(S)(Lc,Bf);end;(oJ)[gp[0X2]]=e3(Xf,Bf,sJ);else oJ[gp[0X2]]=sJ[gp[6]];end;end;else do if Up~=15 then local II=gp[0x2];local OI=(P(function(...)(C)();for DP,cP,BP,WP,sP,uP,iP,bP,xP,CP in...do(C)(true,{DP,cP,BP,WP,sP,uP,iP,bP,xP,CP});end;end));(OI)(oJ[II],oJ[II+1],oJ[II+0X0002]);rJ=II;oJ[II]=OI;JJ=gp[0X00005];else oJ[gp[0X002]]=Q(oJ[gp[0X005]]);end;end;end;end;else do if Up>=10 then do if Up==11 then(oJ[gp[2]])[oJ[gp[5]]]=oJ[gp[0X0004]];else do if not(not oJ[gp[0X2]])then else do JJ=gp[0X5];end;end;end;end;end;else if Up~=9 then oJ[gp[0X2]]={E({},1,gp[5])};else for lw=gp[2],gp[5]do do oJ[lw]=nil;end;end;end;end;end;end;else if not(Up>=4)then if Up>=0X2 then do if Up~=0X003 then else repeat local ZU,cU=Lc,(oJ);if not(#ZU>0)then else local oI={};for UE,RE in M,ZU do for KN,hN in M,RE do do if not(hN[0X1]==cU and hN[2]>=0)then else local pS=(hN[2]);if not(not oI[pS])then else do(oI)[pS]={cU[pS]};end;end;hN[1]=oI[pS];(hN)[2]=0X1;end;end;end;end;end;until true;return;end;end;else if Up==1 then(oJ)[1]={};do gp=bc[JJ];end;JJ=JJ+1;(oJ[1])[gp[6]]=gp[0X1];gp=bc[JJ];JJ=JJ+1;(oJ[0x1])[gp[6]]=gp[0X1];gp=bc[JJ];JJ=JJ+0X00001;oJ[0X1][gp[6]]=gp[1];JJ=JJ+0X1;local ZT=(1);repeat local MU,EU=Lc,(oJ);do if not(#MU>0)then else local L4=({});for Uo,lo in M,MU do do for qa,aa in M,lo do do if aa[1]==EU and aa[0X002]>=0 then local FD=(aa[0X2]);if not L4[FD]then do(L4)[FD]={EU[FD]};end;end;(aa)[0x0001]=L4[FD];do aa[0x2]=1;end;end;end;end;end;end;end;end;until true;return false,ZT,ZT;else do(oJ)[0X00001]=oJ[0][gp[0X1]];end;gp=bc[JJ];JJ=JJ+1;oJ[0x1]=oJ[1][gp[0X001]];JJ=JJ+0X1;do JJ=JJ+0X00001;end;do gp=bc[JJ];end;JJ=JJ+0x1;do(oJ)[1]=oJ[0X1][gp[0X1]];end;do gp=bc[JJ];end;do JJ=JJ+1;end;do oJ[1]=oJ[0X1][gp[1]];end;do JJ=JJ+0X1;end;JJ=JJ+1;do gp=bc[JJ];end;local dZ=0X02;JJ=JJ+1;(oJ)[1]=oJ[0X00001][gp[0x1]];JJ=JJ+1;JJ=JJ+0X0001;gp=bc[JJ];do JJ=JJ+1;end;do oJ[1]=oJ[0X001][gp[0X00001]];end;local qZ=4;do JJ=JJ+1;end;JJ=JJ+1;gp=bc[JJ];JJ=JJ+0X0001;(oJ)[1]=oJ[0X00001][gp[0X1]];JJ=JJ+1;JJ=JJ+1;do gp=bc[JJ];end;JJ=JJ+0X1;local WZ=oJ[0X1];oJ[dZ+0x1]=WZ;oJ[dZ]=WZ[gp[0X1]];gp=bc[JJ];JJ=JJ+0x1;(oJ)[4]=gp[6];JJ=JJ+1;dZ=0X2;oJ[dZ]=oJ[dZ](oJ[dZ+1],oJ[dZ+2]);rJ=dZ;gp=bc[JJ];do JJ=JJ+0X1;end;oJ[0X2]=oJ[0x00002][gp[0X1]];JJ=JJ+0x0001;JJ=JJ+0X1;do gp=bc[JJ];end;JJ=JJ+1;dZ=2;do WZ=oJ[2];end;(oJ)[dZ+0X1]=WZ;(oJ)[dZ]=WZ[gp[1]];do gp=bc[JJ];end;do JJ=JJ+1;end;(oJ)[4]=gp[0X00006];JJ=JJ+0x1;do dZ=0X00002;end;do oJ[dZ]=oJ[dZ](oJ[dZ+0x01],oJ[dZ+2]);end;do rJ=dZ;end;JJ=JJ+0x1;do JJ=JJ+1;end;do JJ=JJ+1;end;oJ[3]={};gp=bc[JJ];JJ=JJ+0X1;(oJ)[4]=sJ[gp[0X6]];gp=bc[JJ];do JJ=JJ+1;end;do(oJ)[0X00005]=oJ[0X02][gp[1]];end;do JJ=JJ+1;end;JJ=JJ+0X1;do JJ=JJ+0X00001;end;dZ=4;(oJ)[dZ]=oJ[dZ](oJ[dZ+0X001]);rJ=dZ;do gp=bc[JJ];end;do JJ=JJ+1;end;do oJ[0X3][gp[0x6]]=oJ[4];end;gp=bc[JJ];JJ=JJ+1;(oJ)[0X004]=sJ[gp[0X006]];JJ=JJ+0X0001;JJ=JJ+0x1;gp=bc[JJ];JJ=JJ+1;(oJ)[0X5]=oJ[0X2][gp[1]];gp=bc[JJ];JJ=JJ+1;do dZ=5;end;do WZ=oJ[0X5];end;(oJ)[dZ+0X1]=WZ;do(oJ)[dZ]=WZ[gp[0x1]];end;gp=bc[JJ];JJ=JJ+1;oJ[0X7]=gp[0X6];do gp=bc[JJ];end;do JJ=JJ+1;end;oJ[8]=oJ[0X002][gp[0X1]];JJ=JJ+1;(oJ)[0X8]=#oJ[0x008];gp=bc[JJ];do JJ=JJ+0x1;end;oJ[0X8]=oJ[8]-gp[1];JJ=JJ+0X001;do dZ=0X00005;end;local SZ=0X0;if qZ==0X0 then else rJ=dZ+qZ-1;end;local rZ,vZ=nil,nil;do if qZ~=0X0001 then rZ,vZ=q3(oJ[dZ](E(oJ,dZ+0X1,rJ)));else rZ,vZ=q3(oJ[dZ]());end;end;do if SZ~=0X01 then if SZ~=0X00000 then rZ=dZ+SZ-2;rJ=rZ+1;else rZ=rZ+dZ-0X1;rJ=rZ;end;local k8=(0X00);do for Cx=dZ,rZ do k8=k8+1;do oJ[Cx]=vZ[k8];end;end;end;else rJ=dZ-0x001;end;end;JJ=JJ+1;do JJ=JJ+0X0001;end;JJ=JJ+0X1;dZ=0x4;do oJ[dZ]=oJ[dZ](E(oJ,dZ+1,rJ));end;rJ=dZ;gp=bc[JJ];JJ=JJ+1;oJ[3][gp[6]]=oJ[4];gp=bc[JJ];do JJ=JJ+0x1;end;(oJ)[4]=sJ[gp[6]];JJ=JJ+1;JJ=JJ+0x0001;gp=bc[JJ];JJ=JJ+0x1;(oJ)[0X5]=oJ[2][gp[1]];JJ=JJ+0X1;JJ=JJ+0X1;gp=bc[JJ];JJ=JJ+1;do dZ=0X5;end;WZ=oJ[5];do(oJ)[dZ+0x0001]=WZ;end;oJ[dZ]=WZ[gp[1]];do gp=bc[JJ];end;JJ=JJ+1;(oJ)[7]=gp[0X06];do gp=bc[JJ];end;JJ=JJ+0X0001;oJ[0x08]=oJ[0x2][gp[1]];do JJ=JJ+1;end;do JJ=JJ+0X1;end;JJ=JJ+1;oJ[0X008]=#oJ[8];do gp=bc[JJ];end;JJ=JJ+1;oJ[0X0008]=oJ[8]-gp[1];JJ=JJ+0X1;dZ=5;qZ=4;do SZ=0;end;if qZ~=0X00000 then rJ=dZ+qZ-0X1;end;rZ,vZ=nil;if qZ~=1 then rZ,vZ=q3(oJ[dZ](E(oJ,dZ+1,rJ)));else rZ,vZ=q3(oJ[dZ]());end;if SZ==0X1 then rJ=dZ-0X001;else if SZ~=0 then do rZ=dZ+SZ-0X2;end;rJ=rZ+1;else rZ=rZ+dZ-1;rJ=rZ;end;local L0=(0X0);for kA=dZ,rZ do L0=L0+1;(oJ)[kA]=vZ[L0];end;end;JJ=JJ+0X01;JJ=JJ+0X001;do JJ=JJ+0X00001;end;dZ=4;oJ[dZ]=oJ[dZ](E(oJ,dZ+0X1,rJ));rJ=dZ;JJ=JJ+1;JJ=JJ+0X1;gp=bc[JJ];JJ=JJ+0x0001;oJ[5]=sJ[gp[6]];JJ=JJ+1;JJ=JJ+1;do gp=bc[JJ];end;JJ=JJ+1;oJ[0x6]=oJ[2][gp[1]];JJ=JJ+0X1;JJ=JJ+0X00001;do JJ=JJ+0X1;end;local gZ=(3);dZ=0X05;oJ[dZ]=oJ[dZ](oJ[dZ+1]);rJ=dZ;JJ=JJ+0x1;JJ=JJ+0x1;JJ=JJ+0X1;(oJ)[4]=oJ[0X4]-oJ[5];gp=bc[JJ];JJ=JJ+1;(oJ[3])[gp[0x6]]=oJ[0X04];do JJ=JJ+1;end;repeat local bW,DW=Lc,oJ;do if#bW>0 then local dR=({});for fs,ps in M,bW do for c6,t6 in M,ps do do if t6[1]==DW and t6[0X2]>=0 then local gJ=t6[2];if not(not dR[gJ])then else do dR[gJ]={DW[gJ]};end;end;do(t6)[0x1]=dR[gJ];end;do(t6)[2]=0x1;end;end;end;end;end;end;end;until true;return false,gZ,gZ;end;end;else if Up<6 then if Up==0X5 then do JJ=gp[0X05];end;else(oJ)[0]=sJ[gp[0x00006]];JJ=JJ+0x001;JJ=JJ+0X00001;gp=bc[JJ];JJ=JJ+1;(oJ)[0x000]=oJ[0x0][gp[1]];do gp=bc[JJ];end;JJ=JJ+0x1;oJ[0]=oJ[0x0][gp[0x1]];gp=bc[JJ];do JJ=JJ+1;end;(oJ)[0X00001]=oJ[0X0][gp[1]];JJ=JJ+0X1;JJ=JJ+0X0001;gp=bc[JJ];JJ=JJ+1;do(oJ)[0X0001]=oJ[1][gp[1]];end;gp=bc[JJ];JJ=JJ+1;(oJ)[0X1]=oJ[0X1][gp[1]];JJ=JJ+1;JJ=JJ+1;do gp=bc[JJ];end;JJ=JJ+1;oJ[0X1]=oJ[1][gp[0X1]];gp=bc[JJ];JJ=JJ+0X00001;do if not(not oJ[0X1])then else JJ=gp[5];end;end;end;else if Up~=0X7 then(oJ)[gp[0X2]]=T(oJ[gp[5]],oJ[gp[4]]);else(oJ)[gp[2]]=gp[0X006];end;end;end;end;end;end;end;end);if XJ then do if lJ then if SJ==1 then do return oJ[qJ]();end;else return oJ[qJ](E(oJ,qJ+0X1,rJ));end;elseif not(qJ)then else return E(oJ,qJ,SJ);end;end;else if V(lJ)~="string"then(q)(lJ,0);else do if r(lJ,"\097t\116e\109p\116\032\116\111\032\121\105e\108\100\032\097c\114o\115s m\101t\097\109\101thod\047C%-ca\108\108 \098ound\097r\121")then do return coroutine.yield();end;end;end;do if r(lJ,"^.\045:\037d+: ")then q("Luraph Script:"..(Qc[JJ-0X1]or"(internal)")..": "..u(lJ),0X0);else(q)(lJ,0);end;end;end;end;end;end;else if Sc~=121 then ic=function(...)local gI,iI,LI=1,{},0x00;local EI=({[2]=Vc,[1]=iI});local uI=((k and k()or _ENV));local WI,vI=q3(...);local lI=((uI==H and fc or uI));WI=WI-1;for iP=0,WI do if not(ac>iP)then break;else(iI)[iP]=vI[iP+1];end;end;if not nc then vI=nil;elseif not(Ac)then else(iI)[ac]={n=WI>=ac and WI-ac+1 or 0X00000,E(vI,ac+0X1,WI+1)};end;if lI==uI then else if s then(s)(ic,lI);else _ENV=lI;end;end;local VI,XI,CI,eI=c(function()while true do local c_=bc[gI];local l_=c_[3];do gI=gI+1;end;if not(l_<0xc)then do if l_>=18 then if l_<0X15 then do if l_<19 then(iI)[0X4]=iI[0];c_=bc[gI];gI=gI+1;(lI)[c_[6]]=iI[4];c_=bc[gI];do gI=gI+1;end;iI[4]=lI[c_[6]];gI=gI+0X1;local Dm=(4);do gI=gI+1;end;gI=gI+0X0001;do(iI)[5]=iI[0x3];end;gI=gI+0X00001;iI[Dm](iI[Dm+1]);do LI=Dm-1;end;gI=gI+0X01;gI=gI+1;c_=bc[gI];gI=gI+0X1;local bm=0x004;do(iI)[4]=lI[c_[6]];end;gI=gI+1;gI=gI+1;gI=gI+0X1;repeat local YT,JT=Lc,iI;if#YT>0 then local Od={};for U2,H2 in M,YT do do for Cl,Dl in M,H2 do do if not(Dl[1]==JT and Dl[0x2]>=0x0)then else local R_=Dl[2];if not(not Od[R_])then else do Od[R_]={JT[R_]};end;end;Dl[0X1]=Od[R_];do Dl[0X00002]=1;end;end;end;end;end;end;end;until true;return false,bm,bm;else if l_~=20 then(iI)[c_[2]]=#iI[c_[5]];else do iI[4]=lI[c_[0X00006]];end;gI=gI+0X1;gI=gI+1;do c_=bc[gI];end;gI=gI+0X0001;do iI[5]=iI[0][c_[0x1]];end;local Ct=(4);do gI=gI+0X1;end;gI=gI+0X1;gI=gI+0X001;do(iI)[Ct]=iI[Ct](iI[Ct+1]);end;LI=Ct;gI=gI+0x01;gI=gI+0X0001;do c_=bc[gI];end;gI=gI+0X001;if not(not(iI[4]<c_[0X1]))then else gI=c_[0X0002];end;end;end;end;else if l_>=23 then if l_~=24 then iI[0X004]=lI[c_[0X6]];do gI=gI+1;end;do gI=gI+1;end;c_=bc[gI];gI=gI+1;if not(not iI[0X0004])then else gI=c_[0x5];end;else if not(not iI[c_[0X002]])then else gI=c_[0x05];end;end;else do if l_==0X16 then local yw=(c_[0x002]);for Xq=yw,yw+(c_[5]-0X0001)do do(iI)[Xq]=vI[ac+(Xq-yw)+1];end;end;else(iI)[c_[0x00002]]=lI[c_[6]];end;end;end;end;else if not(l_>=0Xf)then if not(l_<13)then if l_==0X0000e then gI=c_[0X5];else if iI[c_[0x2]]then gI=c_[5];end;end;else iI[3]=nil;c_=bc[gI];gI=gI+1;lI[c_[6]]=iI[0X3];c_=bc[gI];gI=gI+1;gI=c_[5];end;else if l_>=16 then if l_==0X0011 then local H4=(Uc[c_[5]]);local A4=H4[5];local w4,i4=#A4,nil;if w4>0X0 then do i4={};end;for ti=0X1,w4 do local qi=A4[ti];if qi[0X1]~=0x0 then i4[ti-1]=jc[qi[2]];else do i4[ti-0X1]={iI,qi[2]};end;end;end;S(Lc,i4);end;iI[c_[2]]=e3(H4,i4,lI);else repeat local eb,ob=Lc,(iI);if#eb>0X0 then local Dc=({});for O4,S4 in M,eb do for ZI,OI in M,S4 do if OI[1]==ob and OI[2]>=0 then local Lw=(OI[0X2]);do if not Dc[Lw]then(Dc)[Lw]={ob[Lw]};end;end;OI[0X001]=Dc[Lw];(OI)[0X2]=1;end;end;end;end;until true;return;end;else do(iI)[0X0003]=lI[c_[0X006]];end;do gI=gI+1;end;gI=gI+0X1;c_=bc[gI];gI=gI+1;iI[3]=iI[3][c_[1]];c_=bc[gI];gI=gI+0X1;iI[0X004]=lI[c_[6]];gI=gI+1;gI=gI+1;do c_=bc[gI];end;do gI=gI+1;end;(iI)[0X4]=iI[4][c_[1]];gI=gI+1;gI=gI+1;do c_=bc[gI];end;gI=gI+0x01;iI[4]=iI[0X4][c_[0X001]];c_=bc[gI];gI=gI+1;do if iI[0X0003]==iI[4]then do gI=c_[2];end;end;end;end;end;end;end;else do if not(l_<6)then do if not(l_>=0X0009)then if not(l_<0x7)then do if l_~=8 then(iI)[0x4]=lI[c_[0x0006]];do gI=gI+0x1;end;gI=gI+1;c_=bc[gI];gI=gI+0X0001;(iI)[4]=iI[4][c_[0x0001]];gI=gI+1;do gI=gI+0x1;end;c_=bc[gI];gI=gI+0X1;do iI[5]=iI[0X00000][c_[1]];end;gI=gI+1;iI[4]=iI[0X4]-iI[0x5];c_=bc[gI];gI=gI+1;iI[0X4]=iI[4][c_[1]];c_=bc[gI];gI=gI+0X1;if not(not(iI[0X4]<c_[0x1]))then else gI=c_[2];end;else(iI)[0x04]={};do c_=bc[gI];end;gI=gI+0X1;(iI)[5]=lI[c_[6]];c_=bc[gI];local aK=Uc[c_[5]];local kK=5;do gI=gI+0X1;end;local MK=4;local xK=(nil);local FK=(aK[0X5]);local ZK=#FK;if not(ZK>0)then else do xK={};end;for YZ=0X01,ZK do local rZ=(FK[YZ]);do if rZ[1]==0X00000 then(xK)[YZ-1]={iI,rZ[0X002]};else(xK)[YZ-0X0001]=jc[rZ[2]];end;end;end;S(Lc,xK);end;do(iI)[0x00006]=e3(aK,xK,lI);end;do gI=gI+1;end;do iI[kK]=iI[kK](iI[kK+0X1]);end;do LI=kK;end;gI=gI+1;gI=gI+1;do c_=bc[gI];end;gI=gI+1;(iI[0x00004])[c_[0X6]]=iI[0X05];c_=bc[gI];gI=gI+1;aK=Uc[c_[0X5]];xK=nil;do FK=aK[0x5];end;ZK=#FK;if not(ZK>0X00)then else xK={};for Vj=1,ZK do local Mj=(FK[Vj]);do if Mj[1]==0X000 then(xK)[Vj-0X001]={iI,Mj[0X2]};else xK[Vj-1]=jc[Mj[2]];end;end;end;(S)(Lc,xK);end;do iI[5]=e3(aK,xK,lI);end;c_=bc[gI];gI=gI+1;(iI[0x04])[c_[0X0006]]=iI[0x5];gI=gI+0X001;do repeat local Tl,nl=Lc,(iI);if not(#Tl>0X0)then else local Sx={};do for uK,sK in M,Tl do for qm,sm in M,sK do if not(sm[1]==nl and sm[2]>=0X0)then else local EA=(sm[0X2]);if not Sx[EA]then Sx[EA]={nl[EA]};end;(sm)[1]=Sx[EA];sm[2]=1;end;end;end;end;end;until true;end;return false,MK,MK;end;end;else(iI)[c_[2]]=T(iI[c_[5]],iI[c_[0X4]]);end;else do if l_>=0Xa then if l_~=11 then for Mv=c_[2],c_[0X5]do(iI)[Mv]=nil;end;else iI[4]=lI[c_[0X6]];local ft=iI[0x4];gI=gI+1;gI=gI+0X00001;c_=bc[gI];gI=gI+1;local jt=0X4;local Gt=(0X4);iI[Gt+0X1]=ft;(iI)[Gt]=ft[c_[0X001]];gI=gI+0X1;Gt=0X4;iI[Gt](iI[Gt+0X001]);do LI=Gt-0X1;end;do gI=gI+0X1;end;do gI=gI+0X1;end;c_=bc[gI];gI=gI+0X00001;do iI[0X4]=lI[c_[6]];end;do gI=gI+1;end;gI=gI+1;gI=gI+0x00001;(iI)[0x005]=iI[0X0003];gI=gI+0x1;Gt=0X4;iI[Gt](iI[Gt+1]);LI=Gt-1;gI=gI+0x1;gI=gI+0X01;c_=bc[gI];gI=gI+1;do(iI)[0X4]=lI[c_[6]];end;gI=gI+0X00001;gI=gI+1;do gI=gI+1;end;do repeat local w6,R6=Lc,(iI);if not(#w6>0)then else local VS={};for oA,EA in M,w6 do do for n6,F6 in M,EA do if F6[1]==R6 and F6[0X0002]>=0 then local mW=F6[0X002];if not VS[mW]then VS[mW]={R6[mW]};end;(F6)[1]=VS[mW];do F6[2]=1;end;end;end;end;end;end;until true;end;return false,jt,jt;end;else do(iI)[0X4]=lI[c_[6]];end;gI=gI+1;gI=gI+0x1;c_=bc[gI];do gI=gI+1;end;do if not(not iI[4])then else gI=c_[5];end;end;end;end;end;end;else if l_<0X003 then if not(l_<1)then if l_==0x2 then(iI)[3]=lI[c_[0x6]];gI=gI+0X0001;local A2=(3);gI=gI+0X00001;gI=gI+0X1;repeat local f1,L1=Lc,iI;if#f1>0X0 then local uZ={};for Pw,Jw in M,f1 do for sV,BV in M,Jw do if not(BV[0X1]==L1 and BV[0X2]>=0X0)then else local ec=BV[2];if not uZ[ec]then(uZ)[ec]={L1[ec]};end;(BV)[0X1]=uZ[ec];(BV)[2]=0X01;end;end;end;end;until true;return false,A2,A2;else end;else iI[c_[0X02]]={E({},1,c_[5])};end;else if l_<4 then do iI[c_[2]]=o(iI[c_[0X5]],iI[c_[0X4]]);end;else do if l_~=0x5 then iI[5]=lI[c_[6]];do gI=gI+1;end;gI=gI+1;c_=bc[gI];gI=gI+1;iI[0X5]=iI[0X5][c_[1]];c_=bc[gI];gI=gI+0x1;iI[6]=lI[c_[6]];gI=gI+1;gI=gI+1;c_=bc[gI];gI=gI+0X0001;(iI)[6]=iI[6][c_[1]];gI=gI+1;do gI=gI+0X1;end;c_=bc[gI];do gI=gI+1;end;do(iI)[0X6]=iI[6][c_[1]];end;c_=bc[gI];gI=gI+0X1;if iI[0X0005]~=iI[0x6]then do gI=c_[0X2];end;end;else do iI[c_[0X2]]=c_[6];end;end;end;end;end;end;end;end;end;end);if not(VI)then if V(XI)~="st\114i\110g"then q(XI,0);else do if r(XI,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if r(XI,"^.-:%d+: ")then q("\076\117r\097\112\104\032\083\099r\105p\116\058"..(Qc[gI-0x1]or'(\105nternal\041')..":\032"..u(XI),0X0);else q(XI,0X0);end;end;else if XI then do if eI~=1 then do return iI[CI](E(iI,CI+1,LI));end;else do return iI[CI]();end;end;end;elseif not(CI)then else do return E(iI,CI,eI);end;end;end;end;else ic=function(...)local uB,rB=0x1,({});local tB=(k and k()or _ENV);local XB=({[2]=Vc,[1]=rB});local kB,SB=q3(...);kB=kB-0X1;local zB=(0);for wO=0,kB do do if not(ac>wO)then break;else rB[wO]=SB[wO+0X0001];end;end;end;local sB=(tB==H and fc or tB);if not nc then SB=nil;elseif Ac then rB[ac]={n=kB>=ac and kB-ac+1 or 0x00,E(SB,ac+0X00001,kB+0x1)};end;if sB~=tB then if s then(s)(ic,sB);else _ENV=sB;end;end;local YB,bB,ZB,FB=c(function()while true do local xa=bc[uB];local Ca=xa[3];uB=uB+0X00001;do if Ca<0X1C then if Ca>=0XE then if not(Ca>=21)then do if not(Ca<0X11)then do if Ca<19 then do if Ca~=18 then(rB)[xa[2]]=xa[0x6];else rB[xa[2]]={E({},0X001,xa[0X5])};end;end;else if Ca~=20 then rB[0x5]=sB[xa[0X006]];do xa=bc[uB];end;uB=uB+1;local HW=0X5;rB[6]=xa[6];uB=uB+0X0001;rB[HW](rB[HW+1]);zB=HW-0X1;xa=bc[uB];uB=uB+0X1;uB=xa[0X00005];else(rB)[xa[0X002]]=rB[xa[5]]/rB[xa[4]];end;end;end;else if Ca>=0Xf then if Ca==16 then local LD=jc[1];rB[3]=LD[0X1][LD[2]];do xa=bc[uB];end;uB=uB+1;local QD=nil;(rB)[3]=rB[0X3][xa[0X1]];uB=uB+0X00001;(rB)[0X0004]=rB[2];do uB=uB+0x1;end;do LD=jc[0];end;local TD=(0X003);do(rB)[5]=LD[1][LD[0X2]];end;uB=uB+0X1;uB=uB+1;xa=bc[uB];uB=uB+0X1;local HD=(Uc[xa[0X05]]);local ZD=HD[5];local lD=#ZD;do if lD>0x0 then do QD={};end;for hP=1,lD do local UP=ZD[hP];if UP[0X1]==0 then(QD)[hP-0X1]={rB,UP[2]};else QD[hP-0X1]=jc[UP[2]];end;end;(S)(Lc,QD);end;end;(rB)[6]=e3(HD,QD,sB);uB=uB+0x1;(rB)[0X7]={};do xa=bc[uB];end;do uB=uB+0X00001;end;HD=Uc[xa[5]];QD=nil;ZD=HD[5];lD=#ZD;if not(lD>0X0000)then else QD={};for eM=1,lD do local yM=(ZD[eM]);do if yM[0X1]==0x0 then(QD)[eM-1]={rB,yM[0X2]};else QD[eM-0X00001]=jc[yM[2]];end;end;end;(S)(Lc,QD);end;rB[0X8]=e3(HD,QD,sB);xa=bc[uB];uB=uB+1;rB[7][xa[0X0006]]=rB[8];do uB=uB+0x1;end;do zB=TD+5-1;end;(rB[TD])(E(rB,TD+0x0001,zB));zB=TD-1;do uB=uB+1;end;uB=uB+1;xa=bc[uB];uB=uB+0X001;uB=xa[5];else(rB)[0X0]=sB[xa[6]];xa=bc[uB];uB=uB+1;local EZ=(0);do(rB)[0X1]=xa[0X6];end;uB=uB+1;rB[EZ]=rB[EZ](rB[EZ+0X1]);do zB=EZ;end;do xa=bc[uB];end;uB=uB+1;do if not rB[0X00000]then uB=xa[5];end;end;end;else rB[xa[2]]=xa[6];end;end;end;else if not(Ca<24)then if not(Ca<26)then if Ca~=0X00001B then do if not(not rB[xa[0x2]])then else uB=xa[0X005];end;end;else local zE=(jc[0X000]);rB[2]=zE[1][zE[2]];do uB=uB+0X1;end;uB=uB+0X1;local uE=(rB[0X2]);xa=bc[uB];uB=uB+1;local oE=(2);do rB[oE+0X1]=uE;end;(rB)[oE]=uE[xa[1]];uB=uB+0X1;oE=2;(rB)[oE]=rB[oE](rB[oE+0X001]);zB=oE;do xa=bc[uB];end;uB=uB+0X0001;if not rB[0x2]then do uB=xa[0X5];end;end;end;else if Ca==0X19 then local w2=(xa[0X2]);local m2,P2=rB[w2]();if not(m2)then else do uB=xa[0X0005];end;(rB)[w2+3]=P2;end;else if rB[xa[0X005]]~=xa[0x1]then uB=xa[2];end;end;end;else if not(Ca<0X0016)then do if Ca~=0X017 then rB[1]=sB[xa[0x6]];do uB=uB+0X1;end;zB=1;do rB[zB]=rB[zB]();end;xa=bc[uB];uB=uB+1;do if not(rB[0X1])then else uB=xa[0x5];end;end;else rB[5]=sB[xa[6]];do uB=uB+1;end;local bK=(0X5);uB=uB+1;xa=bc[uB];uB=uB+1;(rB)[6]=xa[0X0006];uB=uB+0X1;(rB[bK])(rB[bK+1]);zB=bK-0x1;do xa=bc[uB];end;uB=uB+0X0001;rB[0X5]=sB[xa[0X06]];local WK=(rB[0X00005]);uB=uB+0X00001;uB=uB+1;xa=bc[uB];uB=uB+0x1;bK=5;rB[bK+0X1]=WK;rB[bK]=WK[xa[0X01]];xa=bc[uB];uB=uB+0X01;rB[0X7]=xa[0X006];do uB=uB+0X1;end;bK=5;do rB[bK]=rB[bK](rB[bK+1],rB[bK+0x2]);end;zB=bK;uB=uB+0X1;uB=uB+0X001;uB=uB+1;(rB)[0]=rB[0x5];xa=bc[uB];uB=uB+0X1;if not(rB[0])then else do uB=xa[0X00005];end;end;end;end;else do repeat local wc,hc=Lc,(rB);if#wc>0 then local HN=({});do for gL,fL in M,wc do for rs,Ms in M,fL do if Ms[1]==hc and Ms[0X2]>=0X00000 then local dp=(Ms[2]);do if not HN[dp]then HN[dp]={hc[dp]};end;end;do Ms[0X1]=HN[dp];end;Ms[0X002]=0X1;end;end;end;end;end;until true;end;return;end;end;end;else if Ca<7 then do if Ca>=0X00003 then if Ca>=0X0005 then do if Ca~=6 then local D9=jc[0];(rB)[6]=D9[1][D9[0x2]];uB=uB+1;uB=uB+1;xa=bc[uB];local m9=0X6;uB=uB+0X001;local A9=(rB[0X6]);rB[m9+1]=A9;rB[m9]=A9[xa[0x1]];uB=uB+0X0001;m9=6;(rB[m9])(rB[m9+0X0001]);do zB=m9-1;end;xa=bc[uB];uB=uB+1;(rB)[0x6]=rB[5][xa[1]];uB=uB+1;uB=uB+1;uB=uB+0X0001;zB=0X006;(rB[zB])();zB=zB-1;uB=uB+1;do uB=uB+1;end;xa=bc[uB];uB=uB+0X1;uB=xa[5];else rB[6]=rB[0X5][xa[0X1]];uB=uB+0x001;do(rB)[2]=rB[6];end;xa=bc[uB];uB=uB+0X1;do if not rB[0x002]then uB=xa[0X5];end;end;end;end;else if Ca~=4 then rB[2]=sB[xa[0X006]];do uB=uB+1;end;uB=uB+1;xa=bc[uB];uB=uB+0X1;(rB)[0X03]=sB[xa[0X0006]];do xa=bc[uB];end;local Bf=(2);do uB=uB+1;end;(rB)[3]=rB[3][xa[0X1]];uB=uB+0X1;uB=uB+1;do xa=bc[uB];end;uB=uB+1;(rB)[3]=rB[0X003][xa[0X1]];uB=uB+0X001;uB=uB+1;xa=bc[uB];uB=uB+0X1;do(rB)[4]=sB[xa[6]];end;do xa=bc[uB];end;uB=uB+1;(rB)[0X004]=rB[4][xa[1]];do uB=uB+1;end;do uB=uB+1;end;do xa=bc[uB];end;uB=uB+1;(rB)[4]=rB[0X4][xa[0X0001]];uB=uB+1;uB=uB+0x001;xa=bc[uB];do uB=uB+1;end;(rB)[4]=rB[0X0004][xa[1]];xa=bc[uB];uB=uB+0X1;(rB)[0X04]=rB[0X04][xa[0X00001]];do xa=bc[uB];end;uB=uB+0X01;(rB)[5]=xa[6];uB=uB+1;do zB=Bf+4-1;end;(rB[Bf])(E(rB,Bf+0X1,zB));do zB=Bf-0X1;end;uB=uB+1;do uB=uB+0X01;end;xa=bc[uB];uB=uB+0x1;rB[2]=sB[xa[6]];uB=uB+1;uB=uB+1;xa=bc[uB];uB=uB+1;(rB)[0x3]=sB[xa[0x06]];uB=uB+1;uB=uB+0X0001;xa=bc[uB];do uB=uB+0x1;end;(rB)[0x3]=rB[3][xa[1]];uB=uB+1;do uB=uB+1;end;xa=bc[uB];uB=uB+0X1;rB[0X3]=rB[3][xa[0x01]];xa=bc[uB];uB=uB+0X0001;(rB)[4]=sB[xa[0X6]];xa=bc[uB];uB=uB+1;(rB)[4]=rB[4][xa[0X1]];xa=bc[uB];uB=uB+0X1;(rB)[4]=rB[0X4][xa[0X1]];xa=bc[uB];uB=uB+1;(rB)[4]=rB[0x4][xa[1]];xa=bc[uB];uB=uB+1;rB[4]=rB[0x4][xa[1]];uB=uB+1;do uB=uB+1;end;xa=bc[uB];do uB=uB+1;end;(rB)[0X00005]=xa[0x6];uB=uB+1;Bf=0X02;do zB=Bf+0X4-1;end;(rB[Bf])(E(rB,Bf+0X1,zB));zB=Bf-1;xa=bc[uB];uB=uB+0X001;uB=xa[5];else local SJ=(jc[1]);rB[0x03]=SJ[0X1][SJ[2]];xa=bc[uB];uB=uB+0X001;do rB[0X3]=rB[3][xa[1]];end;local TJ=0X3;do uB=uB+1;end;do uB=uB+0X001;end;uB=uB+0X00001;(rB)[0X004]=rB[2];uB=uB+0X1;(rB)[TJ]=rB[TJ](rB[TJ+0X1]);zB=TJ;do uB=uB+1;end;uB=uB+0X0001;do xa=bc[uB];end;uB=uB+1;if not rB[0X3]then do uB=xa[5];end;end;end;end;else do if Ca>=1 then do if Ca~=2 then for n1=xa[2],xa[0X5]do do(rB)[n1]=nil;end;end;else(rB)[1]=sB[xa[0X00006]];uB=uB+1;uB=uB+1;uB=uB+0X00001;zB=0x1;rB[zB]=rB[zB]();uB=uB+1;uB=uB+1;xa=bc[uB];uB=uB+0X01;if not(rB[0x0001])then else uB=xa[5];end;end;end;else do rB[0]=sB[xa[6]];end;do uB=uB+0X1;end;uB=uB+1;xa=bc[uB];uB=uB+0X00001;(rB)[0]=rB[0][xa[1]];uB=uB+0X0001;uB=uB+0X1;do xa=bc[uB];end;uB=uB+1;if not rB[0]then uB=xa[5];end;end;end;end;end;else do if Ca<0X00a then if Ca<8 then local Sj=(jc[0]);(rB)[0x2]=Sj[0x00001][Sj[2]];local ej=(0X2);xa=bc[uB];uB=uB+1;local ij=rB[2];rB[ej+0X00001]=ij;rB[ej]=ij[xa[0X00001]];uB=uB+0X1;ej=2;rB[ej](rB[ej+0X0001]);zB=ej-1;uB=uB+1;uB=uB+0X0001;xa=bc[uB];uB=uB+0X1;uB=xa[5];else if Ca~=9 then local st=(jc[1]);do rB[0x2]=st[0X01][st[0X2]];end;uB=uB+0X1;uB=uB+1;local Wt=0X00002;do xa=bc[uB];end;uB=uB+0X01;(rB)[2]=rB[2][xa[0x0001]];do uB=uB+0x1;end;(rB)[0X003]=rB[1];uB=uB+0X0001;st=jc[0];do rB[0X4]=st[1][st[0X2]];end;uB=uB+1;rB[0X5]=nil;uB=uB+0X1;rB[6]={};do xa=bc[uB];end;local Jt=(Uc[xa[5]]);do uB=uB+0X01;end;local Lt=(nil);local ft=(Jt[5]);local Qt=(#ft);do if Qt>0X0 then Lt={};for BC=0X00001,Qt do local gC=ft[BC];if gC[0X1]~=0x0 then(Lt)[BC-1]=jc[gC[2]];else(Lt)[BC-0X001]={rB,gC[0x02]};end;end;S(Lc,Lt);end;end;do(rB)[7]=e3(Jt,Lt,sB);end;xa=bc[uB];do uB=uB+0x1;end;rB[6][xa[6]]=rB[7];uB=uB+1;zB=Wt+0X5-0X001;rB[Wt](E(rB,Wt+1,zB));zB=Wt-0x1;xa=bc[uB];do uB=uB+0x1;end;do uB=xa[5];end;else rB[xa[2]]=-rB[xa[5]];end;end;else if Ca>=12 then do if Ca==13 then local gK=(jc[0X0000]);(rB)[0X000]=gK[1][gK[0X002]];uB=uB+0X01;do uB=uB+0X1;end;do xa=bc[uB];end;uB=uB+0X1;local LK=0X0;local HK=(rB[0X00000]);rB[LK+1]=HK;do rB[LK]=HK[xa[0x1]];end;uB=uB+0x1;LK=0;rB[LK](rB[LK+0x01]);zB=LK-1;do uB=uB+1;end;uB=uB+1;uB=uB+1;do repeat local gg,lg=Lc,rB;do if#gg>0X0 then local nP=({});for h0,t0 in M,gg do for Hb,Bb in M,t0 do if not(Bb[0x00001]==lg and Bb[0x2]>=0X0)then else local CQ=Bb[2];if not(not nP[CQ])then else(nP)[CQ]={lg[CQ]};end;Bb[1]=nP[CQ];(Bb)[2]=0X00001;end;end;end;end;end;until true;end;return;else(rB)[0X3]=sB[xa[0X6]];uB=uB+0X1;do uB=uB+1;end;xa=bc[uB];uB=uB+0X1;if rB[3]then uB=xa[0x00005];end;end;end;else if Ca==0Xb then local B1=xa[0X2];local l1=P(function(...)(C)();for GK,YK,PK,BK,CK,WK,dK,lK,DK,KK in...do C(true,{GK,YK,PK,BK,CK,WK,dK,lK,DK,KK});end;end);(l1)(rB[B1],rB[B1+0x1],rB[B1+2]);zB=B1;(rB)[B1]=l1;do uB=xa[0x5];end;else local pC=Uc[xa[5]];local XC=pC[5];local CC=(nil);local VC=#XC;if VC>0X0 then CC={};for Ds=1,VC do local Hs=XC[Ds];if Hs[1]~=0 then(CC)[Ds-0X1]=jc[Hs[2]];else do CC[Ds-1]={rB,Hs[0x2]};end;end;end;S(Lc,CC);end;(rB)[xa[0X2]]=e3(pC,CC,sB);end;end;end;end;end;end;else if not(Ca>=0X2A)then if not(Ca>=35)then do if not(Ca>=31)then do if Ca<29 then do rB[1]=sB[xa[6]];end;do uB=uB+0X01;end;do uB=uB+0X001;end;uB=uB+1;zB=1;rB[zB]=rB[zB]();xa=bc[uB];do uB=uB+0X01;end;(rB)[2]=sB[xa[0X06]];uB=uB+1;(rB)[0X1]=rB[1]-rB[2];xa=bc[uB];uB=uB+0x1;if xa[0X00006]<rB[0x00001]then uB=xa[0X2];end;else if Ca~=0X1e then do rB[0x00000]=sB[xa[0X6]];end;xa=bc[uB];local cE=(0x0);uB=uB+1;local aE=(rB[0X00]);do(rB)[cE+1]=aE;end;(rB)[cE]=aE[xa[1]];xa=bc[uB];uB=uB+0X1;(rB)[2]=xa[6];uB=uB+1;cE=0X0;do rB[cE]=rB[cE](rB[cE+1],rB[cE+0X2]);end;zB=cE;xa=bc[uB];uB=uB+0x1;if rB[0]then do uB=xa[0X00005];end;end;else end;end;end;else if not(Ca<33)then if Ca==34 then(rB)[xa[0X02]]=rB[xa[0X5]][xa[0X01]];else(rB)[0x1]=sB[xa[6]];do uB=uB+0x1;end;do rB[2]={E({},1,0X4)};end;do xa=bc[uB];end;do uB=uB+1;end;(rB)[3]=xa[6];xa=bc[uB];do uB=uB+1;end;rB[0X0004]=xa[0X006];xa=bc[uB];uB=uB+1;do rB[0X5]=xa[6];end;local lJ=2;do xa=bc[uB];end;do uB=uB+1;end;rB[6]=xa[0X006];do uB=uB+0X1;end;local EJ,QJ=rB[lJ],(1-1)*0X0032;for tc=1,4 do EJ[QJ+tc]=rB[lJ+tc];end;xa=bc[uB];local jJ=nil;uB=uB+1;local iJ=Uc[xa[0x5]];local RJ=0x3;local xJ=(iJ[5]);local HJ=#xJ;if not(HJ>0)then else jJ={};for C1=1,HJ do local J1=(xJ[C1]);do if J1[0X1]~=0X00 then(jJ)[C1-0X1]=jc[J1[2]];else do jJ[C1-1]={rB,J1[2]};end;end;end;end;(S)(Lc,jJ);end;rB[3]=e3(iJ,jJ,sB);uB=uB+1;do lJ=1;end;local GJ=0X3;if RJ==0 then else zB=lJ+RJ-1;end;local ZJ,hJ=nil,nil;do if RJ==0X1 then ZJ,hJ=q3(rB[lJ]());else ZJ,hJ=q3(rB[lJ](E(rB,lJ+1,zB)));end;end;if GJ~=1 then if GJ~=0 then ZJ=lJ+GJ-2;do zB=ZJ+0X1;end;else ZJ=ZJ+lJ-1;zB=ZJ;end;local Fi=(0);for Os=lJ,ZJ do do Fi=Fi+1;end;(rB)[Os]=hJ[Fi];end;else zB=lJ-0X1;end;xa=bc[uB];uB=uB+0X0001;(rB)[3]=sB[xa[6]];uB=uB+1;do(rB)[0X4]=rB[1];end;do uB=uB+1;end;lJ=0X0003;RJ=2;do GJ=0X4;end;if RJ==0x0 then else zB=lJ+RJ-0X1;end;ZJ,hJ=nil;do if RJ~=1 then ZJ,hJ=q3(rB[lJ](E(rB,lJ+0X1,zB)));else ZJ,hJ=q3(rB[lJ]());end;end;if GJ~=0X00001 then if GJ==0 then ZJ=ZJ+lJ-1;zB=ZJ;else ZJ=lJ+GJ-2;zB=ZJ+0X00001;end;local gd=0X0000;for iZ=lJ,ZJ do gd=gd+0x1;(rB)[iZ]=hJ[gd];end;else zB=lJ-0X0001;end;xa=bc[uB];uB=uB+1;do lJ=3;end;local pJ=(P(function(...)C();for bb,Jb in...do C(true,bb,Jb);end;end));pJ(rB[lJ],rB[lJ+1],rB[lJ+0X2]);zB=lJ;do rB[lJ]=pJ;end;uB=xa[5];end;else do if Ca==32 then(rB)[2]=sB[xa[0X6]];do uB=uB+1;end;zB=0X2;rB[zB]=rB[zB]();do uB=uB+0X001;end;uB=uB+0x00001;xa=bc[uB];uB=uB+1;do if not(rB[2])then else do uB=xa[5];end;end;end;else(rB)[0X002]=false;xa=bc[uB];uB=uB+1;(sB)[xa[0X0006]]=rB[2];do xa=bc[uB];end;uB=uB+0X0001;uB=xa[0x5];end;end;end;end;end;else do if Ca<0x0026 then if not(Ca>=0x0024)then rB[1]=xa[6];xa=bc[uB];uB=uB+0x1;rB[0X2]=xa[0x6];do xa=bc[uB];end;uB=uB+1;(rB)[0X03]=xa[6];xa=bc[uB];local Cr=(0X1);uB=uB+0X0001;local xr=rB[Cr+0X1];local rr=rB[Cr+0X00002];local Yr=(rB[Cr]);(rB)[Cr]=P(function()do for JA=Yr,xr,rr do(C)(true,JA);end;end;end);do uB=xa[5];end;else do if Ca==37 then local oW=jc[0X01];do rB[2]=oW[0X0001][oW[2]];end;do uB=uB+1;end;uB=uB+0X1;xa=bc[uB];uB=uB+0X01;local ZW=(0X2);do(rB)[0x2]=rB[0X002][xa[0X1]];end;uB=uB+0x1;rB[0X3]=rB[0X00001];uB=uB+0X00001;do(rB)[ZW]=rB[ZW](rB[ZW+0X01]);end;zB=ZW;xa=bc[uB];uB=uB+0X00001;if not(not rB[0X2])then else uB=xa[0x5];end;else do(rB)[3]=sB[xa[6]];end;do xa=bc[uB];end;local Kf=rB[3];uB=uB+1;local Sf=0X3;rB[Sf+1]=Kf;(rB)[Sf]=Kf[xa[1]];xa=bc[uB];uB=uB+0x00001;do rB[5]=xa[6];end;uB=uB+0X0001;Sf=0x3;(rB)[Sf]=rB[Sf](rB[Sf+1],rB[Sf+0x2]);do zB=Sf;end;uB=uB+1;uB=uB+1;xa=bc[uB];do uB=uB+1;end;if not rB[0x3]then uB=xa[0x0005];end;end;end;end;else if not(Ca>=0X28)then if Ca==0X27 then do uB=xa[0X00005];end;else local JV=(1);(rB)[JV]=rB[JV](rB[JV+0X001]);do zB=JV;end;do uB=uB+0x1;end;uB=uB+1;do xa=bc[uB];end;uB=uB+1;if not(not(rB[0X00001]<=rB[0]))then else uB=xa[2];end;end;else do if Ca~=41 then do(rB)[0]=sB[xa[0X00006]];end;local DK=(0X0);do xa=bc[uB];end;uB=uB+0X001;rB[0x1]=xa[0X006];do uB=uB+1;end;(rB)[DK]=rB[DK](rB[DK+1]);zB=DK;uB=uB+1;uB=uB+0x1;do xa=bc[uB];end;uB=uB+1;do if not(not rB[0X0])then else do uB=xa[0x05];end;end;end;else do rB[0x0]=sB[xa[6]];end;do uB=uB+0x01;end;uB=uB+1;xa=bc[uB];do uB=uB+0x0001;end;rB[0x00]=rB[0X0][xa[1]];uB=uB+1;uB=uB+0x1;xa=bc[uB];do uB=uB+0x1;end;if not(rB[0X00])then else uB=xa[5];end;end;end;end;end;end;end;else if not(Ca>=49)then if Ca>=0x2d then if not(Ca>=47)then if Ca~=0X2E then(rB)[0X0000]=sB[xa[0X6]];uB=uB+0X0001;uB=uB+1;do xa=bc[uB];end;do uB=uB+0X00001;end;if not(rB[0X0])then else uB=xa[0X5];end;else do(rB)[xa[0X2]]=sB[xa[6]];end;end;else do if Ca~=48 then local dN=(xa[0X2]);local ON,bN,BN=rB[dN]();if ON then(rB)[dN+1]=bN;do(rB)[dN+2]=BN;end;do uB=xa[5];end;end;else(rB)[xa[2]]=J(rB[xa[5]],rB[xa[0X4]]);end;end;end;else if Ca>=0X2B then if Ca==0X02c then do rB[0X005]=sB[xa[0X06]];end;uB=uB+0X1;uB=uB+0X1;xa=bc[uB];uB=uB+1;do rB[0X5]=rB[5][xa[1]];end;uB=uB+0x1;do uB=uB+0X0001;end;xa=bc[uB];do uB=uB+0X1;end;if not(rB[5])then else uB=xa[5];end;else do if not(rB[xa[2]])then else uB=xa[0X0005];end;end;end;else do rB[0x1]=sB[xa[0X6]];end;xa=bc[uB];local ST=(0X2);uB=uB+1;(rB)[2]=xa[0X6];xa=bc[uB];uB=uB+0x0001;local eT=3;(rB)[0x3]=sB[xa[6]];uB=uB+0X00001;do uB=uB+1;end;do xa=bc[uB];end;do uB=uB+1;end;rB[0X03]=rB[3][xa[1]];uB=uB+1;do uB=uB+1;end;do xa=bc[uB];end;uB=uB+1;local gT=rB[0X003];rB[eT+0x1]=gT;(rB)[eT]=gT[xa[1]];uB=uB+1;eT=3;local PT=0;do if ST==0X000 then else do zB=eT+ST-0x1;end;end;end;local oT,kT=nil,nil;if ST~=0x001 then oT,kT=q3(rB[eT](E(rB,eT+0X0001,zB)));else do oT,kT=q3(rB[eT]());end;end;if PT==1 then do zB=eT-1;end;else if PT~=0 then do oT=eT+PT-0x0002;end;zB=oT+0x1;else do oT=oT+eT-1;end;do zB=oT;end;end;local dR=0x000;do for ji=eT,oT do dR=dR+0x1;rB[ji]=kT[dR];end;end;end;uB=uB+1;uB=uB+1;uB=uB+0x01;eT=1;rB[eT]=rB[eT](E(rB,eT+0X1,zB));zB=eT;uB=uB+0X0001;uB=uB+1;do xa=bc[uB];end;do uB=uB+0X1;end;if rB[0X001]then uB=xa[5];end;end;end;else if not(Ca>=0X0034)then if not(Ca<0X032)then if Ca==51 then do rB[0x1]=true;end;local N0,C0=0x1,jc[0X0000];xa=bc[uB];uB=uB+0X1;sB[xa[6]]=rB[1];do uB=uB+0X1;end;rB[0x1]=C0[1][C0[2]];xa=bc[uB];uB=uB+1;local u0=rB[1];do rB[N0+1]=u0;end;(rB)[N0]=u0[xa[0x1]];uB=uB+1;N0=0x1;(rB[N0])(rB[N0+1]);zB=N0-0X001;uB=uB+1;do uB=uB+1;end;do xa=bc[uB];end;do uB=uB+1;end;if not(rB[0])then else uB=xa[0X00005];end;else rB[2]=sB[xa[0x0006]];xa=bc[uB];do uB=uB+1;end;(rB)[0x2]=rB[0X2][xa[0x00001]];xa=bc[uB];uB=uB+0X1;if not(rB[2])then else uB=xa[0X5];end;end;else rB[1]=sB[xa[6]];xa=bc[uB];local ky=0X00001;uB=uB+1;(rB)[2]=xa[0X6];uB=uB+1;rB[ky](rB[ky+1]);zB=ky-0x1;do xa=bc[uB];end;uB=uB+0X01;uB=xa[0X5];end;else do if Ca>=54 then if Ca~=55 then do rB[2]=sB[xa[0X006]];end;do xa=bc[uB];end;uB=uB+1;do rB[2]=rB[0X2][xa[1]];end;do uB=uB+0X1;end;uB=uB+1;xa=bc[uB];uB=uB+1;if not rB[2]then uB=xa[0X05];end;else(rB)[0X0]=sB[xa[0X006]];uB=uB+0X1;zB=0;(rB)[zB]=rB[zB]();xa=bc[uB];uB=uB+0x1;(sB)[xa[6]]=rB[0x0];xa=bc[uB];uB=uB+0X00001;rB[0X0]=sB[xa[6]];uB=uB+0X001;uB=uB+1;uB=uB+1;zB=0X00;rB[zB]=rB[zB]();do uB=uB+0x00001;end;uB=uB+1;do xa=bc[uB];end;uB=uB+1;rB[0X1]=sB[xa[6]];xa=bc[uB];uB=uB+1;rB[0X2]=sB[xa[0X6]];do xa=bc[uB];end;uB=uB+1;do(rB)[2]=rB[0x002][xa[0X00001]];end;do xa=bc[uB];end;uB=uB+0X1;do if rB[2]then uB=xa[0X005];end;end;end;else if Ca~=53 then do rB[xa[2]]=rB[xa[0X5]];end;else rB[0X00000]=sB[xa[6]];xa=bc[uB];uB=uB+0X1;do rB[0]=rB[0][xa[1]];end;xa=bc[uB];uB=uB+1;if not(not rB[0X000])then else uB=xa[0X5];end;end;end;end;end;end;end;end;end;end;end);if not(YB)then if V(bB)=="string"then do if not(r(bB,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;if not(r(bB,"^.-:%d+: "))then(q)(bB,0);else(q)("\076\117\114\097ph S\099r\105\112\116:"..(Qc[uB-1]or"(internal)")..'\058 '..u(bB),0X00000);end;else(q)(bB,0X000);end;else if bB then if FB~=0X1 then return rB[ZB](E(rB,ZB+1,zB));else return rB[ZB]();end;elseif ZB then return E(rB,ZB,FB);end;end;end;end;end;end;end;end;else do if Sc<0X000066 then do if not(Sc>=0X62)then if not(Sc<0X60)then if Sc~=0x61 then ic=function(...)local rv=({});local xv=(0);local kv=1;local ov={[2]=Vc,[1]=rv};local lv=(k and k()or _ENV);local vv,hv=q3(...);local Uv=(lv==H and fc or lv);vv=vv-0x1;for zD=0X0,vv do if ac>zD then(rv)[zD]=hv[zD+1];else do break;end;end;end;do if not nc then hv=nil;elseif Ac then rv[ac]={n=vv>=ac and vv-ac+0X1 or 0x0,E(hv,ac+0x01,vv+1)};end;end;if Uv==lv then else if not(s)then _ENV=Uv;else s(ic,Uv);end;end;local Jv,Av,Kv,Bv=c(function()do while true do local hm=bc[kv];local Em=(hm[0X3]);kv=kv+0x0001;if not(Em>=8)then if Em<4 then do if not(Em<2)then if Em~=3 then do rv[hm[2]]=rv[hm[5]]/rv[hm[4]];end;else local iP=Uc[hm[0x005]];local XP=(nil);local qP=(iP[5]);local RP=#qP;do if not(RP>0)then else do XP={};end;for PS=1,RP do local pS=qP[PS];if pS[0x1]==0X0 then XP[PS-0X01]={rv,pS[2]};else do(XP)[PS-1]=jc[pS[0x2]];end;end;end;S(Lc,XP);end;end;(rv)[hm[2]]=e3(iP,XP,Uv);end;else if Em==0X1 then repeat local Ev,uv=Lc,rv;if#Ev>0 then local zg={};do for QV,kV in M,Ev do for pW,qW in M,kV do if qW[1]==uv and qW[2]>=0 then local dI=(qW[2]);if not(not zg[dI])then else zg[dI]={uv[dI]};end;qW[1]=zg[dI];do qW[2]=0x1;end;end;end;end;end;end;until true;do return false,hm[2],xv;end;else repeat local Ds,Is,ps=Lc,rv,hm[0X00002];if not(#Ds>0X0)then else local vH={};for Eb,Vb in M,Ds do for Dg,mg in M,Vb do if not(mg[0x1]==Is and mg[2]>=ps)then else local Bn=mg[2];if not vH[Bn]then vH[Bn]={Is[Bn]};end;mg[0X00001]=vH[Bn];(mg)[2]=0X1;end;end;end;end;until true;end;end;end;else if not(Em<0X6)then do if Em==7 then do rv[hm[2]]={E({},1,hm[0x5])};end;else repeat local p5,w5=Lc,rv;if#p5>0X000 then local Nx=({});for Rm,Wm in M,p5 do for TB,xB in M,Wm do do if not(xB[0X0001]==w5 and xB[0x2]>=0)then else local zy=(xB[0X2]);do if not(not Nx[zy])then else Nx[zy]={w5[zy]};end;end;xB[0X001]=Nx[zy];(xB)[2]=1;end;end;end;end;end;until true;return;end;end;else if Em==0X05 then if not(not rv[hm[2]])then else kv=hm[0X05];end;else rv[hm[0X002]]=hm[6];end;end;end;else if Em>=12 then if not(Em<0X0e)then if not(Em<15)then if Em==16 then kv=hm[5];else repeat local C1,Q1=Lc,rv;if#C1>0X0 then local It={};do for yi,vi in M,C1 do for nK,jK in M,vi do if not(jK[0X1]==Q1 and jK[2]>=0)then else local UD=jK[0X02];if not It[UD]then It[UD]={Q1[UD]};end;do(jK)[1]=It[UD];end;jK[0x2]=1;end;end;end;end;end;until true;local EV=(hm[0x2]);return false,EV,EV+hm[0X5]-0X2;end;else do(rv)[hm[0X2]]=hm[6];end;end;else if Em~=13 then rv[0x0001]=Uv[hm[6]];do hm=bc[kv];end;kv=kv+0x1;do rv[1]=rv[1][hm[1]];end;hm=bc[kv];kv=kv+1;rv[1]=rv[0X1][hm[1]];hm=bc[kv];kv=kv+1;(rv)[0X00001]=rv[1][hm[1]];do kv=kv+1;end;kv=kv+1;hm=bc[kv];kv=kv+0X1;do(rv)[0X0001]=rv[0X0001][hm[1]];end;kv=kv+1;kv=kv+0X1;hm=bc[kv];kv=kv+1;rv[1]=rv[0X0001][hm[1]];hm=bc[kv];local xn=(0X00001);do kv=kv+0X1;end;rv[0X1]=rv[1][hm[0X0001]];kv=kv+1;kv=kv+1;hm=bc[kv];kv=kv+0X0001;rv[1]=rv[1][hm[0X00001]];kv=kv+0X001;kv=kv+1;do hm=bc[kv];end;local Fn=(0X00003);kv=kv+0X1;local Mn=rv[0x1];(rv)[xn+1]=Mn;rv[xn]=Mn[hm[1]];kv=kv+0X1;(rv)[0X3]=rv[0x00000];kv=kv+0X0001;xn=1;do xv=xn+Fn-1;end;repeat local DU,RU=Lc,(rv);if not(#DU>0x0000)then else local Fe=({});do for wj,oj in M,DU do for sp,Hp in M,oj do do if not(Hp[0X1]==RU and Hp[0X02]>=0x0)then else local Cj=Hp[0X2];do if not(not Fe[Cj])then else do Fe[Cj]={RU[Cj]};end;end;end;Hp[1]=Fe[Cj];do(Hp)[2]=0X00001;end;end;end;end;end;end;end;until true;do return true,xn,Fn;end;else(rv)[hm[0x00002]]=rv[hm[5]]+rv[hm[4]];end;end;else if Em<0X00A then if Em==9 then else(rv)[hm[0X0002]]=Uv[hm[6]];end;else if Em==11 then if rv[hm[0x5]]==rv[hm[0X04]]then do kv=hm[0X0002];end;end;else rv[hm[0X2]]=rv[hm[0X0005]]-rv[hm[4]];end;end;end;end;end;end;end);if Jv then do if Av then if Bv==1 then return rv[Kv]();else return rv[Kv](E(rv,Kv+0X1,xv));end;elseif not(Kv)then else do return E(rv,Kv,Bv);end;end;end;else do if V(Av)~='s\116r\105ng'then q(Av,0x0);else if r(Av,'attem\112\116\032to \121ie\108\100\032ac\114\111\115s me\116ame\116\104\111d/C\037\045call bo\117n\100ar\121')then return coroutine.yield();end;if r(Av,"^.-:%d+: ")then(q)("Lur\097\112\104 Scr\105p\116:"..(Qc[kv-1]or"(internal)").."\058 "..u(Av),0X0);else(q)(Av,0x0);end;end;end;end;end;else ic=function(...)local gL,EL=0X00001,({});local xL=((k and k()or _ENV));local qL={[2]=Vc,[1]=EL};local nL,rL=(xL==H and fc or xL),0X00000;local RL,lL=q3(...);do RL=RL-0X01;end;for R8=0,RL do if ac>R8 then(EL)[R8]=lL[R8+1];else break;end;end;if not nc then do lL=nil;end;elseif Ac then(EL)[ac]={n=RL>=ac and RL-ac+1 or 0x0,E(lL,ac+0X1,RL+1)};end;do if nL~=xL then if not(s)then _ENV=nL;else s(ic,nL);end;end;end;local QL,zL,HL,vL=c(function()do while true do local gg=(bc[gL]);local hg=gg[3];gL=gL+0X00001;if not(hg>=8)then if not(hg>=4)then if not(hg>=2)then if hg==1 then local nJ=Uc[gg[5]];local CJ=nJ[5];local sJ=(#CJ);local WJ=nil;if not(sJ>0)then else do WJ={};end;do for dH=1,sJ do local TH=(CJ[dH]);do if TH[0X1]~=0x0000 then WJ[dH-1]=jc[TH[2]];else do(WJ)[dH-0X1]={EL,TH[2]};end;end;end;end;end;(S)(Lc,WJ);end;EL[gg[2]]=e3(nJ,WJ,nL);else EL[0X001]=nL[gg[0X06]];gL=gL+0X1;gL=gL+1;gg=bc[gL];gL=gL+0X001;EL[1]=EL[0x1][gg[0X0001]];gg=bc[gL];gL=gL+0X00001;EL[1]=EL[0x1][gg[1]];gg=bc[gL];gL=gL+0X1;(EL)[1]=EL[0x1][gg[0X001]];gg=bc[gL];do gL=gL+1;end;do EL[0x1]=EL[1][gg[0x1]];end;gg=bc[gL];gL=gL+0X01;local ZR=0X2;EL[1]=EL[1][gg[0x1]];do gL=gL+1;end;gL=gL+0X1;gg=bc[gL];do gL=gL+1;end;(EL)[0X2]=nL[gg[0X6]];do gL=gL+1;end;(EL)[3]=EL[1];gg=bc[gL];do gL=gL+1;end;EL[0x4]=nL[gg[0X6]];do gg=bc[gL];end;gL=gL+0x1;EL[0X4]=EL[4][gg[1]];do gg=bc[gL];end;gL=gL+0X1;EL[4]=EL[4][gg[0x1]];gL=gL+1;gL=gL+0x1;gg=bc[gL];gL=gL+1;do(EL)[4]=EL[0X0004][gg[0X01]];end;gL=gL+1;gL=gL+0X1;do gL=gL+1;end;EL[ZR]=EL[ZR](EL[ZR+0X1],EL[ZR+2]);rL=ZR;gg=bc[gL];do gL=gL+0X00001;end;do if not(gg[6]<EL[2])then gL=gg[0X0002];end;end;end;else if hg~=0X3 then gL=gg[0X5];else for PO=gg[0X02],gg[5]do EL[PO]=nil;end;end;end;else if not(hg<0x00006)then if hg==7 then EL[gg[0X2]]=EL[gg[5]]*EL[gg[0X004]];else EL[gg[0X00002]]={E({},1,gg[0X5])};end;else if hg~=5 then do(EL)[gg[2]]=EL[gg[0X05]]>=EL[gg[0X04]];end;else end;end;end;else if not(hg>=0Xc)then if hg<0X0a then if hg~=0x9 then repeat local ts,Vs=Lc,(EL);if#ts>0X00 then local f5={};for fM,UM in M,ts do for rO,fO in M,UM do if not(fO[0X1]==Vs and fO[0x00002]>=0)then else local dv=fO[0X0002];if not(not f5[dv])then else(f5)[dv]={Vs[dv]};end;(fO)[1]=f5[dv];do(fO)[2]=0X00001;end;end;end;end;end;until true;return;else local yQ=gg[0X2];local iQ,kQ=EL[yQ],((gg[4]-0X1)*50);for Mv=1,gg[0x5]do(iQ)[kQ+Mv]=EL[yQ+Mv];end;end;else if hg~=11 then(EL)[2]=nL[gg[0X6]];gL=gL+1;do gL=gL+1;end;gL=gL+0X1;rL=0X2;EL[rL]();do rL=rL-0X1;end;local ol=(2);gg=bc[gL];gL=gL+1;EL[2]=nL[gg[0x6]];do gg=bc[gL];end;gL=gL+0X1;EL[0X03]=gg[6];gL=gL+0X1;EL[0X04]=EL[0X1];gL=gL+0X1;EL[ol](EL[ol+0X01],EL[ol+0X2]);do rL=ol-0x1;end;gL=gL+0x1;gL=gL+0X1;gg=bc[gL];gL=gL+1;gL=gg[5];else do EL[gg[2]]=EL[gg[0x5]];end;end;end;else if not(hg>=14)then if hg==0X000d then EL[gg[2]]=nL[gg[6]];else EL[gg[0X0002]]=gg[0X006];end;else if not(hg<15)then if hg~=0X00010 then local U2=(gg[2]);local W2,s2=EL[U2]();do if W2 then gL=gg[5];(EL)[U2+3]=s2;end;end;else do repeat local zi,ui=Lc,(EL);do if not(#zi>0)then else local oF={};do for Ht,mt in M,zi do for ha,Ka in M,mt do do if Ka[1]==ui and Ka[0x00002]>=0X0 then local Tv=(Ka[0X02]);if not oF[Tv]then(oF)[Tv]={ui[Tv]};end;do(Ka)[1]=oF[Tv];end;(Ka)[2]=1;end;end;end;end;end;end;end;until true;end;local SD=(gg[2]);do return false,SD,SD+gg[5]-2;end;end;else(EL)[gg[0X2]]=gg[0X6];end;end;end;end;end;end;end);if QL then if zL then do if vL==0x1 then do return EL[HL]();end;else return EL[HL](E(EL,HL+1,rL));end;end;elseif HL then return E(EL,HL,vL);end;else if V(zL)=="string"then if not(r(zL,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if r(zL,"^.-:%d+: ")then(q)("Luraph Script:"..(Qc[gL-0x1]or"(internal)")..": "..u(zL),0);else q(zL,0);end;else(q)(zL,0x0);end;end;end;end;else if Sc~=95 then ic=function(...)local cp=({});local np=1;local hp=(k and k()or _ENV);local jp={[2]=Vc,[1]=cp};local Ip,Np=q3(...);local ip=(0X000);Ip=Ip-0x0001;for B5=0X0000,Ip do if ac>B5 then do cp[B5]=Np[B5+0X1];end;else break;end;end;local rp=(hp==H and fc or hp);if not nc then Np=nil;elseif Ac then(cp)[ac]={n=Ip>=ac and Ip-ac+0X001 or 0,E(Np,ac+1,Ip+1)};end;do if rp==hp then else do if s then(s)(ic,rp);else _ENV=rp;end;end;end;end;local kp,Hp,vp,yp=c(function()do while true do local KW=bc[np];local xW=KW[3];np=np+0x0001;do if not(xW>=0XE)then if xW>=0X007 then do if not(xW<0x00A)then if not(xW>=0Xc)then if xW==0X000b then(cp)[0X0]=rp[KW[6]];np=np+1;np=np+1;do KW=bc[np];end;do np=np+0X00001;end;(cp)[0]=cp[0][KW[1]];KW=bc[np];np=np+1;do if not cp[0X000]then np=KW[0X0005];end;end;else cp[0]=rp[KW[0X6]];np=np+1;np=np+0X1;do KW=bc[np];end;np=np+0X1;(cp)[0X0]=cp[0][KW[1]];np=np+0X001;np=np+1;np=np+1;do ip=0;end;(cp[ip])();ip=ip-1;do KW=bc[np];end;np=np+0X0001;np=KW[0X005];end;else if xW~=0xD then cp[0X00000]=rp[KW[0x6]];np=np+1;np=np+0x1;KW=bc[np];np=np+0x0001;do if not cp[0]then do np=KW[0X00005];end;end;end;else cp[KW[0X0002]]=rp[KW[6]];end;end;else if xW<0X8 then cp[0X00002]=rp[KW[0x006]];do np=np+1;end;do np=np+0X1;end;KW=bc[np];np=np+0X00001;if not cp[2]then np=KW[0x5];end;else if xW~=9 then cp[0X002]=rp[KW[6]];np=np+0X001;np=np+0X0001;np=np+0X1;do(cp)[3]=cp[1];end;local T5=0X0002;np=np+0X1;cp[T5]=cp[T5](cp[T5+1]);ip=T5;do KW=bc[np];end;np=np+0x1;do rp[KW[0x06]]=cp[0X0002];end;KW=bc[np];np=np+1;(cp)[0X002]=rp[KW[6]];do KW=bc[np];end;np=np+0x1;if not(not cp[0X2])then else np=KW[0X005];end;else cp[2]=rp[KW[0X0006]];local VY=(0X00002);KW=bc[np];do np=np+1;end;local MY=cp[2];cp[VY+0X1]=MY;do cp[VY]=MY[KW[1]];end;do KW=bc[np];end;np=np+1;cp[0X004]=KW[0X6];np=np+0X1;VY=0x2;(cp[VY])(cp[VY+0X1],cp[VY+0x02]);ip=VY-0x1;KW=bc[np];np=np+0x1;np=KW[0x5];end;end;end;end;else if not(xW>=3)then if xW<0X0001 then cp[KW[2]]={E({},1,KW[0X5])};else do if xW~=2 then do cp[2]=rp[KW[0X6]];end;np=np+1;np=np+0X00001;do KW=bc[np];end;np=np+1;if not cp[0X2]then do np=KW[5];end;end;else local Ye,Ne=0X02,(cp[0X0000]);do cp[Ye+1]=Ne;end;do cp[Ye]=Ne[KW[0x1]];end;KW=bc[np];np=np+1;(cp)[0X4]=KW[6];KW=bc[np];local Be=Uc[KW[0X00005]];np=np+1;local Ie=(nil);local ye=Be[5];local Fe=#ye;if not(Fe>0)then else Ie={};for w_=0X001,Fe do local z_=ye[w_];do if z_[1]==0 then(Ie)[w_-1]={cp,z_[2]};else(Ie)[w_-1]=jc[z_[2]];end;end;end;S(Lc,Ie);end;do cp[5]=e3(Be,Ie,rp);end;do np=np+1;end;Ye=0X00002;ip=Ye+4-1;(cp[Ye])(E(cp,Ye+1,ip));do ip=Ye-1;end;KW=bc[np];do np=np+0x001;end;np=KW[0X5];end;end;end;else if xW>=5 then if xW~=0X6 then cp[0X00]=rp[KW[6]];np=np+1;np=np+1;KW=bc[np];do np=np+0X1;end;if not(cp[0])then else np=KW[0x05];end;else end;else do if xW~=4 then cp[0X0]=rp[KW[6]];KW=bc[np];np=np+0X1;cp[0X1]=KW[6];do np=np+0x1;end;local uk=0X0;cp[uk]=cp[uk](cp[uk+0X01]);ip=uk;do KW=bc[np];end;np=np+1;if not cp[0X0]then np=KW[0x00005];end;else repeat local k2,C2=Lc,(cp);do if not(#k2>0X0)then else local xV={};do for kj,Xj in M,k2 do for M8,w8 in M,Xj do if not(w8[1]==C2 and w8[2]>=0X0)then else local nH=w8[0X2];if not(not xV[nH])then else(xV)[nH]={C2[nH]};end;(w8)[1]=xV[nH];(w8)[2]=0X1;end;end;end;end;end;end;until true;return;end;end;end;end;end;else if not(xW<21)then if xW>=24 then if not(xW<0x1A)then if xW==0X01B then repeat local F5,g5,t5=Lc,cp,(KW[2]);do if#F5>0 then local q0={};for AU,wU in M,F5 do do for T2,H2 in M,wU do if not(H2[0X1]==g5 and H2[2]>=t5)then else local z8=(H2[0X0002]);do if not(not q0[z8])then else do(q0)[z8]={g5[z8]};end;end;end;do H2[0x001]=q0[z8];end;H2[0X2]=0x1;end;end;end;end;end;end;until true;else(cp)[KW[0x00002]]=true;end;else do if xW~=25 then(cp)[0X2]=rp[KW[0X6]];local S8=(0X2);do KW=bc[np];end;do np=np+1;end;local Y8=cp[0X00002];cp[S8+1]=Y8;(cp)[S8]=Y8[KW[1]];local r8=(4);do KW=bc[np];end;np=np+1;(cp)[4]=KW[0x6];np=np+1;(cp)[0X5]=cp[1];KW=bc[np];do np=np+1;end;cp[0x0006]=KW[6];np=np+1;local J8=(cp[r8]);for Vz=r8+0X1,6 do do J8=J8..cp[Vz];end;end;cp[0X4]=J8;np=np+0X001;S8=0X2;(cp[S8])(cp[S8+1],cp[S8+2]);do ip=S8-1;end;np=np+1;np=np+0X1;KW=bc[np];do np=np+0X1;end;np=KW[0X5];else np=KW[0x5];end;end;end;else if not(xW<22)then if xW~=23 then local Xg=(cp[KW[5]]/cp[KW[4]]);do cp[KW[0X2]]=Xg-Xg%1;end;else(cp)[KW[2]]=KW[0X0006];end;else do cp[0]=rp[KW[6]];end;KW=bc[np];np=np+1;local SM=(0X0);(cp)[0X1]=KW[0X6];np=np+1;do(cp)[0X2]=true;end;np=np+0X0001;cp[SM]=cp[SM](cp[SM+0X01],cp[SM+0X02]);ip=SM;do np=np+1;end;np=np+1;KW=bc[np];np=np+1;cp[1]=KW[6];KW=bc[np];do np=np+1;end;if not(not cp[0])then else np=KW[0X005];end;end;end;else if not(xW<0X11)then if xW>=19 then do if xW==0X14 then(cp)[0]=rp[KW[0X6]];do np=np+0X1;end;np=np+1;KW=bc[np];np=np+1;do cp[0x1]=rp[KW[0X06]];end;KW=bc[np];do np=np+1;end;cp[2]=KW[0X00006];local rO=(0);np=np+0X001;do(cp)[rO]=cp[rO](cp[rO+0x1],cp[rO+0X2]);end;do ip=rO;end;KW=bc[np];np=np+0x1;do if not(not cp[0])then else do np=KW[5];end;end;end;else local zE=(Uc[KW[5]]);local YE,eE=zE[0X5],nil;local sE=#YE;if sE>0X0 then do eE={};end;do for Y7=0X1,sE do local w7=YE[Y7];if w7[0X1]==0 then eE[Y7-1]={cp,w7[0X02]};else do eE[Y7-1]=jc[w7[2]];end;end;end;end;S(Lc,eE);end;(cp)[KW[0X2]]=e3(zE,eE,rp);end;end;else do if xW~=18 then(cp)[0]=KW[6];KW=bc[np];np=np+0x1;do(rp)[KW[0X0006]]=cp[0X000];end;KW=bc[np];np=np+0X1;np=KW[0X5];else if not(cp[KW[5]]<cp[KW[0X4]])then np=KW[2];end;end;end;end;else if not(xW<0XF)then if xW==0x10 then do for No=KW[0X002],KW[0X5]do(cp)[No]=nil;end;end;else if not(not cp[KW[0X02]])then else np=KW[5];end;end;else(cp)[0]=rp[KW[6]];do np=np+0X1;end;do ip=0;end;cp[ip]=cp[ip]();np=np+1;do np=np+1;end;KW=bc[np];np=np+0X1;do(cp)[1]=rp[KW[0X6]];end;np=np+0X1;np=np+0x1;do np=np+1;end;(cp)[0]=cp[0]-cp[0X00001];do KW=bc[np];end;np=np+1;if not(KW[6]<cp[0x0])then np=KW[0x00002];end;end;end;end;end;end;end;end;end);if kp then do if Hp then if yp~=1 then return cp[vp](E(cp,vp+0x1,ip));else do return cp[vp]();end;end;elseif not(vp)then else return E(cp,vp,yp);end;end;else do if V(Hp)~="string"then(q)(Hp,0X0);else do if not(r(Hp,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(r(Hp,"^.-:%d+: "))then q(Hp,0);else q("\076\117r\097\112\104 \083\099ri\112t:"..(Qc[np-0X1]or'\040\105\110\116e\114nal\041')..'\058\032'..u(Hp),0X0);end;end;end;end;end;else ic=function(...)local St=1;local et=({});local Wt=0X0;local xt=(k and k()or _ENV);local lt,Ft={[2]=Vc,[1]=et},(xt==H and fc or xt);local Zt,Xt=q3(...);Zt=Zt-1;do for Mp=0x0,Zt do if ac>Mp then(et)[Mp]=Xt[Mp+0x001];else break;end;end;end;do if not nc then do Xt=nil;end;elseif Ac then et[ac]={n=Zt>=ac and Zt-ac+0X0001 or 0X0,E(Xt,ac+0X01,Zt+1)};end;end;if Ft~=xt then if not(s)then do _ENV=Ft;end;else s(ic,Ft);end;end;local Kt,qt,yt,kt=c(function()while true do local bX=(bc[St]);local LX=(bX[3]);St=St+0X1;if not(LX>=7)then if not(LX>=3)then do if not(LX<1)then if LX~=0X002 then if not(not(et[bX[5]]<et[bX[0X4]]))then else St=bX[0X02];end;else do et[bX[2]]={E({},1,bX[0X005])};end;end;else end;end;else if not(LX>=0X00005)then if LX~=0X0004 then(et)[bX[2]]=bX[0x00006];else St=bX[5];end;else if LX~=6 then(et)[0]=Ft[bX[6]];St=St+1;do St=St+0X00001;end;bX=bc[St];St=St+0x1;et[0X0]=et[0X0][bX[0X1]];local T0=(0X00);St=St+1;local h0=(nil);St=St+1;bX=bc[St];St=St+0X0001;local B0=Uc[bX[5]];local E0=B0[5];local Q0=(#E0);do if Q0>0 then h0={};for Sj=0X00001,Q0 do local Fj=(E0[Sj]);if Fj[1]==0 then h0[Sj-0X0001]={et,Fj[2]};else(h0)[Sj-0X001]=jc[Fj[0X2]];end;end;(S)(Lc,h0);end;end;(et)[0X1]=e3(B0,h0,Ft);St=St+0X1;et[T0](et[T0+1]);Wt=T0-1;St=St+1;do repeat local hc,qc=Lc,(et);if not(#hc>0)then else local bw={};for jo,Bo in M,hc do for Iy,dy in M,Bo do if dy[1]==qc and dy[2]>=0x00000 then local tc=(dy[2]);if not(not bw[tc])then else do bw[tc]={qc[tc]};end;end;dy[0X001]=bw[tc];do(dy)[2]=1;end;end;end;end;end;until true;end;do return;end;else lt[bX[5]]=et[bX[2]];end;end;end;else if LX>=0x000b then if LX>=0X000d then do if LX~=14 then Ft[bX[0X06]]=et[bX[2]];else et[bX[2]]=Ft[bX[0X6]];end;end;else do if LX~=0X0000c then local lP=Uc[bX[5]];local YP=nil;local FP=lP[0X5];local DP=(#FP);if DP>0x00 then YP={};for ms=0X001,DP do local Hs=FP[ms];do if Hs[0X1]==0x00000 then YP[ms-1]={et,Hs[0X2]};else(YP)[ms-0x1]=jc[Hs[0X2]];end;end;end;S(Lc,YP);end;(et)[bX[0X0002]]=e3(lP,YP,Ft);else repeat local Jh,uh=Lc,(et);if not(#Jh>0X0)then else local GI={};for Sf,Qf in M,Jh do for nk,Ak in M,Qf do if Ak[0X01]==uh and Ak[0X2]>=0X000 then local Gw=(Ak[0X2]);do if not(not GI[Gw])then else do(GI)[Gw]={uh[Gw]};end;end;end;(Ak)[1]=GI[Gw];(Ak)[0X2]=1;end;end;end;end;until true;local Hs=(bX[0X0002]);return false,Hs,Hs+bX[5]-2;end;end;end;else if not(LX<9)then if LX~=0XA then if et[bX[0X05]]~=et[bX[4]]then St=bX[2];end;else local Ur=(bX[0X2]);local Br=bX[0X5];Wt=Ur+Br-1;repeat local fs,ts=Lc,et;if#fs>0x0 then local BU=({});for ko,So in M,fs do for Cm,Ym in M,So do if not(Ym[0X1]==ts and Ym[2]>=0X0)then else local OL=(Ym[2]);do if not BU[OL]then BU[OL]={ts[OL]};end;end;(Ym)[1]=BU[OL];Ym[0X00002]=0X1;end;end;end;end;until true;return true,Ur,Br;end;else if LX~=8 then et[bX[0X2]]=o(et[bX[0x5]],et[bX[0X4]]);else if not et[bX[0X2]]then St=bX[0x5];end;end;end;end;end;end;end);do if Kt then if qt then do if kt~=0X001 then do return et[yt](E(et,yt+0x1,Wt));end;else do return et[yt]();end;end;end;elseif not(yt)then else return E(et,yt,kt);end;else do if V(qt)~="\115\116rin\103"then q(qt,0X0);else if r(qt,'\097t\116\101mpt to\032y\105e\108d a\099\114\111\115s me\116ame\116\104od/C%-c\097l\108 \098\111\117nd\097\114y')then return coroutine.yield();end;if r(qt,"^.-:%d+: ")then(q)("Luraph Script:"..(Qc[St-0X1]or'\040\105nte\114na\108\041')..": "..u(qt),0x000);else(q)(qt,0X0);end;end;end;end;end;end;end;end;else if not(Sc<0X64)then if Sc~=101 then ic=function(...)local PY,uY=0x00,{};local eY=(1);local GY=({[2]=Vc,[1]=uY});local IY=(k and k()or _ENV);local wY,gY=q3(...);local cY=((IY==H and fc or IY));do wY=wY-0X1;end;do for Ud=0X000,wY do if ac>Ud then uY[Ud]=gY[Ud+0X1];else break;end;end;end;do if not nc then gY=nil;elseif Ac then uY[ac]={n=wY>=ac and wY-ac+1 or 0,E(gY,ac+0x1,wY+0X1)};end;end;if cY~=IY then do if not(s)then _ENV=cY;else s(ic,cY);end;end;end;local tY,CY,hY,fY=c(function()while true do local rD=bc[eY];local OD=(rD[3]);do eY=eY+0X001;end;if OD>=0X008 then if OD>=12 then do if not(OD<14)then do if OD<15 then(uY)[rD[0X0002]]=uY[rD[5]]*uY[rD[0X00004]];else if OD~=0x10 then uY[0X0]=cY[rD[0x6]];eY=eY+1;eY=eY+1;rD=bc[eY];do eY=eY+1;end;(uY)[0X0]=uY[0][rD[1]];eY=eY+0X1;uY[0X0]=not uY[0X0];rD=bc[eY];eY=eY+0X00001;if not uY[0]then eY=rD[5];end;else local j4=(Uc[rD[0X5]]);local M4=j4[0X05];local H4,R4=#M4,nil;if H4>0 then do R4={};end;for px=1,H4 do local Jx=M4[px];do if Jx[1]~=0X000 then do(R4)[px-1]=jc[Jx[0X2]];end;else R4[px-1]={uY,Jx[0X0002]};end;end;end;S(Lc,R4);end;(uY)[rD[0x2]]=e3(j4,R4,cY);end;end;end;else if OD~=0Xd then eY=rD[0X5];else(uY)[rD[2]]=uY[rD[5]]==uY[rD[0X00004]];end;end;end;else do if not(OD<10)then if OD==0Xb then uY[rD[2]]=rD[0x6];else cY[rD[0x0006]]=uY[rD[2]];end;else if OD~=9 then(uY)[0X0000]=cY[rD[0x006]];eY=eY+1;do PY=0X0;end;(uY)[PY]=uY[PY]();eY=eY+0X00001;uY[0X0]=not uY[0];do rD=bc[eY];end;do eY=eY+1;end;eY=rD[5];else uY[rD[0X2]]=uY[rD[5]][uY[rD[0X4]]];end;end;end;end;else do if OD>=4 then do if OD<0X6 then if OD==5 then do if uY[rD[0X5]]<=uY[rD[4]]then eY=rD[0x2];end;end;else end;else do if OD~=7 then repeat local RS,xS=Lc,uY;do if not(#RS>0)then else local y_=({});for qx,rx in M,RS do for L_,P_ in M,rx do if P_[1]==xS and P_[2]>=0 then local Xp=P_[2];if not y_[Xp]then(y_)[Xp]={xS[Xp]};end;P_[1]=y_[Xp];(P_)[2]=1;end;end;end;end;end;until true;return;else if not uY[rD[0X2]]then eY=rD[5];end;end;end;end;end;else if OD>=0X2 then do if OD~=0x03 then uY[rD[0x2]]={E({},0X1,rD[5])};else repeat local LX,DX=Lc,uY;do if not(#LX>0X0)then else local WV=({});for bZ,eZ in M,LX do for OR,IR in M,eZ do if IR[1]==DX and IR[0X2]>=0 then local PZ=IR[2];if not WV[PZ]then WV[PZ]={DX[PZ]};end;IR[0X01]=WV[PZ];IR[2]=1;end;end;end;end;end;until true;local fr=(rD[0X2]);return false,fr,fr;end;end;else if OD==1 then do uY[0X0]=cY[rD[6]];end;do eY=eY+0X0001;end;eY=eY+0X1;do rD=bc[eY];end;eY=eY+0x01;do uY[0x0]=uY[0][rD[1]];end;rD=bc[eY];eY=eY+1;eY=rD[0X5];else uY[rD[2]]=cY[rD[0x006]];end;end;end;end;end;end;end);if tY then if CY then if fY==0X1 then do return uY[hY]();end;else return uY[hY](E(uY,hY+1,PY));end;elseif not(hY)then else do return E(uY,hY,fY);end;end;else if V(CY)~='\115tr\105n\103'then(q)(CY,0);else do if not(r(CY,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(r(CY,"^.-:\037\100\043: "))then q(CY,0x00);else(q)("Lur\097\112h\032\083\099r\105\112\116:"..(Qc[eY-0X1]or"(internal)")..'\058\032'..u(CY),0);end;end;end;end;else ic=function(...)local Fh=(0X00);local jh,qh=0X1,{};local Nh=(k and k()or _ENV);local kh=({[2]=Vc,[1]=qh});local xh,ah=q3(...);xh=xh-0X1;for yS=0X0,xh do if not(ac>yS)then do break;end;else qh[yS]=ah[yS+1];end;end;local th=(Nh==H and fc or Nh);if not nc then do ah=nil;end;elseif Ac then do(qh)[ac]={n=xh>=ac and xh-ac+0X1 or 0,E(ah,ac+0X00001,xh+0X1)};end;end;if th~=Nh then if s then s(ic,th);else do _ENV=th;end;end;end;local uh,ch,Jh,lh=c(function()while true do local MB=bc[jh];local kB=MB[3];do jh=jh+0x1;end;do if kB<8 then do if kB>=0X4 then if not(kB>=6)then if kB==5 then if qh[MB[0X5]]~=qh[MB[0X4]]then else jh=MB[2];end;else local HB=(Uc[MB[0X0005]]);local aB,bB=HB[5],(nil);local LB=(#aB);do if not(LB>0)then else do bB={};end;for cW=0X1,LB do local oW=(aB[cW]);do if oW[1]~=0X0 then do bB[cW-0X001]=jc[oW[2]];end;else(bB)[cW-1]={qh,oW[2]};end;end;end;S(Lc,bB);end;end;qh[MB[0X02]]=e3(HB,bB,th);end;else if kB~=0X007 then(qh)[MB[2]]=qh[MB[0X00005]]>qh[MB[4]];else qh[MB[0x2]]=MB[0X6];end;end;else if kB<0X00002 then if kB~=0X1 then qh[MB[0X0002]][qh[MB[5]]]=qh[MB[0x4]];else(qh)[0X0]=th[MB[6]];MB=bc[jh];jh=jh+1;do qh[0x000]=qh[0][MB[0X1]];end;jh=jh+0X1;local DZ=0;jh=jh+1;do MB=bc[jh];end;local lZ=(Uc[MB[5]]);jh=jh+1;local bZ,yZ=nil,lZ[5];local pZ=(#yZ);if not(pZ>0X00)then else bZ={};for fX=0X1,pZ do local HX=(yZ[fX]);do if HX[0x1]~=0 then bZ[fX-0X1]=jc[HX[0X2]];else(bZ)[fX-1]={qh,HX[0X2]};end;end;end;(S)(Lc,bZ);end;do(qh)[0X0001]=e3(lZ,bZ,th);end;jh=jh+0x0001;qh[DZ](qh[DZ+0X1]);Fh=DZ-0X1;jh=jh+1;jh=jh+1;do MB=bc[jh];end;jh=jh+0x01;qh[0]=th[MB[0x6]];MB=bc[jh];jh=jh+1;do qh[0]=qh[0][MB[1]];end;jh=jh+0X1;jh=jh+0X00001;MB=bc[jh];jh=jh+0x001;lZ=Uc[MB[0X5]];do bZ=nil;end;yZ=lZ[0X5];do pZ=#yZ;end;if pZ>0 then bZ={};for TA=1,pZ do local cA=(yZ[TA]);if cA[0X00001]==0x00000 then bZ[TA-1]={qh,cA[0X0002]};else(bZ)[TA-0X001]=jc[cA[2]];end;end;(S)(Lc,bZ);end;(qh)[1]=e3(lZ,bZ,th);jh=jh+0x001;DZ=0x0;(qh[DZ])(qh[DZ+1]);Fh=DZ-1;MB=bc[jh];jh=jh+1;qh[0]=th[MB[6]];MB=bc[jh];jh=jh+1;do qh[0]=qh[0X0][MB[0X0001]];end;jh=jh+0X001;jh=jh+0x00001;MB=bc[jh];jh=jh+0X001;lZ=Uc[MB[5]];do bZ=nil;end;yZ=lZ[5];pZ=#yZ;if pZ>0X0 then bZ={};for Xe=0X01,pZ do local te=(yZ[Xe]);if te[1]==0X0 then bZ[Xe-0X1]={qh,te[0X2]};else bZ[Xe-1]=jc[te[0x2]];end;end;(S)(Lc,bZ);end;(qh)[0X001]=e3(lZ,bZ,th);jh=jh+1;DZ=0X0000;qh[DZ](qh[DZ+0X1]);Fh=DZ-1;MB=bc[jh];jh=jh+0X1;qh[0]=th[MB[6]];jh=jh+1;jh=jh+0X1;MB=bc[jh];jh=jh+1;qh[0]=qh[0x0][MB[1]];jh=jh+1;jh=jh+1;MB=bc[jh];do jh=jh+0X01;end;lZ=Uc[MB[5]];bZ=nil;yZ=lZ[5];pZ=#yZ;if pZ>0 then bZ={};for oj=1,pZ do local mj=yZ[oj];if mj[0X0001]==0x0 then do(bZ)[oj-1]={qh,mj[0X00002]};end;else(bZ)[oj-0X00001]=jc[mj[0X2]];end;end;(S)(Lc,bZ);end;(qh)[0X01]=e3(lZ,bZ,th);do jh=jh+1;end;DZ=0;qh[DZ](qh[DZ+0x1]);Fh=DZ-1;jh=jh+0X0001;do jh=jh+1;end;MB=bc[jh];jh=jh+1;qh[0]=th[MB[6]];MB=bc[jh];jh=jh+0X1;(qh)[0]=qh[0X0][MB[0x1]];MB=bc[jh];jh=jh+1;lZ=Uc[MB[5]];bZ=nil;yZ=lZ[0X5];do pZ=#yZ;end;if not(pZ>0)then else bZ={};for ai=1,pZ do local Fi=yZ[ai];if Fi[1]==0 then bZ[ai-1]={qh,Fi[2]};else bZ[ai-1]=jc[Fi[2]];end;end;(S)(Lc,bZ);end;do(qh)[1]=e3(lZ,bZ,th);end;jh=jh+1;DZ=0;(qh[DZ])(qh[DZ+0X0001]);Fh=DZ-1;jh=jh+1;jh=jh+0X1;MB=bc[jh];jh=jh+0X0001;qh[0]=th[MB[0X0006]];jh=jh+0X1;jh=jh+1;MB=bc[jh];jh=jh+1;(qh)[0X0]=qh[0x0][MB[1]];jh=jh+1;jh=jh+0X1;MB=bc[jh];jh=jh+1;lZ=Uc[MB[0X005]];bZ=nil;yZ=lZ[5];pZ=#yZ;if not(pZ>0)then else bZ={};for RA=0X01,pZ do local nA=yZ[RA];do if nA[0X0001]~=0 then(bZ)[RA-0X01]=jc[nA[0X0002]];else bZ[RA-1]={qh,nA[0x2]};end;end;end;S(Lc,bZ);end;do(qh)[0X1]=e3(lZ,bZ,th);end;jh=jh+0X001;do DZ=0;end;qh[DZ](qh[DZ+0X0001]);do Fh=DZ-0x1;end;do MB=bc[jh];end;jh=jh+1;(qh)[0X000]=th[MB[6]];do MB=bc[jh];end;jh=jh+0X01;(qh)[0]=qh[0][MB[0x001]];MB=bc[jh];jh=jh+1;do lZ=Uc[MB[0x0005]];end;bZ=nil;yZ=lZ[0X005];pZ=#yZ;do if pZ>0X00 then bZ={};for Yl=1,pZ do local Gl=yZ[Yl];if Gl[0x01]==0X0000 then bZ[Yl-1]={qh,Gl[2]};else bZ[Yl-1]=jc[Gl[2]];end;end;(S)(Lc,bZ);end;end;qh[1]=e3(lZ,bZ,th);jh=jh+1;DZ=0X0;(qh[DZ])(qh[DZ+0X0001]);Fh=DZ-1;jh=jh+1;jh=jh+0X01;MB=bc[jh];jh=jh+1;(qh)[0X00000]=th[MB[6]];MB=bc[jh];do jh=jh+0X1;end;qh[0x00]=qh[0x0][MB[1]];do MB=bc[jh];end;jh=jh+0x1;lZ=Uc[MB[5]];do bZ=nil;end;yZ=lZ[5];pZ=#yZ;do if pZ>0 then bZ={};for Ol=0X1,pZ do local Hl=yZ[Ol];if Hl[1]~=0X0 then(bZ)[Ol-0X1]=jc[Hl[2]];else(bZ)[Ol-0x1]={qh,Hl[2]};end;end;(S)(Lc,bZ);end;end;qh[1]=e3(lZ,bZ,th);jh=jh+0X0001;DZ=0;qh[DZ](qh[DZ+0x1]);Fh=DZ-1;do MB=bc[jh];end;jh=jh+1;qh[0]=th[MB[6]];do jh=jh+0X01;end;jh=jh+0X1;MB=bc[jh];jh=jh+0X1;(qh)[0]=qh[0X0][MB[0X1]];jh=jh+0X1;do jh=jh+0X001;end;MB=bc[jh];jh=jh+0X1;lZ=Uc[MB[0X005]];bZ=nil;yZ=lZ[0X5];pZ=#yZ;if pZ>0X000 then do bZ={};end;for x6=1,pZ do local I6=yZ[x6];if I6[0x1]==0X0 then(bZ)[x6-1]={qh,I6[2]};else bZ[x6-0X1]=jc[I6[0x2]];end;end;(S)(Lc,bZ);end;qh[0X1]=e3(lZ,bZ,th);do jh=jh+0X1;end;DZ=0X0000;(qh[DZ])(qh[DZ+1]);Fh=DZ-0X1;do jh=jh+1;end;jh=jh+0X001;MB=bc[jh];jh=jh+1;(qh)[0X0]=th[MB[6]];MB=bc[jh];do jh=jh+1;end;qh[0X00]=qh[0X0000][MB[0X00001]];jh=jh+1;jh=jh+1;MB=bc[jh];do jh=jh+0X1;end;lZ=Uc[MB[5]];bZ=nil;yZ=lZ[5];do pZ=#yZ;end;do if not(pZ>0X0)then else bZ={};for Tt=0X1,pZ do local vt=(yZ[Tt]);if vt[1]~=0X0 then bZ[Tt-0X1]=jc[vt[0X002]];else bZ[Tt-1]={qh,vt[0X2]};end;end;S(Lc,bZ);end;end;qh[0X001]=e3(lZ,bZ,th);jh=jh+0X1;DZ=0;(qh[DZ])(qh[DZ+1]);do Fh=DZ-1;end;do MB=bc[jh];end;jh=jh+0X001;(qh)[0]=th[MB[6]];do MB=bc[jh];end;jh=jh+0x1;do(qh)[0]=qh[0][MB[0X1]];end;jh=jh+0X01;jh=jh+0X00001;MB=bc[jh];jh=jh+0x1;do lZ=Uc[MB[0X5]];end;bZ=nil;yZ=lZ[0X5];pZ=#yZ;if not(pZ>0x0)then else do bZ={};end;for Wa=1,pZ do local Ca=yZ[Wa];if Ca[1]==0 then bZ[Wa-1]={qh,Ca[2]};else(bZ)[Wa-1]=jc[Ca[2]];end;end;(S)(Lc,bZ);end;(qh)[0X1]=e3(lZ,bZ,th);do jh=jh+1;end;DZ=0X0;(qh[DZ])(qh[DZ+0x1]);Fh=DZ-0X0001;MB=bc[jh];jh=jh+0X1;do qh[0]=th[MB[6]];end;jh=jh+0x0001;jh=jh+0X1;MB=bc[jh];jh=jh+0X0001;do qh[0X0000]=qh[0][MB[0X00001]];end;jh=jh+1;jh=jh+0x0001;MB=bc[jh];jh=jh+0X1;do lZ=Uc[MB[0X5]];end;bZ=nil;yZ=lZ[5];pZ=#yZ;if not(pZ>0X0000)then else bZ={};do for nD=1,pZ do local AD=yZ[nD];if AD[1]==0X000 then bZ[nD-0X1]={qh,AD[0X2]};else(bZ)[nD-0X1]=jc[AD[0X2]];end;end;end;(S)(Lc,bZ);end;qh[1]=e3(lZ,bZ,th);jh=jh+0x0001;do DZ=0X00000;end;(qh[DZ])(qh[DZ+1]);Fh=DZ-0X001;jh=jh+1;jh=jh+1;MB=bc[jh];jh=jh+0X1;qh[0]=th[MB[0X6]];MB=bc[jh];jh=jh+1;do(qh)[0X0]=qh[0X000][MB[0X1]];end;MB=bc[jh];jh=jh+1;lZ=Uc[MB[0X005]];bZ=nil;yZ=lZ[0X5];pZ=#yZ;if not(pZ>0)then else do bZ={};end;for II=0X1,pZ do local UI=yZ[II];if UI[1]==0X0 then bZ[II-0X01]={qh,UI[2]};else(bZ)[II-0X1]=jc[UI[2]];end;end;S(Lc,bZ);end;qh[0X001]=e3(lZ,bZ,th);do jh=jh+0X1;end;DZ=0X0;qh[DZ](qh[DZ+0X1]);Fh=DZ-0X1;jh=jh+1;jh=jh+1;MB=bc[jh];jh=jh+0X0001;qh[0x00]=th[MB[0X6]];MB=bc[jh];do jh=jh+0X1;end;(qh)[0]=qh[0][MB[0X01]];jh=jh+1;do jh=jh+0X1;end;do MB=bc[jh];end;jh=jh+1;do lZ=Uc[MB[5]];end;bZ=nil;yZ=lZ[5];do pZ=#yZ;end;if not(pZ>0)then else bZ={};for mK=0X1,pZ do local JK=(yZ[mK]);do if JK[1]~=0 then bZ[mK-0X0001]=jc[JK[2]];else bZ[mK-0x1]={qh,JK[2]};end;end;end;S(Lc,bZ);end;(qh)[0x00001]=e3(lZ,bZ,th);jh=jh+0X1;do DZ=0X0;end;qh[DZ](qh[DZ+0X0001]);Fh=DZ-0X1;MB=bc[jh];jh=jh+1;do qh[0x0000]=th[MB[0X6]];end;do jh=jh+1;end;jh=jh+0X1;do MB=bc[jh];end;do jh=jh+0X1;end;qh[0]=qh[0][MB[0X1]];MB=bc[jh];jh=jh+0X01;lZ=Uc[MB[5]];do bZ=nil;end;yZ=lZ[5];do pZ=#yZ;end;if not(pZ>0)then else do bZ={};end;for Eh=0X00001,pZ do local Xh=(yZ[Eh]);if Xh[1]~=0 then(bZ)[Eh-0X1]=jc[Xh[2]];else do(bZ)[Eh-1]={qh,Xh[2]};end;end;end;S(Lc,bZ);end;qh[0X1]=e3(lZ,bZ,th);jh=jh+0X1;DZ=0X0;(qh[DZ])(qh[DZ+0X1]);Fh=DZ-0x001;do jh=jh+1;end;repeat local Zq,yq=Lc,(qh);if not(#Zq>0)then else local X2=({});for ml,Zl in M,Zq do for AC,rC in M,Zl do if not(rC[1]==yq and rC[0x002]>=0x00)then else local oQ=(rC[2]);do if not(not X2[oQ])then else X2[oQ]={yq[oQ]};end;end;rC[1]=X2[oQ];rC[0X2]=1;end;end;end;end;until true;return;end;else if kB~=3 then local qb=(MB[2]);local hb=(MB[4]-0X1)*0X32;local wb=qh[qb];for NC=0X1,MB[5]do(wb)[hb+NC]=qh[qb+NC];end;else qh[MB[0X00002]]=th[MB[6]];end;end;end;end;else if not(kB<0X0C)then if not(kB>=14)then if kB~=13 then do(qh)[MB[0X2]]=kh[MB[5]];end;else local Ud=MB[2];local Md=P(function(...)(C)();for VG,dG,iG,RG,NG,PG,oG,SG,KG,WG in...do C(true,{VG,dG,iG,RG,NG,PG,oG,SG,KG,WG});end;end);(Md)(qh[Ud],qh[Ud+1],qh[Ud+0X2]);do Fh=Ud;end;qh[Ud]=Md;jh=MB[0X5];end;else if kB~=15 then for xu=MB[0X02],MB[0X5]do do(qh)[xu]=nil;end;end;else end;end;else if not(kB<0XA)then do if kB==11 then do jh=MB[5];end;else do qh[MB[0X0002]]=#qh[MB[5]];end;end;end;else if kB==0X9 then do(qh)[MB[2]]={E({},1,MB[5])};end;else local sX=MB[0x0002];local nX,hX=qh[sX]();do if nX then for sO=0X0001,MB[4]do do qh[sX+sO]=hX[sO];end;end;jh=MB[0X5];end;end;end;end;end;end;end;end;end);if uh then if ch then if lh~=1 then do return qh[Jh](E(qh,Jh+1,Fh));end;else return qh[Jh]();end;elseif not(Jh)then else return E(qh,Jh,lh);end;else do if V(ch)=="string"then if r(ch,"\097\116t\101m\112t\032\116\111\032\121i\101ld\032acr\111s\115\032metam\101\116\104o\100\047C%-\099a\108\108\032b\111u\110\100ar\121")then return coroutine.yield();end;if r(ch,"\094\046-\058%d+\058 ")then q("Luraph Script:"..(Qc[jh-1]or'\040i\110\116er\110a\108)')..": "..u(ch),0);else q(ch,0X0);end;else q(ch,0X0);end;end;end;end;end;else if Sc==0X63 then ic=function(...)local vb,wb={},1;local hb=0;local Rb=(k and k()or _ENV);local Fb=({[1]=vb,[2]=Vc});local yb,db=q3(...);do yb=yb-0x1;end;local Bb=(Rb==H and fc or Rb);for pz=0X000,yb do if ac>pz then do(vb)[pz]=db[pz+0x0001];end;else break;end;end;do if not nc then do db=nil;end;elseif Ac then(vb)[ac]={n=yb>=ac and yb-ac+1 or 0x0,E(db,ac+1,yb+1)};end;end;if Bb~=Rb then if s then(s)(ic,Bb);else _ENV=Bb;end;end;local lb,Mb,Eb,Kb=c(function()while true do local cf=(bc[wb]);local df=(cf[0X003]);wb=wb+0X01;if df<0X0005 then if not(df>=2)then if df==0X1 then vb[cf[2]]=Bb[cf[0x06]];else(vb)[cf[0x2]]=J(vb[cf[5]],vb[cf[4]]);end;else if df>=3 then if df==0x004 then do(vb)[0X0000]=Bb[cf[0x6]];end;cf=bc[wb];local sR=(0);wb=wb+1;local SR=vb[0X0];do vb[sR+1]=SR;end;vb[sR]=SR[cf[1]];do cf=bc[wb];end;do wb=wb+0X1;end;(vb)[2]=cf[0X6];wb=wb+1;sR=0X00;vb[sR]=vb[sR](vb[sR+0X1],vb[sR+2]);hb=sR;cf=bc[wb];wb=wb+0X001;(vb)[0X001]=Bb[cf[0x6]];cf=bc[wb];wb=wb+0X01;vb[1]=vb[1][cf[1]];do wb=wb+1;end;wb=wb+0X001;do cf=bc[wb];end;wb=wb+1;local GR=(Uc[cf[0X5]]);local KR=GR[5];local zR,dR=#KR,(nil);if not(zR>0)then else dR={};do for mE=1,zR do local kE=(KR[mE]);if kE[0X1]==0 then do dR[mE-1]={vb,kE[2]};end;else(dR)[mE-0X00001]=jc[kE[2]];end;end;end;S(Lc,dR);end;do vb[2]=e3(GR,dR,Bb);end;do wb=wb+0x001;end;sR=1;(vb[sR])(vb[sR+1]);hb=sR-1;wb=wb+0X1;do repeat local wV,QV=Lc,(vb);do if not(#wV>0X0)then else local bI=({});for hA,rA in M,wV do for fR,UR in M,rA do if UR[0x1]==QV and UR[0X2]>=0x0 then local ua=(UR[2]);if not(not bI[ua])then else bI[ua]={QV[ua]};end;UR[1]=bI[ua];do UR[0x002]=1;end;end;end;end;end;end;until true;end;return;else if vb[cf[5]]<=vb[cf[0X0004]]then wb=cf[0X2];end;end;else local ie=(Uc[cf[0x05]]);local Se=(ie[5]);local re,fe=#Se,(nil);if not(re>0)then else fe={};for QF=0X00001,re do local cF=Se[QF];if cF[0X1]~=0 then do(fe)[QF-0X1]=jc[cF[2]];end;else do fe[QF-0X00001]={vb,cF[2]};end;end;end;S(Lc,fe);end;do(vb)[cf[2]]=e3(ie,fe,Bb);end;end;end;else if df<8 then if not(df<6)then if df==7 then(vb)[cf[2]]=vb[cf[0X5]]+vb[cf[0x004]];else(vb)[cf[0X02]]=cf[0x0006];end;else wb=cf[0x5];end;else do if df<0x00009 then vb[cf[2]]={E({},1,cf[0x005])};else if df~=0XA then else vb[cf[2]]=v(vb[cf[5]],vb[cf[4]]);end;end;end;end;end;end;end);if not(lb)then if V(Mb)=="string"then if r(Mb,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;do if r(Mb,'^\046-\058\037d+:\032')then q("Luraph Script:"..(Qc[wb-0X1]or"\040in\116\101r\110al)")..": "..u(Mb),0X00000);else q(Mb,0X0);end;end;else q(Mb,0X0);end;else if Mb then do if Kb~=0X01 then return vb[Eb](E(vb,Eb+0X0001,hb));else return vb[Eb]();end;end;elseif not(Eb)then else return E(vb,Eb,Kb);end;end;end;else ic=function(...)local Na=1;local Ta=({});local fa=(k and k()or _ENV);local Fa=({[1]=Ta,[2]=Vc});local ra,sa=q3(...);ra=ra-1;for li=0,ra do if ac>li then(Ta)[li]=sa[li+0X1];else break;end;end;local Ya=((fa==H and fc or fa));if not nc then do sa=nil;end;elseif not(Ac)then else(Ta)[ac]={n=ra>=ac and ra-ac+0X1 or 0x000,E(sa,ac+1,ra+1)};end;local va=(0X0);if Ya==fa then else if s then(s)(ic,Ya);else _ENV=Ya;end;end;local Va,Ga,qa,Ka=c(function()while true do local k_=bc[Na];local Y_=k_[0X3];Na=Na+1;do if Y_>=0X00008 then if Y_<0Xc then if Y_>=10 then if Y_~=11 then do Ta[k_[2]]=Ta[k_[0X5]]==Ta[k_[4]];end;else Ta[k_[2]]=Ya[k_[6]];end;else if Y_~=0X9 then repeat local uS,FS=Lc,Ta;if not(#uS>0)then else local AW={};for v4,n4 in M,uS do for C2,h2 in M,n4 do do if not(h2[1]==FS and h2[2]>=0x0000)then else local IY=h2[0X2];if not(not AW[IY])then else do(AW)[IY]={FS[IY]};end;end;(h2)[1]=AW[IY];(h2)[0x002]=1;end;end;end;end;end;until true;return;else do if Ta[k_[5]]==Ta[k_[4]]then Na=k_[2];end;end;end;end;else if not(Y_>=0xe)then if Y_==13 then local dI,zI,jI=k_[0X0002],k_[5],k_[4];if zI==0 then else do va=dI+zI-0x1;end;end;local BI,sI=nil,nil;if zI==0X001 then BI,sI=q3(Ta[dI]());else BI,sI=q3(Ta[dI](E(Ta,dI+0x0001,va)));end;if jI~=1 then if jI~=0 then do BI=dI+jI-2;end;va=BI+0X01;else BI=BI+dI-0X001;va=BI;end;local Zy=(0);for e5=dI,BI do Zy=Zy+0X00001;Ta[e5]=sI[Zy];end;else va=dI-1;end;else do(Ta)[k_[2]]=Ta[k_[0X5]]+Ta[k_[0X4]];end;end;else if Y_~=0X0F then(Ta)[0x000]=Ya[k_[6]];do Na=Na+1;end;Na=Na+0x1;do k_=bc[Na];end;local Hf=0;do Na=Na+0X1;end;do Ta[0]=Ta[0][k_[0x01]];end;do Na=Na+0X01;end;Na=Na+0x00001;k_=bc[Na];Na=Na+1;local ef=Ta[0X0000];Ta[Hf+0X01]=ef;Ta[Hf]=ef[k_[1]];k_=bc[Na];Na=Na+0x01;do Ta[0x2]=k_[6];end;Na=Na+0x00001;do Hf=0;end;do Ta[Hf]=Ta[Hf](Ta[Hf+1],Ta[Hf+2]);end;va=Hf;local of=(0);do Na=Na+1;end;(Ta)[0x00]=not Ta[0X0];Na=Na+1;repeat local sc,gc=Lc,Ta;if not(#sc>0)then else local qC=({});do for SO,RO in M,sc do for tG,MG in M,RO do do if not(MG[1]==gc and MG[2]>=0)then else local Yo=MG[0X02];if not qC[Yo]then qC[Yo]={gc[Yo]};end;(MG)[0X1]=qC[Yo];MG[2]=0x1;end;end;end;end;end;end;until true;return false,of,of;else Na=k_[5];end;end;end;else if not(Y_>=4)then if not(Y_<0X2)then do if Y_==3 then repeat local LU,zU,VU=Lc,Ta,k_[0X02];if#LU>0X0000 then local UP={};do for TB,xB in M,LU do for DB,qB in M,xB do if not(qB[0X0001]==zU and qB[0X00002]>=VU)then else local Sm=qB[0X2];if not(not UP[Sm])then else UP[Sm]={zU[Sm]};end;qB[0x001]=UP[Sm];qB[2]=0X0001;end;end;end;end;end;until true;else(Ta)[k_[2]]={E({},1,k_[0X5])};end;end;else do if Y_==1 then local OG=Uc[k_[5]];local cG=(OG[0X005]);local YG,nG=#cG,nil;if YG>0 then nG={};for Ai=1,YG do local Bi=(cG[Ai]);if Bi[0X1]~=0x0 then nG[Ai-0X1]=jc[Bi[2]];else do(nG)[Ai-1]={Ta,Bi[0x002]};end;end;end;S(Lc,nG);end;Ta[k_[0X2]]=e3(OG,nG,Ya);else Ta[k_[2]]=Ta[k_[5]]^Ta[k_[4]];end;end;end;else if not(Y_>=6)then if Y_==5 then do(Ta)[k_[0X0002]]=k_[0X6];end;else do(Ta)[k_[0X0002]]=Ta[k_[0X00005]]*Ta[k_[4]];end;end;else if Y_==7 then(Ta)[k_[0X2]]=T(Ta[k_[0x5]],Ta[k_[0X4]]);else end;end;end;end;end;end;end);do if not(Va)then if V(Ga)=="string"then do if r(Ga,'\097\116tem\112t\032t\111 \121i\101\108\100 \097c\114o\115\115 met\097\109et\104od\047\067%\045\099all b\111\117\110\100a\114\121')then return coroutine.yield();end;end;do if r(Ga,"^.-:%d+: ")then(q)("Luraph Script:"..(Qc[Na-0X1]or"(internal)")..": "..u(Ga),0);else q(Ga,0x00);end;end;else(q)(Ga,0);end;else if Ga then if Ka~=1 then return Ta[qa](E(Ta,qa+1,va));else return Ta[qa]();end;elseif not(qa)then else return E(Ta,qa,Ka);end;end;end;end;end;end;end;end;else if Sc>=106 then if not(Sc>=0x6C)then if Sc==107 then ic=function(...)local eF,wF=0X1,({});local gF=((k and k()or _ENV));local VF={[1]=wF,[2]=Vc};local SF,qF=q3(...);local fF=(0);SF=SF-1;local vF=((gF==H and fc or gF));for zQ=0X0,SF do if not(ac>zQ)then do break;end;else(wF)[zQ]=qF[zQ+1];end;end;if not nc then qF=nil;elseif not(Ac)then else do wF[ac]={n=SF>=ac and SF-ac+1 or 0,E(qF,ac+1,SF+1)};end;end;if vF==gF then else do if not(s)then _ENV=vF;else s(ic,vF);end;end;end;local YF,DF,UF,jF=c(function()while true do local Yk=(bc[eF]);local yk=Yk[0X03];do eF=eF+1;end;if not(yk<11)then if yk<17 then do if not(yk<14)then if yk>=0XF then if yk==0X00010 then do(wF)[0X01]=true;end;Yk=bc[eF];local uY=(jc[0]);do eF=eF+1;end;do vF[Yk[0x006]]=wF[1];end;Yk=bc[eF];do eF=eF+1;end;(wF)[0X1]=vF[Yk[6]];do eF=eF+0X1;end;eF=eF+1;eF=eF+1;do(wF)[0x2]=uY[0X0001][uY[0x0002]];end;local aY=0X3;eF=eF+0X0001;eF=eF+1;do Yk=bc[eF];end;eF=eF+0X1;wF[2]=wF[2][Yk[0x001]];eF=eF+1;eF=eF+1;Yk=bc[eF];eF=eF+0X00001;wF[3]=vF[Yk[0x6]];Yk=bc[eF];eF=eF+0X01;(wF)[3]=wF[0X0003][Yk[1]];eF=eF+1;eF=eF+1;Yk=bc[eF];eF=eF+1;(wF)[4]=Yk[0X6];Yk=bc[eF];eF=eF+1;(wF)[5]=Yk[6];Yk=bc[eF];eF=eF+1;do(wF)[0X0006]=Yk[0x006];end;eF=eF+0X1;fF=aY+4-0X001;wF[aY]=wF[aY](E(wF,aY+0X1,fF));fF=aY;do eF=eF+1;end;eF=eF+1;eF=eF+0X01;do(wF)[0x00002]=wF[0X02]+wF[3];end;eF=eF+1;(wF)[3]=not wF[0];Yk=bc[eF];local nY=Uc[Yk[0X05]];local fY=(nY[0X5]);eF=eF+0X1;local PY,yY=nil,#fY;do if yY>0X00000 then PY={};do for wx=0X1,yY do local ix=fY[wx];do if ix[0X01]~=0 then(PY)[wx-1]=jc[ix[0X2]];else do PY[wx-0X001]={wF,ix[0X2]};end;end;end;end;end;(S)(Lc,PY);end;end;do wF[0X4]=e3(nY,PY,vF);end;eF=eF+0X0001;do aY=0x00001;end;do fF=aY+0x4-0X00001;end;wF[aY](E(wF,aY+0x0001,fF));fF=aY-0X1;eF=eF+0X1;eF=eF+1;eF=eF+0X1;wF[0x1]=false;do Yk=bc[eF];end;eF=eF+0x01;vF[Yk[6]]=wF[0X1];Yk=bc[eF];do eF=eF+1;end;eF=Yk[0X5];else(wF)[Yk[0x2]]=Yk[0X6];end;else repeat local ZX,OX=Lc,wF;do if#ZX>0X0 then local p8=({});for LH,WH in M,ZX do for yj,hj in M,WH do if hj[0x01]==OX and hj[0x02]>=0X0 then local He=(hj[2]);if not(not p8[He])then else p8[He]={OX[He]};end;do(hj)[1]=p8[He];end;hj[2]=1;end;end;end;end;end;until true;return;end;else if yk<12 then local dm=(jc[0X0]);(wF)[1]=dm[0X1][dm[2]];eF=eF+0X1;eF=eF+1;Yk=bc[eF];eF=eF+1;if not(not wF[1])then else eF=Yk[0x5];end;else if yk==13 then(VF)[Yk[0X005]]=wF[Yk[2]];else eF=Yk[5];end;end;end;end;else if not(yk>=20)then if yk<18 then local cP=wF[Yk[0X5]];local yP=Yk[2];do wF[yP+0X1]=cP;end;do(wF)[yP]=cP[Yk[1]];end;else do if yk~=19 then local a5=jc[0X002];(wF)[0x00003]=a5[1][a5[2]];do eF=eF+0X01;end;eF=eF+1;eF=eF+1;fF=3;(wF)[fF]=wF[fF]();do Yk=bc[eF];end;eF=eF+1;if not wF[0X00003]then do eF=Yk[5];end;end;else wF[Yk[2]]=v(wF[Yk[5]],wF[Yk[4]]);end;end;end;else if yk<0X15 then local Ku=(jc[0]);(wF)[1]=Ku[0x1][Ku[0X2]];do eF=eF+1;end;eF=eF+1;do Yk=bc[eF];end;do eF=eF+0X1;end;do wF[0x2]=vF[Yk[6]];end;Yk=bc[eF];eF=eF+1;wF[2]=wF[0X2][Yk[0x001]];Yk=bc[eF];eF=eF+0x1;if wF[1]~=wF[0x002]then else eF=Yk[0X2];end;else if yk~=0X00016 then local TS=jc[1];do(wF)[1]=TS[1][TS[2]];end;eF=eF+1;eF=eF+1;Yk=bc[eF];eF=eF+0X1;do if not(wF[0X1])then else eF=Yk[0X00005];end;end;else local mb=(Yk[0x2]);for Rv=mb,mb+(Yk[5]-0X1)do wF[Rv]=qF[ac+(Rv-mb)+0X1];end;end;end;end;end;else if not(yk<5)then if not(yk<0X0008)then do if yk>=9 then if yk~=10 then for C6=Yk[2],Yk[0X00005]do do(wF)[C6]=nil;end;end;else do wF[1]=vF[Yk[0X6]];end;eF=eF+0x1;do eF=eF+0X01;end;do Yk=bc[eF];end;eF=eF+0x1;(wF)[1]=wF[1][Yk[0x1]];do eF=eF+1;end;eF=eF+0x0001;Yk=bc[eF];eF=eF+1;do wF[1]=wF[1][Yk[0X0001]];end;Yk=bc[eF];local MP=0X1;do eF=eF+0X1;end;wF[0X00001]=wF[1][Yk[0X01]];eF=eF+1;do eF=eF+0X1;end;Yk=bc[eF];eF=eF+1;local xP=(wF[1]);do wF[MP+0X1]=xP;end;(wF)[MP]=xP[Yk[1]];do eF=eF+0x01;end;wF[3]=nil;do eF=eF+1;end;MP=0X1;wF[MP](wF[MP+0x1],wF[MP+2]);fF=MP-0X01;Yk=bc[eF];eF=eF+0X01;do eF=Yk[5];end;end;else local t6=(Uc[Yk[0X5]]);local B6=nil;local T6=t6[0X5];local D6=#T6;if not(D6>0)then else do B6={};end;for em=1,D6 do local Mm=(T6[em]);if Mm[1]==0X0 then do B6[em-0X1]={wF,Mm[2]};end;else B6[em-0x00001]=jc[Mm[0x002]];end;end;S(Lc,B6);end;wF[Yk[2]]=e3(t6,B6,vF);end;end;else do if yk<6 then do if not wF[Yk[2]]then eF=Yk[0X0005];end;end;else do if yk~=0X00007 then do wF[Yk[0x02]]=vF[Yk[6]];end;else wF[Yk[2]]={E({},1,Yk[0x005])};end;end;end;end;end;else if not(yk>=0X2)then do if yk~=0X1 then else(wF)[Yk[2]]=T(wF[Yk[5]],wF[Yk[4]]);end;end;else if not(yk>=0X0003)then repeat local fx,tx=Lc,wF;if not(#fx>0)then else local W8=({});for zt,Dt in M,fx do do for jJ,bJ in M,Dt do if not(bJ[1]==tx and bJ[2]>=0x0)then else local PW=(bJ[2]);if not(not W8[PW])then else(W8)[PW]={tx[PW]};end;bJ[1]=W8[PW];(bJ)[0X02]=1;end;end;end;end;end;until true;local UW=(Yk[2]);return false,UW,UW+Yk[5]-0x2;else if yk~=0X4 then do(wF)[Yk[2]]=VF[Yk[0X05]];end;else local Nw=jc[1];do wF[0X1]=Nw[0X1][Nw[0X2]];end;eF=eF+1;do eF=eF+0X1;end;do Yk=bc[eF];end;do eF=eF+0x1;end;if not wF[0X001]then eF=Yk[0X5];end;end;end;end;end;end;end;end);do if not(YF)then if V(DF)~='s\116ri\110g'then(q)(DF,0X0);else if r(DF,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if r(DF,"^.-:%d+: ")then(q)('Lurap\104 S\099rip\116:'..(Qc[eF-0X0001]or"\040\105\110\116erna\108)")..': '..u(DF),0X00000);else(q)(DF,0);end;end;end;else if DF then if jF==0X01 then do return wF[UF]();end;else return wF[UF](E(wF,UF+1,fF));end;elseif not(UF)then else do return E(wF,UF,jF);end;end;end;end;end;else ic=function(...)local fa=1;local Na={};local Ka=((k and k()or _ENV));local na=({[1]=Na,[2]=Vc});local ja,Ea=q3(...);ja=ja-0x0001;local ga=(Ka==H and fc or Ka);for Iz=0X00,ja do if not(ac>Iz)then break;else do Na[Iz]=Ea[Iz+1];end;end;end;local ha=(0X0);if not nc then Ea=nil;elseif not(Ac)then else Na[ac]={n=ja>=ac and ja-ac+0X1 or 0X0000,E(Ea,ac+1,ja+1)};end;if ga~=Ka then if not(s)then do _ENV=ga;end;else s(ic,ga);end;end;local ta,Ra,sa,pa=c(function()while true do local gp=(bc[fa]);local zp=gp[0X3];fa=fa+0x1;if not(zp<0X00009)then if not(zp>=0X00D)then if zp<0XB then do if zp~=10 then local Q2=Uc[gp[0X5]];local k2=(nil);local N2=(Q2[5]);local K2=#N2;do if not(K2>0X0)then else k2={};for Nh=1,K2 do local fh=N2[Nh];if fh[0X1]~=0X0 then k2[Nh-1]=jc[fh[2]];else k2[Nh-1]={Na,fh[0X02]};end;end;(S)(Lc,k2);end;end;(Na)[gp[2]]=e3(Q2,k2,ga);else do(Na)[gp[2]]=ga[gp[0X6]];end;end;end;else if zp==0X00C then local P7=(gp[2]);local D7=P(function(...)C();for EE,QE,lE,bE,uE,cE,RE,qE,wE,mE in...do(C)(true,{EE,QE,lE,bE,uE,cE,RE,qE,wE,mE});end;end);D7(Na[P7],Na[P7+0X1],Na[P7+0X2]);ha=P7;do Na[P7]=D7;end;do fa=gp[5];end;else end;end;else if zp>=0X000F then if zp<0x10 then fa=gp[5];else do if zp~=17 then na[gp[5]]=Na[gp[2]];else(Na)[gp[2]]=true;end;end;end;else if zp==0X0000E then Na[gp[2]]=gp[6];else Na[gp[2]]=Na[gp[0x00005]]>Na[gp[0X4]];end;end;end;else if zp<0x4 then if zp<2 then if zp==1 then(Na)[0X2]=ga[gp[0X6]];local eD=(2);fa=fa+0X0001;(Na)[3]=Na[0];fa=fa+0X00001;(Na)[eD]=Na[eD](Na[eD+0X001]);do ha=eD;end;gp=bc[fa];fa=fa+0X00001;if not(Na[2]<=Na[0X1])then do fa=gp[2];end;end;else(Na)[0X3]=Na[0]+gp[1];fa=fa+0X1;(Na)[0X00000]=Na[0X3];fa=fa+0X0001;(Na)[3]=Na[0X001]-Na[0X2];fa=fa+1;(Na)[0X01]=Na[3];gp=bc[fa];fa=fa+0x1;fa=gp[5];end;else if zp==3 then(Na)[gp[0X2]]={E({},1,gp[5])};else do(Na)[gp[2]]=Na[gp[0X5]]-Na[gp[0X04]];end;end;end;else if zp>=0X00006 then if not(zp<7)then if zp==8 then repeat local YA,fA=Lc,Na;if not(#YA>0)then else local p7=({});for E_,h_ in M,YA do for k_,Z_ in M,h_ do if Z_[0X001]==fA and Z_[0X00002]>=0 then local Lv=(Z_[0X2]);if not p7[Lv]then(p7)[Lv]={fA[Lv]};end;Z_[1]=p7[Lv];Z_[0X002]=0X001;end;end;end;end;until true;return false,gp[0X2],ha;else do repeat local zf,Kf=Lc,(Na);if#zf>0X000 then local FN={};do for OA,PA in M,zf do for gP,XP in M,PA do do if not(XP[0X1]==Kf and XP[2]>=0)then else local kI=XP[0x2];if not(not FN[kI])then else(FN)[kI]={Kf[kI]};end;XP[1]=FN[kI];(XP)[2]=1;end;end;end;end;end;end;until true;end;do return;end;end;else do(Na)[2]=ga[gp[6]];end;gp=bc[fa];do fa=fa+1;end;Na[2]=Na[2][gp[1]];local Bg=(2);do fa=fa+0X1;end;do Na[3]=Na[0];end;gp=bc[fa];do fa=fa+1;end;do Na[0X4]=gp[0X6];end;gp=bc[fa];fa=fa+1;(Na)[0X5]=ga[gp[0X6]];fa=fa+0X001;fa=fa+0X001;do fa=fa+1;end;local Jg=4;ha=Bg+Jg-1;repeat local oL,NL=Lc,(Na);if#oL>0X0 then local HB={};for pT,dT in M,oL do for N6,S6 in M,dT do if S6[0X1]==NL and S6[2]>=0X0000 then local h7=(S6[0X2]);if not HB[h7]then(HB)[h7]={NL[h7]};end;S6[1]=HB[h7];do S6[0X2]=0X00001;end;end;end;end;end;until true;do return true,Bg,Jg;end;end;else if zp~=0X5 then do Na[0]=ga[gp[0X00006]];end;do gp=bc[fa];end;fa=fa+0X1;do Na[0X0]=Na[0][gp[0X001]];end;gp=bc[fa];fa=fa+1;(Na)[0]=Na[0x0][gp[0x1]];fa=fa+0x1;do fa=fa+0X1;end;gp=bc[fa];fa=fa+0X00001;Na[0x0]=Na[0X0][gp[1]];do fa=fa+0X1;end;fa=fa+0X001;do gp=bc[fa];end;fa=fa+1;Na[0x00001]=ga[gp[6]];fa=fa+1;fa=fa+0x1;do gp=bc[fa];end;fa=fa+1;do Na[0X1]=Na[0x001][gp[1]];end;fa=fa+0X00001;fa=fa+1;gp=bc[fa];do fa=fa+1;end;Na[0x1]=Na[1][gp[0X1]];do fa=fa+0X1;end;fa=fa+1;gp=bc[fa];fa=fa+1;do(Na)[0x001]=Na[1][gp[1]];end;do fa=fa+1;end;fa=fa+0X01;gp=bc[fa];fa=fa+0X1;fa=gp[0X005];else Na[gp[2]]=Na[gp[5]]+Na[gp[4]];end;end;end;end;end;end);if ta then if Ra then if pa==0X1 then return Na[sa]();else return Na[sa](E(Na,sa+1,ha));end;elseif sa then return E(Na,sa,pa);end;else if V(Ra)=="string"then if not(r(Ra,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;do if not(r(Ra,"^.-:%d+: "))then(q)(Ra,0X0000);else(q)('Lu\114aph\032\083\099r\105\112t\058'..(Qc[fa-0X1]or"(internal)")..": "..u(Ra),0X0);end;end;else(q)(Ra,0X0);end;end;end;end;else if Sc==109 then ic=function(...)local DE,YE=1,{};local VE=(k and k()or _ENV);local gE=({[2]=Vc,[1]=YE});local oE=(VE==H and fc or VE);local QE,UE=q3(...);QE=QE-1;local cE=(0);do for gu=0,QE do if not(ac>gu)then break;else YE[gu]=UE[gu+0X1];end;end;end;if not nc then UE=nil;elseif Ac then YE[ac]={n=QE>=ac and QE-ac+0x1 or 0,E(UE,ac+0X1,QE+0x1)};end;if oE~=VE then if s then(s)(ic,oE);else _ENV=oE;end;end;do while true do local b1=(bc[DE]);DE=DE+1;local z1=(b1[0X3]);do return(function(a,E,...)end)(YE,jc,...);end;end;end;end;else ic=function(...)local zx,Qx=1,({});local Yx=((k and k()or _ENV));local Sx={[1]=Qx,[2]=Vc};local px,vx=q3(...);do px=px-1;end;local gx=((Yx==H and fc or Yx));for k8=0,px do if ac>k8 then Qx[k8]=vx[k8+1];else break;end;end;do if not nc then vx=nil;elseif Ac then do(Qx)[ac]={n=px>=ac and px-ac+1 or 0,E(vx,ac+1,px+1)};end;end;end;local wx=0;if gx~=Yx then if s then s(ic,gx);else do _ENV=gx;end;end;end;local Ox,Zx,ox,Xx=c(function()while true do local yT=bc[zx];local LT=yT[3];zx=zx+1;if not(LT<0X0000B)then do if not(LT<0X10)then if LT>=19 then if not(LT<20)then if LT==0X15 then do for tE=yT[0x2],yT[0x5]do do Qx[tE]=nil;end;end;end;else repeat local Nn,Gn=Lc,(Qx);do if#Nn>0x00 then local Tm={};for S7,v7 in M,Nn do for Gr,gr in M,v7 do if gr[1]==Gn and gr[2]>=0 then local PY=(gr[0X02]);do if not Tm[PY]then(Tm)[PY]={Gn[PY]};end;end;(gr)[1]=Tm[PY];gr[2]=1;end;end;end;end;end;until true;local t8=yT[2];return false,t8,t8;end;else local yd=(Uc[yT[0X5]]);local nd=(yd[0x5]);local wd,Ld=#nd,(nil);do if not(wd>0)then else do Ld={};end;do for Wm=1,wd do local gm=(nd[Wm]);if gm[0X1]~=0 then(Ld)[Wm-0X1]=jc[gm[2]];else do(Ld)[Wm-1]={Qx,gm[0x2]};end;end;end;end;(S)(Lc,Ld);end;end;Qx[yT[2]]=e3(yd,Ld,gx);end;else if not(LT>=0X011)then else if LT==18 then Qx[4]=gx[yT[0x6]];zx=zx+1;(Qx)[0X5]=Qx[0];yT=bc[zx];zx=zx+1;local CN=4;Qx[6]=Qx[0X01][yT[0X01]];zx=zx+1;Qx[CN]=Qx[CN](Qx[CN+1],Qx[CN+2]);wx=CN;zx=zx+1;zx=zx+1;yT=bc[zx];zx=zx+0X0001;Qx[5]=Qx[1][yT[1]];zx=zx+0x1;zx=zx+1;do yT=bc[zx];end;do zx=zx+1;end;Qx[0x5]=Qx[5][yT[1]];yT=bc[zx];zx=zx+0X0001;Qx[0x05]=Qx[0x0005][yT[0X0001]];zx=zx+0x0001;do zx=zx+0X00001;end;yT=bc[zx];zx=zx+0X1;(Qx)[5]=Qx[5]/yT[1];yT=bc[zx];zx=zx+1;Qx[0X5]=Qx[5]+yT[1];yT=bc[zx];zx=zx+1;if not(not(Qx[0X4]<=Qx[5]))then else zx=yT[2];end;else local dz=yT[2];do for hT=dz,dz+(yT[0x5]-1)do(Qx)[hT]=vx[ac+(hT-dz)+1];end;end;end;end;end;else do if not(LT<13)then do if not(LT>=14)then(Qx)[4]=gx[yT[0X6]];do zx=zx+0X0001;end;Qx[5]=Qx[0];yT=bc[zx];do zx=zx+0X1;end;Qx[0x0004][yT[0x6]]=Qx[5];yT=bc[zx];zx=zx+1;(Qx)[4]=gx[yT[6]];do zx=zx+0x01;end;zx=zx+1;do yT=bc[zx];end;zx=zx+0x0001;(Qx)[0X0005]=gx[yT[0X6]];zx=zx+0x1;zx=zx+0x1;zx=zx+1;wx=0X5;(Qx)[wx]=Qx[wx]();yT=bc[zx];do zx=zx+0x0001;end;Qx[4][yT[6]]=Qx[5];yT=bc[zx];do zx=zx+0X0001;end;(Qx)[4]=gx[yT[6]];zx=zx+0X1;zx=zx+0X1;zx=zx+0X1;Qx[5]=Qx[0X00002];yT=bc[zx];do zx=zx+0x1;end;(Qx[0X4])[yT[0X06]]=Qx[5];local la=(4);do zx=zx+0X00001;end;Qx[4]=Qx[0X2];zx=zx+0X1;repeat local t1,b1=Lc,(Qx);if not(#t1>0)then else local Xz={};for B_,h_ in M,t1 do do for PK,AK in M,h_ do if not(AK[0X1]==b1 and AK[2]>=0X0)then else local ju=AK[2];if not(not Xz[ju])then else(Xz)[ju]={b1[ju]};end;do(AK)[1]=Xz[ju];end;(AK)[0x2]=0x1;end;end;end;end;end;until true;return false,la,la;else if LT==0X0000F then if not(not Qx[yT[0x2]])then else zx=yT[0X5];end;else do Qx[yT[2]]=yT[6];end;end;end;end;else do if LT==12 then do zx=yT[0X005];end;else(Qx)[yT[2]]=Qx[yT[0X00005]];end;end;end;end;end;end;else if not(LT<5)then if LT<0X8 then if not(LT>=0X6)then(Qx)[7]=gx[yT[6]];zx=zx+1;zx=zx+0X0001;local KT=(7);do zx=zx+1;end;(Qx)[0X8]=Qx[0X00];yT=bc[zx];zx=zx+1;Qx[9]=Qx[6][yT[1]];zx=zx+0x0001;(Qx)[KT]=Qx[KT](Qx[KT+1],Qx[KT+0x002]);wx=KT;yT=bc[zx];zx=zx+0X1;Qx[0x8]=Qx[6][yT[1]];do zx=zx+1;end;do zx=zx+0X001;end;yT=bc[zx];zx=zx+1;(Qx)[8]=Qx[0x8][yT[1]];do yT=bc[zx];end;do zx=zx+1;end;do(Qx)[8]=Qx[8][yT[0X1]];end;yT=bc[zx];zx=zx+0x1;(Qx)[0x8]=Qx[8]/yT[0X001];do yT=bc[zx];end;do zx=zx+1;end;Qx[8]=Qx[0X008]+yT[1];yT=bc[zx];do zx=zx+0X00001;end;if not(Qx[7]<=Qx[8])then zx=yT[0X2];end;else if LT==0x07 then Qx[0X4]=gx[yT[0X6]];yT=bc[zx];local gd=(5);do zx=zx+1;end;(Qx)[5]=gx[yT[6]];zx=zx+0X01;zx=zx+1;yT=bc[zx];local ed=(2);do zx=zx+1;end;local bd=Qx[5];do(Qx)[gd+1]=bd;end;Qx[gd]=bd[yT[0X1]];zx=zx+0X001;gd=5;local vd=(0X0);do if ed~=0X000 then wx=gd+ed-0X1;end;end;local Bd,Kd=nil,nil;do if ed==1 then Bd,Kd=q3(Qx[gd]());else Bd,Kd=q3(Qx[gd](E(Qx,gd+1,wx)));end;end;if vd~=0x01 then if vd==0 then do Bd=Bd+gd-1;end;wx=Bd;else Bd=gd+vd-0X2;wx=Bd+0X1;end;local oo=(0x00);for mp=gd,Bd do do oo=oo+0x01;end;(Qx)[mp]=Kd[oo];end;else wx=gd-1;end;zx=zx+0X00001;gd=0x04;do ed=0;end;vd=0X4;if ed==0X00000 then else wx=gd+ed-0X1;end;Bd,Kd=nil;if ed==1 then do Bd,Kd=q3(Qx[gd]());end;else Bd,Kd=q3(Qx[gd](E(Qx,gd+1,wx)));end;if vd==1 then do wx=gd-1;end;else if vd~=0 then Bd=gd+vd-2;wx=Bd+1;else Bd=Bd+gd-1;wx=Bd;end;local fv=(0);for e9=gd,Bd do fv=fv+0x1;do(Qx)[e9]=Kd[fv];end;end;end;yT=bc[zx];do zx=zx+0X0001;end;do gd=4;end;local ld=P(function(...)(C)();for lU,YU in...do C(true,lU,YU);end;end);ld(Qx[gd],Qx[gd+0X01],Qx[gd+0X2]);do wx=gd;end;(Qx)[gd]=ld;do zx=yT[0X5];end;else Qx[yT[0X2]]=Qx[yT[0X005]]<=Qx[yT[0x4]];end;end;else if LT>=9 then if LT==0X000A then Qx[yT[0X2]]={E({},0X1,yT[5])};else do(Qx)[yT[0X002]]=Qx[yT[0x005]]-Qx[yT[0X0004]];end;end;else(Qx)[0X7]=Qx[0X0006][yT[0X00001]];do zx=zx+0X1;end;zx=zx+1;yT=bc[zx];do zx=zx+0x0001;end;do Qx[0X07]=Qx[7][yT[1]];end;do yT=bc[zx];end;zx=zx+1;(Qx)[7]=Qx[0X0007][yT[1]];zx=zx+1;Qx[0X3]=Qx[7];zx=zx+0X1;(Qx)[7]=Qx[6];zx=zx+1;Qx[2]=Qx[0X07];yT=bc[zx];do zx=zx+0X01;end;do zx=yT[0x00005];end;end;end;else if not(LT<0x2)then if LT>=0x3 then if LT==0X004 then Qx[yT[2]]=gx[yT[6]];else local rQ=(yT[0X2]);local iQ,bQ,eQ=Qx[rQ]();do if not(iQ)then else Qx[rQ+0X001]=bQ;Qx[rQ+0X02]=eQ;zx=yT[0x5];end;end;end;else Qx[0X7]=Qx[0x6][yT[1]];zx=zx+0X1;zx=zx+0x1;do yT=bc[zx];end;zx=zx+0X01;do(Qx)[7]=Qx[0x7][yT[0X1]];end;zx=zx+1;zx=zx+1;do yT=bc[zx];end;zx=zx+1;Qx[0X7]=Qx[0X00007][yT[0X1]];yT=bc[zx];zx=zx+1;if not(Qx[0X3]<Qx[7])then zx=yT[2];end;end;else do if LT==1 then repeat local WL,VL=Lc,(Qx);do if#WL>0X0 then local Jd={};for U7,I7 in M,WL do do for LN,rN in M,I7 do if rN[1]==VL and rN[2]>=0X0000 then local A_=rN[0x0002];if not Jd[A_]then do(Jd)[A_]={VL[A_]};end;end;do rN[0X1]=Jd[A_];end;do(rN)[2]=0X1;end;end;end;end;end;end;end;until true;return;else local uM=yT[0x0002];local LM,fM=Qx[uM],Qx[uM+0x01];local SM=(Qx[uM+2]);Qx[uM]=P(function()for hK=LM,fM,SM do(C)(true,hK);end;end);zx=yT[5];end;end;end;end;end;end;end);if not(Ox)then if V(Zx)~="\115\116\114i\110g"then q(Zx,0);else if r(Zx,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if r(Zx,"^.-:%d+: ")then(q)("L\117\114a\112\104\032\083cr\105pt\058"..(Qc[zx-1]or"(internal)")..": "..u(Zx),0X00);else q(Zx,0x0000);end;end;else if Zx then if Xx~=0x1 then do return Qx[ox](E(Qx,ox+0X1,wx));end;else return Qx[ox]();end;elseif not(ox)then else return E(Qx,ox,Xx);end;end;end;end;end;else if Sc<104 then if Sc==103 then do ic=function(...)local FH=({});local RH=1;local TH=(k and k()or _ENV);local LH=({[2]=Vc,[1]=FH});local PH,fH=q3(...);PH=PH-0X001;for Xa=0X0,PH do if ac>Xa then(FH)[Xa]=fH[Xa+0X0001];else break;end;end;local eH=0x00000;local xH=(TH==H and fc or TH);do if not nc then fH=nil;elseif Ac then do(FH)[ac]={n=PH>=ac and PH-ac+0X1 or 0,E(fH,ac+0X1,PH+1)};end;end;end;if xH~=TH then do if s then s(ic,xH);else do _ENV=xH;end;end;end;end;local MH,NH,gH,aH=c(function()do while true do local Zl=bc[RH];local sl=Zl[3];RH=RH+0X00001;if sl>=12 then if sl<18 then if sl>=0Xf then if not(sl<16)then do if sl==0X11 then(FH)[0x4]=xH[Zl[6]];local uj=(0X4);Zl=bc[RH];do RH=RH+0X01;end;(FH)[0x4]=FH[0x4][Zl[1]];RH=RH+1;(FH)[0x5]=FH[0];do Zl=bc[RH];end;RH=RH+0X001;do FH[0X00006]=FH[0x3][Zl[0x00001]];end;Zl=bc[RH];RH=RH+1;FH[0X006]=FH[0x6][Zl[0X00001]];do RH=RH+1;end;RH=RH+1;RH=RH+0X1;FH[uj]=FH[uj](FH[uj+1],FH[uj+0X2]);eH=uj;RH=RH+0X0001;RH=RH+0X01;Zl=bc[RH];RH=RH+0X1;do if not FH[0X04]then RH=Zl[0X5];end;end;else do(FH)[Zl[2]]=FH[Zl[0X5]]<=FH[Zl[0X4]];end;end;end;else do(FH)[4]=FH[3][Zl[1]];end;RH=RH+1;RH=RH+0X1;do Zl=bc[RH];end;do RH=RH+0x1;end;if FH[0X4]==Zl[1]then else RH=Zl[2];end;end;else if not(sl>=0xd)then do FH[Zl[0x2]]=xH[Zl[0X06]];end;else if sl==0Xe then do(FH)[Zl[0X2]]=FH[Zl[5]][Zl[0X00001]];end;else do(FH)[Zl[0X2]]=-FH[Zl[0X05]];end;end;end;end;else if sl<21 then if sl>=0X13 then if sl~=0X14 then repeat local MQ,lQ=Lc,FH;if not(#MQ>0X0000)then else local aQ=({});do for D6,Z6 in M,MQ do for DV,pV in M,Z6 do if pV[0X1]==lQ and pV[2]>=0 then local Lt=pV[2];if not(not aQ[Lt])then else aQ[Lt]={lQ[Lt]};end;(pV)[0X001]=aQ[Lt];do pV[0X2]=0X01;end;end;end;end;end;end;until true;local Ij=(Zl[0X2]);do return false,Ij,Ij;end;else do FH[Zl[2]]={E({},0X1,Zl[5])};end;end;else FH[4]=xH[Zl[6]];Zl=bc[RH];local CT=0x04;RH=RH+0X1;FH[0X00004]=FH[4][Zl[0X1]];RH=RH+1;RH=RH+0X1;RH=RH+0x1;do FH[5]=FH[0];end;Zl=bc[RH];do RH=RH+1;end;(FH)[6]=FH[3][Zl[0x1]];RH=RH+0X1;do RH=RH+0x0001;end;Zl=bc[RH];RH=RH+0x01;do FH[0X6]=FH[6][Zl[0X1]];end;RH=RH+1;RH=RH+0x1;RH=RH+0X00001;FH[CT](FH[CT+1],FH[CT+2]);eH=CT-0x1;RH=RH+1;RH=RH+0x00001;Zl=bc[RH];RH=RH+1;RH=Zl[5];end;else if not(sl>=0X0017)then do if sl~=22 then else do FH[Zl[2]]=Zl[0X6];end;end;end;else if sl==0X18 then FH[Zl[0x00002]]=FH[Zl[0x5]];else FH[Zl[0X2]]=FH[Zl[0X5]]<FH[Zl[0X4]];end;end;end;end;else if sl>=0X6 then if not(sl<9)then if sl<0xA then FH[0x00004]=xH[Zl[0x06]];local Z2=(0x0004);RH=RH+1;do RH=RH+0X001;end;Zl=bc[RH];RH=RH+0X1;FH[4]=FH[0X00004][Zl[1]];RH=RH+1;FH[0x5]=FH[0];Zl=bc[RH];RH=RH+1;do(FH)[6]=FH[3][Zl[1]];end;RH=RH+0x1;RH=RH+0x1;Zl=bc[RH];do RH=RH+0X00001;end;FH[0x6]=FH[6][Zl[1]];RH=RH+1;RH=RH+0X1;RH=RH+0x1;FH[Z2]=FH[Z2](FH[Z2+0X0001],FH[Z2+2]);eH=Z2;Zl=bc[RH];RH=RH+0X1;if not(FH[0X00004])then else RH=Zl[5];end;else do if sl==0XB then if FH[Zl[5]]==Zl[0X1]then else RH=Zl[2];end;else local rE=(Uc[Zl[0X5]]);local LE,BE=rE[5],(nil);local OE=(#LE);if not(OE>0x0)then else do BE={};end;for zl=1,OE do local Hl=(LE[zl]);if Hl[1]~=0X000 then(BE)[zl-1]=jc[Hl[2]];else BE[zl-1]={FH,Hl[2]};end;end;S(Lc,BE);end;do FH[Zl[2]]=e3(rE,BE,xH);end;end;end;end;else do if not(sl>=0X007)then RH=Zl[5];else if sl~=8 then local hM=(Zl[2]);local IM,xM,sM=FH[hM]();if IM then(FH)[hM+1]=xM;do(FH)[hM+2]=sM;end;do RH=Zl[5];end;end;else do FH[4]=FH[3][Zl[0X1]];end;do RH=RH+0X1;end;RH=RH+1;Zl=bc[RH];RH=RH+0X1;(FH)[0X5]=xH[Zl[6]];RH=RH+0X001;RH=RH+0x1;Zl=bc[RH];do RH=RH+1;end;do FH[5]=FH[5][Zl[1]];end;Zl=bc[RH];RH=RH+1;(FH)[6]=Zl[0x6];do Zl=bc[RH];end;RH=RH+1;FH[0X7]=Zl[0X06];Zl=bc[RH];local XZ=(5);RH=RH+0X1;(FH)[0x008]=Zl[0X00006];RH=RH+1;eH=XZ+4-1;do(FH)[XZ]=FH[XZ](E(FH,XZ+0X00001,eH));end;eH=XZ;RH=RH+0X001;RH=RH+0X1;Zl=bc[RH];RH=RH+0X1;if FH[0X00004]~=FH[5]then RH=Zl[2];end;end;end;end;end;else if sl<0X0003 then if not(sl<0X1)then if sl~=0X2 then do repeat local zS,ES=Lc,(FH);do if#zS>0X0 then local O1=({});for uP,bP in M,zS do do for QP,vP in M,bP do if not(vP[1]==ES and vP[2]>=0X0000)then else local a9=vP[2];do if not(not O1[a9])then else O1[a9]={ES[a9]};end;end;do(vP)[0X01]=O1[a9];end;(vP)[2]=1;end;end;end;end;end;end;until true;end;do return;end;else do FH[0X000]={};end;Zl=bc[RH];RH=RH+1;FH[1]=xH[Zl[6]];local ak=(3);RH=RH+0x1;do RH=RH+1;end;Zl=bc[RH];do RH=RH+1;end;FH[0x02]=xH[Zl[6]];Zl=bc[RH];RH=RH+1;FH[0X2]=FH[0x2][Zl[0X1]];RH=RH+1;do RH=RH+1;end;do Zl=bc[RH];end;do RH=RH+1;end;(FH)[2]=FH[0X2][Zl[0x01]];RH=RH+0x1;RH=RH+0X1;Zl=bc[RH];RH=RH+0X1;(FH)[0X2]=FH[0X0002][Zl[1]];RH=RH+1;RH=RH+0X1;Zl=bc[RH];do RH=RH+0X00001;end;FH[3]=xH[Zl[6]];RH=RH+1;do RH=RH+0x1;end;do Zl=bc[RH];end;RH=RH+1;(FH)[0x0003]=FH[3][Zl[0X1]];Zl=bc[RH];RH=RH+0x1;FH[3]=FH[0X3][Zl[1]];RH=RH+1;do RH=RH+0X1;end;Zl=bc[RH];RH=RH+1;(FH)[0X3]=FH[0X3][Zl[1]];RH=RH+1;do RH=RH+0X00001;end;Zl=bc[RH];do RH=RH+1;end;local Xk=FH[0X3];FH[ak+0X1]=Xk;FH[ak]=Xk[Zl[0X1]];do Zl=bc[RH];end;RH=RH+0X1;(FH)[5]=Zl[0X6];local Nk=(2);RH=RH+1;do ak=3;end;FH[ak]=FH[ak](FH[ak+1],FH[ak+2]);eH=ak;do RH=RH+0X01;end;RH=RH+0x001;Zl=bc[RH];RH=RH+0x1;do(FH)[0X3]=FH[3][Zl[1]];end;RH=RH+0X1;(FH)[0X00002]=FH[2][FH[0X0003]];RH=RH+0X00001;RH=RH+1;do Zl=bc[RH];end;RH=RH+1;ak=2;Xk=FH[2];FH[ak+0x1]=Xk;FH[ak]=Xk[Zl[0X1]];RH=RH+1;do ak=2;end;local jk=(0);do if Nk==0 then else eH=ak+Nk-0X0001;end;end;local Qk,Gk=nil,nil;if Nk==0X00001 then do Qk,Gk=q3(FH[ak]());end;else Qk,Gk=q3(FH[ak](E(FH,ak+1,eH)));end;if jk==1 then eH=ak-0X1;else if jk~=0X0 then do Qk=ak+jk-2;end;eH=Qk+1;else Qk=Qk+ak-1;do eH=Qk;end;end;local Lz=(0);for WI=ak,Qk do Lz=Lz+1;do FH[WI]=Gk[Lz];end;end;end;RH=RH+1;RH=RH+1;RH=RH+1;ak=1;Nk=0X0;do jk=4;end;if Nk==0 then else eH=ak+Nk-0X1;end;Qk,Gk=nil;if Nk==1 then Qk,Gk=q3(FH[ak]());else Qk,Gk=q3(FH[ak](E(FH,ak+0X1,eH)));end;if jk==0X1 then eH=ak-1;else if jk==0x00 then Qk=Qk+ak-1;eH=Qk;else Qk=ak+jk-2;eH=Qk+0X1;end;local f0=(0);do for z5=ak,Qk do f0=f0+0X1;do(FH)[z5]=Gk[f0];end;end;end;end;do RH=RH+1;end;do RH=RH+0x1;end;do Zl=bc[RH];end;RH=RH+1;ak=1;local Wk=(P(function(...)(C)();for i7,s7 in...do C(true,i7,s7);end;end));Wk(FH[ak],FH[ak+1],FH[ak+2]);eH=ak;FH[ak]=Wk;do RH=Zl[0X00005];end;end;else do(FH)[0X6]=FH[0X3][Zl[0X1]];end;Zl=bc[RH];RH=RH+1;FH[6]=FH[6][Zl[0X1]];do RH=RH+0X01;end;RH=RH+0X001;Zl=bc[RH];RH=RH+1;do if FH[6]==Zl[0X1]then RH=Zl[0X00002];end;end;end;else if sl<4 then FH[4]=xH[Zl[6]];do Zl=bc[RH];end;do RH=RH+0X1;end;do FH[4]=FH[4][Zl[0X1]];end;do RH=RH+1;end;RH=RH+1;RH=RH+1;FH[5]=FH[0X0];Zl=bc[RH];RH=RH+1;(FH)[6]=FH[3][Zl[0X01]];do RH=RH+1;end;local x9=(4);RH=RH+0x1;do Zl=bc[RH];end;RH=RH+1;FH[6]=FH[6][Zl[0X0001]];RH=RH+1;RH=RH+1;RH=RH+1;FH[x9](FH[x9+0X1],FH[x9+0X002]);do eH=x9-0x1;end;RH=RH+1;RH=RH+0X00001;Zl=bc[RH];RH=RH+1;RH=Zl[5];else if sl~=5 then local JE=(Zl[0X2]);local CE,uE=FH[JE]();do if not(CE)then else RH=Zl[0X0005];FH[JE+3]=uE;end;end;else for RI=Zl[0X02],Zl[5]do(FH)[RI]=nil;end;end;end;end;end;end;end;end;end);if not(MH)then do if V(NH)=="string"then if not(r(NH,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(NH,'^.-\058\037\100\043\058\032'))then q(NH,0);else(q)("Luraph Script:"..(Qc[RH-1]or"(internal)")..": "..u(NH),0);end;else(q)(NH,0x000);end;end;else if NH then do if aH~=0X1 then return FH[gH](E(FH,gH+0X1,eH));else return FH[gH]();end;end;elseif not(gH)then else return E(FH,gH,aH);end;end;end;end;else ic=function(...)local aI={};local pI=(1);local jI=(k and k()or _ENV);local dI=((jI==H and fc or jI));local cI,MI=q3(...);local PI,GI={[1]=aI,[2]=Vc},(0X00);do cI=cI-1;end;for B1=0x0,cI do if ac>B1 then(aI)[B1]=MI[B1+0X1];else do break;end;end;end;if not nc then MI=nil;elseif not(Ac)then else(aI)[ac]={n=cI>=ac and cI-ac+0X1 or 0,E(MI,ac+0X00001,cI+0X1)};end;if dI~=jI then if s then(s)(ic,dI);else _ENV=dI;end;end;local wI,LI,ZI,KI=c(function()while true do local OG=(bc[pI]);local RG=OG[0x3];pI=pI+0X01;do if not(RG>=13)then if RG>=6 then if not(RG<9)then if RG>=0X0B then if RG==12 then(aI)[5]=aI[3][OG[0X1]];pI=pI+1;pI=pI+0X1;OG=bc[pI];pI=pI+0X1;if not(not aI[5])then else do pI=OG[0X5];end;end;else(aI)[OG[0x00002]]={E({},1,OG[0x5])};end;else if RG~=10 then repeat local rU,MU=Lc,aI;if not(#rU>0)then else local YQ={};for tE,mE in M,rU do do for gW,xW in M,mE do if not(xW[1]==MU and xW[0X2]>=0X0)then else local N_=(xW[0x2]);if not(not YQ[N_])then else YQ[N_]={MU[N_]};end;do(xW)[0X1]=YQ[N_];end;do(xW)[2]=0X1;end;end;end;end;end;end;until true;return;else aI[0]=dI[OG[0X6]];pI=pI+1;do GI=0;end;aI[GI]=aI[GI]();pI=pI+0x1;do pI=pI+0X1;end;OG=bc[pI];pI=pI+0X1;if not(not aI[0X0])then else pI=OG[0x005];end;end;end;else if RG<7 then(aI)[OG[0x2]]=-aI[OG[5]];else if RG~=8 then(aI)[OG[2]]=dI[OG[6]];else end;end;end;else if RG>=0X0003 then if not(RG<0X4)then if RG~=0x5 then do(aI)[0]=dI[OG[6]];end;do pI=pI+1;end;pI=pI+0X1;pI=pI+0x1;GI=0;aI[GI]=aI[GI]();OG=bc[pI];pI=pI+1;if not aI[0X0]then do pI=OG[5];end;end;else local ZH=(OG[0X00002]);local NH,lH=aI[ZH]();do if NH then pI=OG[5];aI[ZH+0x3]=lH;end;end;end;else(aI)[OG[2]]=not aI[OG[0x00005]];end;else if RG>=0x1 then if RG~=0X2 then local VD=(Uc[OG[0x5]]);local BD=nil;local sD=(VD[5]);local dD=(#sD);do if not(dD>0x0)then else BD={};do for eq=1,dD do local Tq=sD[eq];if Tq[0X0001]~=0X0 then BD[eq-1]=jc[Tq[0x00002]];else(BD)[eq-0X1]={aI,Tq[0X2]};end;end;end;(S)(Lc,BD);end;end;(aI)[OG[0X2]]=e3(VD,BD,dI);else if not(aI[OG[0X005]]<aI[OG[0X4]])then else pI=OG[0X02];end;end;else local Xz,Ez=0x3,(aI[0x2]);aI[Xz+0x1]=Ez;(aI)[Xz]=Ez[OG[0X1]];OG=bc[pI];pI=pI+1;aI[0x5]=OG[0X6];pI=pI+1;Xz=0x3;(aI)[Xz]=aI[Xz](aI[Xz+0X1],aI[Xz+2]);GI=Xz;pI=pI+0X1;pI=pI+1;OG=bc[pI];pI=pI+0x01;if not(not aI[3])then else pI=OG[5];end;end;end;end;else do if RG>=0x14 then if not(RG<23)then do if not(RG<0X0019)then if RG==26 then aI[0X04]=dI[OG[6]];pI=pI+1;local xk=(4);pI=pI+0X1;OG=bc[pI];pI=pI+0X0001;aI[5]=aI[3][OG[1]];pI=pI+0X001;(aI)[xk]=aI[xk](aI[xk+0x1]);GI=xk;do OG=bc[pI];end;pI=pI+1;if not(not aI[0X4])then else do pI=OG[0X5];end;end;else aI[OG[0X02]]=aI[OG[0X5]]/aI[OG[4]];end;else do if RG~=0x000018 then(aI[3])[OG[0X6]]=OG[1];OG=bc[pI];pI=pI+1;(aI[3])[OG[0x6]]=OG[1];do OG=bc[pI];end;do pI=pI+0X1;end;pI=OG[5];else aI[OG[2]]=OG[6];end;end;end;end;else if RG>=0X15 then if RG==22 then(aI)[OG[0X2]]=aI[OG[5]]~=aI[OG[4]];else do if not(not(OG[6]<aI[OG[0x4]]))then else do pI=OG[0X2];end;end;end;end;else do aI[OG[0x002]]=aI[OG[5]][OG[0X1]];end;end;end;else if not(RG>=0X000010)then if not(RG<0X00E)then if RG~=15 then pI=OG[0X05];else aI[0X0]=dI[OG[0X006]];pI=pI+1;do pI=pI+1;end;OG=bc[pI];do pI=pI+0X1;end;aI[0X000]=aI[0][OG[1]];do pI=pI+0X1;end;pI=pI+1;do OG=bc[pI];end;pI=pI+1;if not(not aI[0])then else do pI=OG[0X5];end;end;end;else do aI[0]=dI[OG[6]];end;do pI=pI+1;end;pI=pI+1;OG=bc[pI];pI=pI+0x0001;aI[1]=dI[OG[0X0006]];do OG=bc[pI];end;local i5=(1);do pI=pI+1;end;(aI)[1]=aI[0X01][OG[0X1]];pI=pI+0X1;pI=pI+1;OG=bc[pI];pI=pI+1;local k5=(aI[1]);aI[i5+0X001]=k5;aI[i5]=k5[OG[1]];pI=pI+1;do i5=1;end;local f5=(0X2);do if f5==0 then else GI=i5+f5-0X1;end;end;local H5,T5,l5=0X0,nil,nil;if f5~=1 then T5,l5=q3(aI[i5](E(aI,i5+1,GI)));else T5,l5=q3(aI[i5]());end;if H5==0X1 then GI=i5-1;else if H5==0X00000 then T5=T5+i5-1;GI=T5;else T5=i5+H5-0X2;GI=T5+1;end;local NN=0x000;for aw=i5,T5 do do NN=NN+1;end;aI[aw]=l5[NN];end;end;pI=pI+0X1;do i5=0;end;f5=0;H5=0X4;if f5~=0X0 then do GI=i5+f5-0X1;end;end;do T5,l5=nil;end;do if f5==1 then do T5,l5=q3(aI[i5]());end;else do T5,l5=q3(aI[i5](E(aI,i5+1,GI)));end;end;end;if H5==0X1 then GI=i5-0x1;else if H5~=0 then T5=i5+H5-2;GI=T5+0x001;else T5=T5+i5-0X1;GI=T5;end;local Ez=0X0;for SJ=i5,T5 do Ez=Ez+0X1;(aI)[SJ]=l5[Ez];end;end;OG=bc[pI];pI=pI+1;do i5=0;end;local p5=P(function(...)(C)();for ls,Ws in...do(C)(true,ls,Ws);end;end);p5(aI[i5],aI[i5+1],aI[i5+0X2]);do GI=i5;end;do(aI)[i5]=p5;end;pI=OG[5];end;else do if not(RG<18)then do if RG~=19 then repeat local dc,cc,pc=Lc,aI,(OG[2]);if#dc>0X0000 then local gy={};for SJ,zJ in M,dc do for qs,Os in M,zJ do if Os[0X1]==cc and Os[2]>=pc then local H8=(Os[2]);do if not(not gy[H8])then else(gy)[H8]={cc[H8]};end;end;(Os)[0X0001]=gy[H8];(Os)[0X2]=0X1;end;end;end;end;until true;else do for Hb=OG[0X00002],OG[5]do(aI)[Hb]=nil;end;end;end;end;else if RG~=0X11 then local NB=(OG[2]);local YB,MB,oB=aI[NB]();do if not(YB)then else(aI)[NB+0X1]=MB;(aI)[NB+0X002]=oB;pI=OG[5];end;end;else if not aI[OG[2]]then do pI=OG[0X5];end;end;end;end;end;end;end;end;end;end;end;end);do if wI then if LI then do if KI~=1 then return aI[ZI](E(aI,ZI+0X1,GI));else do return aI[ZI]();end;end;end;elseif not(ZI)then else return E(aI,ZI,KI);end;else if V(LI)~="st\114i\110g"then(q)(LI,0);else if not(r(LI,"\097tte\109\112t to y\105el\100\032\097cro\115s m\101t\097m\101t\104o\100/\067\037-\099\097ll\032\098\111un\100\097\114\121"))then else return coroutine.yield();end;if r(LI,"^.-:%d+: ")then q("Luraph Script:"..(Qc[pI-0X1]or"(internal)")..": "..u(LI),0);else q(LI,0);end;end;end;end;end;end;else if Sc~=105 then do ic=function(...)local Yf,qf=1,{};local uf=0;local Cf=(k and k()or _ENV);local Bf=((Cf==H and fc or Cf));local Df=({[1]=qf,[2]=Vc});local df,Sf=q3(...);df=df-0x01;for J6=0,df do if ac>J6 then qf[J6]=Sf[J6+0X001];else do break;end;end;end;do if not nc then Sf=nil;elseif not(Ac)then else(qf)[ac]={n=df>=ac and df-ac+0X001 or 0X000,E(Sf,ac+0X0001,df+0X1)};end;end;do if Bf~=Cf then if s then s(ic,Bf);else _ENV=Bf;end;end;end;local Tf,Ef,Mf,Rf=c(function()while true do local jK=bc[Yf];local FK=(jK[0X003]);do Yf=Yf+0x1;end;do if FK<8 then if not(FK>=4)then if FK<2 then if FK~=0X1 then local sf,kf=Uc[jK[5]],nil;local Qf=(sf[0x05]);local jf=#Qf;do if not(jf>0X0)then else kf={};do for IA=1,jf do local hA=(Qf[IA]);if hA[1]==0 then(kf)[IA-0X00001]={qf,hA[2]};else(kf)[IA-0x1]=jc[hA[2]];end;end;end;(S)(Lc,kf);end;end;do qf[jK[0x02]]=e3(sf,kf,Bf);end;else do qf[4]=Bf[jK[6]];end;Yf=Yf+0X1;Yf=Yf+1;do jK=bc[Yf];end;Yf=Yf+1;(qf)[0X04]=qf[0X4][jK[0X1]];Yf=Yf+0X0001;Yf=Yf+0X1;do jK=bc[Yf];end;do Yf=Yf+1;end;local NQ,WQ=Uc[jK[5]],(4);local cQ=NQ[5];local fQ=(nil);local AQ=(#cQ);do if not(AQ>0X0)then else fQ={};for xj=1,AQ do local Gj=(cQ[xj]);if Gj[1]==0X0000 then do(fQ)[xj-0X1]={qf,Gj[0x2]};end;else fQ[xj-1]=jc[Gj[2]];end;end;S(Lc,fQ);end;end;qf[0X00005]=e3(NQ,fQ,Bf);Yf=Yf+0X00001;qf[WQ](qf[WQ+0x01]);uf=WQ-0X1;jK=bc[Yf];do Yf=Yf+0X00001;end;do Yf=jK[5];end;end;else if FK==0x3 then Yf=jK[0X5];else(qf)[jK[2]]=qf[jK[5]]==qf[jK[0x4]];end;end;else if FK>=6 then do if FK==7 then for wT=jK[2],jK[5]do(qf)[wT]=nil;end;else do qf[jK[0X2]]=T(qf[jK[5]],qf[jK[4]]);end;end;end;else do if FK~=0X00005 then(qf)[jK[2]]=Bf[jK[0X0006]];else if not(qf[jK[5]]<=qf[jK[0X00004]])then Yf=jK[0X00002];end;end;end;end;end;else if FK>=0Xc then if not(FK>=0xE)then if FK~=0xD then qf[jK[2]]={E({},1,jK[0x5])};else(qf)[jK[0X2]]=o(qf[jK[0x5]],qf[jK[4]]);end;else if not(FK<15)then if FK~=0X10 then qf[4]=true;local Kl=0X4;do jK=bc[Yf];end;Yf=Yf+0X1;do Bf[jK[0X6]]=qf[4];end;jK=bc[Yf];Yf=Yf+0X001;do qf[4]=Bf[jK[0X06]];end;do jK=bc[Yf];end;Yf=Yf+1;local bl=(qf[0X00004]);(qf)[Kl+0x01]=bl;qf[Kl]=bl[jK[1]];Yf=Yf+1;do Kl=0X04;end;(qf[Kl])(qf[Kl+1]);uf=Kl-0X0001;Yf=Yf+1;Yf=Yf+1;jK=bc[Yf];Yf=Yf+0X00001;Yf=jK[5];else qf[jK[0X02]]=jK[6];end;else(qf)[0X02]=Bf[jK[6]];jK=bc[Yf];Yf=Yf+0X1;(qf)[2]=qf[2][jK[1]];do Yf=Yf+0X00001;end;do Yf=Yf+1;end;do jK=bc[Yf];end;Yf=Yf+0X001;local Q_,l_=2,qf[0X2];(qf)[Q_+0X1]=l_;do(qf)[Q_]=l_[jK[0X00001]];end;Yf=Yf+0X01;do qf[0X4]=qf[0x0];end;Yf=Yf+0x1;do Q_=2;end;do qf[Q_]=qf[Q_](qf[Q_+1],qf[Q_+2]);end;uf=Q_;jK=bc[Yf];Yf=Yf+0X0001;qf[3]=Bf[jK[6]];jK=bc[Yf];Yf=Yf+1;qf[0X3]=qf[0X003][jK[0x1]];Yf=Yf+1;Yf=Yf+0X1;jK=bc[Yf];Yf=Yf+1;do qf[0X4]=qf[0X2][jK[0X0001]];end;jK=bc[Yf];do Yf=Yf+1;end;qf[5]=qf[0X002][jK[1]];Yf=Yf+0X00001;Q_=3;qf[Q_]=qf[Q_](qf[Q_+0X1],qf[Q_+2]);uf=Q_;Yf=Yf+1;(qf)[2]=qf[3];jK=bc[Yf];Yf=Yf+0X1;do(qf)[0X3]=Bf[jK[6]];end;Yf=Yf+0x01;(qf)[0X04]=false;Yf=Yf+1;Q_=0X3;qf[Q_](qf[Q_+1]);uf=Q_-0x1;jK=bc[Yf];Yf=Yf+1;do qf[0X3]=Bf[jK[0x6]];end;do jK=bc[Yf];end;Yf=Yf+1;Q_=3;l_=qf[0X003];qf[Q_+0x1]=l_;(qf)[Q_]=l_[jK[1]];jK=bc[Yf];Yf=Yf+0X1;(qf)[0X5]=jK[6];do Yf=Yf+1;end;do Q_=3;end;(qf)[Q_]=qf[Q_](qf[Q_+1],qf[Q_+0X2]);uf=Q_;Yf=Yf+0X1;Yf=Yf+1;jK=bc[Yf];Yf=Yf+0X01;if qf[1]==jK[1]then Yf=jK[0X2];end;end;end;else do if FK>=0XA then if FK~=0XB then(qf)[jK[2]]=jK[0x6];else qf[4]=Bf[jK[6]];Yf=Yf+1;Yf=Yf+0X1;do Yf=Yf+1;end;(qf)[5]=true;Yf=Yf+1;local Pf=(4);qf[Pf](qf[Pf+1]);uf=Pf-1;Yf=Yf+0x001;Yf=Yf+1;do Yf=Yf+0x1;end;repeat local dZ,eZ=Lc,(qf);do if not(#dZ>0X000)then else local zD={};do for Wm,Km in M,dZ do do for bV,IV in M,Km do do if not(IV[1]==eZ and IV[0X2]>=0X0000)then else local OS=(IV[2]);do if not(not zD[OS])then else(zD)[OS]={eZ[OS]};end;end;(IV)[1]=zD[OS];(IV)[0X0002]=1;end;end;end;end;end;end;end;end;until true;return;end;else if FK==9 then(qf)[jK[2]]=qf[jK[0x5]]<=qf[jK[4]];else end;end;end;end;end;end;end;end);if not(Tf)then if V(Ef)=='s\116\114i\110\103'then if r(Ef,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if r(Ef,'\094.\045:%d\043: ')then(q)('\076ur\097p\104 \083c\114ip\116\058'..(Qc[Yf-0X1]or"\040\105\110\116\101\114\110\097l)")..": "..u(Ef),0);else(q)(Ef,0);end;else(q)(Ef,0);end;else if Ef then do if Rf==1 then do return qf[Mf]();end;else do return qf[Mf](E(qf,Mf+1,uf));end;end;end;elseif not(Mf)then else return E(qf,Mf,Rf);end;end;end;end;else ic=function(...)local uo={};local so=0X00001;local So={[2]=Vc,[1]=uo};local jo=(k and k()or _ENV);local Ho=((jo==H and fc or jo));local vo=0X00000;local oo,Ro=q3(...);oo=oo-1;for sV=0,oo do do if not(ac>sV)then break;else uo[sV]=Ro[sV+0x001];end;end;end;if not nc then Ro=nil;elseif not(Ac)then else(uo)[ac]={n=oo>=ac and oo-ac+1 or 0,E(Ro,ac+1,oo+1)};end;if Ho~=jo then if s then(s)(ic,Ho);else _ENV=Ho;end;end;local Zo,Qo,Mo,Wo=c(function()while true do local Fm=(bc[so]);local Lm=(Fm[0x3]);so=so+1;do if not(Lm<0X7)then if not(Lm>=0Xa)then if not(Lm<8)then if Lm==0X9 then for vl=Fm[2],Fm[5]do(uo)[vl]=nil;end;else(uo)[Fm[2]]=Ho[Fm[6]];end;else(uo)[Fm[0X00002]]=Fm[6];end;else if Lm<12 then do if Lm==11 then else do uo[0x00]=Ho[Fm[6]];end;local US=0x0;so=so+1;(uo)[0X0]=not uo[0X0];so=so+1;repeat local gM,QM=Lc,uo;if#gM>0x00000 then local R_=({});for EG,tG in M,gM do do for pI,JI in M,tG do if JI[0X1]==QM and JI[0x2]>=0 then local cy=(JI[2]);do if not R_[cy]then R_[cy]={QM[cy]};end;end;(JI)[0X1]=R_[cy];do JI[0X002]=0X1;end;end;end;end;end;end;until true;return false,US,US;end;end;else if Lm~=0X00D then local Si=(Uc[Fm[5]]);local Wi,Ri=Si[5],nil;local si=(#Wi);if si>0x0 then Ri={};do for vM=0x1,si do local FM=Wi[vM];if FM[0X1]~=0x0 then(Ri)[vM-1]=jc[FM[0X2]];else Ri[vM-0x00001]={uo,FM[2]};end;end;end;S(Lc,Ri);end;do(uo)[Fm[2]]=e3(Si,Ri,Ho);end;else(uo)[Fm[2]]=uo[Fm[0X5]][uo[Fm[4]]];end;end;end;else if Lm>=0X3 then if Lm>=0X00005 then if Lm==0X6 then do so=Fm[0X5];end;else(uo)[Fm[0X2]]=#uo[Fm[5]];end;else if Lm~=0X4 then local lL=Fm[0X2];local nL=Fm[5];do if nL~=0X0 then do vo=lL+nL-1;end;end;end;local eL=(Fm[4]);local NL,iL=nil,nil;if nL==0X1 then NL,iL=q3(uo[lL]());else do NL,iL=q3(uo[lL](E(uo,lL+0x0001,vo)));end;end;if eL~=0X001 then if eL==0 then NL=NL+lL-1;do vo=NL;end;else NL=lL+eL-2;vo=NL+1;end;local ts=(0X0);for fQ=lL,NL do do ts=ts+0x1;end;uo[fQ]=iL[ts];end;else do vo=lL-0X1;end;end;else local GK=uo[Fm[5]]/uo[Fm[4]];(uo)[Fm[0X2]]=GK-GK%0X0001;end;end;else do if not(Lm>=1)then do repeat local MC,WC=Lc,(uo);if not(#MC>0X0)then else local tB=({});for xJ,OJ in M,MC do for pB,nB in M,OJ do if not(nB[0X1]==WC and nB[0X02]>=0x00000)then else local dM=(nB[2]);if not(not tB[dM])then else do tB[dM]={WC[dM]};end;end;nB[0X00001]=tB[dM];nB[0X2]=1;end;end;end;end;until true;end;return;else if Lm==0X2 then do(uo)[Fm[0X2]]={E({},0x1,Fm[5])};end;else uo[Fm[2]]=uo[Fm[5]]>=uo[Fm[4]];end;end;end;end;end;end;end;end);if not(Zo)then if V(Qo)=="s\116\114\105n\103"then if not(r(Qo,"a\116\116\101\109pt \116\111 yield \097\099\114\111ss \109\101\116\097\109e\116hod/C%-\099a\108\108\032b\111\117\110\100a\114y"))then else return coroutine.yield();end;if not(r(Qo,"^.-:%d+: "))then(q)(Qo,0X0000);else(q)("Lu\114ap\104 \083\099r\105pt\058"..(Qc[so-1]or"(internal)")..'\058 '..u(Qo),0);end;else q(Qo,0);end;else if Qo then do if Wo~=0X001 then return uo[Mo](E(uo,Mo+0x1,vo));else return uo[Mo]();end;end;elseif not(Mo)then else do return E(uo,Mo,Wo);end;end;end;end;end;end;end;end;end;end;else if Sc<0X004E then if not(Sc>=70)then if Sc<66 then if not(Sc<0X00040)then do if Sc~=65 then do ic=function(...)local nS=1;local LS=({});local uS=((k and k()or _ENV));local dS,KS={[1]=LS,[2]=Vc},((uS==H and fc or uS));local gS,MS=q3(...);do gS=gS-0x1;end;for Y6=0X0,gS do if not(ac>Y6)then break;else do LS[Y6]=MS[Y6+1];end;end;end;local AS=(0);if not nc then MS=nil;elseif not(Ac)then else(LS)[ac]={n=gS>=ac and gS-ac+0x00001 or 0x000,E(MS,ac+1,gS+0X1)};end;do if KS~=uS then if s then s(ic,KS);else _ENV=KS;end;end;end;while true do local xP=bc[nS];nS=nS+1;local pP=(xP[3]);do return(function(b,F,...)local f,A,E=b[0],b[1],b[2];local g=A or Root and Root.Position;return not E and(Vector3.new(f.X,0,f.Z)-Vector3.new(g.X,0,g.Z)).magnitude or(Vector3.new(f.X,f.Y,f.Z)-Vector3.new(g.X,g.Y,g.Z)).magnitude;end)(LS,jc,...);end;end;end;end;else do ic=function(...)local Xh=(0);local Yh=({});local Wh,hh={[1]=Yh,[2]=Vc},(0X1);local zh=((k and k()or _ENV));local ih,Gh=q3(...);local Dh=((zh==H and fc or zh));ih=ih-1;do for SL=0x0,ih do do if not(ac>SL)then break;else do(Yh)[SL]=Gh[SL+0X1];end;end;end;end;end;do if not nc then do Gh=nil;end;elseif Ac then do Yh[ac]={n=ih>=ac and ih-ac+0X1 or 0x0,E(Gh,ac+0x00001,ih+1)};end;end;end;if Dh~=zh then if s then s(ic,Dh);else _ENV=Dh;end;end;local Hh,xh,dh,Oh=c(function()do while true do local mb=(bc[hh]);local jb=mb[0X03];hh=hh+0X1;if jb>=0X08 then if not(jb>=0Xc)then if not(jb>=0X00A)then if jb~=0x9 then(Yh)[mb[0X2]]=mb[0x6];else local Nz=(mb[2]);for Ai=Nz,Nz+(mb[5]-0X1)do Yh[Ai]=Gh[ac+(Ai-Nz)+1];end;end;else if jb~=11 then do Yh[mb[2]]=Dh[mb[0X6]];end;else Yh[mb[0X2]]=Yh[mb[0x5]]==Yh[mb[4]];end;end;else do if jb>=0XE then if jb~=15 then(Yh)[mb[2]]=-Yh[mb[0X00005]];else do Yh[mb[2]]=#Yh[mb[5]];end;end;else if jb==0XD then local fx=Uc[mb[0x00005]];local jx,qx=fx[0X5],(nil);local yx=#jx;if yx>0 then qx={};do for nu=0x1,yx do local Gu=jx[nu];do if Gu[0X1]==0 then(qx)[nu-0x1]={Yh,Gu[0X0002]};else(qx)[nu-1]=jc[Gu[0X02]];end;end;end;end;(S)(Lc,qx);end;(Yh)[mb[2]]=e3(fx,qx,Dh);else(Yh)[mb[0x0002]]=w(Yh[mb[0x5]],Yh[mb[0x004]]);end;end;end;end;else if jb<0X4 then if jb<2 then if jb==1 then for v9=mb[2],mb[0x5]do Yh[v9]=nil;end;else end;else do if jb~=3 then(Yh)[mb[2]]=Yh[mb[0X0005]]~=Yh[mb[0X4]];else(Yh)[mb[0X2]]={E({},0X1,mb[0X005])};end;end;end;else if not(jb>=6)then do if jb==0X005 then local BB,kB,TB=mb[0x02],mb[5],(mb[4]);do if kB~=0X00 then do Xh=BB+kB-1;end;end;end;local IB,qB=nil,(nil);if kB~=1 then do IB,qB=q3(Yh[BB](E(Yh,BB+0X1,Xh)));end;else do IB,qB=q3(Yh[BB]());end;end;if TB==1 then Xh=BB-1;else do if TB~=0X00000 then IB=BB+TB-0X2;Xh=IB+0X001;else IB=IB+BB-1;Xh=IB;end;end;local Ne=0;do for AS=BB,IB do Ne=Ne+0X01;(Yh)[AS]=qB[Ne];end;end;end;else(Yh)[0X000]=Dh[mb[6]];hh=hh+0X00001;local OS=0;hh=hh+1;mb=bc[hh];hh=hh+0X1;local zS=(Yh[0]);(Yh)[OS+0X1]=zS;(Yh)[OS]=zS[mb[1]];mb=bc[hh];do hh=hh+0X1;end;(Yh)[0X2]=mb[0X6];hh=hh+1;OS=0;do Yh[OS]=Yh[OS](Yh[OS+0x1],Yh[OS+2]);end;Xh=OS;do hh=hh+0X01;end;hh=hh+0x1;mb=bc[hh];do hh=hh+0X1;end;Yh[0X1]=Dh[mb[0x06]];mb=bc[hh];hh=hh+1;(Yh)[1]=Yh[0X1][mb[0x1]];mb=bc[hh];local YS=(Uc[mb[0X5]]);local cS=YS[0X5];hh=hh+0X1;local MS,sS=nil,#cS;if not(sS>0X0000)then else do MS={};end;for X0=1,sS do local K0=cS[X0];do if K0[0x1]==0X0 then(MS)[X0-1]={Yh,K0[2]};else do(MS)[X0-1]=jc[K0[2]];end;end;end;end;(S)(Lc,MS);end;Yh[2]=e3(YS,MS,Dh);hh=hh+0x01;do OS=1;end;Yh[OS](Yh[OS+0x01]);do Xh=OS-0X1;end;hh=hh+1;hh=hh+1;hh=hh+1;repeat local MG,NG=Lc,(Yh);do if not(#MG>0)then else local xV=({});for hF,wF in M,MG do for Ey,Ky in M,wF do if not(Ky[0X00001]==NG and Ky[2]>=0)then else local xK=Ky[2];if not(not xV[xK])then else(xV)[xK]={NG[xK]};end;Ky[1]=xV[xK];Ky[2]=1;end;end;end;end;end;until true;return;end;end;else if jb~=7 then(Yh)[mb[0x0002]]=Yh[mb[0X005]]-Yh[mb[4]];else do hh=mb[0X00005];end;end;end;end;end;end;end;end);do if not(Hh)then do if V(xh)~="string"then(q)(xh,0);else if r(xh,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if r(xh,'\094.-\058%\100\043\058 ')then q("Luraph Script:"..(Qc[hh-1]or'\040\105\110t\101r\110\097\108)')..": "..u(xh),0);else q(xh,0);end;end;end;else if xh then if Oh==1 then return Yh[dh]();else return Yh[dh](E(Yh,dh+1,Xh));end;elseif dh then return E(Yh,dh,Oh);end;end;end;end;end;end;end;else ic=function(...)local Nv,Lv=0X0001,({});local Mv=(k and k()or _ENV);local av={[1]=Lv,[2]=Vc};local Bv,hv=q3(...);do Bv=Bv-1;end;local kv,xv=0,(Mv==H and fc or Mv);for fZ=0x0,Bv do if ac>fZ then do(Lv)[fZ]=hv[fZ+1];end;else do break;end;end;end;do if not nc then hv=nil;elseif not(Ac)then else do(Lv)[ac]={n=Bv>=ac and Bv-ac+0x1 or 0,E(hv,ac+1,Bv+0X001)};end;end;end;if xv==Mv then else if not(s)then _ENV=xv;else(s)(ic,xv);end;end;local Tv,Zv,qv,Ev=c(function()while true do local dD=(bc[Nv]);local iD=(dD[0X00003]);Nv=Nv+1;if iD<0x0c then if not(iD>=6)then if not(iD<3)then if not(iD>=4)then(Lv)[dD[0X2]]=Lv[dD[0X5]][Lv[dD[0x04]]];else if iD==5 then local Fh=(jc[1]);do(Lv)[0X05]=Fh[0X1][Fh[0x00002]];end;local Lh=Lv[5];Nv=Nv+1;do Nv=Nv+1;end;dD=bc[Nv];Nv=Nv+0X001;local sh=0X5;Lv[sh+0X1]=Lh;(Lv)[sh]=Lh[dD[1]];Nv=Nv+1;sh=0X5;Lv[sh](Lv[sh+0X1]);kv=sh-0X1;dD=bc[Nv];Nv=Nv+0X1;Lv[0X0005]=Lv[4][dD[0x01]];Nv=Nv+0X1;do Lv[6]=true;end;Nv=Nv+1;sh=5;Lv[sh](Lv[sh+1]);kv=sh-0X00001;Nv=Nv+1;Nv=Nv+1;dD=bc[Nv];Nv=Nv+0X1;do Nv=dD[5];end;else repeat local GX,AX=Lc,(Lv);if#GX>0X0 then local L4={};do for lQ,jQ in M,GX do do for IF,mF in M,jQ do if not(mF[1]==AX and mF[2]>=0)then else local Wn=(mF[2]);if not(not L4[Wn])then else do L4[Wn]={AX[Wn]};end;end;(mF)[1]=L4[Wn];(mF)[0X2]=0X001;end;end;end;end;end;end;until true;do return;end;end;end;else if iD>=1 then do if iD==0X2 then do if Lv[dD[5]]~=Lv[dD[0X4]]then else Nv=dD[2];end;end;else local yW=Uc[dD[5]];local nW,hW=yW[0X5],nil;local RW=(#nW);do if RW>0X00 then do hW={};end;for n0=1,RW do local U0=nW[n0];do if U0[0X1]~=0X0000 then(hW)[n0-1]=jc[U0[2]];else(hW)[n0-0X1]={Lv,U0[0X2]};end;end;end;S(Lc,hW);end;end;Lv[dD[0X2]]=e3(yW,hW,xv);end;end;else do(Lv)[dD[2]]=Lv[dD[0X0005]]/Lv[dD[4]];end;end;end;else do if not(iD<9)then if iD>=10 then if iD~=11 then Lv[dD[0X00002]]=Lv[dD[0X5]];else(Lv)[dD[2]]={E({},0x001,dD[0X5])};end;else Lv[0x05]=Lv[4][dD[1]];Nv=Nv+0X01;Lv[1]=Lv[0X05];do dD=bc[Nv];end;Nv=Nv+0X0001;if not Lv[0X1]then Nv=dD[5];end;end;else if iD>=7 then if iD~=0X8 then else(Lv)[dD[2]]=Lv[dD[0X5]]>Lv[dD[0X0004]];end;else local Rd=dD[0X02];local Vd,ld=Lv[Rd]();do if Vd then for Ty=1,dD[0x4]do(Lv)[Rd+Ty]=ld[Ty];end;Nv=dD[0X5];end;end;end;end;end;end;else if iD<18 then do if iD>=0Xf then if not(iD>=16)then local yz,xz=dD[0X2],(dD[5]);do kv=yz+xz-0X001;end;repeat local K8,O8=Lc,(Lv);if not(#K8>0X0)then else local RY=({});do for WY,VY in M,K8 do for cB,DB in M,VY do if not(DB[1]==O8 and DB[0x2]>=0X0)then else local qP=DB[0x02];if not RY[qP]then(RY)[qP]={O8[qP]};end;(DB)[1]=RY[qP];(DB)[2]=1;end;end;end;end;end;until true;do return true,yz,xz;end;else if iD==17 then(Lv)[0x0]=xv[dD[6]];local HE=jc[0];Nv=Nv+1;do(Lv)[1]=HE[0x00001][HE[2]];end;dD=bc[Nv];local hE=Uc[dD[5]];do Nv=Nv+1;end;local CE=(hE[5]);local VE=(nil);local AE=(#CE);do if AE>0 then do VE={};end;for Sp=0X0001,AE do local Qp=CE[Sp];if Qp[1]~=0 then VE[Sp-1]=jc[Qp[2]];else do(VE)[Sp-0X00001]={Lv,Qp[2]};end;end;end;(S)(Lc,VE);end;end;(Lv)[0X02]=e3(hE,VE,xv);Nv=Nv+1;local DE,GE,fE=0X00003,0X3,(0);if GE~=0 then do kv=fE+GE-0X1;end;end;local nE,vE=nil,nil;if GE~=1 then do nE,vE=q3(Lv[fE](E(Lv,fE+0X1,kv)));end;else nE,vE=q3(Lv[fE]());end;if DE~=0X1 then do if DE~=0x00 then nE=fE+DE-2;do kv=nE+0X1;end;else nE=nE+fE-0X1;do kv=nE;end;end;end;local Oc=0x0000;for R7=fE,nE do do Oc=Oc+1;end;Lv[R7]=vE[Oc];end;else kv=fE-1;end;dD=bc[Nv];do Nv=Nv+1;end;do(Lv)[0X2]=xv[dD[0X06]];end;Nv=Nv+0X01;Nv=Nv+0X1;Nv=Nv+1;Lv[3]=Lv[0X0];Nv=Nv+0x1;fE=0X0002;do GE=2;end;do DE=0X004;end;do if GE==0 then else kv=fE+GE-0X1;end;end;nE,vE=nil;if GE==1 then do nE,vE=q3(Lv[fE]());end;else nE,vE=q3(Lv[fE](E(Lv,fE+1,kv)));end;if DE==1 then kv=fE-0X01;else do if DE~=0 then nE=fE+DE-0x0002;do kv=nE+0x1;end;else do nE=nE+fE-1;end;do kv=nE;end;end;end;local DU=0;do for mq=fE,nE do DU=DU+0X1;(Lv)[mq]=vE[DU];end;end;end;dD=bc[Nv];Nv=Nv+0X001;fE=2;local RE=(P(function(...)C();do for kc,Fc in...do(C)(true,kc,Fc);end;end;end));RE(Lv[fE],Lv[fE+1],Lv[fE+2]);kv=fE;do(Lv)[fE]=RE;end;Nv=dD[0X5];else do Lv[dD[2]]=xv[dD[6]];end;end;end;else do if iD>=0Xd then if iD==0xE then local P_=(jc[0X2]);do(Lv)[2]=P_[0x1][P_[2]];end;local z_=(0x2);Nv=Nv+0X00001;Nv=Nv+1;dD=bc[Nv];Nv=Nv+0X1;Lv[0X002]=Lv[0x2][dD[1]];Nv=Nv+0X0001;Nv=Nv+1;Nv=Nv+1;Lv[0x3]=Lv[1];Nv=Nv+1;P_=jc[0x1];do(Lv)[0X4]=P_[0X01][P_[0X00002]];end;do Nv=Nv+0x001;end;(Lv[z_])(Lv[z_+1],Lv[z_+0x2]);kv=z_-0X1;dD=bc[Nv];do Nv=Nv+0x1;end;Nv=dD[5];else for kn=dD[0X2],dD[0X5]do(Lv)[kn]=nil;end;end;else local IO=(jc[0X2]);(Lv)[0X2]=IO[1][IO[0X2]];dD=bc[Nv];local LO=(0x2);Nv=Nv+0X001;Lv[2]=Lv[2][dD[1]];do Nv=Nv+0X01;end;Nv=Nv+1;do Nv=Nv+1;end;Lv[0x3]=Lv[1];Nv=Nv+0X1;(Lv)[LO]=Lv[LO](Lv[LO+0X1]);do kv=LO;end;Nv=Nv+1;Nv=Nv+1;dD=bc[Nv];Nv=Nv+0x1;do if not Lv[2]then Nv=dD[5];end;end;end;end;end;end;else if not(iD>=0X15)then if not(iD>=19)then do Nv=dD[5];end;else do if iD==0X14 then local o6=dD[2];local W6,w6,Z6=Lv[o6],Lv[o6+1],(Lv[o6+2]);Lv[o6]=P(function()for pl=W6,w6,Z6 do(C)(true,pl);end;end);do Nv=dD[5];end;else Lv[dD[2]]=-Lv[dD[5]];end;end;end;else if iD<22 then Lv[dD[2]]=dD[6];else do if iD==0X17 then local Wq=(dD[2]);local iq,pq,Hq=Lv[Wq]();do if not(iq)then else do Lv[Wq+1]=pq;end;(Lv)[Wq+0X00002]=Hq;Nv=dD[0X5];end;end;else do(Lv)[5]=Lv[0x4][dD[0X00001]];end;Nv=Nv+1;Nv=Nv+0X1;dD=bc[Nv];Nv=Nv+0X001;if not(Lv[0x5])then else Nv=dD[0X0005];end;end;end;end;end;end;end;end;end);if Tv then if Zv then if Ev~=0x1 then return Lv[qv](E(Lv,qv+0X001,kv));else do return Lv[qv]();end;end;elseif qv then return E(Lv,qv,Ev);end;else do if V(Zv)~="string"then q(Zv,0x00);else do if not(r(Zv,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if r(Zv,"^.-\058%d\043: ")then q("\076ur\097\112h Scrip\116\058"..(Qc[Nv-0X1]or'(\105\110te\114\110\097\108)')..':\032'..u(Zv),0);else q(Zv,0);end;end;end;end;end;end;else if Sc>=0X0044 then do if Sc~=69 then ic=function(...)local uf,df=1,{};local bf=(k and k()or _ENV);local wf={[1]=df,[2]=Vc};local Cf,pf=q3(...);local Jf,tf=0X00000,((bf==H and fc or bf));do Cf=Cf-0X01;end;for UN=0,Cf do if ac>UN then df[UN]=pf[UN+1];else break;end;end;if not nc then pf=nil;elseif not(Ac)then else(df)[ac]={n=Cf>=ac and Cf-ac+0X0001 or 0X0,E(pf,ac+0X00001,Cf+0X1)};end;if tf==bf then else if not(s)then _ENV=tf;else(s)(ic,tf);end;end;local ff,of,qf,Qf=c(function()while true do local yb=bc[uf];local Rb=(yb[0x003]);uf=uf+1;if not(Rb<6)then do if Rb<9 then if not(Rb>=0X7)then(df)[0]=tf[yb[6]];local vu=1;uf=uf+0x00001;do uf=uf+0x1;end;yb=bc[uf];uf=uf+0X1;df[1]=tf[yb[6]];yb=bc[uf];uf=uf+0x1;do df[2]=yb[6];end;uf=uf+0X1;df[0X3]=true;do uf=uf+1;end;df[vu]=df[vu](df[vu+1],df[vu+2]);Jf=vu;do yb=bc[uf];end;uf=uf+1;(df)[1]=df[0X1][yb[1]];do uf=uf+0X01;end;uf=uf+1;yb=bc[uf];uf=uf+0X0001;df[0X1]=df[0X1][yb[0x00001]];uf=uf+0X1;uf=uf+1;yb=bc[uf];do uf=uf+0x1;end;(df[0])[yb[6]]=df[0X1];do uf=uf+1;end;do repeat local Tz,nz=Lc,(df);if not(#Tz>0X0000)then else local pZ={};for wE,JE in M,Tz do for Zv,Vv in M,JE do if Vv[1]==nz and Vv[2]>=0 then local vi=Vv[0X2];if not pZ[vi]then(pZ)[vi]={nz[vi]};end;do Vv[1]=pZ[vi];end;Vv[0X0002]=1;end;end;end;end;until true;end;return;else if Rb==0X8 then df[yb[2]]={E({},0x1,yb[5])};else end;end;else if not(Rb<10)then if Rb==0XB then local OI=(Uc[yb[0X5]]);local BI=OI[0x5];local mI=(nil);local SI=(#BI);if SI>0X0 then mI={};for nD=0x00001,SI do local ND=BI[nD];if ND[1]~=0 then mI[nD-1]=jc[ND[0x00002]];else do mI[nD-0X1]={df,ND[0x2]};end;end;end;S(Lc,mI);end;do(df)[yb[0X2]]=e3(OI,mI,tf);end;else uf=yb[0X5];end;else do(df)[yb[0x00002]]=tf[yb[0x6]];end;end;end;end;else if not(Rb<3)then if not(Rb>=4)then(df)[yb[0X2]]=yb[6];else if Rb~=5 then(df[yb[2]])[df[yb[0X5]]]=df[yb[0X00004]];else local Bc=yb[2];local Jc=P(function(...)(C)();for Bo,Eo,Oo,Go,Uo,To,lo,eo,oo,Mo in...do(C)(true,{Bo,Eo,Oo,Go,Uo,To,lo,eo,oo,Mo});end;end);(Jc)(df[Bc],df[Bc+0x001],df[Bc+0X2]);do Jf=Bc;end;(df)[Bc]=Jc;uf=yb[5];end;end;else do if Rb>=0X1 then do if Rb==2 then df[yb[0X2]]=df[yb[5]]<=df[yb[4]];else do(df)[yb[2]]=df[yb[5]]%df[yb[4]];end;end;end;else local O2,k2=yb[0X00002],(df[yb[5]]);df[O2+0X1]=k2;(df)[O2]=k2[yb[1]];end;end;end;end;end;end);if ff then if of then if Qf==1 then do return df[qf]();end;else return df[qf](E(df,qf+1,Jf));end;elseif qf then return E(df,qf,Qf);end;else if V(of)~='strin\103'then q(of,0);else if not(r(of,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(of,'\094.\045\058\037d\043:\032'))then(q)(of,0);else q("\076u\114ap\104 \083c\114\105p\116\058"..(Qc[uf-1]or"(internal)")..':\032'..u(of),0x0);end;end;end;end;else do ic=function(...)local gx,Qx={},0;local Cx=0X1;local Nx={[2]=Vc,[1]=gx};local Jx=(k and k()or _ENV);local Gx,fx=q3(...);local cx=((Jx==H and fc or Jx));Gx=Gx-1;for q0=0x0,Gx do if ac>q0 then gx[q0]=fx[q0+0x01];else do break;end;end;end;if not nc then fx=nil;elseif not(Ac)then else do(gx)[ac]={n=Gx>=ac and Gx-ac+0X1 or 0,E(fx,ac+0X1,Gx+1)};end;end;do if cx==Jx then else if not(s)then _ENV=cx;else(s)(ic,cx);end;end;end;local Fx,ox,jx,Mx=c(function()while true do local Xw=(bc[Cx]);local iw=Xw[3];do Cx=Cx+1;end;if iw>=0X0012 then if not(iw>=27)then if not(iw<22)then do if not(iw<24)then if iw<25 then do gx[9]=gx[9][Xw[1]];end;do Cx=Cx+0X1;end;do Cx=Cx+1;end;Xw=bc[Cx];do Cx=Cx+0x01;end;if gx[9]then Cx=Xw[5];end;else if iw==26 then gx[Xw[2]]=cx[Xw[0X006]];else(gx)[Xw[2]]=gx[Xw[5]][gx[Xw[4]]];end;end;else if iw==23 then gx[0X0002]=cx[Xw[6]];Cx=Cx+0X0001;do Cx=Cx+0X1;end;Xw=bc[Cx];Cx=Cx+1;do if gx[0X2]then Cx=Xw[0X5];end;end;else(gx)[Xw[0X002]]=gx[Xw[0X5]][Xw[0X1]];end;end;end;else do if iw>=20 then do if iw==0X15 then gx[Xw[2]]=true;else gx[0X00c]=gx[0x000b];Cx=Cx+1;(gx)[0x002]=gx[12];Cx=Cx+1;gx[0XC]=gx[7];do Cx=Cx+0X001;end;(gx)[3]=gx[0Xc];Xw=bc[Cx];Cx=Cx+1;Cx=Xw[5];end;end;else do if iw==0x13 then Cx=Xw[0x00005];else do(gx)[Xw[0X2]]={};end;end;end;end;end;end;else if not(iw>=0X00001F)then if not(iw>=0X1D)then do if iw==28 then(gx)[5]=gx[1];Cx=Cx+0X1;gx[0X0003]=gx[0X5];Xw=bc[Cx];Cx=Cx+1;Cx=Xw[5];else if gx[Xw[5]]~=Xw[0X1]then Cx=Xw[0X0002];end;end;end;else if iw~=0X1e then gx[8]=gx[0X7][Xw[0X0001]];Cx=Cx+0x1;Cx=Cx+1;Xw=bc[Cx];Cx=Cx+1;if not gx[8]then Cx=Xw[5];end;else(gx)[9]=cx[Xw[0X6]];Xw=bc[Cx];local eo=(0X9);Cx=Cx+0x00001;do gx[9]=gx[9][Xw[0x1]];end;Xw=bc[Cx];do Cx=Cx+1;end;local zo=(gx[0X0009]);local ro=(3);do gx[eo+1]=zo;end;do gx[eo]=zo[Xw[1]];end;Xw=bc[Cx];Cx=Cx+1;gx[0x000b]=gx[0X007][Xw[1]];do Xw=bc[Cx];end;Cx=Cx+1;(gx)[0XB]=gx[0Xb][Xw[0X1]];Cx=Cx+0X0001;Cx=Cx+0X1;Cx=Cx+0X0001;do eo=9;end;local to=(0X3);if ro==0 then else Qx=eo+ro-1;end;local jo,bo=nil,nil;if ro~=1 then jo,bo=q3(gx[eo](E(gx,eo+0X1,Qx)));else jo,bo=q3(gx[eo]());end;if to==0X00001 then Qx=eo-0X1;else do if to==0X00000 then jo=jo+eo-1;Qx=jo;else jo=eo+to-2;Qx=jo+1;end;end;local qC=(0X0);for qW=eo,jo do do qC=qC+0X001;end;gx[qW]=bo[qC];end;end;Cx=Cx+1;Cx=Cx+0x001;Xw=bc[Cx];Cx=Cx+0X001;do(gx)[0xb]=cx[Xw[0x006]];end;do Xw=bc[Cx];end;Cx=Cx+1;do gx[11]=gx[11][Xw[0X1]];end;do Xw=bc[Cx];end;do Cx=Cx+1;end;do(gx)[0Xc]=gx[9][Xw[1]];end;Cx=Cx+1;Cx=Cx+1;Xw=bc[Cx];Cx=Cx+1;gx[0XD]=gx[9][Xw[0X00001]];Cx=Cx+1;do Cx=Cx+0X1;end;do Cx=Cx+1;end;do eo=11;end;do gx[eo]=gx[eo](gx[eo+1],gx[eo+2]);end;Qx=eo;Cx=Cx+1;Cx=Cx+1;Cx=Cx+0X01;(gx)[4]=gx[0XB];Xw=bc[Cx];Cx=Cx+0X001;(gx)[0Xb]=cx[Xw[6]];Cx=Cx+0x1;Cx=Cx+0X1;Cx=Cx+0x1;gx[0xB]=gx[4]-gx[11];Xw=bc[Cx];do Cx=Cx+1;end;do gx[11]=gx[11][Xw[1]];end;Xw=bc[Cx];Cx=Cx+0X1;do if not gx[0XA]then Cx=Xw[0X5];end;end;end;end;else if iw<0X21 then if iw~=32 then(gx)[0X9]=cx[Xw[0X6]];Xw=bc[Cx];do Cx=Cx+1;end;(gx)[0x9]=gx[9][Xw[0X1]];do Cx=Cx+1;end;Cx=Cx+0X1;Xw=bc[Cx];Cx=Cx+1;do if gx[0X009]then Cx=Xw[5];end;end;else gx[8]=cx[Xw[6]];Cx=Cx+1;do Cx=Cx+1;end;Xw=bc[Cx];Cx=Cx+1;do gx[0x8]=gx[8][Xw[0X1]];end;Cx=Cx+1;Cx=Cx+0x0001;Cx=Cx+0x001;gx[9]=gx[0X0];do Cx=Cx+0X1;end;(gx)[10]=gx[7];do Cx=Cx+1;end;local DL=0x8;(gx)[DL]=gx[DL](gx[DL+1],gx[DL+2]);Qx=DL;Xw=bc[Cx];do Cx=Cx+1;end;if gx[0X8]then Cx=Xw[5];end;end;else if iw<34 then repeat local gs,bs=Lc,gx;if not(#gs>0)then else local Sl=({});for pU,ZU in M,gs do for a0,T0 in M,ZU do if not(T0[1]==bs and T0[2]>=0X0)then else local iq=T0[0x2];do if not(not Sl[iq])then else Sl[iq]={bs[iq]};end;end;(T0)[0X1]=Sl[iq];do(T0)[2]=0X00001;end;end;end;end;end;until true;return;else if iw~=35 then local Kj,gj=8,gx[7];(gx)[Kj+1]=gj;gx[Kj]=gj[Xw[1]];Xw=bc[Cx];do Cx=Cx+0X001;end;gx[10]=Xw[0X6];Cx=Cx+0X1;Kj=0X8;(gx)[Kj]=gx[Kj](gx[Kj+1],gx[Kj+0x02]);Qx=Kj;do Xw=bc[Cx];end;do Cx=Cx+0x1;end;if not(not gx[0x8])then else Cx=Xw[5];end;else local uG,BG=Uc[Xw[5]],nil;local KG=(uG[5]);local VG=#KG;if not(VG>0)then else BG={};for QD=0X1,VG do local PD=(KG[QD]);do if PD[0X1]~=0 then do(BG)[QD-0x1]=jc[PD[2]];end;else do(BG)[QD-0X1]={gx,PD[2]};end;end;end;end;S(Lc,BG);end;do gx[Xw[0X2]]=e3(uG,BG,cx);end;end;end;end;end;end;else if iw<9 then if iw<4 then if iw>=0X002 then if iw==3 then do(gx)[10]=cx[Xw[0X6]];end;Xw=bc[Cx];Cx=Cx+0X00001;do gx[0xb]=cx[Xw[0X6]];end;Xw=bc[Cx];do Cx=Cx+1;end;(gx)[0X000b]=gx[11][Xw[0X1]];Xw=bc[Cx];Cx=Cx+1;(gx)[0X000c]=gx[0X7][Xw[0X1]];Xw=bc[Cx];Cx=Cx+0X1;do gx[12]=gx[12][Xw[1]];end;Cx=Cx+0X001;gx[13]={E({},1,2)};Xw=bc[Cx];Cx=Cx+1;gx[14]=cx[Xw[0X6]];Cx=Cx+1;Cx=Cx+1;local dV=((0X1-0X1)*50);do Xw=bc[Cx];end;Cx=Cx+1;(gx)[0X0f]=cx[Xw[6]];Cx=Cx+1;local VV=0x000D;local eV=(gx[VV]);for RR=0X00001,2 do eV[dV+RR]=gx[VV+RR];end;Cx=Cx+0X01;VV=10;Qx=VV+0x004-0X1;gx[VV]=gx[VV](E(gx,VV+0X00001,Qx));do Qx=VV;end;Cx=Cx+0X1;do Cx=Cx+0X01;end;Xw=bc[Cx];Cx=Cx+0X1;do if not gx[10]then do Cx=Xw[5];end;end;end;else do(gx)[2]=cx[Xw[6]];end;Cx=Cx+0X0001;do Cx=Cx+0X1;end;Xw=bc[Cx];do Cx=Cx+1;end;if not(not gx[2])then else Cx=Xw[5];end;end;else if iw~=0X1 then(gx)[5]={};do Xw=bc[Cx];end;Cx=Cx+1;do(gx)[0X00006]=gx[0X3][Xw[0X1]];end;Xw=bc[Cx];do Cx=Cx+1;end;(gx[5])[Xw[0x06]]=gx[6];Xw=bc[Cx];do Cx=Cx+0x00001;end;(gx)[6]=gx[0X03][Xw[1]];Cx=Cx+0X1;Cx=Cx+1;Xw=bc[Cx];Cx=Cx+0X1;gx[6]=gx[6][Xw[1]];Cx=Cx+0X1;do Cx=Cx+0X1;end;Xw=bc[Cx];Cx=Cx+1;gx[0X7]=gx[3][Xw[1]];do Cx=Cx+1;end;Cx=Cx+0x1;Xw=bc[Cx];Cx=Cx+1;do(gx)[7]=gx[0X0007][Xw[0X001]];end;do Cx=Cx+1;end;do Cx=Cx+0X00001;end;Xw=bc[Cx];do Cx=Cx+0x1;end;local kd=5;gx[7]=gx[0X7]*Xw[0x1];Cx=Cx+0X0001;do(gx)[6]=gx[0X00006]+gx[0X007];end;Xw=bc[Cx];do Cx=Cx+1;end;gx[0x005][Xw[0X6]]=gx[0X6];Cx=Cx+1;do repeat local Ic,Xc=Lc,(gx);if not(#Ic>0)then else local dU={};for Fh,Vh in M,Ic do for gw,Gw in M,Vh do if not(Gw[1]==Xc and Gw[0X2]>=0X000)then else local Np=Gw[2];if not dU[Np]then(dU)[Np]={Xc[Np]};end;(Gw)[1]=dU[Np];do(Gw)[0X2]=0x1;end;end;end;end;end;until true;end;return false,kd,kd;else if not gx[Xw[0x2]]then Cx=Xw[0X5];end;end;end;else if not(iw<0X06)then if iw<0X07 then do gx[Xw[2]]=Xw[0X0006];end;else if iw==0X8 then(gx)[9]=gx[0X0007][Xw[1]];Cx=Cx+1;Cx=Cx+0x1;Xw=bc[Cx];do Cx=Cx+1;end;do if gx[0X9]then do Cx=Xw[0X5];end;end;end;else do(gx)[0X2]=cx[Xw[6]];end;Xw=bc[Cx];do Cx=Cx+0x1;end;gx[2]=gx[2][Xw[0X1]];Cx=Cx+0X01;Cx=Cx+0X0001;Xw=bc[Cx];Cx=Cx+0X001;if gx[0x02]then Cx=Xw[5];end;end;end;else do if iw==0x005 then(gx)[8]=cx[Xw[6]];Xw=bc[Cx];Cx=Cx+0X1;do(gx)[0X8]=gx[0X8][Xw[1]];end;Cx=Cx+1;Cx=Cx+1;local rY=8;Xw=bc[Cx];do Cx=Cx+1;end;local uY=gx[0X08];do(gx)[rY+0X01]=uY;end;(gx)[rY]=uY[Xw[1]];do Cx=Cx+0X00001;end;do(gx)[10]=gx[7];end;do Cx=Cx+0X1;end;rY=8;do gx[rY]=gx[rY](gx[rY+0X1],gx[rY+2]);end;Qx=rY;Cx=Cx+1;Cx=Cx+1;Xw=bc[Cx];Cx=Cx+0X1;(gx)[0X9]=cx[Xw[0X6]];do Cx=Cx+1;end;Cx=Cx+1;Xw=bc[Cx];Cx=Cx+0X1;(gx)[0X9]=gx[9][Xw[1]];do Xw=bc[Cx];end;Cx=Cx+0X1;if gx[9]then do Cx=Xw[0x5];end;end;else do if not(gx[Xw[5]]<gx[Xw[4]])then Cx=Xw[2];end;end;end;end;end;end;else if iw<13 then if not(iw>=11)then do if iw~=0XA then gx[0X009]=cx[Xw[6]];Xw=bc[Cx];local W1=9;Cx=Cx+1;gx[0XA]=gx[7][Xw[1]];Cx=Cx+1;Cx=Cx+0X1;Xw=bc[Cx];Cx=Cx+1;gx[0xa]=gx[0X0000A][Xw[0X0001]];Cx=Cx+0X00001;gx[W1]=gx[W1](gx[W1+1]);Qx=W1;Cx=Cx+0x1;Cx=Cx+1;Xw=bc[Cx];Cx=Cx+0X1;do if not(gx[0X9]<Xw[0X01])then Cx=Xw[0X2];end;end;else for mu=Xw[2],Xw[0X05]do gx[mu]=nil;end;end;end;else if iw==0X00C then local v7=(Xw[2]);local W7,p7,Q7=gx[v7]();if not(W7)then else(gx)[v7+0x01]=p7;do gx[v7+0X002]=Q7;end;Cx=Xw[0X005];end;else gx[Xw[2]]={E({},0X1,Xw[0x5])};end;end;else if iw<15 then if iw~=14 then else(gx)[Xw[0x002]]=gx[Xw[5]]-gx[Xw[4]];end;else if iw>=0X10 then do if iw==17 then(gx)[0X5]=cx[Xw[0X6]];local Bc=(5);local mc=(0X4);do Cx=Cx+0X0001;end;Cx=Cx+0x1;Xw=bc[Cx];Cx=Cx+0X1;(gx)[6]=cx[Xw[0X6]];Cx=Cx+0x1;local Pc=0X02;if Pc~=0X0000 then Qx=Bc+Pc-0X0001;end;local kc,wc=nil,(nil);if Pc~=0X1 then kc,wc=q3(gx[Bc](E(gx,Bc+1,Qx)));else kc,wc=q3(gx[Bc]());end;if mc~=0X1 then if mc==0 then kc=kc+Bc-0x01;Qx=kc;else kc=Bc+mc-2;Qx=kc+1;end;local Oi=(0X0);do for Jk=Bc,kc do Oi=Oi+1;do gx[Jk]=wc[Oi];end;end;end;else Qx=Bc-1;end;Xw=bc[Cx];Cx=Cx+0X1;Bc=0x0005;local Xc=P(function(...)C();for Js,Ws in...do C(true,Js,Ws);end;end);Xc(gx[Bc],gx[Bc+1],gx[Bc+2]);do Qx=Bc;end;(gx)[Bc]=Xc;Cx=Xw[5];else if gx[Xw[0X5]]~=gx[Xw[4]]then else Cx=Xw[2];end;end;end;else if not(gx[Xw[2]])then else Cx=Xw[5];end;end;end;end;end;end;end;end);if Fx then do if ox then if Mx~=1 then return gx[jx](E(gx,jx+0X1,Qx));else return gx[jx]();end;elseif not(jx)then else do return E(gx,jx,Mx);end;end;end;else if V(ox)=="string"then if not(r(ox,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if r(ox,"^.-:%d+: ")then q('\076ur\097\112\104 \083cr\105pt\058'..(Qc[Cx-0X1]or"(internal)")..": "..u(ox),0);else(q)(ox,0);end;else(q)(ox,0X00);end;end;end;end;end;end;else if Sc~=67 then ic=function(...)local Gb,Vb=1,{};local nb=(k and k()or _ENV);local eb=({[1]=Vb,[2]=Vc});local ib,cb=q3(...);ib=ib-1;local Xb=(nb==H and fc or nb);for Sa=0,ib do do if not(ac>Sa)then break;else(Vb)[Sa]=cb[Sa+0x1];end;end;end;local gb=(0);if not nc then do cb=nil;end;elseif Ac then do Vb[ac]={n=ib>=ac and ib-ac+1 or 0,E(cb,ac+1,ib+1)};end;end;do if Xb==nb then else if s then(s)(ic,Xb);else _ENV=Xb;end;end;end;local Pb,Bb,bb,Rb=c(function()while true do local At=bc[Gb];local Ut=At[3];Gb=Gb+0X00001;do if Ut<7 then if not(Ut<3)then if not(Ut<5)then if Ut~=6 then Vb[At[2]]=Vb[At[0X05]][Vb[At[4]]];else do Vb[0]=Xb[At[0X0006]];end;do Gb=Gb+1;end;local JW=0;Gb=Gb+1;At=bc[Gb];Gb=Gb+1;local oW=Vb[0];(Vb)[JW+0X01]=oW;(Vb)[JW]=oW[At[1]];At=bc[Gb];do Gb=Gb+1;end;(Vb)[0x02]=At[0x6];Gb=Gb+0X1;JW=0X0;Vb[JW]=Vb[JW](Vb[JW+1],Vb[JW+2]);gb=JW;At=bc[Gb];do Gb=Gb+1;end;Vb[1]=Xb[At[6]];At=bc[Gb];Gb=Gb+0X001;Vb[1]=Vb[1][At[0x00001]];do At=bc[Gb];end;local PW=(Uc[At[5]]);local BW=(PW[5]);do Gb=Gb+1;end;local eW=#BW;local dW=nil;if eW>0 then dW={};for Al=0x00001,eW do local ql=(BW[Al]);if ql[1]==0 then(dW)[Al-0x01]={Vb,ql[2]};else dW[Al-0X1]=jc[ql[2]];end;end;S(Lc,dW);end;do(Vb)[2]=e3(PW,dW,Xb);end;Gb=Gb+1;JW=0X1;(Vb[JW])(Vb[JW+0X01]);gb=JW-1;Gb=Gb+0x1;do repeat local Fm,Km=Lc,Vb;if not(#Fm>0X0)then else local ES={};for zF,qF in M,Fm do do for RQ,gQ in M,qF do do if not(gQ[0X001]==Km and gQ[0X2]>=0X0)then else local Yb=(gQ[0X2]);if not(not ES[Yb])then else ES[Yb]={Km[Yb]};end;gQ[0X01]=ES[Yb];do gQ[2]=0X0001;end;end;end;end;end;end;end;until true;end;return;end;else if Ut==4 then(Vb)[At[2]]={E({},0X0001,At[0X5])};else local gR=Uc[At[5]];local xR=nil;local VR=gR[0X05];local GR=(#VR);if GR>0X0 then xR={};for gk=0X1,GR do local Yk=(VR[gk]);do if Yk[1]==0X0 then do xR[gk-1]={Vb,Yk[2]};end;else xR[gk-1]=jc[Yk[2]];end;end;end;S(Lc,xR);end;do(Vb)[At[2]]=e3(gR,xR,Xb);end;end;end;else if Ut>=1 then if Ut~=0X2 then do(Vb)[At[0X2]]=not Vb[At[0X005]];end;else end;else(Vb)[At[0X2]]=Vb[At[0X005]]+Vb[At[4]];end;end;else do if not(Ut<10)then if Ut<12 then if Ut~=11 then(Vb)[At[2]]=v(Vb[At[0x005]],Vb[At[4]]);else do Vb[At[2]]=At[0X6];end;end;else if Ut==0Xd then local eA=At[2];local nA=(At[0x004]-0X001)*0X32;local MA=(Vb[eA]);for wI=0x1,At[0X0005]do(MA)[nA+wI]=Vb[eA+wI];end;else Gb=At[5];end;end;else if Ut<8 then repeat local Up,Pp=Lc,Vb;if not(#Up>0)then else local JF={};for LS,yS in M,Up do for jU,IU in M,yS do if IU[0X00001]==Pp and IU[2]>=0X000 then local H0=(IU[2]);if not JF[H0]then JF[H0]={Pp[H0]};end;(IU)[1]=JF[H0];(IU)[0X0002]=0x001;end;end;end;end;until true;local Ko=At[0X2];return false,Ko,Ko+At[5]-0X2;else if Ut~=9 then local kj=(At[0X2]);local fj=P(function(...)C();for O9,E9,B9,Q9,a9,p9,D9,P9,b9,W9 in...do(C)(true,{O9,E9,B9,Q9,a9,p9,D9,P9,b9,W9});end;end);(fj)(Vb[kj],Vb[kj+1],Vb[kj+0X2]);do gb=kj;end;Vb[kj]=fj;Gb=At[0X0005];else Vb[At[2]]=Xb[At[0X06]];end;end;end;end;end;end;end;end);if not(Pb)then do if V(Bb)~="st\114\105n\103"then q(Bb,0);else if not(r(Bb,"at\116\101\109pt \116o\032yie\108\100\032\097cr\111\115\115\032\109\101\116\097\109et\104\111d/\067\037-ca\108l\032b\111un\100ary"))then else return coroutine.yield();end;if not(r(Bb,'\094\046-:\037\100\043:\032'))then(q)(Bb,0X0);else q("L\117\114\097ph\032\083\099r\105\112t:"..(Qc[Gb-1]or"(internal)")..'\058\032'..u(Bb),0x0);end;end;end;else if Bb then if Rb==1 then return Vb[bb]();else return Vb[bb](E(Vb,bb+0X00001,gb));end;elseif bb then return E(Vb,bb,Rb);end;end;end;else ic=function(...)local pe=(0);local be,Te=0X0001,{};local xe={[2]=Vc,[1]=Te};local ce=((k and k()or _ENV));local Xe,ee=q3(...);Xe=Xe-0X1;local we=(ce==H and fc or ce);for m5=0,Xe do if not(ac>m5)then do break;end;else(Te)[m5]=ee[m5+1];end;end;do if not nc then ee=nil;elseif not(Ac)then else(Te)[ac]={n=Xe>=ac and Xe-ac+0X0001 or 0,E(ee,ac+0X1,Xe+1)};end;end;do if we~=ce then do if not(s)then _ENV=we;else(s)(ic,we);end;end;end;end;local Ce,Pe,de,ne=c(function()while true do local FM=bc[be];local sM=FM[3];be=be+1;do if not(sM<0X000A)then do if sM>=15 then if sM>=0X011 then if sM<0X000012 then repeat local CZ,WZ=Lc,Te;if not(#CZ>0X0)then else local sc={};do for Jv,Cv in M,CZ do for lX,vX in M,Cv do do if not(vX[1]==WZ and vX[2]>=0X0)then else local Tg=(vX[0x002]);if not sc[Tg]then(sc)[Tg]={WZ[Tg]};end;do vX[1]=sc[Tg];end;vX[2]=1;end;end;end;end;end;end;until true;do return;end;else if sM==19 then Te[FM[2]]=Te[FM[0X5]]<Te[FM[0x4]];else local m8=(FM[0X2]);local W8,Z8=Te[m8]();if not(W8)then else for el=0X01,FM[4]do Te[m8+el]=Z8[el];end;do be=FM[0X0005];end;end;end;end;else if sM~=16 then Te[FM[2]]=J(Te[FM[0X05]],Te[FM[4]]);else end;end;else do if sM>=0X0c then if not(sM<0XD)then do if sM==14 then Te[0X0000]=we[FM[6]];do FM=bc[be];end;local oe=Te[0x00000];be=be+0x1;local ye=0x0;(Te)[ye+0X1]=oe;do(Te)[ye]=oe[FM[1]];end;do be=be+1;end;ye=0X00000;(Te[ye])(Te[ye+1]);pe=ye-1;be=be+1;(Te)[0X0]=nil;FM=bc[be];be=be+0x1;we[FM[0X6]]=Te[0];do FM=bc[be];end;be=be+0X1;(Te)[0]=we[FM[6]];FM=bc[be];be=be+1;if not(not Te[0])then else be=FM[0x00005];end;else do be=FM[0x5];end;end;end;else local ds=FM[5];local as=(Te[ds]);do for mz=ds+1,FM[0X0004]do do as=as..Te[mz];end;end;end;Te[FM[2]]=as;end;else if sM==0XB then(Te)[0X0]=we[FM[0X0006]];FM=bc[be];be=be+1;Te[0X00000]=Te[0X0000][FM[1]];local Ue=jc[1];be=be+1;Te[0X0001]=Ue[1][Ue[2]];be=be+0x00001;be=be+1;FM=bc[be];be=be+1;Te[0x0][FM[0X06]]=Te[1];do FM=bc[be];end;be=be+1;be=FM[0X5];else do if not(Te[FM[0X5]]<Te[FM[0X04]])then else be=FM[2];end;end;end;end;end;end;end;else do if sM<0X5 then if not(sM>=2)then if sM~=0X0001 then Te[FM[2]]=FM[6];else local cf=(jc[0]);Te[0x0]=cf[0x1][cf[2]];FM=bc[be];be=be+1;(Te)[0X1]=we[FM[6]];FM=bc[be];be=be+0X0001;if Te[0X0000]==Te[1]then else do be=FM[0x02];end;end;end;else do if not(sM<3)then if sM~=0X00004 then(Te)[FM[0X02]]=FM[6];else local Z2,r2=FM[2],(FM[0x005]);local g2=FM[0X04];if r2==0X0 then else pe=Z2+r2-1;end;local G2,E2=nil,nil;if r2==0X0001 then G2,E2=q3(Te[Z2]());else G2,E2=q3(Te[Z2](E(Te,Z2+0x1,pe)));end;if g2~=0X1 then if g2~=0 then G2=Z2+g2-0X0002;pe=G2+1;else do G2=G2+Z2-1;end;pe=G2;end;local Li=0X0;for Oi=Z2,G2 do Li=Li+1;(Te)[Oi]=E2[Li];end;else pe=Z2-1;end;end;else(Te)[FM[2]]=we[FM[0X00006]];end;end;end;else if not(sM>=0X7)then if sM~=0x00006 then do(Te)[FM[0X2]]=Te[FM[5]]*Te[FM[0x4]];end;else(Te)[FM[2]]={E({},1,FM[5])};end;else if not(sM>=0X0008)then local WY=FM[0X0002];local qY,KY=Te[WY]();if qY then be=FM[0x5];Te[WY+0X03]=KY;end;else if sM~=0X0009 then local jQ,xQ=Uc[FM[5]],nil;local RQ=(jQ[0X5]);local IQ=#RQ;if IQ>0x0 then xQ={};do for n6=1,IQ do local A6=RQ[n6];do if A6[0X01]==0 then(xQ)[n6-0x00001]={Te,A6[2]};else xQ[n6-0X001]=jc[A6[0x002]];end;end;end;end;(S)(Lc,xQ);end;(Te)[FM[0X2]]=e3(jQ,xQ,we);else Te[0X0]=we[FM[0X6]];local kG=0x0;be=be+0x0001;local lG=(jc[1]);Te[0X1]=lG[0X0001][lG[2]];be=be+0X0001;(Te)[kG]=Te[kG](Te[kG+0X1]);do pe=kG;end;FM=bc[be];be=be+0X1;if not(Te[0x000]<FM[1])then be=FM[0X2];end;end;end;end;end;end;end;end;end;end);do if not(Ce)then if V(Pe)=="string"then if r(Pe,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if r(Pe,"^.-:%d+: ")then q('L\117\114\097p\104 S\099\114\105\112t:'..(Qc[be-1]or"\040int\101r\110\097l)")..": "..u(Pe),0X0);else q(Pe,0);end;else(q)(Pe,0);end;else if Pe then if ne~=1 then return Te[de](E(Te,de+0x001,pe));else return Te[de]();end;elseif not(de)then else return E(Te,de,ne);end;end;end;end;end;end;end;else do if not(Sc<74)then if Sc<0X4C then do if Sc==0X0004B then do ic=function(...)local pl,cl=0X1,({});local el=({[2]=Vc,[1]=cl});local Vl=((k and k()or _ENV));local Rl,ol=q3(...);local ml=(Vl==H and fc or Vl);Rl=Rl-0X0001;local Il=0;for hD=0X000,Rl do if not(ac>hD)then break;else do cl[hD]=ol[hD+1];end;end;end;do if not nc then do ol=nil;end;elseif not(Ac)then else(cl)[ac]={n=Rl>=ac and Rl-ac+1 or 0X00000,E(ol,ac+1,Rl+1)};end;end;if ml==Vl then else if s then s(ic,ml);else do _ENV=ml;end;end;end;local Cl,Jl,ll,rl=c(function()while true do local wd=bc[pl];local Vd=wd[3];pl=pl+0x1;if Vd<0X7 then if Vd>=3 then if not(Vd<0X05)then do if Vd~=0X006 then cl[wd[2]]=cl[wd[0X05]]~=cl[wd[0X0004]];else(cl)[wd[0X2]]={E({},1,wd[5])};end;end;else if Vd==0X004 then local LY=jc[0];(cl)[0]=LY[1][LY[0X2]];do pl=pl+0x00001;end;pl=pl+1;wd=bc[pl];pl=pl+1;(cl)[0]=cl[0][wd[0X0001]];wd=bc[pl];pl=pl+1;(cl)[0X1]=ml[wd[0X06]];pl=pl+0X1;pl=pl+1;wd=bc[pl];do pl=pl+1;end;if cl[0]==cl[0X1]then else do pl=wd[0X2];end;end;else do repeat local wH,MH=Lc,cl;if not(#wH>0x0)then else local QZ=({});for wE,fE in M,wH do for u2,J2 in M,fE do if J2[1]==MH and J2[0X00002]>=0X00000 then local rP=(J2[0x2]);do if not(not QZ[rP])then else(QZ)[rP]={MH[rP]};end;end;do J2[1]=QZ[rP];end;do J2[0X002]=1;end;end;end;end;end;until true;end;return;end;end;else if not(Vd>=0x1)then local YD=(jc[0]);(cl)[0]=YD[0X1][YD[2]];pl=pl+0X00001;pl=pl+1;wd=bc[pl];pl=pl+1;(cl)[0X00001]=ml[wd[0X0006]];wd=bc[pl];pl=pl+1;(cl[0X0])[wd[6]]=cl[1];do wd=bc[pl];end;pl=pl+1;pl=wd[5];else do if Vd==2 then(cl)[wd[2]]=ml[wd[0X6]];else local L0=Uc[wd[5]];local e0,J0=L0[0X5],nil;local V0=(#e0);do if not(V0>0x0)then else J0={};for T8=1,V0 do local M8=e0[T8];if M8[1]~=0 then(J0)[T8-1]=jc[M8[2]];else(J0)[T8-0X1]={cl,M8[0X2]};end;end;S(Lc,J0);end;end;cl[wd[0X0002]]=e3(L0,J0,ml);end;end;end;end;else if Vd<0xB then if Vd>=9 then if Vd==10 then if cl[wd[0x5]]<=cl[wd[4]]then pl=wd[0X02];end;else cl[wd[0X2]]=cl[wd[5]]==cl[wd[4]];end;else do if Vd==8 then local Cb,Ob=wd[2],(wd[0X5]);local hb=(wd[0X4]);if Ob~=0X0 then Il=Cb+Ob-1;end;local mb,Zb=nil,(nil);if Ob==0x1 then mb,Zb=q3(cl[Cb]());else mb,Zb=q3(cl[Cb](E(cl,Cb+0X0001,Il)));end;if hb~=1 then if hb~=0 then mb=Cb+hb-0x2;do Il=mb+0x0001;end;else mb=mb+Cb-1;Il=mb;end;local nW=0X0;for I2=Cb,mb do do nW=nW+1;end;cl[I2]=Zb[nW];end;else Il=Cb-1;end;else do(cl)[wd[2]]=wd[6];end;end;end;end;else if Vd<0Xd then if Vd~=0X000C then cl[wd[2]]=T(cl[wd[0X5]],cl[wd[4]]);else pl=wd[0X005];end;else if Vd~=14 then else local SX=(cl[wd[0X5]]/cl[wd[0X4]]);cl[wd[0X00002]]=SX-SX%1;end;end;end;end;end;end);if not(Cl)then do if V(Jl)=="string"then if r(Jl,"a\116te\109pt to \121ield \097\099\114oss\032m\101tam\101th\111d\047C\037-c\097ll\032b\111\117\110d\097ry")then return coroutine.yield();end;if not(r(Jl,"\094\046-:\037\100+: "))then q(Jl,0);else(q)("Lu\114\097p\104\032S\099r\105\112t\058"..(Qc[pl-0X00001]or"(internal)")..':\032'..u(Jl),0X0);end;else q(Jl,0);end;end;else do if Jl then if rl==1 then return cl[ll]();else return cl[ll](E(cl,ll+0X1,Il));end;elseif not(ll)then else return E(cl,ll,rl);end;end;end;end;end;else ic=function(...)local al,Hl=0x1,({});local wl,Ql={[2]=Vc,[1]=Hl},(0);local gl=(k and k()or _ENV);local Dl=(gl==H and fc or gl);local nl,Pl=q3(...);do nl=nl-0X1;end;for Rg=0,nl do if ac>Rg then(Hl)[Rg]=Pl[Rg+0X1];else break;end;end;if not nc then Pl=nil;elseif Ac then do Hl[ac]={n=nl>=ac and nl-ac+1 or 0X0,E(Pl,ac+0x1,nl+0X1)};end;end;if Dl~=gl then do if s then s(ic,Dl);else _ENV=Dl;end;end;end;local el,Ol,zl,vl=c(function()while true do local eD=(bc[al]);local ED=eD[3];al=al+1;if not(ED>=8)then if ED<4 then if ED>=0X00002 then if ED==0X00003 then al=eD[5];else Hl[eD[2]]=Hl[eD[0x5]]+Hl[eD[0X00004]];end;else if ED~=0X1 then(Hl)[eD[0X0002]]=Dl[eD[6]];else(Hl)[eD[0X2]]=eD[0x6];end;end;else if ED>=6 then if ED~=7 then else(Hl)[eD[0X00002]]=not Hl[eD[0x5]];end;else if ED~=5 then(Hl)[eD[2]]={E({},0X1,eD[5])};else Hl[eD[2]]=Hl[eD[5]]~=Hl[eD[0x00004]];end;end;end;else if ED<0x00c then do if ED>=10 then if ED==11 then local Jj=eD[2];local gj,dj=Hl[Jj]();if not(gj)then else for th=0X1,eD[4]do Hl[Jj+th]=dj[th];end;al=eD[5];end;else Hl[eD[0X02]][Hl[eD[0x00005]]]=Hl[eD[0x00004]];end;else if ED~=9 then Hl[eD[0X2]]=-Hl[eD[5]];else local Zn=eD[0X0002];local On=(Hl[eD[0x5]]);do(Hl)[Zn+0X1]=On;end;do Hl[Zn]=On[eD[1]];end;end;end;end;else do if not(ED<0xe)then do if not(ED<0xf)then do if ED~=16 then repeat local UG,LG,rG=Lc,Hl,(eD[0X2]);if#UG>0x00000 then local zU=({});for HR,rR in M,UG do do for hL,bL in M,rR do do if not(bL[1]==LG and bL[2]>=rG)then else local bh=bL[2];if not(not zU[bh])then else do zU[bh]={LG[bh]};end;end;do bL[0X00001]=zU[bh];end;(bL)[2]=1;end;end;end;end;end;end;until true;else(Hl)[eD[2]]=Hl[eD[5]]/Hl[eD[0X0004]];end;end;else local CH=nil;local iH=Uc[eD[5]];local SH=iH[5];local oH=(#SH);do if oH>0x00000 then do CH={};end;for y9=0X1,oH do local R9=SH[y9];if R9[0X0001]==0X0 then do CH[y9-1]={Hl,R9[0X2]};end;else do(CH)[y9-0x1]=jc[R9[2]];end;end;end;S(Lc,CH);end;end;(Hl)[eD[2]]=e3(iH,CH,Dl);end;end;else if ED~=13 then do(Hl)[eD[0X2]]=Q(Hl[eD[0x5]]);end;else do Hl[0]=Dl[eD[6]];end;do eD=bc[al];end;al=al+1;do Hl[0]=Hl[0][eD[0X0001]];end;al=al+0X00001;do al=al+0X0001;end;eD=bc[al];local bf,Uf=0,Uc[eD[0X5]];local Sf=Uf[5];al=al+0x001;local Qf,tf=nil,#Sf;if not(tf>0X00000)then else do Qf={};end;do for hA=0X1,tf do local MA=Sf[hA];if MA[1]~=0 then Qf[hA-1]=jc[MA[0X2]];else Qf[hA-1]={Hl,MA[0X2]};end;end;end;S(Lc,Qf);end;Hl[0X1]=e3(Uf,Qf,Dl);al=al+0X00001;(Hl[bf])(Hl[bf+1]);Ql=bf-0X01;al=al+1;repeat local PP,KP=Lc,(Hl);if#PP>0 then local Iz={};for cp,Wp in M,PP do for SK,WK in M,Wp do if not(WK[1]==KP and WK[2]>=0)then else local AM=(WK[0X02]);do if not Iz[AM]then do(Iz)[AM]={KP[AM]};end;end;end;(WK)[1]=Iz[AM];do(WK)[2]=1;end;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end);do if not(el)then if V(Ol)=="\115t\114i\110g"then if r(Ol,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(Ol,'\094.-\058\037d\043\058\032'))then q(Ol,0X0);else(q)("Luraph Script:"..(Qc[al-0X00001]or"(internal)")..':\032'..u(Ol),0x0000);end;else q(Ol,0);end;else do if Ol then if vl==0x1 then return Hl[zl]();else return Hl[zl](E(Hl,zl+0X1,Ql));end;elseif not(zl)then else return E(Hl,zl,vl);end;end;end;end;end;end;end;else if Sc~=77 then ic=function(...)local yr=(0X1);local gr,Er={},(0X000);local kr=(k and k()or _ENV);local Hr=((kr==H and fc or kr));local Mr,Zr=q3(...);local wr={[1]=gr,[2]=Vc};Mr=Mr-1;for Sd=0,Mr do do if not(ac>Sd)then break;else do gr[Sd]=Zr[Sd+0x1];end;end;end;end;if not nc then do Zr=nil;end;elseif Ac then do(gr)[ac]={n=Mr>=ac and Mr-ac+0X1 or 0,E(Zr,ac+0X00001,Mr+0X1)};end;end;if Hr~=kr then if s then s(ic,Hr);else _ENV=Hr;end;end;local Pr,rr,Gr,Lr=c(function()while true do local Id=bc[yr];local id=(Id[0X3]);yr=yr+1;if not(id>=0X7)then do if not(id>=3)then if not(id>=1)then(gr)[Id[0x2]]=T(gr[Id[0x05]],gr[Id[0X0004]]);else if id~=0X2 then do yr=Id[0X05];end;else(gr)[Id[0x2]]=gr[Id[5]]+gr[Id[4]];end;end;else if id<5 then if id~=4 then local KH=nil;local yH=(Uc[Id[5]]);local IH=yH[0x5];local hH=#IH;if not(hH>0)then else KH={};do for K1=0x1,hH do local c1=IH[K1];do if c1[1]==0X00000 then KH[K1-1]={gr,c1[0x00002]};else(KH)[K1-0X1]=jc[c1[0x0002]];end;end;end;end;S(Lc,KH);end;gr[Id[0X2]]=e3(yH,KH,Hr);else gr[Id[2]]=J(gr[Id[5]],gr[Id[0X4]]);end;else do if id~=0x6 then gr[Id[0x2]]=Id[6];else local XZ=(Id[0X2]);local DZ,dZ=gr[XZ]();if DZ then do for um=0X1,Id[4]do gr[XZ+um]=dZ[um];end;end;do yr=Id[0X5];end;end;end;end;end;end;end;else do if not(id<0x0a)then do if not(id<12)then if id==13 then(gr)[Id[0X002]]=Hr[Id[0X6]];else(gr)[0]=Hr[Id[6]];do Id=bc[yr];end;do yr=yr+0X001;end;gr[0X0]=gr[0][Id[1]];Id=bc[yr];local FJ=(Uc[Id[5]]);local bJ=(FJ[5]);yr=yr+1;local tJ,GJ=nil,(#bJ);if not(GJ>0x0000)then else tJ={};for ZC=0x1,GJ do local lC=bJ[ZC];if lC[1]==0 then do(tJ)[ZC-1]={gr,lC[0X2]};end;else do(tJ)[ZC-1]=jc[lC[0X2]];end;end;end;(S)(Lc,tJ);end;(gr)[1]=e3(FJ,tJ,Hr);local WJ=(0x0);yr=yr+1;gr[WJ](gr[WJ+1]);Er=WJ-0X1;do yr=yr+0X1;end;repeat local o1,p1=Lc,(gr);if not(#o1>0x0)then else local HS={};for Li,Mi in M,o1 do do for hD,MD in M,Mi do if not(MD[1]==p1 and MD[0X2]>=0x0)then else local I1=MD[0X2];if not(not HS[I1])then else(HS)[I1]={p1[I1]};end;do MD[1]=HS[I1];end;(MD)[0X2]=1;end;end;end;end;end;until true;return;end;else do if id~=0Xb then do(gr)[Id[2]]=o(gr[Id[0x005]],gr[Id[4]]);end;else do gr[Id[0X2]]={E({},1,Id[5])};end;end;end;end;end;else if id<8 then else do if id~=0X009 then(gr)[Id[0X0002]]=gr[Id[5]]>gr[Id[0x00004]];else local Q1=Id[5];local e1=gr[Q1];do for wU=Q1+0X001,Id[4]do e1=e1..gr[wU];end;end;do(gr)[Id[2]]=e1;end;end;end;end;end;end;end;end;end);if not(Pr)then if V(rr)=="\115tri\110\103"then if r(rr,"a\116\116e\109p\116 t\111 y\105eld\032\097cr\111\115\115\032met\097\109et\104o\100\047C%\045\099a\108l b\111\117ndar\121")then do return coroutine.yield();end;end;if not(r(rr,'^\046-\058\037\100\043\058 '))then q(rr,0);else(q)("Lura\112\104\032Sc\114\105p\116\058"..(Qc[yr-0X001]or'(i\110\116\101rn\097\108)').."\058\032"..u(rr),0);end;else q(rr,0);end;else if rr then if Lr~=0X1 then do return gr[Gr](E(gr,Gr+0X1,Er));end;else do return gr[Gr]();end;end;elseif not(Gr)then else return E(gr,Gr,Lr);end;end;end;else ic=function(...)local Zu,Fu=0X1,({});local Pu=((k and k()or _ENV));local vu=(0);local yu={[1]=Fu,[2]=Vc};local bu=((Pu==H and fc or Pu));local Du,ku=q3(...);Du=Du-0X1;for J0=0,Du do if not(ac>J0)then do break;end;else(Fu)[J0]=ku[J0+0X001];end;end;if not nc then ku=nil;elseif not(Ac)then else Fu[ac]={n=Du>=ac and Du-ac+0X01 or 0X0,E(ku,ac+0x1,Du+1)};end;if bu~=Pu then if s then(s)(ic,bu);else _ENV=bu;end;end;local Au,Gu,ru,Vu=c(function()while true do local JH=bc[Zu];local QH=(JH[3]);do Zu=Zu+1;end;if QH>=16 then if QH<24 then if QH>=0X14 then do if not(QH>=22)then if QH==0X15 then local dH=(Uc[JH[0X5]]);local AH,UH=dH[0X5],(nil);local xH=(#AH);do if not(xH>0)then else UH={};for Ep=0X001,xH do local Rp=AH[Ep];if Rp[0X001]==0 then UH[Ep-0X1]={Fu,Rp[0x02]};else do UH[Ep-1]=jc[Rp[0X2]];end;end;end;(S)(Lc,UH);end;end;Fu[JH[2]]=e3(dH,UH,bu);else do Fu[JH[0X002]]=bu[JH[6]];end;end;else if QH==0X17 then do if not Fu[JH[2]]then Zu=JH[5];end;end;else Fu[0x1]=bu[JH[0X00006]];JH=bc[Zu];Zu=Zu+1;Fu[0x1]=Fu[0X00001][JH[0X001]];do JH=bc[Zu];end;Zu=Zu+1;do if not Fu[0X1]then do Zu=JH[5];end;end;end;end;end;end;else if not(QH<18)then if QH~=19 then Fu[3]=bu[JH[6]];Zu=Zu+0X0001;Zu=Zu+0x1;JH=bc[Zu];Zu=Zu+0X01;local tt,Jt,qt=0x3,nil,Uc[JH[5]];local Dt=qt[0X5];local et=#Dt;if et>0X0000 then Jt={};for as=0x1,et do local Is=(Dt[as]);do if Is[1]==0 then(Jt)[as-1]={Fu,Is[0X2]};else do Jt[as-1]=jc[Is[2]];end;end;end;end;(S)(Lc,Jt);end;Fu[0X0004]=e3(qt,Jt,bu);do Zu=Zu+1;end;Fu[tt](Fu[tt+1]);vu=tt-0X001;JH=bc[Zu];Zu=Zu+0X1;Zu=JH[0X5];else Fu[0x02]=bu[JH[6]];do JH=bc[Zu];end;do Zu=Zu+0X1;end;(Fu)[3]=JH[0X6];local jy=(2);Zu=Zu+0X0001;Fu[jy]=Fu[jy](Fu[jy+0x1]);vu=jy;do Zu=Zu+0x00001;end;Zu=Zu+1;JH=bc[Zu];Zu=Zu+1;(Fu)[3]=Fu[0X00002][JH[1]];do Zu=Zu+1;end;Zu=Zu+1;JH=bc[Zu];do Zu=Zu+0X001;end;if not(not Fu[3])then else Zu=JH[0X005];end;end;else if QH==0X11 then if Fu[JH[2]]then Zu=JH[0x005];end;else do Zu=JH[5];end;end;end;end;else if QH<0X0001C then if QH<0X1A then if QH~=0x19 then(Fu)[0X3]=bu[JH[0X06]];JH=bc[Zu];Zu=Zu+1;(Fu)[0X4]=JH[0X6];JH=bc[Zu];local uF=(0x3);Zu=Zu+0X1;(Fu)[5]=JH[0x6];Zu=Zu+1;(Fu[uF])(Fu[uF+1],Fu[uF+0x0002]);vu=uF-1;JH=bc[Zu];Zu=Zu+0X1;(Fu)[0x03]=bu[JH[0X6]];do Zu=Zu+0X1;end;Zu=Zu+0X00001;do Zu=Zu+1;end;vu=0X003;(Fu[vu])();vu=vu-1;Zu=Zu+0X1;Zu=Zu+1;do JH=bc[Zu];end;Zu=Zu+1;do(Fu)[3]=bu[JH[6]];end;do Zu=Zu+0x001;end;do Zu=Zu+0X1;end;do JH=bc[Zu];end;Zu=Zu+1;do(Fu)[0x4]=JH[6];end;Zu=Zu+0x1;uF=0x03;Fu[uF]=Fu[uF](Fu[uF+0x00001]);vu=uF;do Zu=Zu+1;end;Zu=Zu+0X0001;do JH=bc[Zu];end;do Zu=Zu+0X1;end;if not(not Fu[3])then else Zu=JH[0x0005];end;else Fu[1]=bu[JH[0X6]];do JH=bc[Zu];end;Zu=Zu+0X1;(Fu)[0X00001]=Fu[0X1][JH[0X001]];JH=bc[Zu];do Zu=Zu+0X1;end;do if not Fu[0x1]then do Zu=JH[0X00005];end;end;end;end;else do if QH==27 then repeat local hi,Ki=Lc,(Fu);if#hi>0X0 then local pu={};for Oz,iz in M,hi do do for cG,rG in M,iz do if rG[0X001]==Ki and rG[0X2]>=0x0000 then local Nj=(rG[0x002]);if not pu[Nj]then pu[Nj]={Ki[Nj]};end;(rG)[0X1]=pu[Nj];rG[2]=0X1;end;end;end;end;end;until true;return;else(Fu)[JH[2]]=JH[6];end;end;end;else if not(QH>=0X00001E)then do if QH~=29 then(Fu)[3]=bu[JH[0X006]];local fa=3;Zu=Zu+0X1;Zu=Zu+1;JH=bc[Zu];do Zu=Zu+0X1;end;Fu[4]=JH[0X6];JH=bc[Zu];do Zu=Zu+0x0001;end;(Fu)[0X5]=JH[0X6];Zu=Zu+0X1;Fu[fa](Fu[fa+0x01],Fu[fa+2]);vu=fa-1;JH=bc[Zu];Zu=Zu+0x1;(Fu)[0X3]=bu[JH[0X6]];Zu=Zu+1;Zu=Zu+1;Zu=Zu+1;do vu=0X3;end;(Fu[vu])();vu=vu-0X1;Zu=Zu+0X1;Zu=Zu+0X00001;JH=bc[Zu];do Zu=Zu+1;end;Fu[0X3]=bu[JH[6]];Zu=Zu+0X1;Zu=Zu+0X1;do JH=bc[Zu];end;Zu=Zu+1;Fu[0x4]=JH[0x06];Zu=Zu+0x00001;fa=0x00003;(Fu)[fa]=Fu[fa](Fu[fa+1]);do vu=fa;end;Zu=Zu+1;do Zu=Zu+1;end;do JH=bc[Zu];end;Zu=Zu+1;do if not(Fu[0X0003])then else Zu=JH[5];end;end;else(Fu)[0x002]=bu[JH[0X0006]];Zu=Zu+0X00001;Zu=Zu+0X00001;JH=bc[Zu];Zu=Zu+0X1;do(Fu)[3]=JH[0X6];end;do Zu=Zu+0X1;end;local ud=(0x2);do(Fu)[ud]=Fu[ud](Fu[ud+1]);end;vu=ud;Zu=Zu+1;do Zu=Zu+0X0001;end;JH=bc[Zu];Zu=Zu+1;do if not(not Fu[2])then else Zu=JH[0x5];end;end;end;end;else if not(QH>=31)then(Fu)[JH[0x00002]]={E({},0X00001,JH[0X05])};else if QH==0X20 then do Fu[JH[0X00002]]=Fu[JH[0X00005]]==Fu[JH[0X0004]];end;else repeat local F2,O2=Lc,Fu;if#F2>0 then local AA={};for wA,DA in M,F2 do for Ya,Da in M,DA do do if Da[1]==O2 and Da[0x2]>=0 then local Id=Da[0X002];if not AA[Id]then AA[Id]={O2[Id]};end;(Da)[0X1]=AA[Id];Da[2]=1;end;end;end;end;end;until true;local Rt=(JH[2]);return false,Rt,Rt+JH[0X5]-2;end;end;end;end;end;else do if not(QH<8)then if QH>=0XC then if not(QH>=0X00e)then if QH~=0xd then Fu[3]=bu[JH[0X6]];JH=bc[Zu];local Wz=nil;Zu=Zu+1;local Gz=Uc[JH[5]];local xz=(Gz[5]);local Bz=#xz;if not(Bz>0)then else do Wz={};end;for Za=0X00001,Bz do local ha=(xz[Za]);if ha[0X1]==0X0 then Wz[Za-1]={Fu,ha[0X2]};else Wz[Za-1]=jc[ha[2]];end;end;(S)(Lc,Wz);end;local Az=(3);Fu[0x4]=e3(Gz,Wz,bu);do Zu=Zu+1;end;(Fu[Az])(Fu[Az+1]);vu=Az-1;Zu=Zu+0X1;Zu=Zu+0X1;JH=bc[Zu];Zu=Zu+0x1;Zu=JH[0x5];else if not(Fu[JH[5]]<Fu[JH[0x4]])then else Zu=JH[0X2];end;end;else do if QH==0XF then for mD=JH[2],JH[0X00005]do do(Fu)[mD]=nil;end;end;else(Fu)[0x3]=Fu[2][JH[1]];Zu=Zu+1;do Zu=Zu+0X1;end;JH=bc[Zu];Zu=Zu+1;do if not(Fu[0x3])then else Zu=JH[0X5];end;end;end;end;end;else if QH<10 then if QH~=0X9 then Fu[3]=Fu[0X2][JH[0X1]];Zu=Zu+1;do Zu=Zu+1;end;JH=bc[Zu];Zu=Zu+1;if not(not Fu[3])then else do Zu=JH[5];end;end;else Fu[JH[2]]=Fu[JH[5]][JH[1]];end;else if QH==0Xb then Fu[JH[0x0002]]=w(Fu[JH[0x00005]],Fu[JH[0X00004]]);else do(Fu)[3]=Fu[2][JH[0X00001]];end;Zu=Zu+1;do Zu=Zu+1;end;do JH=bc[Zu];end;Zu=Zu+0X1;do if Fu[0X03]then do Zu=JH[0x5];end;end;end;end;end;end;else if not(QH>=4)then if not(QH<0X0002)then if QH==0x3 then local dq,Jq=JH[2],(JH[4]-0x1)*50;local aq=(Fu[dq]);do for ND=1,JH[0X05]do(aq)[Jq+ND]=Fu[dq+ND];end;end;else end;else if QH~=1 then(Fu)[0X0001]=bu[JH[6]];Zu=Zu+1;Zu=Zu+0X0001;JH=bc[Zu];Zu=Zu+1;(Fu)[0X1]=Fu[0x00001][JH[1]];JH=bc[Zu];Zu=Zu+1;do(Fu)[2]=bu[JH[6]];end;do Zu=Zu+0X1;end;do Zu=Zu+0X001;end;do Zu=Zu+1;end;vu=2;Fu[vu]=Fu[vu]();Zu=Zu+1;Zu=Zu+0X1;JH=bc[Zu];do Zu=Zu+1;end;if not(Fu[0X2]<JH[0X00001])then else Zu=JH[0x2];end;else local Oz=jc[0X000];(Fu)[3]=Oz[0x1][Oz[0X2]];local Wz=3;Zu=Zu+0X0001;Zu=Zu+1;JH=bc[Zu];Zu=Zu+1;local oz=Fu[3];Fu[Wz+1]=oz;do(Fu)[Wz]=oz[JH[1]];end;Zu=Zu+0X1;Wz=0X3;Fu[Wz](Fu[Wz+1]);vu=Wz-1;JH=bc[Zu];Zu=Zu+0X1;Zu=JH[0X00005];end;end;else do if QH>=6 then do if QH~=0x0007 then Fu[1]=bu[JH[6]];Zu=Zu+1;Zu=Zu+1;do JH=bc[Zu];end;do Zu=Zu+0X01;end;do Fu[0X001]=Fu[0X001][JH[0X001]];end;do Zu=Zu+1;end;do Zu=Zu+1;end;local d4=0X1;do JH=bc[Zu];end;Zu=Zu+1;Fu[2]=JH[6];Zu=Zu+1;Fu[d4]=Fu[d4](Fu[d4+0x1]);do vu=d4;end;JH=bc[Zu];do Zu=Zu+1;end;do if not(not Fu[0x1])then else Zu=JH[0X00005];end;end;else(Fu)[0X3]=Fu[2][JH[1]];Zu=Zu+1;Zu=Zu+1;JH=bc[Zu];do Zu=Zu+1;end;if not(Fu[0X3])then else Zu=JH[0x5];end;end;end;else if QH~=5 then local Pi=(jc[0X0]);Fu[3]=Pi[0X01][Pi[2]];JH=bc[Zu];Zu=Zu+0x0001;local pi=(Fu[3]);local ei=0X3;do Fu[ei+1]=pi;end;Fu[ei]=pi[JH[0x0001]];do Zu=Zu+1;end;do ei=3;end;(Fu)[ei]=Fu[ei](Fu[ei+0x001]);vu=ei;JH=bc[Zu];do Zu=Zu+1;end;do if not(Fu[0X3])then else Zu=JH[0X005];end;end;else Fu[0]=bu[JH[6]];Zu=Zu+0X00001;Zu=Zu+1;JH=bc[Zu];do Zu=Zu+1;end;do(Fu)[0X1]=JH[0X06];end;Zu=Zu+0X01;local xa=(0);Fu[xa]=Fu[xa](Fu[xa+0X1]);do vu=xa;end;do Zu=Zu+1;end;do Zu=Zu+1;end;JH=bc[Zu];do Zu=Zu+0x1;end;Fu[0X1]=Fu[0][JH[1]];Zu=Zu+0X00001;Zu=Zu+0X1;JH=bc[Zu];Zu=Zu+1;if Fu[1]then do Zu=JH[5];end;end;end;end;end;end;end;end;end;end;end);if Au then if Gu then if Vu==0X1 then return Fu[ru]();else return Fu[ru](E(Fu,ru+1,vu));end;elseif not(ru)then else return E(Fu,ru,Vu);end;else if V(Gu)=="\115\116ri\110g"then if r(Gu,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if r(Gu,"^.-:%d+: ")then(q)('Lur\097\112\104\032Scr\105\112\116:'..(Qc[Zu-1]or"(i\110\116er\110\097\108)").."\058\032"..u(Gu),0);else q(Gu,0);end;end;else q(Gu,0X0);end;end;end;end;end;else if not(Sc<72)then if Sc==0X49 then do ic=function(...)local dh,gh=0x001,{};local Qh=0X0000;local Ph=(k and k()or _ENV);local wh=({[2]=Vc,[1]=gh});local Ch,sh=q3(...);Ch=Ch-1;for SK=0,Ch do if ac>SK then gh[SK]=sh[SK+1];else break;end;end;local zh=((Ph==H and fc or Ph));if not nc then sh=nil;elseif not(Ac)then else(gh)[ac]={n=Ch>=ac and Ch-ac+0X1 or 0X0000,E(sh,ac+0X00001,Ch+0X1)};end;if zh~=Ph then if not(s)then _ENV=zh;else s(ic,zh);end;end;local Oh,Xh,Zh,yh=c(function()do while true do local ZS=(bc[dh]);local dS=ZS[0x00003];dh=dh+1;if not(dS>=31)then do if dS<0X000f then if not(dS>=0X7)then if not(dS>=0x3)then if dS<0x001 then do(gh)[0X4]=zh[ZS[6]];end;do ZS=bc[dh];end;do dh=dh+0X001;end;do gh[0X4]=gh[4][ZS[1]];end;do ZS=bc[dh];end;dh=dh+0X1;if not gh[0X004]then dh=ZS[0X5];end;else if dS~=0X2 then(gh)[4]=zh[ZS[0x0006]];dh=dh+1;Qh=4;gh[Qh]=gh[Qh]();do ZS=bc[dh];end;dh=dh+0X1;if gh[4]then dh=ZS[0x5];end;else gh[0X0000b]=zh[ZS[6]];do ZS=bc[dh];end;dh=dh+1;(gh)[11]=gh[0x00b][ZS[1]];do ZS=bc[dh];end;dh=dh+1;gh[11]=gh[11][ZS[1]];do ZS=bc[dh];end;dh=dh+0X1;do(gh)[0Xb]=gh[0xb][ZS[0X1]];end;do dh=dh+0X1;end;dh=dh+1;ZS=bc[dh];dh=dh+0X001;gh[12]=gh[10][ZS[0x1]];dh=dh+0X0001;do dh=dh+0X1;end;ZS=bc[dh];dh=dh+1;if gh[11]~=gh[0X0000c]then else dh=ZS[0X2];end;end;end;else if dS>=0X5 then if dS~=0x06 then if not(not(ZS[0X6]<=gh[ZS[0x004]]))then else dh=ZS[0x2];end;else do gh[0xB]=zh[ZS[0X6]];end;do dh=dh+1;end;dh=dh+1;dh=dh+1;do Qh=11;end;gh[Qh]=gh[Qh]();ZS=bc[dh];dh=dh+0X01;do if gh[0Xb]then dh=ZS[0x5];end;end;end;else if dS==4 then local jP=0X0000e;local UP=(gh[13]);(gh)[jP+0X00001]=UP;gh[jP]=UP[ZS[0x1]];do dh=dh+0x1;end;jP=14;gh[jP]=gh[jP](gh[jP+0X001]);do Qh=jP;end;ZS=bc[dh];dh=dh+1;local wP=jc[0];gh[0X0000E]=gh[14][ZS[0X1]];do dh=dh+1;end;dh=dh+1;ZS=bc[dh];dh=dh+1;gh[0XF]=zh[ZS[6]];dh=dh+1;dh=dh+0x1;dh=dh+1;(gh)[0x0010]=wP[1][wP[0X2]];do ZS=bc[dh];end;dh=dh+0X001;do gh[0X10]=gh[0X10][ZS[0X1]];end;dh=dh+1;do(gh)[17]=gh[14];end;do dh=dh+1;end;gh[18]=true;dh=dh+1;jP=15;Qh=jP+0X00004-0X001;gh[jP]=gh[jP](E(gh,jP+1,Qh));do Qh=jP;end;dh=dh+1;dh=dh+1;ZS=bc[dh];dh=dh+0X00001;do if not(not(gh[15]<=gh[7]))then else dh=ZS[0X002];end;end;else gh[11]=zh[ZS[0x6]];dh=dh+0X01;dh=dh+1;dh=dh+1;Qh=0Xb;(gh)[Qh]=gh[Qh]();ZS=bc[dh];dh=dh+1;if not gh[11]then dh=ZS[5];end;end;end;end;else if not(dS<0Xb)then if dS>=13 then do if dS==14 then(gh)[4]=zh[ZS[6]];do dh=dh+1;end;do dh=dh+1;end;dh=dh+1;Qh=0X0004;do gh[Qh]=gh[Qh]();end;do dh=dh+1;end;dh=dh+1;ZS=bc[dh];dh=dh+0X1;if not(not gh[0X4])then else dh=ZS[0X005];end;else(gh)[4]=zh[ZS[0X0006]];dh=dh+1;do dh=dh+0X001;end;dh=dh+1;Qh=4;do gh[Qh]=gh[Qh]();end;do ZS=bc[dh];end;dh=dh+0X1;do if not(gh[4])then else dh=ZS[0X5];end;end;end;end;else if dS==0X00C then do(gh)[0X4]=zh[ZS[6]];end;dh=dh+1;dh=dh+1;do ZS=bc[dh];end;dh=dh+1;do gh[4]=gh[4][ZS[0X1]];end;ZS=bc[dh];dh=dh+1;if gh[0X4]then dh=ZS[0X5];end;else(gh)[0x04]=zh[ZS[6]];dh=dh+0X0001;Qh=4;(gh)[Qh]=gh[Qh]();do ZS=bc[dh];end;do dh=dh+1;end;do if not(gh[4])then else do dh=ZS[0X5];end;end;end;end;end;else if not(dS>=9)then do if dS~=0X00008 then do gh[16]=zh[ZS[0X6]];end;dh=dh+0x1;dh=dh+0X1;dh=dh+1;(gh)[17]=gh[0X0E];local MS=(16);dh=dh+1;gh[MS]=gh[MS](gh[MS+1]);Qh=MS;dh=dh+1;do gh[0X9]=gh[16];end;dh=dh+1;(gh)[0X0010]=gh[15];do dh=dh+0X1;end;gh[0X11]=gh[0XD];do dh=dh+1;end;do gh[0Xa]=gh[17];end;dh=dh+0X0001;(gh)[0x7]=gh[0X10];ZS=bc[dh];dh=dh+1;dh=ZS[5];else gh[4]=zh[ZS[0X00006]];dh=dh+1;do dh=dh+0X1;end;dh=dh+0X1;Qh=4;do gh[Qh]=gh[Qh]();end;dh=dh+0x1;dh=dh+1;do ZS=bc[dh];end;dh=dh+1;if gh[0X0004]then dh=ZS[5];end;end;end;else if dS==10 then(gh)[4]=zh[ZS[0x006]];dh=dh+0X1;local Hb,nb=0X004,(jc[0x00000]);gh[5]=nb[1][nb[0X2]];ZS=bc[dh];dh=dh+1;gh[5]=gh[5][ZS[0X00001]];do dh=dh+1;end;dh=dh+0X1;dh=dh+1;(gh)[Hb]=gh[Hb](gh[Hb+0x1]);Qh=Hb;dh=dh+0X0001;dh=dh+0X1;do ZS=bc[dh];end;dh=dh+0x01;(gh)[0X5]=zh[ZS[0x6]];ZS=bc[dh];dh=dh+1;(gh)[6]=zh[ZS[6]];do ZS=bc[dh];end;do dh=dh+0X0001;end;gh[6]=gh[0x6][ZS[1]];dh=dh+0x00001;dh=dh+1;do ZS=bc[dh];end;do dh=dh+1;end;gh[6]=gh[0X00006][ZS[0X001]];dh=dh+1;dh=dh+0X1;do dh=dh+0X001;end;Hb=5;gh[Hb]=gh[Hb](gh[Hb+1]);Qh=Hb;ZS=bc[dh];dh=dh+1;(gh)[0X00006]=zh[ZS[6]];do ZS=bc[dh];end;dh=dh+1;gh[0X6]=gh[6][ZS[1]];dh=dh+0x1;do dh=dh+1;end;ZS=bc[dh];dh=dh+0x1;do(gh)[6]=gh[0X006][ZS[1]];end;ZS=bc[dh];dh=dh+0X1;gh[0x0007]=zh[ZS[6]];dh=dh+1;do dh=dh+0X001;end;ZS=bc[dh];do dh=dh+1;end;gh[7]=gh[0x0007][ZS[0X00001]];ZS=bc[dh];dh=dh+1;do gh[0X0007]=gh[7][ZS[0x01]];end;dh=dh+0X1;(gh)[0X6]=gh[0X06][gh[0X7]];do ZS=bc[dh];end;dh=dh+0X00001;local Rb=gh[0X6];Hb=6;(gh)[Hb+1]=Rb;gh[Hb]=Rb[ZS[1]];dh=dh+0X1;do Hb=0X0006;end;(gh)[Hb]=gh[Hb](gh[Hb+0X1]);Qh=Hb;ZS=bc[dh];dh=dh+0X00001;(gh)[0X0007]=ZS[0x6];do ZS=bc[dh];end;do dh=dh+0x1;end;gh[8]=ZS[0X00006];local yb=0X2;dh=dh+1;do for DF=9,10 do do gh[DF]=nil;end;end;end;do ZS=bc[dh];end;dh=dh+0X1;gh[11]=zh[ZS[6]];dh=dh+1;(gh)[0xc]=gh[6];do dh=dh+0X1;end;Hb=0xb;local Eb=(4);do if yb~=0 then Qh=Hb+yb-0X1;end;end;local Pb,Fb=nil,(nil);do if yb~=1 then Pb,Fb=q3(gh[Hb](E(gh,Hb+0X1,Qh)));else Pb,Fb=q3(gh[Hb]());end;end;if Eb==0X1 then Qh=Hb-1;else do if Eb~=0 then do Pb=Hb+Eb-0X2;end;Qh=Pb+0X1;else do Pb=Pb+Hb-1;end;do Qh=Pb;end;end;end;local I7=(0x0);for PT=Hb,Pb do do I7=I7+1;end;(gh)[PT]=Fb[I7];end;end;ZS=bc[dh];do dh=dh+0X1;end;do Hb=11;end;local cb=P(function(...)(C)();do for kM,eM in...do(C)(true,kM,eM);end;end;end);(cb)(gh[Hb],gh[Hb+0X001],gh[Hb+0X2]);Qh=Hb;gh[Hb]=cb;dh=ZS[5];else if not(gh[ZS[0X002]])then else dh=ZS[0X05];end;end;end;end;end;else if not(dS>=23)then if not(dS>=0X013)then if not(dS<17)then if dS~=18 then local Rz=(ZS[0X00004]-0X1)*0x32;local Gz=ZS[2];local Jz=gh[Gz];for vZ=1,ZS[0x005]do do(Jz)[Rz+vZ]=gh[Gz+vZ];end;end;else end;else if dS~=0x010 then do gh[11]=zh[ZS[6]];end;do dh=dh+1;end;dh=dh+0X01;dh=dh+1;do Qh=0Xb;end;(gh)[Qh]=gh[Qh]();do dh=dh+0X0001;end;dh=dh+1;ZS=bc[dh];dh=dh+1;if not(gh[11])then else dh=ZS[0x5];end;else gh[ZS[2]]=nil;end;end;else if dS<21 then if dS~=0x14 then if not(not(gh[ZS[0x005]]<gh[ZS[0X0004]]))then else dh=ZS[2];end;else gh[ZS[2]]=T(gh[ZS[0X5]],gh[ZS[4]]);end;else if dS==0X016 then do gh[ZS[0X2]]=ZS[0x00006];end;else local SO=(ZS[2]);local NO,TO,dO=gh[SO]();if NO then gh[SO+0x1]=TO;gh[SO+0x2]=dO;dh=ZS[0X5];end;end;end;end;else if dS<27 then do if not(dS<0X19)then if dS==26 then repeat local t1,H1,Z1=Lc,gh,ZS[2];if not(#t1>0X0000)then else local rz={};do for yY,cY in M,t1 do for h7,n7 in M,cY do if n7[1]==H1 and n7[2]>=Z1 then local Wu=(n7[0x00002]);if not rz[Wu]then rz[Wu]={H1[Wu]};end;n7[1]=rz[Wu];(n7)[2]=1;end;end;end;end;end;until true;else(gh)[8]=gh[0X0007];dh=dh+1;do(gh)[9]=gh[6];end;do dh=dh+0x1;end;do gh[0x3]=gh[0X009];end;dh=dh+1;do gh[0x002]=gh[0X008];end;do ZS=bc[dh];end;dh=dh+1;dh=ZS[5];end;else if dS==24 then local Ts=(jc[ZS[5]]);gh[ZS[2]]=Ts[0X1][Ts[2]];else do if gh[ZS[5]]~=gh[ZS[4]]then else dh=ZS[2];end;end;end;end;end;else if dS>=29 then if dS==30 then gh[0Xb]=zh[ZS[6]];dh=dh+1;dh=dh+0X0001;do ZS=bc[dh];end;dh=dh+1;(gh)[0X000B]=gh[11][ZS[0X1]];dh=dh+0x00001;dh=dh+1;ZS=bc[dh];dh=dh+1;if not(not gh[11])then else dh=ZS[0X5];end;else do gh[ZS[2]]={E({},0x00001,ZS[5])};end;end;else if dS==0x1C then(gh)[15]=gh[4][ZS[1]];ZS=bc[dh];local u2=(15);dh=dh+1;local B2=gh[0XF];gh[u2+0x001]=B2;(gh)[u2]=B2[ZS[1]];do ZS=bc[dh];end;dh=dh+0x01;(gh)[17]=ZS[6];do dh=dh+1;end;u2=0XF;(gh)[u2]=gh[u2](gh[u2+0X1],gh[u2+0X02]);Qh=u2;dh=dh+0X0001;dh=dh+1;ZS=bc[dh];do dh=dh+1;end;if not(gh[0Xf])then else dh=ZS[0X00005];end;else gh[13]=zh[ZS[6]];local zP=0X00d;dh=dh+0X01;do(gh)[0X0000e]=gh[4];end;dh=dh+1;gh[zP]=gh[zP](gh[zP+0X1]);Qh=zP;dh=dh+0X00001;dh=dh+0X00001;ZS=bc[dh];dh=dh+0X1;(gh)[0X000e]=zh[ZS[0X6]];dh=dh+1;dh=dh+1;dh=dh+0x1;(gh)[15]=gh[5];dh=dh+0X01;do zP=14;end;(gh)[zP]=gh[zP](gh[zP+0x1]);Qh=zP;ZS=bc[dh];do dh=dh+1;end;if gh[13]==gh[0XE]then dh=ZS[2];end;end;end;end;end;end;end;else do if not(dS<0X2E)then if not(dS<54)then if not(dS<58)then if dS<0X3C then if dS~=0X3b then(gh)[0XB]=zh[ZS[6]];do ZS=bc[dh];end;dh=dh+0X1;do(gh)[0xc]=zh[ZS[6]];end;dh=dh+0X001;dh=dh+0X001;do ZS=bc[dh];end;dh=dh+1;(gh)[0X00C]=gh[0X000C][ZS[1]];do ZS=bc[dh];end;dh=dh+0x1;local KS=(11);do gh[12]=gh[12][ZS[1]];end;ZS=bc[dh];dh=dh+1;do(gh)[0Xc]=gh[0xC][ZS[1]];end;ZS=bc[dh];dh=dh+1;gh[13]=gh[0Xa][ZS[1]];do dh=dh+1;end;do dh=dh+1;end;dh=dh+1;gh[KS](gh[KS+1],gh[KS+2]);do Qh=KS-0x001;end;ZS=bc[dh];dh=dh+0X1;(gh)[0X000b]=zh[ZS[0X6]];ZS=bc[dh];do dh=dh+0X01;end;if not(not gh[11])then else dh=ZS[5];end;else gh[0X7]=zh[ZS[6]];dh=dh+0x1;dh=dh+0x1;local YY=7;local dY=jc[0];dh=dh+1;do(gh)[8]=gh[6];end;dh=dh+1;(gh)[9]=dY[0x1][dY[0X0002]];dh=dh+1;dh=dh+0x0001;dh=dh+1;(gh)[10]=true;dh=dh+0X1;Qh=YY+4-1;do gh[YY]=gh[YY](E(gh,YY+1,Qh));end;Qh=YY;dh=dh+1;dh=dh+0x01;ZS=bc[dh];do dh=dh+1;end;gh[0X8]=gh[0x7]+ZS[1];ZS=bc[dh];dh=dh+0X1;gh[9]=zh[ZS[6]];dh=dh+0X1;dh=dh+0x00001;dh=dh+0X1;dY=jc[0x0000];gh[10]=dY[0x1][dY[0X0002]];dh=dh+0x00001;dh=dh+0x1;dh=dh+0X1;YY=9;gh[YY]=gh[YY](gh[YY+1]);Qh=YY;do ZS=bc[dh];end;dh=dh+1;if not(gh[8]<gh[9])then dh=ZS[2];end;end;else if dS~=0X03d then(gh)[4]=zh[ZS[6]];ZS=bc[dh];dh=dh+1;(gh)[0X0005]=ZS[6];dh=dh+0X1;gh[0x6]=gh[3];local E6=(4);dh=dh+1;gh[E6](gh[E6+0X001],gh[E6+0X00002]);Qh=E6-1;dh=dh+1;dh=dh+1;ZS=bc[dh];dh=dh+1;dh=ZS[0X5];else(gh)[0Xb]=zh[ZS[0X006]];dh=dh+1;Qh=11;do gh[Qh]=gh[Qh]();end;ZS=bc[dh];do dh=dh+1;end;if not(gh[11])then else do dh=ZS[5];end;end;end;end;else do if dS<56 then if dS~=0X000037 then local Z1=(jc[1]);do gh[4]=Z1[0X01][Z1[2]];end;do dh=dh+1;end;dh=dh+1;do ZS=bc[dh];end;dh=dh+0x0001;if not(gh[4])then else dh=ZS[5];end;else do repeat local cI,gI=Lc,(gh);if not(#cI>0)then else local zL={};for YV,DV in M,cI do do for ia,fa in M,DV do if not(fa[1]==gI and fa[2]>=0X0)then else local tN=fa[2];if not(not zL[tN])then else(zL)[tN]={gI[tN]};end;fa[1]=zL[tN];fa[2]=1;end;end;end;end;end;until true;end;local vx=ZS[0X00002];do return false,vx,vx+ZS[0x5]-0X2;end;end;else if dS~=57 then if not(not gh[ZS[2]])then else dh=ZS[5];end;else(gh)[ZS[2]]=o(gh[ZS[5]],gh[ZS[0X4]]);end;end;end;end;else if not(dS>=0X000032)then do if not(dS>=48)then if dS~=0X2f then do gh[ZS[2]]=J(gh[ZS[0X00005]],gh[ZS[4]]);end;else gh[4]=zh[ZS[0x006]];dh=dh+0x1;dh=dh+0X00001;dh=dh+0X01;do Qh=0X4;end;(gh)[Qh]=gh[Qh]();dh=dh+0X1;dh=dh+1;do ZS=bc[dh];end;dh=dh+0X1;(gh)[0x5]=zh[ZS[6]];do dh=dh+0X0001;end;do dh=dh+1;end;do dh=dh+1;end;(gh)[4]=gh[4]-gh[5];ZS=bc[dh];dh=dh+0x1;if not(ZS[0X6]<gh[4])then dh=ZS[2];end;end;else if dS==0X031 then local ey=ZS[0X5];local hy=gh[ey];do for ch=ey+1,ZS[4]do hy=hy..gh[ch];end;end;gh[ZS[2]]=hy;else gh[ZS[0X2]]=-gh[ZS[0X5]];end;end;end;else if dS<52 then if dS==51 then(gh)[4]=zh[ZS[0X6]];dh=dh+1;do dh=dh+1;end;ZS=bc[dh];dh=dh+1;(gh)[4]=gh[0x00004][ZS[1]];dh=dh+1;dh=dh+1;ZS=bc[dh];dh=dh+1;if not(not gh[4])then else dh=ZS[0X5];end;else gh[ZS[2]]=zh[ZS[0X6]];end;else if dS~=53 then(gh)[0X0000B]=zh[ZS[6]];dh=dh+1;dh=dh+0X1;ZS=bc[dh];do dh=dh+0X0001;end;gh[0X00b]=gh[11][ZS[1]];ZS=bc[dh];dh=dh+0x1;if gh[11]then dh=ZS[0X5];end;else(gh)[0]=zh[ZS[0X6]];dh=dh+0X1;dh=dh+1;dh=dh+1;Qh=0;do gh[Qh]=gh[Qh]();end;ZS=bc[dh];dh=dh+0X01;if not(not gh[0X0])then else dh=ZS[5];end;end;end;end;end;else if dS<0X26 then do if not(dS<34)then do if not(dS>=0X24)then if dS==35 then gh[0x1]=zh[ZS[6]];dh=dh+0X1;local jY=jc[0x00000];dh=dh+0X1;dh=dh+1;(gh)[2]=jY[1][jY[0X2]];local AY=1;do dh=dh+1;end;dh=dh+0X1;ZS=bc[dh];dh=dh+0x1;(gh)[3]=zh[ZS[0X0006]];dh=dh+0x1;dh=dh+1;ZS=bc[dh];dh=dh+0x001;do gh[3]=gh[3][ZS[0x1]];end;dh=dh+0X1;gh[AY]=gh[AY](gh[AY+1],gh[AY+0X0002]);Qh=AY;dh=dh+1;dh=dh+1;ZS=bc[dh];dh=dh+0x00001;do if not(ZS[0x6]<gh[1])then dh=ZS[0X2];end;end;else if not(gh[ZS[0X005]]<=ZS[1])then dh=ZS[0X00002];end;end;else do if dS~=0X025 then(gh)[0XB]=zh[ZS[6]];do dh=dh+0X01;end;local hX=(0X000b);dh=dh+1;ZS=bc[dh];dh=dh+1;local mX=nil;do gh[0x00B]=gh[0xB][ZS[1]];end;do ZS=bc[dh];end;dh=dh+0X001;local zX=(Uc[ZS[0x05]]);local pX=(zX[0X5]);local DX=#pX;do if DX>0 then mX={};do for gg=0X1,DX do local kg=pX[gg];do if kg[1]~=0x0 then mX[gg-0X01]=jc[kg[2]];else do mX[gg-1]={gh,kg[2]};end;end;end;end;end;(S)(Lc,mX);end;end;gh[0x0000c]=e3(zX,mX,zh);dh=dh+1;gh[hX](gh[hX+1]);Qh=hX-0X1;dh=dh+1;dh=dh+1;do ZS=bc[dh];end;dh=dh+1;dh=ZS[5];else gh[0x1]=zh[ZS[6]];local sC=0X00001;do dh=dh+1;end;dh=dh+1;local qC=jc[0X0];dh=dh+1;do gh[0X2]=qC[0X1][qC[2]];end;dh=dh+1;gh[sC]=gh[sC](gh[sC+0x1]);do Qh=sC;end;do ZS=bc[dh];end;do dh=dh+0x0001;end;(gh)[0X2]=ZS[6];dh=dh+1;(gh)[3]=nil;ZS=bc[dh];do dh=dh+1;end;(gh)[0X4]=zh[ZS[0X0006]];ZS=bc[dh];dh=dh+1;if not gh[0X04]then do dh=ZS[5];end;end;end;end;end;end;else if not(dS>=0X00020)then dh=ZS[0x5];else if dS==0X21 then local PD=(jc[0]);gh[1]=PD[0X1][PD[0X00002]];do ZS=bc[dh];end;dh=dh+0X1;do gh[0X2]=zh[ZS[6]];end;dh=dh+1;dh=dh+1;ZS=bc[dh];local oD=(2);do dh=dh+0X1;end;do(gh)[2]=gh[2][ZS[1]];end;dh=dh+1;dh=dh+0X1;ZS=bc[dh];dh=dh+0X1;do gh[3]=ZS[0x6];end;dh=dh+1;PD=jc[0x00000];do(gh)[4]=PD[1][PD[0X2]];end;ZS=bc[dh];do dh=dh+0X1;end;do gh[4]=gh[4][ZS[1]];end;dh=dh+0X0001;dh=dh+1;ZS=bc[dh];dh=dh+0X1;gh[4]=ZS[6]-gh[4];ZS=bc[dh];dh=dh+0x001;(gh)[5]=ZS[6];dh=dh+0X1;Qh=oD+4-1;gh[oD]=gh[oD](E(gh,oD+1,Qh));Qh=oD;dh=dh+0X01;(gh)[0X01]=gh[0X1]+gh[0X0002];dh=dh+0X1;PD=jc[0];(PD[0X1])[PD[2]]=gh[0X1];ZS=bc[dh];dh=dh+0X1;dh=ZS[0X5];else gh[ZS[0X002]]=ZS[6];end;end;end;end;else if not(dS>=0x0002a)then do if dS<0X0028 then if dS==0X00027 then repeat local PG,YG=Lc,(gh);if#PG>0 then local hi=({});do for V5,j5 in M,PG do for uo,bo in M,j5 do if not(bo[1]==YG and bo[0X00002]>=0X0)then else local cU=(bo[2]);if not hi[cU]then do hi[cU]={YG[cU]};end;end;bo[1]=hi[cU];(bo)[0x002]=0x1;end;end;end;end;end;until true;do return;end;else do gh[0X0b]=zh[ZS[6]];end;do dh=dh+1;end;dh=dh+0X1;dh=dh+1;Qh=11;gh[Qh]=gh[Qh]();ZS=bc[dh];do dh=dh+1;end;if not(gh[0XB])then else do dh=ZS[5];end;end;end;else if dS==41 then for aD=ZS[2],ZS[0X5]do gh[aD]=nil;end;else(gh)[0X0001]=zh[ZS[6]];dh=dh+1;dh=dh+0X1;dh=dh+0X1;Qh=0X1;(gh[Qh])();Qh=Qh-1;do dh=dh+1;end;local xn=jc[0];(gh)[0X001]=xn[0x1][xn[0X02]];ZS=bc[dh];dh=dh+0X0001;(gh)[1]=gh[1][ZS[1]];ZS=bc[dh];dh=dh+0X1;do if not(gh[1]<ZS[0x1])then dh=ZS[2];end;end;end;end;end;else if dS<0x2C then if dS==43 then(gh)[0x1]=zh[ZS[0x00006]];ZS=bc[dh];local en=(1);dh=dh+0X1;do gh[0x2]=gh[0X0][ZS[0X1]];end;dh=dh+0X1;do dh=dh+1;end;do dh=dh+1;end;(gh[en])(gh[en+0X1]);Qh=en-0x1;dh=dh+0X1;do dh=dh+1;end;do ZS=bc[dh];end;do dh=dh+1;end;dh=ZS[5];else local k7=Uc[ZS[5]];local Q7=nil;local K7=(k7[0X05]);local Y7=#K7;if not(Y7>0)then else Q7={};for xb=0X0001,Y7 do local eb=(K7[xb]);if eb[0x1]==0X00 then Q7[xb-1]={gh,eb[0x002]};else do Q7[xb-1]=jc[eb[0X002]];end;end;end;S(Lc,Q7);end;do gh[ZS[2]]=e3(k7,Q7,zh);end;end;else do if dS==45 then gh[0]=zh[ZS[6]];dh=dh+1;dh=dh+1;local Fe=(0);ZS=bc[dh];dh=dh+1;(gh)[1]=zh[ZS[0x006]];dh=dh+1;dh=dh+0X1;ZS=bc[dh];dh=dh+1;(gh)[0X1]=gh[0X001][ZS[0X1]];dh=dh+0X1;gh[Fe]=gh[Fe](gh[Fe+0X01]);Qh=Fe;dh=dh+1;dh=dh+0X1;do ZS=bc[dh];end;dh=dh+1;if not gh[0x0]then dh=ZS[5];end;else gh[0X4]=zh[ZS[6]];dh=dh+1;local QE=(0X0004);do dh=dh+1;end;do ZS=bc[dh];end;dh=dh+1;gh[0x5]=zh[ZS[6]];dh=dh+1;dh=dh+1;local WE=(0X00004);ZS=bc[dh];dh=dh+0X1;gh[0X06]=zh[ZS[0X6]];dh=dh+1;(gh)[5]=gh[5][gh[6]];do dh=dh+0x00001;end;do dh=dh+1;end;dh=dh+1;local SE=(0X02);if SE~=0X000 then Qh=QE+SE-0X1;end;local wE,nE=nil,(nil);do if SE==1 then wE,nE=q3(gh[QE]());else wE,nE=q3(gh[QE](E(gh,QE+1,Qh)));end;end;if WE==1 then Qh=QE-1;else if WE~=0X0 then wE=QE+WE-0X2;Qh=wE+1;else wE=wE+QE-0X01;Qh=wE;end;local mg=(0);do for pa=QE,wE do do mg=mg+1;end;(gh)[pa]=nE[mg];end;end;end;ZS=bc[dh];dh=dh+1;QE=4;local rE=(P(function(...)(C)();for SO,oO in...do C(true,SO,oO);end;end));(rE)(gh[QE],gh[QE+1],gh[QE+0X002]);do Qh=QE;end;(gh)[QE]=rE;dh=ZS[0X05];end;end;end;end;end;end;end;end;end;end;end);if Oh then if Xh then do if yh==0X01 then return gh[Zh]();else return gh[Zh](E(gh,Zh+1,Qh));end;end;elseif Zh then return E(gh,Zh,yh);end;else if V(Xh)=='\115\116\114\105ng'then if not(r(Xh,'att\101\109pt\032\116o\032\121i\101\108d\032\097\099\114\111ss m\101\116\097m\101\116\104\111\100/C\037-cal\108 \098\111un\100\097ry'))then else do return coroutine.yield();end;end;if not(r(Xh,"^.-:%d+: "))then q(Xh,0X0);else(q)('L\117\114\097\112h Scr\105p\116:'..(Qc[dh-1]or"\040\105nte\114\110\097\108)")..": "..u(Xh),0X0);end;else q(Xh,0);end;end;end;end;else do ic=function(...)local nS,US=0x00,({});local sS=(k and k()or _ENV);local oS={[1]=US,[2]=Vc};local jS,HS=q3(...);jS=jS-1;for uF=0,jS do if not(ac>uF)then break;else US[uF]=HS[uF+1];end;end;if not nc then do HS=nil;end;elseif Ac then US[ac]={n=jS>=ac and jS-ac+1 or 0,E(HS,ac+0X001,jS+1)};end;local NS=(sS==H and fc or sS);local ZS=(0X1);if NS~=sS then if s then(s)(ic,NS);else do _ENV=NS;end;end;end;local FS,bS,aS,vS=c(function()do while true do local A8=bc[ZS];local d8=(A8[0X3]);ZS=ZS+1;if d8>=21 then do if not(d8<0x0001F)then do if d8>=0x00024 then if not(d8<39)then if not(d8<0X28)then if d8==41 then US[0X2]=NS[A8[6]];ZS=ZS+1;ZS=ZS+0X1;do A8=bc[ZS];end;ZS=ZS+0X00001;US[0X00002][A8[0X6]]=A8[0x1];ZS=ZS+0X1;repeat local eS,gS=Lc,US;do if#eS>0X0 then local ph={};for kI,MI in M,eS do for xd,wd in M,MI do do if wd[0X00001]==gS and wd[2]>=0x0 then local Jk=wd[2];if not ph[Jk]then do(ph)[Jk]={gS[Jk]};end;end;(wd)[0X1]=ph[Jk];do(wd)[2]=1;end;end;end;end;end;end;end;until true;return;else do US[4]=NS[A8[6]];end;do A8=bc[ZS];end;do ZS=ZS+1;end;US[0X5]=A8[0X6];local eA=(4);do ZS=ZS+1;end;US[eA](US[eA+1]);do nS=eA-0X0001;end;local WA=nil;A8=bc[ZS];ZS=ZS+1;US[0x4]=NS[A8[6]];ZS=ZS+1;ZS=ZS+0X01;A8=bc[ZS];do ZS=ZS+1;end;local gA=Uc[A8[5]];local nA=gA[0X5];local EA=#nA;if not(EA>0X00000)then else WA={};do for X7=0X1,EA do local Z7=(nA[X7]);if Z7[0X1]~=0 then do(WA)[X7-1]=jc[Z7[0X00002]];end;else WA[X7-1]={US,Z7[2]};end;end;end;S(Lc,WA);end;US[5]=e3(gA,WA,NS);ZS=ZS+0X00001;eA=4;US[eA](US[eA+0X1]);nS=eA-1;A8=bc[ZS];do ZS=ZS+0X1;end;ZS=A8[5];end;else US[A8[2]]=NS[A8[0X00006]];end;else if d8<37 then do US[A8[2]]={E({},0X1,A8[5])};end;else do if d8~=38 then do(US)[A8[0X2]]=US[A8[5]]+US[A8[4]];end;else US[0X4]=NS[A8[6]];ZS=ZS+0x1;do ZS=ZS+1;end;do A8=bc[ZS];end;local XK=0x04;do ZS=ZS+0x1;end;US[0X5]=A8[6];ZS=ZS+1;(US[XK])(US[XK+1]);nS=XK-1;ZS=ZS+0x1;US[4]=false;A8=bc[ZS];do ZS=ZS+0x001;end;NS[A8[0X6]]=US[4];A8=bc[ZS];ZS=ZS+0X1;do(US)[4]=NS[A8[6]];end;ZS=ZS+1;ZS=ZS+0X1;A8=bc[ZS];local fK=Uc[A8[5]];ZS=ZS+0X1;local KK,uK=nil,(fK[0X5]);local gK=(#uK);do if not(gK>0X0)then else KK={};for aj=0X1,gK do local cj=(uK[aj]);if cj[0X0001]==0X000 then(KK)[aj-1]={US,cj[0x2]};else(KK)[aj-0x00001]=jc[cj[0x00002]];end;end;(S)(Lc,KK);end;end;(US)[5]=e3(fK,KK,NS);ZS=ZS+0x00001;XK=4;(US[XK])(US[XK+0X1]);nS=XK-0X001;A8=bc[ZS];ZS=ZS+0X00001;ZS=A8[5];end;end;end;end;else do if not(d8>=33)then if d8==0X000020 then US[2]=NS[A8[0X6]];ZS=ZS+0X0001;ZS=ZS+1;A8=bc[ZS];ZS=ZS+1;do US[0X002]=US[2][A8[0X1]];end;A8=bc[ZS];ZS=ZS+1;if not(not US[0X2])then else ZS=A8[5];end;else if not US[A8[0X2]]then do ZS=A8[0x5];end;end;end;else if not(d8>=0X0022)then do US[0X2]=NS[A8[6]];end;ZS=ZS+1;do ZS=ZS+1;end;A8=bc[ZS];do ZS=ZS+0X1;end;US[2]=US[2][A8[0X1]];A8=bc[ZS];ZS=ZS+0x1;if not US[2]then ZS=A8[0x5];end;else if d8~=35 then US[2]=NS[A8[6]];ZS=ZS+0X1;do ZS=ZS+0X001;end;A8=bc[ZS];ZS=ZS+0X1;do US[0X03]=NS[A8[6]];end;ZS=ZS+1;do ZS=ZS+0x1;end;A8=bc[ZS];do ZS=ZS+0x1;end;(US)[4]=A8[6];do A8=bc[ZS];end;local Ip=(2);ZS=ZS+1;(US)[5]=A8[0x6];A8=bc[ZS];ZS=ZS+1;US[6]=A8[0x06];ZS=ZS+0X001;local Cp=0X5;if Cp==0 then else nS=Ip+Cp-0X1;end;local up,Dp=nil,(nil);local Yp=3;do if Cp~=1 then up,Dp=q3(US[Ip](E(US,Ip+0X00001,nS)));else up,Dp=q3(US[Ip]());end;end;do if Yp~=1 then if Yp~=0 then do up=Ip+Yp-2;end;nS=up+1;else up=up+Ip-0X1;nS=up;end;local oH=0;for e2=Ip,up do oH=oH+0X1;US[e2]=Dp[oH];end;else nS=Ip-0X0001;end;end;ZS=ZS+0X00001;ZS=ZS+0x1;do A8=bc[ZS];end;ZS=ZS+0X1;if US[3]~=A8[0X0001]then else ZS=A8[2];end;else(US)[2]=NS[A8[6]];ZS=ZS+1;ZS=ZS+1;do A8=bc[ZS];end;do ZS=ZS+0X1;end;(US)[3]=A8[6];local XE=2;do ZS=ZS+0X1;end;(US)[XE]=US[XE](US[XE+1]);nS=XE;ZS=ZS+0X1;do ZS=ZS+1;end;A8=bc[ZS];ZS=ZS+0X1;if not US[2]then ZS=A8[5];end;end;end;end;end;end;end;else if not(d8<0X1a)then if d8>=28 then do if d8>=29 then if d8==0X1E then local RO=(US[A8[0x5]]);local DO=(A8[0x2]);US[DO+1]=RO;do(US)[DO]=RO[A8[1]];end;else US[0X4]=true;A8=bc[ZS];ZS=ZS+1;(NS)[A8[0x6]]=US[4];do A8=bc[ZS];end;ZS=ZS+0X1;do ZS=A8[0x0005];end;end;else do(US)[0X2]=NS[A8[6]];end;ZS=ZS+1;nS=2;US[nS]();nS=nS-1;A8=bc[ZS];do ZS=ZS+1;end;US[0X2]=NS[A8[6]];ZS=ZS+0x0001;do ZS=ZS+1;end;A8=bc[ZS];do ZS=ZS+0X1;end;(US[2])[A8[6]]=A8[0X1];ZS=ZS+0x1;repeat local JU,GU=Lc,US;if#JU>0X0 then local x9={};for KG,PG in M,JU do for TV,bV in M,PG do if not(bV[1]==GU and bV[2]>=0X0)then else local Fs=bV[0X2];if not(not x9[Fs])then else(x9)[Fs]={GU[Fs]};end;bV[0X001]=x9[Fs];(bV)[0X2]=0x00001;end;end;end;end;until true;return;end;end;else if d8~=27 then do repeat local Qj,yj=Lc,US;do if#Qj>0X0 then local ng={};for Tk,Wk in M,Qj do for nl,sl in M,Wk do if not(sl[1]==yj and sl[0X2]>=0)then else local BD=sl[0X2];if not ng[BD]then ng[BD]={yj[BD]};end;sl[1]=ng[BD];sl[0X002]=1;end;end;end;end;end;until true;end;local VS=(A8[0X2]);return false,VS,VS+A8[0X5]-0x2;else local B6=Uc[A8[0X00005]];local w6=(B6[0X05]);local v6=(nil);local h6=(#w6);if not(h6>0X0)then else v6={};do for AI=0X01,h6 do local xI=w6[AI];do if xI[0X1]==0X00 then do v6[AI-0X1]={US,xI[0X0002]};end;else do(v6)[AI-0X1]=jc[xI[0x2]];end;end;end;end;end;(S)(Lc,v6);end;(US)[A8[0X2]]=e3(B6,v6,NS);end;end;else do if not(d8<23)then if d8>=24 then if d8~=0X00019 then do(US)[2]=NS[A8[0X6]];end;A8=bc[ZS];ZS=ZS+1;(US)[2]=US[2][A8[1]];A8=bc[ZS];ZS=ZS+1;(US)[2]=US[0x002][A8[0X1]];do ZS=ZS+0X1;end;ZS=ZS+0X01;A8=bc[ZS];do ZS=ZS+1;end;if not(not(A8[0x6]<=US[2]))then else ZS=A8[0X2];end;else local Rd=A8[5];local qd=US[Rd];for kl=Rd+1,A8[4]do do qd=qd..US[kl];end;end;(US)[A8[0x02]]=qd;end;else US[2]=NS[A8[6]];ZS=ZS+1;ZS=ZS+0x00001;do A8=bc[ZS];end;ZS=ZS+0X01;(US)[2]=US[2][A8[1]];ZS=ZS+1;do ZS=ZS+0x00001;end;do A8=bc[ZS];end;ZS=ZS+1;do if not US[2]then ZS=A8[0X5];end;end;end;else if d8==0X000016 then do(US)[3]=NS[A8[6]];end;A8=bc[ZS];do ZS=ZS+0x00001;end;(US)[0x4]=A8[6];ZS=ZS+0X1;local Dq=0x003;(US)[Dq]=US[Dq](US[Dq+1]);do nS=Dq;end;ZS=ZS+1;ZS=ZS+1;do A8=bc[ZS];end;ZS=ZS+0x1;if US[0X03]==A8[0X1]then else ZS=A8[2];end;else(US)[0X002]=NS[A8[6]];A8=bc[ZS];local SN=3;ZS=ZS+0x1;local oN=2;(US)[0X3]=NS[A8[0X6]];do ZS=ZS+0X001;end;ZS=ZS+0X0001;A8=bc[ZS];ZS=ZS+1;US[4]=A8[6];ZS=ZS+1;local fN=3;if fN==0 then else do nS=oN+fN-0X1;end;end;local UN,VN=nil,nil;if fN~=1 then UN,VN=q3(US[oN](E(US,oN+0X1,nS)));else UN,VN=q3(US[oN]());end;if SN==1 then nS=oN-1;else if SN==0 then UN=UN+oN-0X001;nS=UN;else do UN=oN+SN-0X2;end;nS=UN+0X1;end;local K8=(0);for l6=oN,UN do K8=K8+1;US[l6]=VN[K8];end;end;A8=bc[ZS];ZS=ZS+1;do if not US[2]then do ZS=A8[5];end;end;end;end;end;end;end;end;end;else if d8>=0x00A then if d8<0x0000f then if not(d8>=12)then if d8~=0Xb then if US[A8[5]]~=A8[0x1]then else ZS=A8[0x2];end;else do US[0x2]=NS[A8[0X00006]];end;A8=bc[ZS];ZS=ZS+0X1;US[0x2]=US[2][A8[0X1]];do A8=bc[ZS];end;ZS=ZS+1;do if not US[2]then ZS=A8[0X5];end;end;end;else do if not(d8>=13)then(US)[2]=NS[A8[6]];ZS=ZS+1;ZS=ZS+0x0001;do A8=bc[ZS];end;ZS=ZS+0X001;US[3]=NS[A8[0x6]];ZS=ZS+1;ZS=ZS+0X01;do A8=bc[ZS];end;ZS=ZS+1;US[0X4]=A8[6];do ZS=ZS+1;end;local fv,Cv,Ov=0X3,3,2;if Cv==0 then else do nS=Ov+Cv-0X1;end;end;local Xv,pv=nil,nil;do if Cv==1 then Xv,pv=q3(US[Ov]());else Xv,pv=q3(US[Ov](E(US,Ov+1,nS)));end;end;if fv~=0x1 then if fv==0x0 then Xv=Xv+Ov-0X01;nS=Xv;else Xv=Ov+fv-2;do nS=Xv+0x1;end;end;local dC=0X0;do for ik=Ov,Xv do dC=dC+0X01;do US[ik]=pv[dC];end;end;end;else nS=Ov-1;end;A8=bc[ZS];ZS=ZS+0X0001;do if not(not US[2])then else ZS=A8[5];end;end;else if d8~=14 then do US[0]=NS[A8[6]];end;A8=bc[ZS];local to=(3);ZS=ZS+1;do US[1]=NS[A8[0X6]];end;do A8=bc[ZS];end;local ko=0;ZS=ZS+1;US[0X2]=A8[0X006];ZS=ZS+0x1;(US)[0x3]=true;ZS=ZS+0X1;local zo=4;if zo~=0 then nS=ko+zo-0X1;end;local fo,qo=nil,(nil);if zo==1 then do fo,qo=q3(US[ko]());end;else fo,qo=q3(US[ko](E(US,ko+1,nS)));end;do if to~=0X1 then if to~=0x0 then fo=ko+to-2;nS=fo+0x1;else fo=fo+ko-0X1;nS=fo;end;local Je=(0X00);for Ij=ko,fo do Je=Je+1;(US)[Ij]=qo[Je];end;else nS=ko-0x1;end;end;ZS=ZS+1;ZS=ZS+0x1;do A8=bc[ZS];end;ZS=ZS+1;if US[0x1]~=A8[0X0001]then else ZS=A8[0x2];end;else end;end;end;end;else if not(d8<18)then if d8>=0X00013 then if d8~=0X14 then do US[A8[2]]=US[A8[0X5]]<US[A8[0X0004]];end;else(US)[2]=NS[A8[0X6]];do ZS=ZS+1;end;do ZS=ZS+1;end;A8=bc[ZS];do ZS=ZS+1;end;local qs=(0X2);US[0X3]=NS[A8[6]];ZS=ZS+0X01;ZS=ZS+0x1;do A8=bc[ZS];end;ZS=ZS+0X1;(US)[0X4]=A8[0x00006];do ZS=ZS+1;end;local Ys=(0x003);if Ys~=0 then nS=qs+Ys-1;end;local ks=(0X3);local Rs,Ss=nil,nil;do if Ys~=1 then do Rs,Ss=q3(US[qs](E(US,qs+1,nS)));end;else Rs,Ss=q3(US[qs]());end;end;if ks~=0X1 then if ks==0X0 then Rs=Rs+qs-0X1;nS=Rs;else Rs=qs+ks-0X2;nS=Rs+1;end;local Ja=(0);for rQ=qs,Rs do Ja=Ja+1;(US)[rQ]=Ss[Ja];end;else nS=qs-0X1;end;ZS=ZS+1;do ZS=ZS+0x00001;end;do A8=bc[ZS];end;ZS=ZS+1;if not US[2]then do ZS=A8[0X05];end;end;end;else if US[A8[5]]==A8[0X1]then else do ZS=A8[2];end;end;end;else if d8>=16 then do if d8~=17 then US[2]=NS[A8[0X0006]];ZS=ZS+1;ZS=ZS+1;do A8=bc[ZS];end;ZS=ZS+0x1;do(US)[0X2]=US[2][A8[0X1]];end;do A8=bc[ZS];end;ZS=ZS+0X1;if not(not(US[2]<A8[1]))then else ZS=A8[0X2];end;else for Ke=A8[0x2],A8[5]do(US)[Ke]=nil;end;end;end;else do ZS=A8[0x5];end;end;end;end;else if d8<5 then if not(d8>=0X002)then if d8==1 then do repeat local hB,IB=Lc,(US);do if#hB>0X0 then local op=({});for EN,xN in M,hB do do for cg,xg in M,xN do if not(xg[1]==IB and xg[2]>=0X00000)then else local cq=xg[2];do if not(not op[cq])then else op[cq]={IB[cq]};end;end;(xg)[1]=op[cq];xg[2]=0X1;end;end;end;end;end;end;until true;end;return;else(US)[2]=NS[A8[6]];A8=bc[ZS];do ZS=ZS+0X1;end;US[2]=US[0x2][A8[0X00001]];do ZS=ZS+0X1;end;do ZS=ZS+0X1;end;do A8=bc[ZS];end;ZS=ZS+0X1;if not(not(US[0x2]<A8[1]))then else ZS=A8[2];end;end;else do if not(d8<0x3)then do if d8~=0X4 then do US[A8[0x00002]]=A8[0x6];end;else US[0X2]=NS[A8[6]];do A8=bc[ZS];end;do ZS=ZS+1;end;(US)[0x0002]=US[0X2][A8[1]];ZS=ZS+0X0001;do ZS=ZS+1;end;A8=bc[ZS];do ZS=ZS+0X1;end;if not(US[0X2]<A8[0X01])then ZS=A8[0X2];end;end;end;else(US)[0X2]=NS[A8[6]];do A8=bc[ZS];end;ZS=ZS+0X1;do US[2]=US[0X2][A8[0X1]];end;do A8=bc[ZS];end;ZS=ZS+1;if not US[2]then ZS=A8[5];end;end;end;end;else if not(d8>=7)then if d8~=0X6 then if US[A8[5]]~=US[A8[0X004]]then ZS=A8[0X2];end;else US[2]=NS[A8[0x6]];A8=bc[ZS];ZS=ZS+1;US[0X2]=US[2][A8[0X1]];do ZS=ZS+1;end;ZS=ZS+0X1;do A8=bc[ZS];end;ZS=ZS+1;if not(US[2]<A8[1])then ZS=A8[2];end;end;else if d8>=0X8 then if d8~=0X9 then US[2]=NS[A8[6]];A8=bc[ZS];ZS=ZS+0X1;(US)[0x2]=US[0X0002][A8[1]];ZS=ZS+0x1;ZS=ZS+0X001;A8=bc[ZS];do ZS=ZS+1;end;if not US[0x2]then ZS=A8[0x00005];end;else(US)[4]=NS[A8[6]];local ax=(4);A8=bc[ZS];local Ix=nil;do ZS=ZS+1;end;do US[5]=A8[0X6];end;ZS=ZS+0X0001;US[ax](US[ax+1]);nS=ax-0X01;A8=bc[ZS];ZS=ZS+1;(US)[0X004]=NS[A8[0X006]];ZS=ZS+1;do ZS=ZS+0X01;end;A8=bc[ZS];ZS=ZS+1;local Bx=Uc[A8[5]];local bx=Bx[0X5];local Hx=(#bx);do if Hx>0 then do Ix={};end;for at=1,Hx do local Ut=(bx[at]);do if Ut[0X1]~=0X0 then(Ix)[at-0x1]=jc[Ut[2]];else do Ix[at-0x00001]={US,Ut[0X2]};end;end;end;end;(S)(Lc,Ix);end;end;do US[5]=e3(Bx,Ix,NS);end;ZS=ZS+0x1;ax=0X004;US[ax](US[ax+0x00001]);nS=ax-1;ZS=ZS+1;ZS=ZS+1;A8=bc[ZS];ZS=ZS+1;ZS=A8[0x5];end;else do US[4]=NS[A8[0X6]];end;A8=bc[ZS];ZS=ZS+0X01;(US)[0x5]=A8[6];ZS=ZS+0X1;local B1=(0X04);local K1=(nil);US[B1](US[B1+0x1]);nS=B1-0X01;do ZS=ZS+1;end;do ZS=ZS+1;end;A8=bc[ZS];ZS=ZS+1;(US)[0X00004]=NS[A8[0X6]];do ZS=ZS+1;end;ZS=ZS+1;do A8=bc[ZS];end;ZS=ZS+0X1;local q1=(Uc[A8[5]]);local m1=q1[0X5];local J1=(#m1);if not(J1>0X00)then else do K1={};end;do for fu=1,J1 do local Wu=(m1[fu]);do if Wu[1]==0X0 then(K1)[fu-1]={US,Wu[2]};else(K1)[fu-0X1]=jc[Wu[2]];end;end;end;end;S(Lc,K1);end;do(US)[5]=e3(q1,K1,NS);end;ZS=ZS+0X1;B1=0X4;US[B1](US[B1+1]);nS=B1-0X1;ZS=ZS+1;ZS=ZS+1;A8=bc[ZS];do ZS=ZS+0x1;end;ZS=A8[0X5];end;end;end;end;end;end;end;end);if FS then if bS then do if vS==0X00001 then do return US[aS]();end;else return US[aS](E(US,aS+1,nS));end;end;elseif aS then return E(US,aS,vS);end;else do if V(bS)=="\115\116\114\105n\103"then do if not(r(bS,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;if not(r(bS,"^.-:%d+: "))then q(bS,0x0);else q("\076\117\114a\112h\032\083\099r\105\112\116\058"..(Qc[ZS-0X1]or"(internal)")..": "..u(bS),0);end;else q(bS,0x0);end;end;end;end;end;end;else do if Sc==0X00047 then do ic=function(...)local kQ,UQ=1,{};local FQ=(k and k()or _ENV);local bQ,CQ=q3(...);local QQ={[2]=Vc,[1]=UQ};bQ=bQ-1;local lQ=((FQ==H and fc or FQ));do for kj=0,bQ do if not(ac>kj)then break;else(UQ)[kj]=CQ[kj+1];end;end;end;local eQ=0;if not nc then CQ=nil;elseif Ac then UQ[ac]={n=bQ>=ac and bQ-ac+0X1 or 0X0,E(CQ,ac+0X0001,bQ+0X1)};end;if lQ==FQ then else if s then(s)(ic,lQ);else do _ENV=lQ;end;end;end;local DQ,OQ,TQ,XQ=c(function()while true do local Rj=(bc[kQ]);local Fj=Rj[0x3];do kQ=kQ+1;end;if Fj<0X0009 then if not(Fj>=0X0004)then if not(Fj<0X2)then if Fj==0X3 then local kd=(Uc[Rj[0X5]]);local Dd=(kd[5]);local Zd=#Dd;local Qd=(nil);if not(Zd>0)then else Qd={};do for PT=0x00001,Zd do local fT=(Dd[PT]);if fT[0X001]==0X0 then Qd[PT-1]={UQ,fT[2]};else(Qd)[PT-0x01]=jc[fT[2]];end;end;end;(S)(Lc,Qd);end;UQ[Rj[2]]=e3(kd,Qd,lQ);else if UQ[Rj[5]]==UQ[Rj[4]]then kQ=Rj[2];end;end;else if Fj==0x001 then do(UQ)[0]=lQ[Rj[0x6]];end;kQ=kQ+0X1;kQ=kQ+1;Rj=bc[kQ];local ll=0X0;do kQ=kQ+1;end;local kl=(UQ[0]);do UQ[ll+1]=kl;end;local gl=0X0003;UQ[ll]=kl[Rj[0x0001]];do Rj=bc[kQ];end;do kQ=kQ+0X1;end;(UQ)[2]=Rj[0X00006];kQ=kQ+1;ll=0X00;eQ=ll+gl-0X1;repeat local SV,tV=Lc,UQ;do if not(#SV>0X0)then else local RH={};for nu,su in M,SV do for y6,v6 in M,su do if not(v6[1]==tV and v6[0X002]>=0)then else local px=(v6[2]);if not RH[px]then(RH)[px]={tV[px]};end;(v6)[0X1]=RH[px];(v6)[2]=1;end;end;end;end;end;until true;return true,ll,gl;else kQ=Rj[0x5];end;end;else if Fj<6 then do if Fj==0x00005 then repeat local cy,oy=Lc,(UQ);do if not(#cy>0x0000)then else local GJ=({});for pN,aN in M,cy do for xf,jf in M,aN do do if not(jf[1]==oy and jf[2]>=0)then else local LA=(jf[0X2]);if not(not GJ[LA])then else(GJ)[LA]={oy[LA]};end;jf[1]=GJ[LA];(jf)[2]=1;end;end;end;end;end;end;until true;return false,Rj[0X2],eQ;else UQ[Rj[0x2]]=lQ[Rj[6]];end;end;else if Fj>=7 then if Fj==8 then(UQ)[Rj[2]]=Rj[0X6];else local oQ=UQ[Rj[5]]/UQ[Rj[4]];UQ[Rj[2]]=oQ-oQ%0x01;end;else do UQ[Rj[2]]=Q(UQ[Rj[0X5]]);end;end;end;end;else do if Fj>=14 then if not(Fj>=16)then do if Fj~=0xf then else local GU=(Rj[0X2]);local DU=(UQ[GU]);local lU=UQ[GU+0X00002];local pU=UQ[GU+1];do(UQ)[GU]=P(function()do for sV=DU,pU,lU do(C)(true,sV);end;end;end);end;kQ=Rj[0X5];end;end;else if not(Fj<17)then if Fj~=18 then UQ[Rj[0X2]]=UQ[Rj[5]]>UQ[Rj[0x4]];else UQ[Rj[0X2]]=UQ[Rj[0X5]]+UQ[Rj[4]];end;else repeat local Au,eu=Lc,(UQ);if#Au>0 then local uG={};for eY,xY in M,Au do for H_,c_ in M,xY do if not(c_[0X1]==eu and c_[0X2]>=0x0000)then else local M8=c_[0x002];if not uG[M8]then(uG)[M8]={eu[M8]};end;c_[0X1]=uG[M8];c_[2]=1;end;end;end;end;until true;return;end;end;else if not(Fj>=0xB)then if Fj==10 then(UQ)[Rj[2]]={E({},0X001,Rj[5])};else do lQ[Rj[6]]=UQ[Rj[0X2]];end;end;else if Fj>=0XC then if Fj==0XD then UQ[Rj[2]][UQ[Rj[5]]]=UQ[Rj[4]];else if not(UQ[Rj[0X00005]]<UQ[Rj[4]])then do kQ=Rj[0x2];end;end;end;else do UQ[Rj[0X2]]=UQ[Rj[0x5]]<=UQ[Rj[4]];end;end;end;end;end;end;end;end);if DQ then if OQ then if XQ~=0X1 then do return UQ[TQ](E(UQ,TQ+1,eQ));end;else return UQ[TQ]();end;elseif TQ then return E(UQ,TQ,XQ);end;else if V(OQ)=='str\105n\103'then if not(r(OQ,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if r(OQ,'\094\046-:\037\100+:\032')then(q)("Luraph Script:"..(Qc[kQ-0x1]or"\040int\101\114\110a\108\041")..':\032'..u(OQ),0);else q(OQ,0X0);end;else q(OQ,0);end;end;end;end;else do ic=function(...)local be=(1);local Ae={};local pe=(k and k()or _ENV);local Je,ye=(pe==H and fc or pe),(0X0);local oe,Ye=q3(...);local Me={[1]=Ae,[2]=Vc};oe=oe-0X1;for Hx=0,oe do do if not(ac>Hx)then do break;end;else(Ae)[Hx]=Ye[Hx+1];end;end;end;if not nc then do Ye=nil;end;elseif Ac then Ae[ac]={n=oe>=ac and oe-ac+0X1 or 0,E(Ye,ac+0X1,oe+0X00001)};end;if Je==pe then else do if not(s)then _ENV=Je;else(s)(ic,Je);end;end;end;local ne,Le,Te,je=c(function()while true do local y2=(bc[be]);local N2=(y2[0X3]);be=be+1;if not(N2<11)then if N2>=17 then if N2<20 then if not(N2<0X12)then if N2~=19 then(Ae)[y2[0X2]]=T(Ae[y2[5]],Ae[y2[4]]);else do be=y2[0X5];end;end;else local D4,F4=Uc[y2[5]],(nil);local j4=(D4[0x5]);local H4=(#j4);if not(H4>0)then else F4={};for dY=1,H4 do local zY=j4[dY];if zY[1]==0X0 then do F4[dY-1]={Ae,zY[0X0002]};end;else(F4)[dY-0X001]=jc[zY[2]];end;end;(S)(Lc,F4);end;Ae[y2[0X00002]]=e3(D4,F4,Je);end;else if N2<21 then Ae[0X5]=Je[y2[6]];be=be+0X1;do be=be+1;end;do y2=bc[be];end;be=be+1;(Ae)[5]=Ae[0X0005][y2[0x1]];y2=bc[be];be=be+0x001;if not(Ae[0X005])then else do be=y2[0X5];end;end;else if N2==0X16 then do Ae[y2[2]]=Ae[y2[5]]/Ae[y2[0X4]];end;else Ae[6]=Je[y2[6]];do y2=bc[be];end;be=be+0x00001;local q7=Uc[y2[0X5]];local V7=q7[0X05];local i7,e7=#V7,(nil);if not(i7>0X00000)then else e7={};do for Ax=0X01,i7 do local wx=V7[Ax];do if wx[0x1]==0X0 then do e7[Ax-0X001]={Ae,wx[0X2]};end;else e7[Ax-0x1]=jc[wx[2]];end;end;end;end;(S)(Lc,e7);end;Ae[7]=e3(q7,e7,Je);local J7=(0X06);y2=bc[be];do be=be+0X1;end;(Ae[0X0006])[y2[0X6]]=Ae[7];y2=bc[be];do be=be+0X1;end;local h7=Ae[0];do(Ae)[J7+0X1]=h7;end;do(Ae)[J7]=h7[y2[1]];end;do y2=bc[be];end;do be=be+1;end;do Ae[0x8]=y2[0X06];end;y2=bc[be];be=be+1;(Ae)[9]=y2[6];do y2=bc[be];end;be=be+0x00001;(Ae)[0Xa]=y2[6];be=be+0X1;do J7=0X6;end;ye=J7+0X0005-1;Ae[J7](E(Ae,J7+1,ye));do ye=J7-1;end;do be=be+0X01;end;be=be+1;be=be+1;(Ae)[0X6]=Ae[4];y2=bc[be];be=be+1;(Ae)[0X007]=Je[y2[0X6]];do be=be+0X1;end;J7=6;Ae[J7](Ae[J7+0X1]);ye=J7-1;do y2=bc[be];end;do be=be+1;end;do(Ae)[6]=Je[y2[6]];end;do be=be+1;end;do be=be+0x001;end;y2=bc[be];be=be+1;Ae[7]=Ae[0][y2[1]];do be=be+0x1;end;be=be+1;y2=bc[be];be=be+1;Ae[7]=Ae[7]*y2[0X1];be=be+1;J7=6;(Ae[J7])(Ae[J7+1]);ye=J7-1;be=be+0x1;do be=be+0X001;end;y2=bc[be];do be=be+0X01;end;J7=6;h7=Ae[0X00];do(Ae)[J7+0X01]=h7;end;Ae[J7]=h7[y2[1]];do be=be+1;end;J7=6;Ae[J7](Ae[J7+0x1]);ye=J7-0x00001;y2=bc[be];be=be+1;be=y2[0X5];end;end;end;else if not(N2>=14)then if N2<12 then do if Ae[y2[0X0005]]~=Ae[y2[4]]then do be=y2[0x02];end;end;end;else do if N2==13 then do Ae[5]=Je[y2[0X6]];end;y2=bc[be];be=be+0X01;do(Ae)[0x5]=Ae[0x5][y2[1]];end;be=be+0X1;be=be+1;y2=bc[be];be=be+0X001;be=y2[5];else Ae[0X6]=Je[y2[0X006]];be=be+1;(Ae)[6]=#Ae[6];y2=bc[be];be=be+1;do if not(not(y2[0X6]<Ae[6]))then else be=y2[0X00002];end;end;end;end;end;else if N2>=0X0f then if N2==0X10 then else repeat local Nn,Bn,sn=Lc,Ae,y2[0X02];do if#Nn>0 then local Zl=({});for GM,iM in M,Nn do do for m7,I7 in M,iM do if not(I7[1]==Bn and I7[0X2]>=sn)then else local OA=I7[0X0002];if not(not Zl[OA])then else(Zl)[OA]={Bn[OA]};end;do(I7)[0X1]=Zl[OA];end;do(I7)[2]=1;end;end;end;end;end;end;end;until true;end;else(Ae)[y2[0X002]]=#Ae[y2[0X00005]];end;end;end;else if N2<0X5 then if not(N2>=2)then if N2~=0X1 then(Ae)[5]=Je[y2[0X6]];y2=bc[be];do be=be+0X1;end;(Ae)[0X6]=Je[y2[6]];be=be+0X1;do be=be+0X00001;end;y2=bc[be];be=be+0X001;Ae[6]=Ae[6][y2[1]];be=be+1;be=be+0X001;y2=bc[be];be=be+1;(Ae[5])[y2[6]]=Ae[6];y2=bc[be];be=be+1;(Ae)[5]=Je[y2[6]];be=be+1;do be=be+0X1;end;y2=bc[be];be=be+0X1;(Ae)[5]=Ae[5][y2[0X1]];local D_=(5);be=be+0x1;Ae[0X6]=Ae[0X0];be=be+0x0001;(Ae)[0X0007]=Ae[0X1];be=be+1;do(Ae)[8]=Ae[2];end;be=be+1;(Ae)[0X09]=Ae[3];be=be+0X1;Ae[0x00a]=Ae[4];be=be+0X1;local p_=(0X0006);ye=D_+p_-0X1;repeat local LH,rH=Lc,(Ae);if#LH>0x0 then local nZ={};for vf,Kf in M,LH do do for Bg,Lg in M,Kf do if Lg[1]==rH and Lg[0X02]>=0X00 then local kO=(Lg[2]);if not(not nZ[kO])then else nZ[kO]={rH[kO]};end;do Lg[0X1]=nZ[kO];end;Lg[2]=0x00001;end;end;end;end;end;until true;return true,D_,p_;else(Ae)[y2[2]]={E({},0x001,y2[5])};end;else if N2>=0X3 then if N2~=4 then Ae[5]=Je[y2[0x6]];y2=bc[be];be=be+0X0001;do(Ae)[5]=Ae[0X5][y2[0X00001]];end;do be=be+1;end;do be=be+1;end;do y2=bc[be];end;be=be+1;do if not Ae[5]then do be=y2[5];end;end;end;else Ae[y2[2]]=Je[y2[0X06]];end;else(Ae)[0X6]=Je[y2[6]];be=be+1;be=be+1;y2=bc[be];be=be+0X1;if not(not Ae[6])then else be=y2[0X00005];end;end;end;else if N2>=0X08 then do if not(N2<0X9)then if N2==0X000a then for k0=y2[0x2],y2[5]do(Ae)[k0]=nil;end;else do repeat local V0,I0=Lc,(Ae);if#V0>0X00 then local xc={};for iO,VO in M,V0 do for sI,zI in M,VO do if not(zI[1]==I0 and zI[2]>=0x00000)then else local Tb=zI[0x2];if not(not xc[Tb])then else do(xc)[Tb]={I0[Tb]};end;end;zI[1]=xc[Tb];do zI[0X00002]=1;end;end;end;end;end;until true;end;return false,y2[0x0002],ye;end;else do(Ae)[y2[2]]=y2[0X00006];end;end;end;else do if not(N2>=0X006)then if Ae[y2[2]]then be=y2[0X5];end;else if N2~=0X7 then(Ae)[y2[2]]=not Ae[y2[5]];else repeat local tR,VR=Lc,Ae;if not(#tR>0X0)then else local xg={};for xx,Ox in M,tR do for MU,ZU in M,Ox do do if ZU[1]==VR and ZU[2]>=0X0 then local Tk=ZU[2];if not xg[Tk]then(xg)[Tk]={VR[Tk]};end;do(ZU)[0x1]=xg[Tk];end;(ZU)[0X002]=1;end;end;end;end;end;until true;return;end;end;end;end;end;end;end;end);if not(ne)then if V(Le)~="string"then(q)(Le,0);else if r(Le,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if r(Le,"^.-:%d+: ")then q("Luraph Script:"..(Qc[be-1]or"(\105\110t\101\114\110a\108\041")..':\032'..u(Le),0X00);else(q)(Le,0X0);end;end;else if Le then do if je==0x1 then return Ae[Te]();else do return Ae[Te](E(Ae,Te+0X1,ye));end;end;end;elseif not(Te)then else do return E(Ae,Te,je);end;end;end;end;end;end;end;end;end;end;end;else if not(Sc<0x56)then if not(Sc<0x5A)then if Sc>=0x0005c then if Sc==93 then ic=function(...)local ln,In=0x00,({});local nn=(k and k()or _ENV);local fn={[1]=In,[2]=Vc};local mn=(nn==H and fc or nn);local hn,Fn=q3(...);hn=hn-0X1;for BH=0,hn do do if ac>BH then do In[BH]=Fn[BH+1];end;else do break;end;end;end;end;local Gn=0X1;if not nc then Fn=nil;elseif Ac then(In)[ac]={n=hn>=ac and hn-ac+1 or 0X000,E(Fn,ac+0X1,hn+0X1)};end;do if mn==nn then else if not(s)then _ENV=mn;else s(ic,mn);end;end;end;local An,sn,pn,xn=c(function()do while true do local ut=(bc[Gn]);local qt=(ut[3]);do Gn=Gn+0X1;end;do if qt<0x7 then if not(qt>=0X3)then if qt<1 then(In)[ut[2]]=Q(In[ut[5]]);else if qt~=0X002 then In[ut[0X2]]=o(In[ut[5]],In[ut[4]]);else(In)[ut[2]]=In[ut[0X5]]+In[ut[0x0004]];end;end;else if qt<0X0005 then do if qt~=0X0004 then In[0]=mn[ut[6]];Gn=Gn+0X00001;local ST=0;Gn=Gn+1;do ut=bc[Gn];end;Gn=Gn+0x00001;In[0X00000]=In[0][ut[1]];ut=bc[Gn];Gn=Gn+1;(In)[0x0]=In[0][ut[0X01]];Gn=Gn+0X01;Gn=Gn+0X1;ut=bc[Gn];Gn=Gn+0X1;local UT=(In[0x0]);In[ST+0X1]=UT;In[ST]=UT[ut[0X1]];Gn=Gn+0X0001;ST=0X0;(In[ST])(In[ST+1]);do ln=ST-0X1;end;Gn=Gn+0X00001;repeat local cT,MT=Lc,In;if#cT>0X0 then local P6={};for Za,ra in M,cT do for BJ,rJ in M,ra do if rJ[0X00001]==MT and rJ[0X002]>=0X0 then local zv=(rJ[2]);do if not(not P6[zv])then else(P6)[zv]={MT[zv]};end;end;(rJ)[0X1]=P6[zv];(rJ)[0x002]=0X1;end;end;end;end;until true;return;else Gn=ut[0X5];end;end;else if qt~=0x6 then local j8=(ut[0X5]);local a8=ut[2];if j8==0 then else ln=a8+j8-1;end;local F8,i8,Q8=ut[4],nil,nil;if j8==0x1 then i8,Q8=q3(In[a8]());else i8,Q8=q3(In[a8](E(In,a8+0X1,ln)));end;do if F8~=1 then if F8==0X0 then i8=i8+a8-1;ln=i8;else i8=a8+F8-0X2;do ln=i8+0X1;end;end;local k2=(0);for QV=a8,i8 do k2=k2+0X001;do(In)[QV]=Q8[k2];end;end;else ln=a8-1;end;end;else(In)[ut[0X2]]={E({},1,ut[0X5])};end;end;end;else if not(qt<11)then do if not(qt<0XD)then if qt==0xe then(In)[ut[2]]=mn[ut[6]];else do(In)[ut[2]]=ut[6];end;end;else do if qt~=0X00C then In[ut[0X2]]=In[ut[5]]>=In[ut[0X00004]];else local zZ=ut[2];local tZ,CZ=In[zZ]();if tZ then do for jy=0X00001,ut[0X04]do(In)[zZ+jy]=CZ[jy];end;end;Gn=ut[5];end;end;end;end;end;else if qt>=9 then if qt~=0Xa then do In[ut[0X2]]=In[ut[5]]==In[ut[4]];end;else local HP=Uc[ut[0x5]];local JP,gP=HP[5],(nil);local pP=#JP;if not(pP>0)then else gP={};for hY=0X1,pP do local eY=(JP[hY]);if eY[1]~=0 then gP[hY-0x1]=jc[eY[0X02]];else gP[hY-0X1]={In,eY[0X2]};end;end;S(Lc,gP);end;(In)[ut[0X2]]=e3(HP,gP,mn);end;else if qt==0x08 then In[ut[2]]=ut[0X06];else end;end;end;end;end;end;end;end);if An then if sn then if xn~=0X00001 then do return In[pn](E(In,pn+0x1,ln));end;else return In[pn]();end;elseif not(pn)then else return E(In,pn,xn);end;else if V(sn)=='st\114\105\110g'then if not(r(sn,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(r(sn,"^.\045:\037d\043\058\032"))then(q)(sn,0X0);else(q)("Luraph Script:"..(Qc[Gn-0X1]or"(internal)").."\058\032"..u(sn),0);end;else(q)(sn,0);end;end;end;else ic=function(...)local R9={};local H9=0X1;local h9=((k and k()or _ENV));local d9=({[1]=R9,[2]=Vc});local W9=0X0;local y9,i9=q3(...);local L9=(h9==H and fc or h9);do y9=y9-0X1;end;for tT=0x0,y9 do if not(ac>tT)then break;else do R9[tT]=i9[tT+0X1];end;end;end;if not nc then do i9=nil;end;elseif Ac then R9[ac]={n=y9>=ac and y9-ac+0x1 or 0X0,E(i9,ac+0X1,y9+0x1)};end;do if L9==h9 then else if s then(s)(ic,L9);else do _ENV=L9;end;end;end;end;local J9,S9,x9,C9=c(function()do while true do local NL=(bc[H9]);local WL=NL[3];H9=H9+1;if not(WL>=0X9)then do if not(WL>=0x4)then if not(WL>=0x2)then if WL~=1 then do(R9)[NL[2]]=R9[NL[5]]-R9[NL[4]];end;else do(R9)[0X00000]=L9[NL[0X006]];end;do H9=H9+1;end;H9=H9+1;H9=H9+1;do W9=0X0;end;R9[W9]=R9[W9]();H9=H9+0x1;H9=H9+0x1;do NL=bc[H9];end;local Up=(0X0);H9=H9+1;local ip=R9[0X00];(R9)[Up+1]=ip;(R9)[Up]=ip[NL[0X1]];NL=bc[H9];H9=H9+1;(R9)[2]=NL[0x06];do H9=H9+0x1;end;Up=0X0;R9[Up]=R9[Up](R9[Up+1],R9[Up+0X2]);do W9=Up;end;NL=bc[H9];H9=H9+0X1;do H9=NL[0X0005];end;end;else if WL==0X003 then do repeat local Jd,gd=Lc,R9;if not(#Jd>0x000)then else local ao=({});for oU,aU in M,Jd do for Vw,cw in M,aU do if cw[0X1]==gd and cw[2]>=0X000 then local ZF=(cw[2]);if not(not ao[ZF])then else(ao)[ZF]={gd[ZF]};end;cw[0x1]=ao[ZF];(cw)[2]=0X01;end;end;end;end;until true;end;local yD=(NL[0x2]);do return false,yD,yD;end;else(R9)[NL[0X2]]={E({},0X1,NL[0X00005])};end;end;else if not(WL>=0X0006)then if WL~=0X5 then(R9)[NL[2]]=R9[NL[0x0005]]*R9[NL[0X4]];else H9=NL[5];end;else if WL>=0X7 then if WL~=8 then local O6=(NL[0X00002]);local n6,J6=R9[O6]();if n6 then do H9=NL[0X5];end;R9[O6+0X03]=J6;end;else end;else R9[NL[2]]=L9[NL[6]];end;end;end;end;else if not(WL>=13)then if WL>=0X0000b then do if WL==0X00c then for Tt=NL[0X2],NL[5]do(R9)[Tt]=nil;end;else R9[0]=L9[NL[6]];H9=H9+1;do H9=H9+0X1;end;H9=H9+0x1;W9=0;(R9)[W9]=R9[W9]();NL=bc[H9];H9=H9+0X1;do if not(not R9[0])then else do H9=NL[0x5];end;end;end;end;end;else do if WL~=0X00A then repeat local zw,sw=Lc,R9;do if#zw>0X0 then local Ze={};for K9,l9 in M,zw do for Zm,Ym in M,l9 do if Ym[1]==sw and Ym[0x2]>=0 then local Lu=Ym[2];do if not(not Ze[Lu])then else do(Ze)[Lu]={sw[Lu]};end;end;end;(Ym)[1]=Ze[Lu];Ym[2]=0X1;end;end;end;end;end;until true;return;else do R9[NL[2]]=NL[0X6];end;end;end;end;else if not(WL<0x0f)then do if WL<16 then R9[NL[0x2]]=NL[0X006];else if WL~=17 then(R9)[NL[2]]=R9[NL[5]]~=R9[NL[0x4]];else local mL=NL[0X0002];local qL=(P(function(...)C();for Zr,jr,xr,hr,Cr,Vr,rr,Dr,Br,er in...do C(true,{Zr,jr,xr,hr,Cr,Vr,rr,Dr,Br,er});end;end));qL(R9[mL],R9[mL+0x0001],R9[mL+2]);W9=mL;do R9[mL]=qL;end;H9=NL[5];end;end;end;else if WL==0XE then local Wi,Oi=Uc[NL[0X5]],nil;local di=(Wi[5]);local Ii=(#di);do if not(Ii>0)then else Oi={};for iV=1,Ii do local hV=di[iV];if hV[0x1]==0 then do Oi[iV-0x01]={R9,hV[0X2]};end;else(Oi)[iV-1]=jc[hV[0X0002]];end;end;S(Lc,Oi);end;end;do(R9)[NL[2]]=e3(Wi,Oi,L9);end;else local eJ=(NL[2]);local QJ=(R9[eJ]);local wJ=(R9[eJ+2]);local LJ=R9[eJ+1];(R9)[eJ]=P(function()do for jU=QJ,LJ,wJ do C(true,jU);end;end;end);H9=NL[5];end;end;end;end;end;end;end);if J9 then if S9 then do if C9~=0X1 then return R9[x9](E(R9,x9+1,W9));else do return R9[x9]();end;end;end;elseif x9 then return E(R9,x9,C9);end;else do if V(S9)~="\115tr\105\110g"then q(S9,0);else if not(r(S9,"atte\109pt\032\116\111\032\121\105\101l\100\032\097\099\114\111s\115\032\109eta\109e\116\104\111d/C%\045call\032\098\111\117ndar\121"))then else return coroutine.yield();end;if r(S9,"^.\045\058%d+: ")then q("Luraph Script:"..(Qc[H9-0X1]or"(internal)")..":\032"..u(S9),0X0);else q(S9,0);end;end;end;end;end;end;else if Sc~=91 then ic=function(...)local JE,LE=1,({});local oE=0X0;local SE={[1]=LE,[2]=Vc};local lE=((k and k()or _ENV));local zE,xE=q3(...);zE=zE-0X1;for zB=0X00000,zE do if ac>zB then(LE)[zB]=xE[zB+1];else break;end;end;local BE=(lE==H and fc or lE);if not nc then do xE=nil;end;elseif Ac then(LE)[ac]={n=zE>=ac and zE-ac+0x1 or 0,E(xE,ac+1,zE+1)};end;do if BE~=lE then if not(s)then _ENV=BE;else s(ic,BE);end;end;end;local pE,sE,KE,PE=c(function()while true do local R1=(bc[JE]);local W1=(R1[3]);JE=JE+0X1;if not(W1>=0x15)then if W1>=0X0000A then if not(W1>=15)then if W1<0xc then if W1~=0X0000B then(BE)[R1[0x0006]]=LE[R1[0X00002]];else do LE[0x0]=BE[R1[0X00006]];end;JE=JE+0X001;do JE=JE+1;end;R1=bc[JE];JE=JE+1;(LE)[0]=LE[0X00][R1[0X1]];R1=bc[JE];JE=JE+1;if not(not LE[0X0000])then else do JE=R1[5];end;end;end;else do if W1<0XD then LE[0]=BE[R1[6]];JE=JE+1;do JE=JE+1;end;R1=bc[JE];JE=JE+0x1;LE[0]=LE[0][R1[1]];JE=JE+1;JE=JE+1;R1=bc[JE];JE=JE+1;LE[0]=LE[0][R1[1]];do JE=JE+1;end;do JE=JE+1;end;R1=bc[JE];do JE=JE+0x00001;end;LE[0X001]=BE[R1[6]];R1=bc[JE];do JE=JE+0X1;end;do(LE)[1]=LE[1][R1[0X1]];end;JE=JE+1;JE=JE+0X1;R1=bc[JE];JE=JE+1;if not(LE[0x001])then else JE=R1[0X5];end;else if W1==14 then(LE)[R1[0X2]]=T(LE[R1[5]],LE[R1[0X4]]);else do(LE)[0x00]=BE[R1[6]];end;do JE=JE+1;end;JE=JE+0X1;R1=bc[JE];JE=JE+0X1;local mO=0;(LE)[0X1]=BE[R1[0X6]];R1=bc[JE];JE=JE+0X1;LE[0X1]=LE[0x1][R1[1]];JE=JE+1;JE=JE+1;JE=JE+0X01;(LE[mO])(LE[mO+0x1]);oE=mO-0X1;R1=bc[JE];JE=JE+0X0001;JE=R1[0X5];end;end;end;end;else do if W1<18 then if W1>=0X010 then if W1==0X11 then LE[R1[2]]=v(LE[R1[0X5]],LE[R1[0X4]]);else LE[R1[0x2]]=R1[0X00006];end;else(LE)[0]=BE[R1[6]];JE=JE+1;do JE=JE+0X1;end;do R1=bc[JE];end;JE=JE+0x1;LE[0]=LE[0][R1[0X00001]];do R1=bc[JE];end;JE=JE+0X1;if LE[0X0]~=R1[1]then JE=R1[0X2];end;end;else if not(W1<0x13)then do if W1==0X14 then(LE)[R1[0x002]]=R1[6];else(LE)[0]=BE[R1[0X06]];JE=JE+0X1;JE=JE+0X1;R1=bc[JE];do JE=JE+0X0001;end;LE[0X1]=BE[R1[0x6]];do R1=bc[JE];end;JE=JE+0X001;LE[1]=LE[0x1][R1[0X1]];R1=bc[JE];JE=JE+1;if not(LE[1])then else JE=R1[5];end;end;end;else do if not(LE[R1[2]])then else JE=R1[0X5];end;end;end;end;end;end;else do if not(W1<5)then if W1>=0X7 then if not(W1>=0x00008)then LE[0]=BE[R1[0x6]];JE=JE+0X1;do oE=0;end;LE[oE]();oE=oE-0x1;JE=JE+1;do JE=JE+1;end;R1=bc[JE];JE=JE+1;JE=R1[0X5];else do if W1~=0X9 then LE[0X00000]=BE[R1[0X6]];do JE=JE+0x1;end;oE=0X0;(LE[oE])();oE=oE-0x1;do JE=JE+1;end;JE=JE+1;R1=bc[JE];JE=JE+1;(LE)[0]=BE[R1[0X6]];JE=JE+1;JE=JE+1;R1=bc[JE];JE=JE+0X1;(LE)[0X0000]=LE[0][R1[0X1]];do JE=JE+0x1;end;JE=JE+1;R1=bc[JE];JE=JE+0X1;(LE)[0x0000]=LE[0X00000][R1[0X01]];R1=bc[JE];JE=JE+1;(LE)[0X1]=BE[R1[6]];JE=JE+0x0001;oE=0X001;do(LE)[oE]=LE[oE]();end;JE=JE+0X001;JE=JE+1;do R1=bc[JE];end;JE=JE+1;do if LE[0]~=LE[0x0001]then JE=R1[2];end;end;else do(LE)[3]=BE[R1[6]];end;JE=JE+0X01;JE=JE+1;R1=bc[JE];JE=JE+0X1;do JE=R1[0X5];end;end;end;end;else if W1~=0x6 then LE[0X0]=BE[R1[6]];JE=JE+0x1;JE=JE+1;R1=bc[JE];JE=JE+1;(LE)[0X001]=BE[R1[6]];R1=bc[JE];JE=JE+0X00001;LE[0X001]=LE[1][R1[1]];JE=JE+0X1;JE=JE+1;JE=JE+0x1;local PZ=0;(LE[PZ])(LE[PZ+1]);oE=PZ-0x1;JE=JE+0X1;JE=JE+1;do R1=bc[JE];end;JE=JE+1;JE=R1[0X5];else repeat local NB,gB=Lc,LE;if#NB>0 then local W9={};for Lg,rg in M,NB do do for xL,GL in M,rg do if GL[0x01]==gB and GL[0X2]>=0X00000 then local Pi=(GL[2]);if not(not W9[Pi])then else(W9)[Pi]={gB[Pi]};end;do(GL)[1]=W9[Pi];end;GL[0X002]=1;end;end;end;end;end;until true;return;end;end;else do if not(W1<0X2)then if W1>=0x3 then do if W1~=0X4 then LE[0]=BE[R1[6]];JE=JE+1;do JE=JE+0x00001;end;R1=bc[JE];JE=JE+1;LE[1]=BE[R1[6]];do JE=JE+0X1;end;JE=JE+0x1;local VZ=(0X0);R1=bc[JE];JE=JE+0X0001;do LE[1]=LE[0x1][R1[1]];end;do JE=JE+1;end;LE[VZ](LE[VZ+1]);oE=VZ-0x1;JE=JE+0X01;do JE=JE+1;end;R1=bc[JE];JE=JE+1;JE=R1[5];else(LE)[0]=BE[R1[6]];JE=JE+1;JE=JE+0X001;do R1=bc[JE];end;JE=JE+1;LE[0x0]=LE[0][R1[0X1]];JE=JE+1;JE=JE+0X1;R1=bc[JE];do JE=JE+1;end;if not LE[0X0]then JE=R1[0X0005];end;end;end;else(LE)[0X0]=BE[R1[0X6]];R1=bc[JE];do JE=JE+0x00001;end;(LE)[0X00]=LE[0][R1[1]];R1=bc[JE];JE=JE+1;if LE[0X0000]then JE=R1[0X5];end;end;else if W1==0X00001 then LE[1]=BE[R1[6]];R1=bc[JE];do JE=JE+0X1;end;(LE)[0x1]=LE[1][R1[0X00001]];JE=JE+0x01;local vA=0X1;JE=JE+1;R1=bc[JE];JE=JE+1;local uA=(LE[0X0001]);(LE)[vA+1]=uA;do LE[vA]=uA[R1[0x001]];end;R1=bc[JE];JE=JE+0X1;do(LE)[0X03]=R1[0X6];end;JE=JE+1;vA=0X1;(LE)[vA]=LE[vA](LE[vA+0X1],LE[vA+2]);oE=vA;R1=bc[JE];JE=JE+1;do if not(not LE[0X1])then else JE=R1[5];end;end;else do LE[R1[0x2]]=LE[R1[0X0005]][LE[R1[0X4]]];end;end;end;end;end;end;end;else if W1>=0x0001f then if W1<36 then if W1>=33 then if W1<34 then do(LE)[0x0]=true;end;do R1=bc[JE];end;JE=JE+1;BE[R1[0X06]]=LE[0X000];local Pa=0;do R1=bc[JE];end;JE=JE+1;LE[0]=BE[R1[0X006]];JE=JE+0X0001;JE=JE+0x00001;R1=bc[JE];JE=JE+1;local wa=LE[0X000];LE[Pa+0X001]=wa;(LE)[Pa]=wa[R1[0x1]];do R1=bc[JE];end;JE=JE+1;(LE)[0X0002]=R1[6];JE=JE+1;do Pa=0x000;end;LE[Pa](LE[Pa+1],LE[Pa+2]);do oE=Pa-0X0001;end;JE=JE+0X1;JE=JE+0x1;R1=bc[JE];do JE=JE+0X1;end;do JE=R1[0x5];end;else if W1~=0x0023 then LE[0]=BE[R1[0X00006]];JE=JE+1;JE=JE+0X0001;R1=bc[JE];do JE=JE+1;end;do(LE)[0]=LE[0X0][R1[0x1]];end;R1=bc[JE];do JE=JE+1;end;do if LE[0]==R1[0X1]then else JE=R1[0X2];end;end;else LE[R1[2]]=LE[R1[0x05]]^LE[R1[0x4]];end;end;else do if W1==0x20 then for Lq=R1[0x2],R1[0X005]do LE[Lq]=nil;end;else(LE)[0X0]=BE[R1[0X06]];JE=JE+0X1;JE=JE+1;R1=bc[JE];JE=JE+1;LE[0X0]=LE[0X0][R1[0X001]];local aV=LE[0X0];do R1=bc[JE];end;JE=JE+0X1;local FV=0x0;(LE)[FV+0x1]=aV;(LE)[FV]=aV[R1[0x1]];R1=bc[JE];JE=JE+1;LE[0X2]=R1[6];JE=JE+0X1;do FV=0;end;(LE)[FV]=LE[FV](LE[FV+0X1],LE[FV+0X0002]);do oE=FV;end;JE=JE+1;JE=JE+1;R1=bc[JE];JE=JE+1;if not LE[0X000]then JE=R1[5];end;end;end;end;else if not(W1<0X0027)then if W1<40 then if LE[R1[0X5]]==LE[R1[4]]then else JE=R1[0X0002];end;else if W1==41 then do LE[0x2]=BE[R1[6]];end;JE=JE+0X0001;JE=JE+0X1;R1=bc[JE];JE=JE+1;LE[0X0002]=LE[2][R1[1]];R1=bc[JE];JE=JE+0X1;if not(not LE[0X0002])then else do JE=R1[0x5];end;end;else do(LE)[0]=BE[R1[0X6]];end;JE=JE+0X1;JE=JE+0x1;R1=bc[JE];JE=JE+0X01;local wu=0;LE[0]=LE[0][R1[1]];JE=JE+1;JE=JE+1;R1=bc[JE];JE=JE+1;local vu=(LE[0x0]);(LE)[wu+0X1]=vu;do LE[wu]=vu[R1[1]];end;R1=bc[JE];JE=JE+0X1;do(LE)[0x2]=R1[0X6];end;do JE=JE+0X0001;end;do wu=0X0000;end;do LE[wu]=LE[wu](LE[wu+0X001],LE[wu+2]);end;oE=wu;R1=bc[JE];do JE=JE+0x1;end;if not(not LE[0X0])then else JE=R1[0X5];end;end;end;else if W1>=37 then do if W1~=0X26 then(LE)[R1[2]]={E({},1,R1[0X00005])};else local V8=Uc[R1[0X05]];local R8=(nil);local W8=(V8[5]);local O8=#W8;do if not(O8>0x0000)then else R8={};for pR=1,O8 do local VR=W8[pR];if VR[0X1]==0X000 then(R8)[pR-0x00001]={LE,VR[0x2]};else(R8)[pR-0X01]=jc[VR[0X02]];end;end;(S)(Lc,R8);end;end;LE[R1[0X2]]=e3(V8,R8,BE);end;end;else JE=R1[0X5];end;end;end;else if W1>=26 then if not(W1<28)then if W1<29 then if not(not(LE[R1[5]]<LE[R1[0x4]]))then else JE=R1[2];end;else if W1~=30 then(LE)[0x01]=BE[R1[6]];JE=JE+0X00001;JE=JE+1;R1=bc[JE];JE=JE+0X001;LE[1]=LE[1][R1[0X1]];R1=bc[JE];JE=JE+1;(LE)[0X00001]=LE[0x1][R1[1]];JE=JE+0X001;JE=JE+0X1;R1=bc[JE];JE=JE+0X1;do if not(LE[0X00000]<=LE[1])then JE=R1[0X2];end;end;else LE[2]=BE[R1[0X6]];JE=JE+1;do JE=JE+0X001;end;R1=bc[JE];JE=JE+1;(LE)[0x2]=LE[0X2][R1[1]];R1=bc[JE];JE=JE+0X1;(LE)[0X02]=LE[0X002][R1[1]];R1=bc[JE];JE=JE+1;do LE[0x3]=BE[R1[0x6]];end;JE=JE+0X01;do JE=JE+0x1;end;do R1=bc[JE];end;JE=JE+0x0001;(LE)[0X03]=LE[0X3][R1[0x1]];R1=bc[JE];JE=JE+0X0001;do if not(LE[0x3])then else do JE=R1[0X0005];end;end;end;end;end;else if W1==0x0001b then else if not(LE[R1[0x5]]<=LE[R1[4]])then JE=R1[0X2];end;end;end;else do if not(W1<0X17)then if not(W1<24)then do if W1~=25 then LE[1]=BE[R1[0X6]];R1=bc[JE];JE=JE+0X1;local Xf=(1);(LE)[0X1]=LE[1][R1[0X001]];do R1=bc[JE];end;JE=JE+0X1;local tf=(LE[0X1]);do LE[Xf+0x1]=tf;end;(LE)[Xf]=tf[R1[1]];R1=bc[JE];JE=JE+1;LE[3]=R1[0X06];JE=JE+0X1;Xf=0X1;LE[Xf]=LE[Xf](LE[Xf+1],LE[Xf+2]);do oE=Xf;end;R1=bc[JE];JE=JE+1;do if not LE[1]then JE=R1[5];end;end;else(LE)[2]=BE[R1[6]];JE=JE+1;JE=JE+0x001;R1=bc[JE];JE=JE+1;if LE[2]then JE=R1[5];end;end;end;else(LE)[0X01]=BE[R1[0X6]];do JE=JE+1;end;JE=JE+0X00001;R1=bc[JE];JE=JE+1;JE=R1[5];end;else if W1~=0X16 then if LE[R1[5]]<=LE[R1[0X4]]then JE=R1[2];end;else LE[R1[2]]=BE[R1[0X00006]];end;end;end;end;end;end;end;end);if pE then if sE then if PE==1 then return LE[KE]();else return LE[KE](E(LE,KE+1,oE));end;elseif KE then do return E(LE,KE,PE);end;end;else if V(sE)~="string"then(q)(sE,0X0);else if r(sE,"a\116\116\101m\112t \116o y\105\101\108\100 \097\099ro\115s\032\109e\116\097meth\111\100\047\067\037\045\099a\108\108\032\098\111u\110d\097ry")then do return coroutine.yield();end;end;do if not(r(sE,"^\046\045\058\037\100\043:\032"))then q(sE,0x0);else(q)('Lur\097p\104 Sc\114i\112\116\058'..(Qc[JE-1]or"(internal)")..": "..u(sE),0);end;end;end;end;end;else ic=function(...)local N7,k7,w7=0,{},1;local s7=(k and k()or _ENV);local L7={[1]=k7,[2]=Vc};local S7,G7=q3(...);S7=S7-1;local K7=(s7==H and fc or s7);do for Cf=0X000,S7 do if ac>Cf then(k7)[Cf]=G7[Cf+1];else break;end;end;end;if not nc then G7=nil;elseif not(Ac)then else k7[ac]={n=S7>=ac and S7-ac+1 or 0,E(G7,ac+1,S7+1)};end;if K7~=s7 then if not(s)then _ENV=K7;else s(ic,K7);end;end;local H7,a7,t7,P7=c(function()while true do local vD=bc[w7];local iD=(vD[3]);w7=w7+1;if iD>=0X11 then do if iD>=25 then if iD<0X1D then if iD>=0X1b then if iD==0X001c then k7[vD[2]]=w(k7[vD[0x5]],k7[vD[0X4]]);else(k7)[11]=k7[9][vD[1]];local eX=(0Xb);do w7=w7+1;end;w7=w7+1;vD=bc[w7];local wX=(jc[1]);w7=w7+0X1;local fX=k7[11];do k7[eX+0X1]=fX;end;k7[eX]=fX[vD[0X1]];vD=bc[w7];do w7=w7+0X00001;end;(k7)[0X0D]=vD[0x0006];do w7=w7+1;end;eX=0Xb;(k7)[eX]=k7[eX](k7[eX+0X1],k7[eX+0x02]);N7=eX;do vD=bc[w7];end;w7=w7+0X1;(k7)[11]=k7[11][vD[0X1]];vD=bc[w7];w7=w7+0x0001;eX=11;fX=k7[11];k7[eX+0X1]=fX;k7[eX]=fX[vD[1]];w7=w7+0X001;eX=11;k7[eX]=k7[eX](k7[eX+1]);N7=eX;w7=w7+0X001;do(k7)[0XC]=wX[0x001][wX[0x2]];end;vD=bc[w7];w7=w7+0x0001;do eX=12;end;fX=k7[12];k7[eX+0X1]=fX;do(k7)[eX]=fX[vD[0X1]];end;do w7=w7+0x01;end;eX=0XC;do(k7)[eX]=k7[eX](k7[eX+0X1]);end;do N7=eX;end;vD=bc[w7];do w7=w7+1;end;if k7[11]~=k7[0X0000c]then else w7=vD[2];end;end;else if iD==26 then local VA=2;(k7)[0x2]=k7[VA]..k7[VA+0X01];vD=bc[w7];w7=w7+1;do(k7[0x1])[vD[6]]=k7[0X2];end;do vD=bc[w7];end;w7=w7+0X01;(k7)[0X2]=vD[0X006];vD=bc[w7];w7=w7+1;(k7)[3]=vD[6];vD=bc[w7];do w7=w7+0X1;end;k7[0X0004]=vD[0X6];local wA=2;vD=bc[w7];w7=w7+0X1;local iA,cA=k7[wA+1],k7[wA+0x002];local XA=k7[wA];do k7[wA]=P(function()for qY=XA,iA,cA do(C)(true,qY);end;end);end;do w7=vD[0X05];end;else local by=(jc[1]);(k7)[0XD]=by[1][by[0X02]];do w7=w7+0x1;end;do w7=w7+0x1;end;local ny=0xD;vD=bc[w7];w7=w7+0X1;local py=k7[0Xd];(k7)[ny+0X01]=py;k7[ny]=py[vD[1]];w7=w7+1;ny=13;k7[ny]=k7[ny](k7[ny+0X1]);N7=ny;vD=bc[w7];w7=w7+0x1;do if k7[0XD]~=vD[1]then w7=vD[2];end;end;end;end;else if iD>=31 then if iD<32 then(k7)[0X00002]=K7[vD[6]];w7=w7+1;w7=w7+1;vD=bc[w7];w7=w7+0X1;(k7)[0X2]=k7[2][vD[0X0001]];w7=w7+0x1;local Xk=(k7[2]);do w7=w7+1;end;do vD=bc[w7];end;do w7=w7+1;end;local Ak=0X2;(k7)[Ak+0X0001]=Xk;(k7)[Ak]=Xk[vD[1]];w7=w7+1;Ak=2;(k7[Ak])(k7[Ak+1]);N7=Ak-1;vD=bc[w7];w7=w7+0X1;w7=vD[5];else if iD~=0X00021 then k7[vD[0X2]]=K7[vD[0x6]];else(k7)[0X1]=K7[vD[6]];do vD=bc[w7];end;do w7=w7+1;end;do(k7)[1]=k7[1][vD[1]];end;do w7=w7+0X1;end;do w7=w7+0x1;end;vD=bc[w7];w7=w7+1;if not k7[1]then w7=vD[0x5];end;end;end;else do if iD~=0X1e then do k7[vD[0X2]]={E({},1,vD[0X5])};end;else(k7)[0x2]=K7[vD[0x6]];w7=w7+0x1;w7=w7+1;do vD=bc[w7];end;local rx=2;w7=w7+0X01;local Gx=(k7[2]);(k7)[rx+0x1]=Gx;do k7[rx]=Gx[vD[1]];end;vD=bc[w7];w7=w7+1;(k7)[0X4]=vD[0X06];do w7=w7+0x0001;end;rx=2;k7[rx]=k7[rx](k7[rx+0x1],k7[rx+0x2]);N7=rx;w7=w7+1;w7=w7+1;vD=bc[w7];w7=w7+0x01;do if not(not k7[2])then else w7=vD[0X5];end;end;end;end;end;end;else do if iD>=21 then do if not(iD>=23)then if iD~=22 then local K5=jc[0X2];local V5=0XA;do k7[0Xa]=K5[0X01][K5[0X2]];end;w7=w7+1;w7=w7+1;w7=w7+0X00001;do(k7)[0x0000B]=k7[0X8];end;local I5=10;w7=w7+0x1;(k7[I5])(k7[I5+1]);N7=I5-0x00001;do w7=w7+0x001;end;do w7=w7+0x1;end;do w7=w7+0x1;end;K5=jc[3];k7[10]=K5[1][K5[0X00002]];w7=w7+1;w7=w7+1;w7=w7+1;do(k7)[0X0b]=k7[8];end;do w7=w7+0X1;end;repeat local VX,zX=Lc,(k7);if not(#VX>0x00000)then else local Yd=({});do for GX,bX in M,VX do do for SG,HG in M,bX do if HG[0X1]==zX and HG[0X2]>=0X0000 then local nr=(HG[2]);if not(not Yd[nr])then else Yd[nr]={zX[nr]};end;do(HG)[0X1]=Yd[nr];end;do(HG)[0X002]=0X1;end;end;end;end;end;end;end;until true;N7=V5+1;return true,V5,2;else(k7)[vD[0X2]]=vD[6];end;else do if iD==0x000018 then else do k7[1]=K7[vD[0X00006]];end;do w7=w7+1;end;w7=w7+1;vD=bc[w7];w7=w7+1;do if not(k7[0X1])then else w7=vD[5];end;end;end;end;end;end;else if not(iD<0x13)then if iD~=20 then(k7)[1]=K7[vD[0X6]];local tm=(1);vD=bc[w7];w7=w7+1;local wm=(k7[0x00001]);k7[tm+1]=wm;do(k7)[tm]=wm[vD[1]];end;vD=bc[w7];do w7=w7+1;end;k7[0X3]=vD[0x6];do w7=w7+0X1;end;tm=1;k7[tm]=k7[tm](k7[tm+1],k7[tm+2]);N7=tm;w7=w7+0X1;w7=w7+0X1;vD=bc[w7];do w7=w7+0X1;end;if not(not k7[1])then else w7=vD[5];end;else local Ke=(Uc[vD[0X00005]]);local Ve=Ke[0X5];local ke,We=#Ve,(nil);if not(ke>0)then else We={};for m6=1,ke do local k6=Ve[m6];if k6[1]~=0x0 then(We)[m6-0X1]=jc[k6[0X02]];else(We)[m6-1]={k7,k6[0X0002]};end;end;(S)(Lc,We);end;k7[vD[2]]=e3(Ke,We,K7);end;else if iD==18 then if not(k7[vD[5]]<k7[vD[0X4]])then else w7=vD[2];end;else do(k7)[2]=K7[vD[6]];end;w7=w7+1;w7=w7+0x001;vD=bc[w7];w7=w7+0X1;if not k7[0X02]then do w7=vD[5];end;end;end;end;end;end;end;end;else if iD>=0X08 then do if iD<12 then if not(iD<10)then if iD==0X00b then w7=vD[5];else repeat local z4,P4=Lc,k7;if#z4>0 then local F6={};for CP,TP in M,z4 do for kf,zf in M,TP do if not(zf[1]==P4 and zf[2]>=0X0)then else local ho=zf[2];if not F6[ho]then(F6)[ho]={P4[ho]};end;(zf)[1]=F6[ho];(zf)[0X2]=0X1;end;end;end;end;until true;do return;end;end;else if iD~=9 then local a2=(jc[0]);(k7)[11]=a2[1][a2[0x00002]];local N2=(11);w7=w7+0X01;(k7)[12]=k7[0X8];w7=w7+1;(k7)[N2]=k7[N2](k7[N2+1]);N7=N2;w7=w7+1;w7=w7+0X1;vD=bc[w7];do w7=w7+1;end;do if not k7[11]then w7=vD[0X5];end;end;else(k7)[1]=K7[vD[0x06]];local uu=0x1;vD=bc[w7];w7=w7+0x1;(k7)[0X1]=k7[0X1][vD[1]];vD=bc[w7];do w7=w7+0x001;end;k7[0X2]=vD[6];vD=bc[w7];w7=w7+1;(k7)[0X3]=K7[vD[6]];w7=w7+1;w7=w7+0X01;w7=w7+1;k7[uu]=k7[uu](k7[uu+1],k7[uu+2]);N7=uu;vD=bc[w7];w7=w7+1;(k7)[0x2]=vD[6];w7=w7+0X001;(k7)[3]=k7[0];vD=bc[w7];do w7=w7+0X001;end;if k7[0X3]then w7=vD[5];end;end;end;else if not(iD>=14)then if iD==0X00D then local nT=vD[2];local gT=k7[nT+0X00002];local sT,kT=k7[nT],k7[nT+0X1];k7[nT]=P(function()for vv=sT,kT,gT do(C)(true,vv);end;end);w7=vD[0X5];else repeat local y5,N5=Lc,(k7);do if#y5>0X000 then local ZR={};for ZH,zH in M,y5 do for Rt,it in M,zH do do if not(it[1]==N5 and it[2]>=0X00)then else local lf=(it[2]);if not ZR[lf]then ZR[lf]={N5[lf]};end;it[1]=ZR[lf];it[2]=1;end;end;end;end;end;end;until true;do return false,vD[2],N7;end;end;else if iD>=0Xf then if iD~=0X0010 then k7[vD[2]]=vD[6];else local uw=(vD[0X2]);local Kw,Aw=k7[uw]();do if not(Kw)then else w7=vD[5];do(k7)[uw+3]=Aw;end;end;end;end;else if k7[vD[5]]~=k7[vD[0X0004]]then w7=vD[2];end;end;end;end;end;else if not(iD<0x4)then if not(iD<6)then if iD==7 then k7[vD[0X0002]]=Q(k7[vD[0X5]]);else k7[0xA]=k7[0X9][vD[0X1]];w7=w7+0X1;w7=w7+0X1;vD=bc[w7];w7=w7+0X1;if not(k7[0xa]<vD[0X1])then w7=vD[0X2];end;end;else if iD~=5 then for UE=vD[2],vD[5]do k7[UE]=nil;end;else do k7[6]=K7[vD[0X06]];end;w7=w7+1;do w7=w7+0X00001;end;local WV=(k7[6]);vD=bc[w7];w7=w7+1;local AV=(6);(k7)[AV+1]=WV;k7[AV]=WV[vD[1]];vD=bc[w7];w7=w7+0X1;k7[0X8]=vD[0X0006];w7=w7+0X1;AV=6;(k7)[AV]=k7[AV](k7[AV+0X001],k7[AV+2]);N7=AV;vD=bc[w7];w7=w7+1;(k7)[0X6]=k7[6][vD[0X1]];w7=w7+0X1;w7=w7+1;do vD=bc[w7];end;w7=w7+0x0001;AV=0X6;do WV=k7[0X006];end;k7[AV+1]=WV;k7[AV]=WV[vD[1]];local eV=2;w7=w7+0X001;do k7[8]=k7[5];end;w7=w7+1;AV=0X6;(k7)[AV]=k7[AV](k7[AV+1],k7[AV+2]);N7=AV;vD=bc[w7];w7=w7+0X1;(k7)[7]=K7[vD[0x6]];w7=w7+1;do w7=w7+0X1;end;w7=w7+1;k7[0X8]=k7[0X00006];w7=w7+0X1;AV=7;local nV=0X4;do if eV==0 then else do N7=AV+eV-0X1;end;end;end;local RV,wV=nil,nil;if eV==0X1 then RV,wV=q3(k7[AV]());else do RV,wV=q3(k7[AV](E(k7,AV+1,N7)));end;end;if nV==0X1 then N7=AV-0X1;else if nV~=0 then do RV=AV+nV-2;end;N7=RV+0X1;else RV=RV+AV-1;N7=RV;end;local Nd=(0x000);for UD=AV,RV do Nd=Nd+0X1;(k7)[UD]=wV[Nd];end;end;vD=bc[w7];w7=w7+1;do AV=7;end;local tV=(P(function(...)(C)();for Fx,ux in...do(C)(true,Fx,ux);end;end));(tV)(k7[AV],k7[AV+0X1],k7[AV+0X2]);N7=AV;k7[AV]=tV;do w7=vD[5];end;end;end;else if not(iD<2)then do if iD==3 then do if not(not(k7[vD[5]]<k7[vD[0x4]]))then else w7=vD[2];end;end;else do(k7)[vD[0X02]]=J(k7[vD[0X5]],k7[vD[4]]);end;end;end;else do if iD~=0x1 then local xe=vD[2];local le=vD[0X5];N7=xe+le-1;repeat local Mk,qk=Lc,(k7);if not(#Mk>0)then else local ZQ=({});for Ye,ye in M,Mk do for k0,q0 in M,ye do if q0[0X1]==qk and q0[2]>=0x0 then local Vj=(q0[2]);if not ZQ[Vj]then ZQ[Vj]={qk[Vj]};end;(q0)[1]=ZQ[Vj];q0[2]=1;end;end;end;end;until true;return true,xe,le;else local ZX=(vD[0X00002]);local kX,SX,HX=k7[ZX]();if not(kX)then else k7[ZX+1]=SX;k7[ZX+2]=HX;w7=vD[5];end;end;end;end;end;end;end;end;end);do if H7 then if a7 then do if P7~=0X0001 then do return k7[t7](E(k7,t7+0X01,N7));end;else return k7[t7]();end;end;elseif t7 then do return E(k7,t7,P7);end;end;else if V(a7)=="\115\116\114\105\110\103"then if r(a7,"atte\109\112t\032\116o\032\121i\101\108d\032\097c\114oss\032\109\101\116\097\109etho\100\047\067%\045call bo\117nda\114y")then return coroutine.yield();end;if r(a7,"\094\046\045\058\037\100\043:\032")then(q)("Luraph Script:"..(Qc[w7-1]or'\040\105n\116\101rna\108)')..": "..u(a7),0);else q(a7,0);end;else(q)(a7,0X0);end;end;end;end;end;end;else if not(Sc>=88)then do if Sc==87 then ic=function(...)local Ya={};local ea=(0x0);local Wa=1;local la=((k and k()or _ENV));local Sa=({[1]=Ya,[2]=Vc});local na,Ja=q3(...);local Va=((la==H and fc or la));na=na-0X001;do for iE=0,na do do if not(ac>iE)then break;else do Ya[iE]=Ja[iE+1];end;end;end;end;end;if not nc then Ja=nil;elseif not(Ac)then else do Ya[ac]={n=na>=ac and na-ac+0x1 or 0x00000,E(Ja,ac+0X1,na+1)};end;end;if Va~=la then do if s then s(ic,Va);else _ENV=Va;end;end;end;local Fa,Xa,ma,aa=c(function()while true do local vM=bc[Wa];local FM=(vM[3]);do Wa=Wa+1;end;do if not(FM>=8)then if not(FM<0x04)then if not(FM<6)then if FM==0X00007 then Ya[vM[2]]=Q(Ya[vM[0x5]]);else Ya[vM[0X2]]=Ya[vM[5]]>=Ya[vM[4]];end;else if FM~=0X5 then else do Ya[vM[2]]=Va[vM[0X6]];end;end;end;else do if FM>=0x2 then if FM~=0X003 then local qN=vM[2];local nN,zN,uN=Ya[qN],Ya[qN+0x1],(Ya[qN+2]);Ya[qN]=P(function()do for Cx=nN,zN,uN do(C)(true,Cx);end;end;end);Wa=vM[0X5];else Ya[0]=Va[vM[6]];Wa=Wa+0X1;local Yv=jc[0x00];(Ya)[1]=Yv[1][Yv[2]];local Jv=0;Wa=Wa+1;Wa=Wa+1;Wa=Wa+0x1;Ya[Jv](Ya[Jv+0X1]);do ea=Jv-1;end;do Wa=Wa+1;end;Wa=Wa+1;do vM=bc[Wa];end;Wa=Wa+1;(Ya)[0]=Va[vM[0X6]];vM=bc[Wa];Wa=Wa+1;(Ya)[1]=vM[6];Wa=Wa+0X1;Jv=0X0;(Ya[Jv])(Ya[Jv+1]);ea=Jv-1;Wa=Wa+0x1;Yv=jc[0];Ya[0]=Yv[1][Yv[2]];vM=bc[Wa];local iv=Ya[0];Wa=Wa+1;Jv=0;do Ya[Jv+0X1]=iv;end;Ya[Jv]=iv[vM[1]];vM=bc[Wa];Wa=Wa+0X001;do(Ya)[2]=vM[0X00006];end;Wa=Wa+0X0001;Jv=0;Ya[Jv]=Ya[Jv](Ya[Jv+1],Ya[Jv+0x2]);do ea=Jv;end;Wa=Wa+1;Wa=Wa+1;do vM=bc[Wa];end;Wa=Wa+1;Jv=0x0;iv=Ya[0];Ya[Jv+0x1]=iv;(Ya)[Jv]=iv[vM[0X1]];vM=bc[Wa];do Wa=Wa+1;end;Ya[2]=vM[6];Wa=Wa+0X1;do Jv=0x0000;end;(Ya[Jv])(Ya[Jv+1],Ya[Jv+0X2]);ea=Jv-0X0001;do vM=bc[Wa];end;Wa=Wa+1;Ya[0X0]=Va[vM[0X6]];Wa=Wa+0x0001;Wa=Wa+0x01;vM=bc[Wa];Wa=Wa+0X001;(Ya)[0X1]=vM[6];do Wa=Wa+1;end;Jv=0;Ya[Jv](Ya[Jv+0X1]);do ea=Jv-1;end;do Wa=Wa+1;end;Yv=jc[0X0];Ya[0x000]=Yv[0x001][Yv[2]];Wa=Wa+0X001;Wa=Wa+1;vM=bc[Wa];do Wa=Wa+0X1;end;(Ya)[0X1]=Va[vM[6]];vM=bc[Wa];Wa=Wa+0X1;(Ya[0X0])[vM[0X006]]=Ya[1];vM=bc[Wa];Wa=Wa+0X1;Ya[0x0]=Va[vM[6]];vM=bc[Wa];Wa=Wa+0X1;do Ya[1]=vM[0X0006];end;vM=bc[Wa];local Zv=Uc[vM[0X5]];Wa=Wa+1;local uv=Zv[5];local Hv=nil;local Ov=(#uv);if Ov>0X0 then Hv={};for JB=0X0001,Ov do local eB=(uv[JB]);do if eB[1]==0 then(Hv)[JB-0X1]={Ya,eB[0X2]};else Hv[JB-1]=jc[eB[2]];end;end;end;S(Lc,Hv);end;Ya[0X2]=e3(Zv,Hv,Va);Wa=Wa+1;Jv=0;Ya[Jv](Ya[Jv+1],Ya[Jv+0X2]);ea=Jv-1;Wa=Wa+0X0001;do Wa=Wa+1;end;do Wa=Wa+1;end;do repeat local oU,hU=Lc,(Ya);if#oU>0 then local XP={};for U_,e_ in M,oU do do for eh,Vh in M,e_ do if not(Vh[1]==hU and Vh[2]>=0)then else local nV=(Vh[0X2]);if not XP[nV]then XP[nV]={hU[nV]};end;(Vh)[0X1]=XP[nV];do Vh[0X2]=1;end;end;end;end;end;end;until true;end;do return;end;end;else if FM==1 then(Ya[vM[0X2]])[Ya[vM[5]]]=Ya[vM[4]];else Wa=vM[0X5];end;end;end;end;else if FM>=12 then if not(FM<14)then if FM==0X000f then Ya[vM[2]]={E({},0X1,vM[0X5])};else Ya[vM[0X2]]=-Ya[vM[5]];end;else if FM~=13 then Ya[vM[2]]=w(Ya[vM[5]],Ya[vM[0X4]]);else do Ya[vM[2]]=vM[6];end;end;end;else if not(FM>=10)then if FM==9 then local pV,EV=Uc[vM[0X05]],(nil);local ZV=(pV[0X5]);local eV=#ZV;if eV>0X0 then EV={};for Zw=0X1,eV do local Gw=ZV[Zw];if Gw[0X00001]==0 then do EV[Zw-0x1]={Ya,Gw[2]};end;else(EV)[Zw-0x1]=jc[Gw[0x2]];end;end;(S)(Lc,EV);end;(Ya)[vM[2]]=e3(pV,EV,Va);else for xp=vM[2],vM[5]do(Ya)[xp]=nil;end;end;else do if FM~=0X00B then(Va)[vM[0X6]]=Ya[vM[0X0002]];else do(Ya)[vM[2]]=Ya[vM[0X5]]-Ya[vM[0X4]];end;end;end;end;end;end;end;end;end);do if not(Fa)then if V(Xa)=="string"then if not(r(Xa,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(r(Xa,'^.-\058%\100+\058\032'))then q(Xa,0);else(q)("Lur\097ph \083\099\114\105\112\116:"..(Qc[Wa-1]or'\040\105\110t\101\114\110a\108)')..": "..u(Xa),0);end;else q(Xa,0x0);end;else do if Xa then if aa~=1 then return Ya[ma](E(Ya,ma+0X00001,ea));else return Ya[ma]();end;elseif ma then do return E(Ya,ma,aa);end;end;end;end;end;end;else do ic=function(...)local yl,ml=0X00001,{};local xl=(k and k()or _ENV);local al={[2]=Vc,[1]=ml};local rl,hl=q3(...);local wl=(xl==H and fc or xl);rl=rl-0X01;for Kn=0X0,rl do do if ac>Kn then ml[Kn]=hl[Kn+1];else break;end;end;end;local Ml=0X0;if not nc then hl=nil;elseif Ac then do ml[ac]={n=rl>=ac and rl-ac+1 or 0,E(hl,ac+1,rl+1)};end;end;if wl==xl then else if not(s)then _ENV=wl;else(s)(ic,wl);end;end;while true do local cv=(bc[yl]);yl=yl+0X1;local Pv=(cv[3]);return(function(U,S,...)local y=U[0];local Z=game.Players.LocalPlayer;if typeof(y)=="Instance"and y:IsA("BasePart")then local o=math.clamp(Z.SimulationRadius,0,1250);local k=Z:DistanceFromCharacter(y.Position);if k<o then for G,R in pairs(game.Players:GetPlayers())do if R:DistanceFromCharacter(y.Position)<k and R~=Z then return false;end;end;return true;end;end;end)(ml,jc,...);end;end;end;end;end;else if Sc~=89 then do ic=function(...)local A8,o8,W8=1,{},(0X000);local i8=((k and k()or _ENV));local v8={[1]=o8,[2]=Vc};local u8,M8=q3(...);u8=u8-1;for x1=0,u8 do if not(ac>x1)then do break;end;else(o8)[x1]=M8[x1+1];end;end;local Q8=((i8==H and fc or i8));do if not nc then M8=nil;elseif not(Ac)then else(o8)[ac]={n=u8>=ac and u8-ac+0x1 or 0,E(M8,ac+0x00001,u8+1)};end;end;if Q8~=i8 then if not(s)then do _ENV=Q8;end;else s(ic,Q8);end;end;while true do local e_=(bc[A8]);A8=A8+0X00001;local L_=e_[3];return(function(h,V,...)local L,Y=h[0],h[1];while L()do wait();end;Y();end)(o8,jc,...);end;end;end;else do ic=function(...)local iL=({});local aL=1;local HL=({[2]=Vc,[1]=iL});local FL=((k and k()or _ENV));local lL=(FL==H and fc or FL);local CL=0X0;local kL,bL=q3(...);kL=kL-1;for hv=0x0,kL do if not(ac>hv)then break;else iL[hv]=bL[hv+0X1];end;end;if not nc then bL=nil;elseif not(Ac)then else(iL)[ac]={n=kL>=ac and kL-ac+1 or 0,E(bL,ac+1,kL+1)};end;if lL~=FL then if s then s(ic,lL);else _ENV=lL;end;end;while true do local fK=bc[aL];aL=aL+1;local tK=fK[3];return(function(V,Z,...)local R=V[0];local z={};for y,K in pairs(CurrentAllMob)do if not table.find(BlacklistBoss,K.Name)and(string.find(K.Name,"Boss")or string.find(K.Name,"Raid Boss"))then local U=(R and K.Name)or K;if not table.find(z,U)then table.insert(z,U);end;end;end;return z;end)(iL,jc,...);end;end;end;end;end;end;else if not(Sc>=82)then do if not(Sc<0X050)then if Sc==81 then do ic=function(...)local Gx=({});local px=0X0;local ax=(0x01);local zx=({[1]=Gx,[2]=Vc});local Tx=(k and k()or _ENV);local Jx,Hx=q3(...);Jx=Jx-0x1;for Pe=0,Jx do if ac>Pe then Gx[Pe]=Hx[Pe+1];else break;end;end;local yx=(Tx==H and fc or Tx);if not nc then Hx=nil;elseif Ac then Gx[ac]={n=Jx>=ac and Jx-ac+1 or 0,E(Hx,ac+1,Jx+0x00001)};end;if yx~=Tx then if not(s)then _ENV=yx;else(s)(ic,yx);end;end;do while true do local YF=bc[ax];ax=ax+0X1;local uF=(YF[3]);return(function(Y,d,...)return Client.PlayerGui.Main.Timer.Visible;end)(Gx,jc,...);end;end;end;end;else ic=function(...)local nF,FF=0X0001,{};local iF=(k and k()or _ENV);local sF=(0);local vF=((iF==H and fc or iF));local pF=({[2]=Vc,[1]=FF});local yF,cF=q3(...);yF=yF-1;do for nl=0X00,yF do if not(ac>nl)then break;else(FF)[nl]=cF[nl+1];end;end;end;if not nc then cF=nil;elseif Ac then FF[ac]={n=yF>=ac and yF-ac+1 or 0X0000,E(cF,ac+0X1,yF+0X1)};end;if vF~=iF then do if s then(s)(ic,vF);else _ENV=vF;end;end;end;local BF,DF,OF,qF=c(function()while true do local cU=bc[nF];local JU=(cU[3]);nF=nF+1;if not(JU<11)then if not(JU>=16)then do if not(JU>=13)then if JU==12 then local cj=jc[cU[0X5]];(FF)[cU[2]]=cj[0X1][cj[0X2]];else FF[cU[0X002]]=FF[cU[0X005]]/FF[cU[0x00004]];end;else if JU>=0X0000e then if JU==15 then repeat local d1,f1=Lc,(FF);if#d1>0X0 then local yf=({});for J2,i2 in M,d1 do do for AN,BN in M,i2 do if BN[1]==f1 and BN[2]>=0X0 then local fx=BN[2];if not yf[fx]then do yf[fx]={f1[fx]};end;end;(BN)[0X1]=yf[fx];do BN[2]=1;end;end;end;end;end;end;until true;return;else FF[cU[0X2]]=cU[0X6];end;else local sQ=(Uc[cU[5]]);local xQ=(sQ[5]);local mQ,pQ=#xQ,(nil);do if not(mQ>0x00000)then else pQ={};for WZ=1,mQ do local TZ=xQ[WZ];do if TZ[0X1]==0 then do(pQ)[WZ-1]={FF,TZ[2]};end;else(pQ)[WZ-0X1]=jc[TZ[2]];end;end;end;(S)(Lc,pQ);end;end;(FF)[cU[0X2]]=e3(sQ,pQ,vF);end;end;end;else if not(JU<0X00013)then do if JU<20 then FF[cU[0X002]]={E({},1,cU[5])};else if JU==21 then(FF)[0x000]=vF[cU[6]];cU=bc[nF];local N5=0X00000;nF=nF+1;(FF)[1]=cU[0X6];nF=nF+0X00001;do(FF)[N5]=FF[N5](FF[N5+1]);end;do sF=N5;end;nF=nF+0X01;FF[0]=not FF[0X0];cU=bc[nF];nF=nF+1;nF=cU[5];else local PG=jc[0X001];FF[0X00]=PG[1][PG[2]];nF=nF+0X1;nF=nF+0X1;cU=bc[nF];nF=nF+0x01;do FF[0x0]=FF[0][cU[0X1]];end;nF=nF+1;do nF=nF+1;end;cU=bc[nF];nF=nF+0X001;(FF)[0]=FF[0X0]>cU[1];cU=bc[nF];do nF=nF+1;end;do nF=cU[5];end;end;end;end;else if JU<17 then(FF)[cU[0X2]]=vF[cU[0X6]];else if JU==18 then FF[0X0]=vF[cU[0x06]];nF=nF+1;nF=nF+1;cU=bc[nF];nF=nF+1;do(FF)[0]=FF[0][cU[0x0001]];end;cU=bc[nF];nF=nF+0X001;nF=cU[0x05];else local AH=jc[1];do FF[0]=AH[0X0001][AH[2]];end;do nF=nF+0X1;end;nF=nF+0x01;do cU=bc[nF];end;nF=nF+1;do nF=cU[5];end;end;end;end;end;else if JU<5 then do if not(JU>=2)then do if JU~=1 then do if not FF[cU[0x002]]then nF=cU[5];end;end;else local MS=(cU[0x2]);for Sl=MS,MS+(cU[0X05]-1)do FF[Sl]=cF[ac+(Sl-MS)+0X01];end;end;end;else if JU<0x3 then(FF)[cU[2]]=cU[6];else if JU~=4 then do nF=cU[5];end;else end;end;end;end;else if JU>=8 then if not(JU<9)then if JU~=0XA then FF[cU[2]]=true;else do repeat local Ty,fy=Lc,FF;if not(#Ty>0x000)then else local iA={};for vq,Lq in M,Ty do for w6,C6 in M,Lq do if C6[1]==fy and C6[2]>=0 then local ZJ=(C6[2]);if not(not iA[ZJ])then else iA[ZJ]={fy[ZJ]};end;C6[0x1]=iA[ZJ];C6[0X2]=0X001;end;end;end;end;until true;end;local xj=(cU[2]);return false,xj,xj;end;else local UT=(FF[cU[5]]/FF[cU[0X00004]]);(FF)[cU[2]]=UT-UT%0X1;end;else do if JU<6 then for LF=cU[0X2],cU[5]do(FF)[LF]=nil;end;else if JU==0x7 then repeat local w4,S4,g4=Lc,FF,(cU[2]);if#w4>0 then local KC={};for fH,eH in M,w4 do do for on,Dn in M,eH do if not(Dn[0X1]==S4 and Dn[0X002]>=g4)then else local CY=Dn[2];if not(not KC[CY])then else(KC)[CY]={S4[CY]};end;(Dn)[1]=KC[CY];(Dn)[0X002]=0X1;end;end;end;end;end;until true;else local K4=jc[2];(FF)[0X0]=K4[1][K4[2]];nF=nF+1;do nF=nF+0X1;end;cU=bc[nF];local g4=0X0;do nF=nF+0x1;end;local O4=FF[0x0];do FF[g4+1]=O4;end;FF[g4]=O4[cU[0x1]];nF=nF+1;do g4=0;end;(FF)[g4]=FF[g4](FF[g4+1]);sF=g4;do nF=nF+1;end;do nF=nF+0x00001;end;do cU=bc[nF];end;nF=nF+0X001;nF=cU[5];end;end;end;end;end;end;end;end);do if not(BF)then do if V(DF)=='s\116\114in\103'then if not(r(DF,"a\116\116\101mp\116 \116\111\032\121\105e\108\100 \097cross \109et\097method\047\067\037-\099all \098\111und\097r\121"))then else return coroutine.yield();end;if r(DF,"^.-:%d+: ")then q('\076\117r\097\112h S\099\114i\112\116:'..(Qc[nF-0X0001]or"(internal)")..": "..u(DF),0X0);else(q)(DF,0);end;else(q)(DF,0X0000);end;end;else if DF then do if qF==0X1 then return FF[OF]();else do return FF[OF](E(FF,OF+1,sF));end;end;end;elseif OF then return E(FF,OF,qF);end;end;end;end;end;else if Sc==0X00004f then ic=function(...)local fy={};local cy=(1);local sy=((k and k()or _ENV));local Ny,My=(sy==H and fc or sy),(0);local Ry,uy=q3(...);local By=({[2]=Vc,[1]=fy});Ry=Ry-1;for Jx=0,Ry do if ac>Jx then(fy)[Jx]=uy[Jx+1];else break;end;end;if not nc then uy=nil;elseif not(Ac)then else(fy)[ac]={n=Ry>=ac and Ry-ac+1 or 0X0,E(uy,ac+0X1,Ry+0X1)};end;if Ny~=sy then if not(s)then _ENV=Ny;else(s)(ic,Ny);end;end;local ey,Zy,vy,Jy=c(function()while true do local rm=bc[cy];local om=(rm[3]);cy=cy+0x001;do if om<6 then if om>=0X3 then if not(om>=0X4)then(fy)[rm[2]]=fy[rm[0X05]]/fy[rm[0X04]];else do if om~=5 then local QM=Uc[rm[0X05]];local BM=nil;local iM=QM[0X5];local ZM=#iM;if not(ZM>0)then else BM={};do for nz=1,ZM do local Vz=(iM[nz]);if Vz[1]==0 then(BM)[nz-0X001]={fy,Vz[2]};else BM[nz-1]=jc[Vz[2]];end;end;end;S(Lc,BM);end;do fy[rm[0X002]]=e3(QM,BM,Ny);end;else end;end;end;else if not(om>=1)then(fy)[rm[2]]=#fy[rm[5]];else if om==2 then local mP=rm[0X2];local UP,wP=fy[mP]();if UP then cy=rm[0X5];(fy)[mP+3]=wP;end;else fy[rm[2]]=true;end;end;end;else if om<0x009 then if om<7 then cy=rm[5];else if om~=8 then fy[0]=Ny[rm[6]];cy=cy+0x1;local qg,wg=jc[0x0],(0);do cy=cy+1;end;cy=cy+1;fy[0X1]=qg[1][qg[0X0002]];do rm=bc[cy];end;do cy=cy+1;end;(fy)[2]=rm[0X6];do cy=cy+1;end;(fy[wg])(fy[wg+0x0001],fy[wg+2]);My=wg-1;cy=cy+0x001;repeat local Dj,fj=Lc,(fy);if#Dj>0X0 then local P8={};for h1,U1 in M,Dj do for C8,W8 in M,U1 do if W8[1]==fj and W8[0x00002]>=0 then local eL=(W8[0X2]);if not(not P8[eL])then else P8[eL]={fj[eL]};end;do(W8)[1]=P8[eL];end;do(W8)[0X2]=0X1;end;end;end;end;end;until true;return;else do(fy)[rm[2]]=rm[6];end;end;end;else do if not(om<0x0a)then if om==11 then local Jv=rm[5];local hv=fy[Jv];do for kB=Jv+0X1,rm[0X4]do hv=hv..fy[kB];end;end;(fy)[rm[2]]=hv;else fy[rm[2]]={E({},1,rm[0X005])};end;else fy[rm[2]]=Ny[rm[0X6]];end;end;end;end;end;end;end);do if ey then if Zy then if Jy~=0X1 then return fy[vy](E(fy,vy+0x1,My));else return fy[vy]();end;elseif vy then return E(fy,vy,Jy);end;else if V(Zy)=="\115t\114\105\110g"then if r(Zy,'att\101m\112\116 \116\111 \121\105e\108\100 \097cr\111ss\032\109\101t\097\109e\116hod/C\037-\099a\108l\032\098\111u\110dary')then do return coroutine.yield();end;end;if not(r(Zy,"\094.-\058%\100+:\032"))then(q)(Zy,0);else q("Luraph Script:"..(Qc[cy-1]or"\040i\110te\114nal\041")..": "..u(Zy),0X0000);end;else(q)(Zy,0);end;end;end;end;else do ic=function(...)local jW=0x1;local iW={};local wW=(k and k()or _ENV);local mW=({[2]=Vc,[1]=iW});local IW,YW=q3(...);IW=IW-0X1;for bC=0x0,IW do if not(ac>bC)then do break;end;else do iW[bC]=YW[bC+1];end;end;end;local NW,LW=(wW==H and fc or wW),0x0;if not nc then YW=nil;elseif Ac then iW[ac]={n=IW>=ac and IW-ac+0X1 or 0X0,E(YW,ac+1,IW+0X1)};end;do if NW==wW then else do if s then s(ic,NW);else do _ENV=NW;end;end;end;end;end;local CW,ZW,GW,cW=c(function()while true do local BH=bc[jW];local eH=(BH[0x3]);do jW=jW+0X01;end;if eH>=12 then if not(eH<18)then do if eH<21 then if not(eH>=0X13)then iW[0X0]=NW[BH[0x06]];BH=bc[jW];jW=jW+1;local nO=(0X0);(iW)[1]=BH[0X6];jW=jW+1;do(iW)[2]=true;end;do jW=jW+1;end;iW[nO]=iW[nO](iW[nO+0X1],iW[nO+2]);LW=nO;BH=bc[jW];jW=jW+1;iW[0X1]=NW[BH[0X6]];jW=jW+1;do jW=jW+0X1;end;BH=bc[jW];jW=jW+0X1;do iW[0X002]=BH[6];end;jW=jW+0x00001;nO=1;do iW[nO]=iW[nO](iW[nO+1]);end;LW=nO;BH=bc[jW];jW=jW+1;(iW)[0X01]=NW[BH[0x06]];do BH=bc[jW];end;jW=jW+1;do iW[0X2]=BH[0X006];end;jW=jW+0X1;iW[0X3]=true;jW=jW+0X1;nO=0X1;iW[nO]=iW[nO](iW[nO+1],iW[nO+0X2]);LW=nO;BH=bc[jW];jW=jW+0X1;do(NW)[BH[0X6]]=iW[1];end;BH=bc[jW];jW=jW+1;iW[0x0001]=NW[BH[6]];do BH=bc[jW];end;jW=jW+1;iW[0X1]=iW[1]==BH[0x1];do BH=bc[jW];end;jW=jW+1;if iW[1]then do jW=BH[0X0005];end;end;else if eH==0X014 then repeat local LQ,dQ=Lc,(iW);if#LQ>0 then local pr=({});for ti,Wi in M,LQ do do for fK,KK in M,Wi do if KK[1]==dQ and KK[0X2]>=0X000 then local i6=(KK[2]);if not pr[i6]then do(pr)[i6]={dQ[i6]};end;end;do KK[0X1]=pr[i6];end;KK[0x002]=0X001;end;end;end;end;end;until true;do return;end;else do(iW)[1]=NW[BH[6]];end;jW=jW+0x1;do jW=jW+0X1;end;BH=bc[jW];jW=jW+1;(iW)[0X1]=iW[1]==BH[0X1];BH=bc[jW];jW=jW+0X1;jW=BH[5];end;end;else if not(eH>=22)then(iW)[BH[2]]=mW[BH[0x005]];else if eH==23 then do iW[0X1]=NW[BH[0X6]];end;BH=bc[jW];local zl=0X001;jW=jW+1;(iW)[1]=iW[1][BH[0X1]];jW=jW+0X1;jW=jW+0X1;BH=bc[jW];jW=jW+1;local Tl=iW[0X1];do iW[zl+1]=Tl;end;do(iW)[zl]=Tl[BH[0X1]];end;BH=bc[jW];jW=jW+1;iW[0X0003]=BH[0X00006];do jW=jW+0X001;end;zl=1;iW[zl]=iW[zl](iW[zl+1],iW[zl+2]);LW=zl;jW=jW+1;jW=jW+1;BH=bc[jW];jW=jW+0X001;if not iW[1]then jW=BH[5];end;else do iW[0x001]=NW[BH[0x06]];end;do jW=jW+1;end;do jW=jW+1;end;BH=bc[jW];do jW=jW+0X001;end;local WD=1;(iW)[0X002]=BH[6];jW=jW+0X1;iW[WD]=iW[WD](iW[WD+1]);LW=WD;BH=bc[jW];jW=jW+1;NW[BH[0X6]]=iW[0x0001];do BH=bc[jW];end;do jW=jW+0X1;end;(iW)[1]=NW[BH[0x006]];local mD=(iW[0X1]);jW=jW+0X00001;jW=jW+0X1;BH=bc[jW];jW=jW+0X1;do WD=1;end;do(iW)[WD+0X00001]=mD;end;(iW)[WD]=mD[BH[0x0001]];do BH=bc[jW];end;jW=jW+1;do iW[3]=BH[6];end;jW=jW+0X1;do WD=1;end;(iW[WD])(iW[WD+0X001],iW[WD+2]);LW=WD-1;jW=jW+1;jW=jW+0X1;BH=bc[jW];jW=jW+1;jW=BH[5];end;end;end;end;else if eH>=15 then if eH<0X0010 then(iW)[BH[2]]=BH[0X6];else if eH~=17 then iW[0X1]=NW[BH[6]];local qZ=(1);BH=bc[jW];jW=jW+0X1;(iW)[0x2]=BH[6];do BH=bc[jW];end;do jW=jW+1;end;iW[3]=BH[6];jW=jW+1;(iW[qZ])(iW[qZ+0X001],iW[qZ+2]);LW=qZ-1;do jW=jW+1;end;do jW=jW+0x00001;end;BH=bc[jW];do jW=jW+1;end;jW=BH[0X5];else local qe,Ne=BH[2],(iW[BH[0x5]]);iW[qe+0X1]=Ne;iW[qe]=Ne[BH[1]];end;end;else do if not(eH<13)then do if eH==0X000e then if not(iW[BH[5]]<=iW[BH[4]])then else do jW=BH[2];end;end;else iW[0X001]=NW[BH[6]];jW=jW+1;jW=jW+0X1;BH=bc[jW];jW=jW+0X1;(iW)[1]=iW[0X1]==BH[0x00001];end;end;else if iW[BH[2]]then jW=BH[0x5];end;end;end;end;end;else do if not(eH>=6)then do if not(eH<0x03)then do if eH>=0X4 then do if eH==5 then iW[BH[0X2]]=iW[BH[0X0005]]==iW[BH[4]];else local WJ=Uc[BH[0X5]];local cJ,tJ=WJ[5],nil;local PJ=(#cJ);if PJ>0X0 then tJ={};for Oc=0X0001,PJ do local Dc=(cJ[Oc]);do if Dc[1]==0X00000 then tJ[Oc-0X001]={iW,Dc[0X2]};else do tJ[Oc-1]=jc[Dc[2]];end;end;end;end;S(Lc,tJ);end;do iW[BH[0x0002]]=e3(WJ,tJ,NW);end;end;end;else end;end;else if eH>=0X1 then if eH~=2 then do iW[0X1]=NW[BH[0X6]];end;do BH=bc[jW];end;local ER=(0x1);jW=jW+0X1;iW[0x00002]=BH[6];jW=jW+0X1;iW[ER]=iW[ER](iW[ER+1]);LW=ER;BH=bc[jW];jW=jW+0X1;if not(not iW[0X00001])then else jW=BH[5];end;else do jW=BH[5];end;end;else iW[1]=NW[BH[0X0006]];jW=jW+1;jW=jW+1;BH=bc[jW];jW=jW+0X0001;do(iW)[0X2]=BH[6];end;local np=1;do jW=jW+1;end;iW[np]=iW[np](iW[np+0X00001]);LW=np;BH=bc[jW];jW=jW+0X1;do if not(not iW[1])then else jW=BH[0X5];end;end;end;end;end;else if eH<0X9 then if not(eH>=0x7)then for fb=BH[0X002],BH[5]do iW[fb]=nil;end;else do if eH~=0X8 then iW[BH[0X2]][iW[BH[5]]]=iW[BH[0X4]];else(iW)[BH[0X2]]=NW[BH[0x6]];end;end;end;else do if not(eH>=0X00a)then iW[BH[0x2]]=#iW[BH[5]];else if eH==0Xb then do(NW)[BH[0X0006]]=iW[BH[0x2]];end;else do(iW)[BH[2]]={E({},0X1,BH[0x5])};end;end;end;end;end;end;end;end;end;end);do if CW then if ZW then if cW==1 then do return iW[GW]();end;else return iW[GW](E(iW,GW+1,LW));end;elseif not(GW)then else return E(iW,GW,cW);end;else if V(ZW)=="string"then do if not(r(ZW,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(r(ZW,"^.-:%d+: "))then(q)(ZW,0x0);else q('\076u\114\097\112h\032\083c\114i\112t\058'..(Qc[jW-0X1]or"\040\105n\116ern\097l)")..'\058\032'..u(ZW),0X0);end;else q(ZW,0);end;end;end;end;end;end;end;end;else do if Sc<84 then if Sc==83 then ic=function(...)local BB,mB=0X1,({});local YB,IB={[1]=mB,[2]=Vc},(0);local VB=(k and k()or _ENV);local QB,aB=q3(...);local gB=(VB==H and fc or VB);QB=QB-1;for nK=0,QB do if ac>nK then(mB)[nK]=aB[nK+1];else do break;end;end;end;if not nc then aB=nil;elseif Ac then(mB)[ac]={n=QB>=ac and QB-ac+0X1 or 0X0,E(aB,ac+0X1,QB+1)};end;if gB==VB then else if s then s(ic,gB);else _ENV=gB;end;end;local EB,hB,vB,ZB=c(function()while true do local l4=(bc[BB]);local T4=(l4[3]);BB=BB+0X01;if T4<8 then if not(T4>=4)then if T4>=0x2 then do if T4==3 then do if mB[l4[0X2]]then BB=l4[5];end;end;else local f9,n9=jc[0X0],0X0;(mB)[0]=f9[1][f9[2]];BB=BB+1;do mB[0]=not mB[0X0];end;BB=BB+0X001;do repeat local qa,wa=Lc,(mB);if#qa>0 then local jh={};for rv,mv in M,qa do do for Gm,qm in M,mv do if qm[0x1]==wa and qm[0X2]>=0 then local Io=(qm[0X2]);do if not jh[Io]then do(jh)[Io]={wa[Io]};end;end;end;qm[1]=jh[Io];qm[0x2]=0X001;end;end;end;end;end;until true;end;return false,n9,n9;end;end;else if T4~=0X1 then do(mB)[l4[0X2]]=l4[0X6];end;else(mB)[l4[0X00002]]=mB[l4[0X5]]^mB[l4[0x4]];end;end;else if T4<6 then if T4==0X5 then mB[l4[0X02]]=gB[l4[6]];else local da=Uc[l4[0X5]];local Oa,Pa=da[5],(nil);local Za=(#Oa);if not(Za>0x0)then else Pa={};for e5=1,Za do local R5=Oa[e5];if R5[1]~=0x00 then do Pa[e5-0X00001]=jc[R5[0X2]];end;else(Pa)[e5-0X1]={mB,R5[0X2]};end;end;S(Lc,Pa);end;mB[l4[2]]=e3(da,Pa,gB);end;else do if T4~=0X007 then(mB)[l4[0X2]]=mB[l4[0X00005]]/mB[l4[4]];else mB[l4[0X2]]=o(mB[l4[0X5]],mB[l4[0X00004]]);end;end;end;end;else if not(T4>=0X0000c)then do if T4>=10 then if T4~=11 then(mB)[l4[2]]={E({},0x01,l4[5])};else BB=l4[5];end;else if T4==0X9 then do repeat local DK,UK=Lc,mB;if#DK>0 then local U7=({});for sW,RW in M,DK do for Fo,fo in M,RW do do if fo[0x01]==UK and fo[2]>=0X0 then local g0=fo[2];if not U7[g0]then U7[g0]={UK[g0]};end;fo[1]=U7[g0];do fo[2]=1;end;end;end;end;end;end;until true;end;return;else mB[l4[0X2]]=J(mB[l4[0X005]],mB[l4[0x4]]);end;end;end;else do if not(T4<0XE)then if T4==15 then else do(mB)[l4[0X00002]]=mB[l4[0X00005]]~=mB[l4[4]];end;end;else if T4~=0X00d then(mB)[l4[2]]=mB[l4[5]]<=mB[l4[0X0004]];else local LH=l4[0X0002];local GH,SH=mB[LH]();if not(GH)then else for Cc=1,l4[0X4]do mB[LH+Cc]=SH[Cc];end;BB=l4[0X5];end;end;end;end;end;end;end;end);if EB then if hB then if ZB~=1 then return mB[vB](E(mB,vB+0X00001,IB));else do return mB[vB]();end;end;elseif vB then return E(mB,vB,ZB);end;else if V(hB)=="string"then do if not(r(hB,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(r(hB,"^.-:%d+: "))then q(hB,0);else q("Luraph Script:"..(Qc[BB-0x0001]or"(internal)").."\058 "..u(hB),0X0);end;else(q)(hB,0X00000);end;end;end;else ic=function(...)local Ui=0X1;local Bi={};local Li=(k and k()or _ENV);local hi={[2]=Vc,[1]=Bi};local ti,Xi=q3(...);local oi=(Li==H and fc or Li);ti=ti-1;for u6=0,ti do if not(ac>u6)then break;else(Bi)[u6]=Xi[u6+0x1];end;end;if not nc then Xi=nil;elseif Ac then Bi[ac]={n=ti>=ac and ti-ac+0x01 or 0,E(Xi,ac+0x001,ti+0X01)};end;local ji=0;if oi==Li then else do if not(s)then do _ENV=oi;end;else s(ic,oi);end;end;end;local ri,Ji,Oi,Gi=c(function()while true do local jg=bc[Ui];local ag=(jg[3]);Ui=Ui+0X1;if not(ag>=26)then if not(ag<0x0000D)then if not(ag>=19)then do if not(ag>=16)then if not(ag>=0X00e)then else if ag==0XF then for n5=jg[0X2],jg[5]do do Bi[n5]=nil;end;end;else do Bi[jg[0X02]]=jg[6];end;end;end;else if not(ag<17)then if ag==18 then(Bi)[2]=oi[jg[6]];jg=bc[Ui];Ui=Ui+1;(Bi)[3]=oi[jg[6]];local sM=(0X2);do Ui=Ui+0x00001;end;do Ui=Ui+0X1;end;jg=bc[Ui];Ui=Ui+1;do Bi[4]=jg[0X6];end;Ui=Ui+1;local cM=(3);do if cM==0 then else ji=sM+cM-1;end;end;local DM=0X03;local QM,ZM=nil,(nil);if cM==0x00001 then do QM,ZM=q3(Bi[sM]());end;else QM,ZM=q3(Bi[sM](E(Bi,sM+0X1,ji)));end;if DM~=1 then if DM==0 then do QM=QM+sM-1;end;ji=QM;else QM=sM+DM-0X2;ji=QM+0X1;end;local lm=0;do for Uf=sM,QM do lm=lm+0X001;(Bi)[Uf]=ZM[lm];end;end;else do ji=sM-1;end;end;Ui=Ui+1;do Ui=Ui+0X1;end;do jg=bc[Ui];end;Ui=Ui+0x1;if Bi[3]==jg[1]then Ui=jg[0X002];end;else Bi[jg[2]]=oi[jg[0X006]];end;else Ui=jg[5];end;end;end;else do if not(ag<22)then if ag>=0x18 then if ag==0X19 then Bi[3]=oi[jg[6]];Ui=Ui+0X1;Ui=Ui+0X1;Ui=Ui+1;ji=3;do Bi[ji]=Bi[ji]();end;do Ui=Ui+0X1;end;Ui=Ui+0X0001;do jg=bc[Ui];end;Ui=Ui+1;if Bi[3]then Ui=jg[5];end;else Bi[4]=oi[jg[6]];do jg=bc[Ui];end;do Ui=Ui+1;end;(Bi)[5]=jg[6];Ui=Ui+1;local nC=(0X4);Bi[nC](Bi[nC+1]);ji=nC-1;jg=bc[Ui];Ui=Ui+0x1;(Bi)[4]=oi[jg[0X00006]];jg=bc[Ui];Ui=Ui+1;local PC=(nil);local uC=(Uc[jg[5]]);local FC=(uC[0X5]);local ZC=#FC;if ZC>0 then PC={};do for df=1,ZC do local Ff=FC[df];if Ff[0x01]==0X0 then PC[df-0X00001]={Bi,Ff[2]};else do(PC)[df-0X01]=jc[Ff[2]];end;end;end;end;(S)(Lc,PC);end;(Bi)[0X005]=e3(uC,PC,oi);do Ui=Ui+0x1;end;nC=4;Bi[nC](Bi[nC+1]);ji=nC-0X1;jg=bc[Ui];Ui=Ui+1;do Ui=jg[5];end;end;else if ag~=0X17 then Bi[2]=oi[jg[6]];jg=bc[Ui];Ui=Ui+0X1;(Bi)[2]=Bi[0x0002][jg[0X1]];Ui=Ui+0X1;do Ui=Ui+0X0001;end;jg=bc[Ui];Ui=Ui+0x00001;if not Bi[2]then do Ui=jg[0x00005];end;end;else hi[jg[0X5]]=Bi[jg[0X02]];end;end;else if ag<20 then(Bi)[0X002]=oi[jg[0x00006]];Ui=Ui+0X1;Ui=Ui+0x01;jg=bc[Ui];do Ui=Ui+0X1;end;(Bi)[0X0003]=oi[jg[0x006]];do Ui=Ui+0X001;end;Ui=Ui+0X1;jg=bc[Ui];Ui=Ui+0x00001;local JA=2;local XA=0x00003;Bi[0X4]=jg[6];do Ui=Ui+1;end;local IA=0x03;do if IA==0 then else do ji=JA+IA-1;end;end;end;local tA,bA=nil,(nil);if IA==1 then do tA,bA=q3(Bi[JA]());end;else tA,bA=q3(Bi[JA](E(Bi,JA+1,ji)));end;if XA==1 then ji=JA-1;else if XA==0x00000 then tA=tA+JA-0x1;ji=tA;else tA=JA+XA-2;ji=tA+0x0001;end;local te=0X0000;for au=JA,tA do do te=te+1;end;do Bi[au]=bA[te];end;end;end;Ui=Ui+1;Ui=Ui+0X1;jg=bc[Ui];Ui=Ui+0X1;do if not(not Bi[0X00002])then else Ui=jg[5];end;end;else if ag~=0x000015 then Bi[4]=oi[jg[6]];jg=bc[Ui];Ui=Ui+1;local OW=(0X4);(Bi)[5]=jg[0X06];do Ui=Ui+0X1;end;(Bi[OW])(Bi[OW+1]);ji=OW-1;jg=bc[Ui];Ui=Ui+1;Bi[4]=oi[jg[6]];do Ui=Ui+1;end;Ui=Ui+1;do jg=bc[Ui];end;local TW=Uc[jg[0X5]];local rW=(TW[5]);Ui=Ui+0X1;local WW=(#rW);local jW=nil;do if not(WW>0)then else jW={};do for xJ=0X1,WW do local vJ=rW[xJ];do if vJ[0x1]~=0x00 then do(jW)[xJ-1]=jc[vJ[2]];end;else jW[xJ-1]={Bi,vJ[2]};end;end;end;end;S(Lc,jW);end;end;Bi[5]=e3(TW,jW,oi);Ui=Ui+1;OW=0x4;Bi[OW](Bi[OW+1]);do ji=OW-1;end;Ui=Ui+1;Ui=Ui+1;do jg=bc[Ui];end;Ui=Ui+1;Ui=jg[5];else if Bi[jg[0X05]]~=jg[1]then Ui=jg[0X002];end;end;end;end;end;end;else if ag<0X006 then if not(ag>=3)then if not(ag<0X1)then do if ag~=0x2 then Bi[2]=oi[jg[6]];jg=bc[Ui];Ui=Ui+1;(Bi)[3]=oi[jg[0x6]];Ui=Ui+0X1;do Ui=Ui+1;end;jg=bc[Ui];local h6=(0x3);do Ui=Ui+1;end;do Bi[4]=jg[6];end;Ui=Ui+1;local X6,w6=0x2,0X3;do if h6==0X0 then else ji=X6+h6-1;end;end;local n6,Q6=nil,(nil);if h6~=0X1 then n6,Q6=q3(Bi[X6](E(Bi,X6+1,ji)));else n6,Q6=q3(Bi[X6]());end;do if w6==0x1 then ji=X6-0X1;else do if w6~=0X0 then n6=X6+w6-0X0002;ji=n6+0x1;else n6=n6+X6-0X001;ji=n6;end;end;local I6=0;for VL=X6,n6 do I6=I6+1;do(Bi)[VL]=Q6[I6];end;end;end;end;jg=bc[Ui];Ui=Ui+0x001;if not(not Bi[2])then else do Ui=jg[0X005];end;end;else do Bi[2]=false;end;jg=bc[Ui];Ui=Ui+1;oi[jg[0X6]]=Bi[0x2];jg=bc[Ui];Ui=Ui+0x1;Bi[2]=oi[jg[0X6]];jg=bc[Ui];Ui=Ui+1;Bi[3]=oi[jg[6]];do jg=bc[Ui];end;Ui=Ui+1;(Bi)[0X0004]=jg[6];Ui=Ui+1;local LO=3;local SO=(2);local GO=0X3;do if LO==0 then else ji=SO+LO-0x1;end;end;local kO,cO=nil,(nil);if LO~=1 then do kO,cO=q3(Bi[SO](E(Bi,SO+0X1,ji)));end;else do kO,cO=q3(Bi[SO]());end;end;if GO~=0X1 then do if GO==0 then kO=kO+SO-1;ji=kO;else kO=SO+GO-0x2;do ji=kO+1;end;end;end;local Bz=0x00000;for r1=SO,kO do Bz=Bz+1;do Bi[r1]=cO[Bz];end;end;else do ji=SO-1;end;end;jg=bc[Ui];Ui=Ui+1;if not(not Bi[2])then else Ui=jg[0X5];end;end;end;else Bi[0X2]=oi[jg[0X00006]];jg=bc[Ui];Ui=Ui+1;(Bi)[2]=Bi[0X0002][jg[1]];Ui=Ui+1;Ui=Ui+1;jg=bc[Ui];Ui=Ui+1;if not(not Bi[2])then else Ui=jg[5];end;end;else do if not(ag<4)then if ag~=0X5 then Bi[0X4]=oi[jg[0X6]];jg=bc[Ui];Ui=Ui+0x001;do(Bi)[5]=jg[0X06];end;local IT=(4);do Ui=Ui+0x0001;end;Bi[IT](Bi[IT+0x1]);ji=IT-0x01;jg=bc[Ui];Ui=Ui+0X1;do Bi[0x4]=oi[jg[0X6]];end;do Ui=Ui+0X00001;end;Ui=Ui+1;jg=bc[Ui];Ui=Ui+1;local AT=(Uc[jg[5]]);local FT=nil;local OT=AT[5];local PT=#OT;if not(PT>0X0)then else FT={};for Z4=1,PT do local Q4=(OT[Z4]);do if Q4[1]==0X00000 then FT[Z4-1]={Bi,Q4[2]};else do FT[Z4-1]=jc[Q4[0x2]];end;end;end;end;(S)(Lc,FT);end;(Bi)[5]=e3(AT,FT,oi);Ui=Ui+0x1;IT=4;(Bi[IT])(Bi[IT+0X1]);ji=IT-1;do jg=bc[Ui];end;Ui=Ui+0X00001;do Ui=jg[0x05];end;else Bi[0X2]=oi[jg[6]];Ui=Ui+1;Ui=Ui+1;jg=bc[Ui];Ui=Ui+0X01;do Bi[0X002]=Bi[2][jg[0X01]];end;Ui=Ui+1;do Ui=Ui+0X1;end;jg=bc[Ui];Ui=Ui+0X01;do if not Bi[2]then Ui=jg[5];end;end;end;else(Bi)[jg[2]]=not Bi[jg[0X5]];end;end;end;else if not(ag<0x09)then if ag>=11 then if ag~=12 then do Bi[2]=oi[jg[6]];end;do jg=bc[Ui];end;Ui=Ui+0X001;(Bi)[0X2]=Bi[0X2][jg[1]];Ui=Ui+0X1;Ui=Ui+1;jg=bc[Ui];Ui=Ui+0x1;(Bi)[2]=Bi[0X2][jg[1]];do jg=bc[Ui];end;Ui=Ui+1;(Bi)[0X2]=Bi[2][jg[1]];Ui=Ui+0x001;Ui=Ui+0X1;jg=bc[Ui];Ui=Ui+0x001;do if not(jg[0x6]<=Bi[2])then do Ui=jg[0x00002];end;end;end;else Bi[0X0]=oi[jg[6]];local MA=3;jg=bc[Ui];local fA=0;Ui=Ui+0X1;Bi[0x1]=oi[jg[0X0006]];Ui=Ui+1;Ui=Ui+1;jg=bc[Ui];Ui=Ui+0X1;(Bi)[2]=jg[0X0006];Ui=Ui+1;Bi[3]=true;do Ui=Ui+0X1;end;local CA=(4);if CA==0X0 then else ji=fA+CA-1;end;local xA,lA=nil,nil;if CA~=0x1 then xA,lA=q3(Bi[fA](E(Bi,fA+1,ji)));else xA,lA=q3(Bi[fA]());end;do if MA==0X1 then do ji=fA-0x1;end;else if MA==0X0000 then xA=xA+fA-0X1;ji=xA;else xA=fA+MA-2;do ji=xA+0X1;end;end;local qK=(0);for S1=fA,xA do qK=qK+0X00001;(Bi)[S1]=lA[qK];end;end;end;jg=bc[Ui];do Ui=Ui+1;end;if Bi[1]==jg[0X1]then do Ui=jg[0X2];end;end;end;else if ag~=0Xa then(Bi)[0X00002]=oi[jg[6]];jg=bc[Ui];Ui=Ui+0X1;Bi[3]=jg[6];local ha=0x2;Ui=Ui+1;(Bi)[ha]=Bi[ha](Bi[ha+0X1]);ji=ha;Ui=Ui+1;Ui=Ui+0X001;jg=bc[Ui];Ui=Ui+1;if not(not Bi[0x2])then else Ui=jg[5];end;else local Mv=Uc[jg[5]];local iv,Av=Mv[0X5],(nil);local Kv=(#iv);if not(Kv>0X000)then else Av={};do for Fb=0X0001,Kv do local mb=iv[Fb];if mb[1]~=0 then(Av)[Fb-0X001]=jc[mb[0X002]];else Av[Fb-1]={Bi,mb[0X00002]};end;end;end;S(Lc,Av);end;Bi[jg[2]]=e3(Mv,Av,oi);end;end;else if not(ag<0X00007)then if ag~=8 then do Bi[2]=oi[jg[0x06]];end;local wM=(0X2);do jg=bc[Ui];end;Ui=Ui+1;local QM=(0X3);do Bi[3]=oi[jg[6]];end;jg=bc[Ui];Ui=Ui+0x1;(Bi)[0X04]=jg[6];Ui=Ui+0X1;local bM=(3);if bM~=0x0 then ji=wM+bM-1;end;local yM,EM=nil,(nil);if bM~=0X00001 then yM,EM=q3(Bi[wM](E(Bi,wM+1,ji)));else yM,EM=q3(Bi[wM]());end;if QM==0X1 then ji=wM-0X1;else do if QM==0X0 then yM=yM+wM-0X1;do ji=yM;end;else do yM=wM+QM-0X2;end;ji=yM+1;end;end;local fJ=(0);for Rc=wM,yM do fJ=fJ+0X00001;Bi[Rc]=EM[fJ];end;end;jg=bc[Ui];do Ui=Ui+0x1;end;if Bi[3]==jg[1]then Ui=jg[0X2];end;else do(Bi)[0X02]=oi[jg[0x06]];end;jg=bc[Ui];Ui=Ui+1;do Bi[0X2]=Bi[2][jg[0X1]];end;Ui=Ui+0x1;Ui=Ui+0X1;jg=bc[Ui];Ui=Ui+1;do if not(not(Bi[2]<jg[0X1]))then else Ui=jg[2];end;end;end;else(Bi)[2]=oi[jg[0x006]];Ui=Ui+0x1;Ui=Ui+0X001;do jg=bc[Ui];end;Ui=Ui+0X01;Bi[2]=Bi[2][jg[0X1]];Ui=Ui+1;Ui=Ui+0X01;do jg=bc[Ui];end;do Ui=Ui+0X00001;end;if not Bi[2]then do Ui=jg[5];end;end;end;end;end;end;else if ag>=0X0027 then if ag>=0X0002D then if not(ag>=0X0030)then if ag>=46 then if ag==47 then Bi[2]=oi[jg[6]];Ui=Ui+0X001;Ui=Ui+0x001;jg=bc[Ui];Ui=Ui+0x001;do(Bi)[2]=Bi[2][jg[1]];end;Ui=Ui+1;Ui=Ui+0x1;jg=bc[Ui];Ui=Ui+0x001;if not(Bi[0x02]<jg[0X1])then do Ui=jg[0X2];end;end;else(Bi)[jg[0X2]]={E({},1,jg[5])};end;else Bi[0X02]=oi[jg[6]];local x7=(0X02);jg=bc[Ui];do Ui=Ui+1;end;(Bi)[0x3]=jg[0x6];Ui=Ui+1;(Bi)[0X004]=true;do Ui=Ui+0X01;end;Bi[x7]=Bi[x7](Bi[x7+0X1],Bi[x7+2]);ji=x7;jg=bc[Ui];Ui=Ui+1;if Bi[0x02]~=jg[0X1]then do Ui=jg[0X0002];end;end;end;else do if ag<50 then if ag==0x31 then Bi[0X02]=oi[jg[6]];jg=bc[Ui];Ui=Ui+1;do(Bi)[2]=Bi[0x2][jg[0X1]];end;do Ui=Ui+1;end;do Ui=Ui+0X00001;end;jg=bc[Ui];Ui=Ui+0X1;if not(not Bi[0X0002])then else Ui=jg[5];end;else(Bi)[2]=oi[jg[6]];do jg=bc[Ui];end;do Ui=Ui+1;end;(Bi)[0x2]=Bi[2][jg[0X1]];jg=bc[Ui];Ui=Ui+0x1;do if not(not Bi[0X2])then else do Ui=jg[5];end;end;end;end;else if ag==51 then Bi[2]=oi[jg[0x6]];jg=bc[Ui];do Ui=Ui+1;end;(Bi)[0X00003]=oi[jg[6]];jg=bc[Ui];Ui=Ui+0X0001;(Bi)[0X4]=jg[6];local b4=3;Ui=Ui+1;local r4,z4=0X2,(0x3);if b4~=0 then ji=r4+b4-0X1;end;local n4,Y4=nil,(nil);if b4~=0X1 then n4,Y4=q3(Bi[r4](E(Bi,r4+0X01,ji)));else n4,Y4=q3(Bi[r4]());end;do if z4==0x01 then do ji=r4-1;end;else if z4==0 then do n4=n4+r4-1;end;ji=n4;else n4=r4+z4-0x2;ji=n4+0X001;end;local Jq=0X0;for uo=r4,n4 do do Jq=Jq+1;end;(Bi)[uo]=Y4[Jq];end;end;end;do jg=bc[Ui];end;Ui=Ui+1;do if not Bi[2]then Ui=jg[5];end;end;else Bi[0X2]=oi[jg[6]];Ui=Ui+1;Ui=Ui+1;do jg=bc[Ui];end;Ui=Ui+1;(Bi)[2]=Bi[0X2][jg[1]];jg=bc[Ui];Ui=Ui+0X1;if not(not Bi[0x00002])then else do Ui=jg[5];end;end;end;end;end;end;else do if ag<0x2a then if not(ag>=0X000028)then(Bi)[0X2]=oi[jg[6]];do Ui=Ui+1;end;do Ui=Ui+1;end;do jg=bc[Ui];end;Ui=Ui+1;Bi[2]=Bi[0x02][jg[0X0001]];jg=bc[Ui];Ui=Ui+1;if not(not(Bi[2]<jg[0x1]))then else Ui=jg[2];end;else if ag~=41 then(Bi)[jg[0X2]]=jg[0X00006];else(Bi)[0x4]=oi[jg[6]];Ui=Ui+1;do Ui=Ui+1;end;jg=bc[Ui];Ui=Ui+0x1;local U6=(4);Bi[5]=jg[6];Ui=Ui+0X1;local z6=nil;Bi[U6](Bi[U6+0X1]);ji=U6-0x1;Ui=Ui+0X1;Ui=Ui+0X1;jg=bc[Ui];Ui=Ui+0x00001;Bi[4]=oi[jg[0x0006]];jg=bc[Ui];Ui=Ui+0x0001;local L6=(Uc[jg[0X00005]]);local q6=(L6[5]);local Y6=#q6;if Y6>0 then z6={};do for HJ=0X1,Y6 do local XJ=q6[HJ];do if XJ[0X00001]==0 then do(z6)[HJ-1]={Bi,XJ[2]};end;else z6[HJ-1]=jc[XJ[2]];end;end;end;end;(S)(Lc,z6);end;do(Bi)[0x5]=e3(L6,z6,oi);end;Ui=Ui+0X1;U6=0X004;(Bi[U6])(Bi[U6+0X1]);ji=U6-0X1;do Ui=Ui+0X1;end;Ui=Ui+1;do jg=bc[Ui];end;Ui=Ui+0X1;Ui=jg[5];end;end;else do if not(ag<0x002b)then if ag==0X2c then Bi[4]=oi[jg[0X0006]];jg=bc[Ui];Ui=Ui+1;Bi[0X05]=jg[6];do Ui=Ui+1;end;local ay,Zy=nil,(4);Bi[Zy](Bi[Zy+0X1]);ji=Zy-1;jg=bc[Ui];Ui=Ui+0X1;(Bi)[4]=oi[jg[6]];do Ui=Ui+0x0001;end;Ui=Ui+1;jg=bc[Ui];Ui=Ui+0X001;local my=Uc[jg[5]];local Ay=(my[5]);local dy=#Ay;if dy>0 then ay={};do for gf=1,dy do local af=Ay[gf];if af[0X0001]==0 then ay[gf-1]={Bi,af[2]};else ay[gf-0x0001]=jc[af[0X2]];end;end;end;S(Lc,ay);end;Bi[0x00005]=e3(my,ay,oi);Ui=Ui+1;Zy=4;Bi[Zy](Bi[Zy+0X00001]);ji=Zy-1;Ui=Ui+0X1;Ui=Ui+1;jg=bc[Ui];Ui=Ui+0X1;Ui=jg[0X5];else Bi[2]=oi[jg[0X00006]];Ui=Ui+1;Ui=Ui+1;do jg=bc[Ui];end;Ui=Ui+1;Bi[0X002]=Bi[0X00002][jg[1]];jg=bc[Ui];do Ui=Ui+0x0001;end;if not(Bi[2]<jg[0X1])then Ui=jg[0x2];end;end;else(Bi)[2]=oi[jg[6]];Ui=Ui+0X01;Ui=Ui+1;jg=bc[Ui];Ui=Ui+1;Bi[2]=Bi[0X0002][jg[1]];do Ui=Ui+1;end;Ui=Ui+1;jg=bc[Ui];Ui=Ui+1;if not(not Bi[2])then else do Ui=jg[0X05];end;end;end;end;end;end;end;else do if ag<0x020 then if ag<29 then if ag<0X1B then Bi[0x4]=oi[jg[0X00006]];jg=bc[Ui];do Ui=Ui+1;end;Bi[4][jg[0x006]]=jg[1];Ui=Ui+0x1;repeat local sC,DC=Lc,(Bi);if#sC>0 then local E4=({});do for JG,CG in M,sC do do for QX,AX in M,CG do if not(AX[0x0001]==DC and AX[0X2]>=0)then else local V_=AX[0X02];if not(not E4[V_])then else E4[V_]={DC[V_]};end;AX[0x1]=E4[V_];(AX)[0X2]=1;end;end;end;end;end;end;until true;return;else do if ag==28 then Bi[2]=oi[jg[6]];Ui=Ui+0X01;Ui=Ui+0X1;jg=bc[Ui];Ui=Ui+0X1;(Bi)[0X2]=Bi[2][jg[1]];jg=bc[Ui];do Ui=Ui+1;end;if not(not Bi[2])then else Ui=jg[5];end;else do Bi[2]=oi[jg[0x6]];end;Ui=Ui+1;Ui=Ui+0X00001;jg=bc[Ui];Ui=Ui+1;(Bi)[0x0002]=Bi[2][jg[0X00001]];Ui=Ui+0x1;Ui=Ui+1;jg=bc[Ui];do Ui=Ui+1;end;(Bi)[2]=Bi[0x00002][jg[1]];Ui=Ui+1;Ui=Ui+0X1;jg=bc[Ui];do Ui=Ui+1;end;if not(jg[0X6]<=Bi[0x2])then Ui=jg[2];end;end;end;end;else do if not(ag>=30)then Bi[2]=oi[jg[0X6]];Ui=Ui+0X01;Ui=Ui+0X00001;jg=bc[Ui];do Ui=Ui+0X1;end;(Bi)[0X02]=Bi[0X2][jg[0X001]];jg=bc[Ui];do Ui=Ui+0x01;end;if not Bi[0X2]then Ui=jg[5];end;else if ag~=31 then do Bi[2]=true;end;jg=bc[Ui];do Ui=Ui+1;end;oi[jg[0x06]]=Bi[0X02];jg=bc[Ui];Ui=Ui+1;do Ui=jg[5];end;else Bi[0X02]=oi[jg[6]];do jg=bc[Ui];end;Ui=Ui+0x1;do(Bi)[0X00002]=Bi[0X2][jg[1]];end;jg=bc[Ui];Ui=Ui+1;do if not(not Bi[2])then else Ui=jg[5];end;end;end;end;end;end;else if not(ag>=0X000023)then if not(ag>=33)then if Bi[jg[0X5]]~=jg[1]then else Ui=jg[0X2];end;else do if ag==34 then do Bi[jg[0X2]]=Bi[jg[5]];end;else repeat local RV,ZV=Lc,Bi;if not(#RV>0X0)then else local m4=({});for A5,F5 in M,RV do for lr,qr in M,F5 do if not(qr[0x1]==ZV and qr[2]>=0)then else local qF=qr[0X2];if not m4[qF]then(m4)[qF]={ZV[qF]};end;(qr)[1]=m4[qF];do(qr)[0X00002]=1;end;end;end;end;end;until true;return;end;end;end;else if ag<37 then if ag~=36 then(Bi)[2]=oi[jg[0X6]];Ui=Ui+0X1;Ui=Ui+0X1;do Ui=Ui+0X1;end;ji=0X2;Bi[ji]();ji=ji-1;jg=bc[Ui];do Ui=Ui+0X00001;end;do Bi[2]=oi[jg[0X06]];end;do Ui=Ui+1;end;Ui=Ui+1;jg=bc[Ui];do Ui=Ui+0x001;end;(Bi[0X0002])[jg[6]]=jg[0X1];Ui=Ui+0x1;do repeat local K5,I5=Lc,(Bi);if not(#K5>0X000)then else local Jj=({});for ss,Xs in M,K5 do do for Hf,vf in M,Xs do if vf[0X1]==I5 and vf[0X2]>=0 then local fU=vf[0X02];if not(not Jj[fU])then else Jj[fU]={I5[fU]};end;vf[0X001]=Jj[fU];do vf[2]=1;end;end;end;end;end;end;until true;end;return;else(Bi)[jg[2]]=jg[6];end;else if ag~=38 then(Bi)[0X0002]=oi[jg[0X6]];Ui=Ui+0X1;do Ui=Ui+0X00001;end;do jg=bc[Ui];end;Ui=Ui+0x1;do Bi[0X0002]=Bi[2][jg[0x00001]];end;Ui=Ui+1;do Ui=Ui+1;end;jg=bc[Ui];Ui=Ui+0X1;if not(Bi[2]<jg[0X1])then Ui=jg[2];end;else Bi[2]=oi[jg[0X0006]];do Ui=Ui+0X1;end;Ui=Ui+0X1;do jg=bc[Ui];end;Ui=Ui+1;(Bi)[2]=Bi[0X2][jg[0X1]];Ui=Ui+0X1;Ui=Ui+0X00001;jg=bc[Ui];do Ui=Ui+1;end;if not Bi[0X02]then do Ui=jg[5];end;end;end;end;end;end;end;end;end;end;end);if ri then if Ji then if Gi==1 then do return Bi[Oi]();end;else do return Bi[Oi](E(Bi,Oi+0X1,ji));end;end;elseif Oi then return E(Bi,Oi,Gi);end;else if V(Ji)=="string"then if r(Ji,"att\101\109p\116\032\116\111\032\121iel\100 acr\111ss\032\109e\116ame\116\104\111\100\047\067%\045c\097\108l\032\098\111\117\110d\097ry")then do return coroutine.yield();end;end;if r(Ji,"^.-:%d+: ")then q("Luraph Script:"..(Qc[Ui-1]or'(\105\110ter\110a\108\041')..": "..u(Ji),0X00);else q(Ji,0);end;else(q)(Ji,0);end;end;end;end;else if Sc==0x055 then ic=function(...)local WG={};local XG=1;local nG=(k and k()or _ENV);local AG,dG=0x0,{[2]=Vc,[1]=WG};local PG,CG=q3(...);PG=PG-1;for vR=0,PG do do if not(ac>vR)then do break;end;else do WG[vR]=CG[vR+0X00001];end;end;end;end;local YG=((nG==H and fc or nG));do if not nc then CG=nil;elseif not(Ac)then else(WG)[ac]={n=PG>=ac and PG-ac+1 or 0x0,E(CG,ac+0X1,PG+1)};end;end;do if YG~=nG then if s then s(ic,YG);else _ENV=YG;end;end;end;local fG,TG,KG,UG=c(function()do while true do local Jb=bc[XG];local Kb=Jb[0X3];XG=XG+1;do if Kb>=14 then if not(Kb>=0x000015)then do if not(Kb>=17)then if Kb>=0xF then if Kb==0X0010 then do XG=Jb[5];end;else do WG[0X0]=YG[Jb[6]];end;Jb=bc[XG];do XG=XG+1;end;do WG[0]=WG[0X0][Jb[1]];end;Jb=bc[XG];XG=XG+0x1;if not WG[0]then XG=Jb[0X005];end;end;else WG[Jb[0X2]]=true;end;else if Kb<0X0013 then if Kb~=0X012 then(WG)[0]=YG[Jb[6]];XG=XG+1;local ps,Rs=jc[1],(0);do XG=XG+1;end;do Jb=bc[XG];end;XG=XG+1;(WG)[0X0001]=Jb[6];do XG=XG+0x001;end;do WG[Rs]=WG[Rs](WG[Rs+1]);end;do AG=Rs;end;XG=XG+1;XG=XG+1;do XG=XG+0x1;end;do(WG)[1]=ps[1][ps[0X0002]];end;do Jb=bc[XG];end;XG=XG+1;WG[1]=WG[1][Jb[0x0001]];XG=XG+1;do(WG)[2]=WG[0X0];end;XG=XG+1;Rs=0X1;(WG)[Rs]=WG[Rs](WG[Rs+0X1]);AG=Rs;Jb=bc[XG];XG=XG+1;if not(not WG[0X01])then else XG=Jb[5];end;else do(WG)[0]=YG[Jb[0X6]];end;Jb=bc[XG];local Nh=(0X000);XG=XG+1;(WG)[1]=Jb[6];XG=XG+1;do WG[Nh]=WG[Nh](WG[Nh+1]);end;AG=Nh;do XG=XG+1;end;do XG=XG+0X1;end;Jb=bc[XG];XG=XG+0X1;do if not WG[0X0]then XG=Jb[5];end;end;end;else if Kb~=20 then local My=Uc[Jb[5]];local vy,xy=My[0X5],nil;local Uy=#vy;if not(Uy>0X0)then else do xy={};end;for CF=0X00001,Uy do local lF=vy[CF];if lF[1]~=0 then xy[CF-1]=jc[lF[2]];else do xy[CF-0X1]={WG,lF[0X0002]};end;end;end;(S)(Lc,xy);end;WG[Jb[0X2]]=e3(My,xy,YG);else do WG[Jb[2]]=YG[Jb[0X0006]];end;end;end;end;end;else do if not(Kb>=0X18)then if Kb>=0X016 then do if Kb~=0x17 then do if WG[Jb[0X05]]==Jb[1]then else XG=Jb[0X2];end;end;else(WG)[0x0]=YG[Jb[6]];Jb=bc[XG];XG=XG+1;(WG)[0X1]=Jb[0X00006];XG=XG+1;local Na=(0);(WG)[Na]=WG[Na](WG[Na+0X001]);AG=Na;do Jb=bc[XG];end;XG=XG+1;if not(not WG[0x000])then else XG=Jb[5];end;end;end;else(WG)[Jb[2]]=WG[Jb[0X5]]>WG[Jb[4]];end;else if not(Kb<0X001a)then if Kb~=27 then else(WG)[0X00000]=YG[Jb[6]];XG=XG+0X00001;XG=XG+1;Jb=bc[XG];XG=XG+0X001;local fu=0;(WG)[0X1]=Jb[6];XG=XG+0X1;WG[fu](WG[fu+1]);AG=fu-0X001;Jb=bc[XG];do XG=XG+1;end;XG=Jb[5];end;else if Kb==0X19 then do(WG)[0x0]=YG[Jb[0X06]];end;XG=XG+1;XG=XG+1;do XG=XG+1;end;AG=0X0;(WG)[AG]=WG[AG]();Jb=bc[XG];XG=XG+1;if not(Jb[0X00006]<=WG[0X0])then XG=Jb[0X2];end;else local Ye=(Jb[2]);local ae=(P(function(...)C();for z9,A9,D9,c9,v9,K9,V9,U9,d9,h9 in...do C(true,{z9,A9,D9,c9,v9,K9,V9,U9,d9,h9});end;end));ae(WG[Ye],WG[Ye+0x0001],WG[Ye+0X02]);AG=Ye;(WG)[Ye]=ae;do XG=Jb[5];end;end;end;end;end;end;else if not(Kb>=0x0007)then do if Kb<3 then if Kb>=1 then if Kb~=2 then for MZ=Jb[2],Jb[0X00005]do(WG)[MZ]=nil;end;else repeat local VI,HI=Lc,WG;if not(#VI>0)then else local cM=({});for KE,FE in M,VI do for Vj,Xj in M,FE do if not(Xj[0X1]==HI and Xj[2]>=0)then else local nY=Xj[0X2];if not cM[nY]then(cM)[nY]={HI[nY]};end;do Xj[0X01]=cM[nY];end;(Xj)[2]=0x1;end;end;end;end;until true;return;end;else(WG)[Jb[0X2]]={E({},1,Jb[0x5])};end;else if Kb>=5 then do if Kb~=6 then WG[Jb[0X2]]=#WG[Jb[5]];else local Ny=(Jb[0x2]);local by=(WG[Ny+0X02]);local Oy,zy=WG[Ny],(WG[Ny+1]);(WG)[Ny]=P(function()for GS=Oy,zy,by do(C)(true,GS);end;end);XG=Jb[5];end;end;else do if Kb==0X4 then do(WG)[0]=YG[Jb[0X6]];end;local gm=0x00;XG=XG+0x1;XG=XG+0x1;Jb=bc[XG];XG=XG+1;local Rm=(WG[0]);do WG[gm+1]=Rm;end;(WG)[gm]=Rm[Jb[0X1]];Jb=bc[XG];XG=XG+1;(WG)[2]=Jb[6];do Jb=bc[XG];end;do XG=XG+0X1;end;WG[3]=Jb[0X6];XG=XG+1;gm=0;AG=gm+4-1;(WG)[gm]=WG[gm](E(WG,gm+0X1,AG));AG=gm;Jb=bc[XG];XG=XG+0x0001;do if not(not WG[0X00])then else XG=Jb[0X05];end;end;else local xO=(jc[1]);(WG)[0X1]=xO[0X1][xO[2]];do Jb=bc[XG];end;XG=XG+1;WG[0X1]=WG[1][Jb[0X0001]];XG=XG+0X1;WG[0X00002]=WG[0X00000];XG=XG+0X001;do xO=jc[0];end;WG[0x3]=xO[0X00001][xO[0X2]];XG=XG+1;XG=XG+1;local lO=(1);XG=XG+0X1;(WG[lO])(WG[lO+1],WG[lO+2]);AG=lO-1;Jb=bc[XG];XG=XG+1;XG=Jb[0X5];end;end;end;end;end;else if not(Kb<0Xa)then if Kb>=12 then do if Kb~=0x0d then do if not(WG[Jb[2]])then else XG=Jb[5];end;end;else WG[0]=YG[Jb[0X6]];XG=XG+0X001;XG=XG+0X00001;do Jb=bc[XG];end;XG=XG+0X1;do WG[0X0]=WG[0][Jb[1]];end;Jb=bc[XG];XG=XG+0X00001;if not(not WG[0X0000])then else XG=Jb[0x005];end;end;end;else if Kb==11 then(WG)[0]=YG[Jb[0X6]];Jb=bc[XG];XG=XG+0X1;(WG)[0X1]=Jb[0X6];XG=XG+1;local ss=(0);WG[ss]=WG[ss](WG[ss+0X1]);AG=ss;XG=XG+0X1;XG=XG+1;Jb=bc[XG];do XG=XG+1;end;if not(not WG[0X0])then else XG=Jb[0X5];end;else WG[Jb[0x02]]=Jb[6];end;end;else if not(Kb<0X008)then if Kb==9 then(WG)[0]=YG[Jb[6]];do XG=XG+0X1;end;XG=XG+0X1;Jb=bc[XG];do XG=XG+0X001;end;do WG[0X0]=WG[0X00][Jb[1]];end;Jb=bc[XG];XG=XG+1;do if not WG[0]then XG=Jb[5];end;end;else(WG)[0]=YG[Jb[0X6]];XG=XG+1;do AG=0X0;end;(WG)[AG]=WG[AG]();Jb=bc[XG];XG=XG+0X1;WG[0X1]=YG[Jb[0x0006]];do XG=XG+1;end;XG=XG+0x00001;XG=XG+0X00001;WG[0]=WG[0X000]-WG[0x001];Jb=bc[XG];XG=XG+0X01;if Jb[6]<WG[0]then XG=Jb[2];end;end;else local oH=jc[0];(WG)[0X1]=oH[1][oH[0X2]];XG=XG+1;XG=XG+0X1;local jH=(1);Jb=bc[XG];XG=XG+1;local LH=WG[1];WG[jH+1]=LH;WG[jH]=LH[Jb[0X01]];XG=XG+1;jH=1;do WG[jH]=WG[jH](WG[jH+0X0001]);end;AG=jH;do XG=XG+1;end;XG=XG+1;Jb=bc[XG];XG=XG+0X1;if not(not WG[0x0001])then else do XG=Jb[0X5];end;end;end;end;end;end;end;end;end;end);if not(fG)then if V(TG)~="string"then q(TG,0);else if r(TG,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(TG,"^.-\058\037\100\043\058 "))then(q)(TG,0);else q("L\117\114\097p\104 \083cript\058"..(Qc[XG-0X001]or'\040int\101\114n\097l\041')..": "..u(TG),0);end;end;else if TG then if UG~=0X1 then return WG[KG](E(WG,KG+1,AG));else return WG[KG]();end;elseif KG then return E(WG,KG,UG);end;end;end;else ic=function(...)local bY,rY=1,({});local LY=0;local jY=((k and k()or _ENV));local PY,NY=(jY==H and fc or jY),({[2]=Vc,[1]=rY});local TY,GY=q3(...);do TY=TY-0X01;end;do for PQ=0X000,TY do if ac>PQ then(rY)[PQ]=GY[PQ+1];else do break;end;end;end;end;if not nc then GY=nil;elseif Ac then(rY)[ac]={n=TY>=ac and TY-ac+1 or 0,E(GY,ac+0X1,TY+0X001)};end;if PY~=jY then if not(s)then _ENV=PY;else(s)(ic,PY);end;end;local VY,CY,KY,RY=c(function()while true do local B9=(bc[bY]);local H9=(B9[0x03]);bY=bY+1;do if H9<0x007 then if H9>=0X00003 then if not(H9>=0x005)then if H9~=0X4 then local tD,ID=Uc[B9[0X5]],(nil);local HD=(tD[5]);local jD=#HD;if not(jD>0)then else do ID={};end;do for ds=1,jD do local ms=(HD[ds]);if ms[1]~=0X00 then do ID[ds-1]=jc[ms[2]];end;else ID[ds-1]={rY,ms[0X002]};end;end;end;(S)(Lc,ID);end;rY[B9[0X2]]=e3(tD,ID,PY);else do bY=B9[0X5];end;end;else if H9~=0X006 then if not(rY[B9[5]]<rY[B9[0X00004]])then else bY=B9[2];end;else do rY[B9[2]]=B9[0x6];end;end;end;else if H9<0X1 then do for Cu=B9[2],B9[5]do do rY[Cu]=nil;end;end;end;else do if H9~=2 then rY[B9[2]]=rY[B9[0X5]]<rY[B9[0X4]];else rY[0]=PY[B9[6]];bY=bY+0X00001;LY=0;rY[LY]=rY[LY]();do bY=bY+1;end;do bY=bY+1;end;B9=bc[bY];bY=bY+0X1;do(PY)[B9[0X0006]]=rY[0];end;bY=bY+1;repeat local rf,hf=Lc,rY;do if#rf>0 then local sn=({});do for A9,k9 in M,rf do for KH,fH in M,k9 do if fH[0X1]==hf and fH[0X2]>=0X0 then local Iv=fH[2];if not sn[Iv]then(sn)[Iv]={hf[Iv]};end;(fH)[1]=sn[Iv];fH[2]=0X01;end;end;end;end;end;end;until true;return;end;end;end;end;else if H9>=0XB then do if H9<0xd then if H9~=0X000C then(rY)[B9[2]]=PY[B9[6]];else end;else if H9==0Xe then(rY)[B9[0X2]]=-rY[B9[0X05]];else do if not(not rY[B9[0X2]])then else bY=B9[0X05];end;end;end;end;end;else if not(H9<0X9)then if H9~=10 then rY[B9[0X2]]={E({},0x01,B9[0X5])};else do rY[B9[2]]=rY[B9[0X005]]%rY[B9[0x0004]];end;end;else do if H9==8 then if rY[B9[2]]then bY=B9[5];end;else if not(rY[B9[0x005]]<=rY[B9[4]])then else bY=B9[2];end;end;end;end;end;end;end;end;end);if not(VY)then if V(CY)~="\115\116\114i\110\103"then q(CY,0);else if r(CY,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if r(CY,'\094\046\045:%\100\043\058 ')then q("Luraph Script:"..(Qc[bY-1]or'(i\110\116e\114\110\097l\041')..':\032'..u(CY),0X0);else(q)(CY,0);end;end;else if CY then if RY==0x1 then return rY[KY]();else return rY[KY](E(rY,KY+0X0001,LY));end;elseif KY then return E(rY,KY,RY);end;end;end;end;end;end;end;end;end;end;else if not(Sc<31)then if not(Sc>=0x0002F)then do if not(Sc<0X000027)then if Sc<0X2b then do if Sc<0X29 then if Sc==0x028 then ic=function(...)local Am,rm=0,{};local km=(k and k()or _ENV);local am={[2]=Vc,[1]=rm};local um,Jm=q3(...);local Nm=0x1;local Wm=(km==H and fc or km);um=um-1;for Mp=0X0,um do if ac>Mp then rm[Mp]=Jm[Mp+0x01];else break;end;end;if not nc then do Jm=nil;end;elseif not(Ac)then else rm[ac]={n=um>=ac and um-ac+0X1 or 0,E(Jm,ac+0X1,um+1)};end;if Wm~=km then if not(s)then _ENV=Wm;else(s)(ic,Wm);end;end;local fm,gm,Sm,Pm=c(function()while true do local Of=bc[Nm];local uf=(Of[3]);do Nm=Nm+1;end;if uf>=6 then do if not(uf>=9)then do if uf>=0X7 then if uf~=8 then rm[Of[0X2]]=Q(rm[Of[5]]);else local Gk,zk=Uc[Of[5]],(nil);local Mk=Gk[0x00005];local rk=(#Mk);if rk>0X0 then zk={};for uk=0X1,rk do local dk=(Mk[uk]);if dk[0X0001]==0x0 then do(zk)[uk-1]={rm,dk[2]};end;else zk[uk-1]=jc[dk[0X2]];end;end;(S)(Lc,zk);end;(rm)[Of[2]]=e3(Gk,zk,Wm);end;else end;end;else if not(uf<0X0000b)then if uf~=12 then do rm[Of[2]]=Wm[Of[6]];end;else(rm)[Of[2]]=rm[Of[5]]<rm[Of[0X4]];end;else if uf~=0Xa then do(rm)[Of[0X2]]={E({},1,Of[5])};end;else rm[Of[0x2]]=am[Of[5]];end;end;end;end;else if uf<0X0003 then if uf>=0X0001 then if uf==2 then(rm)[Of[0X002]]=o(rm[Of[0X5]],rm[Of[4]]);else rm[0X0]=Wm[Of[6]];Nm=Nm+1;Nm=Nm+0x1;local Qp=(0);Of=bc[Nm];Nm=Nm+1;local Lp=rm[0];(rm)[Qp+1]=Lp;(rm)[Qp]=Lp[Of[0X1]];Of=bc[Nm];Nm=Nm+0X0001;rm[0X2]=Of[0x6];Nm=Nm+0X00001;do Qp=0;end;(rm)[Qp]=rm[Qp](rm[Qp+0X001],rm[Qp+0X0002]);Am=Qp;Of=bc[Nm];Nm=Nm+0X001;do(rm)[1]=Wm[Of[6]];end;Nm=Nm+1;Nm=Nm+1;Of=bc[Nm];Nm=Nm+0X1;do(rm)[0X1]=rm[1][Of[0x00001]];end;Of=bc[Nm];local Gp=(Uc[Of[0X0005]]);Nm=Nm+1;local Ep=(nil);local wp=(Gp[0x5]);local jp=#wp;if jp>0X0 then Ep={};for kW=1,jp do local qW=(wp[kW]);if qW[0x0001]==0x0 then(Ep)[kW-1]={rm,qW[2]};else do Ep[kW-0X1]=jc[qW[0X2]];end;end;end;S(Lc,Ep);end;rm[2]=e3(Gp,Ep,Wm);Nm=Nm+0X1;Qp=0X001;(rm[Qp])(rm[Qp+0X00001]);do Am=Qp-0X1;end;do Nm=Nm+1;end;do repeat local uU,tU=Lc,rm;if#uU>0 then local AD={};for oC,sC in M,uU do for GM,dM in M,sC do if dM[1]==tU and dM[2]>=0x0 then local gC=(dM[0X0002]);if not AD[gC]then AD[gC]={tU[gC]};end;dM[1]=AD[gC];do(dM)[0x2]=0x0001;end;end;end;end;end;until true;end;do return;end;end;else Nm=Of[0x5];end;else if uf>=0x00004 then if uf~=0X5 then(rm)[Of[2]]=Of[0X6];else local Fr=Of[5];local Rr=rm[Fr];for sF=Fr+1,Of[4]do do Rr=Rr..rm[sF];end;end;rm[Of[0X0002]]=Rr;end;else rm[Of[2]]=rm[Of[5]]/rm[Of[0X4]];end;end;end;end;end);if fm then if gm then if Pm~=0X1 then return rm[Sm](E(rm,Sm+0X1,Am));else return rm[Sm]();end;elseif Sm then return E(rm,Sm,Pm);end;else if V(gm)=="string"then if not(r(gm,"atte\109\112t \116\111\032\121\105\101l\100\032\097\099\114\111\115s m\101ta\109e\116\104\111\100\047\067\037\045\099\097\108l\032\098\111u\110\100\097\114\121"))then else return coroutine.yield();end;if r(gm,"^.-:%d+: ")then q("Luraph Script:"..(Qc[Nm-1]or'\040\105\110\116\101\114n\097\108\041')..": "..u(gm),0);else q(gm,0X0);end;else q(gm,0X0);end;end;end;else ic=function(...)local el,Pl=0x1,({});local Xl=((k and k()or _ENV));local Al={[2]=Vc,[1]=Pl};local ol=((Xl==H and fc or Xl));local ql,nl=q3(...);ql=ql-1;do for B4=0,ql do if not(ac>B4)then break;else Pl[B4]=nl[B4+0X00001];end;end;end;do if not nc then nl=nil;elseif not(Ac)then else Pl[ac]={n=ql>=ac and ql-ac+1 or 0X0000,E(nl,ac+1,ql+1)};end;end;if ol~=Xl then if not(s)then _ENV=ol;else(s)(ic,ol);end;end;local Nl=0;while true do local KA=(bc[el]);do el=el+0X1;end;local PA=(KA[0X3]);do return(function(v,W,...)return Client.PlayerGui.Main.Quest.Visible;end)(Pl,jc,...);end;end;end;end;else if Sc==0X2A then ic=function(...)local ff=1;local Hf={};local Uf=(k and k()or _ENV);local uf,Gf=q3(...);local wf=((Uf==H and fc or Uf));local Af=({[2]=Vc,[1]=Hf});uf=uf-0X00001;for WD=0,uf do if ac>WD then(Hf)[WD]=Gf[WD+0x1];else break;end;end;if not nc then do Gf=nil;end;elseif not(Ac)then else(Hf)[ac]={n=uf>=ac and uf-ac+1 or 0,E(Gf,ac+1,uf+0X001)};end;local bf=(0);do if wf~=Uf then if s then s(ic,wf);else _ENV=wf;end;end;end;while true do local Yy=(bc[ff]);ff=ff+0X001;local oy=Yy[3];return(function(x,L,...)local e=x[0];if e==""then return"Fruitless";end;local j=string.match(e,"%-(.+)");if j then return j;end;return e;end)(Hf,jc,...);end;end;else ic=function(...)local h1=0;local I1={};local t1=(1);local n1=({[2]=Vc,[1]=I1});local N1=((k and k()or _ENV));local K1,s1=q3(...);K1=K1-1;for vn=0,K1 do do if ac>vn then(I1)[vn]=s1[vn+0X00001];else do break;end;end;end;end;local z1=(N1==H and fc or N1);do if not nc then s1=nil;elseif not(Ac)then else I1[ac]={n=K1>=ac and K1-ac+1 or 0,E(s1,ac+1,K1+1)};end;end;if z1==N1 then else do if not(s)then _ENV=z1;else s(ic,z1);end;end;end;local y1,o1,X1,w1=c(function()while true do local Pn=bc[t1];local jn=Pn[0X3];t1=t1+1;do if not(jn>=0X8)then do if not(jn<4)then do if jn<6 then do if jn~=5 then I1[2]=z1[Pn[6]];Pn=bc[t1];t1=t1+0X01;(I1)[0X3]=z1[Pn[6]];do t1=t1+0X1;end;t1=t1+0X1;t1=t1+0X00001;local Tr=(0x3);(I1)[4]=I1[1];do t1=t1+0X1;end;local Or=(0X2);do h1=Or+Tr-0X1;end;repeat local Bl,yl=Lc,I1;if#Bl>0 then local I9={};do for lM,BM in M,Bl do for St,it in M,BM do if not(it[1]==yl and it[2]>=0X0000)then else local R7=it[2];do if not(not I9[R7])then else I9[R7]={yl[R7]};end;end;(it)[1]=I9[R7];it[2]=0X1;end;end;end;end;end;until true;return true,Or,Tr;else do(I1)[Pn[0X2]]=Pn[0X6];end;end;end;else if jn~=7 then do I1[Pn[2]]=I1[Pn[5]]*I1[Pn[0x4]];end;else I1[Pn[2]]={E({},1,Pn[0X005])};end;end;end;else do if not(jn>=2)then if jn~=1 then I1[Pn[2]]=z1[Pn[0X6]];else(z1)[Pn[6]]=I1[Pn[0X2]];end;else do if jn~=3 then I1[Pn[0X2]]=I1[Pn[5]][I1[Pn[4]]];else repeat local lM,GM=Lc,I1;if#lM>0X0 then local mk=({});for ot,ut in M,lM do for A9,u9 in M,ut do if not(u9[0X1]==GM and u9[0X02]>=0X000)then else local C4=u9[2];do if not(not mk[C4])then else mk[C4]={GM[C4]};end;end;(u9)[1]=mk[C4];u9[2]=1;end;end;end;end;until true;return false,Pn[0X2],h1;end;end;end;end;end;end;else if not(jn<0X000c)then if not(jn<14)then do if jn>=15 then do if jn~=16 then else do repeat local Gw,qw=Lc,(I1);if not(#Gw>0X000)then else local Jn=({});for Wt,vt in M,Gw do for pJ,cJ in M,vt do if not(cJ[0x0001]==qw and cJ[2]>=0)then else local yD=cJ[0X2];if not(not Jn[yD])then else do Jn[yD]={qw[yD]};end;end;cJ[1]=Jn[yD];(cJ)[2]=1;end;end;end;end;until true;end;return;end;end;else do t1=Pn[5];end;end;end;else if jn~=13 then(I1)[Pn[2]]=I1[Pn[0X5]]>=I1[Pn[0X4]];else local iF=Uc[Pn[5]];local yF,QF=iF[0x05],nil;local eF=(#yF);do if eF>0 then do QF={};end;do for FL=0X1,eF do local nL=yF[FL];if nL[1]==0 then do QF[FL-0X1]={I1,nL[2]};end;else QF[FL-1]=jc[nL[2]];end;end;end;(S)(Lc,QF);end;end;do(I1)[Pn[2]]=e3(iF,QF,z1);end;end;end;else if jn<10 then if jn~=0X0009 then(I1)[Pn[2]]=J(I1[Pn[0x05]],I1[Pn[4]]);else I1[Pn[0x2]]=I1[Pn[5]]<=I1[Pn[0X4]];end;else do if jn==11 then(I1)[Pn[0X2]]=#I1[Pn[5]];else(I1)[Pn[0X0002]]=o(I1[Pn[5]],I1[Pn[4]]);end;end;end;end;end;end;end;end);if y1 then do if o1 then if w1==1 then return I1[X1]();else return I1[X1](E(I1,X1+0X1,h1));end;elseif not(X1)then else return E(I1,X1,w1);end;end;else if V(o1)~="st\114in\103"then q(o1,0x00);else if r(o1,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(o1,"^.-:%d+: "))then(q)(o1,0);else q('Lur\097ph\032S\099\114\105p\116:'..(Qc[t1-0x1]or"(internal)")..":\032"..u(o1),0);end;end;end;end;end;end;end;else if Sc<0X00002d then if Sc==0X0002c then ic=function(...)local s7,Q7,S7=0X01,{},(0X0000);local i7=({[1]=Q7,[2]=Vc});local x7=((k and k()or _ENV));local n7=(x7==H and fc or x7);local A7,b7=q3(...);A7=A7-0X01;for hW=0,A7 do do if ac>hW then Q7[hW]=b7[hW+1];else break;end;end;end;if not nc then b7=nil;elseif Ac then(Q7)[ac]={n=A7>=ac and A7-ac+0x00001 or 0,E(b7,ac+1,A7+1)};end;if n7~=x7 then if s then s(ic,n7);else _ENV=n7;end;end;local B7,g7,X7,P7=c(function()while true do local M0=bc[s7];local g0=M0[0X3];do s7=s7+0X01;end;if not(g0>=12)then if not(g0<6)then if not(g0>=0x0009)then do if g0>=0X7 then if g0~=8 then repeat local uk,Qk=Lc,(Q7);do if not(#uk>0X0)then else local Ad={};for HB,yB in M,uk do for Aj,sj in M,yB do do if sj[0X1]==Qk and sj[0X2]>=0x0 then local ra=(sj[0X00002]);do if not(not Ad[ra])then else Ad[ra]={Qk[ra]};end;end;(sj)[0x001]=Ad[ra];sj[2]=1;end;end;end;end;end;end;until true;local Wi=(M0[0X2]);return false,Wi,Wi;else do(Q7)[M0[2]]={E({},0X1,M0[0X05])};end;end;else n7[M0[0X6]]=Q7[M0[0X02]];end;end;else if g0<0Xa then(Q7)[M0[2]]=Q7[M0[5]]+Q7[M0[0X4]];else if g0~=0X0000b then if not(not Q7[M0[2]])then else s7=M0[5];end;else(Q7)[M0[2]]=Q7[M0[0X005]];end;end;end;else do if not(g0<3)then if g0>=4 then do if g0~=5 then(Q7)[M0[0X2]]=n7[M0[0x6]];else local Ha,Ga=0x4,(Q7[0X03]);(Q7)[Ha+1]=Ga;Q7[Ha]=Ga[M0[1]];s7=s7+1;(Q7)[0X00006]=Q7[0x1];s7=s7+1;Ha=4;do(Q7)[Ha]=Q7[Ha](Q7[Ha+0X1],Q7[Ha+0x002]);end;do S7=Ha;end;M0=bc[s7];do s7=s7+1;end;do s7=M0[0X5];end;end;end;else(Q7)[M0[2]]=Q7[M0[5]][Q7[M0[4]]];end;else if not(g0<1)then if g0~=0X002 then else(Q7)[M0[2]]=Q7[M0[5]]<=Q7[M0[4]];end;else local Ta=M0[2];local Ua,La=Q7[Ta]();if Ua then s7=M0[5];do Q7[Ta+3]=La;end;end;end;end;end;end;else if g0<18 then if g0<15 then do if not(g0<13)then if g0==14 then do Q7[M0[0X2]]=M0[6];end;else Q7[M0[0x2]]=Q7[M0[5]]*Q7[M0[0X0004]];end;else(Q7)[M0[0x2]]=o(Q7[M0[0X5]],Q7[M0[4]]);end;end;else if not(g0<16)then if g0==0X11 then Q7[2]=n7[M0[6]];do M0=bc[s7];end;s7=s7+1;local xM=(0X2);(Q7)[2]=Q7[2][M0[1]];M0=bc[s7];s7=s7+0X1;Q7[2]=Q7[0X2][M0[1]];do M0=bc[s7];end;s7=s7+0X1;Q7[0X2]=Q7[2][M0[1]];s7=s7+1;local pM=3;s7=s7+0X1;M0=bc[s7];s7=s7+1;local ZM=(Q7[0x2]);Q7[pM+0X01]=ZM;Q7[pM]=ZM[M0[1]];M0=bc[s7];s7=s7+0X1;do Q7[5]=n7[M0[6]];end;s7=s7+1;(Q7)[0X6]=Q7[0];s7=s7+0X00001;do pM=5;end;local tM=(0);if xM~=0X0 then do S7=pM+xM-1;end;end;local WM,EM=nil,(nil);if xM~=0X001 then WM,EM=q3(Q7[pM](E(Q7,pM+0X00001,S7)));else WM,EM=q3(Q7[pM]());end;if tM~=0X0001 then do if tM~=0X00 then WM=pM+tM-0X2;S7=WM+0X1;else WM=WM+pM-0X0001;S7=WM;end;end;local Zi=(0);for z0=pM,WM do do Zi=Zi+0X1;end;Q7[z0]=EM[Zi];end;else do S7=pM-0x1;end;end;s7=s7+0X001;pM=3;(Q7)[pM]=Q7[pM](E(Q7,pM+0X1,S7));do S7=pM;end;s7=s7+1;s7=s7+1;s7=s7+1;(Q7)[4]=Q7[3];M0=bc[s7];do s7=s7+0X1;end;do if not(not Q7[4])then else s7=M0[0X05];end;end;else local Tg,Og=Uc[M0[0X0005]],(nil);local yg=Tg[5];local rg=#yg;do if rg>0 then Og={};for jJ=1,rg do local iJ=(yg[jJ]);if iJ[0X1]==0X00 then do(Og)[jJ-1]={Q7,iJ[0X2]};end;else do(Og)[jJ-1]=jc[iJ[2]];end;end;end;S(Lc,Og);end;end;Q7[M0[2]]=e3(Tg,Og,n7);end;else Q7[M0[0x2]]=T(Q7[M0[5]],Q7[M0[0X4]]);end;end;else if g0<0x0015 then if g0>=19 then if g0==0x0014 then do s7=M0[0X5];end;else(Q7)[5]=Q7[0X4][M0[0X1]];do s7=s7+0X00001;end;s7=s7+1;M0=bc[s7];s7=s7+0X1;(Q7)[0X005]=Q7[5][M0[0x00001]];M0=bc[s7];s7=s7+0X00001;(Q7)[0X5]=Q7[5][M0[1]];do M0=bc[s7];end;s7=s7+0X1;Q7[0X5]=Q7[0x5]~=M0[1];M0=bc[s7];s7=s7+1;s7=M0[0X5];end;else if not(not(Q7[M0[0X00005]]<=Q7[M0[4]]))then else do s7=M0[2];end;end;end;else if g0>=23 then if g0~=24 then repeat local sv,iv=Lc,Q7;if not(#sv>0X00000)then else local nT={};for Dc,tc in M,sv do for Jn,Tn in M,tc do if Tn[0X0001]==iv and Tn[2]>=0 then local PR=(Tn[2]);if not(not nT[PR])then else nT[PR]={iv[PR]};end;(Tn)[1]=nT[PR];Tn[2]=1;end;end;end;end;until true;return;else do for qo=M0[2],M0[5]do(Q7)[qo]=nil;end;end;end;else if g0==22 then(Q7)[M0[2]]=Q7[M0[0X5]]-Q7[M0[0X4]];else if not(Q7[M0[5]]<Q7[M0[4]])then else s7=M0[2];end;end;end;end;end;end;end;end);if B7 then if g7 then if P7==1 then return Q7[X7]();else return Q7[X7](E(Q7,X7+0X1,S7));end;elseif X7 then return E(Q7,X7,P7);end;else do if V(g7)=="string"then if not(r(g7,"att\101\109p\116\032to \121\105\101l\100\032ac\114oss\032m\101t\097\109e\116\104\111d\047C%-ca\108\108 \098\111un\100\097\114\121"))then else return coroutine.yield();end;if not(r(g7,"^.-:%d+: "))then(q)(g7,0);else(q)("L\117\114\097p\104 S\099r\105p\116\058"..(Qc[s7-0X1]or"(\105ntern\097\108\041")..": "..u(g7),0X000);end;else q(g7,0);end;end;end;end;else ic=function(...)local TG=1;local pG=({});local aG=(k and k()or _ENV);local FG,ZG=q3(...);local HG={[1]=pG,[2]=Vc};local UG=(0);do FG=FG-0X1;end;local qG=(aG==H and fc or aG);for xS=0,FG do if not(ac>xS)then break;else pG[xS]=ZG[xS+0X1];end;end;if not nc then ZG=nil;elseif Ac then do(pG)[ac]={n=FG>=ac and FG-ac+1 or 0X0,E(ZG,ac+0X1,FG+1)};end;end;do if qG~=aG then if not(s)then _ENV=qG;else(s)(ic,qG);end;end;end;local vG,hG,VG,LG=c(function()while true do local di=bc[TG];local wi=di[3];TG=TG+0X1;if wi>=10 then do if wi<0Xf then if not(wi<12)then if not(wi>=13)then pG[di[0X2]]=pG[di[5]]/pG[di[4]];else if wi==14 then local PE=Uc[di[0X5]];local eE=(PE[0X00005]);local SE,KE=#eE,nil;if SE>0X000 then do KE={};end;do for MG=1,SE do local CG=(eE[MG]);if CG[1]==0 then do(KE)[MG-0x0001]={pG,CG[2]};end;else do KE[MG-1]=jc[CG[0X2]];end;end;end;end;(S)(Lc,KE);end;pG[di[0X2]]=e3(PE,KE,qG);else do for Wy=di[2],di[0X05]do(pG)[Wy]=nil;end;end;end;end;else do if wi~=11 then else local l7=(di[0X2]);local o7,B7=pG[l7]();do if not(o7)then else TG=di[0X005];pG[l7+3]=B7;end;end;end;end;end;else do if not(wi>=17)then if wi~=0X10 then do(pG)[di[2]]={E({},0X01,di[0X005])};end;else local bD=di[0x2];for qV=bD,bD+(di[5]-1)do do pG[qV]=ZG[ac+(qV-bD)+0X1];end;end;end;else if wi<0X12 then pG[di[0X002]]=qG[di[0X6]];else if wi==19 then(pG)[di[2]]=pG[di[0X5]]~=pG[di[0X0004]];else pG[di[2]]=pG[di[5]];end;end;end;end;end;end;else if wi<5 then do if not(wi>=2)then if wi~=1 then do pG[0X3]=qG[di[6]];end;TG=TG+0X1;local Db=(4);TG=TG+1;di=bc[TG];TG=TG+1;pG[0X00003]=pG[3][di[1]];TG=TG+1;UG=0X00003;(pG)[UG]=pG[UG]();TG=TG+1;do TG=TG+0X1;end;do di=bc[TG];end;TG=TG+1;do(pG)[0X4]=qG[di[6]];end;di=bc[TG];TG=TG+1;pG[4]=pG[4][di[0X1]];TG=TG+1;do TG=TG+0X1;end;di=bc[TG];TG=TG+0X01;do(pG)[4]=pG[4][di[1]];end;TG=TG+1;TG=TG+1;do di=bc[TG];end;TG=TG+0X1;do pG[0X3][di[0X0006]]=pG[4];end;do TG=TG+1;end;(pG)[0x004]=pG[0X2];do di=bc[TG];end;TG=TG+0X1;(pG[3])[di[0X6]]=pG[4];di=bc[TG];do TG=TG+0X001;end;(pG[3])[di[6]]=di[0X1];di=bc[TG];TG=TG+1;(pG)[0X004]=qG[di[6]];do TG=TG+1;end;TG=TG+1;local rb=5;do di=bc[TG];end;TG=TG+1;local Cb=(pG[4]);pG[Db+1]=Cb;(pG)[Db]=Cb[di[1]];TG=TG+1;(pG)[6]=pG[0];TG=TG+0x0001;pG[7]=pG[1]-pG[0];TG=TG+1;(pG)[8]=pG[0X3];TG=TG+1;Db=4;do UG=Db+rb-1;end;repeat local bQ,fQ=Lc,(pG);if#bQ>0x000 then local sx={};for Rc,tc in M,bQ do for oJ,eJ in M,tc do if eJ[1]==fQ and eJ[2]>=0 then local Ib=(eJ[0X2]);if not(not sx[Ib])then else sx[Ib]={fQ[Ib]};end;eJ[0X1]=sx[Ib];(eJ)[0X2]=0X1;end;end;end;end;until true;do return true,Db,rb;end;else do(pG)[di[2]]=di[0X6];end;end;else if wi<3 then do pG[di[2]]=pG[di[0x05]]==pG[di[4]];end;else if wi==4 then do TG=di[0X0005];end;else if pG[di[5]]==pG[di[4]]then TG=di[0X2];end;end;end;end;end;else if wi>=7 then if wi>=8 then if wi~=0X9 then do(pG)[di[2]]=pG[di[5]]<=pG[di[4]];end;else(qG)[di[6]]=pG[di[2]];end;else do repeat local ZQ,SQ=Lc,pG;if not(#ZQ>0x0)then else local FE=({});for Me,Ie in M,ZQ do for iL,hL in M,Ie do if not(hL[1]==SQ and hL[2]>=0x0)then else local iB=hL[2];if not FE[iB]then FE[iB]={SQ[iB]};end;(hL)[1]=FE[iB];(hL)[2]=1;end;end;end;end;until true;end;return;end;else do if wi==0X6 then repeat local Hp,dp=Lc,pG;if#Hp>0X0 then local Ck=({});for rL,bL in M,Hp do do for z4,w4 in M,bL do if not(w4[1]==dp and w4[2]>=0)then else local fO=w4[0X0002];if not(not Ck[fO])then else Ck[fO]={dp[fO]};end;(w4)[0X01]=Ck[fO];do(w4)[2]=0X1;end;end;end;end;end;end;until true;return false,di[2],UG;else local lc=(di[2]);local Ec=pG[lc];local Yc,Ic=pG[lc+1],pG[lc+0X2];(pG)[lc]=P(function()for fn=Ec,Yc,Ic do(C)(true,fn);end;end);TG=di[0X5];end;end;end;end;end;end;end);do if not(vG)then if V(hG)~="string"then(q)(hG,0X0);else if r(hG,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(hG,'\094.\045\058\037\100\043\058\032'))then(q)(hG,0);else q("Luraph Script:"..(Qc[TG-1]or"(internal)")..": "..u(hG),0X0);end;end;else if hG then do if LG==0x1 then return pG[VG]();else return pG[VG](E(pG,VG+0X1,UG));end;end;elseif not(VG)then else return E(pG,VG,LG);end;end;end;end;end;else if Sc~=46 then do ic=function(...)local zX,rX=1,({});local BX={[2]=Vc,[1]=rX};local QX=(k and k()or _ENV);local aX=(0);local AX,lX=q3(...);AX=AX-0X1;local qX=((QX==H and fc or QX));for sX=0,AX do if ac>sX then(rX)[sX]=lX[sX+0X0001];else do break;end;end;end;if not nc then lX=nil;elseif not(Ac)then else rX[ac]={n=AX>=ac and AX-ac+1 or 0,E(lX,ac+0X1,AX+0x1)};end;if qX~=QX then if not(s)then _ENV=qX;else s(ic,qX);end;end;local eX,JX,uX,iX=c(function()while true do local eE=(bc[zX]);local dE=eE[3];zX=zX+0X00001;if not(dE>=0X7)then if dE>=3 then if dE>=0X5 then if dE~=6 then do rX[eE[2]]=rX[eE[5]]/rX[eE[4]];end;else do rX[eE[0X0002]]=qX[eE[0X6]];end;end;else if dE~=0X04 then if not rX[eE[2]]then zX=eE[0x005];end;else do zX=eE[0X5];end;end;end;else do if dE<1 then local RC=(Uc[eE[5]]);local VC=RC[5];local TC=#VC;local BC=(nil);if not(TC>0)then else do BC={};end;for nY=1,TC do local fY=VC[nY];if fY[1]~=0 then BC[nY-0X1]=jc[fY[2]];else BC[nY-0x1]={rX,fY[2]};end;end;(S)(Lc,BC);end;rX[eE[2]]=e3(RC,BC,qX);else if dE==2 then rX[0x0000]=qX[eE[0X00006]];eE=bc[zX];do zX=zX+0X1;end;rX[0]=rX[0][eE[0X1]];zX=zX+0X001;do zX=zX+1;end;eE=bc[zX];local U4=(Uc[eE[5]]);local H4=(0);local R4=(U4[5]);do zX=zX+1;end;local C4=#R4;local y4=nil;do if not(C4>0)then else y4={};for RP=0X1,C4 do local dP=R4[RP];if dP[1]==0X00 then y4[RP-1]={rX,dP[2]};else do y4[RP-0X00001]=jc[dP[0X2]];end;end;end;(S)(Lc,y4);end;end;(rX)[0X1]=e3(U4,y4,qX);zX=zX+0X1;(rX[H4])(rX[H4+1]);do aX=H4-0X001;end;zX=zX+1;zX=zX+0X1;do zX=zX+0X1;end;repeat local Fb,Jb=Lc,(rX);if not(#Fb>0)then else local TE=({});do for oW,rW in M,Fb do for NU,CU in M,rW do if not(CU[1]==Jb and CU[2]>=0X00)then else local nS=CU[2];do if not TE[nS]then(TE)[nS]={Jb[nS]};end;end;(CU)[0X1]=TE[nS];(CU)[0X2]=0X1;end;end;end;end;end;until true;return;else(rX)[eE[0x2]]=rX[eE[5]]==rX[eE[4]];end;end;end;end;else do if dE<10 then do if dE<0X8 then for zD=eE[2],eE[5]do(rX)[zD]=nil;end;else if dE~=9 then(rX)[eE[0X2]]={E({},1,eE[5])};else end;end;end;else if not(dE<0Xc)then if dE~=13 then local XZ=(eE[2]);local nZ,HZ=rX[XZ]();if not(nZ)then else for K0=1,eE[0X4]do rX[XZ+K0]=HZ[K0];end;zX=eE[0X005];end;else do rX[eE[0X00002]]=eE[6];end;end;else if dE==11 then do(rX)[eE[0X002]]=rX[eE[5]][rX[eE[4]]];end;else(rX)[eE[2]]=rX[eE[0X5]]-rX[eE[0X0004]];end;end;end;end;end;end;end);if not(eX)then if V(JX)=="string"then if r(JX,'\097t\116e\109p\116\032\116\111\032yiel\100 \097cross \109e\116a\109e\116h\111\100/\067%\045ca\108l\032bou\110\100a\114y')then return coroutine.yield();end;do if not(r(JX,"^.-:%d+: "))then q(JX,0X0);else(q)('Lura\112h \083\099\114ip\116:'..(Qc[zX-0X1]or"\040\105\110\116\101rn\097\108\041")..": "..u(JX),0X00);end;end;else q(JX,0x0);end;else do if JX then if iX~=0X1 then return rX[uX](E(rX,uX+0X01,aX));else return rX[uX]();end;elseif not(uX)then else return E(rX,uX,iX);end;end;end;end;end;else ic=function(...)local Cr={};local nr=1;local pr=(k and k()or _ENV);local Sr={[1]=Cr,[2]=Vc};local Br,Rr=q3(...);Br=Br-0X1;for Pw=0X0000,Br do if not(ac>Pw)then break;else(Cr)[Pw]=Rr[Pw+1];end;end;local Jr=(pr==H and fc or pr);local tr=(0);if not nc then Rr=nil;elseif not(Ac)then else do Cr[ac]={n=Br>=ac and Br-ac+1 or 0x0,E(Rr,ac+1,Br+0x0001)};end;end;do if Jr==pr then else if not(s)then _ENV=Jr;else(s)(ic,Jr);end;end;end;local cr,Yr,hr,ar=c(function()while true do local cX=bc[nr];local dX=cX[3];nr=nr+1;if not(dX<0X8)then do if not(dX>=0X0000c)then do if not(dX>=0X000A)then if dX~=0X009 then(Cr)[cX[2]]=not Cr[cX[0X5]];else do if not(Cr[cX[5]]<=Cr[cX[4]])then nr=cX[0X002];end;end;end;else if dX~=11 then(Cr)[1]=cX[6];nr=nr+0X1;do Cr[0X2]=Cr[0X0];end;cX=bc[nr];local Ai=0X1;nr=nr+0X1;local ii=0X01;(Cr)[3]=cX[0X0006];nr=nr+0X1;local Zi=(Cr[Ai]);do for zg=Ai+0x1,3 do do Zi=Zi..Cr[zg];end;end;end;(Cr)[1]=Zi;do nr=nr+1;end;repeat local AU,LU=Lc,Cr;if not(#AU>0)then else local TH={};for UT,vT in M,AU do for wA,lA in M,vT do if lA[0X1]==LU and lA[0X002]>=0X0 then local TD=lA[2];if not TH[TD]then TH[TD]={LU[TD]};end;lA[1]=TH[TD];(lA)[2]=1;end;end;end;end;until true;return false,ii,ii;else Cr[cX[2]]=cX[0x006];end;end;end;else if not(dX>=14)then if dX~=13 then do Cr[cX[2]]=Cr[cX[5]]^Cr[cX[0X0004]];end;else if not(Cr[cX[0X5]]<Cr[cX[0X4]])then nr=cX[0X2];end;end;else if dX==0X0000f then(Cr)[cX[2]]=Jr[cX[6]];else do(Cr)[cX[2]]=Cr[cX[5]]==Cr[cX[4]];end;end;end;end;end;else if not(dX<4)then if dX<0X6 then do if dX==0X5 then(Cr)[cX[2]]=Sr[cX[0x5]];else do Cr[cX[0X02]][Cr[cX[5]]]=Cr[cX[4]];end;end;end;else if dX~=7 then local ni=Uc[cX[5]];local gi,Ui=ni[0x5],(nil);local ki=(#gi);do if ki>0X0 then Ui={};for Gc=1,ki do local Zc=gi[Gc];do if Zc[1]~=0 then(Ui)[Gc-0X0001]=jc[Zc[0X2]];else(Ui)[Gc-1]={Cr,Zc[0X02]};end;end;end;(S)(Lc,Ui);end;end;Cr[cX[2]]=e3(ni,Ui,Jr);else do Cr[cX[2]]=T(Cr[cX[0x5]],Cr[cX[0X004]]);end;end;end;else if not(dX<0X00002)then if dX~=0x3 then(Cr)[cX[2]]={E({},0x1,cX[0x0005])};else nr=cX[0x05];end;else if dX~=1 then else do repeat local Pg,Kg=Lc,Cr;do if#Pg>0X0 then local Mi={};for XV,FV in M,Pg do for CS,US in M,FV do if not(US[0X1]==Kg and US[0X2]>=0X0000)then else local OK=US[2];if not(not Mi[OK])then else(Mi)[OK]={Kg[OK]};end;US[0X1]=Mi[OK];(US)[2]=0X00001;end;end;end;end;end;until true;end;return;end;end;end;end;end;end);if cr then if Yr then if ar~=1 then return Cr[hr](E(Cr,hr+0X1,tr));else return Cr[hr]();end;elseif hr then return E(Cr,hr,ar);end;else do if V(Yr)=="string"then if not(r(Yr,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if r(Yr,"\094\046\045\058\037d\043\058 ")then(q)('\076urap\104\032\083cr\105pt\058'..(Qc[nr-1]or'\040\105\110\116\101rnal\041')..": "..u(Yr),0);else q(Yr,0);end;else q(Yr,0X0);end;end;end;end;end;end;end;else if not(Sc<35)then if Sc<37 then do if Sc~=36 then ic=function(...)local uJ,HJ=1,{};local dJ=(k and k()or _ENV);local DJ=({[2]=Vc,[1]=HJ});local XJ=(0);local VJ,RJ=q3(...);local hJ=(dJ==H and fc or dJ);do VJ=VJ-1;end;do for Zd=0x0,VJ do do if ac>Zd then HJ[Zd]=RJ[Zd+1];else do break;end;end;end;end;end;if not nc then RJ=nil;elseif Ac then(HJ)[ac]={n=VJ>=ac and VJ-ac+0X1 or 0x0,E(RJ,ac+0X1,VJ+1)};end;if hJ==dJ then else if s then s(ic,hJ);else _ENV=hJ;end;end;local QJ,CJ,BJ,iJ=c(function()while true do local wi=(bc[uJ]);local Mi=wi[3];uJ=uJ+1;if not(Mi<7)then do if not(Mi<0X000a)then if not(Mi>=0Xc)then if Mi==0xB then local yx=(Uc[wi[0x5]]);local Px=yx[5];local vx=nil;local sx=(#Px);do if sx>0X00000 then do vx={};end;for Hs=1,sx do local Ls=(Px[Hs]);if Ls[0X1]~=0 then vx[Hs-0X1]=jc[Ls[0X00002]];else vx[Hs-0X1]={HJ,Ls[0x2]};end;end;S(Lc,vx);end;end;(HJ)[wi[0X0002]]=e3(yx,vx,hJ);else HJ[wi[0X2]]=v(HJ[wi[0X5]],HJ[wi[0X4]]);end;else do if Mi==0X0d then local S4,E4=wi[0x2],(HJ[wi[5]]);HJ[S4+1]=E4;HJ[S4]=E4[wi[0X01]];else(HJ)[wi[2]]=wi[0X006];end;end;end;else do if Mi<8 then HJ[wi[2]]=hJ[wi[0X6]];else if Mi~=9 then local ZE=wi[0X2];do for Tz=ZE,ZE+(wi[5]-1)do do HJ[Tz]=RJ[ac+(Tz-ZE)+0x1];end;end;end;else do uJ=wi[5];end;end;end;end;end;end;else if Mi>=0x3 then if not(Mi>=5)then if Mi~=4 then do(HJ)[wi[0X02]]={E({},0X1,wi[0x05])};end;else HJ[0X0]=hJ[wi[6]];wi=bc[uJ];do uJ=uJ+0X0001;end;local au,du=0X0000,HJ[0X0];do(HJ)[au+0X1]=du;end;do HJ[au]=du[wi[0X01]];end;wi=bc[uJ];uJ=uJ+0X1;HJ[0x00002]=wi[6];do uJ=uJ+0x1;end;au=0;(HJ)[au]=HJ[au](HJ[au+1],HJ[au+2]);XJ=au;uJ=uJ+0X1;uJ=uJ+0X1;wi=bc[uJ];uJ=uJ+1;do(HJ)[1]=hJ[wi[0X00006]];end;uJ=uJ+1;uJ=uJ+1;wi=bc[uJ];do uJ=uJ+0X1;end;do HJ[1]=HJ[0X1][wi[0X00001]];end;wi=bc[uJ];local Nu=Uc[wi[0X005]];local Ju=Nu[5];uJ=uJ+0X1;local nu=(#Ju);local Hu=nil;if not(nu>0X0000)then else Hu={};do for Ul=0X1,nu do local ul=(Ju[Ul]);if ul[1]==0x0 then(Hu)[Ul-0X1]={HJ,ul[2]};else Hu[Ul-1]=jc[ul[2]];end;end;end;S(Lc,Hu);end;HJ[0X0002]=e3(Nu,Hu,hJ);uJ=uJ+1;do au=0X01;end;HJ[au](HJ[au+0x01]);XJ=au-1;uJ=uJ+0x0001;do uJ=uJ+1;end;do uJ=uJ+1;end;repeat local hi,yi=Lc,HJ;if#hi>0X0 then local DK={};for cm,Bm in M,hi do for uT,JT in M,Bm do if not(JT[0X001]==yi and JT[0X0002]>=0X0)then else local Ha=(JT[0X00002]);if not DK[Ha]then DK[Ha]={yi[Ha]};end;(JT)[0x00001]=DK[Ha];do JT[0X02]=1;end;end;end;end;end;until true;do return;end;end;else do if Mi~=6 then for a4=wi[2],wi[0X5]do do HJ[a4]=nil;end;end;else end;end;end;else if not(Mi>=0X1)then local mY,fY=wi[0X2],wi[5];do XJ=mY+fY-0x1;end;repeat local nj,kj=Lc,(HJ);if#nj>0 then local Mq=({});for Wl,ml in M,nj do do for Zc,Tc in M,ml do do if Tc[1]==kj and Tc[0X2]>=0X0 then local On=(Tc[2]);do if not(not Mq[On])then else do(Mq)[On]={kj[On]};end;end;end;(Tc)[0X01]=Mq[On];do(Tc)[0X2]=0x1;end;end;end;end;end;end;end;until true;return true,mY,fY;else if Mi~=2 then do repeat local FH,LH=Lc,HJ;if#FH>0 then local ga={};do for bY,iY in M,FH do for A1,k1 in M,iY do if not(k1[1]==LH and k1[0X2]>=0)then else local HF=k1[2];do if not ga[HF]then(ga)[HF]={LH[HF]};end;end;k1[1]=ga[HF];(k1)[0X002]=0x1;end;end;end;end;end;until true;end;return;else if not HJ[wi[0X2]]then do uJ=wi[0x005];end;end;end;end;end;end;end;end);if QJ then if CJ then if iJ==0X1 then return HJ[BJ]();else return HJ[BJ](E(HJ,BJ+1,XJ));end;elseif BJ then do return E(HJ,BJ,iJ);end;end;else if V(CJ)=="string"then if not(r(CJ,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(CJ,"^.-:%d+: "))then q(CJ,0);else(q)("\076ura\112\104\032\083c\114\105\112t\058"..(Qc[uJ-1]or"(internal)")..": "..u(CJ),0X0);end;else q(CJ,0X0);end;end;end;else ic=function(...)local Mi,Ni=1,{};local Vi=((k and k()or _ENV));local Fi={[2]=Vc,[1]=Ni};local Ii,bi=q3(...);local Pi=(0);Ii=Ii-0x0001;for G4=0x0000,Ii do if not(ac>G4)then break;else do(Ni)[G4]=bi[G4+0X001];end;end;end;local Ti=((Vi==H and fc or Vi));if not nc then bi=nil;elseif Ac then(Ni)[ac]={n=Ii>=ac and Ii-ac+0X1 or 0X000,E(bi,ac+0X0001,Ii+1)};end;if Ti~=Vi then do if s then(s)(ic,Ti);else _ENV=Ti;end;end;end;local Bi,Yi,li,ti=c(function()while true do local De=(bc[Mi]);local le=De[3];Mi=Mi+1;if not(le>=10)then do if le<0X005 then if not(le<2)then if not(le>=3)then(Ni)[De[2]]={E({},1,De[0x5])};else if le==4 then if not(not(Ni[De[5]]<=Ni[De[0X4]]))then else Mi=De[2];end;else do Ni[0x0001]=Ti[De[6]];end;do Mi=Mi+0x0001;end;Mi=Mi+0X1;Mi=Mi+1;Ni[2]=Ni[0X0];local Qo=0x1;Mi=Mi+1;do(Ni)[Qo]=Ni[Qo](Ni[Qo+0x0001]);end;Pi=Qo;Mi=Mi+1;Mi=Mi+0x0001;Mi=Mi+1;local Vo=jc[0];Ni[2]=Vo[0x0001][Vo[2]];Mi=Mi+1;do Mi=Mi+1;end;do De=bc[Mi];end;do Mi=Mi+0X00001;end;do(Ni)[0x2]=Ni[2][De[1]];end;Mi=Mi+1;(Ni)[3]=Ni[0X1];Mi=Mi+0X0001;Qo=2;(Ni)[Qo]=Ni[Qo](Ni[Qo+0X00001]);do Pi=Qo;end;De=bc[Mi];do Mi=Mi+1;end;if not(not Ni[0X0002])then else Mi=De[0X5];end;end;end;else if le==0X1 then if not(Ni[De[0X002]])then else do Mi=De[0X5];end;end;else(Ni)[0]=Ti[De[6]];Mi=Mi+1;Mi=Mi+0X1;Mi=Mi+1;local iU=0X0;do Ni[0X1]=true;end;do Mi=Mi+0X0001;end;(Ni)[iU]=Ni[iU](Ni[iU+1]);Pi=iU;do Mi=Mi+0X0001;end;Mi=Mi+1;De=bc[Mi];Mi=Mi+0X1;do(Ni)[0]=Ni[0x0][De[0x0001]];end;do De=bc[Mi];end;Mi=Mi+1;Mi=De[0x5];end;end;else do if not(le<0X0007)then do if not(le<0X0008)then do if le~=0x9 then Ni[0X00000]=Ti[De[0x00006]];Mi=Mi+0X00001;Mi=Mi+1;De=bc[Mi];do Mi=Mi+0x1;end;Ni[0]=Ni[0X00][De[0x1]];Mi=Mi+1;Mi=Mi+1;do De=bc[Mi];end;Mi=Mi+0X01;if not(not Ni[0X0])then else Mi=De[0x5];end;else(Ni)[De[2]]=Ni[De[0X005]]<Ni[De[0X4]];end;end;else for C7=De[2],De[0X5]do Ni[C7]=nil;end;end;end;else if le==0X6 then do Mi=De[0X5];end;else local Dw=Uc[De[0X5]];local iw=nil;local Nw=(Dw[0X0005]);local Xw=(#Nw);if Xw>0 then do iw={};end;for HH=1,Xw do local EH=Nw[HH];if EH[1]~=0x000 then iw[HH-0X1]=jc[EH[2]];else(iw)[HH-1]={Ni,EH[2]};end;end;S(Lc,iw);end;do(Ni)[De[2]]=e3(Dw,iw,Ti);end;end;end;end;end;end;else if not(le<0Xf)then if not(le<18)then if le>=0X0013 then if le==20 then(Ni)[0]=Ti[De[0X00006]];do De=bc[Mi];end;Mi=Mi+1;(Ni)[0]=Ni[0X0][De[0X1]];do De=bc[Mi];end;Mi=Mi+1;do if not Ni[0x00]then Mi=De[5];end;end;else(Ni)[De[0X2]]=Ti[De[0X6]];end;else end;else if not(le>=0X10)then(Ni)[De[0X002]]=Fi[De[5]];else if le~=17 then local TT=(De[2]);local YT=(De[4]-0X1)*50;local fT=(Ni[TT]);for mh=1,De[5]do do fT[YT+mh]=Ni[TT+mh];end;end;else do(Ni)[De[0x2]]=De[0x00006];end;end;end;end;else do if le>=0Xc then if le<0X00d then do Ni[0X0]=Ti[De[6]];end;Mi=Mi+0X1;do Pi=0;end;Ni[Pi]=Ni[Pi]();do De=bc[Mi];end;Mi=Mi+0X1;(Ni)[1]=Ti[De[6]];do Mi=Mi+1;end;Mi=Mi+0x001;Mi=Mi+0X00001;do Ni[0]=Ni[0]-Ni[0X001];end;De=bc[Mi];Mi=Mi+0X00001;do if not(De[6]<Ni[0X0])then Mi=De[0x02];end;end;else if le==0X0000e then Ni[0X0]=Ti[De[0X6]];De=bc[Mi];do Mi=Mi+1;end;(Ni)[0X0]=Ni[0X0][De[0X0001]];Mi=Mi+1;Mi=Mi+1;do De=bc[Mi];end;Mi=Mi+1;do Mi=De[5];end;else do repeat local Br,nr=Lc,Ni;if not(#Br>0X0)then else local Tx={};do for gQ,jQ in M,Br do for ji,yi in M,jQ do if yi[0X00001]==nr and yi[2]>=0 then local mp=(yi[2]);do if not(not Tx[mp])then else do Tx[mp]={nr[mp]};end;end;end;do(yi)[1]=Tx[mp];end;(yi)[0x2]=0x1;end;end;end;end;end;until true;end;return;end;end;else if le~=0X00B then local tO=(jc[0]);(Ni)[2]=tO[1][tO[0x2]];Mi=Mi+1;Mi=Mi+0x1;De=bc[Mi];Mi=Mi+0x00001;do Ni[0x2]=Ni[2][De[0X00001]];end;local PO=(2);Mi=Mi+0X001;do Mi=Mi+1;end;do Mi=Mi+1;end;(Ni)[0X00003]=Ni[0x1];Mi=Mi+0X0001;tO=jc[0x1];Ni[0X0004]=tO[0x1][tO[2]];Mi=Mi+1;Ni[PO](Ni[PO+1],Ni[PO+2]);Pi=PO-1;do Mi=Mi+1;end;Mi=Mi+1;De=bc[Mi];Mi=Mi+0X1;Mi=De[0X5];else local yV=De[2];local hV,FV=Ni[yV]();if hV then for iw=0X1,De[0x00004]do Ni[yV+iw]=FV[iw];end;Mi=De[0X005];end;end;end;end;end;end;end;end);if not(Bi)then if V(Yi)=="string"then if r(Yi,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(Yi,"^.-:%d+: "))then q(Yi,0X0);else(q)("Luraph Script:"..(Qc[Mi-0X1]or"(int\101r\110a\108\041").."\058 "..u(Yi),0);end;else q(Yi,0X0);end;else if Yi then if ti~=0x1 then return Ni[li](E(Ni,li+0x1,Pi));else return Ni[li]();end;elseif not(li)then else return E(Ni,li,ti);end;end;end;end;end;else if Sc==0X0026 then ic=function(...)local pT,HT=0X1,({});local GT=((k and k()or _ENV));local FT,BT=(GT==H and fc or GT),(0);local ZT=({[2]=Vc,[1]=HT});local aT,AT=q3(...);aT=aT-0x1;for Y9=0X0,aT do do if ac>Y9 then(HT)[Y9]=AT[Y9+1];else do break;end;end;end;end;if not nc then AT=nil;elseif not(Ac)then else HT[ac]={n=aT>=ac and aT-ac+0x1 or 0,E(AT,ac+1,aT+0X0001)};end;if FT==GT then else if not(s)then do _ENV=FT;end;else(s)(ic,FT);end;end;local vT,RT,NT,gT=c(function()while true do local CX=bc[pT];local dX=(CX[3]);pT=pT+1;if dX>=7 then do if not(dX<0X000b)then if not(dX<0Xd)then if dX==14 then HT[CX[0x2]]=FT[CX[0X006]];else if HT[CX[0X5]]==HT[CX[0X4]]then else pT=CX[0X2];end;end;else if dX==0X0c then(HT)[CX[2]]=w(HT[CX[0x5]],HT[CX[4]]);else do(HT)[CX[0x2]]=HT[CX[0X5]]%HT[CX[4]];end;end;end;else do if not(dX>=0x0009)then if dX~=0x8 then do if HT[CX[5]]==HT[CX[4]]then pT=CX[0X2];end;end;else HT[CX[2]]=CX[0X006];end;else if dX==10 then else HT[0X1]=CX[6];local YM=(1);do pT=pT+0x001;end;do(HT)[2]=HT[0];end;local EM=0X1;CX=bc[pT];pT=pT+0X1;do HT[3]=CX[6];end;pT=pT+0X1;local LM=HT[YM];for bF=YM+1,0x00003 do LM=LM..HT[bF];end;do HT[0x00001]=LM;end;pT=pT+1;repeat local lX,AX=Lc,HT;do if not(#lX>0)then else local dV=({});for Cj,Gj in M,lX do for Ow,ww in M,Gj do if ww[0x1]==AX and ww[2]>=0 then local Ed=ww[0X0002];if not(not dV[Ed])then else dV[Ed]={AX[Ed]};end;ww[1]=dV[Ed];(ww)[2]=1;end;end;end;end;end;until true;return false,EM,EM;end;end;end;end;end;else if dX>=3 then if dX<0X05 then if dX==0X4 then do if not(not HT[CX[2]])then else pT=CX[0X05];end;end;else do(HT)[CX[2]]=CX[0X0006];end;end;else if dX==0X0006 then repeat local p0,F0=Lc,(HT);do if not(#p0>0)then else local QX=({});for yx,tx in M,p0 do for Ss,Bs in M,tx do if not(Bs[1]==F0 and Bs[2]>=0)then else local EK=Bs[0X2];if not(not QX[EK])then else QX[EK]={F0[EK]};end;Bs[0x1]=QX[EK];Bs[2]=0X1;end;end;end;end;end;until true;return;else local x6=(Uc[CX[0x5]]);local h6,s6=x6[5],nil;local r6=(#h6);if r6>0 then s6={};do for ep=0X00001,r6 do local mp=h6[ep];if mp[0X1]~=0x000 then do s6[ep-0X1]=jc[mp[0X002]];end;else s6[ep-1]={HT,mp[2]};end;end;end;S(Lc,s6);end;HT[CX[2]]=e3(x6,s6,FT);end;end;else if not(dX<0X1)then if dX~=0X2 then HT[CX[0X02]]=HT[CX[5]]>HT[CX[0X4]];else pT=CX[5];end;else(HT)[CX[0X2]]={E({},0X1,CX[5])};end;end;end;end;end);if vT then if RT then if gT==0X1 then do return HT[NT]();end;else do return HT[NT](E(HT,NT+1,BT));end;end;elseif NT then do return E(HT,NT,gT);end;end;else do if V(RT)~="string"then(q)(RT,0);else if not(r(RT,"a\116t\101\109pt \116o\032\121\105el\100\032\097c\114\111\115s \109\101\116am\101tho\100\047C\037\045ca\108\108 b\111und\097\114\121"))then else return coroutine.yield();end;do if r(RT,"^.-:%d+: ")then q("Luraph Script:"..(Qc[pT-1]or"\040\105nt\101\114n\097\108\041")..": "..u(RT),0);else(q)(RT,0X0);end;end;end;end;end;end;else ic=function(...)local cA,NA=0X1,{};local uA=(0);local tA=(k and k()or _ENV);local YA,ZA=q3(...);local KA={[2]=Vc,[1]=NA};YA=YA-1;do for yV=0x00,YA do if not(ac>yV)then break;else(NA)[yV]=ZA[yV+1];end;end;end;local QA=(tA==H and fc or tA);if not nc then ZA=nil;elseif Ac then(NA)[ac]={n=YA>=ac and YA-ac+1 or 0,E(ZA,ac+1,YA+0X1)};end;do if QA~=tA then if s then s(ic,QA);else _ENV=QA;end;end;end;local dA,zA,WA,vA=c(function()while true do local lo=(bc[cA]);local xo=lo[0x003];cA=cA+1;do if xo>=0X00012 then do if not(xo<0X1B)then do if xo>=32 then do if xo<34 then do if xo==0x21 then for jq=lo[2],lo[0X5]do(NA)[jq]=nil;end;else cA=lo[0X5];end;end;else if xo>=35 then do if xo==36 then NA[10]=QA[lo[0x6]];lo=bc[cA];cA=cA+1;(NA)[0x0000A]=NA[10][lo[0x0001]];cA=cA+1;cA=cA+0X1;lo=bc[cA];cA=cA+0X1;NA[10]=NA[0X000A][lo[1]];lo=bc[cA];cA=cA+1;do if not(NA[10])then else cA=lo[0X5];end;end;else do(NA)[lo[0X2]]=QA[lo[0x6]];end;end;end;else do(KA)[lo[5]]=NA[lo[2]];end;end;end;end;else if not(xo>=29)then if xo~=28 then NA[10]=NA[6][lo[1]];lo=bc[cA];cA=cA+1;NA[0X0000A]=NA[0X0a][lo[1]];do lo=bc[cA];end;cA=cA+0X00001;do(NA)[0Xa]=NA[0XA][lo[1]];end;cA=cA+1;cA=cA+1;do lo=bc[cA];end;cA=cA+1;NA[0X0000b]=NA[0x6][lo[0X1]];cA=cA+0X1;do cA=cA+0X1;end;lo=bc[cA];cA=cA+1;(NA)[11]=NA[0x0b][lo[0X1]];lo=bc[cA];cA=cA+0x01;do NA[0XB]=NA[11][lo[1]];end;do cA=cA+1;end;NA[0x00C]=NA[0XA];lo=bc[cA];do cA=cA+1;end;if NA[0Xc]then cA=lo[5];end;else(NA)[19]=lo[0X06];do cA=cA+0X1;end;local qS=(0X0000e);uA=qS+6-0x1;NA[qS](E(NA,qS+0x001,uA));uA=qS-0X001;cA=cA+1;cA=cA+0X1;lo=bc[cA];do cA=cA+1;end;NA[0X0E]=QA[lo[0x6]];cA=cA+0X01;cA=cA+1;lo=bc[cA];cA=cA+0X01;qS=0X000E;local jS=NA[0X0000e];(NA)[qS+0X1]=jS;NA[qS]=jS[lo[1]];cA=cA+1;qS=0XE;NA[qS](NA[qS+1]);do uA=qS-0x01;end;cA=cA+0X1;cA=cA+0x1;lo=bc[cA];cA=cA+1;(NA)[0xe]=QA[lo[0x006]];do cA=cA+0X1;end;cA=cA+1;do lo=bc[cA];end;cA=cA+0x1;NA[15]=lo[6];lo=bc[cA];local zS=(Uc[lo[5]]);cA=cA+0X0001;local TS,eS=nil,(zS[5]);local iS=#eS;if not(iS>0)then else TS={};do for BQ=0x00001,iS do local yQ=eS[BQ];if yQ[0X01]==0 then do(TS)[BQ-1]={NA,yQ[0X002]};end;else do TS[BQ-0X1]=jc[yQ[0X002]];end;end;end;end;(S)(Lc,TS);end;do NA[16]=e3(zS,TS,QA);end;cA=cA+0X001;qS=0XE;NA[qS](NA[qS+0x1],NA[qS+0X0002]);uA=qS-0x1;cA=cA+0X0001;repeat local K7,u7=Lc,NA;if#K7>0X00000 then local lM={};for FJ,fJ in M,K7 do do for mp,Mp in M,fJ do if not(Mp[0X001]==u7 and Mp[0X2]>=10)then else local M_=Mp[2];do if not(not lM[M_])then else lM[M_]={u7[M_]};end;end;(Mp)[1]=lM[M_];(Mp)[2]=0X1;end;end;end;end;end;until true;lo=bc[cA];do cA=cA+0X1;end;cA=lo[0X5];end;else if xo<0x0001E then NA[10]=QA[lo[0X6]];lo=bc[cA];cA=cA+0X001;NA[10]=NA[10][lo[1]];lo=bc[cA];cA=cA+0X00001;if not(not NA[0xa])then else cA=lo[5];end;else if xo~=0x1F then NA[10]=QA[lo[0x006]];cA=cA+0x1;cA=cA+1;do lo=bc[cA];end;do cA=cA+0X001;end;(NA)[10]=NA[0X0a][lo[0X1]];cA=cA+1;do cA=cA+1;end;lo=bc[cA];do cA=cA+1;end;if not NA[0XA]then cA=lo[5];end;else NA[lo[0X2]]={E({},0X1,lo[5])};end;end;end;end;end;else if xo>=0x16 then if xo<24 then do if xo~=23 then if not NA[lo[2]]then do cA=lo[0x05];end;end;else local nk,Pk=lo[2],(lo[5]);uA=nk+Pk-1;repeat local aA,mA=Lc,(NA);do if#aA>0x000 then local MA=({});for uU,ZU in M,aA do for ui,Qi in M,ZU do if not(Qi[0x1]==mA and Qi[0x2]>=0)then else local IN=Qi[0X0002];do if not MA[IN]then MA[IN]={mA[IN]};end;end;do(Qi)[0X001]=MA[IN];end;do Qi[0X00002]=1;end;end;end;end;end;end;until true;return true,nk,Pk;end;end;else if xo<0X0019 then do repeat local mh,gh=Lc,NA;do if#mh>0x0 then local bu={};do for J0,d0 in M,mh do for tr,qr in M,d0 do if not(qr[0x1]==gh and qr[2]>=0X00000)then else local e_=qr[0X2];if not(not bu[e_])then else do bu[e_]={gh[e_]};end;end;qr[1]=bu[e_];qr[0X02]=0x1;end;end;end;end;end;end;until true;end;return;else if xo==26 then do NA[0X06][lo[6]]=lo[1];end;lo=bc[cA];cA=cA+1;(NA[6])[lo[0X6]]=lo[1];lo=bc[cA];cA=cA+1;(NA)[10]=QA[lo[0X6]];lo=bc[cA];cA=cA+1;do(NA)[11]=QA[lo[6]];end;lo=bc[cA];do cA=cA+0X0001;end;NA[11]=NA[0x000b][lo[1]];cA=cA+0x1;local qb=(0Xa);cA=cA+1;do lo=bc[cA];end;cA=cA+0X1;(NA)[12]=NA[6][lo[0X1]];cA=cA+1;cA=cA+1;do cA=cA+1;end;NA[0Xd]=NA[0X006];cA=cA+0x1;do uA=qb+0x04-1;end;NA[qb](E(NA,qb+1,uA));uA=qb-1;do lo=bc[cA];end;cA=cA+1;do(NA)[0XA]=QA[lo[6]];end;do cA=cA+1;end;uA=10;do(NA)[uA]=NA[uA]();end;cA=cA+0x01;do NA[7]=NA[10];end;lo=bc[cA];do cA=cA+1;end;do cA=lo[5];end;else NA[lo[0X2]]=NA[lo[0X00005]]<=NA[lo[4]];end;end;end;else if not(xo>=20)then do if xo==0x13 then do if not(not(NA[lo[0X00005]]<=NA[lo[0x04]]))then else cA=lo[2];end;end;else NA[10]=QA[lo[0x6]];do lo=bc[cA];end;cA=cA+0X1;NA[0X0a]=NA[0X00a][lo[0X001]];lo=bc[cA];cA=cA+0x1;do(NA)[10]=NA[10][lo[0X1]];end;cA=cA+0X1;cA=cA+0X01;lo=bc[cA];cA=cA+1;if not(NA[10]<lo[1])then cA=lo[2];end;end;end;else do if xo~=21 then do NA[10]=QA[lo[6]];end;cA=cA+0X1;do cA=cA+1;end;lo=bc[cA];local MQ=0X000A;cA=cA+0X1;NA[0xA]=NA[10][lo[1]];cA=cA+1;do cA=cA+0X001;end;lo=bc[cA];cA=cA+0X1;local fQ=(NA[10]);do(NA)[MQ+0x01]=fQ;end;NA[MQ]=fQ[lo[0X1]];do cA=cA+1;end;MQ=10;do NA[MQ]=NA[MQ](NA[MQ+0X01]);end;uA=MQ;cA=cA+0x1;cA=cA+1;lo=bc[cA];do cA=cA+1;end;if not NA[0Xa]then cA=lo[5];end;else(NA)[10]=QA[lo[6]];do cA=cA+1;end;do(NA)[10]=#NA[10];end;lo=bc[cA];cA=cA+1;if not(lo[6]<NA[10])then cA=lo[0X2];end;end;end;end;end;end;end;else do if xo<0x9 then if xo>=4 then if xo>=6 then if xo<0X7 then NA[11]=QA[lo[6]];lo=bc[cA];do cA=cA+0X1;end;(NA)[0x000b]=NA[11][lo[0x1]];lo=bc[cA];cA=cA+1;if not(NA[11])then else cA=lo[0x00005];end;else if xo~=8 then local Uy=Uc[lo[5]];local gy,Yy=Uy[0X00005],nil;local Xy=(#gy);if not(Xy>0x000)then else Yy={};do for Ia=1,Xy do local Ya=gy[Ia];if Ya[0X01]==0x00000 then do(Yy)[Ia-1]={NA,Ya[2]};end;else(Yy)[Ia-0X1]=jc[Ya[2]];end;end;end;S(Lc,Yy);end;NA[lo[2]]=e3(Uy,Yy,QA);else do(NA)[10]=NA[9];end;cA=cA+0x1;uA=10;(NA[uA])();do uA=uA-1;end;lo=bc[cA];cA=cA+0X1;cA=lo[5];end;end;else do if xo~=0X00005 then(NA)[13]=NA[12];lo=bc[cA];local ix=(0xd);cA=cA+0X0001;do NA[0x0003][lo[6]]=NA[0XD];end;lo=bc[cA];cA=cA+1;(NA)[0Xd]=NA[0x6][lo[1]];do cA=cA+0X00001;end;cA=cA+0X1;lo=bc[cA];do cA=cA+1;end;local fx=(NA[13]);do NA[ix+0X1]=fx;end;do(NA)[ix]=fx[lo[0X01]];end;cA=cA+0X1;NA[0xf]=NA[0x3];cA=cA+0X1;do ix=0XD;end;(NA)[ix]=NA[ix](NA[ix+0X1],NA[ix+0X2]);do uA=ix;end;cA=cA+1;cA=cA+0X1;lo=bc[cA];cA=cA+0x1;do ix=14;end;fx=NA[13];NA[ix+1]=fx;(NA)[ix]=fx[lo[1]];lo=bc[cA];do cA=cA+1;end;NA[0X0010]=lo[0X006];lo=bc[cA];do cA=cA+1;end;do NA[0x11]=lo[0X6];end;lo=bc[cA];cA=cA+0X1;do NA[0X00012]=lo[0x006];end;cA=cA+1;ix=0X0000E;uA=ix+0x5-1;(NA[ix])(E(NA,ix+0X1,uA));uA=ix-1;cA=cA+0x0001;do cA=cA+1;end;lo=bc[cA];cA=cA+0X1;do NA[14]=NA[0X2][lo[0X1]];end;cA=cA+0x1;NA[15]=NA[0X2];lo=bc[cA];cA=cA+1;NA[16]=lo[0X0006];do lo=bc[cA];end;cA=cA+1;(NA)[17]=QA[lo[0x6]];cA=cA+0x1;NA[18]=NA[0x0000a];lo=bc[cA];cA=cA+0X0001;if not NA[0X12]then do cA=lo[0X5];end;end;else do NA[10]=QA[lo[0X6]];end;cA=cA+1;cA=cA+0x0001;do cA=cA+1;end;uA=0X000a;(NA)[uA]=NA[uA]();cA=cA+0x00001;do cA=cA+0x1;end;do cA=cA+1;end;NA[0X0000a]=NA[10]-NA[7];do lo=bc[cA];end;do cA=cA+0X01;end;if not(lo[0x6]<NA[0X000A])then else do cA=lo[2];end;end;end;end;end;else do if not(xo>=0X02)then if xo==0X1 then else(NA)[0Xa]=NA[0][lo[0X1]];cA=cA+0X1;(NA)[0X6]=NA[10];lo=bc[cA];do cA=cA+1;end;if not NA[6]then do cA=lo[0X005];end;end;end;else if xo==0x3 then NA[0XA]=NA[6][lo[0X1]];cA=cA+0X1;cA=cA+1;do lo=bc[cA];end;cA=cA+1;if not NA[10]then cA=lo[5];end;else NA[0x00A]=QA[lo[0X06]];cA=cA+1;uA=0XA;do NA[uA]=NA[uA]();end;do lo=bc[cA];end;cA=cA+1;do if not(NA[5]<NA[0xa])then do cA=lo[2];end;end;end;end;end;end;end;else if xo>=0X0d then if xo<0X000f then if xo==14 then NA[0x00]=QA[lo[0X0006]];cA=cA+0X1;cA=cA+0X0001;lo=bc[cA];local s4=(Uc[lo[5]]);do cA=cA+0X00001;end;local E4,o4=nil,(s4[5]);local M4=#o4;if not(M4>0)then else E4={};for N2=1,M4 do local Q2=o4[N2];if Q2[0X1]==0X0 then E4[N2-1]={NA,Q2[0X2]};else(E4)[N2-1]=jc[Q2[0X00002]];end;end;(S)(Lc,E4);end;NA[1]=e3(s4,E4,QA);local f4=0X2;do lo=bc[cA];end;cA=cA+0X001;NA[2]=QA[lo[0X0006]];do cA=cA+1;end;cA=cA+1;lo=bc[cA];cA=cA+0X00001;local F4=NA[2];do NA[f4+0X1]=F4;end;NA[f4]=F4[lo[0x1]];lo=bc[cA];cA=cA+0x1;NA[0X4]=lo[6];do cA=cA+1;end;do f4=0X2;end;do NA[f4]=NA[f4](NA[f4+1],NA[f4+2]);end;uA=f4;lo=bc[cA];cA=cA+0X1;(NA)[0X2]=NA[0X2][lo[0X01]];lo=bc[cA];cA=cA+0x1;do NA[0X3]=QA[lo[6]];end;lo=bc[cA];cA=cA+0X00001;do NA[3]=NA[3][lo[1]];end;do lo=bc[cA];end;do cA=cA+0x0001;end;NA[4]=lo[6];cA=cA+0X1;do f4=3;end;NA[f4]=NA[f4](NA[f4+0X00001]);do uA=f4;end;do lo=bc[cA];end;do cA=cA+1;end;do NA[0x4]=lo[6];end;lo=bc[cA];cA=cA+1;NA[5]=lo[0x006];cA=cA+0x1;NA[6]=nil;do lo=bc[cA];end;cA=cA+0X001;(NA)[0X07]=lo[0x06];do lo=bc[cA];end;cA=cA+1;NA[8]=lo[6];lo=bc[cA];cA=cA+1;NA[0X9]=lo[0X00006];lo=bc[cA];cA=cA+1;do QA[lo[6]]=NA[9];end;lo=bc[cA];do cA=cA+1;end;s4=Uc[lo[5]];do E4=nil;end;o4=s4[0x5];M4=#o4;if not(M4>0)then else E4={};for GZ=1,M4 do local DZ=o4[GZ];if DZ[0X1]~=0X00000 then(E4)[GZ-0X1]=jc[DZ[2]];else E4[GZ-0X1]={NA,DZ[2]};end;end;(S)(Lc,E4);end;NA[9]=e3(s4,E4,QA);lo=bc[cA];cA=cA+0X1;cA=lo[0X5];else NA[lo[0X2]]=NA[lo[5]];end;else if xo<16 then NA[lo[0X2]]=NA[lo[5]]*NA[lo[4]];else if xo==0x00011 then NA[lo[0X2]]=lo[6];else(NA)[10]=QA[lo[0X6]];do cA=cA+0x1;end;cA=cA+1;lo=bc[cA];cA=cA+1;do if not(NA[0X0a])then else do cA=lo[0X5];end;end;end;end;end;end;else if not(xo>=11)then do if xo==10 then local Qz=(lo[0X5]);local Rz=NA[Qz];for AY=Qz+1,lo[0X00004]do Rz=Rz..NA[AY];end;(NA)[lo[2]]=Rz;else do(NA)[lo[0X2]]=NA[lo[0x05]]/NA[lo[0X4]];end;end;end;else if xo~=12 then do(NA)[lo[2]]=NA[lo[5]][lo[0X1]];end;else if NA[lo[2]]then cA=lo[5];end;end;end;end;end;end;end;end;end;end);if dA then do if zA then do if vA~=0X1 then return NA[WA](E(NA,WA+0X001,uA));else return NA[WA]();end;end;elseif not(WA)then else return E(NA,WA,vA);end;end;else if V(zA)~='s\116rin\103'then(q)(zA,0X0);else if r(zA,"a\116\116em\112t\032t\111 \121i\101l\100 \097\099r\111\115\115 \109et\097met\104o\100/C%\045c\097\108l\032bo\117nda\114\121")then return coroutine.yield();end;if not(r(zA,"^.-:%d+: "))then(q)(zA,0X00);else(q)('\076\117r\097\112h \083cri\112\116:'..(Qc[cA-0X0001]or"\040intern\097\108)")..": "..u(zA),0);end;end;end;end;end;end;else if Sc>=0x21 then if Sc==0x22 then ic=function(...)local Ab,zb=0x00001,({});local tb=((k and k()or _ENV));local Jb,gb=q3(...);local Ub=(tb==H and fc or tb);local db={[1]=zb,[2]=Vc};Jb=Jb-1;for Ny=0x000,Jb do if ac>Ny then zb[Ny]=gb[Ny+1];else do break;end;end;end;if not nc then gb=nil;elseif Ac then do zb[ac]={n=Jb>=ac and Jb-ac+1 or 0X000,E(gb,ac+1,Jb+1)};end;end;do if Ub~=tb then if not(s)then do _ENV=Ub;end;else s(ic,Ub);end;end;end;local Mb=(0X0000);while true do local Rc=(bc[Ab]);local sc=(Rc[0x3]);Ab=Ab+0X1;do return(function(g,Q,...)local u=g[0];if not Root then return 0;end;return(Vector3.new(u.X,u.Y,u.Z)-Root.Position).magnitude;end)(zb,jc,...);end;end;end;else ic=function(...)local Ru,uu=1,{};local Mu=(k and k()or _ENV);local pu,ju=q3(...);local lu={[1]=uu,[2]=Vc};pu=pu-1;do for KV=0X0,pu do if not(ac>KV)then break;else uu[KV]=ju[KV+1];end;end;end;do if not nc then do ju=nil;end;elseif Ac then uu[ac]={n=pu>=ac and pu-ac+1 or 0,E(ju,ac+1,pu+1)};end;end;local Gu=(0);local su=((Mu==H and fc or Mu));if su==Mu then else if not(s)then _ENV=su;else s(ic,su);end;end;while true do local eP=(bc[Ru]);Ru=Ru+1;local FP=(eP[3]);return(function(x,u,...)return _israiding()or JustStarted;end)(uu,jc,...);end;end;end;else if Sc~=0x000020 then ic=function(...)local hN,bN={},0X0;local WN=1;local kN=((k and k()or _ENV));local mN,zN=q3(...);local PN,lN={[1]=hN,[2]=Vc},((kN==H and fc or kN));mN=mN-0x001;for Pd=0X0,mN do if not(ac>Pd)then do break;end;else hN[Pd]=zN[Pd+0X1];end;end;do if not nc then zN=nil;elseif not(Ac)then else(hN)[ac]={n=mN>=ac and mN-ac+0X1 or 0X0,E(zN,ac+1,mN+1)};end;end;if lN~=kN then if not(s)then do _ENV=lN;end;else(s)(ic,lN);end;end;local DN,yN,CN,nN=c(function()while true do local Wu=(bc[WN]);local iu=(Wu[3]);WN=WN+0x00001;if iu<0X00F then if iu>=7 then if not(iu<0Xb)then do if iu<13 then if iu==0x000c then do(hN)[Wu[0x2]]=hN[Wu[0X5]]^hN[Wu[4]];end;else local Jf=(Uc[Wu[0X5]]);local wf,tf=Jf[5],(nil);local Ef=#wf;if not(Ef>0X0)then else tf={};for Gr=1,Ef do local Kr=wf[Gr];if Kr[1]==0 then do tf[Gr-1]={hN,Kr[2]};end;else tf[Gr-1]=jc[Kr[0x02]];end;end;S(Lc,tf);end;do(hN)[Wu[2]]=e3(Jf,tf,lN);end;end;else if iu==0X00E then hN[0]=lN[Wu[0X6]];Wu=bc[WN];local nd=(0X000);do WN=WN+0X001;end;(hN)[1]=Wu[0X6];do WN=WN+1;end;hN[nd]=hN[nd](hN[nd+1]);bN=nd;WN=WN+0X01;WN=WN+1;Wu=bc[WN];WN=WN+0x1;do if not(not hN[0])then else WN=Wu[5];end;end;else hN[0x0]=lN[Wu[0X006]];local FN=0X0;Wu=bc[WN];WN=WN+1;(hN)[1]=lN[Wu[0x6]];Wu=bc[WN];WN=WN+0X0001;hN[1]=hN[1][Wu[1]];WN=WN+0X1;(hN[FN])(hN[FN+1]);do bN=FN-0X0001;end;WN=WN+0X1;WN=WN+0x01;do Wu=bc[WN];end;WN=WN+1;WN=Wu[0X5];end;end;end;else if iu<9 then if iu==0X8 then(hN)[0X0]=lN[Wu[0X6]];Wu=bc[WN];WN=WN+1;(hN)[0]=hN[0][Wu[1]];WN=WN+1;WN=WN+1;Wu=bc[WN];WN=WN+1;do if hN[0X00]~=Wu[1]then WN=Wu[2];end;end;else(hN)[Wu[0x2]]=w(hN[Wu[5]],hN[Wu[0x4]]);end;else if iu==0XA then do for EK=Wu[0x2],Wu[5]do hN[EK]=nil;end;end;else end;end;end;else if not(iu<0X003)then if iu<0x5 then if iu==4 then do(hN)[1]=lN[Wu[0X6]];end;Wu=bc[WN];WN=WN+1;hN[0x0001]=hN[1][Wu[1]];Wu=bc[WN];WN=WN+1;local vB=hN[1];local RB=(0X01);hN[RB+0X1]=vB;(hN)[RB]=vB[Wu[1]];Wu=bc[WN];WN=WN+1;hN[3]=Wu[6];do WN=WN+1;end;RB=1;(hN)[RB]=hN[RB](hN[RB+1],hN[RB+2]);bN=RB;WN=WN+1;WN=WN+0X1;Wu=bc[WN];WN=WN+0x0001;do if not hN[0X1]then do WN=Wu[5];end;end;end;else hN[Wu[0x2]]=Wu[0X6];end;else if iu~=6 then do if not(not(hN[Wu[5]]<hN[Wu[4]]))then else WN=Wu[2];end;end;else hN[0x00]=lN[Wu[0X0006]];do WN=WN+1;end;WN=WN+1;Wu=bc[WN];WN=WN+1;do(hN)[0X0]=hN[0][Wu[0X0001]];end;WN=WN+1;WN=WN+0X00001;do Wu=bc[WN];end;WN=WN+0X0001;if hN[0X00000]~=Wu[1]then do WN=Wu[0X2];end;end;end;end;else if not(iu>=1)then hN[Wu[0x2]]=hN[Wu[5]];else if iu==0X02 then do hN[Wu[0X2]][hN[Wu[5]]]=hN[Wu[4]];end;else do WN=Wu[5];end;end;end;end;end;else do if not(iu>=0X000016)then if iu<18 then if iu>=0X0010 then if iu==0X00011 then(hN)[0x1]=lN[Wu[0x6]];WN=WN+1;local oN=(0X01);WN=WN+1;Wu=bc[WN];WN=WN+0X1;do(hN)[1]=hN[1][Wu[0X00001]];end;WN=WN+0X1;WN=WN+0X001;Wu=bc[WN];WN=WN+1;local UN=(hN[0X0001]);hN[oN+1]=UN;(hN)[oN]=UN[Wu[0x1]];Wu=bc[WN];WN=WN+1;do hN[3]=Wu[0x6];end;WN=WN+1;do oN=1;end;do(hN)[oN]=hN[oN](hN[oN+0x1],hN[oN+2]);end;bN=oN;WN=WN+0X01;do WN=WN+0X1;end;Wu=bc[WN];WN=WN+1;if not hN[1]then do WN=Wu[5];end;end;else hN[Wu[0X002]]=lN[Wu[0X6]];end;else do hN[Wu[2]]=o(hN[Wu[0X5]],hN[Wu[0X0004]]);end;end;else do if not(iu>=0x14)then if iu==0x13 then hN[0]=lN[Wu[6]];local vv=jc[0];WN=WN+0X1;do bN=0;end;hN[bN]=hN[bN]();WN=WN+1;(hN)[1]=vv[0X1][vv[0X00002]];do WN=WN+1;end;do WN=WN+1;end;WN=WN+1;(hN)[0]=hN[0X00000]-hN[0X001];Wu=bc[WN];WN=WN+0X1;hN[1]=lN[Wu[0x6]];Wu=bc[WN];do WN=WN+1;end;(hN)[1]=hN[0x01][Wu[1]];WN=WN+0X0001;do WN=WN+0X001;end;Wu=bc[WN];WN=WN+0X1;do if hN[0X01]then do WN=Wu[5];end;end;end;else hN[0]=lN[Wu[6]];do WN=WN+1;end;WN=WN+0X1;Wu=bc[WN];WN=WN+0x1;(hN)[0]=hN[0x0][Wu[1]];do Wu=bc[WN];end;WN=WN+1;if not(not hN[0X0])then else WN=Wu[5];end;end;else if iu~=21 then do hN[0x0]=lN[Wu[6]];end;do WN=WN+1;end;local vb=(jc[0]);bN=0X00;(hN)[bN]=hN[bN]();do WN=WN+0x1;end;vb[1][vb[2]]=hN[0X0000];Wu=bc[WN];WN=WN+1;WN=Wu[5];else hN[Wu[2]]=hN[Wu[5]]*Wu[0x1];end;end;end;end;else do if iu<0X1a then if not(iu<0X18)then if iu~=0X019 then local ht=(Wu[0X2]);local tt=Wu[0x5];bN=ht+tt-1;repeat local Zd,cd=Lc,(hN);if not(#Zd>0)then else local eQ={};do for j7,w7 in M,Zd do do for G5,g5 in M,w7 do if not(g5[1]==cd and g5[2]>=0X0)then else local x2=(g5[2]);if not eQ[x2]then eQ[x2]={cd[x2]};end;(g5)[0X1]=eQ[x2];do(g5)[2]=1;end;end;end;end;end;end;end;until true;return true,ht,tt;else hN[0X01]=lN[Wu[6]];Wu=bc[WN];local XH=0X1;WN=WN+1;do(hN)[1]=hN[0X1][Wu[1]];end;Wu=bc[WN];WN=WN+1;local MH=hN[1];do hN[XH+0x0001]=MH;end;do(hN)[XH]=MH[Wu[0X1]];end;Wu=bc[WN];do WN=WN+1;end;hN[3]=Wu[6];WN=WN+0X1;XH=0x1;hN[XH]=hN[XH](hN[XH+1],hN[XH+0X0002]);do bN=XH;end;Wu=bc[WN];WN=WN+1;if not hN[0X1]then WN=Wu[5];end;end;else do if iu~=0X17 then hN[0]=lN[Wu[6]];WN=WN+1;WN=WN+1;do Wu=bc[WN];end;WN=WN+0X001;hN[1]=lN[Wu[6]];local Ff=(0);Wu=bc[WN];WN=WN+1;hN[1]=hN[1][Wu[0X00001]];WN=WN+0X1;(hN[Ff])(hN[Ff+1]);bN=Ff-1;Wu=bc[WN];WN=WN+1;WN=Wu[5];else hN[Wu[0X0002]]={E({},1,Wu[5])};end;end;end;else if not(iu<28)then do if iu==0X1D then do hN[Wu[2]]=v(hN[Wu[5]],hN[Wu[0X00004]]);end;else do repeat local BW,aW=Lc,(hN);if#BW>0X00 then local Ha={};for Ji,fi in M,BW do do for lV,DV in M,fi do if not(DV[0X01]==aW and DV[2]>=0)then else local Cx=(DV[2]);do if not(not Ha[Cx])then else(Ha)[Cx]={aW[Cx]};end;end;DV[0X0001]=Ha[Cx];do DV[0X2]=0X00001;end;end;end;end;end;end;until true;end;return;end;end;else do if iu==0X1b then hN[0X000]=lN[Wu[0X06]];WN=WN+0X1;WN=WN+0x0001;Wu=bc[WN];WN=WN+0X001;hN[0]=hN[0][Wu[1]];Wu=bc[WN];do WN=WN+0x0001;end;if hN[0x0]==Wu[1]then else WN=Wu[2];end;else hN[0]=lN[Wu[6]];WN=WN+1;do WN=WN+0x1;end;Wu=bc[WN];WN=WN+0x1;local io=(0);do(hN)[0x1]=lN[Wu[6]];end;Wu=bc[WN];WN=WN+0X01;do(hN)[1]=hN[0X0001][Wu[0X1]];end;WN=WN+1;(hN[io])(hN[io+0X001]);bN=io-0X0001;WN=WN+1;do WN=WN+0x001;end;Wu=bc[WN];WN=WN+0X00001;WN=Wu[5];end;end;end;end;end;end;end;end;end;end);if not(DN)then if V(yN)=="string"then if not(r(yN,"a\116\116\101mpt\032\116\111\032\121\105\101\108d \097c\114o\115s me\116am\101\116hod/\067\037-\099\097l\108\032\098ounda\114y"))then else return coroutine.yield();end;if not(r(yN,'^.\045\058%d\043: '))then q(yN,0);else(q)("Luraph Script:"..(Qc[WN-0X1]or'(i\110\116er\110al\041')..': '..u(yN),0X0000);end;else(q)(yN,0X000);end;else if yN then if nN==1 then do return hN[CN]();end;else return hN[CN](E(hN,CN+0X1,bN));end;elseif CN then do return E(hN,CN,nN);end;end;end;end;else do ic=function(...)local Hk={};local uk=(0X1);local dk=(k and k()or _ENV);local ak,Lk=q3(...);local jk,kk,tk=0,(dk==H and fc or dk),({[2]=Vc,[1]=Hk});ak=ak-0X001;do for oi=0,ak do if ac>oi then Hk[oi]=Lk[oi+0X1];else break;end;end;end;if not nc then Lk=nil;elseif Ac then(Hk)[ac]={n=ak>=ac and ak-ac+0x1 or 0,E(Lk,ac+1,ak+1)};end;do if kk==dk then else if s then s(ic,kk);else _ENV=kk;end;end;end;local Pk,yk,Fk,hk=c(function()while true do local iT=bc[uk];local UT=iT[0X3];uk=uk+0X1;if UT<0Xa then if not(UT>=0X5)then do if UT>=0X2 then if not(UT>=0X0003)then local qh=iT[2];local xh,Kh=Hk[qh]();if xh then for J5=0X1,iT[0X4]do Hk[qh+J5]=Kh[J5];end;do uk=iT[5];end;end;else if UT==0X0004 then local Wd=Uc[iT[5]];local od=(Wd[0X5]);local Yd=nil;local sd=#od;do if sd>0X0 then do Yd={};end;do for VC=0x1,sd do local SC=od[VC];if SC[0X001]==0x0 then(Yd)[VC-1]={Hk,SC[0X2]};else do(Yd)[VC-0X1]=jc[SC[2]];end;end;end;end;S(Lc,Yd);end;end;Hk[iT[0X2]]=e3(Wd,Yd,kk);else do Hk[iT[2]]={E({},1,iT[0x5])};end;end;end;else if UT==1 then else if Hk[iT[0x5]]~=Hk[iT[4]]then else uk=iT[2];end;end;end;end;else if not(UT<7)then if not(UT<8)then if UT~=0x9 then tk[iT[5]]=Hk[iT[2]];else do uk=iT[0X5];end;end;else(Hk)[0]=kk[iT[6]];uk=uk+1;do uk=uk+1;end;iT=bc[uk];uk=uk+1;(Hk)[0X00000]=Hk[0][iT[0X1]];do iT=bc[uk];end;uk=uk+0X01;(Hk)[1]=iT[0X6];local zT=(0);do uk=uk+0X001;end;Hk[zT]=Hk[zT](Hk[zT+0X1]);jk=zT;do iT=bc[uk];end;uk=uk+1;uk=iT[5];end;else do if UT==0X0006 then repeat local yd,Qd=Lc,Hk;if not(#yd>0x0)then else local y6={};for E_,x_ in M,yd do do for yJ,EJ in M,x_ do if not(EJ[0X1]==Qd and EJ[0X2]>=0X000)then else local DR=EJ[0x002];if not y6[DR]then y6[DR]={Qd[DR]};end;EJ[0X1]=y6[DR];do(EJ)[2]=0X1;end;end;end;end;end;end;until true;return;else local EE=(iT[0X02]);local TE=Hk[EE];local AE=((iT[0X4]-0X0001)*0X32);do for pY=0X1,iT[0X005]do(TE)[AE+pY]=Hk[EE+pY];end;end;end;end;end;end;else do if UT<0X000F then if not(UT<0X0c)then if UT<0XD then(Hk)[0X00]=kk[iT[0X006]];do iT=bc[uk];end;uk=uk+1;Hk[0x0000]=Hk[0][iT[0X001]];do uk=uk+0X001;end;local cI=(0X0);uk=uk+1;do iT=bc[uk];end;do uk=uk+0x01;end;local tI=Hk[0];do Hk[cI+0X0001]=tI;end;do Hk[cI]=tI[iT[0x01]];end;iT=bc[uk];uk=uk+0X00001;Hk[0X0002]=iT[0X6];uk=uk+0X1;cI=0;(Hk)[cI]=Hk[cI](Hk[cI+0X1],Hk[cI+2]);jk=cI;iT=bc[uk];uk=uk+1;if not(Hk[0X0])then else uk=iT[0x5];end;else do if UT~=0x0000e then local q1=iT[2];local m1=Hk[q1+2];local y1=Hk[q1+0x1];local P1=Hk[q1];(Hk)[q1]=P(function()for M2=P1,y1,m1 do(C)(true,M2);end;end);uk=iT[0X00005];else repeat local DK,QK,nK=Lc,Hk,(iT[2]);if not(#DK>0)then else local Yx=({});do for fH,VH in M,DK do for hU,aU in M,VH do if aU[1]==QK and aU[2]>=nK then local YI=aU[2];if not Yx[YI]then Yx[YI]={QK[YI]};end;aU[1]=Yx[YI];(aU)[2]=1;end;end;end;end;end;until true;end;end;end;else if UT~=0X0B then Hk[iT[0X2]]=iT[0x0006];else Hk[iT[2]]=true;end;end;else if UT>=0X11 then if not(UT<0X12)then do if UT~=0X13 then(Hk)[iT[2]]=Hk[iT[5]]>=Hk[iT[4]];else local IL=iT[5];local aL=Hk[IL];for xN=IL+0x1,iT[0X004]do aL=aL..Hk[xN];end;Hk[iT[2]]=aL;end;end;else do(Hk)[1]=kk[iT[6]];end;iT=bc[uk];do uk=uk+1;end;Hk[0X1]=Hk[0X01][iT[1]];iT=bc[uk];uk=uk+0x1;do(Hk)[2]=iT[0X0006];end;uk=uk+0X00001;local vJ=(0X0001);do(Hk)[vJ]=Hk[vJ](Hk[vJ+0X1]);end;do jk=vJ;end;uk=uk+1;uk=uk+0X1;iT=bc[uk];do uk=uk+1;end;do Hk[0X2]=kk[iT[6]];end;uk=uk+0x01;do uk=uk+0X1;end;iT=bc[uk];uk=uk+1;(Hk)[2]=Hk[2][iT[0X1]];uk=uk+1;do uk=uk+0X0001;end;do iT=bc[uk];end;do uk=uk+0x1;end;(Hk)[3]=iT[6];do uk=uk+1;end;do vJ=0x002;end;do Hk[vJ]=Hk[vJ](Hk[vJ+0X1]);end;jk=vJ;do uk=uk+0X0001;end;uk=uk+0X1;iT=bc[uk];uk=uk+1;do Hk[3]=kk[iT[0X06]];end;iT=bc[uk];uk=uk+0X001;(Hk)[0X3]=Hk[0X3][iT[1]];uk=uk+1;do uk=uk+1;end;iT=bc[uk];uk=uk+1;Hk[4]=iT[0X6];uk=uk+1;vJ=0X3;Hk[vJ]=Hk[vJ](Hk[vJ+1]);jk=vJ;do iT=bc[uk];end;uk=uk+0x00001;Hk[0X4]=kk[iT[0X6]];uk=uk+1;do uk=uk+1;end;do iT=bc[uk];end;uk=uk+0X1;Hk[0X004]=Hk[4][iT[0X00001]];do uk=uk+0X1;end;uk=uk+1;iT=bc[uk];do uk=uk+0X0001;end;(Hk)[5]=iT[6];do uk=uk+0X0001;end;vJ=0X00004;Hk[vJ]=Hk[vJ](Hk[vJ+1]);jk=vJ;uk=uk+0x1;do uk=uk+1;end;iT=bc[uk];do uk=uk+0x00001;end;do(Hk)[0X5]=kk[iT[6]];end;uk=uk+1;uk=uk+0x00001;iT=bc[uk];uk=uk+1;do(Hk)[0x5]=Hk[5][iT[1]];end;uk=uk+0X1;uk=uk+1;iT=bc[uk];uk=uk+0x1;do(Hk)[0X00006]=iT[0X6];end;uk=uk+1;do vJ=5;end;do Hk[vJ]=Hk[vJ](Hk[vJ+1]);end;jk=vJ;iT=bc[uk];uk=uk+0X01;Hk[0x6]=kk[iT[0X0006]];uk=uk+0X1;uk=uk+0X1;iT=bc[uk];uk=uk+1;Hk[6]=Hk[0x6][iT[1]];do iT=bc[uk];end;do uk=uk+1;end;Hk[7]=iT[6];uk=uk+0x1;vJ=6;Hk[vJ]=Hk[vJ](Hk[vJ+0x00001]);do jk=vJ;end;iT=bc[uk];do uk=uk+1;end;(Hk)[7]=kk[iT[0x00006]];uk=uk+0x1;uk=uk+0X1;iT=bc[uk];uk=uk+1;(Hk)[0X0007]=Hk[0X007][iT[0X1]];uk=uk+1;uk=uk+0X001;do iT=bc[uk];end;do uk=uk+1;end;(Hk)[8]=iT[0X6];do uk=uk+0X00001;end;do vJ=0X7;end;Hk[vJ]=Hk[vJ](Hk[vJ+1]);do jk=vJ;end;iT=bc[uk];uk=uk+1;Hk[8]=kk[iT[0X6]];do uk=uk+0X1;end;uk=uk+1;do iT=bc[uk];end;do uk=uk+0X01;end;(Hk)[8]=Hk[8][iT[1]];iT=bc[uk];uk=uk+1;Hk[0X9]=iT[0X00006];uk=uk+0X1;do vJ=8;end;do Hk[vJ]=Hk[vJ](Hk[vJ+0x1]);end;jk=vJ;do iT=bc[uk];end;do uk=uk+1;end;Hk[9]=kk[iT[0X6]];uk=uk+1;uk=uk+1;iT=bc[uk];do uk=uk+0x001;end;Hk[0X009]=Hk[0x9][iT[0X1]];iT=bc[uk];uk=uk+0x1;(Hk)[0X000A]=iT[0X006];uk=uk+0X1;vJ=0X9;Hk[vJ]=Hk[vJ](Hk[vJ+0X1]);jk=vJ;iT=bc[uk];uk=uk+1;Hk[0xa]=kk[iT[6]];uk=uk+1;uk=uk+1;iT=bc[uk];uk=uk+0X01;Hk[10]=Hk[10][iT[0x1]];uk=uk+1;do uk=uk+1;end;iT=bc[uk];uk=uk+1;Hk[0X000B]=iT[6];uk=uk+1;vJ=0x0000A;(Hk)[vJ]=Hk[vJ](Hk[vJ+0X00001]);do jk=vJ;end;uk=uk+0X1;uk=uk+0X1;iT=bc[uk];uk=uk+1;(Hk[0])[iT[0X6]]=iT[0x1];iT=bc[uk];uk=uk+0x1;Hk[0XB]=kk[iT[0X0006]];uk=uk+0X001;uk=uk+1;iT=bc[uk];uk=uk+1;(Hk)[0XB]=Hk[11][iT[1]];iT=bc[uk];do uk=uk+0X1;end;do(Hk[0])[iT[6]]=Hk[0XB];end;iT=bc[uk];uk=uk+0X0001;(Hk)[0XB]=kk[iT[0X6]];uk=uk+0X001;uk=uk+0X001;iT=bc[uk];uk=uk+0x001;(Hk)[11]=Hk[11][iT[1]];uk=uk+1;uk=uk+0X1;iT=bc[uk];uk=uk+0x0001;do Hk[0xB]=Hk[11][iT[0X1]];end;iT=bc[uk];uk=uk+0X01;(Hk[0])[iT[6]]=Hk[0x000B];local VJ=Hk[0x00];iT=bc[uk];uk=uk+1;vJ=11;do(Hk)[vJ+0x1]=VJ;end;(Hk)[vJ]=VJ[iT[0X001]];uk=uk+1;vJ=11;Hk[vJ](Hk[vJ+1]);do jk=vJ-1;end;uk=uk+1;uk=uk+1;iT=bc[uk];uk=uk+1;do(Hk[0X01])[iT[0X6]]=iT[1];end;do uk=uk+0X1;end;Hk[11]=Hk[0];iT=bc[uk];uk=uk+1;(Hk[1])[iT[0x0006]]=Hk[11];iT=bc[uk];uk=uk+0X01;do Hk[11]=kk[iT[0X006]];end;do uk=uk+0X001;end;uk=uk+0X1;iT=bc[uk];uk=uk+0X1;do(Hk)[11]=Hk[11][iT[0X1]];end;uk=uk+0X1;uk=uk+0x01;do iT=bc[uk];end;uk=uk+1;Hk[0Xc]=iT[6];iT=bc[uk];uk=uk+1;(Hk)[0Xd]=iT[6];iT=bc[uk];uk=uk+1;(Hk)[14]=iT[0X0006];uk=uk+0X001;vJ=0X0B;do jk=vJ+0x4-1;end;Hk[vJ]=Hk[vJ](E(Hk,vJ+1,jk));do jk=vJ;end;do uk=uk+1;end;uk=uk+1;iT=bc[uk];uk=uk+1;do(Hk[0X1])[iT[0X0006]]=Hk[11];end;iT=bc[uk];uk=uk+0X00001;do Hk[0X1][iT[0X00006]]=iT[1];end;iT=bc[uk];uk=uk+1;do Hk[11]=kk[iT[6]];end;iT=bc[uk];uk=uk+0X1;(Hk)[11]=Hk[11][iT[1]];do uk=uk+0X1;end;uk=uk+1;iT=bc[uk];uk=uk+1;Hk[0Xc]=iT[6];do iT=bc[uk];end;do uk=uk+0X1;end;Hk[13]=iT[6];iT=bc[uk];uk=uk+1;do Hk[0X000E]=iT[6];end;iT=bc[uk];uk=uk+1;do Hk[15]=iT[6];end;uk=uk+0X00001;vJ=11;jk=vJ+0x05-1;Hk[vJ]=Hk[vJ](E(Hk,vJ+0X1,jk));jk=vJ;uk=uk+0X01;uk=uk+0X1;iT=bc[uk];uk=uk+1;Hk[0X1][iT[6]]=Hk[0XB];iT=bc[uk];uk=uk+0X1;Hk[0X2][iT[6]]=iT[1];do uk=uk+1;end;Hk[0X00b]=Hk[0X00001];iT=bc[uk];uk=uk+0X1;(Hk[2])[iT[0x6]]=Hk[0X000B];iT=bc[uk];uk=uk+1;do Hk[0Xb]=kk[iT[0X6]];end;do iT=bc[uk];end;do uk=uk+0x0001;end;Hk[0XB]=Hk[0X0000B][iT[0X0001]];do iT=bc[uk];end;uk=uk+1;(Hk)[12]=iT[6];iT=bc[uk];do uk=uk+1;end;Hk[0Xd]=iT[6];iT=bc[uk];do uk=uk+1;end;Hk[14]=iT[0X6];do uk=uk+0X01;end;do vJ=0X000B;end;jk=vJ+0X4-1;do(Hk)[vJ]=Hk[vJ](E(Hk,vJ+1,jk));end;do jk=vJ;end;do iT=bc[uk];end;uk=uk+1;Hk[2][iT[6]]=Hk[0Xb];iT=bc[uk];do uk=uk+1;end;(Hk[0X2])[iT[6]]=iT[1];iT=bc[uk];uk=uk+1;Hk[2][iT[6]]=iT[0X00001];iT=bc[uk];do uk=uk+0X00001;end;(Hk)[0xb]=kk[iT[6]];iT=bc[uk];do uk=uk+1;end;(Hk)[11]=Hk[11][iT[1]];iT=bc[uk];do uk=uk+1;end;Hk[12]=iT[6];iT=bc[uk];uk=uk+1;do(Hk)[0X0000d]=iT[0X6];end;do iT=bc[uk];end;uk=uk+0X1;(Hk)[0Xe]=iT[6];do iT=bc[uk];end;uk=uk+1;(Hk)[15]=iT[0X6];do uk=uk+0x1;end;do vJ=0Xb;end;jk=vJ+5-0X1;Hk[vJ]=Hk[vJ](E(Hk,vJ+1,jk));do jk=vJ;end;uk=uk+1;uk=uk+0X1;do iT=bc[uk];end;uk=uk+1;(Hk[0X0002])[iT[0X6]]=Hk[0X000b];do iT=bc[uk];end;uk=uk+1;Hk[2][iT[6]]=iT[0X1];iT=bc[uk];uk=uk+0X00001;Hk[2][iT[0X6]]=iT[0X1];uk=uk+0X1;(Hk)[11]=Hk[0x1];iT=bc[uk];uk=uk+1;Hk[3][iT[0X0006]]=Hk[11];iT=bc[uk];uk=uk+1;(Hk)[11]=kk[iT[0X6]];uk=uk+1;uk=uk+0X1;iT=bc[uk];do uk=uk+1;end;do(Hk)[11]=Hk[11][iT[0x1]];end;iT=bc[uk];uk=uk+0X01;(Hk)[0x0B]=Hk[11][iT[0x001]];do uk=uk+0X1;end;uk=uk+0X1;iT=bc[uk];uk=uk+0X1;do(Hk[3])[iT[6]]=Hk[11];end;iT=bc[uk];uk=uk+1;Hk[0Xb]=kk[iT[6]];uk=uk+0X1;do uk=uk+1;end;do iT=bc[uk];end;uk=uk+1;Hk[11]=Hk[11][iT[1]];iT=bc[uk];uk=uk+1;Hk[0X0000B]=Hk[11][iT[1]];iT=bc[uk];uk=uk+1;(Hk[3])[iT[0x00006]]=Hk[11];iT=bc[uk];uk=uk+1;Hk[0Xb]=kk[iT[6]];iT=bc[uk];uk=uk+1;(Hk)[11]=Hk[11][iT[1]];iT=bc[uk];uk=uk+0X0001;(Hk)[0x000c]=iT[0X6];iT=bc[uk];do uk=uk+0x1;end;do(Hk)[0Xd]=iT[0X06];end;uk=uk+1;vJ=0X0B;do(Hk)[vJ]=Hk[vJ](Hk[vJ+0x1],Hk[vJ+2]);end;jk=vJ;do iT=bc[uk];end;uk=uk+1;(Hk[0X3])[iT[0X6]]=Hk[11];iT=bc[uk];uk=uk+0X1;(Hk[4])[iT[0X6]]=iT[0X1];uk=uk+1;do Hk[0X000B]=Hk[1];end;iT=bc[uk];uk=uk+0X0001;do(Hk[0X04])[iT[6]]=Hk[11];end;iT=bc[uk];uk=uk+1;(Hk)[11]=kk[iT[6]];do uk=uk+1;end;uk=uk+0x1;iT=bc[uk];uk=uk+0X01;(Hk)[0X0000b]=Hk[11][iT[0x1]];do uk=uk+0X1;end;uk=uk+0X1;iT=bc[uk];uk=uk+1;Hk[0X0C]=iT[6];iT=bc[uk];uk=uk+1;(Hk)[0X00D]=iT[6];iT=bc[uk];do uk=uk+1;end;do Hk[14]=iT[0X00006];end;uk=uk+1;vJ=11;do jk=vJ+4-1;end;Hk[vJ]=Hk[vJ](E(Hk,vJ+0x1,jk));do jk=vJ;end;uk=uk+0X1;uk=uk+1;iT=bc[uk];do uk=uk+0X00001;end;Hk[0x004][iT[0x6]]=Hk[11];iT=bc[uk];do uk=uk+1;end;Hk[4][iT[6]]=iT[1];iT=bc[uk];do uk=uk+1;end;do(Hk[0X4])[iT[6]]=iT[0X1];end;iT=bc[uk];uk=uk+0x001;(Hk)[0X00B]=kk[iT[0X6]];do uk=uk+1;end;uk=uk+0X0001;iT=bc[uk];uk=uk+0x001;(Hk)[11]=Hk[11][iT[0X00001]];uk=uk+1;do uk=uk+0X00001;end;iT=bc[uk];uk=uk+0X1;Hk[12]=iT[0X006];iT=bc[uk];uk=uk+0X1;Hk[13]=iT[6];iT=bc[uk];uk=uk+1;Hk[0Xe]=iT[0X6];iT=bc[uk];uk=uk+1;do Hk[0XF]=iT[6];end;uk=uk+1;do vJ=0X0B;end;jk=vJ+5-1;do Hk[vJ]=Hk[vJ](E(Hk,vJ+0X001,jk));end;jk=vJ;uk=uk+0x1;do uk=uk+0X1;end;iT=bc[uk];uk=uk+1;do Hk[0X4][iT[6]]=Hk[11];end;do iT=bc[uk];end;uk=uk+0X00001;do(Hk[4])[iT[6]]=iT[0X1];end;iT=bc[uk];do uk=uk+1;end;(Hk[4])[iT[6]]=iT[0X1];iT=bc[uk];uk=uk+0X001;Hk[0X5][iT[0X6]]=iT[0X1];uk=uk+1;(Hk)[11]=Hk[1];iT=bc[uk];uk=uk+1;do Hk[5][iT[6]]=Hk[0X0000B];end;iT=bc[uk];uk=uk+1;do Hk[0X0b]=kk[iT[0X0006]];end;do iT=bc[uk];end;uk=uk+1;(Hk)[11]=Hk[11][iT[1]];uk=uk+1;uk=uk+0X1;iT=bc[uk];uk=uk+0X1;do(Hk)[12]=iT[6];end;iT=bc[uk];uk=uk+0x0001;Hk[0X000D]=iT[6];do iT=bc[uk];end;uk=uk+1;Hk[0XE]=iT[6];uk=uk+1;vJ=11;do jk=vJ+0x4-0x00001;end;(Hk)[vJ]=Hk[vJ](E(Hk,vJ+1,jk));do jk=vJ;end;uk=uk+1;uk=uk+1;do iT=bc[uk];end;uk=uk+0X1;Hk[5][iT[0X00006]]=Hk[0X0000B];iT=bc[uk];do uk=uk+0X1;end;Hk[5][iT[6]]=iT[0X0001];iT=bc[uk];uk=uk+1;(Hk[5])[iT[0X6]]=iT[1];iT=bc[uk];uk=uk+0X1;do Hk[11]=kk[iT[0X00006]];end;iT=bc[uk];uk=uk+0x1;Hk[0X0000b]=Hk[11][iT[0X1]];uk=uk+1;uk=uk+1;iT=bc[uk];do uk=uk+0X1;end;Hk[12]=iT[6];iT=bc[uk];do uk=uk+0X1;end;Hk[0xD]=iT[0x0006];iT=bc[uk];do uk=uk+0X1;end;(Hk)[0X00E]=iT[6];iT=bc[uk];do uk=uk+0X0001;end;(Hk)[0XF]=iT[0X06];do uk=uk+1;end;vJ=11;jk=vJ+5-0X0001;(Hk)[vJ]=Hk[vJ](E(Hk,vJ+1,jk));do jk=vJ;end;iT=bc[uk];do uk=uk+1;end;(Hk[5])[iT[6]]=Hk[11];do iT=bc[uk];end;uk=uk+1;Hk[5][iT[0x6]]=iT[0X001];iT=bc[uk];uk=uk+1;Hk[0X5][iT[0X00006]]=iT[0x001];iT=bc[uk];do uk=uk+0X00001;end;do Hk[0X6][iT[0X6]]=iT[1];end;uk=uk+0X1;Hk[11]=Hk[1];iT=bc[uk];do uk=uk+0X1;end;(Hk[0X0006])[iT[6]]=Hk[0X0000B];iT=bc[uk];uk=uk+1;do(Hk)[0XB]=kk[iT[6]];end;iT=bc[uk];uk=uk+1;(Hk)[11]=Hk[11][iT[0X1]];do uk=uk+1;end;uk=uk+0X00001;do iT=bc[uk];end;do uk=uk+1;end;Hk[0xc]=iT[6];iT=bc[uk];uk=uk+0X1;do Hk[13]=iT[6];end;iT=bc[uk];uk=uk+0x01;do(Hk)[0Xe]=iT[0X00006];end;do uk=uk+0X0001;end;vJ=11;jk=vJ+4-0x00001;Hk[vJ]=Hk[vJ](E(Hk,vJ+0X1,jk));do jk=vJ;end;uk=uk+0X1;uk=uk+0X1;iT=bc[uk];do uk=uk+1;end;Hk[6][iT[6]]=Hk[11];iT=bc[uk];uk=uk+0X1;Hk[0X0006][iT[6]]=iT[1];iT=bc[uk];do uk=uk+1;end;(Hk[0X6])[iT[6]]=iT[1];do iT=bc[uk];end;uk=uk+0X1;Hk[0XB]=kk[iT[6]];iT=bc[uk];uk=uk+0X1;(Hk)[11]=Hk[0x00b][iT[0x00001]];uk=uk+1;do uk=uk+0X1;end;iT=bc[uk];uk=uk+0x1;Hk[0Xc]=iT[6];iT=bc[uk];uk=uk+0X0001;(Hk)[0Xd]=iT[0X0006];do iT=bc[uk];end;uk=uk+1;Hk[14]=iT[6];iT=bc[uk];uk=uk+0X1;(Hk)[0Xf]=iT[0X6];uk=uk+1;do vJ=0x0b;end;jk=vJ+5-0X1;(Hk)[vJ]=Hk[vJ](E(Hk,vJ+1,jk));jk=vJ;uk=uk+0X00001;uk=uk+0X1;do iT=bc[uk];end;uk=uk+0X1;(Hk[6])[iT[6]]=Hk[0X0B];do iT=bc[uk];end;do uk=uk+0x1;end;(Hk[0X06])[iT[0X6]]=iT[1];iT=bc[uk];uk=uk+1;(Hk[6])[iT[6]]=iT[0X001];do iT=bc[uk];end;do uk=uk+0X1;end;do(Hk[0x7])[iT[6]]=iT[1];end;uk=uk+1;(Hk)[11]=Hk[0X1];iT=bc[uk];uk=uk+0X1;(Hk[7])[iT[0x6]]=Hk[11];do iT=bc[uk];end;do uk=uk+1;end;(Hk)[11]=kk[iT[0X6]];uk=uk+1;do uk=uk+1;end;do iT=bc[uk];end;do uk=uk+0X0001;end;(Hk)[11]=Hk[11][iT[1]];uk=uk+1;uk=uk+1;iT=bc[uk];uk=uk+1;Hk[12]=iT[0x6];iT=bc[uk];do uk=uk+1;end;Hk[0X0D]=iT[0x00006];iT=bc[uk];uk=uk+0x1;Hk[0Xe]=iT[0X06];uk=uk+1;vJ=0xB;jk=vJ+0x4-1;(Hk)[vJ]=Hk[vJ](E(Hk,vJ+1,jk));jk=vJ;iT=bc[uk];uk=uk+0X1;(Hk[0X7])[iT[6]]=Hk[0XB];iT=bc[uk];do uk=uk+1;end;Hk[7][iT[6]]=iT[0X0001];iT=bc[uk];uk=uk+0X0001;do Hk[7][iT[6]]=iT[0X01];end;iT=bc[uk];uk=uk+1;Hk[11]=kk[iT[6]];uk=uk+0X1;uk=uk+1;iT=bc[uk];uk=uk+1;Hk[11]=Hk[0x00b][iT[1]];do iT=bc[uk];end;uk=uk+1;(Hk)[0X0C]=iT[0X6];iT=bc[uk];uk=uk+0X1;Hk[13]=iT[0X6];iT=bc[uk];uk=uk+1;Hk[14]=iT[0X0006];do iT=bc[uk];end;uk=uk+0X1;do(Hk)[0x00F]=iT[0X6];end;uk=uk+0x1;vJ=11;jk=vJ+0X005-1;Hk[vJ]=Hk[vJ](E(Hk,vJ+0X1,jk));jk=vJ;do iT=bc[uk];end;do uk=uk+1;end;(Hk[0X7])[iT[6]]=Hk[11];iT=bc[uk];uk=uk+0X1;Hk[0X7][iT[6]]=iT[1];iT=bc[uk];uk=uk+1;Hk[0X7][iT[0X6]]=iT[0x1];iT=bc[uk];uk=uk+0X001;Hk[8][iT[6]]=iT[0x1];uk=uk+1;Hk[11]=Hk[0x0];iT=bc[uk];do uk=uk+1;end;Hk[0X00008][iT[0X0006]]=Hk[0xb];iT=bc[uk];uk=uk+0X1;do Hk[0XB]=kk[iT[0X6]];end;iT=bc[uk];uk=uk+1;(Hk)[0X00b]=Hk[0Xb][iT[1]];uk=uk+0X0001;do uk=uk+1;end;iT=bc[uk];do uk=uk+0X1;end;do Hk[12]=iT[0x6];end;do iT=bc[uk];end;uk=uk+0x001;(Hk)[0X0D]=iT[0X0006];iT=bc[uk];uk=uk+1;(Hk)[14]=iT[0X6];do uk=uk+0X1;end;vJ=11;jk=vJ+0x4-0X1;(Hk)[vJ]=Hk[vJ](E(Hk,vJ+1,jk));do jk=vJ;end;uk=uk+0X1;do uk=uk+0X001;end;do iT=bc[uk];end;do uk=uk+1;end;do Hk[0x08][iT[6]]=Hk[11];end;do iT=bc[uk];end;uk=uk+0x001;do Hk[0X8][iT[0x6]]=iT[1];end;do iT=bc[uk];end;uk=uk+0X001;do(Hk)[0Xb]=kk[iT[0X00006]];end;uk=uk+1;uk=uk+1;do iT=bc[uk];end;uk=uk+0X1;Hk[11]=Hk[11][iT[1]];iT=bc[uk];uk=uk+1;Hk[0XC]=iT[6];iT=bc[uk];uk=uk+1;Hk[13]=iT[6];iT=bc[uk];uk=uk+0X1;do Hk[14]=iT[0X006];end;do iT=bc[uk];end;uk=uk+1;(Hk)[0X000F]=iT[0X6];uk=uk+1;do vJ=0XB;end;jk=vJ+5-1;Hk[vJ]=Hk[vJ](E(Hk,vJ+1,jk));jk=vJ;uk=uk+1;uk=uk+0X1;iT=bc[uk];uk=uk+1;(Hk[0X8])[iT[6]]=Hk[0X000b];iT=bc[uk];do uk=uk+0X1;end;Hk[11]=kk[iT[0X6]];iT=bc[uk];do uk=uk+0X01;end;do Hk[0X000b]=Hk[11][iT[1]];end;uk=uk+0X1;do uk=uk+0X00001;end;iT=bc[uk];uk=uk+1;Hk[0XC]=iT[6];iT=bc[uk];do uk=uk+1;end;Hk[0X0d]=iT[0X6];iT=bc[uk];uk=uk+1;do Hk[0xE]=iT[0X0006];end;iT=bc[uk];do uk=uk+0X1;end;(Hk)[15]=iT[6];uk=uk+1;vJ=11;jk=vJ+0X05-1;local DJ=0XC;Hk[vJ]=Hk[vJ](E(Hk,vJ+0X01,jk));do jk=vJ;end;iT=bc[uk];uk=uk+0X001;(Hk[0X0008])[iT[0X6]]=Hk[11];uk=uk+1;(Hk)[11]=Hk[0X8];iT=bc[uk];do uk=uk+0X00001;end;do Hk[9][iT[0x006]]=Hk[0X0000b];end;iT=bc[uk];uk=uk+0X0001;do Hk[0x00B]=kk[iT[6]];end;do uk=uk+1;end;uk=uk+1;iT=bc[uk];uk=uk+1;(Hk)[0X0b]=Hk[11][iT[0X01]];iT=bc[uk];uk=uk+1;(Hk)[0X0B]=Hk[11][iT[1]];do uk=uk+0x0001;end;uk=uk+1;iT=bc[uk];do uk=uk+1;end;Hk[9][iT[0x6]]=Hk[0Xb];iT=bc[uk];uk=uk+1;Hk[0x000B]=kk[iT[0x6]];do iT=bc[uk];end;uk=uk+1;do(Hk)[0xB]=Hk[0xb][iT[1]];end;iT=bc[uk];do uk=uk+0X1;end;(Hk)[0x000C]=iT[0X6];iT=bc[uk];do uk=uk+1;end;(Hk)[0x0d]=iT[0X6];do uk=uk+1;end;vJ=11;do(Hk)[vJ]=Hk[vJ](Hk[vJ+0X01],Hk[vJ+0X2]);end;jk=vJ;iT=bc[uk];do uk=uk+0X1;end;do Hk[0X9][iT[0x6]]=Hk[0Xb];end;iT=bc[uk];uk=uk+0X01;do Hk[11]=kk[iT[0X0006]];end;iT=bc[uk];uk=uk+1;do(Hk)[0XB]=Hk[11][iT[1]];end;iT=bc[uk];uk=uk+0X1;(Hk)[12]=iT[6];iT=bc[uk];uk=uk+1;Hk[13]=iT[0X00006];uk=uk+1;do vJ=0X0000b;end;(Hk)[vJ]=Hk[vJ](Hk[vJ+1],Hk[vJ+0x0002]);jk=vJ;uk=uk+0X1;uk=uk+0X001;iT=bc[uk];do uk=uk+1;end;do Hk[9][iT[0X6]]=Hk[0XB];end;iT=bc[uk];do uk=uk+0X1;end;(Hk[0XA])[iT[0x6]]=iT[1];uk=uk+1;do(Hk)[11]=Hk[0x0000];end;iT=bc[uk];do uk=uk+1;end;Hk[10][iT[0x6]]=Hk[11];iT=bc[uk];uk=uk+0X1;do(Hk)[11]=kk[iT[6]];end;do iT=bc[uk];end;uk=uk+0X1;Hk[0x0b]=Hk[0Xb][iT[0X0001]];iT=bc[uk];uk=uk+1;Hk[0XC]=iT[6];iT=bc[uk];uk=uk+1;(Hk)[0xD]=iT[6];iT=bc[uk];uk=uk+0X1;Hk[0XE]=iT[0X00006];uk=uk+1;vJ=0Xb;jk=vJ+0X00004-0x00001;Hk[vJ]=Hk[vJ](E(Hk,vJ+0X01,jk));jk=vJ;iT=bc[uk];do uk=uk+0X0001;end;(Hk[10])[iT[6]]=Hk[11];iT=bc[uk];do uk=uk+1;end;Hk[0Xa][iT[0X6]]=iT[0X1];do iT=bc[uk];end;do uk=uk+1;end;Hk[0xB]=kk[iT[6]];uk=uk+0X1;uk=uk+0X1;iT=bc[uk];uk=uk+1;Hk[0XB]=Hk[0XB][iT[1]];uk=uk+1;uk=uk+1;iT=bc[uk];uk=uk+1;do Hk[12]=iT[6];end;iT=bc[uk];uk=uk+0x1;(Hk)[0X000d]=iT[0x6];iT=bc[uk];uk=uk+0X00001;Hk[14]=iT[6];iT=bc[uk];do uk=uk+0X1;end;do Hk[15]=iT[0X6];end;uk=uk+1;vJ=0x0b;jk=vJ+0X5-1;(Hk)[vJ]=Hk[vJ](E(Hk,vJ+0x0001,jk));jk=vJ;do iT=bc[uk];end;uk=uk+1;do(Hk[0X000A])[iT[0x6]]=Hk[11];end;do iT=bc[uk];end;uk=uk+1;Hk[11]=kk[iT[0X0006]];iT=bc[uk];uk=uk+1;Hk[11]=Hk[11][iT[1]];iT=bc[uk];uk=uk+0X1;(Hk)[0XC]=iT[6];iT=bc[uk];uk=uk+0x1;do(Hk)[0XD]=iT[0x6];end;iT=bc[uk];uk=uk+1;(Hk)[14]=iT[0x6];do iT=bc[uk];end;uk=uk+0x01;do Hk[15]=iT[6];end;uk=uk+0X1;vJ=0Xb;jk=vJ+5-0X1;Hk[vJ]=Hk[vJ](E(Hk,vJ+0X00001,jk));jk=vJ;do uk=uk+0X1;end;uk=uk+0x1;iT=bc[uk];do uk=uk+1;end;Hk[10][iT[6]]=Hk[11];iT=bc[uk];uk=uk+1;vJ=0X0b;VJ=Hk[0X9];Hk[vJ+0x1]=VJ;(Hk)[vJ]=VJ[iT[1]];uk=uk+1;vJ=11;(Hk)[vJ]=Hk[vJ](Hk[vJ+0X0001]);jk=vJ;uk=uk+0X001;uk=uk+0X1;uk=uk+1;(Hk)[12]=Hk[10];iT=bc[uk];uk=uk+0x01;Hk[11][iT[0x6]]=Hk[12];iT=bc[uk];uk=uk+1;(Hk)[12]=kk[iT[0x6]];uk=uk+1;uk=uk+0X1;iT=bc[uk];uk=uk+1;do(Hk)[0XC]=Hk[0Xc][iT[1]];end;uk=uk+1;uk=uk+0X1;iT=bc[uk];do uk=uk+1;end;do Hk[12]=Hk[12][iT[0x00001]];end;do iT=bc[uk];end;uk=uk+0X00001;(Hk[0xB])[iT[6]]=Hk[12];do iT=bc[uk];end;uk=uk+0X1;do Hk[0xC]=kk[iT[0X06]];end;do uk=uk+0x1;end;uk=uk+0X0001;do iT=bc[uk];end;uk=uk+1;(Hk)[12]=Hk[0X00c][iT[1]];uk=uk+1;do uk=uk+1;end;iT=bc[uk];uk=uk+0X1;(Hk)[12]=Hk[12][iT[1]];uk=uk+1;uk=uk+0X1;iT=bc[uk];uk=uk+0X1;(Hk[11])[iT[6]]=Hk[0x000C];uk=uk+1;Hk[0XC]=Hk[0];uk=uk+1;repeat local fE,NE=Lc,(Hk);if#fE>0X0 then local lp=({});do for Fn,rn in M,fE do do for y9,c9 in M,rn do do if not(c9[1]==NE and c9[0x002]>=0)then else local Uq=c9[2];if not(not lp[Uq])then else do lp[Uq]={NE[Uq]};end;end;(c9)[1]=lp[Uq];c9[0x00002]=0X00001;end;end;end;end;end;end;end;until true;do return false,DJ,DJ;end;end;else if UT~=0X10 then for nC=iT[2],iT[5]do(Hk)[nC]=nil;end;else Hk[iT[0X2]]=kk[iT[0X6]];end;end;end;end;end;end;end);if not(Pk)then if V(yk)=="string"then if not(r(yk,'\097\116\116\101\109\112t to \121ie\108\100 a\099\114\111\115s \109\101\116\097\109e\116\104od/C\037\045\099\097ll \098\111undary'))then else return coroutine.yield();end;do if not(r(yk,'^\046-\058%d+\058\032'))then q(yk,0);else(q)("Luraph Script:"..(Qc[uk-0x1]or'\040i\110ter\110\097l\041')..": "..u(yk),0X0);end;end;else(q)(yk,0);end;else if yk then if hk~=1 then return Hk[Fk](E(Hk,Fk+0X1,jk));else do return Hk[Fk]();end;end;elseif Fk then do return E(Hk,Fk,hk);end;end;end;end;end;end;end;end;end;end;else if not(Sc<0X37)then do if Sc>=0X3B then if Sc>=0X03D then if Sc==62 then do ic=function(...)local J0,N0=1,({});local R0=((k and k()or _ENV));local j0=({[1]=N0,[2]=Vc});local n0,m0=q3(...);local H0=(R0==H and fc or R0);n0=n0-0X1;do for dx=0,n0 do if ac>dx then(N0)[dx]=m0[dx+0X00001];else break;end;end;end;local K0=(0);if not nc then do m0=nil;end;elseif Ac then(N0)[ac]={n=n0>=ac and n0-ac+1 or 0,E(m0,ac+1,n0+0X1)};end;if H0==R0 then else if s then(s)(ic,H0);else do _ENV=H0;end;end;end;local q0,Y0,x0,O0=c(function()do while true do local Tf=bc[J0];local Sf=(Tf[3]);J0=J0+0X01;if Sf>=0X9 then if not(Sf>=14)then if not(Sf<11)then do if Sf>=12 then if Sf~=0XD then(N0)[Tf[2]]=Tf[0x6];else(N0)[Tf[0X00002]]=H0[Tf[0X6]];end;else N0[Tf[2]]=N0[Tf[5]][N0[Tf[0x04]]];end;end;else if Sf==10 then do J0=Tf[0X5];end;else N0[0X0]=H0[Tf[6]];local Ze=(0x00000);Tf=bc[J0];J0=J0+1;do N0[0x1]=Tf[6];end;J0=J0+0X01;(N0)[Ze]=N0[Ze](N0[Ze+1]);K0=Ze;local re=jc[0];J0=J0+0X01;do(N0)[0X001]=re[1][re[2]];end;J0=J0+0X1;J0=J0+0x1;Tf=bc[J0];J0=J0+0X1;(N0)[0X1]=N0[1][Tf[1]];J0=J0+0X1;N0[0X2]=N0[0];J0=J0+0X1;do Ze=0X1;end;do N0[Ze]=N0[Ze](N0[Ze+0X1]);end;do K0=Ze;end;J0=J0+1;J0=J0+1;Tf=bc[J0];do J0=J0+0X1;end;if not(not N0[0X1])then else do J0=Tf[5];end;end;end;end;else do if not(Sf<16)then if not(Sf<0X011)then if Sf==18 then else(N0)[Tf[2]]={E({},1,Tf[5])};end;else do(H0)[Tf[0X00006]]=N0[Tf[0X002]];end;end;else if Sf==0xF then do(N0)[Tf[2]]=not N0[Tf[5]];end;else N0[Tf[2]]=T(N0[Tf[5]],N0[Tf[4]]);end;end;end;end;else do if not(Sf>=0X0004)then if Sf>=0X2 then if Sf~=3 then for ue=Tf[2],Tf[0X0005]do(N0)[ue]=nil;end;else N0[1]=H0[Tf[0X6]];do J0=J0+1;end;do J0=J0+1;end;do Tf=bc[J0];end;J0=J0+0x1;local BD=1;do N0[2]=Tf[6];end;J0=J0+0X1;(N0[BD])(N0[BD+0X01]);K0=BD-1;do Tf=bc[J0];end;J0=J0+1;J0=Tf[0x5];end;else if Sf==1 then local ba=Uc[Tf[5]];local ya=nil;local sa=(ba[0X5]);local za=(#sa);do if not(za>0X0000)then else ya={};for CW=1,za do local XW=(sa[CW]);if XW[0X1]==0 then ya[CW-0X001]={N0,XW[0x0002]};else(ya)[CW-1]=jc[XW[2]];end;end;S(Lc,ya);end;end;do N0[Tf[2]]=e3(ba,ya,H0);end;else do j0[Tf[0X5]]=N0[Tf[0X2]];end;end;end;else if Sf>=6 then do if Sf>=7 then if Sf==8 then local QH=(Tf[0X2]);local YH=(Tf[0X5]);K0=QH+YH-1;repeat local VY,kY=Lc,(N0);do if not(#VY>0)then else local e7=({});for hB,ZB in M,VY do for TM,CM in M,ZB do if not(CM[0X1]==kY and CM[0X2]>=0X0)then else local ZZ=(CM[0X002]);if not(not e7[ZZ])then else e7[ZZ]={kY[ZZ]};end;CM[0X1]=e7[ZZ];CM[2]=1;end;end;end;end;end;until true;return true,QH,YH;else repeat local RN,mN=Lc,(N0);do if not(#RN>0X0)then else local uH=({});for TE,fE in M,RN do for A4,k4 in M,fE do if not(k4[0X1]==mN and k4[0x2]>=0)then else local gY=(k4[0X2]);do if not uH[gY]then uH[gY]={mN[gY]};end;end;(k4)[0x1]=uH[gY];(k4)[2]=1;end;end;end;end;end;until true;do return;end;end;else local f_=jc[0];N0[0X1]=f_[0X1][f_[0x0002]];J0=J0+0X1;local K_=1;do J0=J0+1;end;Tf=bc[J0];do J0=J0+0X1;end;(N0)[0X00001]=N0[0X1][Tf[1]];J0=J0+1;do(N0)[2]=N0[0];end;do J0=J0+0x0001;end;f_=jc[0x00001];(N0)[3]=f_[0x00001][f_[2]];do J0=J0+1;end;J0=J0+1;J0=J0+0X1;N0[K_](N0[K_+0X1],N0[K_+2]);do K0=K_-1;end;J0=J0+1;J0=J0+0x1;do Tf=bc[J0];end;J0=J0+1;do J0=Tf[0X5];end;end;end;else if Sf~=5 then local me=Tf[0X2];local Xe,ke=N0[me],(N0[me+0x01]);local Ze=(N0[me+0X00002]);do N0[me]=P(function()for xs=Xe,ke,Ze do(C)(true,xs);end;end);end;J0=Tf[5];else N0[Tf[2]]=N0[Tf[5]]*N0[Tf[4]];end;end;end;end;end;end;end;end);do if q0 then do if Y0 then if O0~=1 then do return N0[x0](E(N0,x0+0x01,K0));end;else return N0[x0]();end;elseif x0 then return E(N0,x0,O0);end;end;else if V(Y0)=="string"then if not(r(Y0,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(Y0,"^.-:%d+: "))then q(Y0,0);else(q)("Luraph Script:"..(Qc[J0-1]or"(i\110\116\101\114na\108\041").."\058 "..u(Y0),0);end;else q(Y0,0X0);end;end;end;end;end;else ic=function(...)local Ui,hi=0,({});local fi=((k and k()or _ENV));local pi,Mi=(fi==H and fc or fi),({[1]=hi,[2]=Vc});local li,Ai=q3(...);li=li-1;local ki=(1);for vR=0,li do if not(ac>vR)then do break;end;else do hi[vR]=Ai[vR+0x01];end;end;end;if not nc then Ai=nil;elseif Ac then hi[ac]={n=li>=ac and li-ac+0X001 or 0,E(Ai,ac+0X01,li+0X1)};end;do if pi~=fi then if not(s)then do _ENV=pi;end;else(s)(ic,pi);end;end;end;local ei,Ti,qi,ti=c(function()do while true do local tP=bc[ki];local iP=tP[0X3];ki=ki+0X1;if iP<7 then if not(iP>=3)then if iP>=0X1 then if iP==2 then(hi)[tP[0X2]]=T(hi[tP[5]],hi[tP[4]]);else(hi)[tP[0X2]]={E({},0X1,tP[5])};end;else(hi)[tP[0X2]]=not hi[tP[0X5]];end;else if iP<5 then do if iP~=0X00004 then local ep=(tP[0x002]);local Cp,tp=hi[ep]();if not(Cp)then else do ki=tP[5];end;(hi)[ep+0x3]=tp;end;else local iz=tP[2];local jz=tP[5];Ui=iz+jz-1;do repeat local Ml,Pl=Lc,(hi);if not(#Ml>0)then else local wx=({});for fd,Td in M,Ml do for bO,vO in M,Td do if not(vO[1]==Pl and vO[0x00002]>=0)then else local sI=vO[2];if not wx[sI]then(wx)[sI]={Pl[sI]};end;(vO)[0X1]=wx[sI];vO[2]=0X01;end;end;end;end;until true;end;do return true,iz,jz;end;end;end;else if iP==0X00006 then hi[tP[0X0002]]=tP[6];else local Fv=(Uc[tP[0x05]]);local pv,Yv=Fv[0X5],(nil);local Uv=#pv;if not(Uv>0)then else Yv={};do for Zk=1,Uv do local fk=pv[Zk];do if fk[1]==0X0 then Yv[Zk-0x00001]={hi,fk[0X2]};else do Yv[Zk-1]=jc[fk[0X002]];end;end;end;end;end;S(Lc,Yv);end;(hi)[tP[2]]=e3(Fv,Yv,pi);end;end;end;else do if not(iP<11)then if not(iP>=0XD)then if iP~=0XC then hi[0X000]=pi[tP[0X6]];do ki=ki+0X00001;end;ki=ki+0X001;do tP=bc[ki];end;local Wk=0X0;ki=ki+0x0001;(hi)[0]=hi[0][tP[0x1]];ki=ki+1;do ki=ki+0x1;end;tP=bc[ki];local sk=Uc[tP[0X5]];local ik=sk[0X5];ki=ki+1;local ak,Kk=nil,(#ik);do if Kk>0X000 then ak={};do for Do=0x01,Kk do local Xo=ik[Do];if Xo[0X1]~=0 then do(ak)[Do-0X001]=jc[Xo[0X2]];end;else ak[Do-1]={hi,Xo[0X002]};end;end;end;S(Lc,ak);end;end;hi[1]=e3(sk,ak,pi);do ki=ki+0x1;end;(hi[Wk])(hi[Wk+1]);Ui=Wk-1;do ki=ki+0x0001;end;ki=ki+1;ki=ki+1;repeat local Qh,ph=Lc,(hi);if#Qh>0X0000 then local SV=({});for j_,H_ in M,Qh do for uX,jX in M,H_ do if jX[0X01]==ph and jX[2]>=0 then local NN=jX[2];if not(not SV[NN])then else(SV)[NN]={ph[NN]};end;jX[0X01]=SV[NN];jX[2]=0X01;end;end;end;end;until true;return;else if not(not(hi[tP[5]]<hi[tP[4]]))then else ki=tP[2];end;end;else if iP~=14 then else ki=tP[5];end;end;else if iP<0X9 then do if iP==8 then for fV=tP[2],tP[5]do hi[fV]=nil;end;else(hi)[tP[0X002]]=pi[tP[6]];end;end;else if iP~=10 then do(hi)[tP[2]]=hi[tP[0x5]]<hi[tP[0X0004]];end;else repeat local Qz,pz=Lc,hi;do if#Qz>0X00 then local KV=({});for Px,Jx in M,Qz do for jf,lf in M,Jx do if lf[1]==pz and lf[2]>=0 then local iI=(lf[2]);if not(not KV[iI])then else KV[iI]={pz[iI]};end;lf[1]=KV[iI];lf[0X002]=1;end;end;end;end;end;until true;local pw=(tP[2]);return false,pw,pw+tP[5]-2;end;end;end;end;end;end;end;end);if ei then if Ti then if ti==1 then return hi[qi]();else return hi[qi](E(hi,qi+0x1,Ui));end;elseif not(qi)then else return E(hi,qi,ti);end;else if V(Ti)=="\115\116\114\105\110g"then if r(Ti,'a\116\116\101\109\112t t\111\032yield\032ac\114\111s\115\032m\101\116ame\116\104\111d\047C\037-\099\097\108\108\032bou\110da\114\121')then return coroutine.yield();end;if not(r(Ti,'^.-\058%d\043: '))then(q)(Ti,0x0000);else q('\076ur\097p\104 \083\099\114ip\116\058'..(Qc[ki-0X1]or"\040i\110t\101r\110\097\108)")..": "..u(Ti),0X00);end;else q(Ti,0);end;end;end;end;else if Sc==60 then ic=function(...)local gF,LF=1,({});local XF=(k and k()or _ENV);local tF=({[1]=LF,[2]=Vc});local mF,TF=q3(...);local SF=0X0;mF=mF-1;do for m2=0X0,mF do do if not(ac>m2)then break;else LF[m2]=TF[m2+0X1];end;end;end;end;local aF=((XF==H and fc or XF));if not nc then do TF=nil;end;elseif Ac then(LF)[ac]={n=mF>=ac and mF-ac+0X1 or 0X00000,E(TF,ac+0x1,mF+1)};end;if aF~=XF then if not(s)then _ENV=aF;else s(ic,aF);end;end;local yF,vF,wF,NF=c(function()while true do local Vx=bc[gF];local Hx=(Vx[0X0003]);do gF=gF+0X001;end;if Hx<7 then if not(Hx<3)then if not(Hx>=5)then do if Hx~=0X0004 then LF[Vx[0X2]]=w(LF[Vx[0X05]],LF[Vx[4]]);else LF[Vx[2]]=Vx[6];end;end;else do if Hx~=6 then gF=Vx[0x5];else for zs=Vx[0X2],Vx[0x5]do LF[zs]=nil;end;end;end;end;else do if Hx<0x1 then do(LF)[Vx[0X002]]=v(LF[Vx[0x5]],LF[Vx[4]]);end;else if Hx==0X00002 then else if not(LF[Vx[5]]<LF[Vx[0X4]])then else gF=Vx[0x2];end;end;end;end;end;else if not(Hx>=11)then do if not(Hx>=9)then if Hx~=0x8 then do(LF)[Vx[2]]={E({},0X001,Vx[0X00005])};end;else(LF)[Vx[2]]=LF[Vx[0x5]]>LF[Vx[4]];end;else if Hx~=10 then local uD=(Vx[0X02]);local ID,hD=LF[uD]();do if not(ID)then else for N0=1,Vx[4]do LF[uD+N0]=hD[N0];end;gF=Vx[5];end;end;else LF[Vx[2]]=LF[Vx[0X5]]~=LF[Vx[4]];end;end;end;else if Hx<0Xd then if Hx==12 then(LF)[0x000]=aF[Vx[6]];gF=gF+1;gF=gF+1;local xf=0;do Vx=bc[gF];end;gF=gF+1;local Hf=LF[0X0];LF[xf+0X0001]=Hf;LF[xf]=Hf[Vx[1]];Vx=bc[gF];do gF=gF+1;end;do LF[0x2]=Vx[6];end;do gF=gF+0X0001;end;xf=0X0000;(LF)[xf]=LF[xf](LF[xf+0X00001],LF[xf+2]);SF=xf;Vx=bc[gF];do gF=gF+0x1;end;xf=0X0;do Hf=LF[0];end;LF[xf+1]=Hf;do(LF)[xf]=Hf[Vx[1]];end;Vx=bc[gF];gF=gF+0X1;(LF)[2]=aF[Vx[6]];Vx=bc[gF];gF=gF+0X0001;(LF)[2]=LF[0X2][Vx[0x1]];do gF=gF+1;end;gF=gF+1;Vx=bc[gF];gF=gF+1;(LF)[0x3]=Vx[6];do Vx=bc[gF];end;do gF=gF+0X1;end;LF[0x00004]=Vx[0X06];gF=gF+0x1;do xf=0X2;end;LF[xf]=LF[xf](LF[xf+1],LF[xf+0X002]);SF=xf;gF=gF+0X0001;gF=gF+0X1;Vx=bc[gF];gF=gF+0X1;LF[0X3]=aF[Vx[0X06]];do Vx=bc[gF];end;do gF=gF+1;end;(LF)[0X3]=LF[0x003][Vx[1]];Vx=bc[gF];do gF=gF+0X1;end;LF[3]=LF[3][Vx[0x1]];do gF=gF+1;end;do gF=gF+0X1;end;gF=gF+0X1;xf=0X0;SF=xf+4-0X1;(LF[xf])(E(LF,xf+1,SF));SF=xf-1;gF=gF+1;gF=gF+1;do Vx=bc[gF];end;gF=gF+0X1;(LF)[0X0000]=aF[Vx[0x6]];gF=gF+1;gF=gF+0x1;Vx=bc[gF];gF=gF+0x1;do(LF)[0X1]=Vx[0X00006];end;gF=gF+1;do xf=0X0;end;LF[xf](LF[xf+0X1]);do SF=xf-0X1;end;do Vx=bc[gF];end;gF=gF+0X1;LF[0X0]=aF[Vx[0X0006]];gF=gF+0x1;gF=gF+1;do Vx=bc[gF];end;gF=gF+1;xf=0;Hf=LF[0];(LF)[xf+1]=Hf;do(LF)[xf]=Hf[Vx[0X0001]];end;Vx=bc[gF];gF=gF+0X001;do(LF)[0X2]=Vx[6];end;gF=gF+0x1;xf=0;(LF)[xf]=LF[xf](LF[xf+0X1],LF[xf+2]);SF=xf;gF=gF+0X0001;gF=gF+0X1;Vx=bc[gF];gF=gF+0X1;do xf=0;end;Hf=LF[0X00];LF[xf+0x1]=Hf;LF[xf]=Hf[Vx[0X1]];Vx=bc[gF];gF=gF+1;LF[2]=aF[Vx[0X6]];Vx=bc[gF];do gF=gF+1;end;(LF)[0x2]=LF[0X2][Vx[1]];do gF=gF+0X1;end;gF=gF+1;Vx=bc[gF];do gF=gF+0X1;end;LF[0X3]=Vx[6];Vx=bc[gF];gF=gF+1;LF[0X00004]=Vx[6];gF=gF+0X00001;xf=2;do LF[xf]=LF[xf](LF[xf+1],LF[xf+0X00002]);end;do SF=xf;end;Vx=bc[gF];gF=gF+0X1;do LF[3]=aF[Vx[0x006]];end;Vx=bc[gF];do gF=gF+0X1;end;(LF)[0x3]=LF[0X3][Vx[0x1]];gF=gF+1;gF=gF+1;Vx=bc[gF];gF=gF+0X1;(LF)[3]=LF[3][Vx[1]];gF=gF+1;xf=0;do SF=xf+0x004-0x1;end;LF[xf](E(LF,xf+0X1,SF));SF=xf-0x1;gF=gF+0X1;do repeat local Iy,Ty=Lc,(LF);do if#Iy>0 then local Da=({});do for KA,OA in M,Iy do for J5,e5 in M,OA do if e5[0X00001]==Ty and e5[0X2]>=0 then local EY=(e5[0X0002]);if not(not Da[EY])then else(Da)[EY]={Ty[EY]};end;do e5[1]=Da[EY];end;e5[0X2]=1;end;end;end;end;end;end;until true;end;return;else LF[Vx[2]]=LF[Vx[5]]<LF[Vx[0X4]];end;else if Hx~=14 then(LF)[Vx[0X02]]=aF[Vx[6]];else local RF=(Uc[Vx[5]]);local eF,FF=RF[5],nil;local VF=#eF;if not(VF>0)then else FF={};for N2=0X1,VF do local d2=(eF[N2]);if d2[1]~=0 then(FF)[N2-1]=jc[d2[0X2]];else do FF[N2-0X01]={LF,d2[2]};end;end;end;S(Lc,FF);end;(LF)[Vx[0X2]]=e3(RF,FF,aF);end;end;end;end;end;end);if not(yF)then if V(vF)~='strin\103'then(q)(vF,0);else if r(vF,'a\116te\109pt\032\116\111 \121\105\101l\100 \097c\114\111\115\115\032\109\101\116\097\109\101t\104\111\100/\067\037-ca\108l\032bo\117nd\097\114y')then return coroutine.yield();end;if not(r(vF,"^.-:%d+: "))then q(vF,0);else(q)('\076\117r\097ph \083c\114\105pt:'..(Qc[gF-0X0001]or"\040\105\110\116e\114n\097l)")..":\032"..u(vF),0);end;end;else do if vF then if NF==1 then return LF[wF]();else do return LF[wF](E(LF,wF+0x00001,SF));end;end;elseif wF then return E(LF,wF,NF);end;end;end;end;else ic=function(...)local wE=({});local TE=(1);local eE=(k and k()or _ENV);local aE=(0X0000);local NE,WE=q3(...);local jE=({[1]=wE,[2]=Vc});NE=NE-1;do for AY=0X0,NE do if ac>AY then wE[AY]=WE[AY+0X01];else break;end;end;end;local PE=(eE==H and fc or eE);do if not nc then WE=nil;elseif Ac then wE[ac]={n=NE>=ac and NE-ac+1 or 0,E(WE,ac+0X1,NE+0X1)};end;end;if PE==eE then else if s then(s)(ic,PE);else _ENV=PE;end;end;local CE,lE,uE,qE=c(function()do while true do local xI=bc[TE];local YI=xI[3];do TE=TE+1;end;if YI>=12 then if YI<0X12 then if YI>=15 then if not(YI>=0X010)then for dU=xI[0X2],xI[0X05]do do(wE)[dU]=nil;end;end;else if YI~=0X11 then wE[xI[0X2]]=xI[6];else(wE)[0X0000]=PE[xI[0x6]];TE=TE+0X1;do TE=TE+0x0001;end;xI=bc[TE];TE=TE+0x001;wE[0]=wE[0][xI[1]];TE=TE+1;TE=TE+1;xI=bc[TE];TE=TE+0X1;do if not(not wE[0])then else TE=xI[5];end;end;end;end;else do if YI<13 then do wE[xI[0X2]]=PE[xI[6]];end;else do if YI~=0X0000E then(wE)[xI[2]]={E({},0X1,xI[5])};else local Hm=(xI[2]);do for sp=Hm,Hm+(xI[5]-1)do wE[sp]=WE[ac+(sp-Hm)+1];end;end;end;end;end;end;end;else if YI<21 then if not(YI>=0X13)then else if YI~=0X0014 then wE[0]=PE[xI[6]];do TE=TE+1;end;TE=TE+0X0001;local V4=0;xI=bc[TE];local u4=Uc[xI[0X5]];TE=TE+0X001;local X4=nil;local J4=u4[0X00005];local v4=(#J4);if v4>0 then X4={};for BI=1,v4 do local AI=J4[BI];if AI[1]~=0 then(X4)[BI-0X1]=jc[AI[2]];else(X4)[BI-1]={wE,AI[2]};end;end;S(Lc,X4);end;do(wE)[1]=e3(u4,X4,PE);end;TE=TE+1;(wE[V4])(wE[V4+0X1]);aE=V4-1;TE=TE+1;TE=TE+0x00001;do xI=bc[TE];end;TE=TE+1;TE=xI[5];else do wE[xI[0X002]]=wE[xI[5]]~=wE[xI[0x004]];end;end;end;else do if YI>=0X16 then do if YI==0X17 then wE[0X0]=PE[xI[0X6]];TE=TE+0X1;TE=TE+1;xI=bc[TE];TE=TE+0X0001;if wE[0]then TE=xI[0X5];end;else(wE)[1]=PE[xI[0x6]];do TE=TE+0X01;end;do TE=TE+1;end;do xI=bc[TE];end;TE=TE+1;if not(wE[0X001])then else TE=xI[0X005];end;end;end;else(wE)[0]=PE[xI[0X6]];TE=TE+0X1;aE=0X0;(wE)[aE]=wE[aE]();xI=bc[TE];do TE=TE+0x001;end;do if not(not(xI[6]<=wE[0X0]))then else TE=xI[2];end;end;end;end;end;end;else if YI>=6 then if YI>=0X9 then if YI>=10 then do if YI~=0XB then wE[0]=PE[xI[6]];xI=bc[TE];TE=TE+0X001;(wE)[0x001]=xI[6];TE=TE+1;local Tz=0X0;(wE)[Tz]=wE[Tz](wE[Tz+0X1]);aE=Tz;TE=TE+0x00001;TE=TE+0x01;xI=bc[TE];TE=TE+0X1;if not wE[0]then TE=xI[5];end;else local wq,Rq=jc[0X0],1;(wE)[1]=wq[0X01][wq[0X2]];xI=bc[TE];TE=TE+0x1;local Pq=wE[1];(wE)[Rq+1]=Pq;do wE[Rq]=Pq[xI[0X1]];end;do TE=TE+0x01;end;Rq=0X1;(wE)[Rq]=wE[Rq](wE[Rq+1]);aE=Rq;xI=bc[TE];TE=TE+0X0001;if not wE[0X1]then TE=xI[0X5];end;end;end;else wE[0X0]=PE[xI[0X6]];local rT=(0);xI=bc[TE];do TE=TE+0X1;end;(wE)[1]=xI[6];TE=TE+1;(wE)[rT]=wE[rT](wE[rT+0X00001]);aE=rT;xI=bc[TE];TE=TE+1;if not wE[0X0]then TE=xI[0X5];end;end;else if YI>=0X07 then if YI==8 then(wE)[xI[2]]=jE[xI[5]];else(wE)[0]=PE[xI[0X6]];local RH=(0x00000);TE=TE+0X1;TE=TE+0X1;do xI=bc[TE];end;do TE=TE+0X001;end;wE[0x1]=xI[6];TE=TE+0X00001;wE[RH]=wE[RH](wE[RH+1]);do aE=RH;end;TE=TE+1;TE=TE+1;xI=bc[TE];TE=TE+1;if not(not wE[0X000])then else do TE=xI[0x5];end;end;end;else do wE[0]=PE[xI[0x6]];end;TE=TE+1;TE=TE+0X1;do xI=bc[TE];end;TE=TE+1;(wE)[0]=wE[0x0][xI[0X1]];TE=TE+0X001;TE=TE+0X1;xI=bc[TE];TE=TE+0X01;do if not wE[0X0]then TE=xI[0x5];end;end;end;end;else if not(YI>=3)then if YI>=0X0001 then if YI~=2 then if not(not(wE[xI[0X00005]]<wE[xI[0x4]]))then else TE=xI[0X00002];end;else local W4=(xI[0X4]-0x1)*0x00032;local R4=(xI[2]);local z4=(wE[R4]);do for Df=1,xI[0X5]do z4[W4+Df]=wE[R4+Df];end;end;end;else local yv=Uc[xI[5]];local Kv,Vv=yv[0X5],nil;local Bv=(#Kv);if Bv>0 then do Vv={};end;for m8=1,Bv do local o8=(Kv[m8]);do if o8[0x1]==0X0 then do(Vv)[m8-0X0001]={wE,o8[0x0002]};end;else Vv[m8-0X0001]=jc[o8[0X2]];end;end;end;S(Lc,Vv);end;(wE)[xI[2]]=e3(yv,Vv,PE);end;else do if YI>=4 then if YI==0X005 then do wE[0]=PE[xI[6]];end;TE=TE+0x1;TE=TE+1;TE=TE+1;aE=0;wE[aE]=wE[aE]();TE=TE+0X1;TE=TE+0X1;xI=bc[TE];do TE=TE+1;end;if wE[0]then TE=xI[0x5];end;else do TE=xI[0x5];end;end;else repeat local zb,rb=Lc,(wE);if#zb>0X000 then local WU=({});for x1,p1 in M,zb do for ot,It in M,p1 do if It[1]==rb and It[2]>=0 then local fn=(It[2]);if not WU[fn]then WU[fn]={rb[fn]};end;do(It)[1]=WU[fn];end;(It)[2]=1;end;end;end;end;until true;return;end;end;end;end;end;end;end;end);if CE then if lE then if qE~=0x001 then return wE[uE](E(wE,uE+0X01,aE));else return wE[uE]();end;elseif uE then return E(wE,uE,qE);end;else do if V(lE)=="string"then if not(r(lE,"at\116empt\032\116o \121\105eld \097c\114o\115\115 m\101\116\097m\101\116\104o\100\047\067%\045c\097ll\032bo\117n\100\097r\121"))then else do return coroutine.yield();end;end;do if r(lE,"^.-:%d+: ")then q("Luraph Script:"..(Qc[TE-0X001]or'\040in\116\101rn\097\108)')..': '..u(lE),0x00000);else(q)(lE,0);end;end;else q(lE,0);end;end;end;end;end;end;else if not(Sc>=0X039)then if Sc==0X38 then do ic=function(...)local ns={};local Xs=0X0001;local Ms=((k and k()or _ENV));local cs=(Ms==H and fc or Ms);local Ps,xs=q3(...);Ps=Ps-0X1;local ks,Ss={[1]=ns,[2]=Vc},0x000;for yG=0X0,Ps do if not(ac>yG)then do break;end;else ns[yG]=xs[yG+0X1];end;end;do if not nc then do xs=nil;end;elseif not(Ac)then else(ns)[ac]={n=Ps>=ac and Ps-ac+0X1 or 0x00000,E(xs,ac+1,Ps+1)};end;end;do if cs~=Ms then if s then s(ic,cs);else do _ENV=cs;end;end;end;end;local ws,ps,Os,Ts=c(function()do while true do local UD=bc[Xs];local cD=UD[3];Xs=Xs+1;if cD>=0XB then if not(cD>=16)then do if not(cD<0x000D)then if cD>=0xe then if cD==0x0000f then do(ns)[UD[0X2]]=UD[0X6];end;else ns[UD[0X2]]=o(ns[UD[5]],ns[UD[4]]);end;else do(ns)[UD[2]]=Q(ns[UD[5]]);end;end;else if cD~=12 then for UV=UD[2],UD[5]do(ns)[UV]=nil;end;else ns[UD[2]]=ns[UD[0X5]]+ns[UD[4]];end;end;end;else do if cD>=19 then if cD<0X0014 then ns[0]=cs[UD[0X0006]];Xs=Xs+0X001;Xs=Xs+1;do UD=bc[Xs];end;Xs=Xs+1;if not(ns[0X000])then else do Xs=UD[0X5];end;end;else if cD~=0X015 then repeat local dI,cI=Lc,ns;do if not(#dI>0)then else local tR={};for CE,hE in M,dI do for h9,i9 in M,hE do if not(i9[0X1]==cI and i9[2]>=0X0)then else local zw=(i9[2]);if not tR[zw]then(tR)[zw]={cI[zw]};end;do(i9)[0x00001]=tR[zw];end;(i9)[2]=1;end;end;end;end;end;until true;local Xk=(UD[0X2]);return false,Xk,Xk;else ns[UD[0X2]]=not ns[UD[5]];end;end;else if cD>=0X11 then do if cD==0x12 then if not(not ns[UD[2]])then else do Xs=UD[0X005];end;end;else do(ns[UD[2]])[ns[UD[0X5]]]=ns[UD[0X0004]];end;end;end;else(ns)[0x000]=cs[UD[6]];Xs=Xs+0X1;do Xs=Xs+0X0001;end;UD=bc[Xs];Xs=Xs+0X001;ns[0x000]=ns[0][UD[1]];do Xs=Xs+0X1;end;Xs=Xs+0X01;Xs=Xs+0X01;(ns)[0]=not ns[0];end;end;end;end;else if not(cD>=0X5)then if cD<2 then do if cD==0X1 then Xs=UD[0X5];else if ns[UD[0X5]]<ns[UD[0X4]]then Xs=UD[2];end;end;end;else if cD<3 then if not(ns[UD[0x5]]<=ns[UD[4]])then else do Xs=UD[0X0002];end;end;else if cD==0X4 then local sj=jc[0];(ns)[0x000]=sj[0X1][sj[2]];local zj=0X00000;UD=bc[Xs];Xs=Xs+1;local Yj=(ns[0]);ns[zj+0X1]=Yj;(ns)[zj]=Yj[UD[0X00001]];Xs=Xs+0X1;zj=0X0;(ns)[zj]=ns[zj](ns[zj+1]);Ss=zj;Xs=Xs+0x1;do Xs=Xs+1;end;UD=bc[Xs];do Xs=Xs+1;end;Xs=UD[5];else(ns)[0]=cs[UD[0X6]];Xs=Xs+0X00001;Ss=0;(ns)[Ss]=ns[Ss]();Xs=Xs+1;Xs=Xs+1;Xs=Xs+1;ns[0X00]=not ns[0X0];end;end;end;else if not(cD>=0X8)then if not(cD>=6)then local SG=(Uc[UD[5]]);local kG,IG=SG[0X5],nil;local AG=#kG;if not(AG>0)then else IG={};for wj=0X0001,AG do local uj=kG[wj];if uj[1]~=0X00000 then do IG[wj-0X1]=jc[uj[2]];end;else(IG)[wj-0x1]={ns,uj[2]};end;end;(S)(Lc,IG);end;ns[UD[0x02]]=e3(SG,IG,cs);else if cD==0X07 then ns[UD[2]]={E({},0X1,UD[5])};else do ns[UD[0X00002]]=cs[UD[6]];end;end;end;else if cD>=0X0009 then if cD~=10 then else local tB=(UD[5]);local rB=(UD[2]);if tB==0X00 then else Ss=rB+tB-0X1;end;local HB,wB,lB=UD[0X4],nil,(nil);if tB==0X1 then wB,lB=q3(ns[rB]());else do wB,lB=q3(ns[rB](E(ns,rB+0X00001,Ss)));end;end;if HB==1 then do Ss=rB-0X1;end;else if HB==0 then wB=wB+rB-0X00001;Ss=wB;else wB=rB+HB-2;Ss=wB+0X001;end;local mP=0X00;do for iL=rB,wB do mP=mP+1;do ns[iL]=lB[mP];end;end;end;end;end;else do repeat local Ee,Ze=Lc,(ns);if#Ee>0x0 then local hj=({});for lj,Kj in M,Ee do for aS,PS in M,Kj do do if PS[0X1]==Ze and PS[0X2]>=0X0 then local i1=PS[0x2];if not hj[i1]then(hj)[i1]={Ze[i1]};end;PS[0X0001]=hj[i1];PS[0X2]=1;end;end;end;end;end;until true;end;return;end;end;end;end;end;end;end);if not(ws)then if V(ps)=="string"then if not(r(ps,"a\116t\101\109p\116 \116\111\032\121i\101\108d ac\114\111\115\115 m\101\116a\109\101\116ho\100\047C%\045\099al\108 bo\117\110d\097\114y"))then else return coroutine.yield();end;do if r(ps,"\094.-:\037d\043:\032")then(q)("L\117raph\032S\099\114ipt\058"..(Qc[Xs-1]or"(internal)")..": "..u(ps),0);else(q)(ps,0);end;end;else q(ps,0X0);end;else if ps then if Ts~=1 then return ns[Os](E(ns,Os+1,Ss));else return ns[Os]();end;elseif not(Os)then else do return E(ns,Os,Ts);end;end;end;end;end;else ic=function(...)local TP,NP=0X00001,0X0000;local DP={};local rP=((k and k()or _ENV));local cP,BP=q3(...);local KP=(rP==H and fc or rP);local RP={[1]=DP,[2]=Vc};cP=cP-0X1;do for SU=0X000,cP do do if not(ac>SU)then break;else do(DP)[SU]=BP[SU+0X1];end;end;end;end;end;do if not nc then BP=nil;elseif Ac then DP[ac]={n=cP>=ac and cP-ac+0X1 or 0,E(BP,ac+0X00001,cP+0X1)};end;end;if KP==rP then else if s then s(ic,KP);else do _ENV=KP;end;end;end;local PP,AP,IP,xP=c(function()while true do local uE=bc[TP];local xE=(uE[0X3]);TP=TP+1;if xE<12 then if not(xE>=0X06)then if xE>=0x00003 then if not(xE<0X0004)then if xE==0x0005 then do(DP)[5]=KP[uE[0X6]];end;TP=TP+1;do TP=TP+0X0001;end;uE=bc[TP];do TP=TP+1;end;do DP[6]=DP[uE[5]];end;uE=bc[TP];local hv=(uE[2]);TP=TP+1;DP[hv]=DP[hv](DP[hv+1]);do NP=hv;end;uE=bc[TP];TP=TP+1;do DP[uE[2]][DP[0X3]]=DP[uE[4]];end;else if DP[uE[5]]==DP[uE[4]]then else do TP=uE[0X2];end;end;end;else do DP[uE[0X00002]]=J(DP[uE[0X005]],DP[uE[4]]);end;end;else if not(xE<0x1)then do if xE~=0X002 then repeat local Os,Gs=Lc,(DP);if#Os>0 then local sf={};do for Vo,Io in M,Os do do for LO,GO in M,Io do if GO[1]==Gs and GO[2]>=0X000 then local N5=GO[2];do if not sf[N5]then do(sf)[N5]={Gs[N5]};end;end;end;GO[0X01]=sf[N5];do(GO)[2]=1;end;end;end;end;end;end;end;until true;return false,uE[2],NP;else end;end;else local U_=(uE[2]);local h_,p_=DP[U_]();if not(h_)then else do for mX=0X00001,uE[4]do DP[U_+mX]=p_[mX];end;end;TP=uE[5];end;end;end;else if xE<0x009 then if xE>=0X0007 then if xE~=0X8 then DP[uE[2]]=KP[uE[0x6]];do TP=TP+1;end;(DP)[0X3]=DP[1];do uE=bc[TP];end;TP=TP+0X1;repeat local ZB,vB=Lc,DP;do if#ZB>0x0 then local Js=({});for Bi,ri in M,ZB do do for Ly,oy in M,ri do do if not(oy[0x00001]==vB and oy[0X2]>=0)then else local qO=oy[0x2];do if not Js[qO]then Js[qO]={vB[qO]};end;end;(oy)[1]=Js[qO];oy[0x0002]=1;end;end;end;end;end;end;end;until true;local bI=uE[2];NP=bI+0x01;return true,bI,0X2;else DP[uE[2]]=o(DP[uE[5]],DP[uE[4]]);end;else(DP)[uE[0x2]]=KP[uE[6]];end;else if not(xE<10)then do if xE~=11 then DP[uE[2]]={E({},0x00001,uE[5])};else local wC=(uE[2]);local eC,rC,tC=DP[wC]();if eC then DP[wC+0x01]=rC;(DP)[wC+0x2]=tC;TP=uE[0X005];end;end;end;else repeat local xh,Uh=Lc,(DP);if not(#xh>0x0)then else local SE=({});do for Gs,ws in M,xh do for gt,xt in M,ws do if not(xt[1]==Uh and xt[2]>=0X0)then else local Js=xt[0X2];do if not(not SE[Js])then else SE[Js]={Uh[Js]};end;end;(xt)[1]=SE[Js];(xt)[2]=0X00001;end;end;end;end;end;until true;return;end;end;end;else if not(xE<0X12)then if not(xE<0X15)then if not(xE<0X016)then if xE==0X017 then do TP=uE[5];end;else do DP[0X1]=KP[uE[6]];end;do TP=TP+1;end;TP=TP+1;uE=bc[TP];TP=TP+0X001;DP[uE[0x2]]=DP[0X1][uE[0X0001]];TP=TP+1;TP=TP+0X1;do uE=bc[TP];end;TP=TP+1;DP[uE[2]]=uE[6];TP=TP+1;do DP[0X3]=DP[0X0000];end;do uE=bc[TP];end;TP=TP+1;do if DP[uE[0x02]]then do TP=uE[5];end;end;end;end;else DP[uE[2]]=uE[6];end;else if not(xE<19)then do if xE~=0x14 then(DP)[3]=KP[uE[6]];TP=TP+1;NP=0X0003;DP[NP]=DP[NP]();TP=TP+0X1;TP=TP+0X0001;uE=bc[TP];TP=TP+0X0001;TP=uE[0x5];else local Ta=Uc[uE[0X005]];local Ba,Ua=Ta[0x005],(nil);local ma=(#Ba);if ma>0 then Ua={};for Eb=0X1,ma do local qb=Ba[Eb];if qb[0X00001]~=0X0000 then Ua[Eb-0x1]=jc[qb[2]];else(Ua)[Eb-0x1]={DP,qb[0X2]};end;end;(S)(Lc,Ua);end;do(DP)[uE[2]]=e3(Ta,Ua,KP);end;end;end;else DP[uE[0X2]]=DP[uE[5]]~=DP[uE[4]];end;end;else if xE>=15 then if xE<0x0010 then DP[uE[0X0002]]=DP[uE[5]]/DP[uE[0X4]];else if xE==17 then DP[uE[2]]=DP[uE[0X5]]==DP[uE[4]];else do for MQ=uE[0X2],uE[5]do(DP)[MQ]=nil;end;end;end;end;else if not(xE>=13)then local TS=1;(DP)[TS]=DP[TS](DP[TS+1],DP[TS+0X2]);do NP=TS;end;TP=TP+0X1;do TP=TP+0x1;end;uE=bc[TP];TP=TP+0X1;local YS=DP[uE[0X5]];TS=0X1;DP[TS+0x00001]=YS;DP[TS]=YS[uE[1]];do uE=bc[TP];end;do TP=TP+1;end;(DP)[3]=uE[6];do uE=bc[TP];end;TP=TP+0x00001;TS=uE[2];(DP)[TS]=DP[TS](DP[TS+1],DP[TS+2]);NP=TS;TP=TP+0X1;TP=TP+0X1;uE=bc[TP];TP=TP+0X01;do(DP)[uE[0X00002]]=KP[uE[6]];end;uE=bc[TP];TP=TP+1;DP[uE[2]]=DP[uE[0X5]];uE=bc[TP];local nS=(uE[0X05]);TP=TP+0X01;TS=0X02;local uS=(4);if nS==0x0 then else NP=TS+nS-1;end;local pS,DS=nil,nil;do if nS~=0X1 then pS,DS=q3(DP[TS](E(DP,TS+0X001,NP)));else do pS,DS=q3(DP[TS]());end;end;end;if uS~=0X1 then if uS~=0 then pS=TS+uS-2;NP=pS+0X00001;else do pS=pS+TS-1;end;NP=pS;end;local fZ=(0);for N9=TS,pS do fZ=fZ+0X00001;(DP)[N9]=DS[fZ];end;else NP=TS-0x1;end;uE=bc[TP];TP=TP+0X001;do TS=0X2;end;local JS=(P(function(...)C();for xO,SO in...do C(true,xO,SO);end;end));JS(DP[TS],DP[TS+1],DP[TS+2]);NP=TS;DP[TS]=JS;TP=uE[0x0005];else if xE~=14 then(DP)[uE[0X2]]=DP[uE[5]]+DP[uE[4]];else local UU=(uE[0X2]);local NU,gU=DP[UU],(uE[0x4]-1)*0X032;do for ex=0X1,uE[5]do(NU)[gU+ex]=DP[UU+ex];end;end;end;end;end;end;end;end;end);if PP then do if AP then if xP==0x00001 then return DP[IP]();else return DP[IP](E(DP,IP+0x1,NP));end;elseif IP then return E(DP,IP,xP);end;end;else do if V(AP)~='str\105ng'then q(AP,0X000);else if not(r(AP,'attemp\116\032t\111 \121\105\101\108\100\032a\099r\111ss\032\109\101tam\101th\111d/C%-ca\108l \098\111\117\110da\114\121'))then else return coroutine.yield();end;if not(r(AP,"^.-:%d+: "))then q(AP,0);else q("\076ura\112\104\032S\099\114\105\112\116:"..(Qc[TP-0X1]or'\040\105\110\116erna\108\041')..':\032'..u(AP),0);end;end;end;end;end;end;else if Sc==58 then do ic=function(...)local FQ,oQ=1,0;local GQ={};local xQ=(k and k()or _ENV);local fQ=({[1]=GQ,[2]=Vc});local rQ,CQ=q3(...);rQ=rQ-1;local mQ=(xQ==H and fc or xQ);for AM=0X0000,rQ do if not(ac>AM)then break;else GQ[AM]=CQ[AM+0X1];end;end;if not nc then do CQ=nil;end;elseif Ac then GQ[ac]={n=rQ>=ac and rQ-ac+0x1 or 0X00,E(CQ,ac+0x0001,rQ+1)};end;do if mQ==xQ then else if not(s)then _ENV=mQ;else s(ic,mQ);end;end;end;local UQ,nQ,NQ,jQ=c(function()while true do local iu=bc[FQ];local Du=iu[0X03];FQ=FQ+1;if Du>=0x000015 then if not(Du<0X20)then do if not(Du>=37)then do if Du<34 then if Du==33 then for OX=iu[2],iu[0x005]do GQ[OX]=nil;end;else local S8=(jc[0x1]);do(GQ)[0X3]=S8[0x1][S8[0x2]];end;iu=bc[FQ];local F8=3;FQ=FQ+1;(GQ)[3]=GQ[0X3][iu[1]];do FQ=FQ+1;end;do(GQ)[4]=GQ[2];end;FQ=FQ+1;S8=jc[0X0];GQ[5]=S8[0X1][S8[0X2]];FQ=FQ+1;(GQ[F8])(GQ[F8+0X1],GQ[F8+2]);oQ=F8-1;FQ=FQ+1;do FQ=FQ+0X01;end;iu=bc[FQ];FQ=FQ+0x0001;FQ=iu[0X5];end;else if not(Du<35)then if Du==0x24 then do GQ[0x001]=mQ[iu[0X6]];end;do iu=bc[FQ];end;FQ=FQ+1;do(GQ)[0X2]=iu[0X006];end;local me=(0X001);FQ=FQ+0X1;do GQ[me]=GQ[me](GQ[me+1]);end;do oQ=me;end;do iu=bc[FQ];end;FQ=FQ+1;GQ[2]=GQ[1][iu[0x001]];do iu=bc[FQ];end;FQ=FQ+0X1;if not GQ[2]then FQ=iu[5];end;else FQ=iu[0X5];end;else GQ[iu[0X2]][GQ[iu[0X5]]]=GQ[iu[0X04]];end;end;end;else if Du<40 then if not(Du>=38)then do if not(GQ[iu[2]])then else FQ=iu[5];end;end;else if Du==0X27 then do if not(not(GQ[iu[0X5]]<=GQ[iu[4]]))then else do FQ=iu[2];end;end;end;else GQ[0x1]=mQ[iu[0X00006]];FQ=FQ+1;FQ=FQ+0x1;iu=bc[FQ];FQ=FQ+1;do GQ[1]=GQ[1][iu[0X1]];end;FQ=FQ+0X1;FQ=FQ+1;iu=bc[FQ];do FQ=FQ+0x1;end;if not GQ[0X1]then do FQ=iu[0X5];end;end;end;end;else if Du>=41 then if Du==42 then do(GQ)[0X2]=GQ[0X1][iu[1]];end;FQ=FQ+0X1;do FQ=FQ+0X1;end;iu=bc[FQ];FQ=FQ+0X01;if not(GQ[2])then else do FQ=iu[5];end;end;else(GQ)[iu[2]]=GQ[iu[5]]+GQ[iu[0X4]];end;else do(GQ)[2]=mQ[iu[6]];end;do FQ=FQ+1;end;local Iv=(2);FQ=FQ+1;iu=bc[FQ];FQ=FQ+0X1;do(GQ)[3]=iu[6];end;FQ=FQ+0X0001;do GQ[Iv]=GQ[Iv](GQ[Iv+1]);end;do oQ=Iv;end;iu=bc[FQ];FQ=FQ+1;do if GQ[2]then FQ=iu[5];end;end;end;end;end;end;else if Du>=26 then if Du>=29 then if not(Du<0x0001E)then do if Du~=0X01f then GQ[0X00002]=mQ[iu[6]];FQ=FQ+1;FQ=FQ+0X0001;do FQ=FQ+0X01;end;oQ=2;GQ[oQ]=GQ[oQ]();iu=bc[FQ];FQ=FQ+1;if not(not GQ[0X2])then else FQ=iu[5];end;else do GQ[iu[2]]={E({},1,iu[5])};end;end;end;else GQ[1]=mQ[iu[6]];do FQ=FQ+0x01;end;FQ=FQ+0X1;FQ=FQ+0X1;oQ=1;do(GQ)[oQ]=GQ[oQ]();end;FQ=FQ+1;do FQ=FQ+1;end;iu=bc[FQ];FQ=FQ+0X1;if GQ[0x001]<iu[0X1]then do FQ=iu[0X0002];end;end;end;else do if not(Du>=27)then(GQ)[0X1]=true;iu=bc[FQ];do FQ=FQ+0X0001;end;do mQ[iu[6]]=GQ[0X1];end;FQ=FQ+0X1;repeat local Op,zp=Lc,GQ;if not(#Op>0X0)then else local gY={};for qE,CE in M,Op do for Fe,ne in M,CE do if ne[1]==zp and ne[0X2]>=0 then local M8=ne[2];if not gY[M8]then do gY[M8]={zp[M8]};end;end;do ne[0X1]=gY[M8];end;ne[2]=1;end;end;end;end;until true;return;else if Du~=28 then GQ[4]=GQ[0X03][iu[0X00001]];FQ=FQ+0X001;oQ=0x4;(GQ[oQ])();oQ=oQ-0x0001;FQ=FQ+0X0001;FQ=FQ+0X1;iu=bc[FQ];FQ=FQ+0x001;do FQ=iu[0X0005];end;else local i_=jc[1];(GQ)[0X3]=i_[1][i_[2]];FQ=FQ+0X1;do FQ=FQ+0x1;end;iu=bc[FQ];FQ=FQ+0X1;GQ[3]=GQ[0X00003][iu[0X00001]];FQ=FQ+1;(GQ)[4]=GQ[0x2];FQ=FQ+1;i_=jc[0X00000];GQ[5]=i_[0x01][i_[2]];FQ=FQ+0x1;FQ=FQ+1;iu=bc[FQ];local K_=(3);local B_=Uc[iu[0x5]];local Y_=B_[0X5];FQ=FQ+1;local M_,m_=nil,#Y_;if not(m_>0)then else M_={};for Q5=1,m_ do local b5=(Y_[Q5]);if b5[0X0001]==0 then M_[Q5-1]={GQ,b5[0x2]};else do(M_)[Q5-1]=jc[b5[0X2]];end;end;end;S(Lc,M_);end;GQ[6]=e3(B_,M_,mQ);do FQ=FQ+0X1;end;oQ=K_+4-1;GQ[K_](E(GQ,K_+1,oQ));do oQ=K_-1;end;do FQ=FQ+0X1;end;do FQ=FQ+0X00001;end;do iu=bc[FQ];end;do FQ=FQ+1;end;GQ[0X0003]=GQ[1][iu[0X001]];FQ=FQ+0X1;FQ=FQ+0X1;iu=bc[FQ];FQ=FQ+1;if not(GQ[0x3])then else FQ=iu[0X00005];end;end;end;end;end;else do if Du>=0x17 then do if not(Du>=24)then(GQ)[2]=GQ[0X1][iu[0x1]];FQ=FQ+0X1;do FQ=FQ+0X00001;end;iu=bc[FQ];do FQ=FQ+0X001;end;if GQ[2]then FQ=iu[5];end;else if Du~=0X0019 then(GQ)[2]=GQ[1][iu[0X1]];FQ=FQ+0x1;FQ=FQ+0X01;iu=bc[FQ];FQ=FQ+1;do if not(not GQ[2])then else FQ=iu[5];end;end;else GQ[0]=mQ[iu[6]];FQ=FQ+0x001;do FQ=FQ+0X00001;end;local bg=(0);iu=bc[FQ];FQ=FQ+0X0001;do(GQ)[0X1]=iu[6];end;do FQ=FQ+0X1;end;do GQ[bg]=GQ[bg](GQ[bg+0X0001]);end;oQ=bg;FQ=FQ+0X1;do FQ=FQ+1;end;iu=bc[FQ];FQ=FQ+1;do(GQ)[1]=GQ[0][iu[0X00001]];end;FQ=FQ+0x0001;FQ=FQ+1;iu=bc[FQ];FQ=FQ+0X1;if GQ[0X1]then FQ=iu[5];end;end;end;end;else do if Du==22 then local tY=(jc[0X0]);do(GQ)[0X3]=tY[1][tY[2]];end;do iu=bc[FQ];end;local sY=(GQ[3]);FQ=FQ+1;local nY=(0X03);(GQ)[nY+1]=sY;do(GQ)[nY]=sY[iu[0x1]];end;do FQ=FQ+1;end;nY=0x3;(GQ[nY])(GQ[nY+1]);oQ=nY-1;iu=bc[FQ];FQ=FQ+0X001;do FQ=iu[5];end;else local Uh=(iu[5]);local Sh=(GQ[Uh]);for eJ=Uh+1,iu[0X4]do Sh=Sh..GQ[eJ];end;do GQ[iu[2]]=Sh;end;end;end;end;end;end;end;else if Du<0xA then if Du<0x5 then do if not(Du<0X2)then if not(Du<0X3)then if Du~=0X00004 then do(GQ)[2]=mQ[iu[6]];end;iu=bc[FQ];do FQ=FQ+1;end;(GQ)[3]=iu[0x6];do iu=bc[FQ];end;FQ=FQ+1;local rb=(0X2);GQ[4]=iu[0X00006];FQ=FQ+0X00001;(GQ[rb])(GQ[rb+1],GQ[rb+2]);do oQ=rb-0x1;end;FQ=FQ+0X1;FQ=FQ+0X1;do iu=bc[FQ];end;FQ=FQ+1;do FQ=iu[5];end;else GQ[0x002]=mQ[iu[0X6]];do FQ=FQ+0X1;end;oQ=2;(GQ)[oQ]=GQ[oQ]();do FQ=FQ+1;end;FQ=FQ+1;local vb=0x2;iu=bc[FQ];FQ=FQ+1;local bb=(GQ[2]);GQ[vb+1]=bb;do(GQ)[vb]=bb[iu[1]];end;iu=bc[FQ];do FQ=FQ+1;end;do(GQ)[4]=iu[0X00006];end;FQ=FQ+1;vb=2;GQ[vb]=GQ[vb](GQ[vb+1],GQ[vb+2]);oQ=vb;iu=bc[FQ];FQ=FQ+1;if not(GQ[0X0002])then else FQ=iu[0x5];end;end;else GQ[2]=mQ[iu[0X06]];do FQ=FQ+0X00001;end;local nK=2;do FQ=FQ+1;end;iu=bc[FQ];FQ=FQ+1;(GQ)[0x3]=iu[0X6];iu=bc[FQ];FQ=FQ+1;GQ[0X4]=iu[6];iu=bc[FQ];FQ=FQ+0X1;GQ[0X5]=iu[6];FQ=FQ+0x0001;do oQ=nK+4-0X001;end;GQ[nK](E(GQ,nK+0X1,oQ));oQ=nK-1;do iu=bc[FQ];end;FQ=FQ+1;FQ=iu[0X00005];end;else if Du==0x1 then(GQ)[1]=mQ[iu[0X6]];FQ=FQ+0x1;FQ=FQ+1;do iu=bc[FQ];end;FQ=FQ+0X001;GQ[1]=GQ[0x1][iu[0x01]];FQ=FQ+1;do FQ=FQ+0X01;end;iu=bc[FQ];FQ=FQ+1;do if not(not GQ[0x1])then else FQ=iu[5];end;end;else do(GQ)[1]=mQ[iu[6]];end;FQ=FQ+0X00001;FQ=FQ+0x1;iu=bc[FQ];FQ=FQ+1;do GQ[0X0001]=GQ[1][iu[0x00001]];end;do iu=bc[FQ];end;do FQ=FQ+1;end;(GQ)[0X02]=iu[6];local rw=(1);do FQ=FQ+1;end;GQ[rw]=GQ[rw](GQ[rw+1]);oQ=rw;FQ=FQ+1;do FQ=FQ+1;end;iu=bc[FQ];FQ=FQ+1;if not(not GQ[1])then else FQ=iu[5];end;end;end;end;else if not(Du<7)then do if not(Du<8)then do if Du==9 then GQ[0x3]=mQ[iu[6]];FQ=FQ+1;local GD=3;FQ=FQ+1;iu=bc[FQ];do FQ=FQ+1;end;do GQ[0X00004]=iu[0X6];end;FQ=FQ+0x1;GQ[GD](GQ[GD+1]);oQ=GD-0X01;FQ=FQ+0X00001;do FQ=FQ+0X1;end;do iu=bc[FQ];end;FQ=FQ+0X00001;do FQ=iu[0X5];end;else GQ[iu[0x2]]=w(GQ[iu[0X5]],GQ[iu[0X4]]);end;end;else(GQ)[0X3]=mQ[iu[0X6]];do iu=bc[FQ];end;FQ=FQ+1;local yz=(0X3);GQ[4]=iu[0x6];iu=bc[FQ];do FQ=FQ+0x1;end;GQ[5]=mQ[iu[6]];do FQ=FQ+0X01;end;do GQ[yz]=GQ[yz](GQ[yz+1],GQ[yz+2]);end;oQ=yz;iu=bc[FQ];FQ=FQ+0X1;do GQ[0x4]=GQ[0X003][iu[1]];end;FQ=FQ+1;GQ[0X2]=GQ[4];iu=bc[FQ];do FQ=FQ+1;end;if not(GQ[0x2])then else FQ=iu[5];end;end;end;else if Du~=6 then local uD=(jc[0X01]);do(GQ)[3]=uD[1][uD[2]];end;FQ=FQ+1;FQ=FQ+1;iu=bc[FQ];FQ=FQ+0x1;do GQ[3]=GQ[0x3][iu[0X1]];end;FQ=FQ+1;FQ=FQ+0X1;do FQ=FQ+0x01;end;do GQ[4]=GQ[2];end;FQ=FQ+1;local VD=0X0003;(GQ)[VD]=GQ[VD](GQ[VD+0X1]);do oQ=VD;end;iu=bc[FQ];do FQ=FQ+0X01;end;do if not GQ[3]then do FQ=iu[5];end;end;end;else local qH=iu[0X5];local rH=(iu[2]);oQ=rH+qH-1;repeat local dQ,XQ=Lc,GQ;if#dQ>0X0 then local y1={};for Mf,Qf in M,dQ do do for fL,PL in M,Qf do if PL[0X1]==XQ and PL[2]>=0X0 then local H6=(PL[0X002]);if not(not y1[H6])then else y1[H6]={XQ[H6]};end;(PL)[0x0001]=y1[H6];do(PL)[2]=1;end;end;end;end;end;end;until true;return true,rH,qH;end;end;end;else if Du<0Xf then if Du>=0x000C then if not(Du<13)then if Du==0X0000E then GQ[0x3]=mQ[iu[6]];iu=bc[FQ];do FQ=FQ+0X0001;end;GQ[3]=GQ[0X00003][iu[0X01]];FQ=FQ+1;FQ=FQ+1;iu=bc[FQ];FQ=FQ+0X0001;if not(GQ[0x3])then else FQ=iu[0X05];end;else(GQ)[iu[2]]=iu[0X6];end;else do GQ[iu[2]]=mQ[iu[6]];end;end;else if Du==0Xb then else(GQ)[2]=GQ[0X001][iu[0X001]];FQ=FQ+0X00001;FQ=FQ+0x1;iu=bc[FQ];FQ=FQ+0x1;if not(not GQ[2])then else FQ=iu[0X0005];end;end;end;else do if not(Du<18)then if not(Du<0X13)then if Du==0X14 then(GQ)[2]=mQ[iu[6]];do iu=bc[FQ];end;FQ=FQ+0X1;GQ[0X03]=iu[0x6];local OQ=(2);FQ=FQ+1;do GQ[OQ]=GQ[OQ](GQ[OQ+0x001]);end;oQ=OQ;FQ=FQ+1;do FQ=FQ+0X1;end;local gQ=jc[0x1];do FQ=FQ+0X1;end;do(GQ)[0X3]=gQ[1][gQ[0x0002]];end;iu=bc[FQ];do FQ=FQ+0x1;end;GQ[0X00003]=GQ[3][iu[1]];FQ=FQ+1;(GQ)[0X4]=GQ[0X2];do FQ=FQ+0X001;end;do OQ=0X03;end;GQ[OQ]=GQ[OQ](GQ[OQ+1]);oQ=OQ;iu=bc[FQ];FQ=FQ+1;if not GQ[0x003]then FQ=iu[5];end;else(GQ)[iu[2]]=GQ[iu[5]][iu[0X1]];end;else local Xk=jc[0];(GQ)[0X2]=Xk[0X01][Xk[2]];FQ=FQ+1;local Kk=2;do FQ=FQ+1;end;iu=bc[FQ];FQ=FQ+0X1;local gk=GQ[2];GQ[Kk+0X1]=gk;do GQ[Kk]=gk[iu[0X001]];end;do FQ=FQ+1;end;Kk=2;GQ[Kk]=GQ[Kk](GQ[Kk+1]);do oQ=Kk;end;iu=bc[FQ];do FQ=FQ+1;end;if GQ[0X2]then do FQ=iu[5];end;end;end;else do if not(Du<16)then if Du==17 then local Ss=(Uc[iu[5]]);local ls,ys=Ss[0X05],(nil);local rs=#ls;if not(rs>0)then else do ys={};end;for Y2=0x1,rs do local l2=(ls[Y2]);if l2[1]~=0 then ys[Y2-0x1]=jc[l2[0X02]];else ys[Y2-1]={GQ,l2[2]};end;end;S(Lc,ys);end;(GQ)[iu[0X02]]=e3(Ss,ys,mQ);else repeat local eD,lD=Lc,GQ;if not(#eD>0)then else local N9=({});for um,km in M,eD do do for OW,VW in M,km do if VW[0X1]==lD and VW[2]>=0X000 then local TK=VW[0x0002];do if not N9[TK]then(N9)[TK]={lD[TK]};end;end;VW[1]=N9[TK];VW[0x2]=0x1;end;end;end;end;end;until true;return;end;else GQ[2]=true;iu=bc[FQ];FQ=FQ+1;do(mQ)[iu[0X6]]=GQ[2];end;iu=bc[FQ];FQ=FQ+0X0001;FQ=iu[0X005];end;end;end;end;end;end;end;end;end);do if not(UQ)then do if V(nQ)~='st\114i\110g'then q(nQ,0x0);else if not(r(nQ,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if r(nQ,"^.-:%d+: ")then q('L\117\114\097p\104\032Scr\105\112t:'..(Qc[FQ-1]or"\040in\116\101r\110al\041")..": "..u(nQ),0);else q(nQ,0x000);end;end;end;else if nQ then if jQ~=1 then return GQ[NQ](E(GQ,NQ+0X001,oQ));else return GQ[NQ]();end;elseif NQ then return E(GQ,NQ,jQ);end;end;end;end;end;else do ic=function(...)local NA,nA,kA=0X001,{},(0X0);local gA=({[1]=nA,[2]=Vc});local dA=(k and k()or _ENV);local yA,BA=q3(...);local tA=((dA==H and fc or dA));do yA=yA-1;end;for Sh=0X0000,yA do if not(ac>Sh)then break;else nA[Sh]=BA[Sh+0X00001];end;end;if not nc then do BA=nil;end;elseif not(Ac)then else nA[ac]={n=yA>=ac and yA-ac+0X1 or 0,E(BA,ac+0x1,yA+1)};end;do if tA==dA then else if s then s(ic,tA);else do _ENV=tA;end;end;end;end;local MA,PA,WA,bA=c(function()do while true do local DP=(bc[NA]);local kP=(DP[0X3]);do NA=NA+0X1;end;do if not(kP>=0Xb)then if kP>=0X0005 then if not(kP<0X00008)then if not(kP<0X009)then do if kP==10 then local Re=(Uc[DP[5]]);local De=(nil);local Ge=Re[5];local ke=#Ge;do if ke>0X0 then De={};for CA=0X1,ke do local JA=Ge[CA];if JA[1]==0x00000 then De[CA-0X1]={nA,JA[0X0002]};else De[CA-0x0001]=jc[JA[0X2]];end;end;(S)(Lc,De);end;end;nA[DP[0X2]]=e3(Re,De,tA);else(nA)[0x2]=tA[DP[0X06]];NA=NA+0x1;do(nA)[3]=nA[1];end;local wF=(2);do NA=NA+1;end;do(nA)[wF]=nA[wF](nA[wF+0X0001]);end;kA=wF;DP=bc[NA];do NA=NA+1;end;do if nA[2]then NA=DP[0X5];end;end;end;end;else(nA)[DP[2]]=nA[DP[5]]^nA[DP[0x4]];end;else do if not(kP<6)then do if kP~=0x7 then else(nA)[DP[2]]=nA[DP[5]]~=nA[DP[0x4]];end;end;else repeat local Kt,it,pt=Lc,nA,(DP[2]);if not(#Kt>0X0)then else local Bq={};for iJ,fJ in M,Kt do do for Kw,kw in M,fJ do if kw[0x1]==it and kw[2]>=pt then local UW=(kw[2]);if not Bq[UW]then do(Bq)[UW]={it[UW]};end;end;do(kw)[1]=Bq[UW];end;(kw)[2]=1;end;end;end;end;end;until true;end;end;end;else if not(kP>=2)then if kP==1 then local Z5=(nA[DP[5]]/nA[DP[4]]);do nA[DP[0X2]]=Z5-Z5%0X01;end;else NA=DP[5];end;else if kP>=3 then if kP~=0X4 then nA[DP[0x2]]=DP[0X00006];else(gA)[DP[5]]=nA[DP[0X2]];end;else local Ws=DP[0X2];local ks,ws=nA[Ws]();if not(ks)then else for Y8=1,DP[4]do(nA)[Ws+Y8]=ws[Y8];end;do NA=DP[5];end;end;end;end;end;else if kP>=16 then if not(kP<0X00013)then if not(kP<0x014)then do if kP~=21 then local Ur,Pr=0x1,(nA[0X0]);do nA[Ur+0X1]=Pr;end;(nA)[Ur]=Pr[DP[0X0001]];DP=bc[NA];NA=NA+1;(nA)[0X3]=DP[0x6];NA=NA+1;Ur=1;(nA)[Ur]=nA[Ur](nA[Ur+1],nA[Ur+0x00002]);kA=Ur;DP=bc[NA];NA=NA+1;do nA[0X0001]=nA[1][DP[0x1]];end;do DP=bc[NA];end;NA=NA+1;if not(not nA[1])then else NA=DP[5];end;else do if not(nA[DP[0x5]]<nA[DP[0X4]])then do NA=DP[0X0002];end;end;end;end;end;else do if nA[DP[5]]~=nA[DP[0x4]]then else NA=DP[0X02];end;end;end;else do if not(kP>=0X11)then repeat local rO,UO=Lc,(nA);do if not(#rO>0)then else local cI=({});for dI,II in M,rO do do for ea,sa in M,II do if sa[0X001]==UO and sa[0X2]>=0 then local xd=(sa[2]);if not cI[xd]then do cI[xd]={UO[xd]};end;end;(sa)[0X1]=cI[xd];sa[0X002]=1;end;end;end;end;end;end;until true;local Ad=DP[0X002];return false,Ad,Ad;else if kP==18 then local BI=0x2;local MI=nA[1];nA[BI+1]=MI;nA[BI]=MI[DP[1]];DP=bc[NA];NA=NA+0X1;do nA[0X4]=DP[6];end;do NA=NA+1;end;nA[0X00005]=#nA[0X1];DP=bc[NA];NA=NA+1;(nA)[0X5]=nA[0X0005]-DP[0x01];NA=NA+0x1;BI=0X2;kA=BI+4-1;(nA)[BI]=nA[BI](E(nA,BI+1,kA));kA=BI;NA=NA+0X00001;do(nA)[1]=nA[2];end;DP=bc[NA];do NA=NA+1;end;do BI=0X00002;end;MI=nA[1];nA[BI+0X00001]=MI;(nA)[BI]=MI[DP[0X1]];do DP=bc[NA];end;NA=NA+1;(nA)[0X4]=DP[0X006];do NA=NA+1;end;BI=2;(nA)[BI]=nA[BI](nA[BI+1],nA[BI+0X0002]);kA=BI;do NA=NA+0X0001;end;NA=NA+1;DP=bc[NA];NA=NA+1;if not nA[0X2]then NA=DP[0X5];end;else(nA)[DP[2]]={E({},1,DP[0X00005])};end;end;end;end;else if kP<0xD then if kP~=0x0000c then(nA)[DP[0X2]]=tA[DP[0X6]];else repeat local Wi,zi=Lc,nA;if not(#Wi>0)then else local hD=({});do for Ec,Ic in M,Wi do for NP,jP in M,Ic do if jP[1]==zi and jP[2]>=0 then local Ia=jP[2];if not(not hD[Ia])then else(hD)[Ia]={zi[Ia]};end;jP[0x1]=hD[Ia];jP[2]=0X001;end;end;end;end;end;until true;return;end;else if not(kP<0X0000e)then if kP~=0X0f then local t6=(DP[2]);local H6=(DP[5]);kA=t6+H6-0X1;do repeat local Ya,la=Lc,nA;if not(#Ya>0)then else local P7=({});do for Py,hy in M,Ya do for UG,zG in M,hy do if zG[1]==la and zG[0X2]>=0x0 then local Qa=zG[2];if not P7[Qa]then(P7)[Qa]={la[Qa]};end;zG[1]=P7[Qa];zG[2]=0X1;end;end;end;end;end;until true;end;do return true,t6,H6;end;else do for ZR=DP[0X2],DP[0X5]do do nA[ZR]=nil;end;end;end;end;else local Fv=(2);local ev=nA[1];nA[Fv+1]=ev;(nA)[Fv]=ev[DP[0X0001]];DP=bc[NA];do NA=NA+0X1;end;(nA)[4]=DP[6];NA=NA+1;do nA[5]=#nA[1];end;DP=bc[NA];do NA=NA+1;end;(nA)[0x5]=nA[5]-DP[1];do NA=NA+0X1;end;do Fv=2;end;kA=Fv+0x4-1;do nA[Fv]=nA[Fv](E(nA,Fv+0X00001,kA));end;kA=Fv;NA=NA+0x1;nA[1]=nA[0X002];DP=bc[NA];NA=NA+0X1;NA=DP[5];end;end;end;end;end;end;end;end);do if not(MA)then if V(PA)~="string"then(q)(PA,0X00);else if not(r(PA,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;do if not(r(PA,"^\046-:%d+: "))then q(PA,0);else(q)('\076ura\112h \083\099\114i\112t\058'..(Qc[NA-1]or'\040\105n\116e\114\110\097\108\041')..": "..u(PA),0);end;end;end;else if PA then if bA~=1 then return nA[WA](E(nA,WA+1,kA));else return nA[WA]();end;elseif not(WA)then else return E(nA,WA,bA);end;end;end;end;end;end;end;end;end;else if not(Sc<51)then if Sc>=53 then do if Sc==0x36 then ic=function(...)local LH,SH,NH=0X1,{},(0X0000);local fH=((k and k()or _ENV));local lH=(fH==H and fc or fH);local FH={[2]=Vc,[1]=SH};local eH,qH=q3(...);eH=eH-0X01;for y8=0x00,eH do if ac>y8 then(SH)[y8]=qH[y8+1];else do break;end;end;end;if not nc then qH=nil;elseif not(Ac)then else do(SH)[ac]={n=eH>=ac and eH-ac+0X1 or 0,E(qH,ac+1,eH+1)};end;end;do if lH==fH then else do if s then s(ic,lH);else _ENV=lH;end;end;end;end;local KH,bH,kH,QH=c(function()do while true do local gj=(bc[LH]);local Bj=(gj[3]);LH=LH+0X1;if Bj>=12 then if Bj<18 then if not(Bj>=15)then if Bj>=0Xd then do if Bj==0XE then local I9=(gj[0X2]);local x9=P(function(...)(C)();for AL,YL,eL,VL,aL,iL,tL,LL,qL,gL in...do C(true,{AL,YL,eL,VL,aL,iL,tL,LL,qL,gL});end;end);(x9)(SH[I9],SH[I9+0x1],SH[I9+0X2]);NH=I9;SH[I9]=x9;do LH=gj[0x00005];end;else(SH)[0x0]=lH[gj[6]];LH=LH+0X1;LH=LH+1;do LH=LH+1;end;NH=0X0;(SH)[NH]=SH[NH]();LH=LH+0X1;LH=LH+0X0001;gj=bc[LH];LH=LH+1;if not(SH[0])then else LH=gj[0X5];end;end;end;else local BJ=gj[2];local DJ,tJ=SH[BJ]();if not(DJ)then else for dU=0X0001,gj[4]do do(SH)[BJ+dU]=tJ[dU];end;end;do LH=gj[0X0005];end;end;end;else if Bj>=16 then do if Bj==17 then if SH[gj[2]]then LH=gj[5];end;else local sp,Np=gj[0X2],(gj[0X005]);if Np~=0X0 then NH=sp+Np-0X001;end;local Ap,mp,Gp=gj[0X0004],nil,(nil);if Np~=1 then mp,Gp=q3(SH[sp](E(SH,sp+1,NH)));else mp,Gp=q3(SH[sp]());end;if Ap~=0X1 then do if Ap==0X0000 then mp=mp+sp-0x1;do NH=mp;end;else mp=sp+Ap-0X02;do NH=mp+0X00001;end;end;end;local bq=0;for IR=sp,mp do bq=bq+0X00001;SH[IR]=Gp[bq];end;else NH=sp-0X01;end;end;end;else SH[0]=false;do gj=bc[LH];end;do LH=LH+0X1;end;do(lH)[gj[0X6]]=SH[0];end;do gj=bc[LH];end;do LH=LH+1;end;do SH[0]=lH[gj[0X6]];end;gj=bc[LH];do LH=LH+0X1;end;(SH)[0]=SH[0][gj[0x01]];gj=bc[LH];do LH=LH+0X1;end;(SH)[1]=gj[0X6];gj=bc[LH];local ya,Fa=Uc[gj[0x5]],0;LH=LH+0x001;local Ma,ua=ya[5],nil;local ma=#Ma;if ma>0X0 then ua={};do for Qg=1,ma do local Pg=Ma[Qg];if Pg[0X1]~=0 then(ua)[Qg-1]=jc[Pg[2]];else ua[Qg-0X01]={SH,Pg[2]};end;end;end;(S)(Lc,ua);end;do SH[2]=e3(ya,ua,lH);end;LH=LH+1;SH[Fa](SH[Fa+0X0001],SH[Fa+2]);NH=Fa-1;do LH=LH+1;end;repeat local fy,zy=Lc,SH;if#fy>0 then local Bu={};for PB,QB in M,fy do for aI,KI in M,QB do do if not(KI[0x1]==zy and KI[2]>=0)then else local Jj=(KI[0X2]);if not Bu[Jj]then(Bu)[Jj]={zy[Jj]};end;(KI)[1]=Bu[Jj];(KI)[2]=0X001;end;end;end;end;end;until true;do return;end;end;end;else do if not(Bj<0X15)then do if not(Bj<23)then do if Bj~=24 then SH[gj[2]]=SH[gj[0X5]]~=SH[gj[0X00004]];else(SH)[gj[0X2]]=lH[gj[0x6]];end;end;else if Bj~=22 then SH[0X0000]=lH[gj[6]];LH=LH+0X00001;LH=LH+0x0001;gj=bc[LH];LH=LH+1;do(SH)[0x0]=SH[0][gj[1]];end;LH=LH+1;LH=LH+0X00001;gj=bc[LH];LH=LH+1;SH[0]=SH[0X0000][gj[1]];gj=bc[LH];do LH=LH+0x1;end;SH[1]=lH[gj[6]];LH=LH+1;LH=LH+1;gj=bc[LH];LH=LH+1;(SH)[0x0001]=SH[1][gj[1]];gj=bc[LH];LH=LH+1;do if SH[1]then LH=gj[5];end;end;else if not(SH[gj[0X5]]<=SH[gj[4]])then LH=gj[2];end;end;end;end;else if not(Bj<19)then if Bj==0X14 then LH=gj[5];else end;else repeat local RN,NN=Lc,(SH);if#RN>0 then local go={};for tp,gp in M,RN do for O2,e2 in M,gp do if not(e2[1]==NN and e2[0X2]>=0x0)then else local LG=e2[0X0002];if not(not go[LG])then else do(go)[LG]={NN[LG]};end;end;(e2)[0X1]=go[LG];(e2)[2]=1;end;end;end;end;until true;return;end;end;end;end;else if not(Bj>=0X6)then if Bj>=0X03 then if not(Bj>=4)then do(SH)[0x00]=lH[gj[6]];end;gj=bc[LH];LH=LH+0X1;do SH[0x000]=SH[0][gj[1]];end;do gj=bc[LH];end;LH=LH+0X001;if not(not SH[0x0])then else do LH=gj[5];end;end;else if Bj==0x05 then local d9=(Uc[gj[0X0005]]);local B9,l9=d9[5],(nil);local X9=(#B9);do if not(X9>0)then else l9={};for Bk=0x1,X9 do local Uk=B9[Bk];if Uk[1]==0X00 then(l9)[Bk-1]={SH,Uk[0X2]};else(l9)[Bk-1]=jc[Uk[2]];end;end;S(Lc,l9);end;end;(SH)[gj[2]]=e3(d9,l9,lH);else local e6=jc[0X000];SH[0]=e6[0X1][e6[0x00002]];gj=bc[LH];local k6=(SH[0]);LH=LH+1;local K6=(0);SH[K6+0X1]=k6;(SH)[K6]=k6[gj[0X1]];do LH=LH+0X1;end;K6=0;do(SH)[K6]=SH[K6](SH[K6+0X1]);end;do NH=K6;end;LH=LH+0X1;do LH=LH+0x1;end;do gj=bc[LH];end;LH=LH+0X01;if not SH[0x0]then LH=gj[5];end;end;end;else if Bj<0X1 then do SH[gj[2]]=SH[gj[5]]/SH[gj[0X00004]];end;else if Bj~=0x2 then SH[0x00]=lH[gj[0X6]];LH=LH+1;do LH=LH+0X00001;end;LH=LH+1;NH=0;SH[NH]();NH=NH-0X1;LH=LH+0X00001;do LH=LH+0x00001;end;gj=bc[LH];LH=LH+0x001;do LH=gj[0X00005];end;else SH[gj[0X2]]={E({},1,gj[5])};end;end;end;else do if not(Bj<0X9)then if not(Bj<0x000A)then if Bj==0Xb then SH[gj[0X2]]=gj[0X006];else do(SH)[gj[2]]=SH[gj[0x005]]*SH[gj[0X4]];end;end;else SH[0x0]=lH[gj[0x6]];gj=bc[LH];LH=LH+1;(SH)[0]=SH[0][gj[0x001]];do LH=LH+0X1;end;do LH=LH+1;end;gj=bc[LH];LH=LH+0X01;do if not SH[0]then do LH=gj[0X005];end;end;end;end;else do if Bj<7 then SH[0x00]=lH[gj[0X6]];do LH=LH+0x1;end;LH=LH+1;gj=bc[LH];LH=LH+0X001;do SH[0X0]=SH[0][gj[1]];end;do LH=LH+0X1;end;do LH=LH+1;end;do gj=bc[LH];end;LH=LH+1;(SH)[1]=lH[gj[0X06]];LH=LH+1;do LH=LH+1;end;gj=bc[LH];do LH=LH+0X1;end;do SH[0X0001]=SH[1][gj[0X01]];end;gj=bc[LH];LH=LH+1;SH[0x1]=SH[0X00001][gj[0X1]];LH=LH+0X1;LH=LH+0X1;gj=bc[LH];LH=LH+1;if not(not(SH[0x0]<SH[1]))then else do LH=gj[0X02];end;end;else if Bj~=0x008 then for sx=gj[2],gj[0X0005]do do(SH)[sx]=nil;end;end;else SH[gj[0X2]]=true;end;end;end;end;end;end;end;end;end;end);if KH then if bH then if QH==1 then return SH[kH]();else return SH[kH](E(SH,kH+1,NH));end;elseif kH then return E(SH,kH,QH);end;else if V(bH)~='stri\110\103'then q(bH,0);else if not(r(bH,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(bH,"\094\046-:\037\100\043\058 "))then q(bH,0);else(q)("Luraph Script:"..(Qc[LH-1]or"(internal)")..'\058\032'..u(bH),0X000);end;end;end;end;else ic=function(...)local AB=0x0000;local PB=({});local JB=(1);local YB=((k and k()or _ENV));local BB=({[2]=Vc,[1]=PB});local xB=((YB==H and fc or YB));local jB,ZB=q3(...);jB=jB-0X001;do for RG=0X0,jB do if not(ac>RG)then break;else PB[RG]=ZB[RG+0X00001];end;end;end;if not nc then ZB=nil;elseif not(Ac)then else(PB)[ac]={n=jB>=ac and jB-ac+1 or 0X0,E(ZB,ac+0X1,jB+1)};end;if xB==YB then else if not(s)then _ENV=xB;else(s)(ic,xB);end;end;local IB,GB,TB,UB=c(function()while true do local JA=(bc[JB]);local bA=(JA[0X0003]);JB=JB+1;do if not(bA<12)then do if bA>=0X12 then if bA<0X15 then do if not(bA>=0X13)then local sO,nO=JA[0x2],JA[0X5];AB=sO+nO-1;repeat local U9,f9=Lc,(PB);do if not(#U9>0)then else local zJ={};for dP,JP in M,U9 do do for Qo,Eo in M,JP do if not(Eo[1]==f9 and Eo[0X2]>=0)then else local Ie=(Eo[2]);do if not zJ[Ie]then(zJ)[Ie]={f9[Ie]};end;end;Eo[0X1]=zJ[Ie];(Eo)[2]=0X001;end;end;end;end;end;end;until true;return true,sO,nO;else if bA~=20 then PB[JA[0X00002]]=T(PB[JA[5]],PB[JA[0x00004]]);else for Ib=JA[0x2],JA[5]do(PB)[Ib]=nil;end;end;end;end;else if bA>=22 then do if bA~=0X0017 then local Tw=JA[2];local Qw,Vw,Ew=PB[Tw]();do if not(Qw)then else PB[Tw+1]=Vw;(PB)[Tw+0X0002]=Ew;JB=JA[5];end;end;else(PB)[JA[2]]={E({},0x1,JA[0X5])};end;end;else local uq=JA[2];local wq=(P(function(...)C();for qw,Zw in...do C(true,qw,Zw);end;end));wq(PB[uq],PB[uq+0X1],PB[uq+0X2]);AB=uq;PB[uq]=wq;JB=JA[0X0005];end;end;else if bA>=0X0000f then if bA<0X10 then do PB[JA[0X2]]=PB[JA[5]];end;else if bA==17 then repeat local w2,S2=Lc,(PB);if not(#w2>0X0)then else local Cf=({});for zI,WI in M,w2 do for g1,T1 in M,WI do if T1[1]==S2 and T1[0X2]>=0X0000 then local bB=(T1[0X00002]);if not Cf[bB]then Cf[bB]={S2[bB]};end;(T1)[0X1]=Cf[bB];T1[0x2]=1;end;end;end;end;until true;local fQ=JA[2];return false,fQ,fQ;else PB[1]=xB[JA[0X00006]];do JB=JB+1;end;do JB=JB+0X1;end;do JA=bc[JB];end;JB=JB+0x0001;(PB)[2]=xB[JA[6]];do JA=bc[JB];end;JB=JB+0x1;PB[0X3]=JA[0X6];local JM=0X002;do JB=JB+0X1;end;(PB)[JM]=PB[JM](PB[JM+1]);AB=JM;JB=JB+0X1;JB=JB+1;JA=bc[JB];do JB=JB+0x01;end;if not(PB[0X00002])then else JB=JA[5];end;end;end;else if bA<0Xd then(PB)[0X00001]=xB[JA[6]];JA=bc[JB];JB=JB+0X1;PB[1]=PB[1][JA[1]];do JB=JB+1;end;JB=JB+0X01;do JA=bc[JB];end;local IZ=0X1;JB=JB+0X00001;local sZ=PB[1];PB[IZ+0x1]=sZ;PB[IZ]=sZ[JA[1]];JB=JB+0x01;do PB[3]=PB[0];end;JB=JB+0X0001;IZ=1;do(PB)[IZ]=PB[IZ](PB[IZ+1],PB[IZ+2]);end;AB=IZ;do JA=bc[JB];end;do JB=JB+0X1;end;if not(not PB[1])then else do JB=JA[5];end;end;else if bA==0Xe then local cI=(JA[0X2]);local PI=P(function(...)(C)();for sj,Wj,Uj,tj,oj,Rj,Vj,uj,wj,Fj in...do(C)(true,{sj,Wj,Uj,tj,oj,Rj,Vj,uj,wj,Fj});end;end);PI(PB[cI],PB[cI+1],PB[cI+2]);AB=cI;(PB)[cI]=PI;JB=JA[5];else(PB)[4]=PB[3][JA[0X00001]];JB=JB+0X1;JB=JB+0x1;JA=bc[JB];do JB=JB+0x01;end;if PB[4]~=PB[0]then do JB=JA[0X2];end;end;end;end;end;end;end;else do if bA<0X6 then if not(bA>=0X03)then if bA<0x1 then local FM=(Uc[JA[5]]);local MM=nil;local AM=FM[5];local gM=(#AM);if gM>0x0 then MM={};for Y4=0X001,gM do local N4=AM[Y4];if N4[1]==0 then(MM)[Y4-0x1]={PB,N4[2]};else do(MM)[Y4-1]=jc[N4[0X00002]];end;end;end;S(Lc,MM);end;do(PB)[JA[2]]=e3(FM,MM,xB);end;else do if bA==2 then(PB)[JA[2]]=true;else JB=JA[0X5];end;end;end;else if not(bA>=0X0004)then(PB)[JA[2]]=xB[JA[0X0006]];else if bA~=0x0005 then do(PB)[JA[0X2]]=JA[6];end;else do(PB)[JA[2]]=JA[0x6];end;end;end;end;else do if not(bA>=0X009)then if not(bA>=7)then do(PB)[0x1]=xB[JA[6]];end;local nL=(0X1);JB=JB+0X1;do JB=JB+1;end;JA=bc[JB];JB=JB+1;PB[1]=PB[1][JA[0X001]];JB=JB+1;JB=JB+0X1;JA=bc[JB];do JB=JB+0X1;end;local HL=(PB[1]);PB[nL+0X1]=HL;PB[nL]=HL[JA[0x0001]];do JB=JB+0x1;end;(PB)[0x3]=PB[0];JB=JB+0X0001;nL=1;(PB)[nL]=PB[nL](PB[nL+1],PB[nL+0X2]);AB=nL;do JA=bc[JB];end;JB=JB+1;if not PB[0X0001]then do JB=JA[0X005];end;end;else if bA~=8 then local h6,z6=JA[2],(JA[0X5]);do if z6~=0X000 then do AB=h6+z6-0x01;end;end;end;local i6,I6,w6=JA[0X4],nil,(nil);do if z6==0X1 then I6,w6=q3(PB[h6]());else I6,w6=q3(PB[h6](E(PB,h6+0x1,AB)));end;end;do if i6==1 then AB=h6-1;else do if i6~=0 then do I6=h6+i6-2;end;AB=I6+0X1;else I6=I6+h6-0X001;AB=I6;end;end;local TE=0;for xQ=h6,I6 do TE=TE+1;PB[xQ]=w6[TE];end;end;end;else do repeat local eD,qD=Lc,PB;if not(#eD>0)then else local ux={};for oG,cG in M,eD do do for CK,XK in M,cG do do if XK[1]==qD and XK[2]>=0X0 then local mW=XK[2];if not(not ux[mW])then else ux[mW]={qD[mW]};end;(XK)[1]=ux[mW];XK[2]=1;end;end;end;end;end;end;until true;end;do return;end;end;end;else do if bA<0x000A then local Fk=(JA[0x2]);local gk,dk=PB[Fk]();if gk then for V6=1,JA[4]do PB[Fk+V6]=dk[V6];end;JB=JA[0X5];end;else if bA~=11 then else PB[JA[2]]={};end;end;end;end;end;end;end;end;end;end;end);do if IB then if GB then if UB==1 then do return PB[TB]();end;else return PB[TB](E(PB,TB+1,AB));end;elseif not(TB)then else return E(PB,TB,UB);end;else if V(GB)~="\115t\114ing"then(q)(GB,0x00000);else if not(r(GB,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if r(GB,'\094\046\045\058\037d+\058\032')then q("Luraph Script:"..(Qc[JB-1]or"(in\116e\114nal\041")..": "..u(GB),0X0);else(q)(GB,0);end;end;end;end;end;end;end;else if Sc~=0X34 then ic=function(...)local pq,vq=0X0001,{};local Dq=(k and k()or _ENV);local lq,Gq={[1]=vq,[2]=Vc},((Dq==H and fc or Dq));local Jq=0;local Tq,uq=q3(...);do Tq=Tq-1;end;for bA=0X00000,Tq do if ac>bA then(vq)[bA]=uq[bA+0X1];else break;end;end;if not nc then uq=nil;elseif Ac then vq[ac]={n=Tq>=ac and Tq-ac+1 or 0,E(uq,ac+0X1,Tq+1)};end;if Gq~=Dq then if s then s(ic,Gq);else _ENV=Gq;end;end;local Pq,Qq,hq,Yq=c(function()while true do local CB=(bc[pq]);local JB=CB[0x0003];pq=pq+1;if JB<0X7 then if not(JB>=0x00003)then do if not(JB>=0X1)then do(vq)[CB[0X2]]=T(vq[CB[0X5]],vq[CB[0X00004]]);end;else if JB==2 then vq[CB[2]]=CB[6];else vq[CB[0X2]]=vq[CB[5]]<vq[CB[0x0004]];end;end;end;else do if JB>=5 then do if JB==6 then pq=CB[5];else do vq[CB[0X2]]={E({},1,CB[0X05])};end;end;end;else if JB==4 then(vq)[CB[2]]=vq[CB[0X0005]]<=vq[CB[0X4]];else local tU=(Uc[CB[0x5]]);local XU=(nil);local OU=tU[0X05];local UU=(#OU);do if not(UU>0X0)then else XU={};do for hn=1,UU do local Hn=(OU[hn]);do if Hn[1]~=0 then(XU)[hn-0X1]=jc[Hn[0X0002]];else(XU)[hn-1]={vq,Hn[2]};end;end;end;end;S(Lc,XU);end;end;do(vq)[CB[0X2]]=e3(tU,XU,Gq);end;end;end;end;end;else if not(JB<10)then do if not(JB<12)then if JB~=13 then else(vq)[CB[0X02]]=-vq[CB[0X5]];end;else if JB==11 then local mB=CB[0X2];local VB=(vq[mB]);local XB,nB=vq[mB+1],(vq[mB+0X2]);vq[mB]=P(function()for tV=VB,XB,nB do(C)(true,tV);end;end);pq=CB[5];else local hX=(CB[0X2]);local UX=(P(function(...)(C)();do for Ql,Kl,Il,gl,Ll,Fl,ul,Dl,hl,Vl in...do(C)(true,{Ql,Kl,Il,gl,Ll,Fl,ul,Dl,hl,Vl});end;end;end));UX(vq[hX],vq[hX+0X1],vq[hX+0x2]);Jq=hX;vq[hX]=UX;pq=CB[5];end;end;end;else if JB<8 then(vq)[0]=true;do CB=bc[pq];end;do pq=pq+1;end;(Gq)[CB[6]]=vq[0];do pq=pq+1;end;repeat local oI,ZI=Lc,(vq);if#oI>0 then local Vd={};for es,as in M,oI do for fE,EE in M,as do if EE[1]==ZI and EE[2]>=0x0000 then local NJ=EE[0x2];if not Vd[NJ]then(Vd)[NJ]={ZI[NJ]};end;do EE[0X00001]=Vd[NJ];end;EE[2]=0X1;end;end;end;end;until true;return;else if JB==0x9 then(vq)[CB[2]]=Gq[CB[0X06]];else local cN=CB[2];local DN,hN=vq[cN]();if not(DN)then else pq=CB[0X5];do vq[cN+3]=hN;end;end;end;end;end;end;end;end);do if not(Pq)then if V(Qq)~='\115\116\114\105ng'then q(Qq,0);else do if r(Qq,'a\116\116em\112t\032to\032y\105e\108d\032\097\099ross\032met\097m\101t\104\111d\047C\037\045c\097\108\108 \098\111\117\110\100\097r\121')then return coroutine.yield();end;end;if not(r(Qq,"^.-:%d+: "))then(q)(Qq,0X000);else q("Luraph Script:"..(Qc[pq-0X00001]or"(internal)")..':\032'..u(Qq),0X0);end;end;else if Qq then do if Yq==0X1 then return vq[hq]();else return vq[hq](E(vq,hq+0X1,Jq));end;end;elseif not(hq)then else return E(vq,hq,Yq);end;end;end;end;else ic=function(...)local Oc,Rc=0X1,({});local Tc=((k and k()or _ENV));local Zc=((Tc==H and fc or Tc));local Wc=({[1]=Rc,[2]=Vc});local dc=(0);local pc,tc=q3(...);do pc=pc-1;end;for AE=0,pc do do if ac>AE then do(Rc)[AE]=tc[AE+1];end;else break;end;end;end;if not nc then tc=nil;elseif Ac then(Rc)[ac]={n=pc>=ac and pc-ac+0x1 or 0,E(tc,ac+0x1,pc+0X1)};end;if Zc==Tc then else do if s then s(ic,Zc);else do _ENV=Zc;end;end;end;end;local sc,Xc,wc,kc=c(function()while true do local sV=(bc[Oc]);local hV=sV[0X03];Oc=Oc+1;if not(hV>=14)then do if hV<7 then if hV>=3 then if hV>=5 then if hV==6 then do Rc[sV[0X02]]=Rc[sV[0x5]][Rc[sV[4]]];end;else(Rc)[sV[2]]={E({},1,sV[0X5])};end;else if hV~=4 then Rc[sV[2]]=sV[6];else do(Rc)[1]=Zc[sV[6]];end;do Oc=Oc+1;end;do Oc=Oc+0X01;end;local jl=1;sV=bc[Oc];do Oc=Oc+0X0001;end;do(Rc)[2]=sV[6];end;Oc=Oc+1;(Rc[jl])(Rc[jl+0X1]);do dc=jl-0X00001;end;do Oc=Oc+1;end;do Oc=Oc+0X1;end;Oc=Oc+0x1;(Rc)[0X1]=false;sV=bc[Oc];Oc=Oc+1;do(Zc)[sV[0x06]]=Rc[1];end;do Oc=Oc+0X1;end;repeat local bv,mv=Lc,Rc;if#bv>0 then local c0=({});do for C0,Z0 in M,bv do for Gc,rc in M,Z0 do if not(rc[0X01]==mv and rc[2]>=0x0000)then else local Wv=(rc[2]);if not(not c0[Wv])then else(c0)[Wv]={mv[Wv]};end;do rc[0X1]=c0[Wv];end;rc[0X2]=0X1;end;end;end;end;end;until true;return;end;end;else if hV>=0X001 then if hV==2 then if not(Rc[sV[5]]<=Rc[sV[4]])then Oc=sV[2];end;else(Rc)[0X2]=Zc[sV[6]];do Oc=Oc+1;end;local p8=2;Oc=Oc+1;sV=bc[Oc];Oc=Oc+1;(Rc)[3]=sV[6];do Oc=Oc+1;end;Rc[p8](Rc[p8+0X0001]);do dc=p8-1;end;Oc=Oc+1;Oc=Oc+0X0001;sV=bc[Oc];Oc=Oc+0X1;Rc[0X00002]=Zc[sV[6]];Oc=Oc+0x1;Oc=Oc+1;sV=bc[Oc];Oc=Oc+0X0001;do if not Rc[0X2]then Oc=sV[0X0005];end;end;end;else do Oc=sV[0X5];end;end;end;else if not(hV<0Xa)then if hV>=0Xc then do if hV==0XD then else Rc[3]=Zc[sV[0X6]];Oc=Oc+1;Oc=Oc+0X1;do sV=bc[Oc];end;Oc=Oc+1;if not(not Rc[0X3])then else Oc=sV[0x5];end;end;end;else do if hV~=0Xb then repeat local FB,jB=Lc,(Rc);if not(#FB>0)then else local Q0={};for gS,BS in M,FB do for yK,MK in M,BS do do if not(MK[1]==jB and MK[2]>=0X000)then else local qX=(MK[0X0002]);if not(not Q0[qX])then else(Q0)[qX]={jB[qX]};end;(MK)[1]=Q0[qX];do(MK)[2]=1;end;end;end;end;end;end;until true;return;else local fu=(Uc[sV[5]]);local Ru=(fu[5]);local Zu,tu=#Ru,nil;do if Zu>0X00000 then tu={};for c_=0X1,Zu do local V_=(Ru[c_]);if V_[0X0001]==0 then tu[c_-0X1]={Rc,V_[2]};else do tu[c_-0X1]=jc[V_[0x2]];end;end;end;(S)(Lc,tu);end;end;do(Rc)[sV[2]]=e3(fu,tu,Zc);end;end;end;end;else do if not(hV>=0x8)then(Rc)[sV[2]]=Rc[sV[0X5]]<Rc[sV[0X004]];else if hV~=0X00009 then if not(Rc[sV[0x5]]<Rc[sV[4]])then Oc=sV[2];end;else local pU=(sV[2]);local UU,IU=Rc[pU]();if UU then Oc=sV[5];Rc[pU+0X00003]=IU;end;end;end;end;end;end;end;else if not(hV>=21)then do if hV>=17 then if not(hV>=0X13)then if hV==0X012 then local mp=sV[2];local Lp,pp=Rc[mp]();do if not(Lp)then else for mI=0x1,sV[4]do Rc[mp+mI]=pp[mI];end;Oc=sV[5];end;end;else(Rc)[0X01]=Rc[0X0];do sV=bc[Oc];end;Oc=Oc+1;Rc[0x2]=Zc[sV[0X00006]];sV=bc[Oc];Oc=Oc+0X0001;do Rc[2]=Rc[0X0002][sV[1]];end;sV=bc[Oc];Oc=Oc+0x1;do(Rc)[3]=sV[0X6];end;Oc=Oc+1;local XX=2;Rc[XX](Rc[XX+1]);dc=XX-1;do Oc=Oc+0X00001;end;Oc=Oc+0X1;sV=bc[Oc];Oc=Oc+1;Rc[2]=Zc[sV[6]];Oc=Oc+0X001;Oc=Oc+1;sV=bc[Oc];Oc=Oc+1;do(Rc)[0x2]=Rc[0x002][sV[1]];end;do Oc=Oc+1;end;do Oc=Oc+0X1;end;sV=bc[Oc];Oc=Oc+1;if Rc[1]~=Rc[2]then else Oc=sV[0X00002];end;end;else do if hV~=0X00014 then Rc[0X2]=Zc[sV[6]];local u4=Rc[2];do sV=bc[Oc];end;Oc=Oc+1;local G4=2;(Rc)[G4+0X001]=u4;Rc[G4]=u4[sV[0x00001]];sV=bc[Oc];Oc=Oc+1;do Rc[0x4]=sV[0x6];end;Oc=Oc+0x1;G4=0X2;Rc[G4]=Rc[G4](Rc[G4+0X1],Rc[G4+0X002]);dc=G4;do Oc=Oc+0X1;end;do Oc=Oc+1;end;do sV=bc[Oc];end;do Oc=Oc+0X1;end;if not Rc[2]then do Oc=sV[5];end;end;else do(Rc)[2]=Zc[sV[6]];end;Oc=Oc+1;Oc=Oc+0x1;sV=bc[Oc];Oc=Oc+1;Rc[0X002]=Rc[0X2][sV[0x1]];local MR=(2);sV=bc[Oc];Oc=Oc+1;(Rc)[0X002]=Rc[0x2][sV[1]];sV=bc[Oc];Oc=Oc+0X1;local PR=Rc[2];Rc[MR+0X1]=PR;(Rc)[MR]=PR[sV[0x00001]];Oc=Oc+1;MR=2;(Rc[MR])(Rc[MR+0X00001]);dc=MR-0x1;Oc=Oc+1;do Oc=Oc+0X1;end;do sV=bc[Oc];end;Oc=Oc+1;Oc=sV[0X5];end;end;end;else if hV>=0Xf then if hV==16 then(Rc)[2]=Zc[sV[6]];Oc=Oc+0X1;local zu=0X02;Oc=Oc+1;sV=bc[Oc];do Oc=Oc+0X01;end;local bu=(Rc[0x2]);Rc[zu+0x0001]=bu;(Rc)[zu]=bu[sV[0X00001]];do sV=bc[Oc];end;do Oc=Oc+1;end;do(Rc)[4]=sV[6];end;do Oc=Oc+0X1;end;zu=2;(Rc)[zu]=Rc[zu](Rc[zu+0X0001],Rc[zu+2]);dc=zu;Oc=Oc+0X001;Oc=Oc+1;sV=bc[Oc];Oc=Oc+0x1;if Rc[0X2]then Oc=sV[0X005];end;else do(Rc)[0X02]=Zc[sV[6]];end;sV=bc[Oc];Oc=Oc+0X1;(Rc)[3]=Zc[sV[6]];local RD=(nil);do sV=bc[Oc];end;Oc=Oc+1;(Rc)[0X4]=sV[0X006];local oD=(jc[0]);Oc=Oc+1;Rc[5]=oD[0x00001][oD[2]];do Oc=Oc+1;end;Oc=Oc+0x1;sV=bc[Oc];Oc=Oc+1;Rc[5]=Rc[5][sV[1]];local jD=(0X0002);Oc=Oc+1;dc=jD+4-0X1;(Rc[jD])(E(Rc,jD+0X1,dc));do dc=jD-0x1;end;do sV=bc[Oc];end;Oc=Oc+0X1;(Rc)[2]=Zc[sV[6]];Oc=Oc+1;do Oc=Oc+0X1;end;do sV=bc[Oc];end;Oc=Oc+0X0001;local fD=(Uc[sV[0X5]]);local zD=(fD[0X005]);local OD=#zD;do if not(OD>0X0)then else RD={};for FM=0x0001,OD do local wM=zD[FM];do if wM[1]~=0 then(RD)[FM-1]=jc[wM[2]];else do(RD)[FM-1]={Rc,wM[0X00002]};end;end;end;end;(S)(Lc,RD);end;end;do(Rc)[3]=e3(fD,RD,Zc);end;Oc=Oc+0X0001;do jD=0X02;end;Rc[jD](Rc[jD+1]);do dc=jD-1;end;Oc=Oc+0x1;do Oc=Oc+0x1;end;sV=bc[Oc];Oc=Oc+1;Oc=sV[0x0005];end;else do Rc[sV[0X2]]=Zc[sV[0X0006]];end;end;end;end;else if not(hV>=25)then do if not(hV>=0x017)then if hV~=0X16 then(Rc)[2]=Zc[sV[0X06]];local ap=2;do sV=bc[Oc];end;Oc=Oc+1;local gp=Rc[2];Rc[ap+1]=gp;Rc[ap]=gp[sV[1]];sV=bc[Oc];do Oc=Oc+0X00001;end;(Rc)[0x4]=sV[0X6];Oc=Oc+1;ap=2;do(Rc)[ap]=Rc[ap](Rc[ap+1],Rc[ap+2]);end;do dc=ap;end;sV=bc[Oc];do Oc=Oc+0x001;end;do if not(Rc[0X02])then else do Oc=sV[5];end;end;end;else Rc[0X1]=Zc[sV[6]];Oc=Oc+0X1;do dc=1;end;Rc[dc]();do dc=dc-0x1;end;sV=bc[Oc];Oc=Oc+1;Rc[1]=Zc[sV[6]];sV=bc[Oc];Oc=Oc+1;if not(not Rc[0x1])then else Oc=sV[0X5];end;end;else if hV==0X18 then do for dJ=sV[2],sV[5]do(Rc)[dJ]=nil;end;end;else Rc[3]=Zc[sV[0x6]];Oc=Oc+1;Oc=Oc+0X1;do sV=bc[Oc];end;do Oc=Oc+1;end;(Rc)[3]=Rc[3][sV[0x1]];sV=bc[Oc];Oc=Oc+1;if not Rc[0X03]then Oc=sV[5];end;end;end;end;else if hV<0x1b then if hV==26 then Rc[0]=true;do sV=bc[Oc];end;Oc=Oc+1;do(Zc)[sV[6]]=Rc[0x0];end;do sV=bc[Oc];end;Oc=Oc+1;do(Rc)[0x0]=Zc[sV[6]];end;Oc=Oc+0X1;Oc=Oc+1;sV=bc[Oc];Oc=Oc+0X1;do Rc[0X0]=Rc[0X000][sV[0X1]];end;sV=bc[Oc];Oc=Oc+1;local mU=1;(Rc)[0X1]=Zc[sV[6]];sV=bc[Oc];Oc=Oc+0x1;(Rc)[1]=Rc[1][sV[1]];do Oc=Oc+1;end;do Oc=Oc+0X1;end;sV=bc[Oc];Oc=Oc+1;Rc[0X02]=sV[0X0006];Oc=Oc+1;Rc[mU](Rc[mU+1]);dc=mU-0x1;Oc=Oc+1;Oc=Oc+1;sV=bc[Oc];do Oc=Oc+1;end;(Rc)[1]=Zc[sV[0X06]];do Oc=Oc+0x0001;end;Oc=Oc+1;sV=bc[Oc];Oc=Oc+0X1;Rc[1]=Rc[0X01][sV[1]];sV=bc[Oc];Oc=Oc+1;if Rc[0]~=Rc[1]then else Oc=sV[0X2];end;else Rc[0X2]=Zc[sV[6]];Oc=Oc+0X1;Oc=Oc+0X00001;do sV=bc[Oc];end;Oc=Oc+1;(Rc)[2]=Rc[0x2][sV[0X1]];local db=(0x002);sV=bc[Oc];do Oc=Oc+1;end;local Xb=Rc[2];(Rc)[db+0X1]=Xb;(Rc)[db]=Xb[sV[0X1]];sV=bc[Oc];do Oc=Oc+0x1;end;Rc[4]=sV[6];do Oc=Oc+0X1;end;do db=2;end;Rc[db]=Rc[db](Rc[db+0X001],Rc[db+2]);do dc=db;end;Oc=Oc+0X01;Oc=Oc+0x1;do sV=bc[Oc];end;Oc=Oc+0X001;if not(not Rc[0X2])then else Oc=sV[5];end;end;else do if hV~=0X01c then if not(not Rc[sV[2]])then else Oc=sV[5];end;else(Rc)[0x3]=Zc[sV[6]];Oc=Oc+1;Oc=Oc+0X01;do sV=bc[Oc];end;Oc=Oc+1;if not Rc[0X3]then Oc=sV[5];end;end;end;end;end;end;end;end;end);if not(sc)then do if V(Xc)~='s\116ri\110\103'then(q)(Xc,0);else if r(Xc,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if r(Xc,"^.\045\058%d+\058\032")then(q)("Luraph Script:"..(Qc[Oc-0x001]or"(internal)")..": "..u(Xc),0X0000);else q(Xc,0x0000);end;end;end;end;else if Xc then if kc==0X1 then return Rc[wc]();else return Rc[wc](E(Rc,wc+1,dc));end;elseif not(wc)then else do return E(Rc,wc,kc);end;end;end;end;end;end;else if Sc<0x31 then if Sc==0X00030 then do ic=function(...)local Ov,uv=0x00001,{};local Sv=(k and k()or _ENV);local xv=(Sv==H and fc or Sv);local Qv,vv=q3(...);do Qv=Qv-1;end;local cv=(0);local Zv={[1]=uv,[2]=Vc};do for nW=0,Qv do if ac>nW then uv[nW]=vv[nW+1];else do break;end;end;end;end;do if not nc then do vv=nil;end;elseif Ac then do uv[ac]={n=Qv>=ac and Qv-ac+1 or 0,E(vv,ac+1,Qv+1)};end;end;end;if xv~=Sv then do if s then s(ic,xv);else _ENV=xv;end;end;end;while true do local V0=bc[Ov];Ov=Ov+0X0001;local J0=V0[0X3];do return(function(e,V,...)local u=e[0];return Client.Backpack:FindFirstChild(u);end)(uv,jc,...);end;end;end;end;else do ic=function(...)local pt,Dt=1,{};local Xt=((k and k()or _ENV));local Nt,st=q3(...);local At={[1]=Dt,[2]=Vc};Nt=Nt-1;local ct=(0x0);for Sh=0X0,Nt do if ac>Sh then do(Dt)[Sh]=st[Sh+1];end;else break;end;end;local vt=(Xt==H and fc or Xt);if not nc then st=nil;elseif not(Ac)then else Dt[ac]={n=Nt>=ac and Nt-ac+1 or 0X0,E(st,ac+1,Nt+0X1)};end;if vt==Xt then else if s then s(ic,vt);else do _ENV=vt;end;end;end;local Gt,Mt,dt,gt=c(function()while true do local Hn=bc[pt];local Fn=Hn[3];pt=pt+1;if Fn>=0x0d then do if Fn<19 then if not(Fn<16)then if not(Fn>=0X000011)then do Dt[3]=vt[Hn[0X6]];end;do pt=pt+0x01;end;local aA=(3);pt=pt+0X1;pt=pt+0x1;(Dt)[0X04]=Dt[2];pt=pt+1;Dt[aA]=Dt[aA](Dt[aA+0X0001]);ct=aA;pt=pt+0x00001;pt=pt+1;Hn=bc[pt];do pt=pt+0x1;end;if Dt[0X3]==Hn[0X1]then else pt=Hn[0x002];end;else if Fn~=18 then do Dt[0X3]=vt[Hn[6]];end;pt=pt+1;do pt=pt+0X0001;end;do pt=pt+0X1;end;(Dt)[4]=Dt[2];pt=pt+0X1;local uq=3;(Dt)[uq]=Dt[uq](Dt[uq+0X1]);ct=uq;Hn=bc[pt];do pt=pt+0x001;end;(Dt)[3]=Dt[3][Hn[1]];Hn=bc[pt];pt=pt+1;if not(not Dt[0x00003])then else do pt=Hn[5];end;end;else Dt[Hn[0x2]]=Hn[0X0006];end;end;else do if Fn>=14 then if Fn==0X00f then do repeat local s8,l8=Lc,Dt;do if#s8>0 then local JO=({});for B0,G0 in M,s8 do do for Uf,Kf in M,G0 do do if not(Kf[0X1]==l8 and Kf[2]>=0x0)then else local Kr=Kf[2];if not(not JO[Kr])then else JO[Kr]={l8[Kr]};end;Kf[0X1]=JO[Kr];Kf[0X2]=1;end;end;end;end;end;end;end;until true;end;return;else(Dt)[0x7]=Dt[3][Hn[0X1]];pt=pt+1;pt=pt+0X00001;Hn=bc[pt];pt=pt+1;if Dt[0X0007]~=Hn[1]then pt=Hn[0X2];end;end;else Dt[0X0007]=vt[Hn[0X6]];local XW=(7);pt=pt+1;Dt[8]=Dt[6];pt=pt+1;Dt[XW]=Dt[XW](Dt[XW+0x1]);do ct=XW;end;do Hn=bc[pt];end;pt=pt+1;if Dt[7]==Hn[1]then else pt=Hn[2];end;end;end;end;else if Fn>=22 then if not(Fn>=0X18)then if Fn~=23 then pt=Hn[5];else do(Dt)[0X8]=vt[Hn[0x6]];end;pt=pt+0X0001;do pt=pt+0X001;end;Hn=bc[pt];do pt=pt+1;end;(Dt)[0X9]=vt[Hn[6]];Hn=bc[pt];pt=pt+0X01;if Dt[8]==Dt[9]then pt=Hn[2];end;end;else if Fn==25 then(Dt)[Hn[0x2]]=Dt[Hn[5]]~=Dt[Hn[0X4]];else(Dt)[Hn[0X02]]=At[Hn[5]];end;end;else if not(Fn>=0X14)then else if Fn==0X015 then Dt[4]=Dt[0X00003][Hn[0X1]];pt=pt+1;do pt=pt+0X1;end;Hn=bc[pt];pt=pt+0X1;Dt[0X5]=vt[Hn[0x6]];do pt=pt+1;end;pt=pt+1;Hn=bc[pt];do pt=pt+0X1;end;if Dt[0X04]==Dt[5]then else pt=Hn[2];end;else do for Lr=Hn[0X2],Hn[0X5]do Dt[Lr]=nil;end;end;end;end;end;end;end;else if not(Fn<0x6)then if Fn<0X00009 then if Fn<7 then(Dt)[Hn[0X2]]=vt[Hn[0X6]];else if Fn==8 then do Dt[0]=vt[Hn[0X6]];end;pt=pt+0X1;pt=pt+1;do Hn=bc[pt];end;local TP=1;pt=pt+0X01;(Dt)[0X1]=vt[Hn[0X6]];pt=pt+0x00001;do pt=pt+1;end;pt=pt+1;local rP=0X1;if rP~=0 then ct=TP+rP-1;end;local bP,YP,nP=nil,nil,(0x0000);if rP==1 then bP,YP=q3(Dt[TP]());else bP,YP=q3(Dt[TP](E(Dt,TP+1,ct)));end;do if nP==1 then ct=TP-0x1;else if nP==0 then bP=bP+TP-1;ct=bP;else bP=TP+nP-2;ct=bP+1;end;local vg=0;for gI=TP,bP do do vg=vg+1;end;(Dt)[gI]=YP[vg];end;end;end;pt=pt+0X01;do TP=0;end;rP=0X0;nP=0X004;if rP==0 then else ct=TP+rP-0x01;end;bP,YP=nil;do if rP==0X0001 then do bP,YP=q3(Dt[TP]());end;else bP,YP=q3(Dt[TP](E(Dt,TP+1,ct)));end;end;if nP==0X1 then ct=TP-0X01;else do if nP~=0 then bP=TP+nP-0x0002;ct=bP+1;else bP=bP+TP-0X1;do ct=bP;end;end;end;local ho=0;for iz=TP,bP do do ho=ho+1;end;(Dt)[iz]=YP[ho];end;end;Hn=bc[pt];pt=pt+0X1;TP=0X0;local aP=P(function(...)(C)();for jn,Mn in...do C(true,jn,Mn);end;end);(aP)(Dt[TP],Dt[TP+0x001],Dt[TP+0X0002]);ct=TP;do Dt[TP]=aP;end;pt=Hn[0x0005];else local Ni=Uc[Hn[5]];local li=Ni[0X5];local Si=(nil);local Oi=#li;do if not(Oi>0)then else do Si={};end;for Zu=1,Oi do local zu=li[Zu];if zu[0X00001]==0 then Si[Zu-1]={Dt,zu[2]};else Si[Zu-0X01]=jc[zu[2]];end;end;(S)(Lc,Si);end;end;Dt[Hn[2]]=e3(Ni,Si,vt);end;end;else if not(Fn<0X000B)then if Fn~=12 then(Dt)[Hn[0X2]]=Dt[Hn[0X5]]==Dt[Hn[0X4]];else do(Dt)[8]=vt[Hn[0X006]];end;do pt=pt+1;end;pt=pt+0X1;pt=pt+0X1;Dt[0X00009]=Dt[6];local es=(8);do Hn=bc[pt];end;pt=pt+1;(Dt)[0Xa]=Hn[6];pt=pt+1;(Dt)[es]=Dt[es](Dt[es+1],Dt[es+2]);ct=es;Hn=bc[pt];pt=pt+1;if not Dt[0X8]then pt=Hn[5];end;end;else do if Fn==10 then Dt[Hn[0X0002]]={E({},0x00001,Hn[5])};else local xq=(Hn[0X2]);local Gq,qq,pq=Dt[xq]();if Gq then(Dt)[xq+1]=qq;Dt[xq+0X002]=pq;pt=Hn[5];end;end;end;end;end;else if Fn>=3 then if not(Fn<0X004)then if Fn~=5 then Dt[Hn[2]]=Hn[0X006];else if Dt[Hn[0X5]]==Dt[Hn[4]]then else pt=Hn[0X2];end;end;else(Dt[0X06])[Hn[0X06]]=Hn[0x1];Hn=bc[pt];do pt=pt+1;end;(Dt[6])[Hn[6]]=Hn[0X0001];Hn=bc[pt];pt=pt+0X1;do Dt[7]=vt[Hn[6]];end;pt=pt+0X001;do(Dt)[0x8]=Dt[6];end;pt=pt+1;local ar=(nil);Dt[0x09]={};Hn=bc[pt];do pt=pt+0X0001;end;local Or=(Uc[Hn[5]]);local yr=(Or[5]);local Rr=#yr;if Rr>0X0 then ar={};do for ah=1,Rr do local ih=yr[ah];if ih[1]==0X00000 then(ar)[ah-1]={Dt,ih[0X00002]};else ar[ah-0x1]=jc[ih[0X002]];end;end;end;(S)(Lc,ar);end;Dt[10]=e3(Or,ar,vt);do Hn=bc[pt];end;pt=pt+1;do(Dt[0x00009])[Hn[0X6]]=Dt[10];end;Hn=bc[pt];pt=pt+1;do Or=Uc[Hn[0X5]];end;local Xr=(0X007);do ar=nil;end;do yr=Or[5];end;do Rr=#yr;end;if not(Rr>0X000)then else do ar={};end;for E8=0X1,Rr do local Z8=yr[E8];do if Z8[1]~=0 then do ar[E8-1]=jc[Z8[0X2]];end;else(ar)[E8-0x1]={Dt,Z8[0X2]};end;end;end;(S)(Lc,ar);end;(Dt)[10]=e3(Or,ar,vt);do Hn=bc[pt];end;do pt=pt+0x1;end;Dt[9][Hn[6]]=Dt[0Xa];do pt=pt+1;end;Dt[Xr](Dt[Xr+1],Dt[Xr+0X2]);ct=Xr-1;end;else if not(Fn>=1)then(Dt)[0X7]=vt[Hn[0X6]];Hn=bc[pt];pt=pt+0X0001;vt[Hn[6]]=Dt[0X7];Hn=bc[pt];pt=pt+0x0001;Dt[7]=vt[Hn[6]];pt=pt+0X1;pt=pt+0X1;Hn=bc[pt];pt=pt+1;do Dt[0X7]=Dt[0x07][Hn[0X00001]];end;do pt=pt+1;end;(Dt)[0X0008]=Dt[2];Hn=bc[pt];pt=pt+1;Dt[0X009]=Hn[6];Hn=bc[pt];local j0=(10);pt=pt+1;(Dt)[0X0000A]=vt[Hn[6]];pt=pt+1;pt=pt+1;Hn=bc[pt];do pt=pt+0x1;end;(Dt)[0XA]=Dt[0Xa][Hn[1]];do pt=pt+0X1;end;pt=pt+0X1;Hn=bc[pt];pt=pt+0X00001;do Dt[0xb]=Hn[0X6];end;Hn=bc[pt];pt=pt+1;Dt[0xC]=Hn[0x6];Hn=bc[pt];pt=pt+1;Dt[13]=Hn[6];do pt=pt+1;end;local d0=4;if d0==0 then else ct=j0+d0-1;end;local F0,Q0,Z0=nil,nil,0x000;if d0~=0X1 then do F0,Q0=q3(Dt[j0](E(Dt,j0+0X1,ct)));end;else F0,Q0=q3(Dt[j0]());end;do if Z0~=1 then do if Z0==0x0 then F0=F0+j0-1;ct=F0;else do F0=j0+Z0-2;end;ct=F0+0X0001;end;end;local ez=(0);do for fp=j0,F0 do ez=ez+1;(Dt)[fp]=Q0[ez];end;end;else do ct=j0-0X1;end;end;end;pt=pt+1;j0=7;(Dt[j0])(E(Dt,j0+0X00001,ct));ct=j0-1;Hn=bc[pt];pt=pt+0X1;pt=Hn[0X5];else if Fn~=0X02 then Dt[0x004]=vt[Hn[6]];pt=pt+1;pt=pt+0X01;do Hn=bc[pt];end;local Ja=0;pt=pt+0X1;do Dt[5]=vt[Hn[6]];end;pt=pt+0x0001;do(Dt)[6]=Dt[2];end;local Aa=5;do pt=pt+0X1;end;local ea=(0X002);if ea~=0 then ct=Aa+ea-1;end;local Oa,Ha=nil,nil;do if ea==0x1 then Oa,Ha=q3(Dt[Aa]());else Oa,Ha=q3(Dt[Aa](E(Dt,Aa+1,ct)));end;end;if Ja~=1 then if Ja==0X0 then Oa=Oa+Aa-1;ct=Oa;else Oa=Aa+Ja-0X2;ct=Oa+0X1;end;local Pe=(0);do for mG=Aa,Oa do Pe=Pe+1;(Dt)[mG]=Ha[Pe];end;end;else ct=Aa-1;end;pt=pt+1;pt=pt+0x1;do pt=pt+1;end;Aa=4;do ea=0X0;end;Ja=0x4;if ea==0 then else do ct=Aa+ea-0X1;end;end;do Oa,Ha=nil;end;do if ea~=1 then Oa,Ha=q3(Dt[Aa](E(Dt,Aa+1,ct)));else do Oa,Ha=q3(Dt[Aa]());end;end;end;if Ja==0X1 then ct=Aa-0x001;else if Ja~=0 then do Oa=Aa+Ja-2;end;ct=Oa+0X01;else do Oa=Oa+Aa-0X00001;end;ct=Oa;end;local I6=0X0;for U0=Aa,Oa do do I6=I6+1;end;(Dt)[U0]=Ha[I6];end;end;pt=pt+0X1;pt=pt+0X0001;Hn=bc[pt];pt=pt+1;Aa=0X4;local ca=(P(function(...)(C)();for h2,W2 in...do(C)(true,h2,W2);end;end));ca(Dt[Aa],Dt[Aa+0x1],Dt[Aa+2]);ct=Aa;Dt[Aa]=ca;pt=Hn[0X05];else(Dt)[Hn[2]]=w(Dt[Hn[5]],Dt[Hn[4]]);end;end;end;end;end;end;end);if not(Gt)then if V(Mt)~="string"then q(Mt,0);else if r(Mt,"\097\116t\101m\112t \116o\032yiel\100\032ac\114o\115s \109\101\116\097\109\101\116hod\047\067%\045\099a\108l bou\110\100a\114\121")then return coroutine.yield();end;do if r(Mt,"^\046\045:%\100\043\058 ")then(q)("Luraph Script:"..(Qc[pt-0X1]or"(i\110\116\101rn\097l\041")..'\058 '..u(Mt),0X0);else q(Mt,0);end;end;end;else if Mt then do if gt==1 then return Dt[dt]();else return Dt[dt](E(Dt,dt+0X1,ct));end;end;elseif not(dt)then else return E(Dt,dt,gt);end;end;end;end;end;else if Sc~=50 then do ic=function(...)local Fi,Ci,wi=1,{},(0X0000);local Gi={[2]=Vc,[1]=Ci};local Oi=(k and k()or _ENV);local Qi=(Oi==H and fc or Oi);local Ni,Li=q3(...);Ni=Ni-0X1;for WW=0X00,Ni do if ac>WW then(Ci)[WW]=Li[WW+0X1];else break;end;end;if not nc then do Li=nil;end;elseif Ac then Ci[ac]={n=Ni>=ac and Ni-ac+0x0001 or 0,E(Li,ac+0X1,Ni+1)};end;if Qi~=Oi then if not(s)then _ENV=Qi;else(s)(ic,Qi);end;end;local li,Ai,di,ki=c(function()while true do local bZ=(bc[Fi]);local xZ=(bZ[0x3]);Fi=Fi+0x0001;do if not(xZ>=0X0008)then if not(xZ<0X4)then if not(xZ>=6)then if xZ~=5 then do if Ci[bZ[2]]then Fi=bZ[5];end;end;else do(Ci)[bZ[0x02]]=bZ[0X6];end;end;else if xZ~=0X7 then do repeat local HM,cM,YM=Lc,Ci,(bZ[2]);if#HM>0 then local AP={};for DJ,lJ in M,HM do for yO,cO in M,lJ do if not(cO[1]==cM and cO[0X2]>=YM)then else local pk=(cO[0X2]);if not AP[pk]then do(AP)[pk]={cM[pk]};end;end;(cO)[0X00001]=AP[pk];cO[0X2]=0X1;end;end;end;end;until true;end;else local pv=(Ci[bZ[5]]/Ci[bZ[0x4]]);do Ci[bZ[2]]=pv-pv%1;end;end;end;else if xZ>=0x00002 then do if xZ~=0X03 then Ci[bZ[0X2]]=Ci[bZ[0X005]]^Ci[bZ[4]];else Ci[bZ[0X2]]=Qi[bZ[6]];end;end;else if xZ~=0X1 then Fi=bZ[0X5];else(Ci)[0]=Qi[bZ[6]];local gA=(nil);do bZ=bc[Fi];end;local BA=0;Fi=Fi+1;local JA=Ci[0x0];(Ci)[BA+1]=JA;do(Ci)[BA]=JA[bZ[0x1]];end;bZ=bc[Fi];Fi=Fi+1;Ci[2]=bZ[6];do Fi=Fi+0X00001;end;BA=0x0;Ci[BA]=Ci[BA](Ci[BA+0X01],Ci[BA+2]);wi=BA;bZ=bc[Fi];Fi=Fi+0x1;(Ci)[0X001]=Qi[bZ[6]];Fi=Fi+0X1;Fi=Fi+0x1;do bZ=bc[Fi];end;Fi=Fi+1;(Ci)[0X1]=Ci[0X1][bZ[0x0001]];Fi=Fi+0x1;Fi=Fi+0X1;bZ=bc[Fi];do Fi=Fi+0x1;end;local hA=Uc[bZ[5]];local CA=(hA[5]);local VA=#CA;if VA>0X0 then gA={};for bn=0X1,VA do local xn=(CA[bn]);if xn[0X1]==0X00000 then gA[bn-1]={Ci,xn[0X2]};else(gA)[bn-1]=jc[xn[2]];end;end;(S)(Lc,gA);end;Ci[0X002]=e3(hA,gA,Qi);Fi=Fi+1;BA=1;(Ci[BA])(Ci[BA+1]);do wi=BA-0X1;end;do Fi=Fi+1;end;repeat local Ws,ns=Lc,(Ci);if not(#Ws>0)then else local zy={};for cd,Fd in M,Ws do for U8,t8 in M,Fd do if not(t8[0X1]==ns and t8[2]>=0X0)then else local jb=t8[0x2];if not(not zy[jb])then else(zy)[jb]={ns[jb]};end;t8[0x1]=zy[jb];(t8)[0x00002]=0X0001;end;end;end;end;until true;return;end;end;end;else if not(xZ>=12)then do if not(xZ>=10)then do if xZ==9 then(Ci)[bZ[2]]=Ci[bZ[5]]<Ci[bZ[4]];else do(Ci)[bZ[0x00002]]={E({},0X0001,bZ[5])};end;end;end;else if xZ~=11 then(Ci)[bZ[0X2]]=Ci[bZ[5]]%Ci[bZ[0X0004]];else local tC=(Uc[bZ[5]]);local RC,xC=tC[5],nil;local vC=(#RC);if not(vC>0)then else xC={};do for wN=1,vC do local UN=(RC[wN]);if UN[0X001]~=0X0 then(xC)[wN-0x1]=jc[UN[0X00002]];else(xC)[wN-0x1]={Ci,UN[2]};end;end;end;S(Lc,xC);end;(Ci)[bZ[0X2]]=e3(tC,xC,Qi);end;end;end;else do if xZ<14 then if xZ==13 then local OB,HB=bZ[0X0002],((bZ[0X4]-1)*50);local EB=(Ci[OB]);do for JJ=1,bZ[5]do(EB)[HB+JJ]=Ci[OB+JJ];end;end;else if not(not Ci[bZ[2]])then else do Fi=bZ[5];end;end;end;else if xZ==0Xf then Ci[bZ[2]]=Ci[bZ[0X00005]]/Ci[bZ[4]];else end;end;end;end;end;end;end;end);if not(li)then if V(Ai)~='\115t\114i\110g'then(q)(Ai,0X0);else do if not(r(Ai,"\097tte\109\112t\032\116o yiel\100 \097\099\114\111ss\032me\116a\109et\104o\100\047\067\037-\099\097\108l\032\098\111u\110\100\097\114\121"))then else do return coroutine.yield();end;end;end;if not(r(Ai,'^\046-\058\037d+: '))then q(Ai,0);else q("Luraph Script:"..(Qc[Fi-1]or"(internal)")..'\058 '..u(Ai),0x0);end;end;else if Ai then if ki==1 then return Ci[di]();else return Ci[di](E(Ci,di+1,wi));end;elseif not(di)then else return E(Ci,di,ki);end;end;end;end;else do ic=function(...)local o4,w4=0x1,({});local e4=(k and k()or _ENV);local H4,y4=(e4==H and fc or e4),(0X0);local Q4,m4=q3(...);local l4={[2]=Vc,[1]=w4};Q4=Q4-1;for FN=0,Q4 do if not(ac>FN)then break;else w4[FN]=m4[FN+0X0001];end;end;do if not nc then m4=nil;elseif not(Ac)then else do(w4)[ac]={n=Q4>=ac and Q4-ac+0X01 or 0,E(m4,ac+0X1,Q4+1)};end;end;end;if H4==e4 then else if not(s)then _ENV=H4;else(s)(ic,H4);end;end;local j4,c4,V4,D4=c(function()while true do local r5=(bc[o4]);local g5=r5[3];o4=o4+0X1;if not(g5<0x9)then do if g5<14 then if not(g5>=11)then if g5~=10 then do(w4)[r5[2]]=w4[r5[5]]+w4[r5[0X4]];end;else end;else if g5<12 then(w4)[r5[2]]=l4[r5[0X005]];else do if g5~=0xd then(w4)[0]=H4[r5[0X6]];local f0=(0x00);r5=bc[o4];o4=o4+0x1;(w4)[0X1]=r5[6];do o4=o4+1;end;(w4)[f0]=w4[f0](w4[f0+1]);y4=f0;do o4=o4+1;end;o4=o4+1;r5=bc[o4];o4=o4+0X1;if not(not w4[0X0])then else o4=r5[5];end;else(w4)[r5[2]]=H4[r5[6]];end;end;end;end;else if g5<16 then do if g5==0Xf then local Uz,Az=r5[2],w4[r5[0X5]];(w4)[Uz+1]=Az;(w4)[Uz]=Az[r5[0X1]];else local a2,F2=r5[0X2],((r5[0X4]-0X00001)*50);local X2=(w4[a2]);for Yz=0X1,r5[0X0005]do(X2)[F2+Yz]=w4[a2+Yz];end;end;end;else do if not(g5<0X11)then if g5~=0X12 then local K_,T_=Uc[r5[5]],nil;local Q_=(K_[5]);local S_=#Q_;do if not(S_>0)then else do T_={};end;for xf=1,S_ do local uf=(Q_[xf]);do if uf[1]~=0 then T_[xf-1]=jc[uf[0X00002]];else(T_)[xf-1]={w4,uf[0X02]};end;end;end;(S)(Lc,T_);end;end;do w4[r5[0X2]]=e3(K_,T_,H4);end;else(w4)[r5[0x00002]]={E({},0x1,r5[5])};end;else(w4)[0]=H4[r5[6]];r5=bc[o4];o4=o4+0X1;do w4[0X1]=H4[r5[6]];end;o4=o4+1;do o4=o4+1;end;r5=bc[o4];do o4=o4+1;end;w4[0X1]=w4[1][r5[1]];o4=o4+1;local Bk=0;do o4=o4+0X1;end;o4=o4+0X01;w4[Bk](w4[Bk+1]);do y4=Bk-0X1;end;r5=bc[o4];o4=o4+1;o4=r5[5];end;end;end;end;end;else if g5>=0X4 then if not(g5>=0X6)then if g5==0X05 then if not(w4[r5[0X2]])then else o4=r5[0x5];end;else do w4[r5[0X2]]=w4[r5[5]]%w4[r5[4]];end;end;else if g5<0x7 then do repeat local Vv,tv=Lc,(w4);do if not(#Vv>0X000)then else local dd={};do for JJ,WJ in M,Vv do do for RL,lL in M,WJ do if lL[0x001]==tv and lL[2]>=0 then local aW=lL[2];if not dd[aW]then(dd)[aW]={tv[aW]};end;do(lL)[1]=dd[aW];end;lL[0X02]=0X1;end;end;end;end;end;end;end;until true;end;return;else do if g5~=0x8 then for Nb=r5[2],r5[0x5]do(w4)[Nb]=nil;end;else w4[r5[0X2]]=r5[0X6];end;end;end;end;else if not(g5>=2)then if g5~=0x1 then(w4)[0]=H4[r5[6]];r5=bc[o4];o4=o4+0X00001;w4[0]=w4[0][r5[0x1]];r5=bc[o4];o4=o4+1;if not(not w4[0x0])then else o4=r5[5];end;else o4=r5[0X5];end;else if g5==0x3 then w4[0X00000]=H4[r5[6]];o4=o4+1;o4=o4+1;r5=bc[o4];do o4=o4+0X01;end;(w4)[0]=w4[0][r5[1]];r5=bc[o4];do o4=o4+1;end;if not w4[0]then do o4=r5[0X5];end;end;else w4[0]=H4[r5[0x6]];o4=o4+0X1;o4=o4+1;o4=o4+1;y4=0;(w4)[y4]=w4[y4]();o4=o4+0X01;o4=o4+1;do r5=bc[o4];end;o4=o4+1;if not(w4[0X00000])then else do o4=r5[0X5];end;end;end;end;end;end;end;end);if not(j4)then if V(c4)=="string"then do if r(c4,"a\116t\101\109\112t\032\116\111 \121i\101\108\100 \097\099\114\111\115\115 m\101tam\101t\104\111d\047\067%-\099al\108 bou\110dary")then do return coroutine.yield();end;end;end;if not(r(c4,'\094.-:\037\100\043\058\032'))then(q)(c4,0);else(q)("Luraph Script:"..(Qc[o4-0x00001]or"(\105\110\116\101\114na\108)")..": "..u(c4),0);end;else(q)(c4,0X00000);end;else do if c4 then do if D4~=0x00001 then do return w4[V4](E(w4,V4+1,y4));end;else do return w4[V4]();end;end;end;elseif V4 then return E(w4,V4,D4);end;end;end;end;end;end;end;end;end;end;else do if not(Sc>=0X000F)then do if not(Sc>=7)then if Sc<0X3 then do if Sc>=0X1 then if Sc~=0X2 then ic=function(...)local Sl=({});local xl=1;local ll=((k and k()or _ENV));local kl=0;local Yl,Al=q3(...);local sl,pl={[2]=Vc,[1]=Sl},((ll==H and fc or ll));Yl=Yl-0X1;for PU=0x0,Yl do if ac>PU then Sl[PU]=Al[PU+1];else break;end;end;do if not nc then do Al=nil;end;elseif not(Ac)then else(Sl)[ac]={n=Yl>=ac and Yl-ac+0x0001 or 0X0,E(Al,ac+1,Yl+1)};end;end;do if pl==ll then else if not(s)then _ENV=pl;else(s)(ic,pl);end;end;end;local Pl,ol,Gl,Ml=c(function()while true do local sM=(bc[xl]);local KM=sM[3];xl=xl+0X01;if KM>=8 then do if not(KM<12)then do if KM>=0XE then if not(KM<0Xf)then if KM~=0X10 then local YB=Uc[sM[0X0005]];local FB=(YB[0X5]);local DB=(nil);local gB=#FB;if gB>0 then do DB={};end;for bZ=0x1,gB do local hZ=FB[bZ];if hZ[1]~=0 then DB[bZ-1]=jc[hZ[0X2]];else DB[bZ-1]={Sl,hZ[0X2]};end;end;S(Lc,DB);end;(Sl)[sM[0X2]]=e3(YB,DB,pl);else do if Sl[sM[0X5]]~=Sl[sM[4]]then xl=sM[2];end;end;end;else local cs=(sM[0X2]);local fs,Ss=Sl[cs]();if not(fs)then else for KW=1,sM[0X4]do(Sl)[cs+KW]=Ss[KW];end;xl=sM[0X5];end;end;else if KM~=0XD then if not(not(Sl[sM[5]]<=Sl[sM[0x4]]))then else xl=sM[0X2];end;else Sl[sM[2]]=pl[sM[6]];end;end;end;else if not(KM>=10)then do if KM==0x09 then do xl=sM[5];end;else repeat local AF,gF=Lc,(Sl);do if#AF>0X000 then local Zu={};for Ae,he in M,AF do do for Ol,Xl in M,he do if not(Xl[1]==gF and Xl[2]>=0X00)then else local Kf=Xl[0X02];if not(not Zu[Kf])then else do(Zu)[Kf]={gF[Kf]};end;end;(Xl)[0X1]=Zu[Kf];(Xl)[2]=0x1;end;end;end;end;end;end;until true;do return;end;end;end;else if KM~=11 then(Sl)[sM[0x2]]=sM[6];else for u1=sM[2],sM[0x0005]do(Sl)[u1]=nil;end;end;end;end;end;else if not(KM>=0X4)then if KM>=2 then if KM~=3 then local Vx,Yx=jc[0],(0X00001);Sl[1]=Vx[1][Vx[0X2]];sM=bc[xl];xl=xl+1;Sl[1]=Sl[1][sM[0X1]];xl=xl+0X1;Sl[0X002]=Sl[0];xl=xl+0X1;Vx=jc[0X1];Sl[0X003]=Vx[1][Vx[2]];xl=xl+0X00001;(Sl[Yx])(Sl[Yx+0x1],Sl[Yx+0X0002]);kl=Yx-0X0001;xl=xl+0X1;xl=xl+1;sM=bc[xl];do xl=xl+1;end;do xl=sM[5];end;else do Sl[0x00000]=pl[sM[0X6]];end;sM=bc[xl];xl=xl+1;(Sl)[1]=sM[6];xl=xl+1;local oa=0x0;do Sl[oa]=Sl[oa](Sl[oa+0X1]);end;do kl=oa;end;local ha=(jc[0X00000]);xl=xl+0X1;xl=xl+1;xl=xl+0x1;(Sl)[0X1]=ha[1][ha[2]];xl=xl+0X1;xl=xl+0X00001;sM=bc[xl];xl=xl+0X001;Sl[0x1]=Sl[1][sM[0X00001]];xl=xl+1;Sl[2]=Sl[0];xl=xl+0X00001;oa=1;Sl[oa]=Sl[oa](Sl[oa+1]);do kl=oa;end;sM=bc[xl];xl=xl+1;if not Sl[1]then xl=sM[0X005];end;end;else do if KM~=0x1 then else Sl[sM[2]]=Sl[sM[0X5]]^Sl[sM[4]];end;end;end;else if KM<6 then if KM~=5 then(Sl)[sM[2]]=Sl[sM[5]]<=Sl[sM[4]];else do Sl[sM[0X2]]={E({},0X1,sM[5])};end;end;else do if KM~=0X7 then do Sl[0X1]=pl[sM[6]];end;sM=bc[xl];xl=xl+0x1;(Sl)[0x01]=Sl[0X01][sM[0X1]];sM=bc[xl];do xl=xl+1;end;if not Sl[0X001]then do xl=sM[0X5];end;end;else local aZ=sM[2];local lZ=(P(function(...)(C)();for qk,Lk,Yk,Pk,gk,Xk,Tk,Ok,ck,xk in...do(C)(true,{qk,Lk,Yk,Pk,gk,Xk,Tk,Ok,ck,xk});end;end));lZ(Sl[aZ],Sl[aZ+1],Sl[aZ+0X00002]);kl=aZ;Sl[aZ]=lZ;do xl=sM[5];end;end;end;end;end;end;end;end);if Pl then do if ol then if Ml~=0X1 then return Sl[Gl](E(Sl,Gl+1,kl));else do return Sl[Gl]();end;end;elseif Gl then do return E(Sl,Gl,Ml);end;end;end;else if V(ol)=="string"then do if not(r(ol,"a\116tem\112t \116\111\032\121\105el\100\032acros\115\032m\101\116ame\116\104o\100\047\067%\045ca\108\108\032b\111u\110d\097\114\121"))then else return coroutine.yield();end;end;if not(r(ol,'\094\046-:\037d\043: '))then q(ol,0X0);else(q)("Luraph Script:"..(Qc[xl-0X0001]or"(\105n\116e\114\110\097\108)")..": "..u(ol),0X0);end;else(q)(ol,0);end;end;end;else ic=function(...)local Hy=({});local Yy=0;local sy=(0X00001);local Ey={[2]=Vc,[1]=Hy};local My=((k and k()or _ENV));local Zy,Xy=q3(...);Zy=Zy-0X001;local gy=(My==H and fc or My);for vH=0,Zy do if not(ac>vH)then break;else do(Hy)[vH]=Xy[vH+1];end;end;end;if not nc then Xy=nil;elseif not(Ac)then else(Hy)[ac]={n=Zy>=ac and Zy-ac+0x1 or 0X0,E(Xy,ac+1,Zy+1)};end;if gy==My then else if s then s(ic,gy);else _ENV=gy;end;end;local by,ky,yy,ny=c(function()do while true do local rG=bc[sy];local RG=rG[3];do sy=sy+0X1;end;do if RG<0X07 then if RG>=0X00003 then do if RG<5 then if RG==4 then else local C0=(rG[0X05]);local I0=Hy[C0];for pp=C0+1,rG[4]do I0=I0..Hy[pp];end;(Hy)[rG[2]]=I0;end;else if RG==0X00006 then do(Hy)[rG[2]]=gy[rG[6]];end;else(Hy)[rG[0x2]]=Hy[rG[5]]==Hy[rG[4]];end;end;end;else if RG>=1 then if RG~=0X2 then sy=rG[5];else local HS=nil;local uS=Uc[rG[5]];local bS=(uS[5]);local fS=#bS;if not(fS>0X00000)then else HS={};for sm=1,fS do local Dm=bS[sm];if Dm[0X0001]==0X0 then(HS)[sm-1]={Hy,Dm[2]};else HS[sm-1]=jc[Dm[2]];end;end;(S)(Lc,HS);end;do Hy[rG[0X02]]=e3(uS,HS,gy);end;end;else(Hy)[rG[2]]={E({},0x1,rG[5])};end;end;else if RG>=0x00A then do if not(RG<0X000c)then if RG~=13 then Hy[rG[0X2]]=#Hy[rG[5]];else if Hy[rG[0X2]]then do sy=rG[0X5];end;end;end;else if RG~=11 then(Hy)[rG[0x2]]=rG[0X006];else for Te=rG[0X00002],rG[0X0005]do(Hy)[Te]=nil;end;end;end;end;else if not(RG>=0x8)then do Hy[rG[2]]=o(Hy[rG[0X05]],Hy[rG[0X4]]);end;else if RG~=0x9 then do(Hy)[0X000]=gy[rG[6]];end;local Y8=(0);do rG=bc[sy];end;sy=sy+1;local k8=Hy[0X00000];(Hy)[Y8+0x1]=k8;Hy[Y8]=k8[rG[0X01]];rG=bc[sy];sy=sy+0x1;(Hy)[0X2]=rG[6];do sy=sy+1;end;Y8=0x0;do Hy[Y8]=Hy[Y8](Hy[Y8+1],Hy[Y8+2]);end;do Yy=Y8;end;sy=sy+0X1;sy=sy+1;rG=bc[sy];sy=sy+0X1;do(Hy)[0x1]=gy[rG[6]];end;rG=bc[sy];sy=sy+0x1;Hy[0x0001]=Hy[1][rG[0X00001]];rG=bc[sy];local I8=Uc[rG[5]];sy=sy+1;local j8=(nil);local l8=I8[5];local Z8=(#l8);if Z8>0x0 then j8={};for Wk=1,Z8 do local Dk=l8[Wk];if Dk[0X1]~=0 then j8[Wk-0x1]=jc[Dk[0x2]];else j8[Wk-1]={Hy,Dk[0X002]};end;end;S(Lc,j8);end;(Hy)[0X2]=e3(I8,j8,gy);sy=sy+1;Y8=0X1;Hy[Y8](Hy[Y8+0X00001]);do Yy=Y8-0X1;end;sy=sy+1;sy=sy+0X1;sy=sy+1;repeat local Iy,zy=Lc,(Hy);if not(#Iy>0)then else local kY={};for Sw,Xw in M,Iy do for iM,QM in M,Xw do if QM[1]==zy and QM[2]>=0X000 then local mF=QM[2];do if not kY[mF]then kY[mF]={zy[mF]};end;end;(QM)[1]=kY[mF];(QM)[2]=0X001;end;end;end;end;until true;return;else if Hy[rG[5]]~=Hy[rG[4]]then do sy=rG[0x0002];end;end;end;end;end;end;end;end;end;end);if not(by)then do if V(ky)=="string"then if r(ky,'a\116t\101m\112t\032\116\111 yi\101\108d ac\114o\115\115 \109etamethod\047\067%-ca\108l \098\111\117n\100a\114\121')then do return coroutine.yield();end;end;do if r(ky,'^.\045:%\100+: ')then q("L\117r\097\112\104\032\083\099r\105\112t\058"..(Qc[sy-0X1]or"\040i\110ter\110\097\108)")..': '..u(ky),0);else(q)(ky,0x0);end;end;else(q)(ky,0);end;end;else if ky then if ny==1 then return Hy[yy]();else return Hy[yy](E(Hy,yy+0X0001,Yy));end;elseif yy then do return E(Hy,yy,ny);end;end;end;end;end;else do ic=function(...)local Xp,Qp=1,{};local hp=((k and k()or _ENV));local zp=0X0;local pp={[2]=Vc,[1]=Qp};local jp,op=q3(...);jp=jp-1;local Dp=(hp==H and fc or hp);do for k4=0x0,jp do if ac>k4 then(Qp)[k4]=op[k4+0X0001];else break;end;end;end;if not nc then op=nil;elseif Ac then Qp[ac]={n=jp>=ac and jp-ac+0X1 or 0X000,E(op,ac+0X001,jp+0X01)};end;if Dp~=hp then if not(s)then _ENV=Dp;else s(ic,Dp);end;end;local kp,mp,Jp,Op=c(function()while true do local eZ=bc[Xp];local pZ=(eZ[3]);Xp=Xp+1;do if pZ<9 then if not(pZ>=0X4)then if pZ>=2 then if pZ~=0X3 then(Qp)[eZ[0x2]]=Dp[eZ[0X00006]];else Qp[eZ[2]]=Qp[eZ[0X5]]^Qp[eZ[4]];end;else if pZ==0X1 then Xp=eZ[5];else do Qp[eZ[0X2]]=o(Qp[eZ[0X5]],Qp[eZ[0X004]]);end;end;end;else if pZ<0X006 then if pZ==0X0005 then local jz=eZ[0X002];local Ez=P(function(...)(C)();for bR,yR,JR,PR,DR,wR,WR,mR,AR,SR in...do(C)(true,{bR,yR,JR,PR,DR,wR,WR,mR,AR,SR});end;end);Ez(Qp[jz],Qp[jz+1],Qp[jz+2]);do zp=jz;end;(Qp)[jz]=Ez;Xp=eZ[0x5];else(Qp)[0X2]=Dp[eZ[6]];Xp=Xp+0X1;do Xp=Xp+0X1;end;do eZ=bc[Xp];end;do Xp=Xp+0X1;end;Qp[0X0002]=Qp[2][eZ[1]];eZ=bc[Xp];Xp=Xp+0X0001;do(Qp)[2]=Qp[2][eZ[1]];end;eZ=bc[Xp];Xp=Xp+1;(Qp)[3]=Dp[eZ[0X0006]];Xp=Xp+1;Xp=Xp+1;Xp=Xp+0x1;zp=3;(Qp)[zp]=Qp[zp]();do eZ=bc[Xp];end;Xp=Xp+1;if Qp[2]==Qp[3]then else Xp=eZ[0X002];end;end;else if not(pZ>=0x007)then(Qp)[eZ[2]]={E({},1,eZ[0X5])};else if pZ==0X8 then do(Qp)[eZ[0X00002]]=Qp[eZ[5]]*Qp[eZ[4]];end;else local qt=Uc[eZ[5]];local Bt=qt[0X0005];local it=#Bt;local vt=(nil);do if it>0 then vt={};for tL=1,it do local CL=(Bt[tL]);if CL[1]==0X000 then(vt)[tL-1]={Qp,CL[0X2]};else vt[tL-1]=jc[CL[0X2]];end;end;(S)(Lc,vt);end;end;do(Qp)[eZ[0X2]]=e3(qt,vt,Dp);end;end;end;end;end;else if not(pZ<0X00E)then if not(pZ>=16)then if pZ==15 then local h1=jc[0X1];Qp[1]=h1[1][h1[0X00002]];do eZ=bc[Xp];end;do Xp=Xp+0X1;end;(Qp)[1]=Qp[0X001][eZ[0X1]];Xp=Xp+0x1;Xp=Xp+1;do eZ=bc[Xp];end;Xp=Xp+0X001;if not(not Qp[0X1])then else Xp=eZ[0x0005];end;else repeat local zH,eH=Lc,(Qp);if#zH>0X000 then local bj={};for Zp,sp in M,zH do for AK,XK in M,sp do do if not(XK[1]==eH and XK[2]>=0)then else local TH=(XK[2]);if not bj[TH]then bj[TH]={eH[TH]};end;(XK)[1]=bj[TH];XK[0X2]=1;end;end;end;end;end;until true;return;end;else if pZ<0X00011 then Dp[eZ[0X6]]=Qp[eZ[2]];else if pZ==18 then(Qp)[eZ[0X2]]=Qp[eZ[5]]%Qp[eZ[4]];else end;end;end;else do if pZ<0Xb then do if pZ==0x0A then for cc=eZ[2],eZ[0X5]do(Qp)[cc]=nil;end;else do Qp[eZ[0X2]]=eZ[0X6];end;end;end;else if pZ<0X0c then local dU=(jc[1]);(Qp)[0X1]=dU[0x00001][dU[2]];Xp=Xp+0X1;do Xp=Xp+0X1;end;eZ=bc[Xp];do Xp=Xp+0X1;end;do Qp[0X1]=Qp[0x00001][eZ[0X01]];end;do Xp=Xp+1;end;Xp=Xp+1;eZ=bc[Xp];Xp=Xp+0x0001;do(Qp)[0X1]=Qp[0X1][eZ[0X1]];end;eZ=bc[Xp];Xp=Xp+1;if not(Qp[0x0001]<=eZ[0X1])then else Xp=eZ[0X002];end;else if pZ~=13 then Qp[0]=Dp[eZ[0x06]];eZ=bc[Xp];Xp=Xp+1;do Qp[1]=Dp[eZ[6]];end;Xp=Xp+1;Xp=Xp+0X01;eZ=bc[Xp];Xp=Xp+1;do(Qp)[0X1]=Qp[1][eZ[1]];end;Xp=Xp+1;local l6=jc[0x0000];Xp=Xp+0X1;local q6=(4);Xp=Xp+0X1;Qp[2]=l6[1][l6[2]];do eZ=bc[Xp];end;Xp=Xp+0X1;Qp[2]=Qp[2][eZ[1]];do Xp=Xp+0x1;end;do Xp=Xp+1;end;eZ=bc[Xp];Xp=Xp+1;do(Qp)[2]=Qp[2][eZ[0x0001]];end;eZ=bc[Xp];Xp=Xp+1;Qp[0X003]=Dp[eZ[0X6]];Xp=Xp+0X1;Xp=Xp+0X1;do eZ=bc[Xp];end;Xp=Xp+0X1;do(Qp)[0X3]=Qp[0X3][eZ[1]];end;do eZ=bc[Xp];end;Xp=Xp+0X00001;Qp[0X4]=Dp[eZ[6]];do Xp=Xp+0x1;end;Xp=Xp+1;eZ=bc[Xp];do Xp=Xp+1;end;Qp[0x4]=Qp[0x00004][eZ[1]];Xp=Xp+0x1;do Xp=Xp+1;end;do eZ=bc[Xp];end;Xp=Xp+0X001;Qp[5]=eZ[0x6];eZ=bc[Xp];Xp=Xp+1;(Qp)[0X6]=eZ[6];do Xp=Xp+0X1;end;do(Qp)[q6]=Qp[q6](Qp[q6+1],Qp[q6+2]);end;zp=q6;Xp=Xp+0x1;Xp=Xp+0x1;do eZ=bc[Xp];end;Xp=Xp+1;(Qp)[0X4]=Qp[0X4]/eZ[1];eZ=bc[Xp];Xp=Xp+0x1;do Qp[5]=eZ[6];end;eZ=bc[Xp];Xp=Xp+0X1;Qp[6]=Dp[eZ[6]];Xp=Xp+1;do Xp=Xp+0x1;end;eZ=bc[Xp];Xp=Xp+0X1;Qp[0x00006]=Qp[0X6][eZ[1]];do Xp=Xp+1;end;Xp=Xp+1;eZ=bc[Xp];Xp=Xp+0x001;Qp[0X7]=eZ[0X6];do eZ=bc[Xp];end;Xp=Xp+1;do(Qp)[0X0008]=eZ[0X6];end;do Xp=Xp+1;end;q6=0X6;do(Qp)[q6]=Qp[q6](Qp[q6+0X0001],Qp[q6+0x2]);end;zp=q6;Xp=Xp+0X1;do Xp=Xp+1;end;eZ=bc[Xp];do Xp=Xp+0x1;end;Qp[0X6]=Qp[0X6]/eZ[0x1];Xp=Xp+0X1;do q6=0X003;end;zp=q6+0X4-1;(Qp)[q6]=Qp[q6](E(Qp,q6+0X1,zp));zp=q6;Xp=Xp+1;do Xp=Xp+0X1;end;do Xp=Xp+0X1;end;do Qp[0x2]=Qp[0X00002]+Qp[0x3];end;Xp=Xp+0X001;l6=jc[0X0];do Qp[3]=l6[0X1][l6[2]];end;eZ=bc[Xp];Xp=Xp+0X001;do Qp[3]=Qp[3][eZ[1]];end;do Xp=Xp+0X1;end;Xp=Xp+1;do eZ=bc[Xp];end;Xp=Xp+0X1;do(Qp)[0x3]=Qp[0X3][eZ[0x1]];end;do Xp=Xp+0X001;end;Xp=Xp+0X0001;Xp=Xp+0X1;q6=1;Qp[q6]=Qp[q6](Qp[q6+1],Qp[q6+2]);zp=q6;Xp=Xp+0X0001;Xp=Xp+0X001;Xp=Xp+0X00001;Qp[0X002]=true;eZ=bc[Xp];local Z6=Uc[eZ[5]];do Xp=Xp+1;end;local C6,I6=Z6[5],(nil);local o6=(#C6);do if o6>0 then I6={};do for DD=0X001,o6 do local LD=(C6[DD]);do if LD[0X001]==0 then(I6)[DD-0X1]={Qp,LD[0X02]};else I6[DD-0X001]=jc[LD[0X2]];end;end;end;end;S(Lc,I6);end;end;(Qp)[0X3]=e3(Z6,I6,Dp);Xp=Xp+0x00001;q6=0x00;zp=q6+0x4-0X0001;Qp[q6](E(Qp,q6+0X1,zp));do zp=q6-1;end;local r6=2;eZ=bc[Xp];Xp=Xp+1;(Qp)[0]=Dp[eZ[6]];Xp=Xp+1;l6=jc[0x00001];Qp[1]=l6[0X1][l6[2]];do Xp=Xp+0x1;end;Xp=Xp+0X1;Xp=Xp+0X1;do q6=0;end;(Qp[q6])(Qp[q6+1]);zp=q6-0X001;Xp=Xp+1;Xp=Xp+0X0001;eZ=bc[Xp];do Xp=Xp+1;end;Qp[0]=Dp[eZ[0X6]];Xp=Xp+1;Xp=Xp+0X1;do eZ=bc[Xp];end;Xp=Xp+1;Qp[0]=Qp[0][eZ[1]];Xp=Xp+1;Xp=Xp+1;do eZ=bc[Xp];end;Xp=Xp+1;(Qp)[0]=Qp[0X0][eZ[1]];local B6=Qp[0];Xp=Xp+0X00001;Xp=Xp+0X1;do eZ=bc[Xp];end;Xp=Xp+1;do q6=0X00;end;Qp[q6+1]=B6;do Qp[q6]=B6[eZ[0x1]];end;do eZ=bc[Xp];end;do Xp=Xp+0X0001;end;(Qp)[0x002]=eZ[0X6];Xp=Xp+1;do q6=0X000;end;Qp[q6](Qp[q6+1],Qp[q6+2]);zp=q6-1;do Xp=Xp+0x1;end;Xp=Xp+0X1;eZ=bc[Xp];Xp=Xp+1;Qp[0]=Dp[eZ[6]];Xp=Xp+0X0001;Xp=Xp+0X1;eZ=bc[Xp];Xp=Xp+0X1;(Qp)[1]=Dp[eZ[6]];do eZ=bc[Xp];end;Xp=Xp+0X1;Qp[0X002]=Dp[eZ[0X6]];eZ=bc[Xp];Xp=Xp+1;Qp[0X2]=Qp[2][eZ[0X1]];Xp=Xp+1;q6=0X0001;local x6=(0x00);if r6~=0X0 then zp=q6+r6-0x1;end;local i6,j6=nil,nil;if r6~=1 then do i6,j6=q3(Qp[q6](E(Qp,q6+1,zp)));end;else i6,j6=q3(Qp[q6]());end;if x6==1 then do zp=q6-0X1;end;else if x6==0 then i6=i6+q6-1;zp=i6;else do i6=q6+x6-0X0002;end;zp=i6+1;end;local gM=(0x0);for G4=q6,i6 do gM=gM+1;do(Qp)[G4]=j6[gM];end;end;end;Xp=Xp+1;q6=0x0;(Qp[q6])(E(Qp,q6+1,zp));zp=q6-1;do Xp=Xp+0X1;end;Xp=Xp+1;eZ=bc[Xp];do Xp=Xp+0X00001;end;Qp[0]=Dp[eZ[0X0006]];Xp=Xp+0X0001;Xp=Xp+1;Xp=Xp+0X001;zp=0;Qp[zp]();zp=zp-0x1;Xp=Xp+0X1;Qp[0]=true;do eZ=bc[Xp];end;Xp=Xp+1;(Dp)[eZ[6]]=Qp[0X0];eZ=bc[Xp];do Xp=Xp+1;end;do Qp[0]=Dp[eZ[0X6]];end;eZ=bc[Xp];Xp=Xp+1;(Qp)[0X0]=Qp[0X0][eZ[1]];do eZ=bc[Xp];end;Xp=Xp+0X01;do Qp[1]=eZ[6];end;Xp=Xp+1;do q6=0X0;end;(Qp[q6])(Qp[q6+0x0001]);zp=q6-1;eZ=bc[Xp];Xp=Xp+0X1;do(Qp)[0X0]=Dp[eZ[6]];end;eZ=bc[Xp];Xp=Xp+0X00001;do(Qp)[0]=Qp[0x0][eZ[0X1]];end;do eZ=bc[Xp];end;Xp=Xp+1;(Qp)[0]=Qp[0x000][eZ[0X001]];do Xp=Xp+1;end;Xp=Xp+1;eZ=bc[Xp];Xp=Xp+0X1;do if Qp[0X000]<eZ[0X01]then Xp=eZ[0X2];end;end;else(Qp)[eZ[2]]=eZ[6];end;end;end;end;end;end;end;end;end);if not(kp)then if V(mp)=="\115\116\114ing"then if not(r(mp,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(r(mp,"^.-:%d+: "))then q(mp,0);else q("L\117\114aph S\099r\105\112t:"..(Qc[Xp-0x0001]or"(i\110ter\110\097l\041")..": "..u(mp),0);end;else q(mp,0);end;else do if mp then if Op==0X1 then return Qp[Jp]();else return Qp[Jp](E(Qp,Jp+1,zp));end;elseif Jp then do return E(Qp,Jp,Op);end;end;end;end;end;end;end;end;else if Sc>=0X5 then if Sc~=0X006 then ic=function(...)local wm,Sm=1,{};local gm=({[2]=Vc,[1]=Sm});local Vm=(k and k()or _ENV);local Um=((Vm==H and fc or Vm));local cm,lm=q3(...);local Im=(0x0);cm=cm-1;for Bx=0,cm do if ac>Bx then(Sm)[Bx]=lm[Bx+1];else break;end;end;if not nc then lm=nil;elseif Ac then do Sm[ac]={n=cm>=ac and cm-ac+1 or 0X0,E(lm,ac+1,cm+1)};end;end;if Um==Vm then else do if not(s)then _ENV=Um;else(s)(ic,Um);end;end;end;local Am,Ym,Fm,rm=c(function()while true do local Rl=bc[wm];local dl=(Rl[3]);wm=wm+0X1;if dl>=0xF then if not(dl<22)then do if dl>=26 then if not(dl>=28)then if dl~=0X1B then Sm[1]={};Rl=bc[wm];wm=wm+0X1;Sm[2]=Um[Rl[6]];do wm=wm+1;end;wm=wm+0X0001;Rl=bc[wm];wm=wm+0X00001;do if not Sm[0X02]then do wm=Rl[0X00005];end;end;end;else Sm[0X8]=Sm[0X002][Sm[0x7]];local JK=(0X9);do Rl=bc[wm];end;do wm=wm+1;end;local ZK=Sm[0X008];(Sm)[JK+0x001]=ZK;Sm[JK]=ZK[Rl[0X0001]];Rl=bc[wm];do wm=wm+1;end;Sm[11]=Rl[6];do wm=wm+1;end;do JK=9;end;(Sm)[JK]=Sm[JK](Sm[JK+1],Sm[JK+0X2]);Im=JK;do wm=wm+0X01;end;do wm=wm+1;end;do Rl=bc[wm];end;do wm=wm+1;end;if not(not Sm[0X9])then else wm=Rl[5];end;end;else do if dl~=0X0001d then(Sm[Rl[0x2]])[Sm[Rl[5]]]=Sm[Rl[0X4]];else repeat local Lm,xm=Lc,Sm;if not(#Lm>0X0)then else local zj={};for bs,Vs in M,Lm do do for Sp,Qp in M,Vs do do if not(Qp[1]==xm and Qp[0X2]>=0x0000)then else local fd=Qp[2];if not zj[fd]then do(zj)[fd]={xm[fd]};end;end;Qp[1]=zj[fd];Qp[2]=0X1;end;end;end;end;end;end;until true;local Fw=Rl[2];return false,Fw,Fw;end;end;end;else if dl>=0X18 then do if dl==0X19 then for MX=Rl[0X2],Rl[5]do Sm[MX]=nil;end;else Sm[0X8]=Sm[0X3][Sm[7]];Rl=bc[wm];wm=wm+1;(Sm)[9]=Um[Rl[6]];wm=wm+0X01;wm=wm+0X1;Rl=bc[wm];do wm=wm+0X1;end;(Sm)[9]=Sm[0x00009][Rl[1]];do Rl=bc[wm];end;wm=wm+0X0001;if Sm[8]==Sm[9]then wm=Rl[0X2];end;end;end;else if dl~=0X0017 then do(Sm)[4]=Rl[6];end;do wm=wm+1;end;do Sm[5]=#Sm[0x0003];end;local ia=(4);Rl=bc[wm];wm=wm+1;Sm[0X6]=Rl[6];Rl=bc[wm];do wm=wm+1;end;local ja,ka=Sm[ia+1],Sm[ia+0X00002];local Aa=(Sm[ia]);(Sm)[ia]=P(function()for s_=Aa,ja,ka do C(true,s_);end;end);wm=Rl[5];else do Sm[Rl[0X2]]=Um[Rl[0X0006]];end;end;end;end;end;else do if dl<0X12 then if dl>=16 then if dl==17 then local jn=(Rl[2]);local nn,Bn=Sm[jn]();if nn then wm=Rl[5];(Sm)[jn+3]=Bn;end;else end;else Sm[11]=Um[Rl[0x06]];do wm=wm+1;end;wm=wm+1;do Rl=bc[wm];end;local Jt=(0XB);wm=wm+0X01;Sm[0XC]=Sm[9][Rl[0X1]];wm=wm+0X1;do wm=wm+1;end;Rl=bc[wm];do wm=wm+1;end;do Sm[12]=Sm[12][Rl[1]];end;wm=wm+1;(Sm)[Jt]=Sm[Jt](Sm[Jt+1]);do Im=Jt;end;do Rl=bc[wm];end;do wm=wm+1;end;do(Sm)[0XC]=Sm[0]+Rl[0X1];end;do Rl=bc[wm];end;wm=wm+1;if not(Sm[11]<Sm[12])then wm=Rl[0x2];end;end;else if dl<20 then if dl==0X00013 then(Sm)[Rl[0X2]]={E({},0X1,Rl[5])};else(Sm)[Rl[2]]=Sm[Rl[0X5]]<Sm[Rl[0X4]];end;else do if dl~=21 then Sm[2]=Um[Rl[6]];wm=wm+0x1;do wm=wm+0X1;end;Rl=bc[wm];wm=wm+1;(Sm)[0x2]=Sm[2][Rl[0X0001]];wm=wm+1;local cl=0X02;wm=wm+1;Rl=bc[wm];do wm=wm+1;end;local Al,fl=Sm[2],(0X4);(Sm)[cl+1]=Al;(Sm)[cl]=Al[Rl[0x01]];wm=wm+1;cl=0x002;Sm[cl]=Sm[cl](Sm[cl+0X00001]);Im=cl;wm=wm+1;wm=wm+1;Rl=bc[wm];wm=wm+1;(Sm)[3]=Um[Rl[6]];Rl=bc[wm];wm=wm+1;(Sm)[3]=Sm[0X3][Rl[0X1]];wm=wm+1;do wm=wm+0x1;end;Rl=bc[wm];wm=wm+0x0001;cl=3;Al=Sm[0x3];(Sm)[cl+0X1]=Al;(Sm)[cl]=Al[Rl[1]];do wm=wm+1;end;cl=0x3;Sm[cl]=Sm[cl](Sm[cl+1]);Im=cl;wm=wm+1;do wm=wm+0X001;end;Rl=bc[wm];do wm=wm+0X1;end;(Sm)[4]=Rl[6];do wm=wm+1;end;Sm[5]=#Sm[0x2];Rl=bc[wm];wm=wm+0X0001;Sm[0x06]=Rl[0X6];Rl=bc[wm];wm=wm+1;do cl=Sm[fl];end;local Ol=Sm[fl+1];local Wl=(Sm[fl+2]);Sm[fl]=P(function()do for Or=cl,Ol,Wl do(C)(true,Or);end;end;end);wm=Rl[0x00005];else local yS=(Uc[Rl[5]]);local LS,fS=yS[5],(nil);local iS=#LS;if not(iS>0)then else fS={};for E7=0x00001,iS do local h7=LS[E7];if h7[0X001]==0x0 then(fS)[E7-1]={Sm,h7[0X2]};else(fS)[E7-0X1]=jc[h7[2]];end;end;S(Lc,fS);end;(Sm)[Rl[2]]=e3(yS,fS,Um);end;end;end;end;end;end;else do if not(dl<0X7)then do if not(dl<0x0b)then do if not(dl>=13)then if dl~=12 then(Sm)[Rl[0x2]]=-Sm[Rl[0X5]];else Sm[0X00a]=Sm[9][Rl[0X1]];wm=wm+0x1;wm=wm+0x1;Rl=bc[wm];wm=wm+0X1;do if not(not(Rl[0x00006]<Sm[10]))then else wm=Rl[2];end;end;end;else if dl==14 then local P8,J8=9,Sm[8];(Sm)[P8+0x01]=J8;Sm[P8]=J8[Rl[1]];do Rl=bc[wm];end;wm=wm+0X1;Sm[0X00b]=Rl[6];wm=wm+0X1;do P8=9;end;do(Sm)[P8]=Sm[P8](Sm[P8+1],Sm[P8+0X02]);end;do Im=P8;end;Rl=bc[wm];do wm=wm+1;end;if not(not Sm[0X9])then else wm=Rl[0x05];end;else if not(Rl[6]<Sm[Rl[4]])then wm=Rl[0X002];end;end;end;end;else if dl>=9 then if dl==10 then repeat local iy,Ky=Lc,(Sm);if not(#iy>0)then else local xX=({});for Wb,Bb in M,iy do do for bl,Ml in M,Bb do if not(Ml[1]==Ky and Ml[2]>=0)then else local nw=(Ml[2]);do if not(not xX[nw])then else xX[nw]={Ky[nw]};end;end;Ml[0X1]=xX[nw];(Ml)[0X0002]=0X0001;end;end;end;end;end;until true;return;else do(Sm)[Rl[0X2]]=w(Sm[Rl[5]],Sm[Rl[0x4]]);end;end;else do if dl==0x8 then Sm[11]=Um[Rl[6]];Rl=bc[wm];wm=wm+0X00001;do(Sm)[12]=Sm[9][Rl[0x1]];end;wm=wm+0X1;wm=wm+1;do Rl=bc[wm];end;wm=wm+1;local iI=0Xb;do(Sm)[0xC]=Sm[12][Rl[1]];end;wm=wm+1;(Sm)[iI]=Sm[iI](Sm[iI+0X1]);Im=iI;Rl=bc[wm];wm=wm+1;do(Sm)[12]=Sm[0]+Rl[0X1];end;Rl=bc[wm];wm=wm+1;do if not(not(Sm[0XB]<Sm[12]))then else wm=Rl[2];end;end;else do(Sm)[Rl[2]]=Rl[0x00006];end;end;end;end;end;end;else if dl>=0X00003 then if dl<0X00005 then if dl~=4 then(Sm)[Rl[2]]=v(Sm[Rl[0x5]],Sm[Rl[4]]);else(Sm)[10]=Um[Rl[0X6]];wm=wm+0X01;wm=wm+1;do Rl=bc[wm];end;do wm=wm+0X1;end;do Sm[0xa]=Sm[0X0a][Rl[0X01]];end;wm=wm+1;(Sm)[11]=Sm[1];Rl=bc[wm];wm=wm+1;Sm[12]=Sm[9][Rl[1]];do wm=wm+0x1;end;wm=wm+0x00001;wm=wm+0X1;local ZQ=(10);(Sm[ZQ])(Sm[ZQ+0x1],Sm[ZQ+2]);Im=ZQ-0X0001;wm=wm+0x1;wm=wm+1;Rl=bc[wm];wm=wm+1;wm=Rl[0X5];end;else if dl==6 then(Sm)[Rl[2]]=Sm[Rl[0x5]][Rl[0X0001]];else if not(not Sm[Rl[0X02]])then else wm=Rl[5];end;end;end;else if dl<0x01 then do Sm[Rl[2]]=Sm[Rl[5]];end;else if dl~=0X2 then wm=Rl[0X005];else(Sm)[10]=Um[Rl[6]];Rl=bc[wm];do wm=wm+0X1;end;(Sm)[0X000a]=Sm[10][Rl[1]];wm=wm+1;wm=wm+0X1;do wm=wm+1;end;do Sm[11]=Sm[1];end;do Rl=bc[wm];end;do wm=wm+1;end;Sm[0xC]=Sm[0X0009][Rl[0X1]];wm=wm+1;local QX=(0Xa);Sm[QX](Sm[QX+0X1],Sm[QX+2]);Im=QX-0X1;wm=wm+0x01;do wm=wm+1;end;end;end;end;end;end;end;end;end);if Am then if Ym then if rm==0X1 then return Sm[Fm]();else return Sm[Fm](E(Sm,Fm+1,Im));end;elseif Fm then return E(Sm,Fm,rm);end;else if V(Ym)=="s\116\114i\110g"then if not(r(Ym,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(Ym,"\094\046\045\058\037d\043:\032"))then q(Ym,0);else(q)("Lu\114\097\112\104\032Sc\114i\112t\058"..(Qc[wm-1]or"\040\105n\116\101\114n\097\108)")..'\058 '..u(Ym),0);end;else q(Ym,0X0);end;end;end;else ic=function(...)local HC={};local OC=(0x1);local sC=((k and k()or _ENV));local dC={[1]=HC,[2]=Vc};local VC,XC=q3(...);local rC=((sC==H and fc or sC));VC=VC-1;for oS=0,VC do if not(ac>oS)then break;else(HC)[oS]=XC[oS+0X1];end;end;local EC=0;if not nc then XC=nil;elseif not(Ac)then else HC[ac]={n=VC>=ac and VC-ac+0x1 or 0X0,E(XC,ac+1,VC+1)};end;if rC~=sC then do if s then(s)(ic,rC);else _ENV=rC;end;end;end;local iC,gC,FC,NC=c(function()while true do local ea=bc[OC];local ca=ea[0X0003];OC=OC+0x0001;if ca>=0X0007 then if ca>=0X000b then do if not(ca<13)then if ca==0xE then(HC)[ea[2]]={E({},1,ea[5])};else if not(not(HC[ea[5]]<=HC[ea[4]]))then else OC=ea[0X2];end;end;else do if ca~=0Xc then do HC[ea[2]]=T(HC[ea[0X05]],HC[ea[4]]);end;else OC=ea[5];end;end;end;end;else if ca<9 then do if ca==8 then local Kk=(nil);local Hk=(Uc[ea[5]]);local ck=(Hk[0X5]);local Yk=(#ck);do if Yk>0x00 then Kk={};for Dt=1,Yk do local pt=(ck[Dt]);if pt[1]~=0 then(Kk)[Dt-1]=jc[pt[0X00002]];else(Kk)[Dt-0x1]={HC,pt[0x00002]};end;end;S(Lc,Kk);end;end;do(HC)[ea[0X2]]=e3(Hk,Kk,rC);end;else(HC)[ea[2]]=ea[0X006];end;end;else if ca~=10 then(HC)[ea[2]]=rC[ea[6]];else local WU=(ea[5]);local CU=HC[WU];do for i_=WU+1,ea[0X4]do CU=CU..HC[i_];end;end;HC[ea[2]]=CU;end;end;end;else if ca<0X3 then do if not(ca<0X00001)then if ca==0x2 then local Aw=(ea[0X5]);local Qw=ea[2];EC=Qw+Aw-1;repeat local Rb,Qb=Lc,HC;if not(#Rb>0X00000)then else local ry=({});for cJ,DJ in M,Rb do do for Es,ys in M,DJ do do if not(ys[0X0001]==Qb and ys[2]>=0X0)then else local Sg=ys[2];do if not(not ry[Sg])then else(ry)[Sg]={Qb[Sg]};end;end;ys[0X1]=ry[Sg];(ys)[0X00002]=1;end;end;end;end;end;end;until true;do return true,Qw,Aw;end;else do(HC)[ea[0X2]]=HC[ea[5]]*HC[ea[4]];end;end;else local tv=ea[2];local Yv=(P(function(...)(C)();for fR,vR,CR,IR,gR,lR,TR,tR,WR,nR in...do C(true,{fR,vR,CR,IR,gR,lR,TR,tR,WR,nR});end;end));Yv(HC[tv],HC[tv+1],HC[tv+2]);EC=tv;HC[tv]=Yv;do OC=ea[5];end;end;end;else do if not(ca<5)then if ca==6 then local Op=HC[ea[5]]/HC[ea[4]];HC[ea[0x2]]=Op-Op%0X00001;else HC[0]=rC[ea[0X00006]];OC=OC+0X1;EC=0;(HC)[EC]=HC[EC]();ea=bc[OC];do OC=OC+0X1;end;rC[ea[0x6]]=HC[0];OC=OC+1;repeat local Ld,ad=Lc,(HC);if not(#Ld>0x0)then else local cC={};for xX,QX in M,Ld do for GF,nF in M,QX do if nF[1]==ad and nF[2]>=0 then local Qw=nF[2];if not(not cC[Qw])then else(cC)[Qw]={ad[Qw]};end;nF[0X01]=cC[Qw];(nF)[2]=0X1;end;end;end;end;until true;return;end;else do if ca==0x0004 then else HC[ea[2]]=HC[ea[5]]<=HC[ea[4]];end;end;end;end;end;end;end;end);if not(iC)then if V(gC)=="string"then do if not(r(gC,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(r(gC,"^.-:%d+: "))then q(gC,0X0);else q("Luraph Script:"..(Qc[OC-0X1]or'(i\110\116\101rn\097\108)')..": "..u(gC),0);end;else q(gC,0X00000);end;else if gC then if NC~=1 then do return HC[FC](E(HC,FC+0X1,EC));end;else return HC[FC]();end;elseif not(FC)then else return E(HC,FC,NC);end;end;end;end;else if Sc~=4 then ic=function(...)local bK,xK=1,({});local kK=(0X0);local CK={[1]=xK,[2]=Vc};local vK=((k and k()or _ENV));local oK,dK=q3(...);do oK=oK-1;end;for pk=0,oK do if not(ac>pk)then break;else do(xK)[pk]=dK[pk+1];end;end;end;local VK=(vK==H and fc or vK);if not nc then do dK=nil;end;elseif not(Ac)then else(xK)[ac]={n=oK>=ac and oK-ac+1 or 0x0,E(dK,ac+0x01,oK+0X00001)};end;if VK~=vK then if s then s(ic,VK);else _ENV=VK;end;end;local GK,sK,OK,fK=c(function()while true do local cX=bc[bK];local PX=cX[3];bK=bK+1;if PX<11 then if not(PX>=5)then if not(PX>=2)then if PX~=0X1 then bK=cX[0X05];else(xK)[0X00]=VK[cX[0X06]];bK=bK+1;kK=0X000;xK[kK]=xK[kK]();bK=bK+0X1;bK=bK+0x00001;do cX=bc[bK];end;do bK=bK+0X01;end;if xK[0x0000]<cX[1]then bK=cX[0X2];end;end;else if PX<3 then repeat local Hf,df=Lc,xK;if#Hf>0 then local px=({});for An,cn in M,Hf do do for QS,rS in M,cn do if not(rS[1]==df and rS[0X2]>=0X00000)then else local Du=rS[0x002];if not px[Du]then px[Du]={df[Du]};end;(rS)[1]=px[Du];(rS)[0x02]=1;end;end;end;end;end;until true;return;else if PX~=0X4 then else local kY=cX[0X2];local TY,QY=xK[kY]();if not(TY)then else for mF=1,cX[4]do(xK)[kY+mF]=QY[mF];end;bK=cX[0X0005];end;end;end;end;else if not(PX>=0x008)then if PX<0x00006 then repeat local tS,WS,wS=Lc,xK,cX[2];do if#tS>0X00000 then local b8={};for TL,HL in M,tS do for qe,Me in M,HL do do if Me[0X0001]==WS and Me[2]>=wS then local oc=(Me[0X002]);if not(not b8[oc])then else b8[oc]={WS[oc]};end;Me[0X1]=b8[oc];do(Me)[2]=1;end;end;end;end;end;end;end;until true;else if PX==0X7 then(xK)[cX[2]]=cX[0X006];else xK[cX[0X0002]][xK[cX[5]]]=xK[cX[0X4]];end;end;else do if not(PX<9)then do if PX==10 then if xK[cX[2]]then bK=cX[5];end;else(xK)[0]=VK[cX[0X6]];do cX=bc[bK];end;bK=bK+1;(xK)[0X0]=xK[0X0][cX[0X1]];cX=bc[bK];bK=bK+1;if not(not xK[0])then else bK=cX[0x5];end;end;end;else(CK)[cX[5]]=xK[cX[0x0002]];end;end;end;end;else do if PX>=17 then if not(PX<0x000014)then if not(PX>=21)then do(xK)[1]=VK[cX[0X06]];end;do bK=bK+1;end;do bK=bK+1;end;cX=bc[bK];bK=bK+1;if not(not xK[0X00001])then else bK=cX[5];end;else if PX~=22 then local Jf=nil;local pf=(Uc[cX[5]]);local qf=(pf[5]);local Nf=(#qf);if not(Nf>0x0)then else do Jf={};end;for Xy=0X1,Nf do local sy=(qf[Xy]);do if sy[1]~=0X0000 then do(Jf)[Xy-1]=jc[sy[0x0002]];end;else do Jf[Xy-1]={xK,sy[2]};end;end;end;end;S(Lc,Jf);end;do xK[cX[2]]=e3(pf,Jf,VK);end;else local tc=0;local xc=(jc[0X0]);(xK)[0x0]=xc[1][xc[0X2]];cX=bc[bK];bK=bK+1;local vc=(xK[0X0]);xK[tc+0X1]=vc;xK[tc]=vc[cX[1]];bK=bK+0X01;tc=0;do(xK)[tc]=xK[tc](xK[tc+0x1]);end;do kK=tc;end;do cX=bc[bK];end;bK=bK+0X01;if not xK[0x0]then bK=cX[5];end;end;end;else do if not(PX>=18)then(xK)[cX[2]]={E({},0X1,cX[0X5])};else do if PX~=0X013 then if not xK[cX[2]]then bK=cX[5];end;else do xK[0X0]=VK[cX[0x006]];end;cX=bc[bK];local Qb=(Uc[cX[5]]);local tb=0;local ab=(Qb[5]);bK=bK+1;local fb,sb=nil,#ab;do if not(sb>0)then else fb={};do for bz=1,sb do local pz=ab[bz];if pz[1]==0 then fb[bz-0X1]={xK,pz[0X2]};else fb[bz-1]=jc[pz[2]];end;end;end;(S)(Lc,fb);end;end;(xK)[1]=e3(Qb,fb,VK);bK=bK+1;xK[tb](xK[tb+0x001]);kK=tb-0X1;cX=bc[bK];bK=bK+0x0001;xK[0]=VK[cX[6]];do bK=bK+1;end;bK=bK+0X1;cX=bc[bK];do bK=bK+0X0001;end;xK[0X00001]=cX[0x6];bK=bK+0X1;tb=0;(xK)[tb]=xK[tb](xK[tb+0x1]);kK=tb;cX=bc[bK];bK=bK+0X1;if not xK[0X0]then bK=cX[0x005];end;end;end;end;end;end;else if PX>=14 then do if PX<15 then xK[0]=VK[cX[6]];bK=bK+0X1;bK=bK+1;bK=bK+0X00001;do kK=0X00000;end;xK[kK]=xK[kK]();do bK=bK+0X1;end;bK=bK+1;cX=bc[bK];bK=bK+1;if xK[0]then do bK=cX[5];end;end;else do if PX==0x10 then xK[0]=VK[cX[6]];cX=bc[bK];bK=bK+1;local Q7=(0);do(xK)[0]=xK[0x0][cX[0X0001]];end;bK=bK+0X1;bK=bK+0X1;do cX=bc[bK];end;bK=bK+0X1;(xK)[0x1]=cX[6];bK=bK+0X0001;(xK)[Q7]=xK[Q7](xK[Q7+0X1]);do kK=Q7;end;bK=bK+0X1;do bK=bK+1;end;cX=bc[bK];bK=bK+0X01;if not(not xK[0])then else bK=cX[0X5];end;else(xK)[0]=VK[cX[6]];do bK=bK+1;end;do bK=bK+1;end;cX=bc[bK];do bK=bK+0x1;end;xK[1]=cX[0X00006];local Pf=(0);bK=bK+0X1;xK[Pf]=xK[Pf](xK[Pf+1]);do kK=Pf;end;bK=bK+0X1;bK=bK+0X1;cX=bc[bK];bK=bK+0X1;if not(not xK[0])then else bK=cX[5];end;end;end;end;end;else do if not(PX>=0X00c)then for O9=cX[2],cX[5]do(xK)[O9]=nil;end;else do if PX==13 then(xK)[cX[0X02]]=VK[cX[0X6]];else(xK)[0]=VK[cX[6]];bK=bK+0X1;do bK=bK+1;end;cX=bc[bK];do bK=bK+0X1;end;(xK)[0]=xK[0][cX[1]];bK=bK+1;bK=bK+1;cX=bc[bK];bK=bK+0X1;if not xK[0]then bK=cX[0X05];end;end;end;end;end;end;end;end;end;end;end);if not(GK)then if V(sK)~="string"then q(sK,0x00);else do if r(sK,"at\116em\112\116\032\116o\032\121i\101l\100 \097\099r\111\115s \109et\097\109\101t\104\111d\047C%-ca\108\108 \098\111\117\110d\097ry")then return coroutine.yield();end;end;if not(r(sK,'\094\046\045\058\037d\043\058 '))then q(sK,0X0000);else(q)('L\117ra\112h\032S\099ript\058'..(Qc[bK-1]or"(internal)")..": "..u(sK),0x0);end;end;else if sK then if fK==0X00001 then return xK[OK]();else return xK[OK](E(xK,OK+0x1,kK));end;elseif not(OK)then else return E(xK,OK,fK);end;end;end;else ic=function(...)local Mb,bb={},0X0;local jb=1;local Pb=(k and k()or _ENV);local cb,Eb=q3(...);local ab=({[1]=Mb,[2]=Vc});cb=cb-1;for Ik=0X0,cb do do if not(ac>Ik)then break;else(Mb)[Ik]=Eb[Ik+1];end;end;end;local Tb=((Pb==H and fc or Pb));if not nc then Eb=nil;elseif Ac then do Mb[ac]={n=cb>=ac and cb-ac+0X001 or 0X0,E(Eb,ac+0x1,cb+1)};end;end;do if Tb~=Pb then if s then s(ic,Tb);else _ENV=Tb;end;end;end;while true do local Oc=bc[jb];local kc=(Oc[0X3]);do jb=jb+1;end;return(function(k,G,...)return CurrentAllMob;end)(Mb,jc,...);end;end;end;end;end;else if not(Sc>=11)then do if Sc<9 then if Sc==8 then do ic=function(...)local o0,Q0=1,{};local p0=((k and k()or _ENV));local k0,e0=q3(...);local y0,M0=(p0==H and fc or p0),(0X0000);local r0={[2]=Vc,[1]=Q0};k0=k0-0X1;for o6=0,k0 do if not(ac>o6)then break;else do Q0[o6]=e0[o6+1];end;end;end;do if not nc then e0=nil;elseif not(Ac)then else(Q0)[ac]={n=k0>=ac and k0-ac+0x01 or 0X0,E(e0,ac+1,k0+0X0001)};end;end;if y0==p0 then else if not(s)then _ENV=y0;else s(ic,y0);end;end;local F0,s0,u0,R0=c(function()while true do local bJ=(bc[o0]);local tJ=bJ[3];o0=o0+0x1;if tJ>=7 then do if not(tJ>=0Xa)then if tJ<0x08 then do o0=bJ[5];end;else if tJ~=9 then(Q0)[bJ[2]]={E({},1,bJ[5])};else end;end;else if tJ<0xc then if tJ==11 then Q0[bJ[0X00002]]=Q0[bJ[0X00005]]+Q0[bJ[4]];else(Q0)[bJ[0x2]]=Q0[bJ[5]]^Q0[bJ[0X4]];end;else if tJ~=13 then local fH=(Uc[bJ[5]]);local MH=(fH[0X5]);local PH=(#MH);local EH=(nil);do if PH>0X0 then EH={};do for Uz=1,PH do local tz=MH[Uz];do if tz[1]~=0 then(EH)[Uz-1]=jc[tz[0X2]];else do(EH)[Uz-1]={Q0,tz[0x00002]};end;end;end;end;end;S(Lc,EH);end;end;Q0[bJ[2]]=e3(fH,EH,y0);else if not Q0[bJ[2]]then o0=bJ[5];end;end;end;end;end;else if tJ<3 then do if not(tJ<1)then if tJ~=0x2 then(Q0)[0X00]=y0[bJ[6]];bJ=bc[o0];o0=o0+1;(Q0)[0X001]=y0[bJ[0X6]];o0=o0+1;o0=o0+1;bJ=bc[o0];do o0=o0+1;end;Q0[2]=bJ[6];o0=o0+0X1;local XO=(1);(Q0)[0x00003]=true;do o0=o0+1;end;(Q0)[XO]=Q0[XO](Q0[XO+1],Q0[XO+2]);do M0=XO;end;do bJ=bc[o0];end;do o0=o0+0X1;end;do(Q0)[1]=Q0[1][bJ[0x0001]];end;o0=o0+0X1;o0=o0+1;do bJ=bc[o0];end;o0=o0+1;(Q0)[0x1]=Q0[0X1][bJ[0x1]];do o0=o0+0X1;end;o0=o0+1;do bJ=bc[o0];end;o0=o0+0X00001;do(Q0[0X0])[bJ[0X6]]=Q0[0X1];end;o0=o0+1;repeat local uV,fV=Lc,Q0;if not(#uV>0)then else local Gv={};for Ph,Oh in M,uV do for zD,UD in M,Oh do if UD[1]==fV and UD[0X2]>=0X000 then local be=(UD[0X02]);do if not(not Gv[be])then else do(Gv)[be]={fV[be]};end;end;end;UD[1]=Gv[be];(UD)[2]=1;end;end;end;end;until true;return;else Q0[bJ[2]]=true;end;else Q0[bJ[2]]=J(Q0[bJ[5]],Q0[bJ[4]]);end;end;else if tJ>=5 then do if tJ==6 then(Q0)[bJ[2]]=bJ[0X6];else(Q0)[bJ[2]]=w(Q0[bJ[5]],Q0[bJ[4]]);end;end;else if tJ==4 then local Wq,Xq=bJ[2],bJ[5];M0=Wq+Xq-1;repeat local ln,Xn=Lc,Q0;if#ln>0X0 then local hb=({});for o5,i5 in M,ln do for iS,PS in M,i5 do if PS[0X1]==Xn and PS[2]>=0X0 then local gz=(PS[0X2]);if not(not hb[gz])then else hb[gz]={Xn[gz]};end;PS[0x1]=hb[gz];do(PS)[2]=0X00001;end;end;end;end;end;until true;return true,Wq,Xq;else Q0[bJ[2]]=y0[bJ[6]];end;end;end;end;end;end);do if not(F0)then if V(s0)~="\115tr\105ng"then q(s0,0);else do if not(r(s0,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(r(s0,"^.-:%d+: "))then(q)(s0,0);else(q)("Luraph Script:"..(Qc[o0-0x0001]or'\040i\110te\114\110a\108)')..": "..u(s0),0);end;end;else if s0 then if R0~=0X1 then do return Q0[u0](E(Q0,u0+0X1,M0));end;else return Q0[u0]();end;elseif not(u0)then else return E(Q0,u0,R0);end;end;end;end;end;else ic=function(...)local sw=1;local Bw=0;local Sw={};local uw={[2]=Vc,[1]=Sw};local vw=((k and k()or _ENV));local dw,Qw=q3(...);dw=dw-1;for NZ=0,dw do if not(ac>NZ)then do break;end;else do(Sw)[NZ]=Qw[NZ+0X1];end;end;end;local Jw=((vw==H and fc or vw));if not nc then Qw=nil;elseif not(Ac)then else(Sw)[ac]={n=dw>=ac and dw-ac+0X001 or 0,E(Qw,ac+0X01,dw+1)};end;if Jw~=vw then do if s then s(ic,Jw);else _ENV=Jw;end;end;end;local ww,nw,Yw,cw=c(function()do while true do local vW=(bc[sw]);local zW=vW[3];sw=sw+0X01;if zW<8 then if zW>=0x4 then if zW<0X6 then if zW==5 then sw=vW[5];else local uk=Uc[vW[5]];local gk=uk[0X5];local Ok=nil;local Gk=(#gk);if Gk>0x00000 then do Ok={};end;for m8=0X1,Gk do local A8=(gk[m8]);if A8[0X001]~=0X0 then(Ok)[m8-0X00001]=jc[A8[0X2]];else Ok[m8-1]={Sw,A8[2]};end;end;S(Lc,Ok);end;Sw[vW[0x0002]]=e3(uk,Ok,Jw);end;else if zW~=7 then do repeat local l7,K7=Lc,(Sw);do if not(#l7>0x00)then else local z5=({});for lW,VW in M,l7 do do for wJ,LJ in M,VW do do if LJ[0X1]==K7 and LJ[0x2]>=0X000 then local VS=LJ[2];do if not z5[VS]then z5[VS]={K7[VS]};end;end;LJ[1]=z5[VS];(LJ)[0X2]=0X1;end;end;end;end;end;end;end;until true;end;local FB=vW[2];return false,FB,FB;else do Sw[vW[0X002]]=vW[0X0006];end;end;end;else if not(zW>=2)then if zW~=1 then Sw[0x0000]=Jw[vW[0X6]];sw=sw+0X1;sw=sw+1;do vW=bc[sw];end;do sw=sw+0X00001;end;(Sw)[0]=Sw[0X0][vW[0X1]];sw=sw+0X00001;(Sw)[0X0]=not Sw[0X0];do vW=bc[sw];end;sw=sw+0x1;if not(not Sw[0x0])then else sw=vW[5];end;else Sw[vW[0X2]]={E({},1,vW[5])};end;else do if zW==0X3 then if Sw[vW[0X0005]]==Sw[vW[4]]then sw=vW[2];end;else Sw[0]=Jw[vW[6]];sw=sw+1;Bw=0;do(Sw)[Bw]=Sw[Bw]();end;sw=sw+1;do(Sw)[0X0000]=not Sw[0X0];end;end;end;end;end;else if not(zW<0XC)then if zW<0X00E then if zW~=13 then Sw[vW[2]]=Jw[vW[0X6]];else(Sw)[vW[0x2]]=Sw[vW[0X5]]*Sw[vW[0X004]];end;else if not(zW<0XF)then if zW==16 then else if not(not Sw[vW[2]])then else sw=vW[0x5];end;end;else local p9=vW[0X002];local j9=(vW[4]-0X00001)*50;local a9=Sw[p9];do for le=1,vW[5]do a9[j9+le]=Sw[p9+le];end;end;end;end;else if not(zW>=0x000a)then do if zW==0x00009 then Sw[0]=Jw[vW[6]];vW=bc[sw];do sw=sw+0X01;end;Sw[0]=Sw[0][vW[0X1]];sw=sw+1;sw=sw+1;vW=bc[sw];do sw=sw+0x0001;end;do sw=vW[5];end;else do(uw)[vW[0X0005]]=Sw[vW[0X2]];end;end;end;else if zW==11 then do repeat local Tw,hw=Lc,Sw;if not(#Tw>0)then else local z4={};for GX,OX in M,Tw do do for gp,yp in M,OX do if yp[0X0001]==hw and yp[0X2]>=0X0000 then local F6=yp[0X2];if not z4[F6]then z4[F6]={hw[F6]};end;yp[0X1]=z4[F6];yp[0X02]=1;end;end;end;end;end;until true;end;return;else do Sw[vW[2]]=Sw[vW[0X5]]==Sw[vW[4]];end;end;end;end;end;end;end;end);if ww then if nw then if cw~=0X01 then do return Sw[Yw](E(Sw,Yw+0x01,Bw));end;else return Sw[Yw]();end;elseif Yw then do return E(Sw,Yw,cw);end;end;else if V(nw)~='s\116\114ing'then q(nw,0X00000);else if not(r(nw,"\097\116t\101m\112t\032t\111 \121ie\108\100\032\097c\114\111ss met\097\109\101th\111d\047C\037-\099al\108 b\111und\097r\121"))then else return coroutine.yield();end;if not(r(nw,'\094.-\058%\100\043:\032'))then q(nw,0X0);else q("Lu\114a\112\104\032S\099r\105p\116\058"..(Qc[sw-0x01]or"(internal)")..'\058\032'..u(nw),0);end;end;end;end;end;else do if Sc~=10 then do ic=function(...)local hZ,cZ=0X1,(0);local TZ={};local mZ=((k and k()or _ENV));local oZ,uZ=q3(...);local iZ={[2]=Vc,[1]=TZ};oZ=oZ-1;local qZ=(mZ==H and fc or mZ);for XQ=0X000,oZ do if ac>XQ then TZ[XQ]=uZ[XQ+1];else break;end;end;if not nc then uZ=nil;elseif Ac then TZ[ac]={n=oZ>=ac and oZ-ac+1 or 0x00000,E(uZ,ac+1,oZ+1)};end;do if qZ==mZ then else if not(s)then _ENV=qZ;else s(ic,qZ);end;end;end;local MZ,XZ,IZ,DZ=c(function()while true do local W0=bc[hZ];local a0=(W0[3]);hZ=hZ+1;if not(a0<15)then if a0<23 then if not(a0<0X13)then if a0<21 then do if a0==20 then if TZ[W0[5]]==TZ[W0[4]]then else hZ=W0[0X00002];end;else(TZ)[0]=qZ[W0[6]];local hG=0X1;hZ=hZ+1;do hZ=hZ+0X1;end;do W0=bc[hZ];end;local OG=2;hZ=hZ+1;TZ[1]=qZ[W0[0x6]];hZ=hZ+1;hZ=hZ+0X1;W0=bc[hZ];hZ=hZ+1;local aG=TZ[1];TZ[hG+1]=aG;(TZ)[hG]=aG[W0[0X1]];hZ=hZ+1;hG=0X1;local YG=0;if OG~=0X000 then cZ=hG+OG-1;end;local qG,HG=nil,nil;do if OG==1 then do qG,HG=q3(TZ[hG]());end;else qG,HG=q3(TZ[hG](E(TZ,hG+1,cZ)));end;end;if YG==0X1 then cZ=hG-1;else do if YG==0 then qG=qG+hG-0X01;cZ=qG;else qG=hG+YG-2;do cZ=qG+1;end;end;end;local wb=(0X00000);do for UO=hG,qG do wb=wb+0x00001;TZ[UO]=HG[wb];end;end;end;hZ=hZ+0x1;do hZ=hZ+0X1;end;hZ=hZ+1;hG=0;OG=0X0;YG=0X4;if OG~=0X000 then cZ=hG+OG-1;end;do qG,HG=nil;end;if OG==0X1 then qG,HG=q3(TZ[hG]());else qG,HG=q3(TZ[hG](E(TZ,hG+1,cZ)));end;do if YG~=1 then do if YG==0 then qG=qG+hG-1;do cZ=qG;end;else qG=hG+YG-2;do cZ=qG+0X1;end;end;end;local xz=0X000;for Jd=hG,qG do xz=xz+0X1;do(TZ)[Jd]=HG[xz];end;end;else do cZ=hG-0X1;end;end;end;W0=bc[hZ];do hZ=hZ+0X1;end;hG=0;local kG=(P(function(...)(C)();for F4,u4 in...do C(true,F4,u4);end;end));(kG)(TZ[hG],TZ[hG+0X1],TZ[hG+2]);do cZ=hG;end;do TZ[hG]=kG;end;do hZ=W0[0X5];end;end;end;else do if a0==0X16 then do TZ[W0[0X0002]]=W0[0X6];end;else do(TZ)[W0[0X2]]=T(TZ[W0[0x00005]],TZ[W0[4]]);end;end;end;end;else if not(a0<17)then if a0==18 then TZ[0]=qZ[W0[0X6]];W0=bc[hZ];hZ=hZ+1;TZ[0X1]=qZ[W0[6]];hZ=hZ+0x01;hZ=hZ+0X1;local pj,lj=0x00002,(1);W0=bc[hZ];hZ=hZ+1;local Sj=(TZ[0X0001]);do TZ[lj+1]=Sj;end;(TZ)[lj]=Sj[W0[0x1]];hZ=hZ+0x00001;lj=1;local sj=(0X000);if pj==0x0 then else cZ=lj+pj-0x00001;end;local xj,Ij=nil,(nil);if pj~=0X1 then xj,Ij=q3(TZ[lj](E(TZ,lj+1,cZ)));else do xj,Ij=q3(TZ[lj]());end;end;if sj==0X00001 then cZ=lj-0X1;else if sj~=0X00 then xj=lj+sj-0X02;cZ=xj+1;else do xj=xj+lj-0X01;end;cZ=xj;end;local Rr=0X0000;for AR=lj,xj do Rr=Rr+0X1;TZ[AR]=Ij[Rr];end;end;do hZ=hZ+1;end;do lj=0;end;pj=0x0;sj=0X0004;do if pj==0 then else do cZ=lj+pj-1;end;end;end;xj,Ij=nil;if pj~=1 then do xj,Ij=q3(TZ[lj](E(TZ,lj+1,cZ)));end;else do xj,Ij=q3(TZ[lj]());end;end;if sj~=0x00001 then if sj~=0X0 then xj=lj+sj-2;cZ=xj+1;else xj=xj+lj-1;do cZ=xj;end;end;local N9=(0);do for UW=lj,xj do N9=N9+1;do(TZ)[UW]=Ij[N9];end;end;end;else cZ=lj-0x001;end;W0=bc[hZ];hZ=hZ+0X001;lj=0x0;local Fj=P(function(...)C();for Xg,Og in...do(C)(true,Xg,Og);end;end);(Fj)(TZ[lj],TZ[lj+0X1],TZ[lj+2]);cZ=lj;TZ[lj]=Fj;hZ=W0[5];else(TZ)[W0[0X0002]]=TZ[W0[5]]==TZ[W0[0X004]];end;else if a0==0X0010 then local NB,HB=0X3,(TZ[0X2]);TZ[NB+0x1]=HB;(TZ)[NB]=HB[W0[0X1]];W0=bc[hZ];hZ=hZ+1;(TZ)[5]=W0[6];hZ=hZ+0X1;NB=0X3;TZ[NB]=TZ[NB](TZ[NB+0X0001],TZ[NB+0x00002]);cZ=NB;hZ=hZ+0X01;do hZ=hZ+0X1;end;W0=bc[hZ];hZ=hZ+1;if not TZ[3]then do hZ=W0[0x5];end;end;else repeat local HN,lN=Lc,TZ;if#HN>0X0 then local zE=({});for mm,nm in M,HN do for Ow,Zw in M,nm do if Zw[1]==lN and Zw[2]>=0X0 then local Vz=Zw[0x2];if not(not zE[Vz])then else do(zE)[Vz]={lN[Vz]};end;end;do(Zw)[0X01]=zE[Vz];end;(Zw)[2]=1;end;end;end;end;until true;return;end;end;end;else if a0<27 then if not(a0<25)then if a0==26 then hZ=W0[0X5];else do(TZ)[W0[2]]=TZ[W0[5]][W0[0X1]];end;end;else if a0==0X00018 then if TZ[W0[0x2]]then do hZ=W0[5];end;end;else for os=W0[0x2],W0[0X5]do(TZ)[os]=nil;end;end;end;else if not(a0>=0X1d)then if a0~=28 then if TZ[W0[0X00005]]<=TZ[W0[4]]then hZ=W0[0X2];end;else local ka=(W0[2]);local aa,Ta,ea=TZ[ka]();do if not(aa)then else(TZ)[ka+0X1]=Ta;TZ[ka+2]=ea;do hZ=W0[5];end;end;end;end;else if a0~=0X1e then local nB,DB=0x00004,(TZ[2]);TZ[nB+0X01]=DB;(TZ)[nB]=DB[W0[0x01]];W0=bc[hZ];hZ=hZ+0x1;do(TZ)[0X6]=W0[0X6];end;hZ=hZ+1;do nB=4;end;TZ[nB]=TZ[nB](TZ[nB+1],TZ[nB+2]);cZ=nB;W0=bc[hZ];hZ=hZ+1;do if not(not TZ[0x04])then else do hZ=W0[0X005];end;end;end;else local eU=4;local GU=(TZ[0X002]);(TZ)[eU+0X1]=GU;(TZ)[eU]=GU[W0[0x1]];W0=bc[hZ];hZ=hZ+1;TZ[6]=W0[0X00006];hZ=hZ+1;eU=0X4;TZ[eU]=TZ[eU](TZ[eU+0X1],TZ[eU+0X0002]);cZ=eU;do W0=bc[hZ];end;hZ=hZ+1;do if not(not TZ[0X00004])then else hZ=W0[0X005];end;end;end;end;end;end;else if not(a0>=0X7)then if not(a0<3)then if not(a0>=5)then if a0==4 then else(TZ)[W0[0x02]]=TZ[W0[5]]<=TZ[W0[4]];end;else if a0==0X6 then(TZ)[W0[2]]=TZ[W0[5]];else do(TZ)[W0[0X00002]]=J(TZ[W0[5]],TZ[W0[0X04]]);end;end;end;else if not(a0<0X001)then if a0~=0X0002 then repeat local Qy,Uy=Lc,(TZ);do if not(#Qy>0X0)then else local Hg={};for iF,uF in M,Qy do for Yv,Ev in M,uF do if Ev[1]==Uy and Ev[0X0002]>=0x000 then local F9=Ev[2];do if not Hg[F9]then(Hg)[F9]={Uy[F9]};end;end;(Ev)[0X0001]=Hg[F9];do Ev[0X2]=0X1;end;end;end;end;end;end;until true;local t_=(W0[0x2]);return false,t_,t_;else do TZ[3]=TZ[0X02][W0[1]];end;hZ=hZ+1;do hZ=hZ+1;end;W0=bc[hZ];do hZ=hZ+1;end;do if TZ[3]~=W0[1]then hZ=W0[2];end;end;end;else local EL=W0[0X2];local PL,SL=TZ[EL]();if not(PL)then else do for DD=0X01,W0[4]do TZ[EL+DD]=SL[DD];end;end;hZ=W0[0x0005];end;end;end;else if not(a0<0XB)then if a0>=0Xd then if a0==14 then local bL=(Uc[W0[5]]);local yL=bL[0x5];local XL=#yL;local dL=(nil);if XL>0 then do dL={};end;for AZ=1,XL do local LZ=(yL[AZ]);do if LZ[0x1]==0X000 then(dL)[AZ-1]={TZ,LZ[2]};else do(dL)[AZ-1]=jc[LZ[2]];end;end;end;end;S(Lc,dL);end;(TZ)[W0[0X2]]=e3(bL,dL,qZ);else do(TZ)[W0[2]]=qZ[W0[0X6]];end;end;else if a0~=12 then local b7=(3);local d7=TZ[2];do TZ[b7+0X1]=d7;end;do(TZ)[b7]=d7[W0[0X1]];end;W0=bc[hZ];hZ=hZ+1;(TZ)[5]=W0[6];hZ=hZ+0X01;do b7=0X003;end;do(TZ)[b7]=TZ[b7](TZ[b7+0X1],TZ[b7+2]);end;do cZ=b7;end;W0=bc[hZ];hZ=hZ+1;do if not(not TZ[0X3])then else hZ=W0[0x5];end;end;else(TZ)[W0[0x02]]=TZ[W0[5]]>=TZ[W0[0X04]];end;end;else if a0>=0X09 then if a0==0xa then do TZ[W0[2]]=TZ[W0[5]]~=TZ[W0[4]];end;else if TZ[W0[5]]~=W0[1]then do hZ=W0[0X2];end;end;end;else do if a0~=8 then TZ[W0[0X0002]]={E({},0x1,W0[0X5])};else TZ[W0[0X002]]=iZ[W0[0x5]];end;end;end;end;end;end;end;end);if MZ then if XZ then do if DZ~=0X0001 then do return TZ[IZ](E(TZ,IZ+0X1,cZ));end;else do return TZ[IZ]();end;end;end;elseif not(IZ)then else return E(TZ,IZ,DZ);end;else if V(XZ)=="string"then if not(r(XZ,'at\116emp\116\032to y\105e\108\100\032acro\115\115\032\109e\116a\109\101tho\100\047C\037\045c\097ll\032\098\111u\110da\114y'))then else return coroutine.yield();end;do if not(r(XZ,"^.-:%d+: "))then q(XZ,0);else q('\076\117r\097\112h\032\083cr\105\112t\058'..(Qc[hZ-0X1]or"(internal)").."\058 "..u(XZ),0);end;end;else q(XZ,0X0);end;end;end;end;else do ic=function(...)local CH=(0x0);local WH=(0X001);local zH=({});local PH={[2]=Vc,[1]=zH};local QH=(k and k()or _ENV);local GH=(QH==H and fc or QH);local wH,iH=q3(...);do wH=wH-1;end;for wb=0,wH do do if ac>wb then zH[wb]=iH[wb+1];else break;end;end;end;if not nc then iH=nil;elseif not(Ac)then else do(zH)[ac]={n=wH>=ac and wH-ac+0x1 or 0x0,E(iH,ac+0X0001,wH+1)};end;end;if GH~=QH then if not(s)then _ENV=GH;else s(ic,GH);end;end;local tH,mH,aH,EH=c(function()while true do local vL=bc[WH];local YL=(vL[3]);WH=WH+0x00001;if not(YL<0X0C)then if not(YL<18)then do if YL<0X0015 then do if not(YL>=19)then local Hd=vL[0X2];local qd,od=zH[Hd]();if qd then do WH=vL[5];end;zH[Hd+0X3]=od;end;else if YL~=20 then do if zH[vL[0x00005]]~=zH[vL[4]]then else WH=vL[0X00002];end;end;else for hp=vL[2],vL[0X5]do zH[hp]=nil;end;end;end;end;else if not(YL>=0X16)then local lm=(Uc[vL[5]]);local Im=(lm[5]);local fm=nil;local Cm=#Im;if Cm>0X00 then fm={};for ce=1,Cm do local De=(Im[ce]);if De[0x1]~=0 then(fm)[ce-1]=jc[De[2]];else fm[ce-1]={zH,De[2]};end;end;S(Lc,fm);end;zH[vL[0X00002]]=e3(lm,fm,GH);else if YL~=0X17 then zH[vL[2]]=vL[6];else repeat local o_,p_=Lc,(zH);do if#o_>0 then local XH=({});for Gm,om in M,o_ do do for kc,sc in M,om do do if sc[1]==p_ and sc[2]>=0X0000 then local G4=sc[2];if not XH[G4]then do XH[G4]={p_[G4]};end;end;(sc)[0X1]=XH[G4];do(sc)[0X2]=0X001;end;end;end;end;end;end;end;end;until true;local ex=vL[0x0002];return false,ex,ex+vL[5]-0x002;end;end;end;end;else do if YL>=0x00f then if not(YL<0X10)then if YL~=0X11 then repeat local vI,nI=Lc,(zH);if#vI>0 then local p4=({});for uD,RD in M,vI do for Vi,pi in M,RD do if not(pi[1]==nI and pi[2]>=0X0)then else local KP=pi[0X002];if not(not p4[KP])then else p4[KP]={nI[KP]};end;(pi)[1]=p4[KP];pi[2]=0X0001;end;end;end;end;until true;return;else local ny=(jc[0X00000]);(zH)[0]=ny[1][ny[0X2]];WH=WH+0X01;WH=WH+0X1;do vL=bc[WH];end;do WH=WH+1;end;zH[0X0000]=zH[0][vL[0X1]];WH=WH+0X01;WH=WH+0x001;vL=bc[WH];do WH=WH+0X01;end;do if not(not zH[0X0000])then else WH=vL[5];end;end;end;else end;else if not(YL<13)then if YL~=0xE then(zH)[0X0]=GH[vL[0X6]];vL=bc[WH];WH=WH+1;(zH)[1]=GH[vL[0X006]];vL=bc[WH];WH=WH+1;do(zH)[0X0001]=zH[0x0001][vL[0X1]];end;vL=bc[WH];WH=WH+0X1;do zH[0X002]=GH[vL[6]];end;WH=WH+1;do WH=WH+1;end;vL=bc[WH];WH=WH+1;do(zH)[0X0002]=zH[0x002][vL[0X0001]];end;vL=bc[WH];WH=WH+0X1;(zH)[2]=zH[2][vL[0X00001]];vL=bc[WH];local bC=0;do WH=WH+0X1;end;(zH)[2]=zH[2][vL[0X1]];WH=WH+1;WH=WH+1;vL=bc[WH];WH=WH+1;zH[2]=zH[2][vL[1]];vL=bc[WH];WH=WH+1;zH[0X2]=zH[2][vL[0X001]];WH=WH+0X01;WH=WH+1;vL=bc[WH];do WH=WH+0X1;end;zH[2]=zH[0X02][vL[0X1]];vL=bc[WH];do WH=WH+1;end;do(zH)[2]=zH[2][vL[0X1]];end;vL=bc[WH];WH=WH+1;do zH[0X003]=vL[6];end;WH=WH+0X001;do CH=bC+4-0x001;end;(zH[bC])(E(zH,bC+0X00001,CH));CH=bC-1;WH=WH+0X1;do WH=WH+1;end;vL=bc[WH];WH=WH+0X1;do(zH)[0]=GH[vL[0X6]];end;do vL=bc[WH];end;WH=WH+1;do zH[0X1]=GH[vL[0x6]];end;WH=WH+0X001;WH=WH+0X1;vL=bc[WH];do WH=WH+1;end;do(zH)[0X00001]=zH[0x01][vL[0X01]];end;WH=WH+1;WH=WH+0x1;do vL=bc[WH];end;do WH=WH+0X1;end;(zH)[0X2]=GH[vL[6]];WH=WH+1;WH=WH+1;vL=bc[WH];WH=WH+1;do(zH)[0X002]=zH[0x002][vL[1]];end;vL=bc[WH];WH=WH+0X01;do zH[2]=zH[0x2][vL[0X1]];end;do vL=bc[WH];end;WH=WH+0X1;(zH)[0X002]=zH[2][vL[0X1]];do WH=WH+0x1;end;WH=WH+1;vL=bc[WH];WH=WH+0X1;(zH)[2]=zH[0x2][vL[1]];do WH=WH+1;end;WH=WH+0x1;do vL=bc[WH];end;WH=WH+0X0001;(zH)[0X2]=zH[0X002][vL[1]];WH=WH+1;WH=WH+1;vL=bc[WH];WH=WH+1;zH[0X2]=zH[2][vL[1]];vL=bc[WH];do WH=WH+0X1;end;(zH)[0X02]=zH[0X2][vL[0X00001]];WH=WH+0X001;do WH=WH+0X1;end;do vL=bc[WH];end;WH=WH+1;(zH)[0X003]=vL[6];WH=WH+1;bC=0X0;do CH=bC+4-0X1;end;(zH[bC])(E(zH,bC+0X1,CH));CH=bC-0x00001;do WH=WH+1;end;WH=WH+1;vL=bc[WH];do WH=WH+0X001;end;(zH)[0]=GH[vL[6]];vL=bc[WH];WH=WH+0x00001;do zH[0X1]=vL[6];end;WH=WH+0X1;bC=0X00;zH[bC](zH[bC+0X01]);do CH=bC-1;end;do vL=bc[WH];end;WH=WH+0X1;(zH)[0x0]=GH[vL[6]];do WH=WH+1;end;do WH=WH+1;end;vL=bc[WH];do WH=WH+0X0001;end;do(zH)[0X1]=vL[6];end;WH=WH+1;bC=0X0;(zH)[bC]=zH[bC](zH[bC+0X00001]);CH=bC;WH=WH+0X1;WH=WH+0x0001;do vL=bc[WH];end;WH=WH+0X1;do if not zH[0]then WH=vL[0X5];end;end;else(zH)[vL[2]]=zH[vL[0X0005]]~=zH[vL[0X0004]];end;else zH[vL[0x2]]=GH[vL[0X6]];end;end;end;end;else if not(YL>=6)then if YL>=0X00003 then if not(YL<4)then do if YL==5 then(zH)[0]=GH[vL[0x00006]];do vL=bc[WH];end;WH=WH+0x0001;(zH)[0X001]=vL[0X6];WH=WH+0x1;local pj=0X0;(zH)[pj]=zH[pj](zH[pj+1]);CH=pj;do WH=WH+1;end;local Tj=(jc[1]);(zH)[0X1]=Tj[1][Tj[2]];WH=WH+1;do WH=WH+0X1;end;vL=bc[WH];WH=WH+1;(zH)[1]=zH[1][vL[1]];WH=WH+1;do WH=WH+0X1;end;WH=WH+1;(zH)[0X2]=zH[0];WH=WH+0x1;pj=0x00001;zH[pj]=zH[pj](zH[pj+1]);CH=pj;do WH=WH+0X01;end;WH=WH+0X00001;vL=bc[WH];WH=WH+1;do if not zH[1]then do WH=vL[0X5];end;end;end;else zH[vL[0x002]]=PH[vL[5]];end;end;else if zH[vL[5]]<=zH[vL[4]]then WH=vL[0x0002];end;end;else if YL<1 then repeat local Gn,sn,Sn=Lc,zH,vL[2];if not(#Gn>0X0)then else local kd={};for qz,xz in M,Gn do do for wf,gf in M,xz do do if not(gf[1]==sn and gf[2]>=Sn)then else local Ew=(gf[2]);if not kd[Ew]then(kd)[Ew]={sn[Ew]};end;(gf)[0X1]=kd[Ew];do(gf)[0X0002]=0x001;end;end;end;end;end;end;end;until true;else do if YL~=0x2 then(zH)[0]=vL[6];vL=bc[WH];local Ep=(0);WH=WH+0X1;(zH)[1]=vL[0X006];vL=bc[WH];WH=WH+1;zH[0X00002]=vL[0X6];vL=bc[WH];WH=WH+0X1;local ep,bp,Up=zH[Ep],zH[Ep+0X1],(zH[Ep+0X00002]);zH[Ep]=P(function()for Sm=ep,bp,Up do C(true,Sm);end;end);WH=vL[5];else zH[0X4]=GH[vL[0X6]];do WH=WH+1;end;WH=WH+1;vL=bc[WH];local OJ=(4);WH=WH+0x1;do(zH)[0x5]=vL[6];end;vL=bc[WH];WH=WH+0X1;(zH)[6]=vL[0x0006];WH=WH+0X1;(zH)[0X7]=zH[3];WH=WH+0X1;CH=OJ+4-1;(zH[OJ])(E(zH,OJ+1,CH));CH=OJ-1;WH=WH+0X1;WH=WH+0X1;vL=bc[WH];WH=WH+1;WH=vL[5];end;end;end;end;else if YL>=9 then if YL>=0Xa then if YL==11 then zH[vL[0X2]]=#zH[vL[0X00005]];else do WH=vL[5];end;end;else do(zH)[vL[2]]={E({},0X001,vL[5])};end;end;else do if YL<0X00007 then(zH)[vL[2]]=w(zH[vL[0X5]],zH[vL[0X4]]);else if YL~=0x008 then(zH)[vL[0x0002]]=zH[vL[0X5]]<zH[vL[0X00004]];else local Iu=(jc[1]);do(zH)[0X1]=Iu[0X00001][Iu[0X2]];end;WH=WH+0X1;WH=WH+0x00001;local ou=0x1;vL=bc[WH];WH=WH+0x1;zH[0X1]=zH[0X1][vL[1]];WH=WH+1;WH=WH+0X1;WH=WH+1;zH[2]=zH[0];WH=WH+1;Iu=jc[2];(zH)[3]=Iu[1][Iu[2]];WH=WH+1;(zH[ou])(zH[ou+1],zH[ou+0x2]);do CH=ou-1;end;WH=WH+1;WH=WH+0X1;vL=bc[WH];WH=WH+0X1;WH=vL[5];end;end;end;end;end;end;end;end);if tH then if mH then if EH==1 then do return zH[aH]();end;else do return zH[aH](E(zH,aH+1,CH));end;end;elseif not(aH)then else return E(zH,aH,EH);end;else do if V(mH)~='str\105n\103'then(q)(mH,0X0);else do if r(mH,'\097tt\101mp\116\032t\111\032y\105e\108\100\032a\099ro\115\115 met\097meth\111\100\047\067%\045c\097l\108\032bou\110\100ar\121')then return coroutine.yield();end;end;if not(r(mH,"^.-:%d+: "))then(q)(mH,0X0);else(q)("\076\117\114\097ph\032Script:"..(Qc[WH-1]or"(i\110\116\101rn\097l\041")..": "..u(mH),0);end;end;end;end;end;end;end;end;end;end;else if Sc<0XD then if Sc~=0XC then ic=function(...)local rw,Aw=1,{};local Dw=({[1]=Aw,[2]=Vc});local dw=((k and k()or _ENV));local aw,Zw=q3(...);local bw=0X0;local uw=(dw==H and fc or dw);aw=aw-1;for kF=0,aw do do if ac>kF then Aw[kF]=Zw[kF+0X1];else break;end;end;end;if not nc then Zw=nil;elseif not(Ac)then else Aw[ac]={n=aw>=ac and aw-ac+1 or 0x0,E(Zw,ac+0X00001,aw+1)};end;if uw~=dw then if not(s)then _ENV=uw;else s(ic,uw);end;end;local Uw,pw,Yw,Ww=c(function()while true do local mc=bc[rw];local dc=mc[3];rw=rw+0X1;if dc<8 then do if dc<0x00004 then if not(dc<2)then if dc~=3 then repeat local y4,p4=Lc,(Aw);if not(#y4>0X0)then else local ms=({});for nt,et in M,y4 do for Dx,Xx in M,et do if not(Xx[1]==p4 and Xx[0X0002]>=0)then else local ZQ=Xx[0X0002];if not ms[ZQ]then(ms)[ZQ]={p4[ZQ]};end;(Xx)[0x1]=ms[ZQ];Xx[2]=1;end;end;end;end;until true;do return;end;else repeat local wj,Nj,jj=Lc,Aw,(mc[2]);if not(#wj>0X0)then else local HY={};for Wj,pj in M,wj do do for Dy,qy in M,pj do if qy[1]==Nj and qy[2]>=jj then local nG=qy[0x002];if not(not HY[nG])then else(HY)[nG]={Nj[nG]};end;qy[0x1]=HY[nG];qy[2]=0X1;end;end;end;end;end;until true;end;else if dc==0X1 then Aw[0X00002]=uw[mc[0X006]];rw=rw+1;rw=rw+0x1;mc=bc[rw];do rw=rw+0X01;end;(Aw)[3]=Aw[0][mc[1]];mc=bc[rw];do rw=rw+1;end;(Aw)[4]=uw[mc[0X00006]];rw=rw+0X1;local vw=0X2;rw=rw+0x1;mc=bc[rw];rw=rw+1;Aw[4]=Aw[4][mc[0X0001]];mc=bc[rw];local lw=(0X2);rw=rw+0X1;(Aw)[0x4]=Aw[4][mc[0x1]];rw=rw+1;Aw[lw]=Aw[lw](Aw[lw+1],Aw[lw+2]);bw=lw;do rw=rw+0x1;end;do rw=rw+1;end;mc=bc[rw];rw=rw+1;do(Aw)[0X3]=uw[mc[6]];end;do rw=rw+0X1;end;rw=rw+1;mc=bc[rw];rw=rw+0X0001;Aw[4]=Aw[1][mc[1]];do mc=bc[rw];end;rw=rw+1;do Aw[5]=uw[mc[0X6]];end;mc=bc[rw];do rw=rw+1;end;Aw[5]=Aw[5][mc[1]];rw=rw+1;rw=rw+0x1;do mc=bc[rw];end;rw=rw+1;Aw[0x05]=Aw[0X5][mc[0X01]];do rw=rw+1;end;lw=3;do Aw[lw]=Aw[lw](Aw[lw+1],Aw[lw+2]);end;bw=lw;rw=rw+1;do rw=rw+1;end;rw=rw+0x01;do(Aw)[0x2]=Aw[0X2]<Aw[3];end;rw=rw+1;repeat local C4,Z4=Lc,Aw;if not(#C4>0)then else local Cg=({});for Ee,pe in M,C4 do for LA,fA in M,pe do if fA[1]==Z4 and fA[0X2]>=0 then local sv=fA[0X2];if not(not Cg[sv])then else do Cg[sv]={Z4[sv]};end;end;do(fA)[0X1]=Cg[sv];end;fA[0X2]=1;end;end;end;end;until true;do return false,vw,vw;end;else end;end;else if not(dc>=6)then if dc==5 then Aw[mc[2]]=Aw[mc[5]]/Aw[mc[4]];else do Aw[mc[0X2]]=mc[0x0006];end;end;else if dc~=7 then(Aw)[mc[2]]=#Aw[mc[5]];else local PD=Aw[mc[5]]/Aw[mc[0X0004]];do Aw[mc[0X2]]=PD-PD%0X1;end;end;end;end;end;else do if dc>=12 then do if dc>=14 then if dc>=0xF then do if dc==16 then local qm,Om=mc[0X002],mc[0X05];bw=qm+Om-0X1;repeat local b5,N5=Lc,Aw;if#b5>0X000 then local xu={};for Mz,jz in M,b5 do do for Nr,kr in M,jz do if not(kr[0X1]==N5 and kr[2]>=0)then else local sE=(kr[0X2]);if not(not xu[sE])then else(xu)[sE]={N5[sE]};end;kr[1]=xu[sE];do(kr)[0X2]=0x0001;end;end;end;end;end;end;until true;return true,qm,Om;else local tw=(mc[2]);local fw=(P(function(...)C();for Y6,t6,Q6,y6,w6,p6,f6,F6,a6,S6 in...do(C)(true,{Y6,t6,Q6,y6,w6,p6,f6,F6,a6,S6});end;end));fw(Aw[tw],Aw[tw+0X001],Aw[tw+2]);bw=tw;do Aw[tw]=fw;end;rw=mc[0X5];end;end;else(Aw)[mc[2]]=Aw[mc[5]]<=Aw[mc[4]];end;else if dc==0XD then local LI=Uc[mc[5]];local CI=(nil);local zI=(LI[0X5]);local KI=(#zI);do if not(KI>0)then else CI={};do for Vg=0X00001,KI do local Lg=(zI[Vg]);if Lg[1]~=0x0 then(CI)[Vg-0X0001]=jc[Lg[0X002]];else(CI)[Vg-0X1]={Aw,Lg[0X2]};end;end;end;S(Lc,CI);end;end;do Aw[mc[0X2]]=e3(LI,CI,uw);end;else(Aw)[mc[0X002]]=J(Aw[mc[5]],Aw[mc[0x00004]]);end;end;end;else do if dc>=10 then do if dc~=0Xb then for Cp=mc[0x2],mc[0X5]do Aw[Cp]=nil;end;else do Aw[mc[2]]={E({},1,mc[0x5])};end;end;end;else do if dc==9 then rw=mc[5];else Aw[mc[2]]=uw[mc[0x06]];end;end;end;end;end;end;end;end;end);if not(Uw)then if V(pw)=="string"then if r(pw,'at\116e\109\112t\032\116\111 \121i\101\108d\032acro\115s\032m\101t\097\109\101thod/C\037\045c\097ll\032\098\111u\110\100\097\114\121')then do return coroutine.yield();end;end;if not(r(pw,'\094.\045:\037\100+\058 '))then q(pw,0X0);else(q)("L\117r\097\112\104\032\083c\114\105p\116\058"..(Qc[rw-0X00001]or"(i\110\116e\114nal\041")..": "..u(pw),0);end;else q(pw,0X0);end;else if pw then do if Ww==1 then return Aw[Yw]();else return Aw[Yw](E(Aw,Yw+0X001,bw));end;end;elseif Yw then return E(Aw,Yw,Ww);end;end;end;else do ic=function(...)local no=0X0;local vo,oo={},0X01;local Ho={[2]=Vc,[1]=vo};local So=((k and k()or _ENV));local fo,lo=q3(...);do fo=fo-1;end;for X6=0X0,fo do if not(ac>X6)then do break;end;else do vo[X6]=lo[X6+1];end;end;end;local yo=(So==H and fc or So);if not nc then lo=nil;elseif not(Ac)then else do vo[ac]={n=fo>=ac and fo-ac+0X1 or 0X0,E(lo,ac+0X1,fo+0X001)};end;end;if yo==So then else do if s then s(ic,yo);else _ENV=yo;end;end;end;local Ao,io,zo,qo=c(function()while true do local x7=bc[oo];local U7=x7[0X3];oo=oo+1;if not(U7<0X6)then if U7>=9 then if U7>=0Xa then if U7~=0X0000B then local EI=(Uc[x7[5]]);local cI=(nil);local TI=EI[5];local vI=(#TI);if vI>0x000 then cI={};do for Js=0X1,vI do local Ys=TI[Js];if Ys[0X1]~=0 then do cI[Js-0X1]=jc[Ys[0x02]];end;else cI[Js-1]={vo,Ys[0X2]};end;end;end;S(Lc,cI);end;do vo[x7[2]]=e3(EI,cI,yo);end;else(vo)[x7[0X00002]]=x7[6];end;else repeat local Wf,sf=Lc,(vo);if#Wf>0 then local pO=({});for nv,fv in M,Wf do for qf,Sf in M,fv do do if Sf[0X01]==sf and Sf[2]>=0x0 then local Gl=Sf[2];if not(not pO[Gl])then else do pO[Gl]={sf[Gl]};end;end;(Sf)[0X1]=pO[Gl];Sf[2]=0X1;end;end;end;end;end;until true;local D7=x7[2];return false,D7,D7+x7[5]-0x2;end;else if not(U7>=0X00007)then vo[x7[2]]={E({},1,x7[5])};else do if U7==8 then(vo)[0X000]=yo[x7[0X6]];local nh=0;x7=bc[oo];oo=oo+1;vo[0]=vo[0X000][x7[1]];x7=bc[oo];local th=(Uc[x7[5]]);local Nh=(th[5]);oo=oo+0X0001;local yh=nil;local Uh=#Nh;do if Uh>0X00 then yh={};for Av=0X0001,Uh do local sv=Nh[Av];do if sv[1]~=0 then do(yh)[Av-0x01]=jc[sv[2]];end;else(yh)[Av-0X1]={vo,sv[2]};end;end;end;S(Lc,yh);end;end;vo[1]=e3(th,yh,yo);oo=oo+1;(vo[nh])(vo[nh+1]);do no=nh-1;end;do oo=oo+1;end;do repeat local DO,rO=Lc,(vo);if#DO>0X0 then local lQ={};do for GQ,zQ in M,DO do for ge,Ve in M,zQ do do if not(Ve[1]==rO and Ve[2]>=0)then else local JI=(Ve[2]);if not lQ[JI]then(lQ)[JI]={rO[JI]};end;do(Ve)[1]=lQ[JI];end;(Ve)[2]=0x1;end;end;end;end;end;end;until true;end;return;else oo=x7[0x5];end;end;end;end;else if not(U7<0X3)then if not(U7>=0x04)then local my=(vo[x7[0X5]]/vo[x7[0X4]]);(vo)[x7[0x2]]=my-my%1;else if U7~=0X005 then local r4=(x7[0x05]);local M4=(vo[r4]);for Bv=r4+1,x7[4]do M4=M4..vo[Bv];end;(vo)[x7[2]]=M4;else local Db=x7[2];local Wb=(x7[0X004]-1)*0X32;local rb=vo[Db];for z8=0X1,x7[5]do do rb[Wb+z8]=vo[Db+z8];end;end;end;end;else if not(U7>=1)then else do if U7==0x2 then vo[x7[2]]=vo[x7[5]]<=vo[x7[0X4]];else(vo)[x7[0X2]]=yo[x7[6]];end;end;end;end;end;end;end);if not(Ao)then if V(io)~="string"then q(io,0);else if r(io,"\097t\116\101\109\112\116 t\111 \121\105\101\108d a\099\114o\115s\032m\101ta\109e\116h\111\100/C\037-\099\097\108l bo\117ndar\121")then do return coroutine.yield();end;end;do if r(io,"^.-:%d+: ")then q("Luraph Script:"..(Qc[oo-1]or"(internal)")..'\058 '..u(io),0X0);else(q)(io,0);end;end;end;else do if io then if qo==1 then do return vo[zo]();end;else return vo[zo](E(vo,zo+0x1,no));end;elseif zo then return E(vo,zo,qo);end;end;end;end;end;end;else if Sc==0Xe then ic=function(...)local Au,ou=0X00001,0;local Lu={};local du={[1]=Lu,[2]=Vc};local zu=(k and k()or _ENV);local Vu,Gu=q3(...);local Iu=((zu==H and fc or zu));Vu=Vu-1;for y0=0X0,Vu do if ac>y0 then do(Lu)[y0]=Gu[y0+1];end;else break;end;end;do if not nc then Gu=nil;elseif not(Ac)then else do(Lu)[ac]={n=Vu>=ac and Vu-ac+1 or 0x0000,E(Gu,ac+1,Vu+1)};end;end;end;if Iu==zu then else if s then s(ic,Iu);else _ENV=Iu;end;end;local Ou,Mu,nu,bu=c(function()do while true do local Vw=(bc[Au]);local pw=Vw[0X3];do Au=Au+0x1;end;if not(pw<10)then do if not(pw>=0X0000f)then if not(pw>=12)then if pw~=11 then local Yc=(Uc[Vw[5]]);local Wc=Yc[0X0005];local rc,xc=#Wc,nil;if rc>0 then xc={};for SH=1,rc do local RH=Wc[SH];if RH[0X1]==0X0 then do xc[SH-0X1]={Lu,RH[0x2]};end;else(xc)[SH-1]=jc[RH[2]];end;end;S(Lc,xc);end;Lu[Vw[0X02]]=e3(Yc,xc,Iu);else local YV=(Vw[0X2]);local UV,QV,iV=Lu[YV]();if UV then Lu[YV+1]=QV;(Lu)[YV+0x2]=iV;Au=Vw[0X5];end;end;else if not(pw<0Xd)then if pw~=14 then Lu[Vw[2]]=Lu[Vw[0X5]];else(Lu)[Vw[0X2]]=T(Lu[Vw[5]],Lu[Vw[0X0004]]);end;else do(Lu)[2]=Iu[Vw[6]];end;Au=Au+0X1;do Au=Au+1;end;do Vw=bc[Au];end;do Au=Au+1;end;(Lu)[0X0002]=Lu[0X2][Vw[0X1]];Vw=bc[Au];Au=Au+0X1;if Lu[2]then Au=Vw[5];end;end;end;else do if not(pw<18)then if not(pw<0X13)then if pw~=0X14 then Lu[0X0]=Iu[Vw[6]];Au=Au+1;Au=Au+1;Vw=bc[Au];Au=Au+0x0001;if not(not Lu[0x0])then else Au=Vw[0X5];end;else(Lu)[0X0001]=Iu[Vw[0x0006]];Vw=bc[Au];do Au=Au+1;end;Lu[1]=Lu[1][Vw[0X0001]];do Au=Au+0x01;end;Au=Au+0X0001;Vw=bc[Au];do Au=Au+0X1;end;Lu[1]=Lu[0X1][Vw[0X1]];Vw=bc[Au];do Au=Au+0x1;end;if not(Lu[0X00001]<Lu[0])then else do Au=Vw[0X2];end;end;end;else(Lu)[Vw[0X2]]=Iu[Vw[0X6]];end;else if pw>=0X10 then do if pw==0X11 then local qX=(Uc[Vw[5]]);local IX=nil;local sX=qX[5];local BX=#sX;do if not(BX>0X0)then else IX={};do for Iw=1,BX do local Hw=(sX[Iw]);if Hw[1]~=0X0 then(IX)[Iw-0X001]=jc[Hw[2]];else(IX)[Iw-1]={Lu,Hw[0X2]};end;end;end;S(Lc,IX);end;end;Lu[0X0]=e3(qX,IX,Iu);Vw=bc[Au];Au=Au+0x1;Lu[0X01]=Iu[Vw[6]];Au=Au+1;Au=Au+0X001;Au=Au+0x1;do(Lu)[2]={E({},0X1,17)};end;Vw=bc[Au];Au=Au+0X1;(Lu)[3]=Vw[0X0006];do Vw=bc[Au];end;do Au=Au+1;end;do Lu[0X0004]=Vw[0X6];end;Vw=bc[Au];Au=Au+1;do(Lu)[0x00005]=Vw[0X06];end;Vw=bc[Au];Au=Au+1;do Lu[6]=Vw[0X006];end;Vw=bc[Au];Au=Au+1;Lu[7]=Vw[6];do Vw=bc[Au];end;Au=Au+0X1;Lu[8]=Vw[0X06];do Vw=bc[Au];end;Au=Au+0X1;Lu[0X9]=Vw[6];Vw=bc[Au];do Au=Au+0x1;end;Lu[10]=Vw[0X6];Vw=bc[Au];do Au=Au+1;end;local EX=(2);do Lu[11]=Vw[0X6];end;Vw=bc[Au];Au=Au+1;Lu[12]=Vw[0X6];do Vw=bc[Au];end;Au=Au+0X1;do(Lu)[0xD]=Vw[6];end;Vw=bc[Au];local LX=2;Au=Au+0X00001;Lu[14]=Vw[0X6];Vw=bc[Au];Au=Au+0x01;do Lu[15]=Vw[0x0006];end;Vw=bc[Au];Au=Au+1;(Lu)[16]=Vw[0X6];Vw=bc[Au];Au=Au+0X0001;Lu[17]=Vw[0X6];Vw=bc[Au];Au=Au+0X1;(Lu)[0X12]=Vw[6];Vw=bc[Au];Au=Au+0x1;do(Lu)[19]=Vw[0X006];end;local DX=(Lu[LX]);do Au=Au+0X001;end;local gX=((1-1)*50);for vU=1,0x000011 do DX[gX+vU]=Lu[LX+vU];end;Au=Au+0x01;LX=1;local uX=(4);if EX==0X0 then else ou=LX+EX-1;end;local RX,HX=nil,nil;if EX~=0x1 then RX,HX=q3(Lu[LX](E(Lu,LX+0X00001,ou)));else RX,HX=q3(Lu[LX]());end;if uX==1 then ou=LX-0X1;else if uX~=0 then RX=LX+uX-2;ou=RX+0x0001;else RX=RX+LX-0X001;ou=RX;end;local Pf=(0X00000);for Iy=LX,RX do Pf=Pf+1;(Lu)[Iy]=HX[Pf];end;end;do Vw=bc[Au];end;Au=Au+1;LX=1;local oX=P(function(...)C();do for gE,YE in...do C(true,gE,YE);end;end;end);oX(Lu[LX],Lu[LX+1],Lu[LX+0X2]);do ou=LX;end;do(Lu)[LX]=oX;end;Au=Vw[5];else end;end;else local Ux=(Vw[0X2]);for en=Ux,Ux+(Vw[0X005]-0x0001)do Lu[en]=Gu[ac+(en-Ux)+1];end;end;end;end;end;end;else if not(pw<0x5)then if not(pw>=7)then do if pw==6 then repeat local YK,QK=Lc,(Lu);if#YK>0x0000 then local kv={};for DM,bM in M,YK do do for qr,Yr in M,bM do if Yr[0X1]==QK and Yr[2]>=0X0 then local mt=Yr[2];if not kv[mt]then(kv)[mt]={QK[mt]};end;do Yr[1]=kv[mt];end;(Yr)[0X02]=0X0001;end;end;end;end;end;until true;do return;end;else do Au=Vw[0x0005];end;end;end;else do if pw<8 then do Lu[0x4]=Iu[Vw[0X6]];end;Au=Au+0X1;Au=Au+0X1;Vw=bc[Au];Au=Au+1;local pg=(0x00004);Lu[0X0004]=Lu[0x00004][Vw[0X00001]];Au=Au+0x01;(Lu)[5]=Lu[0X0000];Au=Au+0X1;Lu[0X6]=Lu[3];do Au=Au+0X1;end;Lu[pg](Lu[pg+1],Lu[pg+0X00002]);ou=pg-0X0001;Au=Au+1;Au=Au+0X1;Vw=bc[Au];Au=Au+1;Au=Vw[5];else if pw~=9 then local nj=(Vw[0X00002]);local sj=Lu[Vw[0X5]];Lu[nj+0x001]=sj;Lu[nj]=sj[Vw[0X01]];else Lu[Vw[2]]=Vw[6];end;end;end;end;else if pw<0X00002 then if pw~=1 then(Lu)[Vw[2]]={E({},1,Vw[0X5])};else Lu[0X1]=true;Vw=bc[Au];do Au=Au+1;end;do(Iu)[Vw[0X006]]=Lu[0X1];end;do Au=Au+0X1;end;do repeat local pT,lT=Lc,(Lu);if#pT>0 then local AK={};for XA,FA in M,pT do for kk,nk in M,FA do do if not(nk[1]==lT and nk[0X2]>=0X0000)then else local z6=nk[2];if not(not AK[z6])then else(AK)[z6]={lT[z6]};end;nk[1]=AK[z6];nk[0X02]=1;end;end;end;end;end;until true;end;return;end;else do if pw<0X3 then Lu[0]=Iu[Vw[6]];do Vw=bc[Au];end;Au=Au+1;do(Lu)[0]=Lu[0x0][Vw[1]];end;Au=Au+0x1;Au=Au+0X1;Vw=bc[Au];Au=Au+0x0001;if Lu[0]then do Au=Vw[0x5];end;end;else if pw==0X4 then if not(not(Lu[Vw[5]]<Lu[Vw[0X4]]))then else do Au=Vw[0X2];end;end;else for rR=Vw[0x2],Vw[0X0005]do Lu[rR]=nil;end;end;end;end;end;end;end;end;end;end);if Ou then if Mu then if bu~=0X1 then return Lu[nu](E(Lu,nu+0x00001,ou));else return Lu[nu]();end;elseif nu then return E(Lu,nu,bu);end;else if V(Mu)=="string"then if r(Mu,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if r(Mu,"^.-\058\037\100\043\058 ")then q('\076\117\114\097p\104 Scr\105\112t\058'..(Qc[Au-0X1]or'(in\116\101rnal)')..": "..u(Mu),0);else(q)(Mu,0X0000);end;end;else q(Mu,0X00);end;end;end;else ic=function(...)local cx,Mx=0X1,{};local qx=({[1]=Mx,[2]=Vc});local Sx=(k and k()or _ENV);local sx,dx=q3(...);sx=sx-0X1;local Nx=0X0;local Hx=(Sx==H and fc or Sx);for WM=0X0,sx do if not(ac>WM)then break;else(Mx)[WM]=dx[WM+0X0001];end;end;if not nc then dx=nil;elseif Ac then(Mx)[ac]={n=sx>=ac and sx-ac+1 or 0X0000,E(dx,ac+1,sx+0x01)};end;do if Hx==Sx then else if s then(s)(ic,Hx);else _ENV=Hx;end;end;end;local Fx,Px,Vx,bx=c(function()while true do local tw=bc[cx];local Rw=(tw[0X3]);cx=cx+1;if Rw>=0X7 then if Rw>=11 then do if Rw>=0xd then if Rw==14 then if not(Mx[tw[0X5]]<Mx[tw[0X0004]])then else cx=tw[2];end;else if not(Mx[tw[0x5]]<=Mx[tw[4]])then else cx=tw[2];end;end;else do if Rw==12 then Mx[0X00000]=Hx[tw[0X6]];tw=bc[cx];local ET=(0X0);cx=cx+0x1;local TT=(Mx[0]);Mx[ET+1]=TT;Mx[ET]=TT[tw[0x1]];tw=bc[cx];cx=cx+0X0001;(Mx)[2]=tw[6];cx=cx+0x01;do ET=0;end;Mx[ET]=Mx[ET](Mx[ET+1],Mx[ET+2]);do Nx=ET;end;tw=bc[cx];cx=cx+1;Mx[1]=Hx[tw[0X6]];tw=bc[cx];cx=cx+0X00001;(Mx)[1]=Mx[0X1][tw[0X1]];tw=bc[cx];local JT=(Uc[tw[0X5]]);cx=cx+0X1;local aT,cT=nil,JT[0X5];local GT=(#cT);do if GT>0 then aT={};for I_=0X1,GT do local l_=cT[I_];if l_[1]==0 then(aT)[I_-1]={Mx,l_[0X0002]};else aT[I_-1]=jc[l_[0x2]];end;end;(S)(Lc,aT);end;end;(Mx)[2]=e3(JT,aT,Hx);cx=cx+0x1;ET=0X1;(Mx[ET])(Mx[ET+1]);Nx=ET-0X1;cx=cx+1;do cx=cx+0X00001;end;do cx=cx+1;end;repeat local Jj,tj=Lc,Mx;do if not(#Jj>0X00000)then else local ma={};for tV,RV in M,Jj do for Qw,kw in M,RV do if kw[0x1]==tj and kw[0X2]>=0x0000 then local T_=kw[0x2];do if not(not ma[T_])then else(ma)[T_]={tj[T_]};end;end;(kw)[1]=ma[T_];kw[0X2]=1;end;end;end;end;end;until true;return;else end;end;end;end;else if Rw<9 then if Rw~=0X8 then local uf=tw[0X5];local Xf=tw[2];Nx=Xf+uf-1;repeat local H6,I6=Lc,Mx;if not(#H6>0)then else local kr=({});for d8,t8 in M,H6 do for WG,cG in M,t8 do if not(cG[0X01]==I6 and cG[2]>=0X0000)then else local rF=(cG[2]);if not kr[rF]then do(kr)[rF]={I6[rF]};end;end;(cG)[1]=kr[rF];cG[0X02]=1;end;end;end;end;until true;return true,Xf,uf;else Mx[tw[0x2]]={E({},0X1,tw[5])};end;else do if Rw==0X0a then cx=tw[5];else do for LP=tw[2],tw[5]do(Mx)[LP]=nil;end;end;end;end;end;end;else if not(Rw<0X3)then do if Rw<5 then do if Rw~=0x4 then Mx[tw[0x2]]=tw[6];else Mx[tw[2]]=Hx[tw[0x6]];end;end;else if Rw==0X0006 then local v8=Uc[tw[5]];local f8,n8=v8[5],(nil);local I8=(#f8);if I8>0 then do n8={};end;do for nz=0X00001,I8 do local Qz=f8[nz];if Qz[1]==0 then n8[nz-1]={Mx,Qz[2]};else(n8)[nz-0x0001]=jc[Qz[0x2]];end;end;end;(S)(Lc,n8);end;Mx[tw[2]]=e3(v8,n8,Hx);else local Pt=tw[0X02];local At=((tw[4]-0X1)*50);local Mt=Mx[Pt];for gL=1,tw[0X05]do do Mt[At+gL]=Mx[Pt+gL];end;end;end;end;end;else if not(Rw<0x001)then if Rw~=0X00002 then local BS,iS=tw[2],(Mx[tw[0x5]]);do Mx[BS+1]=iS;end;(Mx)[BS]=iS[tw[0X1]];else(Mx)[tw[2]]=-Mx[tw[0X005]];end;else(Mx)[tw[2]]=Mx[tw[0X05]]%Mx[tw[4]];end;end;end;end;end);do if not(Fx)then if V(Px)~="string"then(q)(Px,0X0000);else if not(r(Px,"\097\116t\101mp\116 \116o \121iel\100 \097\099ro\115\115\032met\097m\101tho\100\047C%-\099all\032bound\097r\121"))then else return coroutine.yield();end;if not(r(Px,'\094\046-\058%\100\043: '))then q(Px,0X000);else q('\076\117\114\097\112\104 Scrip\116:'..(Qc[cx-1]or"\040\105\110te\114\110\097\108)").."\058\032"..u(Px),0);end;end;else if Px then if bx==1 then return Mx[Vx]();else do return Mx[Vx](E(Mx,Vx+0X1,Nx));end;end;elseif not(Vx)then else return E(Mx,Vx,bx);end;end;end;end;end;end;end;end;end;else if Sc>=0x17 then if Sc>=0x01B then do if not(Sc<0X1D)then if Sc==30 then do ic=function(...)local W8=({});local g8=0X0001;local X8=((k and k()or _ENV));local o8={[2]=Vc,[1]=W8};local r8,R8=q3(...);local N8=0X0;local E8=(X8==H and fc or X8);r8=r8-1;for VS=0,r8 do do if ac>VS then(W8)[VS]=R8[VS+1];else do break;end;end;end;end;do if not nc then R8=nil;elseif not(Ac)then else(W8)[ac]={n=r8>=ac and r8-ac+0X00001 or 0x0,E(R8,ac+0x001,r8+0X1)};end;end;do if E8~=X8 then if not(s)then do _ENV=E8;end;else s(ic,E8);end;end;end;do while true do local Nx=bc[g8];local fx=(Nx[3]);g8=g8+1;do return(function(U,D,...)if not Client.Character:FindFirstChild("HasBuso")then task.spawn(_C,"Buso");end;end)(W8,jc,...);end;end;end;end;end;else ic=function(...)local Rp,Sp=1,{};local Xp=(k and k()or _ENV);local kp,Np=(Xp==H and fc or Xp),({[1]=Sp,[2]=Vc});local Mp,qp=q3(...);do Mp=Mp-0X01;end;for k_=0,Mp do if not(ac>k_)then do break;end;else Sp[k_]=qp[k_+1];end;end;if not nc then do qp=nil;end;elseif not(Ac)then else do(Sp)[ac]={n=Mp>=ac and Mp-ac+1 or 0,E(qp,ac+1,Mp+1)};end;end;local up=(0X0);do if kp~=Xp then if not(s)then _ENV=kp;else(s)(ic,kp);end;end;end;local Bp,cp,gp,dp=c(function()while true do local Ev=bc[Rp];local ev=Ev[3];Rp=Rp+0X01;if not(ev>=0X8)then if ev>=4 then if not(ev>=0x6)then if ev==5 then(Sp)[Ev[0x2]]=kp[Ev[6]];else(Sp)[Ev[0X2]]=o(Sp[Ev[0X5]],Sp[Ev[0X04]]);end;else if ev==0x7 then Sp[Ev[0X02]]={E({},1,Ev[5])};else local ZM,NM=Uc[Ev[5]],(nil);local wM=(ZM[5]);local AM=(#wM);if not(AM>0x00)then else NM={};for SS=1,AM do local bS=wM[SS];if bS[1]==0 then NM[SS-0x1]={Sp,bS[2]};else do(NM)[SS-0X1]=jc[bS[0X2]];end;end;end;(S)(Lc,NM);end;do Sp[Ev[0X002]]=e3(ZM,NM,kp);end;end;end;else do if ev>=0X2 then do if ev~=3 then Rp=Ev[5];else(Sp)[0X3]=kp[Ev[6]];Ev=bc[Rp];Rp=Rp+0X1;(Sp)[0X004]=kp[Ev[0X6]];local Kp=(3);do Rp=Rp+0x1;end;Rp=Rp+0X1;do Rp=Rp+0X1;end;(Sp)[5]=Sp[1];Rp=Rp+1;do Sp[0X06]=Sp[0X2];end;do Rp=Rp+0X1;end;local wp=(4);do up=Kp+wp-0X1;end;do repeat local WZ,jZ=Lc,Sp;if#WZ>0 then local gk=({});for Ft,Bt in M,WZ do for SV,TV in M,Bt do if TV[0X0001]==jZ and TV[2]>=0 then local TX=(TV[2]);if not gk[TX]then(gk)[TX]={jZ[TX]};end;do TV[1]=gk[TX];end;(TV)[0X00002]=1;end;end;end;end;until true;end;do return true,Kp,wp;end;end;end;else if ev~=0X01 then Sp[Ev[0X2]]=Ev[0X06];else end;end;end;end;else if not(ev<12)then if ev>=14 then if not(ev<0xf)then if ev~=16 then do Sp[Ev[2]]=J(Sp[Ev[5]],Sp[Ev[4]]);end;else repeat local Ch,mh=Lc,(Sp);if#Ch>0X00000 then local tf={};for kt,Vt in M,Ch do for sl,tl in M,Vt do if tl[1]==mh and tl[2]>=0 then local C4=(tl[0X2]);do if not(not tf[C4])then else tf[C4]={mh[C4]};end;end;tl[0x1]=tf[C4];(tl)[0X2]=0x1;end;end;end;end;until true;return false,Ev[2],up;end;else local d0=Ev[0X5];local S0=(Ev[0X2]);do if d0~=0 then up=S0+d0-0X01;end;end;local Y0,i0=nil,(nil);local A0=(Ev[4]);if d0==0X1 then do Y0,i0=q3(Sp[S0]());end;else do Y0,i0=q3(Sp[S0](E(Sp,S0+0X01,up)));end;end;if A0~=1 then do if A0~=0 then Y0=S0+A0-0X2;up=Y0+1;else do Y0=Y0+S0-0X1;end;do up=Y0;end;end;end;local g_=0;do for yk=S0,Y0 do g_=g_+1;do(Sp)[yk]=i0[g_];end;end;end;else do up=S0-0X00001;end;end;end;else do if ev~=13 then repeat local UU,cU=Lc,(Sp);if not(#UU>0X0)then else local zx={};for Ak,pk in M,UU do for cY,UY in M,pk do if UY[1]==cU and UY[0X2]>=0x00000 then local bP=UY[2];if not zx[bP]then zx[bP]={cU[bP]};end;UY[1]=zx[bP];UY[2]=0X1;end;end;end;end;until true;return;else(Sp)[Ev[0X0002]]=Sp[Ev[0X0005]]*Sp[Ev[4]];end;end;end;else if not(ev>=0x000A)then if ev==0X009 then local QY,KY=Ev[0X2],Sp[Ev[0X0005]];do(Sp)[QY+1]=KY;end;(Sp)[QY]=KY[Ev[0X001]];else local zy=(Ev[0x2]);local ey,vy=Sp[zy]();if not(ey)then else do Rp=Ev[5];end;do Sp[zy+0X3]=vy;end;end;end;else if ev~=0X0B then local sA=Ev[0X005];local CA=Ev[2];up=CA+sA-0X1;repeat local q4,t4=Lc,(Sp);do if not(#q4>0)then else local j1=({});do for jH,gH in M,q4 do for d9,r9 in M,gH do if r9[0x1]==t4 and r9[0X2]>=0X0 then local dC=(r9[2]);do if not(not j1[dC])then else(j1)[dC]={t4[dC]};end;end;do r9[0X1]=j1[dC];end;(r9)[2]=0x001;end;end;end;end;end;end;until true;return true,CA,sA;else repeat local AM,XM,DM=Lc,Sp,Ev[0X2];if not(#AM>0)then else local SE={};for aN,gN in M,AM do do for R0,P0 in M,gN do if not(P0[1]==XM and P0[2]>=DM)then else local qI=(P0[2]);if not SE[qI]then do(SE)[qI]={XM[qI]};end;end;P0[1]=SE[qI];(P0)[0X2]=1;end;end;end;end;end;until true;end;end;end;end;end;end);if not(Bp)then if V(cp)=="string"then if not(r(cp,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if r(cp,"^\046-\058%d+: ")then q("Luraph Script:"..(Qc[Rp-0X1]or"(internal)").."\058 "..u(cp),0);else(q)(cp,0);end;else q(cp,0);end;else if cp then if dp==1 then return Sp[gp]();else return Sp[gp](E(Sp,gp+0X1,up));end;elseif not(gp)then else do return E(Sp,gp,dp);end;end;end;end;end;else if Sc~=0X001C then ic=function(...)local Gq,eq=1,({});local Vq=(k and k()or _ENV);local Aq,Cq=q3(...);local oq=((Vq==H and fc or Vq));local xq,Wq=0,({[1]=eq,[2]=Vc});Aq=Aq-1;for Lq=0,Aq do if not(ac>Lq)then do break;end;else(eq)[Lq]=Cq[Lq+0X001];end;end;if not nc then Cq=nil;elseif Ac then eq[ac]={n=Aq>=ac and Aq-ac+1 or 0,E(Cq,ac+0X1,Aq+0X1)};end;if oq~=Vq then if s then(s)(ic,oq);else _ENV=oq;end;end;local cq,wq,yq,Zq=c(function()do while true do local ge=(bc[Gq]);local pe=(ge[3]);Gq=Gq+0X1;if not(pe<15)then if pe<0x16 then do if not(pe>=18)then do if pe>=16 then if pe~=0X00011 then local rW=(jc[0x1]);do eq[0X2]=rW[1][rW[2]];end;ge=bc[Gq];do Gq=Gq+0X1;end;do(eq)[0X2]=eq[2][ge[1]];end;Gq=Gq+0X00001;do Gq=Gq+0X1;end;Gq=Gq+0X00001;do eq[0X003]=eq[1];end;Gq=Gq+1;rW=jc[0X0];(eq)[0X0004]=rW[0x001][rW[2]];Gq=Gq+1;(eq)[5]=nil;Gq=Gq+0x0001;eq[0X006]={};local gW=2;ge=bc[Gq];Gq=Gq+1;eq[6][ge[6]]=ge[1];Gq=Gq+0X1;xq=gW+5-0X1;(eq[gW])(E(eq,gW+1,xq));do xq=gW-0X1;end;do Gq=Gq+1;end;Gq=Gq+1;do ge=bc[Gq];end;Gq=Gq+1;Gq=ge[0X05];else(eq)[ge[2]]={E({},1,ge[5])};end;else do for Id=ge[2],ge[0X5]do do eq[Id]=nil;end;end;end;end;end;else if not(pe<20)then if pe~=0X15 then(eq)[ge[2]]=eq[ge[0X005]]^eq[ge[4]];else(eq)[ge[2]]=oq[ge[6]];end;else if pe~=0X13 then local Pt=(ge[2]);local ct,Ct,Qt=eq[Pt]();if ct then(eq)[Pt+0x01]=Ct;eq[Pt+0X2]=Qt;Gq=ge[5];end;else local P4=jc[0X00001];(eq)[0X002]=P4[0X01][P4[2]];ge=bc[Gq];local W4=(0X2);Gq=Gq+1;(eq)[0X2]=eq[0X2][ge[0X1]];Gq=Gq+1;eq[3]=eq[1];Gq=Gq+1;eq[W4]=eq[W4](eq[W4+0X1]);xq=W4;Gq=Gq+1;do Gq=Gq+0x0001;end;ge=bc[Gq];Gq=Gq+0X1;do if not eq[2]then Gq=ge[5];end;end;end;end;end;end;else if pe>=0X1a then if not(pe<28)then if pe==29 then(eq)[0X0000]=oq[ge[6]];Gq=Gq+0X1;Gq=Gq+0X1;Gq=Gq+0X1;xq=0;(eq)[xq]=eq[xq]();do ge=bc[Gq];end;Gq=Gq+0X01;do if eq[0]then Gq=ge[5];end;end;else eq[ge[0X002]]=Wq[ge[0x5]];end;else if pe==27 then do(eq)[ge[0x2]]=eq[ge[5]]<=eq[ge[0x4]];end;else if not(eq[ge[2]])then else Gq=ge[5];end;end;end;else if not(pe>=0X18)then if pe==23 then eq[ge[2]]=ge[0X6];else eq[0X0]=oq[ge[6]];Gq=Gq+1;Gq=Gq+1;do Gq=Gq+0X0001;end;xq=0X0;eq[xq]=eq[xq]();ge=bc[Gq];do Gq=Gq+1;end;(eq)[0X1]=oq[ge[6]];Gq=Gq+1;do Gq=Gq+0X1;end;Gq=Gq+1;(eq)[0X0000]=eq[0]-eq[0X00001];do ge=bc[Gq];end;do Gq=Gq+1;end;if ge[6]<eq[0X0]then do Gq=ge[2];end;end;end;else do if pe~=25 then(eq)[ge[2]]=eq[ge[0X5]][ge[0X0001]];else do(eq)[ge[2]]=w(eq[ge[5]],eq[ge[4]]);end;end;end;end;end;end;else do if pe>=7 then do if not(pe<11)then if not(pe<0XD)then if pe~=14 then local Z7=(jc[0x0]);(eq)[0]=Z7[1][Z7[0X2]];local h7=0X00;ge=bc[Gq];Gq=Gq+1;local E7=eq[0x0];eq[h7+0x0001]=E7;do eq[h7]=E7[ge[0X01]];end;Gq=Gq+1;do h7=0;end;eq[h7]=eq[h7](eq[h7+0X1]);xq=h7;do ge=bc[Gq];end;Gq=Gq+1;if not(not eq[0X00])then else Gq=ge[5];end;else if eq[ge[0x5]]<=eq[ge[4]]then Gq=ge[2];end;end;else do if pe~=0X00C then repeat local M1,Q1,N1=Lc,eq,(ge[2]);if#M1>0 then local Wd={};for e6,Z6 in M,M1 do do for Rw,rw in M,Z6 do do if rw[1]==Q1 and rw[2]>=N1 then local SR=(rw[0X00002]);if not(not Wd[SR])then else(Wd)[SR]={Q1[SR]};end;rw[0X001]=Wd[SR];rw[2]=0X1;end;end;end;end;end;end;until true;else end;end;end;else if not(pe<9)then do if pe~=0XA then repeat local i8,Q8=Lc,eq;if not(#i8>0)then else local cY=({});for FW,LW in M,i8 do do for YF,RF in M,LW do if RF[1]==Q8 and RF[2]>=0 then local XQ=(RF[0X2]);do if not cY[XQ]then cY[XQ]={Q8[XQ]};end;end;RF[1]=cY[XQ];RF[2]=1;end;end;end;end;end;until true;do return;end;else eq[0X5]=eq[0X4][ge[1]];Gq=Gq+0X01;do(eq)[1]=eq[0X5];end;do ge=bc[Gq];end;Gq=Gq+0X1;if not eq[0x1]then Gq=ge[5];end;end;end;else if pe==8 then(eq)[ge[0x02]]=eq[ge[0X0005]]<eq[ge[0X4]];else(eq)[ge[0X02]]=eq[ge[0X00005]]*eq[ge[4]];end;end;end;end;else if not(pe>=3)then if pe<0x1 then do(eq)[0X0]=oq[ge[6]];end;ge=bc[Gq];Gq=Gq+1;eq[0X0]=eq[0X0][ge[1]];Gq=Gq+0X0001;do Gq=Gq+0X001;end;do ge=bc[Gq];end;Gq=Gq+0X01;if not eq[0]then Gq=ge[5];end;else if pe~=0X2 then Gq=ge[0X5];else eq[0X1]=oq[ge[0x6]];Gq=Gq+1;Gq=Gq+1;ge=bc[Gq];do Gq=Gq+1;end;if eq[0X1]==ge[1]then else Gq=ge[2];end;end;end;else if pe<5 then do if pe~=4 then local Sj=nil;local Zj=(Uc[ge[0X00005]]);local Rj=(Zj[0X5]);local Lj=(#Rj);if not(Lj>0)then else Sj={};for B7=0X1,Lj do local o7=(Rj[B7]);if o7[1]~=0 then do(Sj)[B7-0X1]=jc[o7[2]];end;else Sj[B7-1]={eq,o7[0X02]};end;end;S(Lc,Sj);end;eq[ge[2]]=e3(Zj,Sj,oq);else do(eq)[0X0000]=oq[ge[6]];end;Gq=Gq+1;Gq=Gq+1;Gq=Gq+1;eq[1]={E({},1,0X4)};ge=bc[Gq];Gq=Gq+0X001;(eq)[0X00002]=ge[6];ge=bc[Gq];local k_=(nil);do Gq=Gq+0X0001;end;eq[0X003]=ge[6];ge=bc[Gq];do Gq=Gq+0x1;end;eq[0X0004]=ge[0X6];ge=bc[Gq];Gq=Gq+1;local M_=(0X1);do eq[0x5]=ge[6];end;local T_=eq[M_];do Gq=Gq+0X001;end;local q_=((0X1-1)*50);for y7=0X1,4 do T_[q_+y7]=eq[M_+y7];end;ge=bc[Gq];Gq=Gq+0X1;local R_=(Uc[ge[5]]);local H_=(R_[5]);local w_=3;local m_=(#H_);if not(m_>0)then else k_={};for rE=0X1,m_ do local OE=(H_[rE]);if OE[0X1]~=0 then(k_)[rE-0x00001]=jc[OE[2]];else(k_)[rE-0X1]={eq,OE[0x00002]};end;end;S(Lc,k_);end;eq[0X02]=e3(R_,k_,oq);Gq=Gq+1;M_=0X0;local z_=(0x3);if w_~=0X00 then xq=M_+w_-0X01;end;local G_,t_=nil,nil;if w_~=0X00001 then G_,t_=q3(eq[M_](E(eq,M_+1,xq)));else G_,t_=q3(eq[M_]());end;do if z_~=0X1 then if z_==0X0 then G_=G_+M_-1;xq=G_;else G_=M_+z_-0X02;do xq=G_+0X0001;end;end;local cx=0;for NA=M_,G_ do cx=cx+1;eq[NA]=t_[cx];end;else do xq=M_-0x1;end;end;end;Gq=Gq+1;Gq=Gq+1;do ge=bc[Gq];end;Gq=Gq+1;eq[2]=oq[ge[0X6]];Gq=Gq+1;do eq[3]=eq[0];end;Gq=Gq+0X00001;M_=2;w_=0X2;z_=0x4;if w_==0X00 then else xq=M_+w_-0X1;end;G_,t_=nil;if w_~=1 then G_,t_=q3(eq[M_](E(eq,M_+1,xq)));else G_,t_=q3(eq[M_]());end;if z_==1 then xq=M_-1;else if z_==0 then do G_=G_+M_-0X1;end;xq=G_;else G_=M_+z_-2;xq=G_+1;end;local LF=(0);for eO=M_,G_ do do LF=LF+1;end;(eq)[eO]=t_[LF];end;end;ge=bc[Gq];Gq=Gq+0x001;M_=2;local Y_=P(function(...)(C)();do for jv,mv in...do C(true,jv,mv);end;end;end);(Y_)(eq[M_],eq[M_+0X1],eq[M_+2]);xq=M_;do eq[M_]=Y_;end;Gq=ge[0X5];end;end;else if pe~=6 then local rc=jc[0];eq[0x05]=rc[1][rc[2]];local Kc=5;Gq=Gq+0x1;Gq=Gq+0X1;do ge=bc[Gq];end;Gq=Gq+1;local Ec=(eq[0x5]);eq[Kc+1]=Ec;do(eq)[Kc]=Ec[ge[0X1]];end;do Gq=Gq+0X1;end;Kc=5;eq[Kc](eq[Kc+0X1]);xq=Kc-0x00001;ge=bc[Gq];Gq=Gq+0x1;(eq)[0X5]=eq[4][ge[0X1]];Gq=Gq+0X00001;xq=0X5;eq[xq]();xq=xq-1;do ge=bc[Gq];end;Gq=Gq+1;Gq=ge[5];else local FZ,AZ=ge[0x02],(ge[5]);if AZ==0 then else xq=FZ+AZ-1;end;local MZ,XZ,rZ=nil,nil,(ge[4]);if AZ~=0x1 then MZ,XZ=q3(eq[FZ](E(eq,FZ+0X0001,xq)));else MZ,XZ=q3(eq[FZ]());end;if rZ~=0X00001 then if rZ==0 then MZ=MZ+FZ-1;xq=MZ;else MZ=FZ+rZ-0X2;xq=MZ+1;end;local GA=0X0;for jC=FZ,MZ do GA=GA+0X00001;(eq)[jC]=XZ[GA];end;else xq=FZ-0X1;end;end;end;end;end;end;end;end;end;end);if not(cq)then if V(wq)~="string"then(q)(wq,0X0);else if not(r(wq,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if r(wq,"^.-:%d+: ")then(q)("Luraph Script:"..(Qc[Gq-1]or"\040inte\114\110al\041")..": "..u(wq),0X0);else q(wq,0x00);end;end;end;else if wq then if Zq~=0X1 then return eq[yq](E(eq,yq+0X00001,xq));else return eq[yq]();end;elseif not(yq)then else do return E(eq,yq,Zq);end;end;end;end;else do ic=function(...)local ci,Wi=0,({});local qi=(0X01);local ti=(k and k()or _ENV);local Pi=(ti==H and fc or ti);local ji,Fi=q3(...);local oi=({[2]=Vc,[1]=Wi});ji=ji-0X1;do for Jp=0,ji do if ac>Jp then(Wi)[Jp]=Fi[Jp+0X001];else break;end;end;end;if not nc then Fi=nil;elseif Ac then do(Wi)[ac]={n=ji>=ac and ji-ac+0X00001 or 0x0,E(Fi,ac+0X001,ji+1)};end;end;do if Pi==ti then else if s then s(ic,Pi);else _ENV=Pi;end;end;end;do while true do local eo=bc[qi];local lo=eo[0X3];do qi=qi+1;end;do return(function(E,m,...)return Client.PlayerGui.Main.Level.Exp.Text:find("ends");end)(Wi,jc,...);end;end;end;end;end;end;end;end;else if Sc>=0X19 then do if Sc~=26 then ic=function(...)local PH,GH=1,{};local qH=(k and k()or _ENV);local gH,xH={[2]=Vc,[1]=GH},0X0;local YH,pH=q3(...);YH=YH-1;local BH=(qH==H and fc or qH);for Tf=0x00,YH do if ac>Tf then(GH)[Tf]=pH[Tf+0X1];else break;end;end;if not nc then pH=nil;elseif not(Ac)then else(GH)[ac]={n=YH>=ac and YH-ac+0X0001 or 0,E(pH,ac+0X1,YH+1)};end;do if BH==qH then else do if not(s)then _ENV=BH;else(s)(ic,BH);end;end;end;end;local UH,cH,dH,kH=c(function()while true do local uM=bc[PH];local mM=(uM[3]);PH=PH+0X00001;if not(mM<0x0012)then if mM>=0X1B then if not(mM>=32)then if mM>=0X1d then if not(mM<0X1e)then if mM==31 then(GH)[uM[2]]=v(GH[uM[0X5]],GH[uM[0x4]]);else local eG=(uM[2]);local mG=P(function(...)(C)();for We,ue,xe,pe,De,ae,ye,be,Fe,Xe in...do C(true,{We,ue,xe,pe,De,ae,ye,be,Fe,Xe});end;end);mG(GH[eG],GH[eG+1],GH[eG+0X2]);do xH=eG;end;(GH)[eG]=mG;PH=uM[0X0005];end;else(GH)[uM[0X2]]=BH[uM[6]];end;else if mM==0X01c then(GH)[uM[2]]={};else GH[0X0000]=BH[uM[6]];do PH=PH+0X1;end;PH=PH+0X1;uM=bc[PH];PH=PH+0x1;do if not(not GH[0X0])then else PH=uM[5];end;end;end;end;else if mM>=34 then if not(mM>=35)then GH[uM[2]]={E({},0X1,uM[5])};else if mM~=36 then do GH[uM[0X2]]=Q(GH[uM[0X5]]);end;else end;end;else if mM~=33 then repeat local Y8,l8=Lc,GH;do if not(#Y8>0X0)then else local Kt=({});do for IH,OH in M,Y8 do do for TX,OX in M,OH do do if OX[0x1]==l8 and OX[2]>=0X0 then local zy=OX[0X2];if not(not Kt[zy])then else do(Kt)[zy]={l8[zy]};end;end;OX[0X00001]=Kt[zy];(OX)[2]=1;end;end;end;end;end;end;end;end;until true;return;else do(GH)[uM[2]]=uM[0X6];end;end;end;end;else if not(mM>=0X0016)then if not(mM<20)then if mM==21 then(GH)[6]=GH[0x5][uM[1]];PH=PH+1;PH=PH+1;uM=bc[PH];PH=PH+1;if GH[6]~=uM[1]then else PH=uM[0X00002];end;else do BH[uM[0x6]]=GH[uM[2]];end;end;else if mM~=0X13 then GH[0]=BH[uM[6]];PH=PH+0x01;PH=PH+1;uM=bc[PH];PH=PH+1;(GH)[0]=GH[0X00000][uM[1]];PH=PH+0X1;PH=PH+1;uM=bc[PH];PH=PH+1;if not GH[0]then do PH=uM[0x5];end;end;else do repeat local au,gu,Du=Lc,GH,(uM[0X2]);if not(#au>0)then else local ug={};do for jW,IW in M,au do for KW,QW in M,IW do if not(QW[1]==gu and QW[0X02]>=Du)then else local Vi=(QW[2]);do if not ug[Vi]then ug[Vi]={gu[Vi]};end;end;(QW)[1]=ug[Vi];(QW)[0x2]=1;end;end;end;end;end;until true;end;end;end;else if mM>=24 then do if not(mM>=0X19)then do if not(not GH[uM[2]])then else PH=uM[0X0005];end;end;else if mM==0x1A then PH=uM[5];else do GH[0X000]=BH[uM[0X06]];end;do PH=PH+0X0001;end;PH=PH+1;uM=bc[PH];PH=PH+1;(GH)[0x0]=GH[0][uM[0x0001]];uM=bc[PH];do PH=PH+0X1;end;if not GH[0X00000]then PH=uM[5];end;end;end;end;else if mM~=0X00017 then local S0=Uc[uM[0X5]];local Y0=(S0[5]);local B0,Q0=#Y0,(nil);if not(B0>0X00000)then else Q0={};do for aw=1,B0 do local Aw=(Y0[aw]);if Aw[0X1]==0 then Q0[aw-0X00001]={GH,Aw[0X2]};else do(Q0)[aw-1]=jc[Aw[0x2]];end;end;end;end;(S)(Lc,Q0);end;(GH)[uM[0X2]]=e3(S0,Q0,BH);else if not(GH[uM[0x00005]]<GH[uM[4]])then else PH=uM[0X2];end;end;end;end;end;else if not(mM>=0X9)then if not(mM<0X4)then if mM<0X6 then if mM~=5 then do(GH)[7]=GH[5][uM[0X1]];end;PH=PH+1;PH=PH+1;local en=0X2;uM=bc[PH];local fn=(GH[7]);do PH=PH+1;end;local xn=0X7;(GH)[xn+0X1]=fn;GH[xn]=fn[uM[0x1]];PH=PH+1;xn=0X7;GH[xn]=GH[xn](GH[xn+1]);do xH=xn;end;uM=bc[PH];do PH=PH+0X1;end;xn=0X7;fn=GH[7];do(GH)[xn+0x1]=fn;end;GH[xn]=fn[uM[1]];uM=bc[PH];do PH=PH+1;end;xn=9;fn=GH[1];(GH)[xn+0X1]=fn;GH[xn]=fn[uM[0x1]];PH=PH+1;do xn=0X9;end;local Zn=0;if en==0X0 then else do xH=xn+en-0X00001;end;end;local Bn,mn=nil,nil;if en==1 then Bn,mn=q3(GH[xn]());else Bn,mn=q3(GH[xn](E(GH,xn+0x1,xH)));end;if Zn~=0X1 then do if Zn~=0X00000 then Bn=xn+Zn-2;do xH=Bn+1;end;else Bn=Bn+xn-0X1;xH=Bn;end;end;local ws=0;do for Ec=xn,Bn do ws=ws+0X1;do(GH)[Ec]=mn[ws];end;end;end;else xH=xn-1;end;PH=PH+1;do xn=7;end;GH[xn]=GH[xn](E(GH,xn+1,xH));xH=xn;uM=bc[PH];PH=PH+0x1;do if not(not GH[7])then else PH=uM[0X005];end;end;else local OP=(uM[0X4]-0X01)*0X00032;local JP=(uM[0x2]);local DP=GH[JP];do for x_=0X1,uM[5]do(DP)[OP+x_]=GH[JP+x_];end;end;end;else if mM<0x7 then for FR=uM[2],uM[5]do do(GH)[FR]=nil;end;end;else if mM==0X00008 then GH[0]=BH[uM[0X006]];uM=bc[PH];PH=PH+1;(GH)[0x0]=GH[0X0000][uM[0x1]];do uM=bc[PH];end;PH=PH+0X01;GH[0]=GH[0][uM[1]];PH=PH+1;PH=PH+1;uM=bc[PH];PH=PH+1;if not(GH[0x0]<=uM[1])then PH=uM[2];end;else(GH)[0X0]=BH[uM[0X06]];PH=PH+1;PH=PH+0X1;PH=PH+1;xH=0;GH[xH]();do xH=xH-1;end;do PH=PH+0x001;end;PH=PH+1;uM=bc[PH];do PH=PH+1;end;do PH=uM[5];end;end;end;end;else if mM<0X2 then do if mM~=1 then(GH)[0]=BH[uM[6]];uM=bc[PH];do PH=PH+0X1;end;do GH[1]=BH[uM[0X6]];end;do PH=PH+0X001;end;PH=PH+1;do uM=bc[PH];end;PH=PH+1;(GH)[1]=GH[0X1][uM[0X1]];do PH=PH+1;end;do PH=PH+1;end;uM=bc[PH];PH=PH+0x1;if not(GH[1])then else PH=uM[5];end;else local MQ,IQ,DQ=uM[2],uM[0X5],uM[0x04];if IQ==0 then else do xH=MQ+IQ-0X01;end;end;local AQ,lQ=nil,(nil);if IQ==0X1 then AQ,lQ=q3(GH[MQ]());else AQ,lQ=q3(GH[MQ](E(GH,MQ+0X1,xH)));end;if DQ~=1 then if DQ~=0x0 then AQ=MQ+DQ-0X2;do xH=AQ+0X1;end;else AQ=AQ+MQ-0X01;xH=AQ;end;local pl=(0X00);for EK=MQ,AQ do pl=pl+0x1;GH[EK]=lQ[pl];end;else xH=MQ-1;end;end;end;else if mM~=3 then local eb=(GH[uM[0X5]]/GH[uM[0X4]]);GH[uM[2]]=eb-eb%0X1;else repeat local As,Os=Lc,(GH);if#As>0 then local fI={};for yM,RM in M,As do for C9,w9 in M,RM do if not(w9[0X00001]==Os and w9[0X02]>=0X000)then else local xy=w9[2];if not(not fI[xy])then else(fI)[xy]={Os[xy]};end;do(w9)[0X0001]=fI[xy];end;(w9)[2]=0X1;end;end;end;end;until true;local b5=(uM[0X002]);return false,b5,b5+uM[5]-0X002;end;end;end;else if mM<0X00D then if not(mM>=11)then if mM==10 then GH[3]=BH[uM[6]];local D5=0X2;PH=PH+1;PH=PH+0X1;uM=bc[PH];do PH=PH+1;end;local u5=(0X04);(GH)[0X4]=BH[uM[0x6]];do PH=PH+0X1;end;PH=PH+0x1;uM=bc[PH];PH=PH+0X1;do(GH)[4]=GH[4][uM[0x1]];end;PH=PH+0X0001;PH=PH+1;uM=bc[PH];PH=PH+1;local L5=GH[4];(GH)[u5+1]=L5;GH[u5]=L5[uM[0X00001]];PH=PH+1;do u5=4;end;local g5=0;if D5==0 then else xH=u5+D5-1;end;local n5,X5=nil,nil;if D5==1 then do n5,X5=q3(GH[u5]());end;else do n5,X5=q3(GH[u5](E(GH,u5+1,xH)));end;end;if g5==0X001 then do xH=u5-1;end;else if g5==0 then n5=n5+u5-0X1;do xH=n5;end;else n5=u5+g5-0X002;do xH=n5+1;end;end;local yR=0;do for ov=u5,n5 do yR=yR+1;do(GH)[ov]=X5[yR];end;end;end;end;do PH=PH+0X1;end;u5=0x3;D5=0X00000;do g5=4;end;if D5~=0x0 then xH=u5+D5-1;end;n5,X5=nil;do if D5~=1 then do n5,X5=q3(GH[u5](E(GH,u5+1,xH)));end;else n5,X5=q3(GH[u5]());end;end;do if g5==0X01 then xH=u5-1;else if g5~=0X0 then n5=u5+g5-2;xH=n5+1;else n5=n5+u5-0X001;xH=n5;end;local Ny=0;for db=u5,n5 do Ny=Ny+0x1;GH[db]=X5[Ny];end;end;end;uM=bc[PH];PH=PH+1;u5=3;local o5=(P(function(...)C();for ib,hb in...do(C)(true,ib,hb);end;end));(o5)(GH[u5],GH[u5+0x1],GH[u5+0x2]);do xH=u5;end;do GH[u5]=o5;end;PH=uM[0x5];else(GH)[0X6]=BH[uM[6]];PH=PH+0x0001;PH=PH+0X01;do uM=bc[PH];end;local uN,MN=nil,6;PH=PH+1;local ON=Uc[uM[0X5]];local BN=(ON[0X5]);local EN=(#BN);if EN>0x0000 then do uN={};end;for hu=0X1,EN do local vu=BN[hu];if vu[1]~=0X00 then do(uN)[hu-1]=jc[vu[0x002]];end;else uN[hu-0X1]={GH,vu[0X00002]};end;end;S(Lc,uN);end;(GH)[0X7]=e3(ON,uN,BH);do PH=PH+0X1;end;(GH[MN])(GH[MN+1]);do xH=MN-0X1;end;uM=bc[PH];PH=PH+0X00001;PH=uM[5];end;else if mM~=0XC then do GH[0x0]=BH[uM[6]];end;PH=PH+0X0001;do PH=PH+0X1;end;uM=bc[PH];PH=PH+0X0001;do GH[1]=uM[6];end;local HU=(0);PH=PH+0X0001;GH[HU]=GH[HU](GH[HU+1]);xH=HU;PH=PH+1;PH=PH+0X00001;uM=bc[PH];PH=PH+0x1;if not GH[0X00000]then PH=uM[0X05];end;else GH[uM[2]]=GH[uM[0X5]][GH[uM[4]]];end;end;else if not(mM<0X0F)then if not(mM>=16)then if not(GH[uM[2]])then else PH=uM[0X5];end;else if mM==0X0011 then local N1=(uM[0X002]);local T1=(P(function(...)(C)();for wP,vP in...do(C)(true,wP,vP);end;end));T1(GH[N1],GH[N1+0X0001],GH[N1+2]);xH=N1;do GH[N1]=T1;end;PH=uM[0x0005];else do gH[uM[0X5]]=GH[uM[2]];end;end;end;else if mM==0X000E then do(GH)[0X7]=GH[5][uM[0x001]];end;local Bs=7;do PH=PH+1;end;PH=PH+1;do uM=bc[PH];end;do PH=PH+1;end;local vs=(GH[0X7]);do(GH)[Bs+1]=vs;end;GH[Bs]=vs[uM[0X001]];PH=PH+1;do Bs=7;end;(GH)[Bs]=GH[Bs](GH[Bs+0X1]);xH=Bs;uM=bc[PH];PH=PH+1;Bs=7;do vs=GH[7];end;GH[Bs+1]=vs;(GH)[Bs]=vs[uM[1]];uM=bc[PH];do PH=PH+0X1;end;(GH)[9]=uM[6];PH=PH+0X1;Bs=7;do GH[Bs]=GH[Bs](GH[Bs+0X00001],GH[Bs+2]);end;xH=Bs;PH=PH+1;PH=PH+1;uM=bc[PH];PH=PH+0x01;if not GH[7]then PH=uM[5];end;else local Sr=uM[2];local er,Hr,Lr=GH[Sr]();if er then GH[Sr+0X1]=Hr;do(GH)[Sr+2]=Lr;end;do PH=uM[0X5];end;end;end;end;end;end;end;end;end);if UH then if cH then if kH~=1 then do return GH[dH](E(GH,dH+1,xH));end;else do return GH[dH]();end;end;elseif not(dH)then else return E(GH,dH,kH);end;else if V(cH)=="string"then if r(cH,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if r(cH,'\094.\045\058\037\100+\058\032')then(q)("Luraph Script:"..(Qc[PH-1]or"(internal)")..": "..u(cH),0);else q(cH,0);end;else(q)(cH,0);end;end;end;else ic=function(...)local i7,I7=0X01,{};local M7={[2]=Vc,[1]=I7};local E7=((k and k()or _ENV));local G7=(E7==H and fc or E7);local J7=(0);local n7,z7=q3(...);n7=n7-1;do for eB=0X0,n7 do if ac>eB then(I7)[eB]=z7[eB+0x1];else break;end;end;end;if not nc then do z7=nil;end;elseif Ac then do(I7)[ac]={n=n7>=ac and n7-ac+1 or 0,E(z7,ac+1,n7+1)};end;end;if G7==E7 then else if not(s)then _ENV=G7;else(s)(ic,G7);end;end;local j7,A7,o7,w7=c(function()while true do local Xb=(bc[i7]);local Rb=(Xb[3]);do i7=i7+0X1;end;if not(Rb>=0xa)then if Rb<0X05 then do if not(Rb>=2)then if Rb~=1 then else for qR=Xb[0X2],Xb[5]do(I7)[qR]=nil;end;end;else if Rb>=3 then do if Rb~=4 then do(I7)[0]=G7[Xb[6]];end;i7=i7+1;local qa=0;i7=i7+0X00001;Xb=bc[i7];i7=i7+1;I7[1]=Xb[6];i7=i7+1;do(I7)[qa]=I7[qa](I7[qa+0X1]);end;J7=qa;i7=i7+1;do i7=i7+1;end;Xb=bc[i7];do i7=i7+0x1;end;do if not(not I7[0x000])then else i7=Xb[0x5];end;end;else I7[Xb[0X00002]]=w(I7[Xb[0X005]],I7[Xb[4]]);end;end;else I7[0]=G7[Xb[6]];do Xb=bc[i7];end;i7=i7+0x1;(I7)[0x0001]=Xb[0x6];do Xb=bc[i7];end;do i7=i7+0x001;end;I7[0X2]=Xb[0x6];do Xb=bc[i7];end;i7=i7+1;do(I7)[3]=Xb[0X006];end;local Se=0;i7=i7+1;do J7=Se+0X4-1;end;I7[Se]=I7[Se](E(I7,Se+0X1,J7));J7=Se;Xb=bc[i7];do i7=i7+1;end;if I7[0x0]~=Xb[0x1]then else i7=Xb[2];end;end;end;end;else do if Rb<0X7 then if Rb==0X0006 then I7[Xb[2]]=Xb[0x00006];else local J5,W5=Xb[0x2],(Xb[0X005]);do J7=J5+W5-0x1;end;repeat local SY,GY=Lc,(I7);if not(#SY>0X0)then else local We=({});do for xV,ZV in M,SY do do for GD,ID in M,ZV do if ID[0X0001]==GY and ID[2]>=0 then local Fl=(ID[2]);if not(not We[Fl])then else We[Fl]={GY[Fl]};end;ID[1]=We[Fl];(ID)[0X2]=1;end;end;end;end;end;end;until true;return true,J5,W5;end;else do if Rb<0x8 then do(I7)[Xb[2]]=not I7[Xb[5]];end;else do if Rb==0X9 then(I7)[Xb[0X2]]=I7[Xb[0X5]]~=I7[Xb[4]];else local yN=Uc[Xb[0X05]];local oN,WN=yN[5],nil;local FN=#oN;do if not(FN>0X0)then else WN={};for yc=0X1,FN do local Tc=(oN[yc]);do if Tc[0x0001]==0 then(WN)[yc-0X00001]={I7,Tc[0X2]};else do(WN)[yc-0X1]=jc[Tc[0x02]];end;end;end;end;S(Lc,WN);end;end;do(I7)[Xb[2]]=e3(yN,WN,G7);end;end;end;end;end;end;end;end;else do if Rb>=0Xf then do if Rb<0x12 then do if Rb>=0x00010 then do if Rb~=0X11 then(I7)[0]=G7[Xb[6]];i7=i7+0X1;do i7=i7+0X0001;end;do Xb=bc[i7];end;do i7=i7+1;end;(I7)[0X0]=I7[0][Xb[1]];i7=i7+0X1;i7=i7+1;do Xb=bc[i7];end;i7=i7+0X1;do if not(not I7[0])then else i7=Xb[5];end;end;else(I7)[Xb[0X2]]=G7[Xb[0X6]];end;end;else(I7)[Xb[2]]={E({},1,Xb[5])};end;end;else do if Rb>=0X013 then if Rb~=20 then do i7=Xb[5];end;else local L1=(Xb[2]);do for aN=L1,L1+(Xb[0X0005]-1)do I7[aN]=z7[ac+(aN-L1)+1];end;end;end;else(I7)[Xb[0X002]]=T(I7[Xb[0X5]],I7[Xb[4]]);end;end;end;end;else if not(Rb<12)then do if Rb>=13 then if Rb~=14 then repeat local lt,Ht=Lc,I7;if not(#lt>0)then else local vC=({});for Va,pa in M,lt do for yd,Dd in M,pa do do if not(Dd[1]==Ht and Dd[0X2]>=0X0)then else local as=Dd[0x2];if not(not vC[as])then else do vC[as]={Ht[as]};end;end;do Dd[1]=vC[as];end;(Dd)[2]=1;end;end;end;end;end;until true;return;else if not(I7[Xb[2]])then else do i7=Xb[5];end;end;end;else local tl=Xb[2];local al=P(function(...)C();for ij,Mj,uj,sj,Fj,Wj,Sj,Nj,Yj,cj in...do(C)(true,{ij,Mj,uj,sj,Fj,Wj,Sj,Nj,Yj,cj});end;end);(al)(I7[tl],I7[tl+0X1],I7[tl+0x0002]);do J7=tl;end;I7[tl]=al;i7=Xb[5];end;end;else if Rb==0X0000b then I7[1]=true;Xb=bc[i7];do i7=i7+1;end;(G7)[Xb[6]]=I7[1];Xb=bc[i7];do i7=i7+0X0001;end;do i7=Xb[5];end;else if I7[Xb[0X5]]~=Xb[0X1]then i7=Xb[0x002];end;end;end;end;end;end;end;end);if j7 then if A7 then if w7~=1 then return I7[o7](E(I7,o7+1,J7));else return I7[o7]();end;elseif not(o7)then else return E(I7,o7,w7);end;else if V(A7)=="string"then if r(A7,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(A7,"\094\046\045\058%\100\043:\032"))then(q)(A7,0X000);else(q)("Luraph Script:"..(Qc[i7-1]or"(internal)")..'\058 '..u(A7),0X0);end;else(q)(A7,0x00000);end;end;end;end;end;else do if Sc~=0x0018 then ic=function(...)local BW=1;local IW=({});local iW=(k and k()or _ENV);local EW={[2]=Vc,[1]=IW};local yW,jW=q3(...);yW=yW-1;local NW=((iW==H and fc or iW));for Tl=0X0,yW do if not(ac>Tl)then break;else IW[Tl]=jW[Tl+0X1];end;end;local sW=0X000;if not nc then jW=nil;elseif not(Ac)then else IW[ac]={n=yW>=ac and yW-ac+0X001 or 0X0,E(jW,ac+0x0001,yW+1)};end;if NW==iW then else if not(s)then _ENV=NW;else s(ic,NW);end;end;local uW,vW,tW,gW=c(function()while true do local Pu=(bc[BW]);local gu=Pu[3];do BW=BW+0x00001;end;if gu>=7 then if not(gu>=10)then if not(gu<0X0008)then do if gu~=9 then do IW[Pu[2]]=NW[Pu[0X6]];end;else do(IW)[Pu[2]]={E({},1,Pu[5])};end;end;end;else end;else do if gu<12 then if gu==0X0000B then if not(IW[Pu[0x05]]<IW[Pu[0X4]])then else BW=Pu[0X002];end;else do if not(not IW[Pu[2]])then else BW=Pu[0X05];end;end;end;else do if gu~=13 then local SU=(Uc[Pu[5]]);local fU=SU[5];local TU=(#fU);local CU=nil;do if not(TU>0X0000)then else CU={};for c_=1,TU do local x_=(fU[c_]);do if x_[0X01]==0x0000 then do CU[c_-0X1]={IW,x_[2]};end;else(CU)[c_-0X01]=jc[x_[2]];end;end;end;S(Lc,CU);end;end;IW[Pu[2]]=e3(SU,CU,NW);else(IW)[Pu[2]]=IW[Pu[5]]^IW[Pu[4]];end;end;end;end;end;else if not(gu>=3)then if gu>=0X00001 then if gu~=0X00002 then IW[Pu[2]]=IW[Pu[0X5]]<IW[Pu[0X0004]];else do BW=Pu[0x5];end;end;else do IW[Pu[0X2]]=IW[Pu[0x5]][IW[Pu[4]]];end;end;else do if gu<5 then if gu~=4 then do IW[Pu[2]]=Pu[0X00006];end;else IW[Pu[0X2]]=Q(IW[Pu[0x5]]);end;else if gu~=6 then IW[0X0]=NW[Pu[6]];local xF=(0x1);Pu=bc[BW];BW=BW+1;IW[1]=NW[Pu[0x6]];BW=BW+1;do BW=BW+1;end;do Pu=bc[BW];end;BW=BW+1;do IW[2]=Pu[0X06];end;do BW=BW+0X0001;end;(IW)[0X3]=true;do BW=BW+1;end;(IW)[xF]=IW[xF](IW[xF+1],IW[xF+0X2]);do sW=xF;end;Pu=bc[BW];BW=BW+1;(IW)[1]=IW[0X1][Pu[1]];do BW=BW+1;end;do BW=BW+1;end;Pu=bc[BW];BW=BW+0X1;(IW)[0X00001]=IW[1][Pu[1]];Pu=bc[BW];BW=BW+0X001;(IW[0X000])[Pu[0x6]]=IW[1];do BW=BW+1;end;repeat local UK,GK=Lc,(IW);if not(#UK>0)then else local bo={};do for dX,aX in M,UK do for BS,QS in M,aX do if not(QS[1]==GK and QS[0X2]>=0)then else local gS=QS[2];do if not bo[gS]then bo[gS]={GK[gS]};end;end;QS[0X1]=bo[gS];(QS)[0X2]=1;end;end;end;end;end;until true;return;else repeat local ZU,mU,nU=Lc,IW,Pu[2];if not(#ZU>0)then else local EY=({});do for Il,Pl in M,ZU do for Qy,qy in M,Pl do if qy[0X001]==mU and qy[0X2]>=nU then local Ft=qy[2];if not(not EY[Ft])then else do EY[Ft]={mU[Ft]};end;end;qy[1]=EY[Ft];qy[0X002]=1;end;end;end;end;end;until true;end;end;end;end;end;end;end);if not(uW)then do if V(vW)=="string"then do if r(vW,"\097t\116\101\109\112\116 to yie\108d\032a\099r\111s\115 \109e\116ame\116ho\100\047\067%\045\099\097l\108\032b\111u\110d\097\114\121")then do return coroutine.yield();end;end;end;if not(r(vW,"^.-:%d+: "))then(q)(vW,0);else q("Luraph Script:"..(Qc[BW-1]or"(internal)")..": "..u(vW),0);end;else q(vW,0);end;end;else if vW then if gW==0x1 then return IW[tW]();else return IW[tW](E(IW,tW+0X1,sW));end;elseif not(tW)then else return E(IW,tW,gW);end;end;end;else ic=function(...)local A5,H5=0X0001,({});local S5=((k and k()or _ENV));local j5,m5=q3(...);local R5=({[2]=Vc,[1]=H5});j5=j5-0X001;local J5=(S5==H and fc or S5);for Hb=0,j5 do do if not(ac>Hb)then break;else(H5)[Hb]=m5[Hb+0X00001];end;end;end;if not nc then m5=nil;elseif Ac then do H5[ac]={n=j5>=ac and j5-ac+0x1 or 0,E(m5,ac+1,j5+0x1)};end;end;local Q5=(0X000);do if J5==S5 then else if not(s)then do _ENV=J5;end;else s(ic,J5);end;end;end;while true do local lZ=bc[A5];local tZ=lZ[0x03];do A5=A5+0X1;end;return(function(v,Z,...)local q={...};local L=network:Send("CommE",...);return L;end)(H5,jc,...);end;end;end;end;end;end;else if not(Sc>=0X13)then if Sc<17 then if Sc==0X10 then do ic=function(...)local ra=0;local Xa=({});local ia=((k and k()or _ENV));local La=1;local ga={[1]=Xa,[2]=Vc};local ma,Pa=q3(...);local ya=((ia==H and fc or ia));ma=ma-0X01;do for Nm=0X000,ma do do if ac>Nm then Xa[Nm]=Pa[Nm+1];else break;end;end;end;end;if not nc then Pa=nil;elseif Ac then(Xa)[ac]={n=ma>=ac and ma-ac+0X1 or 0,E(Pa,ac+0X001,ma+1)};end;do if ya==ia then else if s then(s)(ic,ya);else _ENV=ya;end;end;end;local ca,Za,za,fa=c(function()while true do local QZ=(bc[La]);local mZ=(QZ[3]);La=La+1;do if not(mZ<11)then if not(mZ>=16)then if mZ<13 then if mZ~=12 then do(Xa)[0]={};end;QZ=bc[La];do La=La+0X1;end;(Xa)[0X1]=ya[QZ[6]];do QZ=bc[La];end;La=La+0x0001;local lB=(0X2);do(Xa)[2]=ya[QZ[0x6]];end;La=La+1;La=La+1;local wB=(2);QZ=bc[La];do La=La+1;end;local zB=(Xa[0X2]);Xa[wB+1]=zB;Xa[wB]=zB[QZ[1]];do La=La+0x1;end;wB=0X2;local nB=(0);if lB==0X0 then else do ra=wB+lB-1;end;end;local iB,mB=nil,nil;if lB==0X1 then iB,mB=q3(Xa[wB]());else iB,mB=q3(Xa[wB](E(Xa,wB+0X1,ra)));end;do if nB~=1 then if nB==0 then iB=iB+wB-1;ra=iB;else iB=wB+nB-0x2;do ra=iB+0X01;end;end;local wR=(0);do for es=wB,iB do wR=wR+1;Xa[es]=mB[wR];end;end;else ra=wB-1;end;end;La=La+1;wB=1;lB=0;nB=4;if lB==0X0 then else do ra=wB+lB-0X1;end;end;iB,mB=nil;if lB==1 then iB,mB=q3(Xa[wB]());else iB,mB=q3(Xa[wB](E(Xa,wB+0x1,ra)));end;if nB==1 then ra=wB-1;else if nB~=0 then iB=wB+nB-0X2;ra=iB+1;else do iB=iB+wB-0x1;end;do ra=iB;end;end;local sv=0;for Ln=wB,iB do sv=sv+0X001;Xa[Ln]=mB[sv];end;end;do QZ=bc[La];end;do La=La+1;end;wB=0x00001;local aB=(P(function(...)C();for s5,R5 in...do C(true,s5,R5);end;end));aB(Xa[wB],Xa[wB+1],Xa[wB+2]);ra=wB;Xa[wB]=aB;do La=QZ[5];end;else Xa[QZ[2]]=QZ[0X06];end;else if mZ<14 then do Xa[QZ[2]]=ya[QZ[6]];end;else if mZ~=0X000f then local V8,m8=0X04,Xa[0X3];(Xa)[V8+1]=m8;(Xa)[V8]=m8[QZ[0X1]];QZ=bc[La];do La=La+1;end;Xa[6]=QZ[6];La=La+0X0001;V8=0x0004;(Xa)[V8]=Xa[V8](Xa[V8+0X00001],Xa[V8+2]);do ra=V8;end;do La=La+1;end;La=La+0x0001;QZ=bc[La];La=La+0X1;if Xa[4]then La=QZ[5];end;else(Xa)[QZ[2]]=o(Xa[QZ[5]],Xa[QZ[0X4]]);end;end;end;else if mZ<19 then if not(mZ<17)then if mZ~=0X12 then(Xa)[QZ[0x2]]=Xa[QZ[5]];else repeat local fx,Gx=Lc,(Xa);if not(#fx>0)then else local uL={};do for Qj,Aj in M,fx do for P5,D5 in M,Aj do if D5[0X1]==Gx and D5[2]>=0 then local m7=D5[2];if not uL[m7]then(uL)[m7]={Gx[m7]};end;D5[1]=uL[m7];D5[2]=0X001;end;end;end;end;end;until true;local aV=QZ[2];return false,aV,aV;end;else end;else if mZ>=0X000014 then if mZ~=21 then ga[QZ[5]]=Xa[QZ[2]];else do for Q5=QZ[2],QZ[0x0005]do(Xa)[Q5]=nil;end;end;end;else local iz=(QZ[0X5]);local oz=(QZ[0X4]);local Zz=(QZ[2]);if iz~=0 then ra=Zz+iz-1;end;local mz,Kz=nil,(nil);if iz==1 then do mz,Kz=q3(Xa[Zz]());end;else mz,Kz=q3(Xa[Zz](E(Xa,Zz+0X1,ra)));end;if oz~=0X0001 then if oz==0 then mz=mz+Zz-0x01;ra=mz;else do mz=Zz+oz-2;end;ra=mz+1;end;local HL=0x0000;for HU=Zz,mz do HL=HL+0X1;(Xa)[HU]=Kz[HL];end;else ra=Zz-1;end;end;end;end;else do if mZ<5 then if mZ<0X02 then if mZ~=0X1 then local j6,i6=Uc[QZ[5]],(nil);local d6=j6[5];local e6=#d6;do if e6>0 then do i6={};end;do for RZ=1,e6 do local eZ=(d6[RZ]);if eZ[1]==0 then i6[RZ-0X001]={Xa,eZ[2]};else(i6)[RZ-0x01]=jc[eZ[2]];end;end;end;(S)(Lc,i6);end;end;(Xa)[QZ[2]]=e3(j6,i6,ya);else do if Xa[QZ[0x5]]<=Xa[QZ[4]]then La=QZ[0X02];end;end;end;else if mZ<0X3 then do Xa[QZ[0X2]]={E({},1,QZ[0X5])};end;else if mZ==4 then do(Xa[QZ[0x2]])[Xa[QZ[5]]]=Xa[QZ[0X4]];end;else if not(not Xa[QZ[2]])then else La=QZ[5];end;end;end;end;else if mZ<0X00008 then if mZ<6 then local jx=QZ[0x2];local Jx,lx,hx=Xa[jx]();if Jx then do Xa[jx+0x1]=lx;end;Xa[jx+0X2]=hx;La=QZ[0X5];end;else if mZ==7 then do La=QZ[0X5];end;else repeat local qH,fH=Lc,(Xa);if#qH>0 then local pB=({});do for ku,wu in M,qH do for sM,VM in M,wu do if not(VM[1]==fH and VM[2]>=0)then else local BC=(VM[2]);do if not pB[BC]then pB[BC]={fH[BC]};end;end;(VM)[0x01]=pB[BC];VM[2]=0x0001;end;end;end;end;end;until true;do return;end;end;end;else if not(mZ<0x009)then if mZ~=0X0000a then do(Xa)[4]=Xa[3][QZ[1]];end;local N8=(4);La=La+0X1;La=La+0x1;QZ=bc[La];do La=La+0X001;end;local r8=(Xa[0x04]);do(Xa)[N8+1]=r8;end;(Xa)[N8]=r8[QZ[0x0001]];QZ=bc[La];La=La+1;do(Xa)[0X6]=QZ[0X06];end;La=La+1;N8=0X4;(Xa)[N8]=Xa[N8](Xa[N8+0X1],Xa[N8+2]);ra=N8;QZ=bc[La];La=La+0X00001;do if not(not Xa[4])then else La=QZ[0X0005];end;end;else(Xa)[4]=#Xa[0];QZ=bc[La];do La=La+0X00001;end;Xa[0X4]=Xa[0x4]+QZ[1];La=La+1;(Xa)[0x5]=Xa[0X3];La=La+1;do Xa[0][Xa[0X4]]=Xa[5];end;QZ=bc[La];La=La+1;La=QZ[0X5];end;else local Yo=(QZ[2]);local lo=(Xa[Yo]);local Ro,wo=Xa[Yo+1],(Xa[Yo+0X0002]);(Xa)[Yo]=P(function()for y4=lo,Ro,wo do C(true,y4);end;end);La=QZ[5];end;end;end;end;end;end;end;end);if not(ca)then if V(Za)=="\115tr\105\110\103"then if r(Za,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(Za,"^.-:%d+: "))then(q)(Za,0x0000);else q("Luraph Script:"..(Qc[La-0X00001]or"(internal)")..": "..u(Za),0X0);end;else(q)(Za,0);end;else do if Za then do if fa~=0X1 then return Xa[za](E(Xa,za+0X1,ra));else return Xa[za]();end;end;elseif za then do return E(Xa,za,fa);end;end;end;end;end;end;else ic=function(...)local NU,rU=0X1,({});local kU=(k and k()or _ENV);local HU,mU,XU=(kU==H and fc or kU),0x0,{[1]=rU,[2]=Vc};local eU,xU=q3(...);eU=eU-1;for yA=0X0,eU do if ac>yA then rU[yA]=xU[yA+0X01];else break;end;end;if not nc then do xU=nil;end;elseif Ac then do(rU)[ac]={n=eU>=ac and eU-ac+0x00001 or 0X00,E(xU,ac+1,eU+1)};end;end;if HU==kU then else if not(s)then _ENV=HU;else(s)(ic,HU);end;end;local aU,WU,QU,PU=c(function()do while true do local no=(bc[NU]);local Yo=(no[0x00003]);NU=NU+0x1;do if not(Yo>=42)then if not(Yo>=0X15)then if not(Yo<10)then if not(Yo<15)then if Yo<18 then if Yo>=0X000010 then if Yo==17 then(rU)[2]=HU[no[0X6]];do NU=NU+1;end;mU=0x00002;rU[mU]=rU[mU]();no=bc[NU];do NU=NU+1;end;NU=no[0X05];else rU[0x001]=HU[no[0x0006]];do NU=NU+1;end;NU=NU+1;no=bc[NU];NU=NU+1;if rU[0X0001]~=no[0x1]then NU=no[2];end;end;else rU[0X1]=HU[no[0X0006]];no=bc[NU];NU=NU+0X1;do rU[1]=rU[1][no[0x0001]];end;no=bc[NU];NU=NU+1;if not rU[0X1]then do NU=no[5];end;end;end;else do if Yo<0X013 then do(rU)[0]=HU[no[6]];end;NU=NU+1;do NU=NU+1;end;no=bc[NU];NU=NU+0X001;if not(rU[0])then else NU=no[5];end;else if Yo~=20 then(rU)[0X0000]=HU[no[0X6]];local lH=0X002;NU=NU+1;do NU=NU+0x01;end;NU=NU+0X1;rU[0X1]=nil;no=bc[NU];NU=NU+1;(rU)[2]=HU[no[0x6]];do NU=NU+0x1;end;do NU=NU+1;end;no=bc[NU];do NU=NU+1;end;rU[2]=rU[2][no[1]];NU=NU+1;NU=NU+0X1;local yH=(2);no=bc[NU];do NU=NU+0X1;end;local hH=rU[2];rU[yH+1]=hH;(rU)[yH]=hH[no[1]];NU=NU+0X001;yH=2;local zH=(0);if lH==0 then else mU=yH+lH-0X1;end;local JH,UH=nil,nil;do if lH==0X1 then JH,UH=q3(rU[yH]());else do JH,UH=q3(rU[yH](E(rU,yH+0X01,mU)));end;end;end;if zH~=1 then if zH~=0X0 then JH=yH+zH-0x2;mU=JH+0X1;else JH=JH+yH-0X1;mU=JH;end;local Ut=(0);for AW=yH,JH do do Ut=Ut+1;end;do(rU)[AW]=UH[Ut];end;end;else do mU=yH-0x1;end;end;NU=NU+1;yH=0;do rU[yH]=rU[yH](E(rU,yH+0x00001,mU));end;mU=yH;NU=NU+1;NU=NU+0x1;do no=bc[NU];end;NU=NU+1;do if not rU[0]then do NU=no[5];end;end;end;else do rU[0X0]=no[0X00006];end;no=bc[NU];NU=NU+1;(HU)[no[0X06]]=rU[0];NU=NU+0x0001;(rU)[0]=false;no=bc[NU];NU=NU+1;HU[no[0x6]]=rU[0];do NU=NU+1;end;(rU)[0X0]=false;do no=bc[NU];end;do NU=NU+0X1;end;HU[no[0X6]]=rU[0X0];NU=NU+1;rU[0]=true;no=bc[NU];NU=NU+1;HU[no[0X6]]=rU[0X0];NU=NU+1;rU[0]=false;do no=bc[NU];end;NU=NU+1;HU[no[6]]=rU[0X00];NU=NU+0X1;rU[0]=false;do no=bc[NU];end;do NU=NU+0x1;end;do HU[no[0X006]]=rU[0X0];end;no=bc[NU];NU=NU+0x1;rU[0X0]=HU[no[0X6]];NU=NU+1;NU=NU+0X1;no=bc[NU];NU=NU+1;do(rU)[0]=rU[0x0][no[1]];end;no=bc[NU];NU=NU+1;do rU[0X0]=rU[0X00000][no[1]];end;NU=NU+1;NU=NU+0x1;no=bc[NU];NU=NU+1;do HU[no[0X06]]=rU[0];end;no=bc[NU];NU=NU+1;(rU)[0X0]=HU[no[6]];no=bc[NU];NU=NU+0X01;rU[0]=rU[0][no[0X1]];no=bc[NU];NU=NU+0X001;(rU)[0]=rU[0][no[1]];no=bc[NU];local NF=(0X0000);do NU=NU+1;end;local qF=(rU[0]);(rU)[NF+1]=qF;do(rU)[NF]=qF[no[0X1]];end;no=bc[NU];local XF=(Uc[no[5]]);NU=NU+1;local FF,vF=XF[5],(nil);local mF=#FF;do if mF>0X0 then vF={};for vE=1,mF do local CE=FF[vE];do if CE[1]==0X0 then(vF)[vE-0X1]={rU,CE[2]};else do vF[vE-1]=jc[CE[0x0002]];end;end;end;end;S(Lc,vF);end;end;rU[2]=e3(XF,vF,HU);NU=NU+0X1;do NF=0;end;(rU[NF])(rU[NF+0X1],rU[NF+2]);mU=NF-0X001;NU=NU+1;NU=NU+1;no=bc[NU];do NU=NU+0X1;end;rU[0]=HU[no[0X6]];NU=NU+0X1;do NU=NU+0X1;end;no=bc[NU];do NU=NU+1;end;NF=0X0;qF=rU[0];do(rU)[NF+0x01]=qF;end;rU[NF]=qF[no[0X1]];no=bc[NU];do NU=NU+0X001;end;(rU)[0X002]=no[0X00006];no=bc[NU];NU=NU+0X1;XF=Uc[no[5]];do vF=nil;end;FF=XF[0X5];mF=#FF;if not(mF>0X0)then else vF={};do for ud=0X1,mF do local Wd=FF[ud];do if Wd[1]==0X0000 then do(vF)[ud-1]={rU,Wd[2]};end;else do vF[ud-0X1]=jc[Wd[2]];end;end;end;end;end;(S)(Lc,vF);end;do(rU)[3]=e3(XF,vF,HU);end;do NU=NU+0X1;end;NF=0;do mU=NF+4-0X1;end;(rU[NF])(E(rU,NF+0X1,mU));mU=NF-1;do no=bc[NU];end;do NU=NU+1;end;NU=no[0X5];end;end;end;end;else if not(Yo>=0xC)then do if Yo==0XB then else repeat local sO,UO=Lc,(rU);if not(#sO>0X0)then else local yj={};for iY,PY in M,sO do for Vn,qn in M,PY do if not(qn[0X0001]==UO and qn[0X02]>=0X0)then else local ak=qn[0X2];if not yj[ak]then(yj)[ak]={UO[ak]};end;(qn)[1]=yj[ak];(qn)[2]=1;end;end;end;end;until true;return;end;end;else do if not(Yo>=13)then(rU)[2]=HU[no[0x6]];no=bc[NU];do NU=NU+0x1;end;(rU)[0X02]=rU[2][no[1]];NU=NU+1;do NU=NU+0X1;end;do no=bc[NU];end;NU=NU+0X1;rU[0X03]=HU[no[6]];NU=NU+1;do NU=NU+0X1;end;no=bc[NU];NU=NU+0X1;local Zu=0x2;(rU)[0X00004]=HU[no[6]];do NU=NU+0X1;end;rU[Zu]=rU[Zu](rU[Zu+1],rU[Zu+2]);mU=Zu;no=bc[NU];do NU=NU+0X1;end;if not(not rU[2])then else NU=no[0X5];end;else if Yo~=14 then(rU)[0]=HU[no[6]];do no=bc[NU];end;NU=NU+1;rU[0]=rU[0][no[1]];do no=bc[NU];end;NU=NU+1;local Ff=(0);(rU)[1]=no[6];NU=NU+0X00001;(rU)[Ff]=rU[Ff](rU[Ff+1]);mU=Ff;NU=NU+1;do NU=NU+1;end;no=bc[NU];do NU=NU+1;end;if not rU[0X00]then NU=no[0X5];end;else rU[2]=HU[no[6]];no=bc[NU];NU=NU+1;(rU)[3]=no[6];NU=NU+1;local yN=0X02;do rU[yN]=rU[yN](rU[yN+0X1]);end;do mU=yN;end;local nN=rU[2];NU=NU+0x1;NU=NU+1;no=bc[NU];NU=NU+0X1;yN=0x2;(rU)[yN+0X1]=nN;do(rU)[yN]=nN[no[1]];end;no=bc[NU];do NU=NU+1;end;rU[0X00004]=no[6];do NU=NU+1;end;do yN=2;end;do rU[yN]=rU[yN](rU[yN+1],rU[yN+0X00002]);end;do mU=yN;end;do NU=NU+1;end;NU=NU+1;do no=bc[NU];end;NU=NU+0X00001;if not(not rU[0x00002])then else NU=no[5];end;end;end;end;end;end;else do if Yo<0x5 then if Yo>=0x2 then do if Yo<0X03 then(rU)[2]=HU[no[0X6]];no=bc[NU];NU=NU+1;(rU)[0x2]=rU[2][no[0X0001]];no=bc[NU];do NU=NU+0X1;end;(rU)[0X2]=rU[2][no[1]];NU=NU+1;NU=NU+1;do no=bc[NU];end;do NU=NU+0X1;end;if not(rU[2]<no[0X1])then do NU=no[2];end;end;else if Yo~=4 then do if rU[no[0X5]]==rU[no[4]]then NU=no[2];end;end;else do rU[1]=HU[no[6]];end;NU=NU+1;do NU=NU+0X1;end;no=bc[NU];do NU=NU+0X001;end;do if not(not rU[0X001])then else NU=no[0X5];end;end;end;end;end;else if Yo==0x1 then rU[0x3]=true;no=bc[NU];do NU=NU+0X001;end;do HU[no[0X0006]]=rU[0x3];end;local oN=jc[1];NU=NU+1;rU[3]=oN[1][oN[0x2]];NU=NU+0x1;do NU=NU+0X1;end;do no=bc[NU];end;NU=NU+1;(rU)[3]=rU[3][no[0X1]];local sN=(0X003);NU=NU+0x0001;do rU[4]=rU[0x0002];end;NU=NU+0X0001;do(rU)[0x5]=nil;end;NU=NU+0X1;oN=jc[0];do rU[6]=oN[1][oN[2]];end;NU=NU+1;(rU)[0X7]={};no=bc[NU];NU=NU+0X001;do(rU[7])[no[0x6]]=no[1];end;no=bc[NU];local DN=nil;NU=NU+0x0001;local xN=(Uc[no[0X005]]);local aN=xN[0X0005];local rN=#aN;do if rN>0x0 then DN={};for rP=1,rN do local xP=(aN[rP]);do if xP[0X00001]==0 then DN[rP-0X1]={rU,xP[0x0002]};else do DN[rP-0X00001]=jc[xP[0X2]];end;end;end;end;S(Lc,DN);end;end;rU[0X8]=e3(xN,DN,HU);do no=bc[NU];end;NU=NU+1;(rU[0X7])[no[6]]=rU[8];NU=NU+1;do mU=sN+0X5-1;end;rU[sN](E(rU,sN+1,mU));mU=sN-0x1;NU=NU+1;do(rU)[0X0003]=false;end;no=bc[NU];NU=NU+1;(HU)[no[6]]=rU[0x3];no=bc[NU];NU=NU+0X1;do NU=no[0X5];end;else(rU)[0X2]=HU[no[0x6]];do NU=NU+1;end;NU=NU+1;NU=NU+1;mU=0X00002;do(rU)[mU]=rU[mU]();end;no=bc[NU];do NU=NU+0X1;end;do rU[3]=HU[no[6]];end;NU=NU+1;NU=NU+0X1;no=bc[NU];NU=NU+1;(rU)[0X3]=rU[3][no[0X1]];do no=bc[NU];end;do NU=NU+1;end;(rU)[3]=rU[3][no[1]];no=bc[NU];NU=NU+1;(rU)[0X3]=rU[3][no[1]];do NU=NU+0X0001;end;NU=NU+1;local r7=(4);no=bc[NU];do NU=NU+0X001;end;do rU[4]=HU[no[6]];end;do NU=NU+0x1;end;do NU=NU+1;end;no=bc[NU];local O7=(Uc[no[5]]);NU=NU+1;local C7,u7=nil,(O7[0X00005]);local n7=(#u7);if n7>0 then C7={};for zY=0X01,n7 do local jY=(u7[zY]);if jY[0X1]~=0X0000 then do C7[zY-0X1]=jc[jY[0X00002]];end;else C7[zY-0X1]={rU,jY[0X2]};end;end;S(Lc,C7);end;do(rU)[0X5]=e3(O7,C7,HU);end;no=bc[NU];do NU=NU+1;end;rU[0X6]=HU[no[0X6]];do NU=NU+1;end;(rU[r7])(rU[r7+0X1],rU[r7+2]);mU=r7-0X1;NU=NU+0X00001;do repeat local Cd,Fd=Lc,(rU);do if not(#Cd>0)then else local vK={};for hT,KT in M,Cd do do for GF,kF in M,KT do if not(kF[0X1]==Fd and kF[2]>=0x2)then else local Ic=(kF[0X2]);if not vK[Ic]then vK[Ic]={Fd[Ic]};end;do(kF)[0x1]=vK[Ic];end;kF[0x2]=0X00001;end;end;end;end;end;end;until true;end;end;end;else if not(Yo>=7)then do if Yo==0x06 then do HU[no[0X6]]=rU[no[2]];end;else rU[0X00]=HU[no[6]];do NU=NU+1;end;NU=NU+0X1;no=bc[NU];NU=NU+1;do(rU)[0X0]=rU[0][no[0X00001]];end;do NU=NU+0X1;end;do NU=NU+0x1;end;do no=bc[NU];end;do NU=NU+1;end;if not(rU[0X0])then else NU=no[0X5];end;end;end;else if not(Yo<0X8)then do if Yo==9 then(rU)[0]=HU[no[0X0006]];no=bc[NU];NU=NU+0x001;(rU)[0]=rU[0][no[1]];do NU=NU+0X001;end;NU=NU+1;no=bc[NU];do NU=NU+1;end;(rU)[0X00]=rU[0][no[0X001]];NU=NU+0X0001;local ZP=(1);NU=NU+0x1;no=bc[NU];NU=NU+0x0001;rU[1]=HU[no[6]];no=bc[NU];NU=NU+1;rU[0X02]=HU[no[6]];no=bc[NU];NU=NU+1;(rU)[0X002]=rU[2][no[1]];do no=bc[NU];end;NU=NU+1;(rU)[0X02]=rU[0X2][no[1]];NU=NU+1;do(rU)[ZP]=rU[ZP](rU[ZP+1]);end;do mU=ZP;end;no=bc[NU];do NU=NU+1;end;do if not(rU[1]<rU[0])then NU=no[0X2];end;end;else(rU)[1]=HU[no[0x00006]];do NU=NU+1;end;mU=0X1;(rU)[mU]=rU[mU]();do no=bc[NU];end;NU=NU+1;rU[0x2]=HU[no[6]];NU=NU+0X00001;do(rU)[1]=rU[1]-rU[0x2];end;do no=bc[NU];end;NU=NU+1;if not(rU[0X1]<no[0x1])then else NU=no[0X02];end;end;end;else rU[no[0x2]]=rU[no[0X5]];end;end;end;end;end;else if Yo>=0X1F then if Yo<36 then if Yo<0X21 then if Yo==32 then rU[0X0000]=HU[no[0x00006]];NU=NU+0X1;do NU=NU+0X001;end;do no=bc[NU];end;NU=NU+0x1;do(rU)[0]=rU[0][no[1]];end;no=bc[NU];do NU=NU+0x1;end;(rU)[0x0]=rU[0][no[1]];do no=bc[NU];end;NU=NU+0X1;do if not(no[0x06]<rU[0])then else NU=no[0x2];end;end;else do(rU)[3]=HU[no[0x6]];end;no=bc[NU];NU=NU+1;(rU)[0X3]=rU[0x3][no[1]];NU=NU+1;NU=NU+0X1;do no=bc[NU];end;NU=NU+0X1;if rU[3]then NU=no[0x5];end;end;else do if not(Yo>=34)then(rU)[0x5]=rU[4][no[1]];NU=NU+1;NU=NU+0X1;do no=bc[NU];end;NU=NU+0X1;if rU[5]then do NU=no[0x005];end;end;else if Yo~=35 then(rU)[2]=HU[no[0X6]];NU=NU+1;NU=NU+1;do NU=NU+1;end;mU=2;rU[mU]=rU[mU]();NU=NU+0X1;NU=NU+0X001;no=bc[NU];NU=NU+0X1;NU=no[0X5];else rU[2]=HU[no[6]];NU=NU+0x0001;NU=NU+0X001;no=bc[NU];NU=NU+1;rU[2]=rU[2][no[0x1]];NU=NU+0X1;NU=NU+0X00001;no=bc[NU];do NU=NU+1;end;if not(rU[0x2])then else NU=no[0X5];end;end;end;end;end;else if Yo<39 then if not(Yo<37)then if Yo~=38 then for wP=no[2],no[0X5]do(rU)[wP]=nil;end;else rU[0X0]=HU[no[6]];do NU=NU+1;end;mU=0;(rU)[mU]=rU[mU]();do no=bc[NU];end;NU=NU+1;if not(not rU[0X0])then else do NU=no[5];end;end;end;else rU[2]=HU[no[0x6]];do NU=NU+0X1;end;do NU=NU+1;end;do NU=NU+0X00001;end;do mU=0x0002;end;(rU)[mU]=rU[mU]();no=bc[NU];NU=NU+1;if not rU[2]then NU=no[0X00005];end;end;else do if Yo<0X28 then rU[0x0]=false;no=bc[NU];NU=NU+0X1;HU[no[0X6]]=rU[0];do no=bc[NU];end;NU=NU+0X1;rU[0x0]=HU[no[6]];NU=NU+1;do NU=NU+0X0001;end;do NU=NU+1;end;mU=0;(rU[mU])();mU=mU-1;NU=NU+1;NU=NU+1;no=bc[NU];NU=NU+1;rU[0]=HU[no[6]];do no=bc[NU];end;NU=NU+1;rU[0x0]=rU[0x0][no[1]];NU=NU+1;mU=0X000;rU[mU]=rU[mU]();NU=NU+1;NU=NU+0X1;no=bc[NU];NU=NU+1;(rU)[0X1]=HU[no[0X00006]];do NU=NU+0X001;end;NU=NU+0X1;NU=NU+1;do mU=0X1;end;rU[mU]=rU[mU]();no=bc[NU];NU=NU+1;if rU[0X00001]then NU=no[5];end;else if Yo~=0x29 then rU[1]=HU[no[0X06]];NU=NU+1;NU=NU+0X1;do NU=NU+0X1;end;(rU)[0X2]=rU[0];local k4=1;no=bc[NU];NU=NU+0x1;rU[3]=HU[no[0x6]];NU=NU+1;(rU)[k4]=rU[k4](rU[k4+0X1],rU[k4+2]);do mU=k4;end;do NU=NU+0x00001;end;do NU=NU+0X1;end;no=bc[NU];NU=NU+0X1;do(rU)[2]=HU[no[6]];end;NU=NU+1;NU=NU+0X0001;NU=NU+1;mU=2;(rU[mU])();mU=mU-0X001;NU=NU+0X1;NU=NU+0X1;do NU=NU+0X1;end;do(rU)[2]=false;end;do no=bc[NU];end;NU=NU+0x1;do HU[no[0X0006]]=rU[0X2];end;no=bc[NU];do NU=NU+0X00001;end;do rU[2]=HU[no[6]];end;NU=NU+1;NU=NU+0X0001;do no=bc[NU];end;do NU=NU+0X1;end;rU[0X2]=rU[2][no[0x1]];do NU=NU+0x00001;end;NU=NU+1;no=bc[NU];NU=NU+1;(rU)[0X002]=rU[2][no[0X1]];NU=NU+0X1;NU=NU+0x1;no=bc[NU];do NU=NU+0X1;end;(rU)[2]=rU[0x2][no[0X01]];no=bc[NU];do NU=NU+0X1;end;if not(not(no[6]<rU[2]))then else NU=no[0X002];end;else rU[no[2]]=T(rU[no[0X5]],rU[no[0X0004]]);end;end;end;end;end;else if not(Yo<0X1A)then if Yo<28 then do if Yo~=0X0001b then local TU=jc[0X1];rU[0X00002]=TU[0X1][TU[2]];do no=bc[NU];end;do NU=NU+0x1;end;do(rU)[0X2]=rU[2][no[1]];end;NU=NU+0X0001;do(rU)[3]=rU[0X001];end;NU=NU+1;rU[0X4]=nil;do NU=NU+0X00001;end;TU=jc[0];(rU)[0X5]=TU[0X00001][TU[0x2]];local IU=(2);NU=NU+1;(rU)[0X6]={};no=bc[NU];do NU=NU+1;end;(rU[0X6])[no[6]]=no[0X1];no=bc[NU];NU=NU+0X1;rU[6][no[6]]=no[1];NU=NU+1;do mU=IU+5-1;end;(rU[IU])(E(rU,IU+1,mU));mU=IU-1;no=bc[NU];do NU=NU+1;end;NU=no[0X0005];else(rU)[0x0]=HU[no[0x0006]];do NU=NU+0x00001;end;do mU=0X0;end;rU[mU]=rU[mU]();NU=NU+1;NU=NU+0X1;no=bc[NU];NU=NU+1;if rU[0X0]then NU=no[0x00005];end;end;end;else if Yo>=0x01d then if Yo~=30 then rU[no[0X002]]=rU[no[5]]*rU[no[0X4]];else rU[no[0X2]]=rU[no[5]][no[1]];end;else rU[5]=rU[4][no[1]];NU=NU+0X1;do NU=NU+0x1;end;NU=NU+1;rU[1]=rU[5];no=bc[NU];NU=NU+1;if not(not rU[1])then else NU=no[0X5];end;end;end;else do if Yo<23 then if Yo~=0x16 then do rU[0X0]=HU[no[0X00006]];end;NU=NU+0X0001;local HE=(0X1);mU=0;do(rU)[mU]=rU[mU]();end;NU=NU+0X0001;NU=NU+1;no=bc[NU];NU=NU+1;rU[0X1]=HU[no[6]];NU=NU+1;(rU)[2]=rU[0];NU=NU+1;(rU)[HE]=rU[HE](rU[HE+0x01]);mU=HE;do no=bc[NU];end;NU=NU+1;if rU[0X1]then NU=no[0x5];end;else do(rU)[0X02]=HU[no[0X6]];end;NU=NU+1;mU=2;(rU)[mU]=rU[mU]();NU=NU+0X1;do NU=NU+0X1;end;do no=bc[NU];end;do NU=NU+1;end;do if not(not rU[0X002])then else NU=no[0X00005];end;end;end;else do if Yo<0X18 then do repeat local JT,aT,TT=Lc,rU,(no[2]);do if#JT>0X0 then local OF={};do for eL,BL in M,JT do do for PG,eG in M,BL do if eG[0x1]==aT and eG[2]>=TT then local UN=eG[0X00002];if not(not OF[UN])then else do OF[UN]={aT[UN]};end;end;eG[0x1]=OF[UN];do eG[2]=1;end;end;end;end;end;end;end;end;until true;end;else if Yo~=25 then local R2=(Uc[no[5]]);local f2=(R2[5]);local S2,X2=#f2,(nil);do if not(S2>0)then else X2={};for yX=0X1,S2 do local EX=f2[yX];if EX[0x0001]~=0X0 then X2[yX-0X0001]=jc[EX[2]];else(X2)[yX-0X00001]={rU,EX[2]};end;end;S(Lc,X2);end;end;rU[no[2]]=e3(R2,X2,HU);else NU=no[5];end;end;end;end;end;end;end;end;else do if not(Yo<0X3f)then if Yo>=74 then do if not(Yo>=0X4f)then if Yo<0X4C then if Yo~=0X4B then rU[0]=HU[no[6]];do NU=NU+1;end;NU=NU+0X1;no=bc[NU];NU=NU+0X1;do rU[0x00]=rU[0X0][no[1]];end;do NU=NU+1;end;do NU=NU+0x1;end;no=bc[NU];NU=NU+1;rU[0X0]=rU[0X00000][no[1]];NU=NU+1;NU=NU+1;no=bc[NU];do NU=NU+0X1;end;if not(no[6]<=rU[0])then else NU=no[2];end;else do(rU)[0X2]=HU[no[0x00006]];end;NU=NU+1;do mU=2;end;(rU[mU])();mU=mU-1;NU=NU+1;NU=NU+0X0001;no=bc[NU];NU=NU+0X00001;do rU[2]=HU[no[6]];end;NU=NU+0X1;NU=NU+1;NU=NU+1;mU=2;do(rU)[mU]=rU[mU]();end;NU=NU+0X01;NU=NU+0x1;no=bc[NU];NU=NU+0x1;if not rU[0X2]then NU=no[5];end;end;else if not(Yo>=77)then rU[1]=HU[no[6]];do NU=NU+1;end;mU=1;local KE=0X1;rU[mU]();mU=mU-1;NU=NU+0X01;do NU=NU+1;end;no=bc[NU];NU=NU+1;rU[0x1]=HU[no[6]];do no=bc[NU];end;NU=NU+1;(rU)[0x02]=no[0X6];NU=NU+0X0001;(rU)[0X03]=rU[0];NU=NU+1;rU[KE](rU[KE+1],rU[KE+0X2]);do mU=KE-0x1;end;do no=bc[NU];end;NU=NU+0X0001;NU=no[0x005];else if Yo~=0X004E then rU[5]=rU[4][no[0X1]];NU=NU+0X1;do mU=0x05;end;(rU[mU])();mU=mU-0X1;NU=NU+0X1;do NU=NU+0X0001;end;no=bc[NU];NU=NU+0X00001;do NU=no[0X5];end;else do(rU)[no[2]]=rU[no[5]]~=rU[no[0X4]];end;end;end;end;else if not(Yo>=82)then if Yo>=0x50 then if Yo==0X51 then(rU)[0X00001]=HU[no[0X0006]];NU=NU+0X1;local ZT=0X1;NU=NU+1;no=bc[NU];do NU=NU+1;end;(rU)[0x2]=HU[no[6]];do NU=NU+1;end;rU[ZT](rU[ZT+0X001]);do mU=ZT-0X1;end;NU=NU+1;NU=NU+1;no=bc[NU];NU=NU+1;NU=no[5];else do rU[0X0000]=HU[no[0X0006]];end;NU=NU+1;NU=NU+0X1;do no=bc[NU];end;NU=NU+0X1;do(rU)[0]=rU[0][no[1]];end;NU=NU+1;NU=NU+1;no=bc[NU];do NU=NU+0X1;end;do rU[0x0000]=rU[0][no[1]];end;no=bc[NU];do NU=NU+0X001;end;do if not(not(no[6]<rU[0X0]))then else NU=no[2];end;end;end;else rU[0X2]=HU[no[6]];no=bc[NU];local gi=0x2;local Zi=(Uc[no[0x5]]);NU=NU+1;local ai=(Zi[0X5]);local hi=(nil);local ii=#ai;if not(ii>0)then else hi={};for pC=0X1,ii do local jC=ai[pC];do if jC[0x001]~=0 then(hi)[pC-1]=jc[jC[2]];else(hi)[pC-1]={rU,jC[2]};end;end;end;(S)(Lc,hi);end;(rU)[0X3]=e3(Zi,hi,HU);do NU=NU+0X1;end;(rU[gi])(rU[gi+1]);mU=gi-1;NU=NU+0X1;do NU=NU+1;end;NU=NU+0X01;rU[2]=false;no=bc[NU];NU=NU+1;(HU)[no[6]]=rU[2];no=bc[NU];NU=NU+1;NU=no[5];end;else if Yo>=0X53 then if Yo~=84 then(rU)[1]=no[6];local Ip=1;no=bc[NU];NU=NU+0X01;local Np=(rU[1]);(rU)[Ip+0X1]=Np;do rU[Ip]=Np[no[0X1]];end;no=bc[NU];NU=NU+0x01;do rU[0X3]=HU[no[0X06]];end;do NU=NU+1;end;NU=NU+0X1;NU=NU+1;Ip=0x1;(rU)[Ip]=rU[Ip](rU[Ip+1],rU[Ip+2]);do mU=Ip;end;no=bc[NU];NU=NU+0x1;do if not(rU[1])then else do NU=no[5];end;end;end;else(rU)[0X2]=HU[no[6]];no=bc[NU];NU=NU+1;(rU)[3]=HU[no[6]];local gl=jc[0x0000];local fl=(3);NU=NU+0X01;(rU)[0x4]=rU[0];NU=NU+1;(rU)[5]=gl[1][gl[2]];NU=NU+1;local Fl=(0X3);do if Fl~=0X0 then mU=fl+Fl-0X1;end;end;local sl,vl,Rl=nil,nil,0X0;if Fl==1 then sl,vl=q3(rU[fl]());else do sl,vl=q3(rU[fl](E(rU,fl+1,mU)));end;end;if Rl~=1 then if Rl==0 then do sl=sl+fl-1;end;do mU=sl;end;else sl=fl+Rl-2;mU=sl+0X1;end;local HB=0X000;do for nA=fl,sl do HB=HB+0X1;rU[nA]=vl[HB];end;end;else mU=fl-1;end;NU=NU+1;NU=NU+0x01;NU=NU+1;fl=0X2;Fl=0X0;Rl=4;do if Fl~=0x0 then mU=fl+Fl-0X1;end;end;sl,vl=nil;if Fl~=0X001 then do sl,vl=q3(rU[fl](E(rU,fl+1,mU)));end;else sl,vl=q3(rU[fl]());end;if Rl==1 then mU=fl-0X01;else if Rl==0X000 then do sl=sl+fl-0X1;end;mU=sl;else do sl=fl+Rl-2;end;mU=sl+1;end;local E5=(0);for hK=fl,sl do E5=E5+1;(rU)[hK]=vl[E5];end;end;do NU=NU+1;end;NU=NU+0x0001;do no=bc[NU];end;NU=NU+0X1;do fl=0X2;end;local Nl=(P(function(...)C();for GM,qM in...do(C)(true,GM,qM);end;end));(Nl)(rU[fl],rU[fl+0X0001],rU[fl+2]);mU=fl;do(rU)[fl]=Nl;end;NU=no[5];end;else if not(not rU[no[2]])then else NU=no[0X05];end;end;end;end;end;else if not(Yo<68)then if Yo>=71 then if not(Yo<0X48)then if Yo==73 then rU[0]=HU[no[6]];NU=NU+1;NU=NU+1;NU=NU+0X01;mU=0X0;(rU)[mU]=rU[mU]();NU=NU+1;NU=NU+0X1;no=bc[NU];NU=NU+1;if rU[0X00]then NU=no[5];end;else local HZ=(no[2]);local aZ,xZ,EZ=rU[HZ]();if not(aZ)then else(rU)[HZ+1]=xZ;(rU)[HZ+0X02]=EZ;NU=no[0X5];end;end;else(rU)[0X2]=HU[no[6]];no=bc[NU];NU=NU+0x00001;rU[2]=rU[2][no[0X0001]];no=bc[NU];do NU=NU+1;end;do if not rU[0X2]then do NU=no[0X00005];end;end;end;end;else if not(Yo<0X45)then do if Yo==70 then rU[no[0X002]]=rU[no[0X00005]]<=rU[no[0X04]];else(rU)[0X0]=HU[no[0X00006]];NU=NU+1;NU=NU+0x1;do no=bc[NU];end;NU=NU+0X1;(rU)[0]=rU[0][no[1]];NU=NU+1;NU=NU+0x1;no=bc[NU];do NU=NU+0X01;end;if not rU[0x0]then do NU=no[0X05];end;end;end;end;else rU[0X4]=HU[no[6]];do no=bc[NU];end;NU=NU+1;do rU[0X0004]=rU[0X4][no[0X001]];end;no=bc[NU];NU=NU+0X01;(rU)[5]=rU[0X1][no[0X1]];NU=NU+1;NU=NU+1;do no=bc[NU];end;NU=NU+1;rU[0X5]=rU[0X5][no[0X1]];do no=bc[NU];end;do NU=NU+0X1;end;do(rU)[5]=rU[0X0005][no[1]];end;do NU=NU+1;end;do NU=NU+1;end;no=bc[NU];NU=NU+1;do(rU)[0X6]=HU[no[6]];end;NU=NU+1;NU=NU+0X1;do no=bc[NU];end;NU=NU+0x1;rU[6]=rU[6][no[0x00001]];NU=NU+1;NU=NU+0X00001;do no=bc[NU];end;NU=NU+1;rU[0x006]=rU[0X006][no[1]];NU=NU+1;local ws=(4);do NU=NU+1;end;NU=NU+0x1;rU[0x5]=rU[0X5]-rU[6];NU=NU+0X001;rU[ws]=rU[ws](rU[ws+0x1]);mU=ws;do NU=NU+1;end;NU=NU+1;do no=bc[NU];end;NU=NU+0X1;if not(not(rU[0X4]<no[1]))then else NU=no[2];end;end;end;else if Yo<0X00041 then if Yo~=0X40 then do(rU)[3]=rU[0X01][no[0X1]];end;NU=NU+1;NU=NU+0X0001;no=bc[NU];NU=NU+1;(rU)[3]=rU[0x03][no[1]];do NU=NU+0x1;end;NU=NU+1;no=bc[NU];NU=NU+1;rU[3]=rU[0X0003][no[0X1]];NU=NU+1;NU=NU+1;no=bc[NU];NU=NU+0x00001;if not(not(no[0x006]<rU[0x3]))then else NU=no[2];end;else local yb=(no[2]);rU[yb]=rU[yb](rU[yb+1],rU[yb+2]);mU=yb;end;else if Yo>=0X42 then do if Yo==67 then do(rU)[0]=HU[no[6]];end;local Ml=(0);no=bc[NU];do NU=NU+0X0001;end;local Zl=(rU[0X000]);rU[Ml+0x1]=Zl;(rU)[Ml]=Zl[no[0x1]];no=bc[NU];do NU=NU+1;end;rU[0x02]=no[6];NU=NU+1;Ml=0X0;(rU)[Ml]=rU[Ml](rU[Ml+0x1],rU[Ml+0X0002]);mU=Ml;no=bc[NU];NU=NU+0x0001;if not(not rU[0x0])then else NU=no[0X5];end;else rU[0]=HU[no[6]];no=bc[NU];do NU=NU+0x1;end;(rU)[0X00000]=rU[0][no[1]];do NU=NU+0X1;end;NU=NU+0X1;no=bc[NU];NU=NU+0x001;rU[0X0]=rU[0x0][no[0x1]];do no=bc[NU];end;NU=NU+1;do(rU)[0x01]=HU[no[6]];end;no=bc[NU];do NU=NU+1;end;(rU)[0X1]=rU[0X0001][no[1]];NU=NU+0X0001;NU=NU+1;no=bc[NU];NU=NU+0X0001;if not(rU[1])then else NU=no[5];end;end;end;else(rU)[no[0X2]]=no[0X6];end;end;end;end;else do if not(Yo>=52)then if Yo<0x2f then if Yo<44 then if Yo==43 then local sS=(no[0X5]);local tS=(no[2]);do mU=tS+sS-0X1;end;repeat local l7,A7=Lc,(rU);if#l7>0X0000 then local Sv=({});for y1,U1 in M,l7 do do for am,bm in M,U1 do if not(bm[1]==A7 and bm[2]>=0)then else local Hs=(bm[0X2]);if not Sv[Hs]then(Sv)[Hs]={A7[Hs]};end;bm[1]=Sv[Hs];(bm)[0x02]=0X1;end;end;end;end;end;until true;return true,tS,sS;else do(rU)[0x1]=HU[no[6]];end;NU=NU+0X1;rU[2]={E({},0X1,0X0003)};local Wn=0X3;no=bc[NU];do NU=NU+0X1;end;(rU)[3]=no[0X006];no=bc[NU];local dn=0X2;NU=NU+0x001;do(rU)[0x00004]=no[0X006];end;no=bc[NU];NU=NU+1;do(rU)[0X005]=no[6];end;NU=NU+1;local Vn=rU[dn];local Sn=((1-1)*50);for kJ=0X0001,3 do do Vn[Sn+kJ]=rU[dn+kJ];end;end;no=bc[NU];local Nn=nil;NU=NU+1;local mn=Uc[no[5]];local rn=mn[5];local Dn=(#rn);if Dn>0 then do Nn={};end;for bw=1,Dn do local mw=(rn[bw]);if mw[1]~=0 then Nn[bw-1]=jc[mw[2]];else(Nn)[bw-0x0001]={rU,mw[0X2]};end;end;(S)(Lc,Nn);end;rU[3]=e3(mn,Nn,HU);NU=NU+0X001;dn=0X1;local bn=3;if bn==0 then else mU=dn+bn-1;end;local Ln,In=nil,nil;if bn~=1 then Ln,In=q3(rU[dn](E(rU,dn+0X01,mU)));else Ln,In=q3(rU[dn]());end;if Wn~=0X1 then do if Wn~=0 then Ln=dn+Wn-2;mU=Ln+0X001;else Ln=Ln+dn-0X1;do mU=Ln;end;end;end;local yN=(0);for zl=dn,Ln do yN=yN+0X01;rU[zl]=In[yN];end;else mU=dn-0X1;end;NU=NU+1;NU=NU+1;no=bc[NU];NU=NU+1;(rU)[3]=HU[no[6]];do NU=NU+1;end;NU=NU+0X1;NU=NU+1;do rU[4]=rU[0x1];end;do NU=NU+0x1;end;do dn=0X3;end;do bn=0x2;end;Wn=0x4;if bn==0 then else mU=dn+bn-0X00001;end;Ln,In=nil;if bn~=1 then Ln,In=q3(rU[dn](E(rU,dn+0X1,mU)));else Ln,In=q3(rU[dn]());end;if Wn==0X1 then mU=dn-0x0001;else if Wn==0X0 then Ln=Ln+dn-0X1;do mU=Ln;end;else Ln=dn+Wn-0X2;do mU=Ln+0X0001;end;end;local Xv=0;for NS=dn,Ln do Xv=Xv+1;rU[NS]=In[Xv];end;end;no=bc[NU];NU=NU+0X001;do dn=3;end;local ln=(P(function(...)C();for Ch,ch in...do(C)(true,Ch,ch);end;end));(ln)(rU[dn],rU[dn+0x1],rU[dn+2]);mU=dn;do rU[dn]=ln;end;NU=no[5];end;else if Yo>=45 then if Yo==46 then if rU[no[2]]then do NU=no[5];end;end;else(rU)[0x0]=HU[no[6]];no=bc[NU];NU=NU+1;do rU[0X000]=rU[0][no[0X00001]];end;do NU=NU+0X1;end;NU=NU+0X1;no=bc[NU];do NU=NU+1;end;do if not(not rU[0])then else NU=no[5];end;end;end;else do rU[0]=HU[no[6]];end;NU=NU+0X1;do NU=NU+1;end;no=bc[NU];do NU=NU+0X01;end;rU[0]=rU[0X0][no[0X1]];NU=NU+1;local CR=(0X1);NU=NU+0X1;no=bc[NU];NU=NU+0X1;local aR=rU[0];rU[CR+1]=aR;(rU)[CR]=aR[no[0X1]];do no=bc[NU];end;do NU=NU+0x001;end;rU[0X00003]=HU[no[6]];NU=NU+0X1;NU=NU+1;do NU=NU+1;end;mU=0x3;rU[mU]=rU[mU]();NU=NU+0X1;NU=NU+1;no=bc[NU];NU=NU+0X1;if rU[0X3]then NU=no[5];end;end;end;else if Yo>=49 then if Yo>=0X32 then if Yo==0X33 then rU[6]=rU[0X5][no[1]];NU=NU+1;mU=6;rU[mU]();mU=mU-0X1;do NU=NU+0X00001;end;NU=NU+0X1;no=bc[NU];do NU=NU+1;end;do NU=no[0X5];end;else rU[no[2]]=HU[no[0X6]];end;else if not(rU[no[0X5]]<=rU[no[4]])then NU=no[0X02];end;end;else if Yo~=48 then local ZP,fP=0X02,(rU[0X1]);do rU[ZP+0X001]=fP;end;(rU)[ZP]=fP[no[1]];no=bc[NU];NU=NU+0x00001;rU[0x4]=no[0X6];NU=NU+0x0001;ZP=2;(rU)[ZP]=rU[ZP](rU[ZP+0X01],rU[ZP+0X2]);mU=ZP;no=bc[NU];NU=NU+1;if not(not rU[2])then else NU=no[0X005];end;else rU[1]=rU[0][no[1]];no=bc[NU];NU=NU+1;(rU)[0X002]=HU[no[0X6]];no=bc[NU];NU=NU+0x1;local Il=(nil);local Jl=2;local vl=(Uc[no[5]]);local Bl=(vl[5]);local dl=#Bl;if dl>0 then Il={};for Xq=0X01,dl do local tq=Bl[Xq];do if tq[0x1]~=0 then(Il)[Xq-1]=jc[tq[0X0002]];else do Il[Xq-0X1]={rU,tq[0X002]};end;end;end;end;(S)(Lc,Il);end;rU[0X3]=e3(vl,Il,HU);do NU=NU+0X0001;end;(rU[Jl])(rU[Jl+1]);do mU=Jl-0X0001;end;NU=NU+1;do rU[2]=false;end;no=bc[NU];NU=NU+0X01;(HU)[no[0X6]]=rU[2];NU=NU+1;repeat local zB,lB=Lc,(rU);if not(#zB>0)then else local R5=({});for Ma,ia in M,zB do for wG,cG in M,ia do if cG[0X0001]==lB and cG[2]>=0x00001 then local tv=cG[2];do if not R5[tv]then(R5)[tv]={lB[tv]};end;end;(cG)[1]=R5[tv];(cG)[2]=1;end;end;end;end;until true;no=bc[NU];NU=NU+0x1;NU=no[0X5];end;end;end;else if not(Yo>=57)then if not(Yo<54)then if not(Yo<55)then do if Yo~=0X38 then do rU[0X000]=HU[no[6]];end;do no=bc[NU];end;NU=NU+1;rU[0]=rU[0][no[0x1]];NU=NU+0X1;do NU=NU+1;end;do no=bc[NU];end;NU=NU+0X1;rU[0]=rU[0X0][no[0X0001]];do no=bc[NU];end;NU=NU+0X1;do(rU)[0]=rU[0][no[0X1]];end;local nB=0X1;do NU=NU+1;end;do NU=NU+1;end;no=bc[NU];do NU=NU+1;end;(rU)[0]=rU[0X0][no[0x1]];do no=bc[NU];end;NU=NU+1;rU[0X0]=rU[0][no[1]];do no=bc[NU];end;NU=NU+0x1;(rU)[1]=HU[no[0X00006]];NU=NU+0X001;rU[2]=rU[0];do no=bc[NU];end;NU=NU+0x1;rU[0X0003]=HU[no[0X00006]];NU=NU+0x1;do NU=NU+0X00001;end;no=bc[NU];NU=NU+1;(rU)[0X3]=rU[3][no[1]];NU=NU+1;do NU=NU+0X01;end;no=bc[NU];do NU=NU+1;end;rU[3]=rU[0X3][no[0X1]];no=bc[NU];NU=NU+0X1;(rU)[0x03]=rU[0x3][no[1]];NU=NU+1;(rU)[nB]=rU[nB](rU[nB+0x1],rU[nB+2]);do mU=nB;end;no=bc[NU];NU=NU+1;if not(no[6]<rU[0x001])then NU=no[0x2];end;else rU[0X0]=HU[no[6]];NU=NU+1;NU=NU+0x1;no=bc[NU];NU=NU+0X1;(rU)[0X0]=rU[0][no[1]];do NU=NU+1;end;NU=NU+0X01;no=bc[NU];NU=NU+0X001;if not rU[0x000]then NU=no[0x0005];end;end;end;else(rU)[no[2]]={E({},0X00001,no[5])};end;else if Yo==0x35 then rU[0X0001]=HU[no[6]];no=bc[NU];NU=NU+1;(rU)[0X01]=rU[1][no[0X01]];NU=NU+1;do NU=NU+1;end;no=bc[NU];NU=NU+1;rU[0X1]=rU[0x00001][no[1]];do NU=NU+0X00001;end;NU=NU+1;no=bc[NU];NU=NU+1;if not(rU[1]<=no[1])then do NU=no[0X2];end;end;else rU[6]=rU[0x05][no[0x1]];NU=NU+1;NU=NU+0X001;do NU=NU+0x001;end;do(rU)[2]=rU[0x6];end;do no=bc[NU];end;NU=NU+0X1;if not(not rU[2])then else NU=no[0X5];end;end;end;else do if Yo>=0X03c then if not(Yo<61)then do if Yo==0X3e then local f4,x4=0X003,(rU[0x2]);rU[f4+1]=x4;do(rU)[f4]=x4[no[1]];end;no=bc[NU];NU=NU+1;do rU[0X5]=no[0X6];end;NU=NU+1;f4=3;(rU)[f4]=rU[f4](rU[f4+0x01],rU[f4+2]);mU=f4;NU=NU+0x1;NU=NU+0X1;do no=bc[NU];end;do NU=NU+0x1;end;if not rU[0X0003]then NU=no[5];end;else if rU[no[0X5]]==rU[no[4]]then else NU=no[2];end;end;end;else rU[0X1]=HU[no[0X00006]];no=bc[NU];NU=NU+0X01;rU[1]=rU[1][no[1]];do NU=NU+1;end;NU=NU+1;no=bc[NU];NU=NU+0X001;if not(not rU[0X001])then else NU=no[0X05];end;end;else if Yo<0X003a then(rU)[0X2]=HU[no[6]];NU=NU+0x00001;do NU=NU+0X001;end;no=bc[NU];local fq=0X0002;do NU=NU+1;end;(rU)[3]=no[0X6];NU=NU+0x0001;rU[fq]=rU[fq](rU[fq+0X1]);do mU=fq;end;no=bc[NU];local xq=(rU[0X0002]);NU=NU+1;fq=0X2;do(rU)[fq+0X00001]=xq;end;(rU)[fq]=xq[no[0x1]];no=bc[NU];NU=NU+1;(rU)[4]=no[0x006];do NU=NU+1;end;fq=0X002;rU[fq]=rU[fq](rU[fq+1],rU[fq+2]);mU=fq;NU=NU+0X0001;NU=NU+0x1;no=bc[NU];NU=NU+1;if not(not rU[2])then else NU=no[5];end;else do if Yo~=59 then rU[0x0000]=HU[no[0X0006]];do NU=NU+0X00001;end;do NU=NU+1;end;NU=NU+1;mU=0;(rU)[mU]=rU[mU]();do no=bc[NU];end;NU=NU+0X1;do(rU)[1]=HU[no[0x6]];end;NU=NU+1;do NU=NU+1;end;do NU=NU+1;end;(rU)[0X0]=rU[0]-rU[1];no=bc[NU];NU=NU+0X1;if not(no[6]<rU[0])then else do NU=no[2];end;end;else(rU)[no[2]]=v(rU[no[5]],rU[no[4]]);end;end;end;end;end;end;end;end;end;end;end;end;end;end;end);if not(aU)then if V(WU)=='\115\116\114\105\110g'then do if not(r(WU,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;if not(r(WU,"^.-:%d+: "))then(q)(WU,0);else(q)("Luraph Script:"..(Qc[NU-0X1]or'\040\105n\116\101r\110al\041')..": "..u(WU),0);end;else q(WU,0x0);end;else if WU then if PU~=1 then return rU[QU](E(rU,QU+1,mU));else return rU[QU]();end;elseif QU then return E(rU,QU,PU);end;end;end;end;else if Sc==18 then do ic=function(...)local lc,Pc,Cc=1,{},(0);local Ic=((k and k()or _ENV));local pc=({[2]=Vc,[1]=Pc});local wc=((Ic==H and fc or Ic));local yc,Jc=q3(...);do yc=yc-1;end;for Fb=0X0,yc do do if ac>Fb then(Pc)[Fb]=Jc[Fb+1];else do break;end;end;end;end;if not nc then Jc=nil;elseif not(Ac)then else(Pc)[ac]={n=yc>=ac and yc-ac+1 or 0,E(Jc,ac+1,yc+0x1)};end;if wc==Ic then else if not(s)then do _ENV=wc;end;else s(ic,wc);end;end;local zc,Wc,kc,Rc=c(function()while true do local ep=bc[lc];local Cp=ep[3];do lc=lc+0x1;end;if not(Cp>=0x00005)then if Cp>=2 then if Cp>=3 then if Cp~=4 then local sL=(Uc[ep[5]]);local lL=sL[0X5];local OL,WL=#lL,nil;if not(OL>0)then else WL={};for Vp=1,OL do local Ep=(lL[Vp]);if Ep[0X001]~=0 then(WL)[Vp-1]=jc[Ep[2]];else(WL)[Vp-0x001]={Pc,Ep[0x2]};end;end;(S)(Lc,WL);end;do(Pc)[ep[2]]=e3(sL,WL,wc);end;else end;else do Pc[ep[2]]=wc[ep[6]];end;end;else do if Cp~=1 then(Pc)[ep[2]]=-Pc[ep[5]];else(Pc)[ep[2]]=ep[0X6];end;end;end;else if Cp<8 then if Cp>=0X6 then if Cp~=7 then local vy=Pc[ep[0X5]]/Pc[ep[4]];Pc[ep[0X02]]=vy-vy%1;else local gU=ep[2];local jU=P(function(...)(C)();for O4,U4,c4,v4,M4,Z4,w4,t4,E4,C4 in...do(C)(true,{O4,U4,c4,v4,M4,Z4,w4,t4,E4,C4});end;end);jU(Pc[gU],Pc[gU+1],Pc[gU+0X00002]);Cc=gU;do(Pc)[gU]=jU;end;lc=ep[0X5];end;else local c9=(Uc[ep[0x5]]);local K9,x9=c9[0x0005],(nil);local e9=(#K9);if e9>0 then x9={};for MC=1,e9 do local FC=K9[MC];if FC[0X001]~=0 then(x9)[MC-0X1]=jc[FC[2]];else x9[MC-0X001]={Pc,FC[0X0002]};end;end;S(Lc,x9);end;do Pc[0X0]=e3(c9,x9,wc);end;ep=bc[lc];do lc=lc+0X1;end;Pc[0x1]=wc[ep[6]];lc=lc+1;lc=lc+0X0001;ep=bc[lc];lc=lc+1;local u9=1;do Pc[0X01]=Pc[1][ep[1]];end;lc=lc+0X1;lc=lc+0X00001;ep=bc[lc];lc=lc+1;do c9=Uc[ep[0X005]];end;x9=nil;K9=c9[0X5];e9=#K9;do if not(e9>0X00)then else x9={};do for NV=0X1,e9 do local MV=(K9[NV]);do if MV[1]==0 then do(x9)[NV-1]={Pc,MV[0X2]};end;else(x9)[NV-1]=jc[MV[0X2]];end;end;end;end;(S)(Lc,x9);end;end;(Pc)[0x2]=e3(c9,x9,wc);lc=lc+0X1;(Pc[u9])(Pc[u9+0X1]);Cc=u9-0X0001;lc=lc+1;repeat local mp,Wp=Lc,(Pc);do if#mp>0 then local mw=({});do for JZ,SZ in M,mp do for tv,Hv in M,SZ do if not(Hv[1]==Wp and Hv[0X2]>=0x00000)then else local Ja=Hv[2];if not mw[Ja]then mw[Ja]={Wp[Ja]};end;(Hv)[1]=mw[Ja];Hv[0x0002]=0X00001;end;end;end;end;end;end;until true;return;end;else if not(Cp<0X9)then if Cp~=0XA then(Pc)[ep[0X02]]={E({},1,ep[0X05])};else do lc=ep[0X0005];end;end;else do repeat local vw,qw,Zw=Lc,Pc,(ep[2]);do if#vw>0 then local zD=({});for Gq,uq in M,vw do for Hh,Wh in M,uq do if Wh[1]==qw and Wh[2]>=Zw then local vm=(Wh[0X2]);if not zD[vm]then do zD[vm]={qw[vm]};end;end;(Wh)[1]=zD[vm];do(Wh)[0X2]=1;end;end;end;end;end;end;until true;end;end;end;end;end;end);if zc then if Wc then if Rc~=0x1 then return Pc[kc](E(Pc,kc+1,Cc));else return Pc[kc]();end;elseif kc then do return E(Pc,kc,Rc);end;end;else if V(Wc)=="string"then if not(r(Wc,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(Wc,"^.-:%d+: "))then(q)(Wc,0);else(q)('Lur\097\112h Sc\114ip\116\058'..(Qc[lc-1]or'\040\105\110\116e\114\110\097\108)')..': '..u(Wc),0);end;else(q)(Wc,0X0);end;end;end;end;else ic=function(...)local M8,X8=1,{};local a8=((k and k()or _ENV));local O8=0;local F8=({[1]=X8,[2]=Vc});local m8,A8=q3(...);local d8=(a8==H and fc or a8);do m8=m8-0X1;end;for Su=0,m8 do do if not(ac>Su)then break;else do X8[Su]=A8[Su+1];end;end;end;end;do if not nc then A8=nil;elseif Ac then(X8)[ac]={n=m8>=ac and m8-ac+1 or 0,E(A8,ac+0x1,m8+1)};end;end;if d8==a8 then else do if s then s(ic,d8);else _ENV=d8;end;end;end;local U8,s8,r8,h8=c(function()do while true do local ld=bc[M8];local Id=(ld[0X3]);M8=M8+1;do if not(Id>=9)then if Id<4 then if not(Id<0x002)then do if Id==0X3 then if not(X8[ld[5]]<X8[ld[0x004]])then else M8=ld[2];end;else repeat local UG,rG=Lc,X8;if#UG>0X000 then local qw=({});for oR,dR in M,UG do do for sT,uT in M,dR do do if not(uT[1]==rG and uT[2]>=0x0000)then else local KX=uT[0X02];if not qw[KX]then(qw)[KX]={rG[KX]};end;(uT)[1]=qw[KX];uT[2]=1;end;end;end;end;end;end;until true;local Uy=(ld[0X2]);return false,Uy,Uy;end;end;else if Id~=1 then local FH=(ld[0x02]);do for Xv=FH,FH+(ld[0X5]-1)do X8[Xv]=A8[ac+(Xv-FH)+1];end;end;else X8[0X0]=d8[ld[0X06]];do M8=M8+1;end;do M8=M8+0X1;end;do ld=bc[M8];end;M8=M8+1;do X8[0]=X8[0][ld[1]];end;do ld=bc[M8];end;M8=M8+1;M8=ld[5];end;end;else if Id<0X0006 then if Id==5 then(X8)[ld[0X002]]=X8[ld[5]]>=X8[ld[4]];else M8=ld[5];end;else do if Id<7 then X8[ld[2]]=ld[0x6];else if Id==0X08 then if not(not X8[ld[2]])then else M8=ld[5];end;else X8[ld[0x002]]=#X8[ld[5]];end;end;end;end;end;else if not(Id<14)then if not(Id>=16)then if Id==0X00F then local Yj,Rj=Uc[ld[5]],(nil);local fj=Yj[5];local Gj=(#fj);if not(Gj>0)then else Rj={};for tY=0X1,Gj do local PY=(fj[tY]);if PY[0X00001]~=0 then do Rj[tY-1]=jc[PY[0X002]];end;else Rj[tY-0X1]={X8,PY[2]};end;end;S(Lc,Rj);end;do(X8)[ld[2]]=e3(Yj,Rj,d8);end;else X8[ld[0X002]]=X8[ld[5]]==X8[ld[4]];end;else if not(Id<0X11)then if Id~=18 then(X8)[0x00000]=d8[ld[6]];do M8=M8+0X01;end;M8=M8+0X1;local Yz=(0);ld=bc[M8];do M8=M8+0X001;end;(X8)[0X0001]=ld[0x6];M8=M8+1;(X8)[Yz]=X8[Yz](X8[Yz+0X1]);O8=Yz;M8=M8+0X00001;do X8[0]=not X8[0x0000];end;ld=bc[M8];M8=M8+1;if not(not X8[0])then else M8=ld[5];end;else do X8[ld[0X2]]={E({},1,ld[5])};end;end;else(X8)[ld[0x00002]]=X8[ld[0X5]]^X8[ld[4]];end;end;else if Id<11 then if Id~=10 then else repeat local b0,f0=Lc,X8;do if#b0>0X0 then local Aa=({});for Jr,Mr in M,b0 do for iB,oB in M,Mr do do if not(oB[0X1]==f0 and oB[0X2]>=0X0000)then else local Wh=(oB[0X2]);if not Aa[Wh]then do Aa[Wh]={f0[Wh]};end;end;(oB)[0X0001]=Aa[Wh];oB[2]=0X01;end;end;end;end;end;end;until true;return;end;else if not(Id>=12)then(X8)[ld[0X0002]]=d8[ld[6]];else if Id==0X00D then local Ra,Ka=jc[0x0],0;X8[0]=Ra[0x00001][Ra[0x2]];do M8=M8+0X1;end;do M8=M8+1;end;ld=bc[M8];M8=M8+1;local Ya=X8[0];(X8)[Ka+1]=Ya;X8[Ka]=Ya[ld[1]];M8=M8+1;do Ka=0;end;X8[Ka]=X8[Ka](X8[Ka+0X01]);O8=Ka;else(X8)[ld[0x0002]]=X8[ld[0x5]]/X8[ld[4]];end;end;end;end;end;end;end;end;end);do if U8 then if s8 then if h8~=0x0001 then return X8[r8](E(X8,r8+1,O8));else return X8[r8]();end;elseif not(r8)then else do return E(X8,r8,h8);end;end;else if V(s8)=="st\114\105ng"then if r(s8,'at\116\101m\112t \116\111 yie\108\100 ac\114\111ss \109et\097\109\101\116h\111d/\067\037-call bo\117n\100\097r\121')then return coroutine.yield();end;if not(r(s8,'^\046-\058\037\100+\058 '))then(q)(s8,0X0);else(q)("Luraph Script:"..(Qc[M8-1]or"(internal)")..': '..u(s8),0X0);end;else(q)(s8,0X0);end;end;end;end;end;end;else if Sc<21 then if Sc~=0X00014 then ic=function(...)local QK=1;local UK={};local VK=({[1]=UK,[2]=Vc});local sK=((k and k()or _ENV));local xK,yK=q3(...);xK=xK-1;local kK=((sK==H and fc or sK));local NK=0X0;for Jt=0X0,xK do if not(ac>Jt)then break;else(UK)[Jt]=yK[Jt+1];end;end;if not nc then yK=nil;elseif Ac then UK[ac]={n=xK>=ac and xK-ac+1 or 0X0000,E(yK,ac+0X1,xK+1)};end;do if kK~=sK then do if not(s)then do _ENV=kK;end;else(s)(ic,kK);end;end;end;end;local SK,EK,pK,qK=c(function()do while true do local U4=(bc[QK]);local W4=(U4[3]);QK=QK+0X001;if not(W4>=9)then if not(W4<0x00004)then do if not(W4<6)then if W4<7 then do QK=U4[5];end;else if W4~=0x8 then(UK)[U4[0x002]]=U4[0X6];else(UK)[0X7]=UK[0X6][U4[0X1]];QK=QK+0X01;local MV=0x007;QK=QK+0X1;U4=bc[QK];QK=QK+1;local RV=UK[0X7];(UK)[MV+1]=RV;UK[MV]=RV[U4[1]];U4=bc[QK];QK=QK+0X1;UK[9]=U4[0X6];U4=bc[QK];do QK=QK+0X0001;end;(UK)[10]=U4[6];QK=QK+1;MV=7;NK=MV+0x4-1;UK[MV]=UK[MV](E(UK,MV+1,NK));NK=MV;U4=bc[QK];do QK=QK+1;end;if UK[7]==U4[1]then else do QK=U4[2];end;end;end;end;else if W4==0X5 then UK[U4[0X2]]=UK[U4[5]]>=UK[U4[4]];else local iz,Iz=0X008,UK[0X6];UK[iz+0X00001]=Iz;UK[iz]=Iz[U4[1]];do U4=bc[QK];end;QK=QK+1;do UK[10]=U4[0X0006];end;QK=QK+1;iz=0x8;(UK)[iz]=UK[iz](UK[iz+0X1],UK[iz+0X02]);NK=iz;U4=bc[QK];QK=QK+1;(UK)[0X0008]=UK[0X0008][U4[1]];QK=QK+0X00001;QK=QK+1;U4=bc[QK];do QK=QK+0X1;end;(UK[0])[U4[0x6]]=UK[0x8];do U4=bc[QK];end;QK=QK+0x1;iz=0X8;Iz=UK[6];do(UK)[iz+0x00001]=Iz;end;do UK[iz]=Iz[U4[1]];end;do U4=bc[QK];end;do QK=QK+0X001;end;(UK)[10]=U4[0X6];QK=QK+1;iz=8;do UK[iz]=UK[iz](UK[iz+1],UK[iz+2]);end;NK=iz;U4=bc[QK];QK=QK+0X1;UK[0X00000][U4[0x6]]=UK[0X08];QK=QK+1;UK[0X8]=UK[6];do U4=bc[QK];end;QK=QK+0X1;do(UK[0x00000])[U4[6]]=UK[0X8];end;U4=bc[QK];do QK=QK+1;end;UK[0x00][U4[0X00006]]=U4[1];U4=bc[QK];QK=QK+0X00001;QK=U4[5];end;end;end;else do if not(W4>=0X2)then do if W4==1 then for mv=U4[0X00002],U4[5]do(UK)[mv]=nil;end;else UK[7]=kK[U4[6]];U4=bc[QK];QK=QK+1;do(UK)[7]=UK[7][U4[1]];end;QK=QK+0X1;QK=QK+0X1;U4=bc[QK];QK=QK+0X1;(UK)[8]=UK[0X06][U4[0X1]];QK=QK+1;do QK=QK+0X00001;end;do U4=bc[QK];end;QK=QK+0X1;(UK)[8]=UK[0X8][U4[0X001]];local pk=(0X7);QK=QK+1;QK=QK+0X1;U4=bc[QK];QK=QK+1;UK[9]=U4[0X6];U4=bc[QK];QK=QK+1;UK[10]=UK[0x006][U4[0x1]];U4=bc[QK];QK=QK+1;(UK)[10]=UK[0xA][U4[1]];QK=QK+1;QK=QK+1;QK=QK+1;do NK=pk+4-1;end;(UK)[pk]=UK[pk](E(UK,pk+0x1,NK));NK=pk;QK=QK+0X01;QK=QK+1;U4=bc[QK];QK=QK+0X1;UK[8]=kK[U4[6]];U4=bc[QK];do QK=QK+0X1;end;UK[8]=UK[0x8][U4[1]];U4=bc[QK];QK=QK+0X1;UK[0X0009]=kK[U4[6]];QK=QK+1;QK=QK+0X0001;U4=bc[QK];QK=QK+0X0001;UK[0X9]=UK[9][U4[0x1]];U4=bc[QK];do QK=QK+0X1;end;do(UK)[0X0009]=UK[0X9][U4[0X0001]];end;U4=bc[QK];QK=QK+0X00001;UK[9]=UK[9][U4[1]];QK=QK+1;QK=QK+0x00001;U4=bc[QK];do QK=QK+0X1;end;do UK[0Xa]=U4[0X6];end;U4=bc[QK];QK=QK+1;(UK)[11]=kK[U4[0x006]];U4=bc[QK];do QK=QK+1;end;do(UK)[11]=UK[11][U4[0X1]];end;QK=QK+0X1;QK=QK+0X00001;do U4=bc[QK];end;QK=QK+0X0001;(UK)[11]=UK[11][U4[0x01]];U4=bc[QK];do QK=QK+0X1;end;(UK)[0xB]=UK[0X0b][U4[1]];QK=QK+1;QK=QK+0X1;do QK=QK+0X1;end;pk=8;NK=pk+0x4-1;(UK)[pk]=UK[pk](E(UK,pk+0X00001,NK));do NK=pk;end;QK=QK+1;(UK)[0x07]=UK[0X07]-UK[0x008];U4=bc[QK];QK=QK+0X1;UK[0X007]=UK[7][U4[1]];QK=QK+0X1;do QK=QK+1;end;U4=bc[QK];QK=QK+1;do if not(not(UK[0x07]<=U4[0X1]))then else QK=U4[0X0002];end;end;end;end;else do if W4==0X03 then(UK)[U4[0x002]]=UK[U4[5]]-UK[U4[0X0004]];else(UK)[U4[0X0002]]={E({},0X001,U4[5])};end;end;end;end;end;else if not(W4>=14)then if W4>=11 then if not(W4>=12)then local Tj=(U4[0X0002]);local Mj=(UK[Tj]);local ej=(U4[0x4]-1)*0x32;for QH=0X1,U4[0X5]do do(Mj)[ej+QH]=UK[Tj+QH];end;end;else if W4==0X00d then else local jp=U4[2];local Ap,Ip,Bp=UK[jp]();if Ap then UK[jp+0x1]=Ip;(UK)[jp+0X02]=Bp;do QK=U4[0X5];end;end;end;end;else if W4~=0x0000a then do if not UK[U4[0X2]]then do QK=U4[5];end;end;end;else local j6=(Uc[U4[0X5]]);local u6=nil;local B6=(j6[5]);local A6=#B6;if A6>0X0 then u6={};for rd=1,A6 do local Rd=(B6[rd]);if Rd[1]~=0X0000 then u6[rd-0X01]=jc[Rd[2]];else u6[rd-1]={UK,Rd[2]};end;end;(S)(Lc,u6);end;UK[U4[0x02]]=e3(j6,u6,kK);end;end;else do if not(W4>=16)then if W4~=0XF then(UK)[0]={};U4=bc[QK];QK=QK+0X00001;UK[1]=kK[U4[6]];QK=QK+0X1;QK=QK+1;U4=bc[QK];QK=QK+1;UK[0X0001]=UK[1][U4[1]];do U4=bc[QK];end;do QK=QK+0X0001;end;UK[1]=UK[1][U4[1]];QK=QK+0X1;do QK=QK+1;end;U4=bc[QK];QK=QK+1;(UK)[0X002]=kK[U4[6]];QK=QK+1;QK=QK+0X1;U4=bc[QK];do QK=QK+0X1;end;do UK[0X02]=UK[2][U4[1]];end;local Zv=0X05;U4=bc[QK];QK=QK+1;(UK)[0x2]=UK[2][U4[0X1]];do QK=QK+1;end;do QK=QK+0X001;end;U4=bc[QK];QK=QK+0x001;(UK)[0X00003]=UK[2][U4[1]];U4=bc[QK];QK=QK+1;(UK)[0x4]=kK[U4[0X6]];do U4=bc[QK];end;QK=QK+1;local Hv=(UK[0X1]);(UK)[Zv+1]=Hv;UK[Zv]=Hv[U4[0x1]];do QK=QK+0X1;end;local Nv=0X002;do Zv=5;end;local gv=0;if Nv~=0 then NK=Zv+Nv-1;end;local Xv,fv=nil,(nil);if Nv==1 then Xv,fv=q3(UK[Zv]());else Xv,fv=q3(UK[Zv](E(UK,Zv+0X001,NK)));end;if gv==0X1 then NK=Zv-1;else if gv==0X0 then Xv=Xv+Zv-0X00001;NK=Xv;else do Xv=Zv+gv-0x2;end;NK=Xv+1;end;local iH=0X000;for po=Zv,Xv do iH=iH+0x01;UK[po]=fv[iH];end;end;do QK=QK+1;end;QK=QK+1;QK=QK+1;Zv=0X04;Nv=0X0;do gv=0X4;end;if Nv==0 then else NK=Zv+Nv-0x00001;end;Xv,fv=nil;if Nv~=0x001 then Xv,fv=q3(UK[Zv](E(UK,Zv+0X1,NK)));else Xv,fv=q3(UK[Zv]());end;if gv==0x001 then NK=Zv-1;else do if gv==0x00000 then Xv=Xv+Zv-0X00001;do NK=Xv;end;else Xv=Zv+gv-2;NK=Xv+1;end;end;local bq=0x000;do for ST=Zv,Xv do bq=bq+1;UK[ST]=fv[bq];end;end;end;do U4=bc[QK];end;do QK=QK+1;end;Zv=0X00004;local Qv=P(function(...)C();do for ld,qd in...do C(true,ld,qd);end;end;end);(Qv)(UK[Zv],UK[Zv+1],UK[Zv+0X2]);NK=Zv;UK[Zv]=Qv;QK=U4[0X5];else repeat local y5,Q5=Lc,(UK);do if not(#y5>0X0)then else local Pq=({});do for z5,S5 in M,y5 do do for GE,sE in M,S5 do if not(sE[0x1]==Q5 and sE[2]>=0X00)then else local P2=(sE[2]);do if not(not Pq[P2])then else(Pq)[P2]={Q5[P2]};end;end;(sE)[0X001]=Pq[P2];(sE)[0X2]=1;end;end;end;end;end;end;end;until true;return;end;else if not(W4>=17)then UK[U4[2]]=kK[U4[6]];else do if W4==0X12 then(UK)[U4[0X2]]=UK[U4[5]];else UK[4]=U4[6];U4=bc[QK];QK=QK+0X1;local fT,zT=nil,Uc[U4[5]];local vT,jT=zT[0X05],4;local ST=(#vT);if ST>0 then fT={};for ZA=1,ST do local vA=vT[ZA];if vA[1]==0 then(fT)[ZA-0x01]={UK,vA[0X0002]};else do(fT)[ZA-1]=jc[vA[2]];end;end;end;(S)(Lc,fT);end;(UK)[5]=e3(zT,fT,kK);QK=QK+1;do(UK[0X0])[UK[4]]=UK[5];end;QK=QK+0x1;do(UK)[0X4]=UK[0];end;QK=QK+1;repeat local GV,BV=Lc,(UK);if#GV>0 then local US={};for cf,af in M,GV do for wE,pE in M,af do if pE[1]==BV and pE[0X2]>=0X00000 then local Su=pE[2];if not(not US[Su])then else US[Su]={BV[Su]};end;(pE)[0x1]=US[Su];pE[2]=0X01;end;end;end;end;until true;return false,jT,jT;end;end;end;end;end;end;end;end;end;end);do if not(SK)then if V(EK)~="\115\116ri\110\103"then q(EK,0);else if not(r(EK,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(r(EK,'\094\046-:%\100\043:\032'))then(q)(EK,0X00);else(q)("Luraph Script:"..(Qc[QK-1]or"(int\101rna\108)")..':\032'..u(EK),0X000);end;end;end;else if EK then do if qK==0X1 then return UK[pK]();else return UK[pK](E(UK,pK+1,NK));end;end;elseif pK then do return E(UK,pK,qK);end;end;end;end;end;else ic=function(...)local ka=(1);local ta={};local ea={[1]=ta,[2]=Vc};local Aa=((k and k()or _ENV));local pa=((Aa==H and fc or Aa));local qa,Ya=q3(...);qa=qa-1;do for yh=0X0,qa do if not(ac>yh)then break;else(ta)[yh]=Ya[yh+1];end;end;end;local ya=(0X0);if not nc then Ya=nil;elseif Ac then(ta)[ac]={n=qa>=ac and qa-ac+0X1 or 0,E(Ya,ac+1,qa+1)};end;if pa==Aa then else if s then(s)(ic,pa);else _ENV=pa;end;end;local Ha,Ia,Ra,ha=c(function()while true do local p4=bc[ka];local I4=p4[0X3];ka=ka+0X00001;if I4<10 then if I4<5 then if I4<0X0002 then if I4~=0X00001 then local LL=(Uc[p4[0X05]]);local wL,cL=LL[0X5],nil;local nL=#wL;if not(nL>0)then else cL={};for ZH=0X1,nL do local RH=(wL[ZH]);if RH[0x00001]~=0X00000 then cL[ZH-1]=jc[RH[0X2]];else cL[ZH-0X01]={ta,RH[0X02]};end;end;S(Lc,cL);end;ta[p4[0x2]]=e3(LL,cL,pa);else repeat local dG,UG,iG=Lc,ta,p4[0x2];do if not(#dG>0)then else local Nk={};for gC,AC in M,dG do do for Cv,Dv in M,AC do if Dv[1]==UG and Dv[0X2]>=iG then local D0=(Dv[0x2]);if not Nk[D0]then(Nk)[D0]={UG[D0]};end;(Dv)[0X0001]=Nk[D0];(Dv)[0X2]=0X1;end;end;end;end;end;end;until true;end;else if I4<0X3 then if ta[p4[5]]<ta[p4[4]]then ka=p4[2];end;else if I4~=4 then ka=p4[5];else local qx=(jc[0]);(ta)[0X0000]=qx[1][qx[0X2]];p4=bc[ka];local Bx=0;ka=ka+0X1;local Jx=ta[0];ta[Bx+0X1]=Jx;(ta)[Bx]=Jx[p4[1]];do ka=ka+1;end;do Bx=0X0;end;do(ta)[Bx]=ta[Bx](ta[Bx+1]);end;ya=Bx;ka=ka+1;ka=ka+1;p4=bc[ka];do ka=ka+0X1;end;do ka=p4[0X0005];end;end;end;end;else if I4<7 then do if I4==0X6 then ta[p4[2]]=pa[p4[0X6]];else(ta)[p4[0X00002]]=v(ta[p4[5]],ta[p4[0X4]]);end;end;else do if I4>=8 then do if I4~=0X9 then(ta)[p4[0X2]]=ta[p4[5]]<ta[p4[0X4]];else local Lb=(p4[5]);local wb=ta[Lb];for W7=Lb+0X1,p4[0X4]do wb=wb..ta[W7];end;(ta)[p4[0X2]]=wb;end;end;else(ta)[0]=pa[p4[0X006]];ka=ka+0X1;ka=ka+0x1;do p4=bc[ka];end;ka=ka+1;(ta)[0]=ta[0][p4[0X1]];end;end;end;end;else if not(I4>=0X0000f)then do if I4>=12 then do if not(I4>=0X0D)then if not(not ta[p4[2]])then else ka=p4[0X5];end;else if I4~=14 then do ta[0X000]=pa[p4[6]];end;local BS=(0X0);ka=ka+0x1;ka=ka+1;do p4=bc[ka];end;ka=ka+0X001;(ta)[0X1]=p4[6];ka=ka+1;(ta)[BS]=ta[BS](ta[BS+0X00001]);ya=BS;ka=ka+1;ta[0]=not ta[0];do p4=bc[ka];end;ka=ka+0X1;do if not ta[0]then ka=p4[5];end;end;else ta[p4[0X00002]]=p4[0X6];end;end;end;else do if I4==11 then for Jz=p4[2],p4[5]do do ta[Jz]=nil;end;end;else repeat local oM,dM=Lc,(ta);if#oM>0 then local wi=({});for xU,IU in M,oM do for ny,Sy in M,IU do if Sy[0X1]==dM and Sy[0X02]>=0 then local Ow=Sy[0X00002];do if not wi[Ow]then wi[Ow]={dM[Ow]};end;end;Sy[0X1]=wi[Ow];(Sy)[2]=1;end;end;end;end;until true;return;end;end;end;end;else if I4<0x11 then if I4==16 then do ta[p4[0X00002]]={E({},0x1,p4[0X00005])};end;else do repeat local Nz,Ez=Lc,(ta);if#Nz>0 then local xJ={};for q5,V5 in M,Nz do for Sp,wp in M,V5 do do if not(wp[1]==Ez and wp[2]>=0)then else local Xb=wp[2];if not(not xJ[Xb])then else xJ[Xb]={Ez[Xb]};end;wp[0X1]=xJ[Xb];wp[0X2]=1;end;end;end;end;end;until true;end;local Px=(p4[0X002]);return false,Px,Px;end;else if not(I4>=18)then local PH=(p4[2]);local pH=(ta[PH+2]);local EH,NH=ta[PH],(ta[PH+1]);ta[PH]=P(function()for Ye=EH,NH,pH do(C)(true,Ye);end;end);ka=p4[0X0005];else if I4~=19 then local uP=(p4[0X2]);local SP=((p4[0X4]-1)*0X32);local cP=(ta[uP]);for U8=0x1,p4[5]do cP[SP+U8]=ta[uP+U8];end;else end;end;end;end;end;end;end);if not(Ha)then if V(Ia)=="string"then do if r(Ia,'\097\116tem\112\116 \116o\032\121\105el\100\032ac\114os\115\032\109\101\116\097m\101t\104\111\100\047\067%\045c\097\108\108 b\111\117n\100ar\121')then do return coroutine.yield();end;end;end;do if not(r(Ia,"^\046-:\037\100+:\032"))then q(Ia,0);else(q)('\076u\114a\112\104 \083c\114ip\116\058'..(Qc[ka-1]or"(internal)")..": "..u(Ia),0X000);end;end;else q(Ia,0X00);end;else if Ia then if ha~=0x1 then return ta[Ra](E(ta,Ra+1,ya));else do return ta[Ra]();end;end;elseif not(Ra)then else return E(ta,Ra,ha);end;end;end;end;else if Sc~=22 then do ic=function(...)local IE={};local WE=(0X00001);local qE=({[2]=Vc,[1]=IE});local wE=(k and k()or _ENV);local BE=0;local iE,eE=q3(...);iE=iE-1;do for Wp=0,iE do do if ac>Wp then IE[Wp]=eE[Wp+0x1];else break;end;end;end;end;local xE=(wE==H and fc or wE);if not nc then eE=nil;elseif Ac then do IE[ac]={n=iE>=ac and iE-ac+1 or 0,E(eE,ac+1,iE+1)};end;end;if xE==wE then else if not(s)then do _ENV=xE;end;else(s)(ic,xE);end;end;local KE,UE,HE,ME=c(function()while true do local XM=(bc[WE]);local vM=(XM[0x0003]);do WE=WE+0X00001;end;do if vM>=7 then do if not(vM<11)then if vM<0x0d then if vM==0xc then WE=XM[0X5];else repeat local nb,eb,sb=Lc,IE,(XM[2]);if#nb>0 then local jx={};for Vy,ly in M,nb do for EP,yP in M,ly do if not(yP[1]==eb and yP[2]>=sb)then else local QW=(yP[0X002]);do if not(not jx[QW])then else jx[QW]={eb[QW]};end;end;(yP)[1]=jx[QW];(yP)[0X0002]=0x1;end;end;end;end;until true;end;else do if vM~=14 then(IE)[0X0001]=xE[XM[6]];WE=WE+1;BE=1;local kq=1;local Oq=(jc[0X0]);do(IE)[BE]=IE[BE]();end;do WE=WE+1;end;(Oq[1])[Oq[2]]=IE[0x0001];XM=bc[WE];WE=WE+1;(IE)[1]=xE[XM[6]];do WE=WE+1;end;do WE=WE+0X0001;end;do XM=bc[WE];end;WE=WE+0X1;do(IE)[0x01]=IE[1][XM[0X01]];end;XM=bc[WE];WE=WE+1;IE[0X2]=XM[6];XM=bc[WE];WE=WE+1;(IE)[0X3]=XM[6];do WE=WE+1;end;local Hq=(0X2);IE[kq]=IE[kq](IE[kq+1],IE[kq+2]);BE=kq;do XM=bc[WE];end;WE=WE+1;local xq=(IE[0X1]);kq=0x001;IE[kq+0X001]=xq;do(IE)[kq]=xq[XM[0X1]];end;WE=WE+1;kq=0X01;(IE[kq])(IE[kq+1]);BE=kq-0X0001;XM=bc[WE];WE=WE+0X01;IE[1]=xE[XM[6]];XM=bc[WE];WE=WE+0X1;(IE)[0X1]=IE[1][XM[1]];XM=bc[WE];WE=WE+0X01;(IE)[0X2]=XM[0X6];XM=bc[WE];WE=WE+1;IE[0X3]=XM[6];do WE=WE+0X1;end;kq=0x1;IE[kq]=IE[kq](IE[kq+0x1],IE[kq+0x0002]);BE=kq;WE=WE+1;do WE=WE+1;end;XM=bc[WE];do WE=WE+1;end;kq=1;xq=IE[0X1];IE[kq+1]=xq;(IE)[kq]=xq[XM[1]];XM=bc[WE];WE=WE+0X1;do(IE)[0X00003]=XM[0x6];end;WE=WE+1;do kq=1;end;(IE[kq])(IE[kq+0x0001],IE[kq+2]);do BE=kq-1;end;do WE=WE+0x01;end;WE=WE+1;XM=bc[WE];do WE=WE+0X01;end;IE[1]=xE[XM[6]];XM=bc[WE];WE=WE+1;(IE)[0X1]=IE[0X0001][XM[1]];XM=bc[WE];WE=WE+1;(IE)[0x0002]=XM[0x6];WE=WE+0X1;(IE)[3]=IE[0];XM=bc[WE];WE=WE+0x1;do IE[4]=XM[6];end;do WE=WE+1;end;local yq=IE[Hq];for wx=Hq+1,0X4 do yq=yq..IE[wx];end;do(IE)[2]=yq;end;XM=bc[WE];WE=WE+1;(IE)[0x3]=XM[0X6];WE=WE+0x1;do kq=0X0001;end;IE[kq]=IE[kq](IE[kq+0x1],IE[kq+0x2]);BE=kq;XM=bc[WE];WE=WE+1;kq=1;do xq=IE[0x1];end;do(IE)[kq+1]=xq;end;(IE)[kq]=xq[XM[1]];do WE=WE+0x00001;end;kq=1;(IE[kq])(IE[kq+1]);do BE=kq-0X001;end;WE=WE+0X1;do WE=WE+1;end;XM=bc[WE];WE=WE+0X1;(IE)[1]=xE[XM[0x6]];WE=WE+0X1;WE=WE+1;XM=bc[WE];do WE=WE+0X0001;end;IE[1]=IE[1][XM[1]];do XM=bc[WE];end;WE=WE+0X1;(IE)[0x002]=XM[6];XM=bc[WE];WE=WE+1;IE[0X3]=XM[6];WE=WE+0x1;kq=0X1;do(IE)[kq]=IE[kq](IE[kq+1],IE[kq+0X00002]);end;do BE=kq;end;do XM=bc[WE];end;WE=WE+0x001;kq=1;xq=IE[0X1];do IE[kq+1]=xq;end;do IE[kq]=xq[XM[1]];end;WE=WE+1;do kq=1;end;(IE[kq])(IE[kq+0X1]);BE=kq-1;WE=WE+1;do repeat local Pv,Cv=Lc,(IE);if not(#Pv>0)then else local xu={};for mD,cD in M,Pv do for KX,yX in M,cD do if yX[0x1]==Cv and yX[0X2]>=0x0 then local R0=yX[0x00002];if not xu[R0]then xu[R0]={Cv[R0]};end;do(yX)[1]=xu[R0];end;(yX)[2]=0x0001;end;end;end;end;until true;end;return;else(IE)[XM[2]]=true;end;end;end;else if vM<9 then if vM~=8 then else for wm=XM[0X00002],XM[5]do(IE)[wm]=nil;end;end;else if vM==0X00a then do repeat local CU,LU=Lc,(IE);if not(#CU>0)then else local U7={};for B7,E7 in M,CU do for rz,Jz in M,E7 do if not(Jz[1]==LU and Jz[2]>=0)then else local mW=Jz[0X0002];do if not U7[mW]then U7[mW]={LU[mW]};end;end;(Jz)[1]=U7[mW];(Jz)[0X2]=0X1;end;end;end;end;until true;end;return;else do if not(IE[XM[5]]<=IE[XM[4]])then WE=XM[0X2];end;end;end;end;end;end;else if not(vM<0x3)then if not(vM<5)then if vM~=0x06 then(IE)[XM[2]]={E({},1,XM[5])};else(IE)[XM[2]]=xE[XM[0x6]];end;else if vM==0X4 then IE[XM[2]]=XM[6];else local kL=XM[2];local aL,BL=IE[kL]();if not(aL)then else do WE=XM[5];end;(IE)[kL+0X3]=BL;end;end;end;else if vM<1 then do(IE)[1]=xE[XM[0x6]];end;WE=WE+0X001;local sc=(jc[0X0]);BE=0x1;do IE[BE]=IE[BE]();end;WE=WE+0X01;IE[2]=sc[0X1][sc[2]];WE=WE+1;do WE=WE+1;end;do WE=WE+1;end;(IE)[0X001]=IE[1]-IE[0x2];XM=bc[WE];WE=WE+1;if not(not(IE[0X1]<XM[0X00001]))then else WE=XM[0X2];end;else if vM==0X2 then local ek,Hk=XM[2],(XM[5]);BE=ek+Hk-0X1;repeat local jd,od=Lc,IE;if not(#jd>0X0)then else local fY={};for WR,vR in M,jd do for j5,A5 in M,vR do if A5[0X1]==od and A5[2]>=0X0 then local Ry=(A5[2]);if not(not fY[Ry])then else(fY)[Ry]={od[Ry]};end;A5[1]=fY[Ry];A5[2]=0X1;end;end;end;end;until true;do return true,ek,Hk;end;else local lV=(Uc[XM[5]]);local YV=(lV[0X5]);local jV=(nil);local EV=#YV;if not(EV>0)then else jV={};for ez=0X0001,EV do local zz=(YV[ez]);if zz[0X1]==0 then(jV)[ez-1]={IE,zz[0X002]};else(jV)[ez-0X0001]=jc[zz[2]];end;end;S(Lc,jV);end;do(IE)[XM[2]]=e3(lV,jV,xE);end;end;end;end;end;end;end;end);if KE then do if UE then do if ME==0X0001 then return IE[HE]();else return IE[HE](E(IE,HE+0x1,BE));end;end;elseif not(HE)then else do return E(IE,HE,ME);end;end;end;else do if V(UE)=="string"then do if not(r(UE,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;do if r(UE,"\094.\045:%d+\058 ")then q('\076\117\114a\112h \083c\114\105pt\058'..(Qc[WE-1]or"(internal)")..": "..u(UE),0X00000);else q(UE,0x0000);end;end;else q(UE,0);end;end;end;end;end;else ic=function(...)local G9=0X01;local A9=({});local f9=((k and k()or _ENV));local F9,y9=(f9==H and fc or f9),({[1]=A9,[2]=Vc});local o9,j9=q3(...);o9=o9-1;do for hp=0X0,o9 do do if ac>hp then do A9[hp]=j9[hp+0X1];end;else break;end;end;end;end;if not nc then j9=nil;elseif Ac then A9[ac]={n=o9>=ac and o9-ac+0X1 or 0,E(j9,ac+0X001,o9+1)};end;if F9==f9 then else if not(s)then _ENV=F9;else(s)(ic,F9);end;end;local v9=(0X0);while true do local uL=(bc[G9]);local QL=(uL[3]);G9=G9+1;return(function(W,c,...)local Y={...};local C=network:Send("CommF_",...);if Y[1]=="requestEntrance"then CollectionService:AddTag(Client,"Teleporting");task.delay(3,function()CollectionService:RemoveTag(Client,"Teleporting");end);wait(.25);end;return C;end)(A9,jc,...);end;end;end;end;end;end;end;end;end;end;else if Sc<189 then if not(Sc<0X009D)then if Sc>=173 then if not(Sc>=0xb5)then if not(Sc>=0x00B1)then if Sc>=175 then if Sc==0X000B0 then ic=function(...)local rG=({});local JG=(0x1);local yG=(k and k()or _ENV);local GG=({[1]=rG,[2]=Vc});local fG,qG=0x0,((yG==H and fc or yG));local nG,SG=q3(...);nG=nG-1;for LK=0X0000,nG do if not(ac>LK)then break;else rG[LK]=SG[LK+1];end;end;do if not nc then SG=nil;elseif not(Ac)then else(rG)[ac]={n=nG>=ac and nG-ac+1 or 0X0,E(SG,ac+1,nG+0x1)};end;end;if qG~=yG then if not(s)then _ENV=qG;else(s)(ic,qG);end;end;local cG,tG,RG,HG=c(function()do while true do local Hh=(bc[JG]);local zh=(Hh[3]);JG=JG+0x00001;if zh>=10 then do if zh<0X0000F then if not(zh>=0X0000c)then if zh~=0x0b then do if not(rG[Hh[0X02]])then else JG=Hh[5];end;end;else repeat local BW,LW=Lc,(rG);if not(#BW>0x0)then else local K1={};do for qv,Bv in M,BW do for i4,V4 in M,Bv do do if not(V4[0X1]==LW and V4[2]>=0)then else local yB=(V4[2]);if not(not K1[yB])then else K1[yB]={LW[yB]};end;V4[0X01]=K1[yB];(V4)[0x002]=0x001;end;end;end;end;end;end;until true;do return;end;end;else if zh>=13 then if zh~=14 then repeat local yo,wo=Lc,(rG);if not(#yo>0X0)then else local PL=({});for oi,ni in M,yo do do for Pw,Ew in M,ni do if not(Ew[1]==wo and Ew[0x0002]>=0)then else local oQ=Ew[2];if not(not PL[oQ])then else PL[oQ]={wo[oQ]};end;(Ew)[0X01]=PL[oQ];Ew[2]=0X1;end;end;end;end;end;until true;local B_=Hh[0x2];return false,B_,B_;else local JV=nil;local tV=(Uc[Hh[0X5]]);local DV=tV[5];local XV=#DV;do if not(XV>0)then else JV={};for LJ=1,XV do local lJ=(DV[LJ]);if lJ[0X001]==0 then(JV)[LJ-0x0001]={rG,lJ[2]};else JV[LJ-0X001]=jc[lJ[2]];end;end;(S)(Lc,JV);end;end;rG[Hh[0X2]]=e3(tV,JV,qG);end;else do if not rG[Hh[0X2]]then JG=Hh[5];end;end;end;end;else if zh>=17 then do if zh>=18 then if zh==19 then(rG)[Hh[0X2]]=not rG[Hh[0X00005]];else rG[Hh[0X2]]={E({},0X1,Hh[5])};end;else(rG)[Hh[0X2]]=Hh[0X6];end;end;else if zh==16 then repeat local cR,TR=Lc,rG;do if not(#cR>0)then else local Xm={};for Pp,Yp in M,cR do for Ht,zt in M,Yp do if zt[0X1]==TR and zt[0X2]>=0 then local jG=zt[2];if not Xm[jG]then(Xm)[jG]={TR[jG]};end;(zt)[0X0001]=Xm[jG];(zt)[0X2]=1;end;end;end;end;end;until true;local tU=(Hh[0X002]);return false,tU,tU+Hh[0X5]-0X2;else rG[Hh[2]]=qG[Hh[0X00006]];end;end;end;end;else if zh>=0X005 then do if zh<0x7 then if zh~=0X6 then do(rG)[0]=qG[Hh[6]];end;JG=JG+1;fG=0;do rG[fG]=rG[fG]();end;do JG=JG+1;end;rG[0X0]=not rG[0];Hh=bc[JG];JG=JG+1;JG=Hh[5];else(rG)[Hh[0X02]]=GG[Hh[5]];end;else if not(zh<0X8)then if zh~=9 then else(rG)[0X0]=qG[Hh[6]];JG=JG+0X01;JG=JG+1;Hh=bc[JG];JG=JG+0X001;rG[0]=rG[0X00][Hh[0x00001]];JG=JG+0X0001;JG=JG+0X1;end;else local SO=(Hh[0X2]);local lO,cO=rG[SO]();if lO then for gv=0x001,Hh[4]do(rG)[SO+gv]=cO[gv];end;do JG=Hh[5];end;end;end;end;end;else if zh>=2 then if zh>=3 then do if zh==4 then rG[0X0]=qG[Hh[6]];JG=JG+0X1;JG=JG+1;Hh=bc[JG];JG=JG+1;do rG[0]=rG[0][Hh[0X1]];end;JG=JG+1;(rG)[0]=not rG[0x0];Hh=bc[JG];do JG=JG+0X1;end;if not(not rG[0])then else JG=Hh[0X0005];end;else rG[Hh[0X2]]=rG[Hh[5]]==rG[Hh[4]];end;end;else do JG=Hh[5];end;end;else if zh==1 then(rG)[Hh[2]]=o(rG[Hh[5]],rG[Hh[0x0004]]);else if rG[Hh[0X5]]==rG[Hh[4]]then JG=Hh[0X2];end;end;end;end;end;end;end;end);if not(cG)then if V(tG)~="string"then q(tG,0);else if r(tG,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if r(tG,"^.-:%d+: ")then(q)("Luraph Script:"..(Qc[JG-1]or"(internal)")..":\032"..u(tG),0X0);else q(tG,0);end;end;else if tG then if HG==0X1 then return rG[RG]();else return rG[RG](E(rG,RG+0x0001,fG));end;elseif RG then do return E(rG,RG,HG);end;end;end;end;else ic=function(...)local E0=({});local T0=(0X1);local o0={[2]=Vc,[1]=E0};local J0=(k and k()or _ENV);local Z0=(J0==H and fc or J0);local t0,y0=q3(...);do t0=t0-0X00001;end;do for A_=0x0,t0 do do if not(ac>A_)then break;else(E0)[A_]=y0[A_+0x1];end;end;end;end;local d0=(0);do if not nc then y0=nil;elseif Ac then E0[ac]={n=t0>=ac and t0-ac+0X0001 or 0,E(y0,ac+1,t0+0x1)};end;end;if Z0~=J0 then if not(s)then do _ENV=Z0;end;else(s)(ic,Z0);end;end;local S0,v0,r0,n0=c(function()while true do local DX=bc[T0];local dX=(DX[3]);T0=T0+0X1;if not(dX<0X7)then do if dX<0XA then if not(dX<0X00008)then if dX~=9 then local Su=(DX[2]);local iu=DX[0X4];local Bu=(DX[5]);if Bu~=0 then d0=Su+Bu-1;end;local Yu,Ku=nil,nil;do if Bu==1 then Yu,Ku=q3(E0[Su]());else Yu,Ku=q3(E0[Su](E(E0,Su+0x01,d0)));end;end;if iu~=0X00001 then if iu==0X0 then Yu=Yu+Su-1;do d0=Yu;end;else Yu=Su+iu-2;d0=Yu+1;end;local Po=0X0;for zl=Su,Yu do do Po=Po+1;end;(E0)[zl]=Ku[Po];end;else d0=Su-0X1;end;else local vD=(Uc[DX[5]]);local fD=vD[5];local LD=nil;local OD=#fD;if not(OD>0)then else LD={};for iy=0x00001,OD do local Uy=(fD[iy]);if Uy[1]~=0 then(LD)[iy-0X00001]=jc[Uy[2]];else LD[iy-0X1]={E0,Uy[0X2]};end;end;S(Lc,LD);end;(E0)[DX[2]]=e3(vD,LD,Z0);end;else repeat local Ya,sa=Lc,(E0);do if#Ya>0 then local bE={};for so,Go in M,Ya do for th,oh in M,Go do if oh[0X1]==sa and oh[2]>=0X00 then local Uh=oh[0X02];if not(not bE[Uh])then else bE[Uh]={sa[Uh]};end;do(oh)[0X1]=bE[Uh];end;oh[2]=0X1;end;end;end;end;end;until true;local kZ=DX[0x0002];return false,kZ,kZ+DX[0X5]-0X2;end;else if not(dX<0X0c)then if dX~=0XD then do E0[DX[2]]=E0[DX[5]]%E0[DX[0X4]];end;else repeat local oJ,BJ=Lc,E0;if#oJ>0 then local nw=({});for wn,on in M,oJ do for lE,oE in M,on do if oE[1]==BJ and oE[0X2]>=0X00 then local Gf=(oE[0X00002]);do if not(not nw[Gf])then else nw[Gf]={BJ[Gf]};end;end;do oE[0X1]=nw[Gf];end;(oE)[2]=0x1;end;end;end;end;until true;return false,DX[2],d0;end;else if dX==11 then E0[0X001]=Z0[DX[6]];do T0=T0+0x1;end;T0=T0+1;DX=bc[T0];T0=T0+0X01;do E0[1]=E0[1][DX[0x00001]];end;local lz,hz=1,(0X3);DX=bc[T0];T0=T0+0x001;local Zz=E0[0X1];do(E0)[lz+1]=Zz;end;do E0[lz]=Zz[DX[0X0001]];end;T0=T0+1;(E0)[3]=E0[0X0];do T0=T0+1;end;lz=1;d0=lz+hz-0X1;repeat local BH,HH=Lc,E0;do if not(#BH>0)then else local wi=({});for BR,fR in M,BH do for XJ,iJ in M,fR do if iJ[0x1]==HH and iJ[0x2]>=0x0 then local UK=(iJ[0X2]);do if not wi[UK]then do(wi)[UK]={HH[UK]};end;end;end;(iJ)[1]=wi[UK];iJ[0X00002]=0X1;end;end;end;end;end;until true;return true,lz,hz;else local AR=E0[DX[5]]/E0[DX[0x4]];E0[DX[2]]=AR-AR%0X001;end;end;end;end;else if dX>=0X0003 then if not(dX<5)then do if dX==6 then(E0)[DX[0x2]]=#E0[DX[0X00005]];else repeat local uV,rV=Lc,E0;if#uV>0 then local ke={};do for oR,JR in M,uV do for WN,jN in M,JR do do if not(jN[1]==rV and jN[2]>=0)then else local I7=jN[0X002];if not(not ke[I7])then else(ke)[I7]={rV[I7]};end;(jN)[1]=ke[I7];(jN)[2]=1;end;end;end;end;end;end;until true;return;end;end;else do if dX==4 then(E0)[DX[2]]={E({},1,DX[0X5])};else E0[DX[0X2]]=DX[6];end;end;end;else do if dX>=1 then do if dX==0x2 then else(E0)[DX[2]]=Z0[DX[6]];end;end;else T0=DX[5];end;end;end;end;end;end);do if S0 then if v0 then do if n0==0x00001 then return E0[r0]();else return E0[r0](E(E0,r0+1,d0));end;end;elseif r0 then return E(E0,r0,n0);end;else if V(v0)~="\115\116\114ing"then(q)(v0,0X00);else if r(v0,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if r(v0,"^.-:%d+: ")then(q)("Luraph Script:"..(Qc[T0-1]or"(internal)")..": "..u(v0),0);else q(v0,0);end;end;end;end;end;end;end;else if Sc==174 then ic=function(...)local wd,sd=1,{};local Gd=(k and k()or _ENV);local Ud=({[2]=Vc,[1]=sd});local hd=(Gd==H and fc or Gd);local rd,Qd=q3(...);rd=rd-0X1;do for Of=0,rd do if not(ac>Of)then break;else sd[Of]=Qd[Of+0X01];end;end;end;local Fd=(0X0);if not nc then Qd=nil;elseif not(Ac)then else do sd[ac]={n=rd>=ac and rd-ac+0X01 or 0,E(Qd,ac+0X1,rd+1)};end;end;if hd~=Gd then if s then(s)(ic,hd);else do _ENV=hd;end;end;end;while true do local BC=bc[wd];local nC=(BC[3]);wd=wd+1;return(function(Y,U,...)local k=Y[0];local a=k;while true do local S,w=string.gsub(a,"^(-?%d+)(%d%d%d)","%1,%2");a=S;if w==0 then break;end;end;return a;end)(sd,jc,...);end;end;else ic=function(...)local R0,x0=0,({});local i0=((k and k()or _ENV));local c0=({[1]=x0,[2]=Vc});local X0,n0=q3(...);local D0=1;local W0=(i0==H and fc or i0);do X0=X0-0X1;end;for SE=0,X0 do if not(ac>SE)then break;else(x0)[SE]=n0[SE+1];end;end;do if not nc then n0=nil;elseif not(Ac)then else x0[ac]={n=X0>=ac and X0-ac+1 or 0X0,E(n0,ac+0X01,X0+0X00001)};end;end;if W0==i0 then else if not(s)then _ENV=W0;else(s)(ic,W0);end;end;local t0,T0,N0,j0=c(function()while true do local F6=(bc[D0]);local b6=F6[3];do D0=D0+0X0001;end;if b6<28 then if not(b6>=0Xe)then do if b6<7 then if b6>=0X3 then if b6>=0X005 then if b6==0x0006 then else do(x0)[0X002]=W0[F6[6]];end;do D0=D0+1;end;D0=D0+0x1;F6=bc[D0];D0=D0+1;do(x0)[0x00003]=F6[0X6];end;F6=bc[D0];do D0=D0+1;end;(x0)[4]=W0[F6[0X06]];D0=D0+0X0001;D0=D0+1;do F6=bc[D0];end;D0=D0+0X1;(x0)[4]=x0[4][F6[1]];F6=bc[D0];local II=0;do D0=D0+0x1;end;x0[0X5]=F6[0x6];F6=bc[D0];local wI=(4);D0=D0+0X1;(x0)[6]=F6[6];F6=bc[D0];D0=D0+0X01;do(x0)[7]=F6[0X0006];end;D0=D0+1;local RI=4;if RI==0 then else R0=wI+RI-0X00001;end;local AI,BI=nil,nil;do if RI~=0X1 then AI,BI=q3(x0[wI](E(x0,wI+0X1,R0)));else do AI,BI=q3(x0[wI]());end;end;end;if II==1 then R0=wI-1;else if II~=0 then AI=wI+II-2;do R0=AI+0X1;end;else AI=AI+wI-1;do R0=AI;end;end;local mY=(0X0);for sS=wI,AI do mY=mY+1;x0[sS]=BI[mY];end;end;D0=D0+0x01;wI=2;(x0[wI])(E(x0,wI+0X001,R0));R0=wI-0x1;F6=bc[D0];do D0=D0+0X1;end;do D0=F6[0X5];end;end;else if b6~=0X4 then if x0[F6[5]]~=F6[0X1]then else D0=F6[0X2];end;else x0[0X2]=F6[6];local C5=0X2;do F6=bc[D0];end;D0=D0+0X01;local O5=x0[2];(x0)[C5+1]=O5;do x0[C5]=O5[F6[1]];end;D0=D0+0x1;(x0)[4]=x0[1];do D0=D0+0X1;end;C5=0X2;x0[C5]=x0[C5](x0[C5+0X001],x0[C5+0X02]);do R0=C5;end;F6=bc[D0];do D0=D0+0x1;end;if x0[0X0002]then D0=F6[5];end;end;end;else if b6>=1 then do if b6==2 then do x0[2]=F6[0X6];end;F6=bc[D0];local S6=2;D0=D0+0X1;local k6=x0[2];x0[S6+0X1]=k6;(x0)[S6]=k6[F6[1]];D0=D0+0x1;do(x0)[0X004]=x0[0X1];end;D0=D0+0x001;S6=0x2;x0[S6]=x0[S6](x0[S6+1],x0[S6+0X0002]);do R0=S6;end;D0=D0+0X1;D0=D0+1;F6=bc[D0];D0=D0+0X1;if not x0[2]then D0=F6[0X5];end;else x0[2]=F6[0X6];local cC=(2);F6=bc[D0];D0=D0+1;local MC=x0[2];x0[cC+0x1]=MC;do(x0)[cC]=MC[F6[1]];end;D0=D0+1;do x0[4]=x0[1];end;D0=D0+1;cC=2;x0[cC]=x0[cC](x0[cC+1],x0[cC+2]);R0=cC;F6=bc[D0];D0=D0+1;if not(x0[2])then else do D0=F6[5];end;end;end;end;else(x0)[0x2]=F6[6];local x1=(2);F6=bc[D0];D0=D0+0X1;local u1=x0[2];x0[x1+1]=u1;(x0)[x1]=u1[F6[1]];D0=D0+1;x0[0X4]=x0[1];D0=D0+1;x1=0X00002;do(x0)[x1]=x0[x1](x0[x1+1],x0[x1+2]);end;R0=x1;do F6=bc[D0];end;D0=D0+0X01;if not(not x0[2])then else D0=F6[0X5];end;end;end;else if not(b6<10)then if b6>=0X0000C then do if b6==0XD then(x0)[2]=W0[F6[6]];D0=D0+1;D0=D0+1;F6=bc[D0];local Fh=0X2;D0=D0+0X1;(x0)[0X3]=W0[F6[6]];D0=D0+1;do D0=D0+0X01;end;F6=bc[D0];D0=D0+1;do x0[0X00003]=x0[3][F6[1]];end;F6=bc[D0];D0=D0+0x1;do x0[3]=x0[3][F6[1]];end;F6=bc[D0];D0=D0+0x1;do x0[0X03]=x0[3][F6[0X1]];end;F6=bc[D0];do D0=D0+1;end;(x0)[0X00003]=x0[0X3][F6[1]];do D0=D0+1;end;(x0)[Fh]=x0[Fh](x0[Fh+0X1]);R0=Fh;D0=D0+1;D0=D0+1;F6=bc[D0];D0=D0+0x01;if not(not(F6[0X006]<x0[0x00002]))then else D0=F6[2];end;else x0[0X00002]=F6[0x6];F6=bc[D0];local Hh=2;D0=D0+1;local th=x0[0X2];(x0)[Hh+1]=th;(x0)[Hh]=th[F6[0X1]];D0=D0+1;x0[0X4]=x0[0X0001];do D0=D0+0X0001;end;Hh=2;x0[Hh]=x0[Hh](x0[Hh+0X0001],x0[Hh+0X00002]);R0=Hh;do D0=D0+1;end;D0=D0+1;F6=bc[D0];do D0=D0+0x1;end;if x0[0X2]then do D0=F6[0X00005];end;end;end;end;else if b6==11 then do for Mh=F6[0X2],F6[0X0005]do do(x0)[Mh]=nil;end;end;end;else if not(x0[F6[0X5]]<x0[F6[0X4]])then do D0=F6[2];end;end;end;end;else if not(b6>=0X08)then do x0[2]=W0[F6[0X06]];end;do D0=D0+1;end;D0=D0+0X1;do D0=D0+1;end;R0=2;(x0[R0])();do R0=R0-0X1;end;D0=D0+1;do D0=D0+1;end;do F6=bc[D0];end;D0=D0+1;x0[2]=W0[F6[0X6]];F6=bc[D0];do D0=D0+0x001;end;(x0)[3]=F6[0X6];F6=bc[D0];D0=D0+0X0001;x0[0X00004]=W0[F6[0X6]];D0=D0+0X1;do D0=D0+1;end;do F6=bc[D0];end;D0=D0+0X0001;x0[4]=x0[0X4][F6[1]];do F6=bc[D0];end;D0=D0+0X001;x0[5]=F6[0X6];F6=bc[D0];local mE=4;D0=D0+1;x0[6]=F6[0X00006];do F6=bc[D0];end;local GE=(0);D0=D0+0X1;x0[7]=F6[0X00006];do D0=D0+1;end;local kE=0x4;do if kE~=0 then R0=mE+kE-0X00001;end;end;local eE,fE=nil,(nil);if kE~=1 then eE,fE=q3(x0[mE](E(x0,mE+0X1,R0)));else eE,fE=q3(x0[mE]());end;do if GE==1 then do R0=mE-1;end;else if GE==0x0 then eE=eE+mE-1;do R0=eE;end;else eE=mE+GE-0X2;do R0=eE+0X1;end;end;local eI=0;for ZC=mE,eE do eI=eI+1;x0[ZC]=fE[eI];end;end;end;D0=D0+1;do mE=2;end;x0[mE](E(x0,mE+1,R0));do R0=mE-1;end;D0=D0+0x1;do D0=D0+1;end;do F6=bc[D0];end;D0=D0+1;do D0=F6[5];end;else if b6==9 then x0[F6[2]]=x0[F6[5]]>x0[F6[0X4]];else x0[2]=W0[F6[6]];do F6=bc[D0];end;D0=D0+0X1;x0[3]=W0[F6[6]];D0=D0+0X001;local Vd=3;D0=D0+1;F6=bc[D0];do D0=D0+0X1;end;(x0)[0X3]=x0[0x3][F6[1]];F6=bc[D0];do D0=D0+1;end;x0[0x4]=F6[0X0006];do F6=bc[D0];end;do D0=D0+1;end;do x0[0X5]=F6[0X6];end;do F6=bc[D0];end;D0=D0+1;(x0)[6]=F6[0X00006];D0=D0+1;local Ld,sd=0X4,0;if Ld~=0 then R0=Vd+Ld-0X1;end;local Nd,Fd=nil,nil;if Ld==1 then Nd,Fd=q3(x0[Vd]());else Nd,Fd=q3(x0[Vd](E(x0,Vd+1,R0)));end;do if sd~=0X1 then if sd~=0X0 then Nd=Vd+sd-2;R0=Nd+1;else Nd=Nd+Vd-1;R0=Nd;end;local p5=(0X0);for Z5=Vd,Nd do do p5=p5+0X01;end;x0[Z5]=Fd[p5];end;else R0=Vd-1;end;end;D0=D0+0X1;Vd=0X2;x0[Vd]=x0[Vd](E(x0,Vd+1,R0));R0=Vd;D0=D0+0X01;D0=D0+1;do F6=bc[D0];end;D0=D0+1;do if not(not(F6[0X0006]<x0[0x2]))then else do D0=F6[0X2];end;end;end;end;end;end;end;end;else if not(b6<21)then if b6<0X00018 then if b6>=22 then do if b6~=23 then(x0)[2]=F6[0X6];F6=bc[D0];local WB=0X2;do D0=D0+0X1;end;local jB=x0[0X2];do x0[WB+1]=jB;end;x0[WB]=jB[F6[1]];D0=D0+0X0001;x0[4]=x0[0X1];D0=D0+0x00001;WB=0X00002;(x0)[WB]=x0[WB](x0[WB+1],x0[WB+2]);do R0=WB;end;D0=D0+1;D0=D0+1;F6=bc[D0];D0=D0+1;if not(not x0[0X2])then else do D0=F6[0X5];end;end;else(x0)[0x01]=W0[F6[6]];do D0=D0+0X1;end;D0=D0+0X1;D0=D0+0X1;R0=1;x0[R0]=x0[R0]();D0=D0+1;D0=D0+1;F6=bc[D0];do D0=D0+0X1;end;do if not(not x0[1])then else D0=F6[0x5];end;end;end;end;else(x0)[2]=F6[0X6];F6=bc[D0];local Sp=2;do D0=D0+1;end;local Ap=(x0[0X002]);x0[Sp+0X1]=Ap;do(x0)[Sp]=Ap[F6[1]];end;D0=D0+1;(x0)[4]=x0[1];D0=D0+0X0001;do Sp=0X2;end;(x0)[Sp]=x0[Sp](x0[Sp+0X1],x0[Sp+2]);R0=Sp;F6=bc[D0];do D0=D0+1;end;if not(x0[2])then else do D0=F6[5];end;end;end;else if not(b6>=26)then do if b6~=0X19 then(x0)[0X2]=F6[0x00006];F6=bc[D0];local al=0X2;D0=D0+1;local Al=(x0[2]);x0[al+0X0001]=Al;(x0)[al]=Al[F6[1]];D0=D0+0X1;(x0)[4]=x0[1];D0=D0+1;do al=0X2;end;x0[al]=x0[al](x0[al+0X001],x0[al+0X2]);R0=al;F6=bc[D0];D0=D0+0X01;if not(not x0[0X2])then else do D0=F6[5];end;end;else do if x0[F6[2]]then do D0=F6[0X00005];end;end;end;end;end;else if b6==27 then x0[2]=W0[F6[0X6]];D0=D0+0X1;D0=D0+1;F6=bc[D0];D0=D0+1;x0[0X003]=W0[F6[6]];D0=D0+0X1;D0=D0+1;F6=bc[D0];D0=D0+0X1;(x0)[0X3]=x0[0x3][F6[1]];F6=bc[D0];D0=D0+0X1;do(x0)[0X003]=x0[3][F6[1]];end;D0=D0+1;D0=D0+0X1;do F6=bc[D0];end;D0=D0+1;do(x0)[0X3]=x0[3][F6[1]];end;F6=bc[D0];D0=D0+0x0001;(x0)[0X03]=x0[0X3][F6[1]];do D0=D0+0x00001;end;D0=D0+0X1;D0=D0+0x0001;local kU=0X2;x0[kU]=x0[kU](x0[kU+1]);R0=kU;do F6=bc[D0];end;do D0=D0+0X00001;end;if not(F6[6]<x0[2])then D0=F6[0X2];end;else repeat local rx,mx=Lc,x0;if not(#rx>0)then else local uQ={};for Nx,Yx in M,rx do for kI,GI in M,Yx do do if not(GI[0X001]==mx and GI[2]>=0)then else local j5=GI[2];if not uQ[j5]then(uQ)[j5]={mx[j5]};end;GI[0X1]=uQ[j5];(GI)[0x2]=1;end;end;end;end;end;until true;return;end;end;end;else if not(b6>=0X11)then if b6<0XF then local Bp=F6[0X2];for JI=Bp,Bp+(F6[0X00005]-1)do do x0[JI]=n0[ac+(JI-Bp)+0x001];end;end;else if b6==0x010 then(x0)[F6[0X2]]=x0[F6[0X00005]];else x0[0x2]=F6[0X0006];local E9=(0X2);F6=bc[D0];D0=D0+0X0001;local t9=(x0[0X002]);(x0)[E9+0x1]=t9;x0[E9]=t9[F6[0X01]];D0=D0+1;(x0)[4]=x0[0x0001];D0=D0+1;E9=0X2;x0[E9]=x0[E9](x0[E9+0X00001],x0[E9+2]);R0=E9;do F6=bc[D0];end;D0=D0+0X00001;if not(x0[2])then else D0=F6[5];end;end;end;else do if b6<0X013 then if b6~=18 then x0[2]=F6[6];local Z_=(0X2);F6=bc[D0];do D0=D0+0X1;end;local T_=(x0[0x2]);(x0)[Z_+1]=T_;(x0)[Z_]=T_[F6[0X0001]];D0=D0+0X1;do x0[0X4]=x0[1];end;do D0=D0+1;end;Z_=2;x0[Z_]=x0[Z_](x0[Z_+0X1],x0[Z_+0X2]);R0=Z_;F6=bc[D0];D0=D0+0X1;if x0[2]then do D0=F6[0x05];end;end;else x0[0X00002]=W0[F6[6]];D0=D0+0X01;D0=D0+0X01;D0=D0+1;R0=0X2;(x0[R0])();R0=R0-1;F6=bc[D0];D0=D0+1;do(x0)[0X2]=W0[F6[0X6]];end;D0=D0+0X01;do D0=D0+1;end;F6=bc[D0];D0=D0+0x1;(x0)[0X00003]=F6[6];F6=bc[D0];D0=D0+0X1;do(x0)[0X00004]=W0[F6[0x6]];end;D0=D0+0X1;D0=D0+1;F6=bc[D0];D0=D0+1;(x0)[4]=x0[0x00004][F6[0x001]];do F6=bc[D0];end;D0=D0+1;(x0)[0x00004]=x0[0X4][F6[1]];do D0=D0+0X00001;end;D0=D0+1;F6=bc[D0];D0=D0+1;x0[0X004]=x0[4][F6[1]];do D0=D0+0X1;end;do D0=D0+1;end;do F6=bc[D0];end;D0=D0+1;(x0)[0X0004]=x0[0X00004][F6[0X1]];F6=bc[D0];local og=2;D0=D0+1;x0[0X04]=x0[0X04][F6[1]];D0=D0+1;(x0[og])(x0[og+1],x0[og+2]);do R0=og-1;end;D0=D0+1;D0=D0+0x01;F6=bc[D0];D0=D0+1;D0=F6[0X5];end;else if b6~=0X14 then x0[2]=W0[F6[6]];D0=D0+1;D0=D0+1;do F6=bc[D0];end;local B1=0X3;D0=D0+0X001;x0[3]=W0[F6[6]];F6=bc[D0];do D0=D0+1;end;(x0)[3]=x0[0x3][F6[1]];D0=D0+0x01;do D0=D0+0X1;end;F6=bc[D0];D0=D0+1;(x0)[0X3]=x0[0x3][F6[1]];F6=bc[D0];D0=D0+1;(x0)[3]=x0[3][F6[1]];D0=D0+0X01;D0=D0+1;F6=bc[D0];D0=D0+0x1;local v1=(x0[3]);x0[B1+1]=v1;x0[B1]=v1[F6[0x1]];F6=bc[D0];do D0=D0+1;end;do(x0)[0x5]=F6[0X0006];end;D0=D0+0X1;B1=0x3;x0[B1]=x0[B1](x0[B1+1],x0[B1+2]);R0=B1;F6=bc[D0];do D0=D0+1;end;x0[0X0003]=x0[0X003][F6[0X1]];D0=D0+0x1;B1=2;(x0)[B1]=x0[B1](x0[B1+1]);R0=B1;F6=bc[D0];D0=D0+0X1;do if not(F6[6]<x0[2])then D0=F6[0X002];end;end;else(x0)[2]=W0[F6[0X0006]];D0=D0+0X001;do D0=D0+0x1;end;do D0=D0+0X01;end;R0=2;(x0[R0])();do R0=R0-1;end;F6=bc[D0];D0=D0+1;x0[0X2]=W0[F6[6]];D0=D0+1;D0=D0+1;local KB=4;F6=bc[D0];D0=D0+1;(x0)[3]=F6[0X6];F6=bc[D0];D0=D0+0x01;do x0[0x4]=W0[F6[6]];end;D0=D0+1;D0=D0+1;F6=bc[D0];D0=D0+1;(x0)[4]=x0[4][F6[1]];D0=D0+0x1;D0=D0+1;F6=bc[D0];D0=D0+0X1;(x0)[5]=F6[0x6];do F6=bc[D0];end;local AB=0;D0=D0+0X1;x0[0X6]=F6[0X6];do F6=bc[D0];end;D0=D0+1;do(x0)[0X0007]=F6[0X006];end;D0=D0+1;local hB=(4);do if hB==0X0 then else do R0=KB+hB-0x1;end;end;end;local wB,ZB=nil,nil;if hB==0X001 then wB,ZB=q3(x0[KB]());else do wB,ZB=q3(x0[KB](E(x0,KB+0X1,R0)));end;end;do if AB~=1 then do if AB~=0 then wB=KB+AB-0X0002;R0=wB+0X1;else wB=wB+KB-1;R0=wB;end;end;local mG=(0X0);do for hJ=KB,wB do mG=mG+1;(x0)[hJ]=ZB[mG];end;end;else do R0=KB-1;end;end;end;do D0=D0+0x1;end;D0=D0+1;D0=D0+0x1;do KB=2;end;(x0[KB])(E(x0,KB+1,R0));R0=KB-0X1;D0=D0+0X00001;D0=D0+0X1;F6=bc[D0];do D0=D0+1;end;D0=F6[0X5];end;end;end;end;end;end;else do if not(b6<42)then if b6<0X00031 then do if b6<45 then if b6<43 then do x0[0X0001]=W0[F6[0X06]];end;do D0=D0+1;end;D0=D0+0X001;F6=bc[D0];D0=D0+1;x0[1]=x0[0X00001][F6[1]];F6=bc[D0];D0=D0+1;if not(x0[1])then else do D0=F6[0X5];end;end;else if b6==44 then(x0)[2]=W0[F6[6]];D0=D0+1;R0=0X002;x0[R0]();do R0=R0-0X1;end;F6=bc[D0];D0=D0+1;(x0)[0X2]=W0[F6[0X0006]];F6=bc[D0];D0=D0+0X1;(x0)[3]=F6[6];F6=bc[D0];D0=D0+1;(x0)[0x4]=W0[F6[6]];D0=D0+1;D0=D0+1;F6=bc[D0];D0=D0+0X0001;x0[0X4]=x0[0X004][F6[0X0001]];F6=bc[D0];D0=D0+0X1;x0[5]=F6[6];F6=bc[D0];D0=D0+1;do x0[0X06]=F6[6];end;F6=bc[D0];D0=D0+1;(x0)[0X00007]=F6[0X6];D0=D0+0X1;local H_=(0X00);local l_,k_=4,(0X04);if l_~=0 then R0=k_+l_-1;end;local n_,p_=nil,(nil);if l_~=0X00001 then n_,p_=q3(x0[k_](E(x0,k_+1,R0)));else n_,p_=q3(x0[k_]());end;if H_~=0X0001 then do if H_~=0x0000 then n_=k_+H_-0X00002;R0=n_+1;else n_=n_+k_-1;R0=n_;end;end;local ds=0x0;do for N2=k_,n_ do ds=ds+0X1;x0[N2]=p_[ds];end;end;else R0=k_-0X1;end;D0=D0+1;do D0=D0+0x1;end;D0=D0+0X01;k_=0X2;x0[k_](E(x0,k_+0X00001,R0));R0=k_-1;do F6=bc[D0];end;D0=D0+0X01;do D0=F6[5];end;else D0=F6[5];end;end;else if b6<0X002F then if b6==0X2E then do(x0)[2]=F6[6];end;F6=bc[D0];local rr=(0X2);D0=D0+1;local Ur=(x0[0X0002]);(x0)[rr+0X1]=Ur;x0[rr]=Ur[F6[1]];do D0=D0+1;end;x0[4]=x0[0X1];D0=D0+1;do rr=0X2;end;x0[rr]=x0[rr](x0[rr+1],x0[rr+0X2]);R0=rr;D0=D0+1;do D0=D0+1;end;do F6=bc[D0];end;D0=D0+0X1;if x0[0x2]then D0=F6[5];end;else(x0)[F6[0X2]]=nil;end;else if b6~=0x30 then x0[F6[2]]=W0[F6[6]];else do x0[F6[2]]=x0[F6[5]]<=x0[F6[4]];end;end;end;end;end;else if not(b6>=0X34)then if not(b6>=50)then x0[0x00002]=F6[0X00006];do F6=bc[D0];end;D0=D0+0X00001;local Po=(x0[2]);local eo=2;x0[eo+1]=Po;(x0)[eo]=Po[F6[0X1]];do D0=D0+1;end;x0[0X00004]=x0[1];D0=D0+0X001;do eo=2;end;do(x0)[eo]=x0[eo](x0[eo+0X1],x0[eo+0X002]);end;R0=eo;do D0=D0+1;end;do D0=D0+0X1;end;F6=bc[D0];D0=D0+0X001;if not x0[2]then D0=F6[5];end;else if b6~=0x33 then local pl=(Uc[F6[0x0005]]);local Al,Ul=pl[5],(nil);local ql=(#Al);do if ql>0 then Ul={};do for Vk=0X1,ql do local dk=Al[Vk];if dk[0X1]==0X0 then do Ul[Vk-1]={x0,dk[0X02]};end;else(Ul)[Vk-1]=jc[dk[2]];end;end;end;(S)(Lc,Ul);end;end;do(x0)[F6[0X00002]]=e3(pl,Ul,W0);end;else x0[0x002]=F6[6];local Am=0x02;F6=bc[D0];D0=D0+0x1;local pm=x0[2];(x0)[Am+0X01]=pm;x0[Am]=pm[F6[0X1]];do D0=D0+1;end;do(x0)[0X4]=x0[1];end;D0=D0+0X0001;Am=0X2;x0[Am]=x0[Am](x0[Am+0X0001],x0[Am+0X2]);R0=Am;F6=bc[D0];D0=D0+1;do if x0[0X2]then D0=F6[0x5];end;end;end;end;else if b6>=0X00036 then if b6==0X37 then(x0)[2]=F6[0X6];local UJ=0X0002;do F6=bc[D0];end;do D0=D0+1;end;local XJ=x0[2];(x0)[UJ+0x1]=XJ;(x0)[UJ]=XJ[F6[1]];D0=D0+0X1;x0[0x4]=x0[1];D0=D0+0X1;do UJ=2;end;(x0)[UJ]=x0[UJ](x0[UJ+1],x0[UJ+0x2]);R0=UJ;F6=bc[D0];D0=D0+0X00001;if not(not x0[0X2])then else D0=F6[5];end;else x0[F6[2]]=x0[F6[5]]~=x0[F6[4]];end;else do if b6==0x35 then x0[2]=W0[F6[6]];do F6=bc[D0];end;do D0=D0+1;end;(x0)[0X3]=W0[F6[6]];F6=bc[D0];D0=D0+1;x0[3]=x0[3][F6[1]];F6=bc[D0];do D0=D0+1;end;x0[0X3]=x0[3][F6[0X0001]];D0=D0+1;D0=D0+0X1;do F6=bc[D0];end;D0=D0+1;(x0)[3]=x0[0X3][F6[1]];D0=D0+0X1;do D0=D0+0x1;end;F6=bc[D0];D0=D0+1;local D_=2;do x0[0X3]=x0[3][F6[1]];end;D0=D0+0x0001;do D0=D0+0x1;end;do F6=bc[D0];end;D0=D0+1;x0[3]=x0[0X3][F6[1]];D0=D0+1;do(x0)[D_]=x0[D_](x0[D_+0X1]);end;R0=D_;F6=bc[D0];D0=D0+0X01;if not(not(F6[0X6]<x0[2]))then else do D0=F6[2];end;end;else(x0)[F6[2]]={E({},1,F6[5])};end;end;end;end;end;else if b6>=0x23 then if b6>=0X26 then if b6>=40 then if b6==0X29 then x0[1]=W0[F6[6]];D0=D0+0X1;D0=D0+0X1;F6=bc[D0];D0=D0+1;do(x0)[1]=x0[1][F6[1]];end;F6=bc[D0];D0=D0+0X1;if not(not x0[1])then else D0=F6[5];end;else(x0)[F6[0X2]]=F6[6];end;else if b6==0X27 then(x0)[0X2]=W0[F6[6]];local Hl=0;D0=D0+0X001;D0=D0+0X1;F6=bc[D0];D0=D0+1;local Cl=3;(x0)[3]=W0[F6[0X0006]];F6=bc[D0];D0=D0+0X1;(x0)[3]=x0[3][F6[0X001]];D0=D0+1;D0=D0+0X01;do F6=bc[D0];end;D0=D0+0X001;do(x0)[0x4]=F6[0x6];end;F6=bc[D0];D0=D0+0X1;(x0)[5]=F6[6];F6=bc[D0];D0=D0+1;(x0)[6]=F6[0X6];D0=D0+0X00001;local ll=(0x4);if ll==0 then else R0=Cl+ll-1;end;local tl,dl=nil,(nil);if ll~=1 then do tl,dl=q3(x0[Cl](E(x0,Cl+1,R0)));end;else do tl,dl=q3(x0[Cl]());end;end;if Hl~=1 then if Hl~=0X0 then tl=Cl+Hl-0x2;do R0=tl+0X1;end;else tl=tl+Cl-0x00001;R0=tl;end;local L9=0X0;do for aj=Cl,tl do L9=L9+0X1;(x0)[aj]=dl[L9];end;end;else R0=Cl-1;end;D0=D0+1;do D0=D0+0x1;end;D0=D0+1;Cl=2;(x0)[Cl]=x0[Cl](E(x0,Cl+0X001,R0));R0=Cl;F6=bc[D0];D0=D0+0x1;do if not(F6[6]<x0[0x2])then D0=F6[2];end;end;else do x0[0X1]=W0[F6[6]];end;do D0=D0+1;end;D0=D0+0X1;F6=bc[D0];do D0=D0+1;end;D0=F6[5];end;end;else if not(b6>=0x24)then local Sa,va=2,x0[1];x0[Sa+1]=va;(x0)[Sa]=va[F6[1]];F6=bc[D0];D0=D0+1;(x0)[4]=F6[0X6];D0=D0+1;Sa=0X002;(x0)[Sa]=x0[Sa](x0[Sa+1],x0[Sa+0X2]);do R0=Sa;end;F6=bc[D0];D0=D0+1;do if not(not x0[2])then else do D0=F6[0X5];end;end;end;else if b6==0X000025 then local jH=F6[2];local nH=x0[F6[0X00005]];x0[jH+0x1]=nH;(x0)[jH]=nH[F6[0X01]];else do(x0)[2]=F6[6];end;local dw=(2);F6=bc[D0];D0=D0+0x01;local bw=(x0[2]);do(x0)[dw+1]=bw;end;(x0)[dw]=bw[F6[0X1]];do D0=D0+1;end;(x0)[0X4]=x0[1];do D0=D0+1;end;dw=2;do x0[dw]=x0[dw](x0[dw+0x01],x0[dw+2]);end;R0=dw;F6=bc[D0];do D0=D0+0X1;end;if not(x0[2])then else D0=F6[5];end;end;end;end;else if b6>=31 then if not(b6>=33)then do if b6~=32 then x0[0X00002]=F6[0X06];F6=bc[D0];local N_=(0X00002);D0=D0+0X1;local c_=(x0[0X2]);do x0[N_+1]=c_;end;(x0)[N_]=c_[F6[0X00001]];D0=D0+0X00001;x0[4]=x0[1];D0=D0+1;N_=0X002;(x0)[N_]=x0[N_](x0[N_+0X1],x0[N_+2]);R0=N_;D0=D0+1;D0=D0+1;do F6=bc[D0];end;D0=D0+1;if not(x0[0X00002])then else D0=F6[0x5];end;else do x0[0X2]=F6[0X6];end;do F6=bc[D0];end;local NR=0X2;D0=D0+0x0001;local dR=x0[2];x0[NR+0X1]=dR;x0[NR]=dR[F6[0X1]];D0=D0+1;(x0)[4]=x0[1];D0=D0+1;NR=2;(x0)[NR]=x0[NR](x0[NR+0X1],x0[NR+2]);R0=NR;F6=bc[D0];D0=D0+0x1;if x0[0X00002]then D0=F6[5];end;end;end;else do if b6==34 then local K0=(F6[2]);local b0,I0=x0[K0]();do if b0 then D0=F6[0X5];do x0[K0+0X3]=I0;end;end;end;else(x0)[0X2]=W0[F6[0x6]];do D0=D0+1;end;D0=D0+1;D0=D0+1;R0=0X2;x0[R0]();do R0=R0-1;end;local UO=(0);D0=D0+0X1;D0=D0+1;F6=bc[D0];D0=D0+0X1;x0[0X002]=W0[F6[6]];F6=bc[D0];D0=D0+1;local YO=4;(x0)[3]=F6[6];do F6=bc[D0];end;D0=D0+1;x0[4]=W0[F6[0x0006]];F6=bc[D0];D0=D0+1;x0[0x04]=x0[0x4][F6[1]];F6=bc[D0];D0=D0+1;x0[0X0005]=F6[6];do F6=bc[D0];end;do D0=D0+1;end;do(x0)[0X6]=F6[6];end;F6=bc[D0];D0=D0+0x01;x0[7]=F6[0X06];D0=D0+0X001;local ZO=0X4;do if ZO~=0X0 then R0=YO+ZO-0X1;end;end;local eO,sO=nil,nil;if ZO~=0x1 then eO,sO=q3(x0[YO](E(x0,YO+1,R0)));else eO,sO=q3(x0[YO]());end;if UO~=1 then if UO~=0 then eO=YO+UO-0X2;do R0=eO+1;end;else eO=eO+YO-0X0001;do R0=eO;end;end;local jD=(0);for PW=YO,eO do jD=jD+0X1;(x0)[PW]=sO[jD];end;else R0=YO-0X01;end;D0=D0+1;D0=D0+0X001;D0=D0+0X00001;YO=2;x0[YO](E(x0,YO+0X1,R0));R0=YO-0X1;D0=D0+0X1;D0=D0+1;F6=bc[D0];D0=D0+0X0001;D0=F6[5];end;end;end;else if not(b6>=0X1D)then do x0[2]=W0[F6[0X6]];end;do D0=D0+1;end;R0=0X2;(x0[R0])();R0=R0-0X1;local bq,Gq=0,4;F6=bc[D0];do D0=D0+1;end;(x0)[2]=W0[F6[6]];F6=bc[D0];D0=D0+0x1;x0[0x0003]=F6[6];do F6=bc[D0];end;D0=D0+1;x0[4]=W0[F6[6]];D0=D0+0X1;do D0=D0+0x1;end;do F6=bc[D0];end;D0=D0+1;(x0)[0x4]=x0[4][F6[1]];do F6=bc[D0];end;D0=D0+0x00001;x0[5]=F6[6];F6=bc[D0];D0=D0+1;(x0)[6]=F6[0X6];F6=bc[D0];D0=D0+0X001;(x0)[0X7]=F6[6];D0=D0+1;local Sq=(0X0004);if Sq~=0x0 then R0=Gq+Sq-1;end;local pq,Pq=nil,(nil);do if Sq==1 then pq,Pq=q3(x0[Gq]());else pq,Pq=q3(x0[Gq](E(x0,Gq+1,R0)));end;end;do if bq~=0X01 then if bq==0 then do pq=pq+Gq-1;end;R0=pq;else pq=Gq+bq-2;R0=pq+1;end;local AO=(0X0);for sy=Gq,pq do AO=AO+0X1;x0[sy]=Pq[AO];end;else R0=Gq-0X0001;end;end;D0=D0+0X1;D0=D0+0x1;D0=D0+0X0001;Gq=2;x0[Gq](E(x0,Gq+0x1,R0));R0=Gq-0x1;do F6=bc[D0];end;D0=D0+0x001;D0=F6[0X5];else do if b6==0X0001E then do(x0)[2]=F6[0X006];end;local yc=0x2;F6=bc[D0];D0=D0+1;local Rc=x0[2];do(x0)[yc+1]=Rc;end;(x0)[yc]=Rc[F6[1]];D0=D0+1;do x0[4]=x0[0x1];end;do D0=D0+1;end;yc=2;(x0)[yc]=x0[yc](x0[yc+0x001],x0[yc+0x002]);R0=yc;D0=D0+0X1;D0=D0+1;F6=bc[D0];D0=D0+0X1;if not(x0[2])then else D0=F6[0X05];end;else x0[2]=W0[F6[0x006]];D0=D0+1;D0=D0+0x1;local XY=(3);do F6=bc[D0];end;local EY=0;D0=D0+0x00001;x0[3]=W0[F6[0X06]];D0=D0+0X001;D0=D0+1;do F6=bc[D0];end;D0=D0+1;x0[0x3]=x0[3][F6[1]];D0=D0+0X1;D0=D0+0x1;F6=bc[D0];do D0=D0+0x1;end;(x0)[0X04]=F6[6];F6=bc[D0];D0=D0+0X0001;x0[0X05]=F6[0X006];F6=bc[D0];D0=D0+1;x0[0X6]=F6[6];D0=D0+1;local ZY=4;if ZY~=0 then R0=XY+ZY-0X0001;end;local eY,tY=nil,(nil);if ZY~=0X1 then eY,tY=q3(x0[XY](E(x0,XY+1,R0)));else eY,tY=q3(x0[XY]());end;if EY~=0X00001 then do if EY==0 then eY=eY+XY-1;R0=eY;else eY=XY+EY-0X2;R0=eY+1;end;end;local ax=(0);for Hh=XY,eY do ax=ax+0X00001;(x0)[Hh]=tY[ax];end;else R0=XY-0X1;end;D0=D0+0X01;do D0=D0+1;end;D0=D0+1;XY=0X0002;x0[XY]=x0[XY](E(x0,XY+1,R0));R0=XY;F6=bc[D0];do D0=D0+0x01;end;if not(F6[6]<x0[0X2])then D0=F6[0X0002];end;end;end;end;end;end;end;end;end;end;end);if t0 then if T0 then if j0~=0X1 then return x0[N0](E(x0,N0+0X1,R0));else do return x0[N0]();end;end;elseif not(N0)then else return E(x0,N0,j0);end;else if V(T0)=="string"then if not(r(T0,"\097ttem\112t\032to\032\121\105e\108\100\032a\099r\111ss\032metam\101t\104od/\067\037-\099a\108\108 \098\111u\110d\097r\121"))then else return coroutine.yield();end;if not(r(T0,"^.-:%d+: "))then q(T0,0x0);else(q)("Luraph Script:"..(Qc[D0-0X1]or"(internal)")..":\032"..u(T0),0X0000);end;else q(T0,0X000);end;end;end;end;end;else if Sc>=0x00b3 then if Sc~=0X0000b4 then ic=function(...)local dE,fE=0X1,{};local rE=0;local VE=({[2]=Vc,[1]=fE});local GE=((k and k()or _ENV));local EE,jE=q3(...);local QE=((GE==H and fc or GE));EE=EE-0X0001;for ps=0X0000,EE do if not(ac>ps)then break;else fE[ps]=jE[ps+0x001];end;end;do if not nc then jE=nil;elseif Ac then do fE[ac]={n=EE>=ac and EE-ac+0x01 or 0x0000,E(jE,ac+0X1,EE+0X00001)};end;end;end;do if QE~=GE then do if s then s(ic,QE);else _ENV=QE;end;end;end;end;local pE,gE,iE,OE=c(function()do while true do local wG=(bc[dE]);local QG=(wG[0x3]);dE=dE+0X01;if QG<0Xb then if QG<5 then if not(QG<0x2)then if not(QG>=3)then(fE)[wG[2]]=fE[wG[0X005]]>=fE[wG[4]];else if QG~=4 then do dE=wG[5];end;else(fE)[0]=QE[wG[0X6]];do dE=dE+0x00001;end;do dE=dE+1;end;wG=bc[dE];local ZO=(Uc[wG[0X05]]);dE=dE+0X1;local zO=nil;local AO=ZO[5];local eO=(#AO);local IO=0X0;if not(eO>0)then else do zO={};end;for A9=0X0001,eO do local Q9=AO[A9];if Q9[0X1]~=0 then do zO[A9-0X0001]=jc[Q9[0X00002]];end;else do(zO)[A9-1]={fE,Q9[0X2]};end;end;end;S(Lc,zO);end;fE[1]=e3(ZO,zO,QE);do dE=dE+0x001;end;(fE[IO])(fE[IO+0X1]);rE=IO-0X01;do dE=dE+0X1;end;do dE=dE+1;end;wG=bc[dE];do dE=dE+0X1;end;(fE)[0]=QE[wG[0X6]];do wG=bc[dE];end;dE=dE+0X00001;do fE[1]=wG[0x6];end;dE=dE+0X1;IO=0X0;(fE)[IO]=fE[IO](fE[IO+1]);rE=IO;wG=bc[dE];do dE=dE+0x1;end;if not fE[0]then do dE=wG[5];end;end;end;end;else if QG==0x0001 then fE[wG[0x2]]=VE[wG[0X0005]];else fE[wG[0X02]]=fE[wG[5]]*fE[wG[4]];end;end;else if not(QG>=8)then if not(QG<0X006)then do if QG~=0x7 then do fE[wG[2]]={E({},0X00001,wG[0X005])};end;else repeat local CV,nV=Lc,fE;do if#CV>0 then local AH={};for Lr,lr in M,CV do for Mc,pc in M,lr do if pc[1]==nV and pc[2]>=0X000 then local aR=pc[0x002];if not(not AH[aR])then else AH[aR]={nV[aR]};end;pc[0X1]=AH[aR];pc[0X2]=0X1;end;end;end;end;end;until true;return;end;end;else(fE)[wG[2]]=wG[6];end;else if QG>=0X9 then do if QG~=10 then local tz=(Uc[wG[5]]);local Kz,Wz=tz[5],nil;local hz=#Kz;do if not(hz>0)then else Wz={};for wc=0X01,hz do local Dc=Kz[wc];if Dc[0X1]==0 then Wz[wc-0X00001]={fE,Dc[2]};else(Wz)[wc-1]=jc[Dc[2]];end;end;S(Lc,Wz);end;end;do fE[wG[0X2]]=e3(tz,Wz,QE);end;else(fE)[0]=QE[wG[6]];dE=dE+0X1;rE=0;fE[rE]=fE[rE]();wG=bc[dE];dE=dE+1;do if not(fE[0X0000])then else do dE=wG[5];end;end;end;end;end;else for HA=wG[0X2],wG[0X5]do fE[HA]=nil;end;end;end;end;else if QG<16 then if QG>=13 then do if QG>=14 then if QG~=0Xf then do(fE)[0X0]=QE[wG[0x6]];end;do wG=bc[dE];end;dE=dE+1;fE[0X00]=fE[0X0][wG[0X1]];wG=bc[dE];dE=dE+1;do fE[0]=fE[0X0][wG[1]];end;dE=dE+1;dE=dE+1;do wG=bc[dE];end;dE=dE+0x001;do if not(fE[0]<wG[0X1])then dE=wG[0X2];end;end;else(fE)[0]=QE[wG[0X6]];wG=bc[dE];dE=dE+1;fE[0X00]=fE[0][wG[0X1]];do dE=dE+0X001;end;dE=dE+0X001;wG=bc[dE];dE=dE+1;if not fE[0]then dE=wG[5];end;end;else do(fE)[0]=QE[wG[6]];end;dE=dE+1;dE=dE+0X001;wG=bc[dE];do dE=dE+0X1;end;fE[1]=wG[0X6];local Pq=(0x00);do dE=dE+1;end;fE[Pq]=fE[Pq](fE[Pq+1]);rE=Pq;dE=dE+1;dE=dE+1;wG=bc[dE];do dE=dE+0X1;end;if not(not fE[0X00000])then else do dE=wG[5];end;end;end;end;else if QG==0Xc then fE[wG[0x02]]=QE[wG[0X6]];else local U9=jc[0X00];fE[0]=U9[0X00001][U9[0X2]];local w9=(0X0);wG=bc[dE];dE=dE+0x1;local X9=(fE[0]);do(fE)[w9+1]=X9;end;(fE)[w9]=X9[wG[0x001]];do dE=dE+0x1;end;w9=0;fE[w9]=fE[w9](fE[w9+1]);rE=w9;dE=dE+0X01;dE=dE+0X1;wG=bc[dE];dE=dE+1;if not(not fE[0])then else dE=wG[0X05];end;end;end;else do if not(QG>=19)then if not(QG<0x11)then if QG~=0X12 then else fE[0x0]=QE[wG[0X0006]];dE=dE+0x00001;dE=dE+0x00001;wG=bc[dE];dE=dE+1;(fE)[0]=fE[0][wG[1]];dE=dE+1;dE=dE+0x00001;wG=bc[dE];do dE=dE+0X1;end;if not(not fE[0])then else do dE=wG[5];end;end;end;else(fE)[0X00000]=QE[wG[6]];dE=dE+0X1;dE=dE+0X1;wG=bc[dE];dE=dE+1;if fE[0]then dE=wG[5];end;end;else if QG>=0X0014 then if QG==0X015 then(fE)[0X0]=QE[wG[6]];dE=dE+1;dE=dE+1;wG=bc[dE];local B5=0X0000;dE=dE+1;fE[0]=fE[0][wG[0X1]];wG=bc[dE];dE=dE+1;do fE[0X00001]=wG[0x6];end;dE=dE+0X1;fE[B5]=fE[B5](fE[B5+1]);do rE=B5;end;dE=dE+1;do dE=dE+1;end;wG=bc[dE];dE=dE+1;do if not(not fE[0])then else dE=wG[0X0005];end;end;else(fE)[wG[0X2]]=fE[wG[5]]-fE[wG[0X4]];end;else local oS=wG[2];local pS,wS=fE[oS],(wG[4]-1)*50;for G4=1,wG[5]do(pS)[wS+G4]=fE[oS+G4];end;end;end;end;end;end;end;end;end);if not(pE)then do if V(gE)=="\115t\114in\103"then if r(gE,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if r(gE,"^.-:%d+: ")then(q)('\076ur\097ph\032\083cr\105p\116:'..(Qc[dE-1]or"(internal)")..": "..u(gE),0x000);else q(gE,0X0);end;else q(gE,0);end;end;else do if gE then if OE==0X1 then return fE[iE]();else return fE[iE](E(fE,iE+0x00001,rE));end;elseif iE then do return E(fE,iE,OE);end;end;end;end;end;else ic=function(...)local si={};local Wi=(0);local Pi={[2]=Vc,[1]=si};local Ei=(k and k()or _ENV);local Ri=(1);local vi,Vi=q3(...);vi=vi-1;for db=0,vi do if ac>db then si[db]=Vi[db+1];else break;end;end;local fi=((Ei==H and fc or Ei));if not nc then Vi=nil;elseif not(Ac)then else si[ac]={n=vi>=ac and vi-ac+1 or 0,E(Vi,ac+1,vi+1)};end;if fi==Ei then else do if s then(s)(ic,fi);else _ENV=fi;end;end;end;local ji,bi,qi,ui=c(function()while true do local vQ=(bc[Ri]);local EQ=vQ[3];Ri=Ri+1;if not(EQ<13)then do if EQ>=20 then if not(EQ<0X17)then if not(EQ>=0X19)then if EQ==0x18 then do(si)[1]=false;end;do vQ=bc[Ri];end;Ri=Ri+0X1;fi[vQ[0X6]]=si[1];local SH=1;do vQ=bc[Ri];end;Ri=Ri+1;(si)[1]=fi[vQ[6]];Ri=Ri+1;Ri=Ri+0X1;vQ=bc[Ri];Ri=Ri+0x1;local XH=(si[1]);(si)[SH+0X00001]=XH;(si)[SH]=XH[vQ[1]];vQ=bc[Ri];Ri=Ri+0X1;(si)[0X3]=vQ[0x6];Ri=Ri+1;si[0X4]=true;Ri=Ri+1;do SH=1;end;Wi=SH+4-1;do(si)[SH]=si[SH](E(si,SH+0x0001,Wi));end;do Wi=SH;end;vQ=bc[Ri];Ri=Ri+1;if not(not si[1])then else Ri=vQ[5];end;else(si)[0x1]=true;vQ=bc[Ri];Ri=Ri+0X1;(fi)[vQ[0X6]]=si[0X01];do vQ=bc[Ri];end;Ri=Ri+0X01;do Ri=vQ[0X5];end;end;else if EQ~=0X1A then local qr=(vQ[2]);local Mr,zr,gr=si[qr]();if Mr then(si)[qr+0X1]=zr;si[qr+0X2]=gr;Ri=vQ[0X0005];end;else si[1]=fi[vQ[6]];vQ=bc[Ri];local eg=(si[0X1]);do Ri=Ri+0X001;end;local ig=0X1;(si)[ig+0x001]=eg;si[ig]=eg[vQ[0x1]];vQ=bc[Ri];Ri=Ri+0X1;si[0X0003]=vQ[6];Ri=Ri+1;si[0X0004]=true;Ri=Ri+0X01;ig=1;do Wi=ig+0x4-1;end;do(si)[ig]=si[ig](E(si,ig+1,Wi));end;Wi=ig;vQ=bc[Ri];do Ri=Ri+1;end;do if not si[0X1]then do Ri=vQ[0X5];end;end;end;end;end;else if not(EQ<0X15)then do if EQ==0X00016 then do for Sm=vQ[2],vQ[0X5]do do si[Sm]=nil;end;end;end;else si[vQ[0X2]]={E({},1,vQ[5])};end;end;else local J8=Uc[vQ[5]];local h8=(J8[0x5]);local a8=(nil);local l8=(#h8);if not(l8>0)then else a8={};for FS=1,l8 do local yS=(h8[FS]);if yS[1]==0 then(a8)[FS-1]={si,yS[0X2]};else do(a8)[FS-1]=jc[yS[2]];end;end;end;(S)(Lc,a8);end;(si)[vQ[0x002]]=e3(J8,a8,fi);end;end;else do if not(EQ<16)then do if not(EQ>=0X12)then if EQ~=0X00011 then else local Hg=(vQ[0X2]);local Cg=P(function(...)(C)();do for Mh,ph,Kh,th,Ph,Xh,Wh,ih,Dh,ah in...do(C)(true,{Mh,ph,Kh,th,Ph,Xh,Wh,ih,Dh,ah});end;end;end);(Cg)(si[Hg],si[Hg+1],si[Hg+2]);Wi=Hg;(si)[Hg]=Cg;Ri=vQ[0X5];end;else do if EQ==0X013 then(si)[0X001]=fi[vQ[6]];vQ=bc[Ri];local Zk,lk=0X1,(0x3);Ri=Ri+0x1;local dk=si[1];si[Zk+1]=dk;do(si)[Zk]=dk[vQ[0X1]];end;vQ=bc[Ri];Ri=Ri+1;do(si)[3]=vQ[0X0006];end;do vQ=bc[Ri];end;do Ri=Ri+1;end;(si)[0X4]=fi[vQ[6]];Ri=Ri+1;do si[3]=si[lk]..si[lk+1];end;Ri=Ri+1;Zk=1;(si[Zk])(si[Zk+1],si[Zk+0X2]);Wi=Zk-1;do Ri=Ri+0X1;end;Ri=Ri+0X1;do vQ=bc[Ri];end;Ri=Ri+1;Ri=vQ[0X0005];else(si)[3]=si[0X0002][vQ[1]];vQ=bc[Ri];Ri=Ri+0X00001;si[3]=si[0x3][vQ[1]];Ri=Ri+1;Ri=Ri+1;vQ=bc[Ri];Ri=Ri+0X001;do if si[3]==vQ[0X1]then else Ri=vQ[2];end;end;end;end;end;end;else if EQ>=14 then if EQ~=15 then(si)[0X0]=fi[vQ[6]];Ri=Ri+0x1;Ri=Ri+0X0001;vQ=bc[Ri];Ri=Ri+0x1;si[0X00000]=si[0][vQ[0X01]];vQ=bc[Ri];Ri=Ri+0X1;do(si)[0X0]=si[0X000][vQ[1]];end;Ri=Ri+0X01;Ri=Ri+1;do vQ=bc[Ri];end;Ri=Ri+0x1;if not si[0X0]then Ri=vQ[5];end;else si[0X00000]=fi[vQ[6]];vQ=bc[Ri];local Gj=0;Ri=Ri+1;(si)[1]=vQ[6];do Ri=Ri+0x1;end;si[Gj]=si[Gj](si[Gj+1]);Wi=Gj;vQ=bc[Ri];Ri=Ri+1;if not si[0X0]then do Ri=vQ[5];end;end;end;else si[1]=fi[vQ[6]];do Ri=Ri+1;end;do Ri=Ri+1;end;do vQ=bc[Ri];end;Ri=Ri+0X1;do if not(not si[1])then else Ri=vQ[5];end;end;end;end;end;end;end;else if EQ<0X6 then if EQ>=3 then do if not(EQ<4)then if EQ~=0X005 then si[0X3]=fi[vQ[0X006]];do vQ=bc[Ri];end;Ri=Ri+1;si[3]=si[3][vQ[1]];Ri=Ri+0X001;Ri=Ri+0X1;do vQ=bc[Ri];end;Ri=Ri+0x00001;do si[4]=si[2][vQ[1]];end;Ri=Ri+0x01;do Ri=Ri+1;end;vQ=bc[Ri];Ri=Ri+1;si[0x0004]=si[4][vQ[0x1]];vQ=bc[Ri];Ri=Ri+0X1;si[0X0005]=si[2][vQ[1]];Ri=Ri+0x1;si[3][si[4]]=si[0X5];vQ=bc[Ri];do Ri=Ri+0X01;end;Ri=vQ[5];else(si)[0X0000]=fi[vQ[0X6]];vQ=bc[Ri];Ri=Ri+0X1;local lT=0x0000;do(si)[0X000]=si[0x0][vQ[1]];end;do Ri=Ri+1;end;do Ri=Ri+1;end;vQ=bc[Ri];Ri=Ri+0X1;(si)[1]=fi[vQ[6]];vQ=bc[Ri];do Ri=Ri+1;end;(si)[1]=si[0X1][vQ[0x1]];Ri=Ri+1;do Ri=Ri+1;end;Ri=Ri+0X0001;si[lT](si[lT+0X0001]);Wi=lT-0X1;do Ri=Ri+0X1;end;Ri=Ri+0X0001;do vQ=bc[Ri];end;Ri=Ri+1;(si)[0]=fi[vQ[0X6]];do vQ=bc[Ri];end;Ri=Ri+0x1;si[0X0000]=si[0X00000][vQ[1]];vQ=bc[Ri];Ri=Ri+1;(si)[1]=fi[vQ[0x6]];Ri=Ri+1;Ri=Ri+0x1;do vQ=bc[Ri];end;do Ri=Ri+0X1;end;si[1]=si[1][vQ[1]];do Ri=Ri+0X1;end;do lT=0;end;(si[lT])(si[lT+1]);do Wi=lT-0X1;end;local dT=(2);Ri=Ri+0X001;Ri=Ri+0X1;do vQ=bc[Ri];end;Ri=Ri+1;do si[0x0000]=fi[vQ[0X6]];end;Ri=Ri+1;Ri=Ri+0X00001;vQ=bc[Ri];Ri=Ri+1;(si)[1]=fi[vQ[0X06]];do Ri=Ri+0X1;end;do lT=0x000;end;local UT=0X0004;if dT~=0X000 then Wi=lT+dT-1;end;local wT,GT=nil,(nil);if dT~=0X01 then wT,GT=q3(si[lT](E(si,lT+1,Wi)));else wT,GT=q3(si[lT]());end;if UT~=1 then do if UT==0 then wT=wT+lT-0X001;Wi=wT;else wT=lT+UT-0X2;Wi=wT+0X1;end;end;local Hr=(0x0);for e_=lT,wT do do Hr=Hr+1;end;si[e_]=GT[Hr];end;else Wi=lT-1;end;Ri=Ri+1;Ri=Ri+1;vQ=bc[Ri];Ri=Ri+0X1;do lT=0X0;end;local zT=P(function(...)(C)();for Wo,Ho in...do C(true,Wo,Ho);end;end);(zT)(si[lT],si[lT+1],si[lT+2]);Wi=lT;do(si)[lT]=zT;end;Ri=vQ[0X05];end;else do(si)[vQ[2]]=fi[vQ[6]];end;end;end;else do if EQ<1 then repeat local rq,Vq=Lc,(si);if not(#rq>0)then else local mn={};for ZR,RR in M,rq do for JU,WU in M,RR do if WU[0X1]==Vq and WU[0X2]>=0 then local KB=(WU[2]);if not mn[KB]then do(mn)[KB]={Vq[KB]};end;end;(WU)[0X1]=mn[KB];(WU)[0X2]=0x01;end;end;end;end;until true;return;else if EQ~=0x2 then si[vQ[2]]=si[vQ[0X0005]]<si[vQ[4]];else si[3]=si[2][vQ[0X00001]];do Ri=Ri+0X0001;end;Ri=Ri+1;vQ=bc[Ri];Ri=Ri+1;si[0X3]=si[3][vQ[0X1]];vQ=bc[Ri];Ri=Ri+0X1;do if si[3]==vQ[0X00001]then else Ri=vQ[0X02];end;end;end;end;end;end;else if EQ<9 then if EQ<0x007 then(si)[1]=true;do vQ=bc[Ri];end;Ri=Ri+0X1;(fi)[vQ[0X06]]=si[1];vQ=bc[Ri];Ri=Ri+0X0001;Ri=vQ[5];else if EQ==0X8 then do(si)[vQ[0X002]]=v(si[vQ[0X5]],si[vQ[0X04]]);end;else(si)[vQ[2]]=vQ[6];end;end;else if not(EQ<0X000B)then if EQ==12 then(si)[1]=si[0X000][vQ[1]];Ri=Ri+1;Ri=Ri+1;vQ=bc[Ri];Ri=Ri+1;(fi)[vQ[6]]=si[1];vQ=bc[Ri];Ri=Ri+0x1;si[0X1]=fi[vQ[6]];vQ=bc[Ri];Ri=Ri+1;if not(not si[0X00001])then else do Ri=vQ[0x5];end;end;else do Ri=vQ[5];end;end;else if EQ==0x0000A then si[0X3]=fi[vQ[6]];Ri=Ri+1;Ri=Ri+1;vQ=bc[Ri];do Ri=Ri+1;end;si[3]=si[0X3][vQ[1]];do vQ=bc[Ri];end;Ri=Ri+1;(si)[0x4]=si[0X2][vQ[1]];do vQ=bc[Ri];end;Ri=Ri+1;(si)[0X04]=si[0X00004][vQ[0X1]];vQ=bc[Ri];Ri=Ri+0X1;(si)[0X05]=si[2][vQ[1]];Ri=Ri+0X1;Ri=Ri+1;Ri=Ri+1;si[0X03][si[0x4]]=si[5];vQ=bc[Ri];do Ri=Ri+0x0001;end;do Ri=vQ[0X5];end;else do si[vQ[2]]=si[vQ[0X5]]*si[vQ[4]];end;end;end;end;end;end;end;end);if not(ji)then if V(bi)~='\115tri\110\103'then(q)(bi,0);else if not(r(bi,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(bi,"^.-\058%\100\043\058\032"))then(q)(bi,0);else q("Luraph Script:"..(Qc[Ri-0X1]or"(internal)")..": "..u(bi),0);end;end;else if bi then do if ui==1 then return si[qi]();else do return si[qi](E(si,qi+1,Wi));end;end;end;elseif not(qi)then else do return E(si,qi,ui);end;end;end;end;end;else if Sc==178 then ic=function(...)local P6=(0x1);local M6=({});local w6=((k and k()or _ENV));local m6=((w6==H and fc or w6));local R6={[1]=M6,[2]=Vc};local J6,q6=q3(...);J6=J6-0X1;do for Vx=0,J6 do if ac>Vx then M6[Vx]=q6[Vx+1];else break;end;end;end;local l6=0;if not nc then q6=nil;elseif not(Ac)then else M6[ac]={n=J6>=ac and J6-ac+1 or 0,E(q6,ac+1,J6+0X1)};end;if m6==w6 then else if not(s)then _ENV=m6;else s(ic,m6);end;end;local H6,F6,g6,u6=c(function()while true do local zu=(bc[P6]);local uu=(zu[3]);P6=P6+0X1;if not(uu<0X06)then if not(uu<9)then if uu>=10 then do if uu==11 then else do M6[0]=m6[zu[0X6]];end;zu=bc[P6];P6=P6+1;local tq,zq=M6[0],(0X000);(M6)[zq+1]=tq;do M6[zq]=tq[zu[0X01]];end;zu=bc[P6];P6=P6+0X1;(M6)[0X2]=zu[0X006];P6=P6+1;zq=0x0;(M6)[zq]=M6[zq](M6[zq+1],M6[zq+2]);l6=zq;zu=bc[P6];P6=P6+1;(M6)[1]=m6[zu[6]];zu=bc[P6];P6=P6+0X1;(M6)[1]=M6[0X00001][zu[0X1]];do P6=P6+1;end;P6=P6+1;do zu=bc[P6];end;local Yq=(Uc[zu[0X0005]]);do P6=P6+0X1;end;local Vq=nil;local pq=(Yq[5]);local Dq=(#pq);if Dq>0x000 then Vq={};do for UP=0X00001,Dq do local wP=pq[UP];if wP[0X1]~=0 then(Vq)[UP-0X1]=jc[wP[2]];else do Vq[UP-1]={M6,wP[0X2]};end;end;end;end;(S)(Lc,Vq);end;M6[2]=e3(Yq,Vq,m6);P6=P6+0X001;do zq=1;end;(M6[zq])(M6[zq+1]);l6=zq-0x1;P6=P6+0x1;repeat local Sh,uh=Lc,M6;do if not(#Sh>0X0)then else local sH=({});do for vM,zM in M,Sh do for Np,Jp in M,zM do do if Jp[0X01]==uh and Jp[0X2]>=0x000 then local rO=(Jp[0x00002]);if not sH[rO]then sH[rO]={uh[rO]};end;do(Jp)[1]=sH[rO];end;Jp[0X2]=1;end;end;end;end;end;end;end;until true;return;end;end;else do(M6)[zu[2]]=m6[zu[0X6]];end;end;else if not(uu<7)then do if uu~=0X8 then do(M6)[zu[0X2]]={E({},1,zu[0X0005])};end;else P6=zu[0X5];end;end;else local Ii=(zu[0X2]);for Nx=Ii,Ii+(zu[0X5]-0X001)do M6[Nx]=q6[ac+(Nx-Ii)+0X1];end;end;end;else if uu<3 then if not(uu<0X001)then if uu==2 then(M6[zu[0X2]])[M6[zu[5]]]=M6[zu[4]];else local Fk=Uc[zu[5]];local Dk=(Fk[0x00005]);local qk,Ak=#Dk,nil;if qk>0X00000 then Ak={};for Tz=1,qk do local Nz=(Dk[Tz]);if Nz[1]~=0 then(Ak)[Tz-1]=jc[Nz[0X2]];else do(Ak)[Tz-0X1]={M6,Nz[0X2]};end;end;end;S(Lc,Ak);end;(M6)[zu[0X2]]=e3(Fk,Ak,m6);end;else(M6)[zu[2]]=M6[zu[0X5]]-M6[zu[0X04]];end;else do if not(uu<4)then if uu~=5 then(M6)[zu[2]]=Q(M6[zu[5]]);else(M6)[zu[0X2]]=zu[6];end;else local Bv=(zu[0X2]);local xv,Jv=M6[Bv]();if xv then for K8=0x1,zu[0X4]do do(M6)[Bv+K8]=Jv[K8];end;end;P6=zu[0x5];end;end;end;end;end;end;end);if H6 then if F6 then if u6==0X1 then return M6[g6]();else return M6[g6](E(M6,g6+0X1,l6));end;elseif not(g6)then else return E(M6,g6,u6);end;else do if V(F6)~="string"then(q)(F6,0X0);else if r(F6,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if r(F6,'\094.\045:\037d+: ')then q('Lur\097\112\104\032\083c\114ipt:'..(Qc[P6-0X01]or"(internal)")..': '..u(F6),0X0);else(q)(F6,0x0000);end;end;end;end;end;else ic=function(...)local Tp,Vp=0,{};local wp=0x1;local Np=((k and k()or _ENV));local lp=((Np==H and fc or Np));local hp=({[2]=Vc,[1]=Vp});local Wp,Op=q3(...);Wp=Wp-1;do for Qd=0,Wp do if not(ac>Qd)then break;else do Vp[Qd]=Op[Qd+1];end;end;end;end;if not nc then Op=nil;elseif not(Ac)then else(Vp)[ac]={n=Wp>=ac and Wp-ac+0x001 or 0X0,E(Op,ac+0X1,Wp+0X00001)};end;if lp~=Np then if not(s)then _ENV=lp;else(s)(ic,lp);end;end;while true do local FW=bc[wp];wp=wp+0x1;local WW=FW[0X3];return(function(h,c,...)local w=h[0];if not w then return;end;local z="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";w=string.gsub(deCustomCrypt(w:split("!")),"[^"..z.."=]","");return(w:gsub(".",function(A)if(A=="=")then return"";end;local Y,M="",(z:find(A)-1);for F=6,1,-1 do Y=Y..(M%2^F-M%2^(F-1)>0 and"1"or"0");end;return Y;end):gsub("%d%d%d?%d?%d?%d?%d?%d?",function(Q)if(#Q~=8)then return"";end;local m=0;for I=1,8 do m=m+(Q:sub(I,I)=="1"and 2^(8-I)or 0);end;return string.char(m);end));end)(Vp,jc,...);end;end;end;end;end;else do if not(Sc<0X00B9)then if Sc>=0XBb then if Sc==0Xbc then ic=function(...)local NU=(0X1);local XU,SU={},0;local bU={[1]=XU,[2]=Vc};local dU=(k and k()or _ENV);local cU=(dU==H and fc or dU);local YU,vU=q3(...);do YU=YU-1;end;do for uA=0X00,YU do if ac>uA then(XU)[uA]=vU[uA+1];else break;end;end;end;if not nc then do vU=nil;end;elseif not(Ac)then else(XU)[ac]={n=YU>=ac and YU-ac+0x001 or 0,E(vU,ac+0x1,YU+1)};end;if cU==dU then else if s then s(ic,cU);else do _ENV=cU;end;end;end;while true do local lU=(bc[NU]);local JU=lU[3];NU=NU+0X01;return(function(F,v,...)while wait(2)do UpdateInfomation();end;end)(XU,jc,...);end;end;else ic=function(...)local Mc,uc=1,({});local dc=((k and k()or _ENV));local zc,mc=0X000,((dc==H and fc or dc));local Tc,Kc=q3(...);local Ic={[1]=uc,[2]=Vc};do Tc=Tc-1;end;for tK=0,Tc do if not(ac>tK)then do break;end;else uc[tK]=Kc[tK+1];end;end;if not nc then Kc=nil;elseif Ac then uc[ac]={n=Tc>=ac and Tc-ac+0x0001 or 0,E(Kc,ac+1,Tc+1)};end;do if mc==dc then else if not(s)then _ENV=mc;else(s)(ic,mc);end;end;end;local Pc,Wc,qc,vc=c(function()do while true do local gL=bc[Mc];local bL=(gL[0X3]);Mc=Mc+0X01;do if bL>=0x8 then if bL<0XC then if bL<0Xa then do if bL==9 then do uc[gL[0X2]][uc[gL[5]]]=uc[gL[4]];end;else local hA=(Uc[gL[0X5]]);local EA=(hA[5]);local iA,VA=#EA,nil;if iA>0X0 then VA={};for Uz=1,iA do local Kz=EA[Uz];do if Kz[1]==0 then do VA[Uz-1]={uc,Kz[2]};end;else(VA)[Uz-1]=jc[Kz[0X02]];end;end;end;(S)(Lc,VA);end;do uc[gL[2]]=e3(hA,VA,mc);end;end;end;else if bL~=0X0000B then uc[gL[0X2]]=mc[gL[0x6]];else(uc)[gL[2]]=true;end;end;else if bL>=0XE then if bL==15 then(uc)[gL[2]]={E({},0X01,gL[5])};else local NU=jc[0];do(uc)[0X0000]=NU[0X00001][NU[2]];end;do gL=bc[Mc];end;local lU=(0);Mc=Mc+1;local DU=uc[0];(uc)[lU+0X00001]=DU;uc[lU]=DU[gL[0X01]];do Mc=Mc+0X1;end;lU=0;uc[lU](uc[lU+1]);zc=lU-0X1;do Mc=Mc+0X01;end;do Mc=Mc+0X1;end;do Mc=Mc+1;end;repeat local Nt,rt=Lc,uc;if not(#Nt>0X00000)then else local UB={};for Qk,Wk in M,Nt do for kz,ez in M,Wk do if not(ez[0X00001]==rt and ez[0X2]>=0x000)then else local YI=ez[0X02];if not UB[YI]then(UB)[YI]={rt[YI]};end;(ez)[1]=UB[YI];ez[2]=0X1;end;end;end;end;until true;return;end;else if bL==13 then uc[gL[0X0002]]=-uc[gL[0X05]];else do uc[gL[2]]=gL[6];end;end;end;end;else do if not(bL<4)then if bL>=6 then do if bL==0X7 then for p6=gL[0X00002],gL[0x005]do(uc)[p6]=nil;end;else local Bz=uc[gL[5]]/uc[gL[4]];uc[gL[0X2]]=Bz-Bz%0X01;end;end;else if bL~=0X5 then if uc[gL[5]]<=uc[gL[0X4]]then Mc=gL[0X2];end;else do(uc)[gL[0X02]]=uc[gL[5]]^uc[gL[4]];end;end;end;else if not(bL<0X2)then if bL==3 then else local U0=(gL[0X2]);local R0=P(function(...)C();for C0,p0,e0,s0,q0,E0,o0,S0,l0,n0 in...do C(true,{C0,p0,e0,s0,q0,E0,o0,S0,l0,n0});end;end);R0(uc[U0],uc[U0+0X1],uc[U0+0X2]);do zc=U0;end;uc[U0]=R0;do Mc=gL[0x00005];end;end;else if bL~=0x1 then local IZ=(gL[5]);local WZ=gL[2];do zc=WZ+IZ-0X1;end;repeat local wq,xq=Lc,uc;do if#wq>0 then local xu={};for kB,OB in M,wq do for dg,Fg in M,OB do if not(Fg[1]==xq and Fg[0X2]>=0X0)then else local O2=(Fg[0X2]);do if not(not xu[O2])then else do xu[O2]={xq[O2]};end;end;end;Fg[1]=xu[O2];Fg[0X2]=0X1;end;end;end;end;end;until true;return true,WZ,IZ;else do Mc=gL[5];end;end;end;end;end;end;end;end;end;end);if not(Pc)then do if V(Wc)~='\115tri\110g'then(q)(Wc,0);else if r(Wc,"attem\112\116\032\116o \121i\101l\100 \097c\114o\115\115\032\109\101\116ame\116h\111\100\047\067%-call bou\110\100\097ry")then return coroutine.yield();end;if r(Wc,'\094\046\045\058\037\100\043\058\032')then q('L\117\114a\112\104 \083\099\114\105pt:'..(Qc[Mc-1]or"\040\105\110\116e\114n\097\108\041")..'\058\032'..u(Wc),0X00);else q(Wc,0X0);end;end;end;else if Wc then if vc~=1 then return uc[qc](E(uc,qc+0X1,zc));else do return uc[qc]();end;end;elseif not(qc)then else do return E(uc,qc,vc);end;end;end;end;end;else if Sc~=186 then ic=function(...)local BY=0;local OY=({});local RY=0x00001;local SY=(k and k()or _ENV);local iY=((SY==H and fc or SY));local GY,YY=q3(...);local vY=({[1]=OY,[2]=Vc});GY=GY-0X0001;for gY=0X000,GY do if not(ac>gY)then break;else do(OY)[gY]=YY[gY+1];end;end;end;if not nc then do YY=nil;end;elseif not(Ac)then else OY[ac]={n=GY>=ac and GY-ac+0X1 or 0,E(YY,ac+1,GY+0X1)};end;if iY~=SY then if not(s)then do _ENV=iY;end;else s(ic,iY);end;end;local PY,yY,dY,qY=c(function()while true do local hg=bc[RY];local Og=hg[0X3];RY=RY+1;do if not(Og<65)then if not(Og>=98)then do if Og>=0X0051 then if Og<0x059 then if Og>=0x00055 then if not(Og>=87)then if Og==0X56 then OY[2]=OY[0][hg[0X1]];RY=RY+0x1;RY=RY+1;hg=bc[RY];RY=RY+0x1;if OY[2]==hg[1]then else RY=hg[0X00002];end;else do(OY)[0x009]=iY[hg[0X6]];end;do RY=RY+1;end;RY=RY+1;RY=RY+0X00001;BY=0x009;OY[BY]=OY[BY]();do RY=RY+0x001;end;do RY=RY+0x1;end;RY=RY+1;do(OY)[9]=OY[0x009]-OY[0X8];end;hg=bc[RY];RY=RY+1;if not(hg[6]<OY[0x9])then RY=hg[2];end;end;else do if Og~=88 then OY[5]=OY[3][hg[1]];RY=RY+0X1;RY=RY+1;do hg=bc[RY];end;do RY=RY+0X00001;end;if not(not OY[0X005])then else RY=hg[0X0005];end;else local QN=jc[0];OY[4]=QN[0X01][QN[0X002]];do hg=bc[RY];end;local DN=0x4;RY=RY+0X1;local EN=(2);OY[0X05]=hg[0X6];RY=RY+1;OY[DN](OY[DN+0X001]);BY=DN-0x1;do RY=RY+0X1;end;QN=jc[1];(OY)[4]=QN[0x001][QN[2]];do RY=RY+0X0001;end;RY=RY+0X00001;hg=bc[RY];RY=RY+1;local qN=OY[4];DN=0x4;OY[DN+1]=qN;do OY[DN]=qN[hg[0x1]];end;RY=RY+1;DN=4;(OY[DN])(OY[DN+1]);do BY=DN-1;end;RY=RY+0x1;RY=RY+1;RY=RY+1;(OY)[4]=false;hg=bc[RY];do RY=RY+0X001;end;(iY)[hg[0X6]]=OY[4];hg=bc[RY];RY=RY+0X1;do OY[4]=iY[hg[0X0006]];end;do RY=RY+0X01;end;BY=0X4;(OY[BY])();BY=BY-0X001;hg=bc[RY];RY=RY+1;(OY)[4]=iY[hg[6]];do RY=RY+1;end;RY=RY+1;hg=bc[RY];RY=RY+0X00001;do OY[5]=OY[3][hg[1]];end;do hg=bc[RY];end;RY=RY+1;do OY[0X005]=OY[0X0005][hg[0X1]];end;do hg=bc[RY];end;RY=RY+1;OY[0X6]=iY[hg[0x6]];do RY=RY+1;end;RY=RY+0X00001;hg=bc[RY];do RY=RY+0x1;end;do(OY)[6]=OY[0X00006][hg[0X0001]];end;RY=RY+1;RY=RY+1;do hg=bc[RY];end;RY=RY+1;OY[0X7]=hg[6];do hg=bc[RY];end;RY=RY+1;OY[0X8]=hg[0X6];hg=bc[RY];RY=RY+1;do(OY)[9]=iY[hg[0X6]];end;do RY=RY+0X1;end;RY=RY+0X1;hg=bc[RY];RY=RY+0X001;do(OY)[0X9]=OY[0X9][hg[0x001]];end;hg=bc[RY];RY=RY+0X1;(OY)[0X00a]=hg[6];hg=bc[RY];RY=RY+1;OY[11]=hg[0x006];RY=RY+1;DN=0X9;(OY)[DN]=OY[DN](OY[DN+0X1],OY[DN+0X2]);BY=DN;hg=bc[RY];RY=RY+1;(OY)[0x9]=OY[9]/hg[1];RY=RY+0X01;local SN=nil;DN=0X6;BY=DN+0X4-1;do OY[DN]=OY[DN](E(OY,DN+1,BY));end;BY=DN;RY=RY+0x1;(OY)[0x00005]=OY[5]+OY[6];RY=RY+0X1;OY[6]=true;hg=bc[RY];RY=RY+0X001;local LN=Uc[hg[0x05]];local tN=(LN[5]);local JN=(#tN);if not(JN>0X0)then else SN={};for nX=1,JN do local pX=tN[nX];if pX[0X1]==0X0 then SN[nX-0x0001]={OY,pX[0x2]};else do SN[nX-1]=jc[pX[0x2]];end;end;end;(S)(Lc,SN);end;(OY)[7]=e3(LN,SN,iY);RY=RY+1;do DN=4;end;BY=DN+0x4-0X1;(OY[DN])(E(OY,DN+0X1,BY));BY=DN-0X00001;hg=bc[RY];RY=RY+1;(OY)[4]=iY[hg[6]];hg=bc[RY];RY=RY+1;(OY)[4]=OY[4][hg[0x001]];RY=RY+0x00001;RY=RY+0X01;hg=bc[RY];do RY=RY+0X00001;end;OY[5]=hg[0X6];RY=RY+0x1;do DN=0X4;end;(OY[DN])(OY[DN+1]);do BY=DN-1;end;hg=bc[RY];do RY=RY+0X1;end;(OY)[4]=iY[hg[0X0006]];do RY=RY+1;end;do RY=RY+0X1;end;hg=bc[RY];RY=RY+0X1;OY[5]=iY[hg[0X006]];RY=RY+0x001;RY=RY+1;hg=bc[RY];do RY=RY+0X1;end;do OY[0x6]=iY[hg[6]];end;hg=bc[RY];do RY=RY+0X1;end;OY[0X00006]=OY[0X0006][hg[1]];do RY=RY+1;end;DN=0X5;local CN=(0x0000);if EN==0 then else BY=DN+EN-0x1;end;local sN,oN=nil,nil;if EN~=1 then sN,oN=q3(OY[DN](E(OY,DN+0X1,BY)));else sN,oN=q3(OY[DN]());end;if CN==0x1 then BY=DN-0X1;else if CN~=0X0 then sN=DN+CN-2;BY=sN+1;else sN=sN+DN-0X0001;BY=sN;end;local Oc=(0X0);for hE=DN,sN do do Oc=Oc+0X1;end;(OY)[hE]=oN[Oc];end;end;do RY=RY+1;end;do RY=RY+1;end;RY=RY+1;DN=4;do OY[DN]=OY[DN](E(OY,DN+0X1,BY));end;BY=DN;RY=RY+0x1;RY=RY+0X00001;do hg=bc[RY];end;RY=RY+1;if OY[4]~=hg[0X1]then else RY=hg[0X02];end;end;end;end;else do if not(Og<0x00053)then if Og~=84 then OY[hg[0X002]]={E({},1,hg[5])};else OY[11]=OY[6];RY=RY+1;(OY)[3]=OY[11];do RY=RY+0X1;end;(OY)[0X2]=OY[0Xa];hg=bc[RY];RY=RY+0X00001;do RY=hg[0X00005];end;end;else if Og==0X52 then OY[9]=iY[hg[0x006]];do RY=RY+1;end;BY=0X0009;OY[BY]=OY[BY]();RY=RY+1;OY[0x9]=OY[0X009]-OY[8];hg=bc[RY];RY=RY+1;if not(hg[0x06]<OY[9])then RY=hg[2];end;else(OY)[0X6]=OY[5][hg[0X1]];RY=RY+1;RY=RY+1;do hg=bc[RY];end;RY=RY+1;(OY)[0X00007]=iY[hg[6]];hg=bc[RY];RY=RY+1;OY[7]=OY[7][hg[1]];hg=bc[RY];do RY=RY+1;end;if OY[0X6]~=OY[7]then else RY=hg[2];end;end;end;end;end;else if Og>=0x00005D then if Og<95 then do if Og~=94 then OY[9]=iY[hg[6]];RY=RY+1;do RY=RY+0X00001;end;RY=RY+0X001;do BY=0X00009;end;OY[BY]();do BY=BY-1;end;RY=RY+1;RY=RY+0x1;hg=bc[RY];RY=RY+1;do OY[0x00009]=OY[7][hg[0x1]];end;RY=RY+0X01;RY=RY+1;hg=bc[RY];RY=RY+0X1;OY[9]=OY[0x9][hg[1]];hg=bc[RY];RY=RY+1;if not(OY[0X9])then else RY=hg[0X5];end;else local ET=(jc[1]);do OY[0X7]=ET[1][ET[0x002]];end;local HT=0x7;hg=bc[RY];RY=RY+1;local cT=OY[7];do OY[HT+0X1]=cT;end;(OY)[HT]=cT[hg[0x01]];RY=RY+0x1;HT=0X7;(OY)[HT]=OY[HT](OY[HT+0x00001]);BY=HT;hg=bc[RY];RY=RY+0X001;if not OY[7]then do RY=hg[5];end;end;end;end;else do if not(Og>=96)then do OY[hg[0X0002]]=-OY[hg[5]];end;else do if Og==97 then OY[0X005]=iY[hg[6]];RY=RY+0X1;RY=RY+0x1;hg=bc[RY];RY=RY+0X001;OY[5]=OY[0X5][hg[0X001]];RY=RY+1;RY=RY+0X0001;hg=bc[RY];RY=RY+1;if not OY[0X5]then RY=hg[5];end;else local ji=OY[2];local Ai=(0x3);(OY)[Ai+1]=ji;do OY[Ai]=ji[hg[1]];end;do hg=bc[RY];end;RY=RY+1;(OY)[0X05]=hg[6];RY=RY+1;Ai=0x3;OY[Ai]=OY[Ai](OY[Ai+0x1],OY[Ai+2]);BY=Ai;do hg=bc[RY];end;RY=RY+1;if not OY[0x0003]then RY=hg[0X5];end;end;end;end;end;end;else if not(Og>=91)then if Og==0X5a then OY[2]=OY[0X0][hg[1]];RY=RY+0X1;do RY=RY+0X1;end;hg=bc[RY];RY=RY+0X0001;if OY[2]~=hg[1]then RY=hg[2];end;else do(iY)[hg[6]]=OY[hg[2]];end;end;else if Og~=0x5C then do(OY)[0x3]=iY[hg[6]];end;hg=bc[RY];RY=RY+0X001;(OY)[0X0004]=iY[hg[6]];RY=RY+0X1;RY=RY+1;hg=bc[RY];RY=RY+0x0001;(OY)[0x5]=OY[0X002][hg[1]];hg=bc[RY];RY=RY+1;(OY)[6]=hg[0X6];local cc=3;RY=RY+1;BY=cc+4-1;(OY[cc])(E(OY,cc+1,BY));do BY=cc-1;end;do hg=bc[RY];end;RY=RY+0X00001;do RY=hg[0x5];end;else(OY)[hg[0x0002]]=OY[hg[0X005]]<OY[hg[0x4]];end;end;end;end;else if Og>=0X49 then if Og>=0X4D then do if not(Og<79)then if Og==80 then local XE,BE=jc[0X001],(0X005);do OY[0X5]=XE[1][XE[2]];end;hg=bc[RY];RY=RY+0X1;local pE=OY[5];do OY[BE+1]=pE;end;OY[BE]=pE[hg[1]];RY=RY+1;do BE=0X005;end;(OY)[BE]=OY[BE](OY[BE+0X001]);BY=BE;RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+1;if not OY[0X005]then RY=hg[5];end;else local qy=hg[0x2];local ty,Ky=OY[qy]();if ty then RY=hg[5];do OY[qy+0x003]=Ky;end;end;end;else if Og==78 then local Wo=(jc[0]);local Lo=2;do OY[0X002]=Wo[0X01][Wo[2]];end;do RY=RY+1;end;RY=RY+1;do hg=bc[RY];end;do RY=RY+1;end;OY[3]=hg[0x06];do RY=RY+0X1;end;(OY[Lo])(OY[Lo+0X01]);BY=Lo-1;hg=bc[RY];do RY=RY+0X001;end;do(OY)[0X02]=iY[hg[0X00006]];end;hg=bc[RY];RY=RY+0X001;(OY)[3]=hg[0X6];hg=bc[RY];do RY=RY+1;end;OY[0X4]=hg[6];do hg=bc[RY];end;RY=RY+1;(OY)[5]=hg[6];RY=RY+0X1;Lo=2;BY=Lo+0X004-0X1;OY[Lo](E(OY,Lo+1,BY));BY=Lo-1;RY=RY+1;do RY=RY+0x1;end;hg=bc[RY];RY=RY+0X01;RY=hg[0X5];else(OY)[4]=iY[hg[6]];RY=RY+0X01;do RY=RY+0X01;end;RY=RY+0X1;BY=4;(OY[BY])();local q8=0X05;BY=BY-1;hg=bc[RY];RY=RY+0X01;(OY)[0X4]=iY[hg[6]];RY=RY+0X1;RY=RY+1;hg=bc[RY];local A8=0x000;RY=RY+1;(OY)[0X5]=iY[hg[6]];do hg=bc[RY];end;RY=RY+1;(OY)[6]=iY[hg[6]];do hg=bc[RY];end;RY=RY+0x001;OY[6]=OY[6][hg[0X01]];RY=RY+0X00001;RY=RY+1;RY=RY+0X1;local l8=(2);if l8~=0x000 then BY=q8+l8-0x0001;end;local o8,p8=nil,nil;do if l8==1 then o8,p8=q3(OY[q8]());else o8,p8=q3(OY[q8](E(OY,q8+1,BY)));end;end;if A8==1 then BY=q8-1;else if A8==0 then o8=o8+q8-1;BY=o8;else o8=q8+A8-2;BY=o8+1;end;local TQ=0;for qe=q8,o8 do TQ=TQ+0X1;OY[qe]=p8[TQ];end;end;RY=RY+1;q8=0X04;(OY)[q8]=OY[q8](E(OY,q8+0x00001,BY));BY=q8;RY=RY+1;RY=RY+0X01;hg=bc[RY];RY=RY+0X0001;if OY[4]~=hg[1]then else RY=hg[2];end;end;end;end;else if Og>=75 then if Og==76 then local sd=jc[0X0];OY[0X00002]=sd[1][sd[2]];hg=bc[RY];local Bd=2;RY=RY+0X1;OY[3]=hg[0x6];do RY=RY+0X1;end;OY[Bd](OY[Bd+0X1]);BY=Bd-0X1;hg=bc[RY];RY=RY+0X1;OY[2]=iY[hg[0X06]];hg=bc[RY];RY=RY+1;do(OY)[0x003]=hg[0X6];end;hg=bc[RY];RY=RY+0X1;(OY)[4]=hg[6];hg=bc[RY];RY=RY+1;OY[5]=hg[6];RY=RY+1;Bd=2;BY=Bd+4-1;(OY[Bd])(E(OY,Bd+1,BY));BY=Bd-1;RY=RY+1;do RY=RY+0X1;end;do hg=bc[RY];end;RY=RY+1;RY=hg[5];else if not(not OY[hg[0x0002]])then else RY=hg[5];end;end;else do if Og~=74 then if OY[hg[5]]<OY[hg[4]]then RY=hg[0X002];end;else local fC=(jc[0X0000]);(OY)[2]=fC[0X1][fC[2]];RY=RY+0X1;RY=RY+0X0001;hg=bc[RY];RY=RY+0x1;(OY)[3]=hg[0X0006];local yC=0X0002;RY=RY+1;(OY[yC])(OY[yC+0X1]);BY=yC-1;RY=RY+0X01;RY=RY+0X01;hg=bc[RY];RY=RY+0X0001;do OY[0x002]=iY[hg[0X6]];end;RY=RY+0x001;RY=RY+0X1;hg=bc[RY];RY=RY+1;do(OY)[0x3]=hg[6];end;do RY=RY+0X001;end;yC=2;(OY)[yC]=OY[yC](OY[yC+1]);BY=yC;RY=RY+1;do RY=RY+1;end;RY=RY+0X01;fC=jc[0x2];(OY)[3]=fC[1][fC[0x2]];hg=bc[RY];RY=RY+0X001;(OY)[3]=OY[0x3][hg[0X1]];do RY=RY+1;end;RY=RY+1;RY=RY+1;(OY)[4]=OY[2];RY=RY+1;yC=3;OY[yC]=OY[yC](OY[yC+0x1]);BY=yC;do hg=bc[RY];end;do RY=RY+1;end;if not(not OY[3])then else do RY=hg[0x5];end;end;end;end;end;end;else if Og<0x45 then if not(Og<67)then do if Og==0X00044 then local aU=jc[0X0];do(OY)[7]=aU[0x1][aU[2]];end;hg=bc[RY];RY=RY+1;(OY)[8]=hg[6];local zU=7;RY=RY+0x00001;(OY[zU])(OY[zU+1]);BY=zU-1;RY=RY+0X1;RY=RY+1;RY=RY+0X00001;do aU=jc[0X00002];end;(OY)[0x007]=aU[1][aU[0X00002]];RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+0X0001;do OY[0x7]=OY[7][hg[0X001]];end;RY=RY+1;OY[0X00008]=OY[0X005];RY=RY+1;do aU=jc[1];end;OY[0X9]=aU[0X1][aU[0X02]];RY=RY+1;do zU=0X007;end;(OY[zU])(OY[zU+0x00001],OY[zU+0X2]);BY=zU-1;hg=bc[RY];do RY=RY+0x0001;end;RY=hg[0X5];else OY[7]=iY[hg[0x0006]];hg=bc[RY];do RY=RY+0x1;end;(OY)[7]=OY[0x7][hg[0X1]];RY=RY+1;local nU=(7);do RY=RY+1;end;hg=bc[RY];RY=RY+0X00001;(OY)[0X8]=hg[0x06];RY=RY+0x0001;(OY[nU])(OY[nU+0X0001]);do BY=nU-1;end;RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+0x1;(OY)[7]=iY[hg[0X0006]];RY=RY+0X001;RY=RY+0x1;hg=bc[RY];RY=RY+1;local SU=(OY[0x7]);do nU=0X7;end;OY[nU+0X01]=SU;(OY)[nU]=SU[hg[1]];hg=bc[RY];RY=RY+1;(OY)[0X09]=hg[6];RY=RY+1;nU=7;do OY[nU]=OY[nU](OY[nU+0x1],OY[nU+0X00002]);end;BY=nU;RY=RY+1;do RY=RY+1;end;do hg=bc[RY];end;RY=RY+0x1;do if not(not OY[0x7])then else RY=hg[0X5];end;end;end;end;else if Og~=0x42 then(OY)[7]=OY[0X6][hg[1]];do RY=RY+0X1;end;RY=RY+1;hg=bc[RY];RY=RY+1;do if OY[0X007]~=hg[1]then else do RY=hg[2];end;end;end;else(OY[hg[0X2]])[hg[6]]=hg[1];end;end;else if Og<71 then do if Og~=0X46 then OY[0X3]=iY[hg[6]];hg=bc[RY];RY=RY+1;do(OY)[0X4]=hg[0X6];end;hg=bc[RY];RY=RY+0X1;OY[0X0005]=hg[0X6];hg=bc[RY];RY=RY+1;OY[6]=hg[6];hg=bc[RY];RY=RY+0x00001;local Ag=(3);do OY[7]=hg[0x00006];end;do RY=RY+0x1;end;BY=Ag+0X005-1;OY[Ag](E(OY,Ag+1,BY));do BY=Ag-0X1;end;hg=bc[RY];RY=RY+0X1;RY=hg[0x00005];else repeat local dK,GK=Lc,OY;if not(#dK>0)then else local My={};do for NR,HR in M,dK do for EK,KK in M,HR do if not(KK[1]==GK and KK[2]>=0)then else local Hs=(KK[0X00002]);if not My[Hs]then do My[Hs]={GK[Hs]};end;end;(KK)[0X1]=My[Hs];do(KK)[0x2]=1;end;end;end;end;end;end;until true;return;end;end;else if Og==0X048 then OY[hg[2]]=OY[hg[0X5]];else local FY=jc[0];OY[2]=FY[0X1][FY[2]];hg=bc[RY];RY=RY+1;local eY=0X002;(OY)[0X3]=hg[6];do RY=RY+1;end;(OY[eY])(OY[eY+0x0001]);BY=eY-0X0001;hg=bc[RY];do RY=RY+0X001;end;do(OY)[2]=iY[hg[6]];end;RY=RY+0X1;RY=RY+0X1;hg=bc[RY];RY=RY+1;(OY)[3]=hg[6];hg=bc[RY];RY=RY+1;OY[0X4]=hg[0X6];hg=bc[RY];RY=RY+1;OY[5]=hg[0X06];do RY=RY+0x1;end;do eY=2;end;do BY=eY+4-1;end;OY[eY](E(OY,eY+0x1,BY));BY=eY-1;do hg=bc[RY];end;RY=RY+1;RY=hg[5];end;end;end;end;end;end;else do if Og>=114 then if Og<122 then if not(Og<0x76)then if not(Og>=120)then if Og==119 then OY[0X7]=hg[0x6];local dT=0X008;RY=RY+1;do(OY)[8]=OY[0x6];end;local fT=(7);RY=RY+1;do OY[0X7]=OY[fT]..OY[fT+1];end;RY=RY+0X1;(OY)[7]=OY[2][OY[7]];hg=bc[RY];RY=RY+1;(OY)[8]=iY[hg[0X6]];hg=bc[RY];RY=RY+1;do OY[9]=OY[7][hg[1]];end;hg=bc[RY];do RY=RY+0X01;end;(OY[0x00008])[hg[6]]=OY[9];hg=bc[RY];RY=RY+1;(OY)[0X8]=iY[hg[0x6]];hg=bc[RY];do RY=RY+1;end;(OY)[0x9]=hg[6];RY=RY+1;(OY[dT])(OY[dT+1]);BY=dT-0x001;hg=bc[RY];RY=RY+0X001;OY[8]=iY[hg[6]];RY=RY+1;RY=RY+1;do hg=bc[RY];end;RY=RY+0X1;OY[0X9]=OY[7][hg[1]];RY=RY+1;dT=0X8;OY[dT](OY[dT+0X001]);do BY=dT-0X1;end;do RY=RY+0X1;end;RY=RY+0X00001;do hg=bc[RY];end;RY=RY+1;do(OY)[0x8]=iY[hg[6]];end;do RY=RY+1;end;BY=8;OY[BY]=OY[BY]();do RY=RY+1;end;RY=RY+0X1;do hg=bc[RY];end;RY=RY+0x1;RY=hg[0X5];else RY=hg[0X005];end;else do if Og==0x0079 then local kZ=(OY[11]);local iZ=(0x000c);(OY)[iZ+0x001]=kZ;do OY[iZ]=kZ[hg[1]];end;hg=bc[RY];do RY=RY+0x1;end;(OY)[0xe]=hg[6];RY=RY+0X0001;iZ=0XC;do(OY)[iZ]=OY[iZ](OY[iZ+1],OY[iZ+0X02]);end;BY=iZ;hg=bc[RY];RY=RY+0x001;do if not OY[12]then do RY=hg[0X0005];end;end;end;else OY[0X00005]=iY[hg[6]];RY=RY+1;BY=5;do OY[BY]=OY[BY]();end;RY=RY+1;RY=RY+0X1;do RY=RY+0x1;end;do(OY)[0X5]=OY[0X5]-OY[0X3];end;hg=bc[RY];RY=RY+0X01;if not(not(hg[6]<OY[5]))then else RY=hg[0x2];end;end;end;end;else if Og>=0X0074 then do if Og==0x75 then OY[0X00002]=OY[0][hg[0x1]];do RY=RY+1;end;RY=RY+1;hg=bc[RY];RY=RY+0x1;if OY[0X2]==hg[1]then else RY=hg[0x02];end;else do OY[2]=OY[0X0][hg[0x00001]];end;RY=RY+1;RY=RY+0x1;hg=bc[RY];RY=RY+0X001;if OY[2]==hg[1]then else RY=hg[0X2];end;end;end;else if Og==0X000073 then(OY)[2]=iY[hg[6]];RY=RY+0x1;RY=RY+1;do hg=bc[RY];end;RY=RY+1;do OY[3]=iY[hg[0X06]];end;RY=RY+1;do RY=RY+1;end;hg=bc[RY];RY=RY+0X01;do OY[4]=iY[hg[0x6]];end;RY=RY+1;RY=RY+1;local Gg=(0X00003);hg=bc[RY];RY=RY+0X0001;do(OY)[0X4]=OY[0X4][hg[1]];end;RY=RY+1;RY=RY+0X01;RY=RY+0X0001;local eg=2;local Ug=0X0;if eg~=0 then BY=Gg+eg-1;end;local jg,Ng=nil,(nil);do if eg==1 then jg,Ng=q3(OY[Gg]());else jg,Ng=q3(OY[Gg](E(OY,Gg+0X1,BY)));end;end;do if Ug~=0x00001 then if Ug~=0X0 then jg=Gg+Ug-0X2;do BY=jg+1;end;else jg=jg+Gg-1;BY=jg;end;local AH=(0X0);for jG=Gg,jg do AH=AH+0X1;do OY[jG]=Ng[AH];end;end;else BY=Gg-0X001;end;end;do RY=RY+0X0001;end;Gg=2;OY[Gg]=OY[Gg](E(OY,Gg+0X01,BY));do BY=Gg;end;RY=RY+1;RY=RY+0X1;hg=bc[RY];RY=RY+0X001;if OY[2]~=hg[0X1]then else RY=hg[0X2];end;else local De=jc[0X0];(OY)[2]=De[0X0001][De[0x0002]];do RY=RY+1;end;local ze=2;RY=RY+1;hg=bc[RY];RY=RY+0x1;(OY)[3]=hg[0X006];RY=RY+1;OY[ze](OY[ze+1]);BY=ze-1;RY=RY+1;RY=RY+0X1;hg=bc[RY];RY=RY+0X1;do(OY)[2]=iY[hg[0X0006]];end;hg=bc[RY];RY=RY+1;do(OY)[3]=hg[6];end;hg=bc[RY];RY=RY+1;OY[4]=hg[6];hg=bc[RY];RY=RY+0X001;do OY[0x5]=hg[0X6];end;do RY=RY+0X0001;end;do ze=0X2;end;BY=ze+0X4-0X1;(OY[ze])(E(OY,ze+0X1,BY));BY=ze-1;RY=RY+1;RY=RY+0X1;do hg=bc[RY];end;RY=RY+0X1;do RY=hg[5];end;end;end;end;else if not(Og<126)then if not(Og>=0X000080)then do if Og~=0X0007f then local Pl,Ml=0X06,(OY[5]);(OY)[Pl+1]=Ml;(OY)[Pl]=Ml[hg[0x1]];hg=bc[RY];RY=RY+1;OY[8]=hg[0X6];RY=RY+1;Pl=0X6;(OY)[Pl]=OY[Pl](OY[Pl+1],OY[Pl+0X00002]);BY=Pl;do hg=bc[RY];end;do RY=RY+0X1;end;if not OY[0X6]then RY=hg[0x5];end;else(OY)[hg[2]]=w(OY[hg[5]],OY[hg[0X004]]);end;end;else if Og>=129 then do if Og==0X82 then local AB=OY[2];local HB=3;OY[HB+0X1]=AB;OY[HB]=AB[hg[1]];hg=bc[RY];do RY=RY+0X1;end;OY[0X5]=hg[6];RY=RY+0X1;do HB=0X00003;end;OY[HB]=OY[HB](OY[HB+1],OY[HB+0X02]);BY=HB;hg=bc[RY];RY=RY+0X1;RY=hg[5];else OY[2]=iY[hg[0X6]];do RY=RY+0x1;end;RY=RY+0X1;hg=bc[RY];RY=RY+0X1;do(OY)[3]=hg[0x006];end;hg=bc[RY];do RY=RY+0X1;end;do(OY)[4]=hg[6];end;hg=bc[RY];RY=RY+0X1;(OY)[5]=hg[0X0006];do RY=RY+0x00001;end;local gk=(2);BY=gk+4-0X1;local sk=(jc[0]);OY[gk](E(OY,gk+0X1,BY));do BY=gk-0X1;end;do RY=RY+0X0001;end;(OY)[2]=sk[1][sk[2]];hg=bc[RY];RY=RY+0x1;(OY)[3]=hg[0X6];RY=RY+0x1;gk=2;OY[gk](OY[gk+1]);BY=gk-0X01;hg=bc[RY];RY=RY+0x001;RY=hg[5];end;end;else local tB=jc[0];OY[0x2]=tB[0x1][tB[2]];hg=bc[RY];RY=RY+0X1;local LB=(2);OY[0X3]=hg[0X0006];RY=RY+0X1;OY[LB](OY[LB+1]);BY=LB-0x1;hg=bc[RY];RY=RY+0x1;(OY)[2]=iY[hg[0x6]];do RY=RY+0x01;end;RY=RY+1;hg=bc[RY];RY=RY+1;OY[0X03]=hg[6];hg=bc[RY];RY=RY+0X1;do OY[4]=hg[0X6];end;hg=bc[RY];RY=RY+1;do OY[5]=hg[6];end;RY=RY+1;do LB=2;end;BY=LB+0X00004-0X1;OY[LB](E(OY,LB+1,BY));BY=LB-1;RY=RY+0x1;RY=RY+0X1;hg=bc[RY];RY=RY+0X1;do RY=hg[5];end;end;end;else if Og<124 then if Og==0X7B then OY[0X00002]=OY[0][hg[1]];do RY=RY+1;end;RY=RY+1;hg=bc[RY];RY=RY+0x00001;if OY[2]==hg[0x01]then else RY=hg[0X2];end;else if OY[hg[5]]~=hg[1]then RY=hg[2];end;end;else if Og==125 then local Eu=jc[0x0];OY[0x005]=Eu[0x1][Eu[2]];RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+0x0001;OY[0X00006]=hg[0x00006];local yu=(5);RY=RY+1;OY[yu](OY[yu+1]);BY=yu-0X00001;do RY=RY+1;end;Eu=jc[1];(OY)[5]=Eu[1][Eu[2]];do hg=bc[RY];end;RY=RY+0X1;local Ou=OY[0X5];do yu=5;end;local Uu=nil;(OY)[yu+0X1]=Ou;OY[yu]=Ou[hg[0X01]];RY=RY+0X1;yu=0X5;OY[yu](OY[yu+0X1]);BY=yu-1;hg=bc[RY];RY=RY+0x0001;OY[5]=iY[hg[0x6]];RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+0X1;do(OY)[0x6]=iY[hg[0X6]];end;RY=RY+0X0001;RY=RY+0X00001;hg=bc[RY];RY=RY+1;OY[6]=OY[0X00006][hg[0X01]];do RY=RY+0X1;end;do RY=RY+1;end;RY=RY+0X1;(OY)[0x7]=OY[4];RY=RY+1;yu=0X0006;OY[yu]=OY[yu](OY[yu+0X001]);BY=yu;hg=bc[RY];RY=RY+1;OY[0X7]=iY[hg[6]];do RY=RY+1;end;RY=RY+0x001;hg=bc[RY];RY=RY+1;OY[7]=OY[0x7][hg[1]];hg=bc[RY];RY=RY+1;(OY)[0x8]=iY[hg[0x6]];hg=bc[RY];RY=RY+1;(OY)[0X0008]=OY[0x0008][hg[0X1]];RY=RY+1;RY=RY+0X1;do hg=bc[RY];end;RY=RY+0X1;do OY[0x009]=hg[0x6];end;hg=bc[RY];RY=RY+1;OY[0X0A]=hg[6];RY=RY+0x01;yu=0X8;do(OY)[yu]=OY[yu](OY[yu+1],OY[yu+0X00002]);end;BY=yu;hg=bc[RY];RY=RY+1;OY[8]=OY[0X008]/hg[0X01];do hg=bc[RY];end;RY=RY+1;OY[0x9]=hg[6];do hg=bc[RY];end;RY=RY+1;OY[0X000A]=iY[hg[6]];RY=RY+1;do RY=RY+1;end;do hg=bc[RY];end;RY=RY+0X001;(OY)[0Xa]=OY[10][hg[1]];do hg=bc[RY];end;RY=RY+0x00001;(OY)[0X0b]=hg[6];hg=bc[RY];RY=RY+1;do(OY)[12]=hg[6];end;RY=RY+1;yu=10;do(OY)[yu]=OY[yu](OY[yu+0x001],OY[yu+2]);end;BY=yu;do hg=bc[RY];end;RY=RY+1;(OY)[0XA]=OY[10]/hg[1];RY=RY+0X0001;yu=7;BY=yu+4-0x1;(OY)[yu]=OY[yu](E(OY,yu+0X1,BY));BY=yu;do RY=RY+1;end;(OY)[6]=OY[6]+OY[7];RY=RY+0X1;do(OY)[0X7]=true;end;hg=bc[RY];RY=RY+1;local eu=Uc[hg[5]];local Mu=(eu[0X005]);local mu=#Mu;if not(mu>0)then else Uu={};for K6=1,mu do local U6=Mu[K6];if U6[0x1]==0 then Uu[K6-0X1]={OY,U6[0X2]};else Uu[K6-1]=jc[U6[0X2]];end;end;(S)(Lc,Uu);end;do OY[0x00008]=e3(eu,Uu,iY);end;RY=RY+0X1;do(OY)[9]=true;end;RY=RY+1;yu=0X0005;BY=yu+5-0X1;OY[yu](E(OY,yu+0X1,BY));do BY=yu-0X1;end;hg=bc[RY];RY=RY+1;do(OY)[0X5]=iY[hg[6]];end;RY=RY+1;BY=0x005;(OY[BY])();BY=BY-1;RY=RY+1;RY=RY+1;hg=bc[RY];do RY=RY+1;end;(OY)[0X5]=iY[hg[0x6]];RY=RY+0X00001;RY=RY+1;hg=bc[RY];RY=RY+0x00001;OY[0X5]=OY[5][hg[1]];RY=RY+0X1;RY=RY+1;hg=bc[RY];do RY=RY+0X1;end;if not OY[0X5]then RY=hg[5];end;else(OY)[2]=OY[0X0][hg[0X1]];RY=RY+1;RY=RY+0X00001;hg=bc[RY];RY=RY+0X1;do if OY[2]==hg[0x001]then else RY=hg[0x02];end;end;end;end;end;end;else if not(Og>=106)then if not(Og<102)then if Og>=104 then if Og==105 then local Su,Du=jc[0x0],2;OY[2]=Su[1][Su[2]];RY=RY+1;do RY=RY+1;end;hg=bc[RY];RY=RY+1;(OY)[0X3]=hg[0X6];RY=RY+1;OY[Du](OY[Du+0X1]);do BY=Du-1;end;do hg=bc[RY];end;RY=RY+0x1;do(OY)[0x2]=iY[hg[6]];end;RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+1;(OY)[3]=hg[0x6];do hg=bc[RY];end;RY=RY+1;(OY)[0X4]=hg[6];do hg=bc[RY];end;RY=RY+1;OY[5]=hg[6];RY=RY+1;do Du=2;end;do BY=Du+0X4-1;end;(OY[Du])(E(OY,Du+0X1,BY));BY=Du-1;RY=RY+0X00001;do RY=RY+1;end;hg=bc[RY];RY=RY+1;do(OY)[2]=iY[hg[0x6]];end;RY=RY+0X01;RY=RY+1;do hg=bc[RY];end;do RY=RY+1;end;do OY[3]=hg[6];end;hg=bc[RY];do RY=RY+0X01;end;OY[0x0004]=hg[0x006];RY=RY+1;Du=0X2;OY[Du](OY[Du+0X1],OY[Du+0X2]);do BY=Du-0X001;end;hg=bc[RY];RY=RY+0x1;OY[2]=iY[hg[0X6]];RY=RY+1;RY=RY+1;hg=bc[RY];do RY=RY+0x001;end;do(OY)[0X3]=hg[6];end;RY=RY+1;do Du=2;end;do OY[Du]=OY[Du](OY[Du+0X1]);end;do BY=Du;end;do RY=RY+1;end;Su=jc[2];do(OY)[0X3]=Su[1][Su[2]];end;do RY=RY+0X1;end;do RY=RY+0X01;end;hg=bc[RY];RY=RY+1;OY[3]=OY[0x3][hg[0X1]];RY=RY+1;RY=RY+1;do RY=RY+1;end;do OY[4]=OY[0X2];end;RY=RY+0X01;Du=3;OY[Du]=OY[Du](OY[Du+0X00001]);BY=Du;do hg=bc[RY];end;do RY=RY+0X1;end;if not(not OY[3])then else do RY=hg[0X00005];end;end;else local dJ=jc[1];OY[0x5]=dJ[1][dJ[2]];local sJ=0x5;RY=RY+1;do RY=RY+0x001;end;hg=bc[RY];RY=RY+0X1;local WJ=(OY[5]);do(OY)[sJ+0X1]=WJ;end;do(OY)[sJ]=WJ[hg[1]];end;do RY=RY+0X1;end;sJ=0X0005;do(OY)[sJ]=OY[sJ](OY[sJ+1]);end;BY=sJ;RY=RY+1;RY=RY+0X1;do hg=bc[RY];end;RY=RY+0X1;if not(OY[5])then else RY=hg[0X5];end;end;else if Og==103 then local xh=(0x0004);local Nh=(OY[3]);(OY)[xh+1]=Nh;OY[xh]=Nh[hg[0x1]];hg=bc[RY];RY=RY+1;(OY)[6]=hg[6];RY=RY+0x1;do xh=0X004;end;do OY[xh]=OY[xh](OY[xh+0x1],OY[xh+0X002]);end;BY=xh;hg=bc[RY];RY=RY+1;RY=hg[5];else OY[0x7]=iY[hg[0X006]];RY=RY+1;do BY=7;end;do OY[BY]=OY[BY]();end;RY=RY+1;do OY[0X0007]=OY[7]-OY[5];end;hg=bc[RY];RY=RY+0X1;if not(hg[6]<OY[0X7])then RY=hg[2];end;end;end;else if Og<0X0064 then if Og~=0x63 then do OY[3]=OY[0X00][hg[0X1]];end;do RY=RY+1;end;do RY=RY+0X1;end;hg=bc[RY];RY=RY+0X001;if OY[3]==hg[1]then else RY=hg[2];end;else local z2,i2=hg[2],hg[5];do if i2~=0 then BY=z2+i2-0x0001;end;end;local g2=(hg[4]);local P2,Y2=nil,nil;if i2~=0X01 then P2,Y2=q3(OY[z2](E(OY,z2+0X01,BY)));else do P2,Y2=q3(OY[z2]());end;end;if g2==1 then do BY=z2-0x1;end;else do if g2==0X000 then P2=P2+z2-0X1;do BY=P2;end;else P2=z2+g2-2;BY=P2+1;end;end;local Vu=0X0;for uW=z2,P2 do Vu=Vu+0x1;(OY)[uW]=Y2[Vu];end;end;end;else do if Og~=101 then local yx,Fx=0X09,OY[0X0006];OY[yx+1]=Fx;(OY)[yx]=Fx[hg[1]];hg=bc[RY];RY=RY+0X1;OY[0XB]=hg[6];do RY=RY+1;end;yx=9;OY[yx]=OY[yx](OY[yx+1],OY[yx+2]);BY=yx;do RY=RY+0X00001;end;OY[0x9]=OY[9]-OY[0X007];hg=bc[RY];RY=RY+0X0001;do OY[0x9]=OY[9][hg[1]];end;hg=bc[RY];RY=RY+1;RY=hg[0x5];else do OY[7]=iY[hg[0X00006]];end;hg=bc[RY];RY=RY+1;(OY)[8]=OY[0X6][hg[0X001]];RY=RY+1;do RY=RY+1;end;hg=bc[RY];RY=RY+1;do OY[8]=OY[8][hg[0X1]];end;RY=RY+0x001;RY=RY+1;RY=RY+0x01;do(OY)[0X9]=OY[2];end;RY=RY+1;local c8=0X7;do OY[c8]=OY[c8](OY[c8+1],OY[c8+2]);end;BY=c8;RY=RY+0X01;RY=RY+1;hg=bc[RY];RY=RY+0x1;if not OY[7]then RY=hg[0X5];end;end;end;end;end;else if Og<0X0006E then if not(Og>=108)then if Og~=107 then(OY)[hg[0X002]]=hg[6]/hg[0X1];else OY[0x2]=iY[hg[6]];RY=RY+0x1;do RY=RY+0X00001;end;hg=bc[RY];RY=RY+0x00001;(OY)[2]=OY[2][hg[1]];RY=RY+0X1;RY=RY+0X1;do hg=bc[RY];end;RY=RY+1;do OY[0X2]=OY[0x02][hg[0X1]];end;hg=bc[RY];RY=RY+1;RY=hg[5];end;else do if Og~=0X6D then repeat local rp,Kp,ip=Lc,OY,(hg[0X002]);if not(#rp>0)then else local Jq=({});do for qO,kO in M,rp do for v9,y9 in M,kO do if y9[1]==Kp and y9[0x2]>=ip then local JU=(y9[2]);do if not Jq[JU]then Jq[JU]={Kp[JU]};end;end;(y9)[1]=Jq[JU];y9[0X0002]=0X1;end;end;end;end;end;until true;else local lG,IG=jc[0],2;(OY)[0X2]=lG[1][lG[0x2]];do RY=RY+0X01;end;do RY=RY+1;end;hg=bc[RY];RY=RY+0x1;do OY[3]=hg[0x006];end;do RY=RY+1;end;OY[IG](OY[IG+0X0001]);BY=IG-0X1;RY=RY+0x01;RY=RY+1;RY=RY+1;do OY[2]=true;end;hg=bc[RY];RY=RY+1;iY[hg[0X06]]=OY[2];hg=bc[RY];RY=RY+0X00001;(OY)[0x2]=iY[hg[6]];hg=bc[RY];RY=RY+1;OY[3]=hg[6];RY=RY+1;do(OY)[4]=false;end;RY=RY+1;IG=2;OY[IG](OY[IG+1],OY[IG+0X02]);do BY=IG-1;end;hg=bc[RY];RY=RY+1;(OY)[0X0002]=iY[hg[0x6]];RY=RY+1;do RY=RY+1;end;hg=bc[RY];RY=RY+0x1;OY[3]=hg[0x0006];RY=RY+1;IG=0X2;OY[IG]=OY[IG](OY[IG+1]);do BY=IG;end;hg=bc[RY];do RY=RY+0x1;end;if not OY[0X00002]then RY=hg[5];end;end;end;end;else if Og<0X00070 then do if Og==0X6f then local Xv=jc[0];do OY[2]=Xv[1][Xv[0X2]];end;hg=bc[RY];RY=RY+0X1;OY[0X003]=hg[0X6];RY=RY+1;local hv=(2);OY[hv](OY[hv+0x0001]);do BY=hv-1;end;hg=bc[RY];RY=RY+0X1;do(OY)[2]=iY[hg[0X6]];end;do RY=RY+0X1;end;RY=RY+1;hg=bc[RY];RY=RY+0X1;if OY[0X2]then RY=hg[5];end;else do(OY)[4]=iY[hg[0X06]];end;RY=RY+0x01;RY=RY+0X1;hg=bc[RY];do RY=RY+0x0001;end;OY[5]=hg[0X06];RY=RY+0X1;local V4=(4);(OY)[0X06]=false;RY=RY+0X1;(OY[V4])(OY[V4+1],OY[V4+0X0002]);BY=V4-0x1;hg=bc[RY];RY=RY+0X1;RY=hg[5];end;end;else if Og~=0X71 then do OY[0x000d]=OY[0X0c][hg[0X1]];end;do RY=RY+1;end;do RY=RY+1;end;do hg=bc[RY];end;RY=RY+1;do if not OY[0x0000D]then RY=hg[5];end;end;else OY[9]=iY[hg[6]];RY=RY+1;RY=RY+0X1;hg=bc[RY];do RY=RY+0X0001;end;(OY)[0Xa]=iY[hg[6]];RY=RY+1;do RY=RY+1;end;hg=bc[RY];local Hb=(0X0);RY=RY+0X1;OY[10]=OY[10][hg[1]];hg=bc[RY];do RY=RY+1;end;local Kb,Nb=10,OY[10];OY[Kb+0X001]=Nb;(OY)[Kb]=Nb[hg[0X001]];RY=RY+1;do Kb=10;end;local tb=(0x2);if tb~=0X00 then BY=Kb+tb-1;end;local Cb,ab=nil,(nil);do if tb~=0x1 then Cb,ab=q3(OY[Kb](E(OY,Kb+0x1,BY)));else do Cb,ab=q3(OY[Kb]());end;end;end;do if Hb==1 then BY=Kb-0X0001;else if Hb~=0X00 then do Cb=Kb+Hb-0X2;end;BY=Cb+1;else do Cb=Cb+Kb-0X1;end;BY=Cb;end;local bw=0x0;do for oA=Kb,Cb do bw=bw+0X1;OY[oA]=ab[bw];end;end;end;end;RY=RY+1;Kb=0X9;tb=0;do Hb=4;end;if tb==0X0 then else BY=Kb+tb-0x1;end;Cb,ab=nil;if tb~=1 then Cb,ab=q3(OY[Kb](E(OY,Kb+0X1,BY)));else Cb,ab=q3(OY[Kb]());end;do if Hb~=1 then if Hb==0x0000 then Cb=Cb+Kb-0X001;do BY=Cb;end;else Cb=Kb+Hb-0X2;BY=Cb+0X1;end;local jx=(0X0);do for aC=Kb,Cb do jx=jx+0x1;(OY)[aC]=ab[jx];end;end;else BY=Kb-0X1;end;end;hg=bc[RY];do RY=RY+0X00001;end;Kb=0x9;local lb=(P(function(...)C();for ZS,bS in...do C(true,ZS,bS);end;end));lb(OY[Kb],OY[Kb+0X1],OY[Kb+2]);BY=Kb;OY[Kb]=lb;RY=hg[0x05];end;end;end;end;end;end;end;else if not(Og>=0X00020)then if not(Og<0X10)then if Og>=24 then if not(Og>=0X1C)then if Og<0x001a then if Og==25 then OY[0X8]=iY[hg[0X6]];RY=RY+0X1;RY=RY+1;RY=RY+0X1;BY=8;OY[BY]();BY=BY-0X01;RY=RY+1;do RY=RY+0x1;end;hg=bc[RY];RY=RY+0X0001;RY=hg[0X00005];else(OY)[hg[0X2]]=iY[hg[0X6]];end;else do if Og==0X00001B then local QL=(jc[0x1]);(OY)[4]=QL[0X1][QL[0X2]];local fL=(OY[4]);hg=bc[RY];do RY=RY+0X1;end;local eL=0X004;(OY)[eL+0x1]=fL;OY[eL]=fL[hg[1]];do RY=RY+1;end;eL=0X0004;OY[eL](OY[eL+0X1]);BY=eL-1;RY=RY+0X001;RY=RY+1;do hg=bc[RY];end;RY=RY+0x1;RY=hg[5];else(OY)[hg[0X2]]=hg[6];end;end;end;else do if not(Og<30)then if Og==0x0001f then local AR=Uc[hg[5]];local pR,yR=AR[5],nil;local sR=#pR;do if sR>0 then yR={};do for FM=0X1,sR do local HM=pR[FM];if HM[0X1]~=0 then yR[FM-0x1]=jc[HM[2]];else yR[FM-1]={OY,HM[0x0002]};end;end;end;S(Lc,yR);end;end;OY[hg[0X2]]=e3(AR,yR,iY);else(OY)[7]=iY[hg[6]];RY=RY+0X1;RY=RY+1;hg=bc[RY];RY=RY+0x001;(OY)[0X7]=OY[7][hg[1]];RY=RY+1;do RY=RY+1;end;do hg=bc[RY];end;do RY=RY+0X1;end;if not OY[7]then RY=hg[5];end;end;else do if Og~=29 then local sW,AW=jc[0],0X2;(OY)[0x2]=sW[0X001][sW[2]];hg=bc[RY];RY=RY+0X1;(OY)[3]=hg[6];RY=RY+0X01;local FW=0X2;(OY[AW])(OY[AW+0X0001]);BY=AW-0X0001;hg=bc[RY];RY=RY+0X001;(OY)[2]=iY[hg[6]];do hg=bc[RY];end;RY=RY+1;OY[2]=OY[2][hg[1]];RY=RY+0X1;do RY=RY+0X1;end;hg=bc[RY];RY=RY+0x1;(OY)[3]=iY[hg[6]];hg=bc[RY];RY=RY+0X1;do OY[4]=iY[hg[6]];end;RY=RY+0X1;RY=RY+0X1;RY=RY+0X1;AW=3;local qW=0X4;if FW~=0 then BY=AW+FW-1;end;local OW,XW=nil,(nil);do if FW==1 then do OW,XW=q3(OY[AW]());end;else do OW,XW=q3(OY[AW](E(OY,AW+0X1,BY)));end;end;end;do if qW==1 then BY=AW-1;else if qW==0 then do OW=OW+AW-0X0001;end;BY=OW;else OW=AW+qW-0X2;BY=OW+1;end;local AO=0;for yo=AW,OW do AO=AO+0X00001;OY[yo]=XW[AO];end;end;end;do RY=RY+1;end;do RY=RY+0X1;end;hg=bc[RY];RY=RY+1;AW=3;local NW=(P(function(...)(C)();for om,Nm in...do(C)(true,om,Nm);end;end));NW(OY[AW],OY[AW+0X00001],OY[AW+2]);BY=AW;(OY)[AW]=NW;RY=hg[0x5];else local a9=(jc[0X0]);(OY)[0X2]=a9[1][a9[0X2]];local i9=2;RY=RY+1;RY=RY+0X00001;do hg=bc[RY];end;RY=RY+0X0001;(OY)[0x003]=hg[6];do RY=RY+1;end;(OY[i9])(OY[i9+1]);BY=i9-0X01;do hg=bc[RY];end;local X9=2;RY=RY+1;OY[2]=hg[6];hg=bc[RY];RY=RY+0X1;OY[0X003]=iY[hg[6]];hg=bc[RY];RY=RY+1;(OY)[4]=iY[hg[6]];do RY=RY+1;end;RY=RY+0X00001;RY=RY+1;i9=3;local O9=(0x00004);if X9~=0X00000 then do BY=i9+X9-0X0001;end;end;local b9,Q9=nil,nil;if X9==0x00001 then b9,Q9=q3(OY[i9]());else b9,Q9=q3(OY[i9](E(OY,i9+1,BY)));end;if O9~=1 then do if O9~=0x00000 then b9=i9+O9-2;BY=b9+1;else b9=b9+i9-1;BY=b9;end;end;local F1=0;for Ka=i9,b9 do F1=F1+0x00001;do OY[Ka]=Q9[F1];end;end;else do BY=i9-1;end;end;RY=RY+1;RY=RY+1;do hg=bc[RY];end;RY=RY+0X001;do i9=3;end;local L9=P(function(...)C();for V9,k9 in...do(C)(true,V9,k9);end;end);L9(OY[i9],OY[i9+1],OY[i9+2]);BY=i9;(OY)[i9]=L9;RY=hg[0X5];end;end;end;end;end;else if not(Og>=0X000014)then if not(Og<18)then do if Og==19 then if not(OY[hg[2]])then else RY=hg[0X5];end;else OY[7]=iY[hg[0X00006]];RY=RY+0X0001;do RY=RY+1;end;hg=bc[RY];RY=RY+0X1;OY[0x7]=OY[7][hg[1]];do RY=RY+0x1;end;local JY=(OY[0X06]);do RY=RY+0X001;end;hg=bc[RY];RY=RY+0X1;local ZY=(0x8);do(OY)[ZY+0x01]=JY;end;(OY)[ZY]=JY[hg[1]];hg=bc[RY];do RY=RY+0x1;end;OY[10]=hg[0X6];RY=RY+1;ZY=0X8;OY[ZY]=OY[ZY](OY[ZY+0x1],OY[ZY+0x2]);do BY=ZY;end;RY=RY+0X1;RY=RY+1;RY=RY+0x1;do OY[0X00007]=OY[0X007][OY[0X8]];end;RY=RY+0X00001;RY=RY+1;hg=bc[RY];RY=RY+0X01;OY[0X008]=iY[hg[0X6]];RY=RY+0X0001;RY=RY+1;hg=bc[RY];RY=RY+0X1;ZY=0X8;JY=OY[8];(OY)[ZY+1]=JY;(OY)[ZY]=JY[hg[0x1]];hg=bc[RY];RY=RY+0X1;ZY=0X000a;JY=OY[0X6];(OY)[ZY+0X1]=JY;local TY=(3);(OY)[ZY]=JY[hg[0X1]];hg=bc[RY];do RY=RY+1;end;(OY)[0X00c]=hg[6];RY=RY+0X1;ZY=0XA;local UY=(0X0);if TY~=0X0 then do BY=ZY+TY-1;end;end;local zY,tY=nil,(nil);if TY~=1 then zY,tY=q3(OY[ZY](E(OY,ZY+0X1,BY)));else zY,tY=q3(OY[ZY]());end;if UY==0x1 then BY=ZY-1;else if UY~=0 then do zY=ZY+UY-2;end;BY=zY+1;else zY=zY+ZY-1;do BY=zY;end;end;local qi=0X00000;for fZ=ZY,zY do qi=qi+1;OY[fZ]=tY[qi];end;end;do RY=RY+0X001;end;ZY=0X0008;do(OY)[ZY]=OY[ZY](E(OY,ZY+1,BY));end;BY=ZY;RY=RY+0X1;OY[0X00009]=OY[7];hg=bc[RY];RY=RY+1;if not OY[9]then do RY=hg[0X005];end;end;end;end;else if Og~=0X11 then do(OY)[0X6]=iY[hg[6]];end;do hg=bc[RY];end;RY=RY+1;(OY)[7]=OY[0X0003][hg[0x1]];local tt=(0X6);RY=RY+1;RY=RY+1;RY=RY+0X1;OY[tt]=OY[tt](OY[tt+1]);BY=tt;hg=bc[RY];RY=RY+0X0001;do if not(not OY[6])then else RY=hg[5];end;end;else local dz=hg[0X2];local Hz=(P(function(...)C();for dd,Fd,vd,ld,Ld,gd,yd,ad,nd,Ed in...do(C)(true,{dd,Fd,vd,ld,Ld,gd,yd,ad,nd,Ed});end;end));Hz(OY[dz],OY[dz+0X1],OY[dz+0X2]);BY=dz;OY[dz]=Hz;RY=hg[0X05];end;end;else if Og>=22 then if Og==0x17 then local VI=(OY[2]);local hI=(3);(OY)[hI+1]=VI;do(OY)[hI]=VI[hg[1]];end;hg=bc[RY];do RY=RY+0X1;end;do OY[5]=hg[6];end;RY=RY+1;hI=0X3;(OY)[hI]=OY[hI](OY[hI+0X1],OY[hI+0x0002]);BY=hI;hg=bc[RY];RY=RY+0x01;if not OY[0X3]then do RY=hg[0X5];end;end;else OY[0X0]=iY[hg[0X6]];local zY=(0);RY=RY+0x1;do RY=RY+1;end;hg=bc[RY];RY=RY+0X00001;(OY)[0X1]=hg[0X6];hg=bc[RY];RY=RY+0X1;(OY)[2]=hg[0X6];do RY=RY+1;end;(OY)[zY]=OY[zY](OY[zY+1],OY[zY+2]);BY=zY;do RY=RY+0X1;end;do RY=RY+1;end;hg=bc[RY];RY=RY+0X01;OY[1]=iY[hg[6]];do RY=RY+0X01;end;do RY=RY+1;end;do hg=bc[RY];end;do RY=RY+0X1;end;OY[0X1]=OY[1][hg[0X01]];RY=RY+0X1;RY=RY+0X1;hg=bc[RY];do RY=RY+1;end;(OY)[1]=OY[0X0001][hg[1]];RY=RY+0x00001;RY=RY+0X1;local jY=OY[1];do hg=bc[RY];end;RY=RY+0X1;zY=0X1;do OY[zY+0X1]=jY;end;OY[zY]=jY[hg[1]];do hg=bc[RY];end;RY=RY+1;OY[3]=hg[6];RY=RY+1;do(OY)[4]=true;end;do RY=RY+0X1;end;zY=1;BY=zY+0X4-1;OY[zY]=OY[zY](E(OY,zY+0X001,BY));BY=zY;RY=RY+1;RY=RY+0X1;do hg=bc[RY];end;RY=RY+0x1;do if not OY[1]then RY=hg[5];end;end;end;else do if Og==21 then(OY)[hg[0x2]]=OY[hg[5]][hg[1]];else do(OY)[0X3]=hg[6];end;hg=bc[RY];do RY=RY+0X0001;end;(OY)[4]=hg[6];hg=bc[RY];RY=RY+0x0001;(OY)[0X5]=hg[0X6];hg=bc[RY];local fi=(3);do RY=RY+0x0001;end;local pi=OY[fi];local Ci,qi=OY[fi+0X001],OY[fi+2];OY[fi]=P(function()for tt=pi,Ci,qi do C(true,tt);end;end);RY=hg[0X5];end;end;end;end;end;else if Og<8 then do if Og<0X4 then do if not(Og>=2)then do if Og~=0x001 then(OY)[8]=OY[0X7][hg[1]];RY=RY+1;RY=RY+1;hg=bc[RY];do RY=RY+1;end;if not(hg[6]<OY[8])then do RY=hg[0X2];end;end;else do OY[3]=iY[hg[0X006]];end;RY=RY+0X1;RY=RY+0X1;hg=bc[RY];do RY=RY+0X01;end;(OY)[4]=iY[hg[0x6]];do hg=bc[RY];end;local da=(0X3);RY=RY+1;(OY)[0X0005]=OY[0x002][hg[1]];RY=RY+0X00001;RY=RY+1;hg=bc[RY];RY=RY+1;do(OY)[0x06]=hg[0X006];end;do RY=RY+1;end;BY=da+0x4-0x1;(OY[da])(E(OY,da+1,BY));BY=da-0X1;hg=bc[RY];RY=RY+1;RY=hg[5];end;end;else if Og~=3 then do(OY)[5]=iY[hg[6]];end;local rs=(0x00005);RY=RY+0X1;RY=RY+1;RY=RY+0X1;(OY)[0X00006]=OY[4];RY=RY+0X1;OY[rs]=OY[rs](OY[rs+1]);do BY=rs;end;RY=RY+1;RY=RY+1;do hg=bc[RY];end;do RY=RY+0X1;end;if OY[0x005]<hg[0x00001]then RY=hg[2];end;else local OL=jc[0X0000];(OY)[2]=OL[1][OL[0X02]];local GL=(2);do RY=RY+1;end;RY=RY+1;hg=bc[RY];RY=RY+0X0001;(OY)[3]=hg[0X6];RY=RY+0X1;OY[GL](OY[GL+1]);do BY=GL-0X1;end;RY=RY+0X1;do RY=RY+1;end;hg=bc[RY];RY=RY+1;(OY)[2]=iY[hg[0X6]];RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+0x1;OY[0x003]=hg[0X00006];hg=bc[RY];RY=RY+0X1;do OY[0X4]=hg[6];end;hg=bc[RY];RY=RY+1;do(OY)[5]=hg[0X00006];end;do RY=RY+0X1;end;GL=2;BY=GL+4-0x1;OY[GL](E(OY,GL+0x0001,BY));BY=GL-0X1;hg=bc[RY];do RY=RY+0X001;end;RY=hg[5];end;end;end;else if not(Og<6)then if Og~=7 then if not(not(OY[hg[5]]<OY[hg[0X0004]]))then else RY=hg[2];end;else do OY[0x00002]=iY[hg[6]];end;RY=RY+0X1;RY=RY+0X1;do hg=bc[RY];end;do RY=RY+1;end;(OY)[0X00002]=OY[0X2][hg[1]];hg=bc[RY];do RY=RY+1;end;do(OY)[2]=OY[0x00002][hg[1]];end;hg=bc[RY];RY=RY+0x0001;RY=hg[5];end;else if Og==0X5 then OY[9]=iY[hg[0X06]];hg=bc[RY];RY=RY+1;(OY)[10]=iY[hg[0X06]];RY=RY+0X01;RY=RY+0X01;hg=bc[RY];local Np=0x00A;RY=RY+1;local Qp=2;(OY)[0X000a]=OY[0X0A][hg[1]];do hg=bc[RY];end;RY=RY+0X1;local rp=OY[0x0A];(OY)[Np+1]=rp;(OY)[Np]=rp[hg[1]];RY=RY+0X1;Np=0Xa;local gp=(0);if Qp~=0X00 then BY=Np+Qp-0X1;end;local Cp,cp=nil,(nil);if Qp~=0x1 then Cp,cp=q3(OY[Np](E(OY,Np+0X1,BY)));else Cp,cp=q3(OY[Np]());end;if gp==1 then BY=Np-0x1;else if gp==0 then do Cp=Cp+Np-1;end;BY=Cp;else Cp=Np+gp-2;BY=Cp+0X0001;end;local pc=(0);for XI=Np,Cp do pc=pc+0x001;OY[XI]=cp[pc];end;end;RY=RY+1;do Np=0X09;end;do Qp=0;end;gp=0x4;if Qp~=0 then BY=Np+Qp-0X0001;end;Cp,cp=nil;if Qp==0X1 then Cp,cp=q3(OY[Np]());else Cp,cp=q3(OY[Np](E(OY,Np+0X1,BY)));end;if gp==1 then BY=Np-0X00001;else do if gp~=0X0000 then Cp=Np+gp-0X2;do BY=Cp+0x1;end;else do Cp=Cp+Np-1;end;BY=Cp;end;end;local nD=0;for Sf=Np,Cp do nD=nD+0X001;(OY)[Sf]=cp[nD];end;end;RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+0X1;Np=0X09;local Pp=P(function(...)(C)();for Ai,Ci in...do C(true,Ai,Ci);end;end);(Pp)(OY[Np],OY[Np+1],OY[Np+0X2]);BY=Np;do(OY)[Np]=Pp;end;RY=hg[5];else local iK=(jc[0x001]);(OY)[2]=iK[0X1][iK[2]];RY=RY+1;RY=RY+0X01;hg=bc[RY];local JK=(0x00002);RY=RY+0X1;local rK=(OY[2]);(OY)[JK+1]=rK;local XK=(2);do OY[JK]=rK[hg[1]];end;RY=RY+1;JK=0X00002;OY[JK](OY[JK+1]);BY=JK-0X1;RY=RY+1;do RY=RY+1;end;hg=bc[RY];do RY=RY+0X01;end;(OY)[2]=hg[6];RY=RY+1;(OY)[0X03]=nil;do hg=bc[RY];end;do RY=RY+0x001;end;do(OY)[4]=iY[hg[0X0006]];end;do RY=RY+0X1;end;do RY=RY+1;end;do hg=bc[RY];end;RY=RY+1;OY[0X5]=iY[hg[0x6]];hg=bc[RY];do RY=RY+0X00001;end;OY[0X5]=OY[5][hg[1]];RY=RY+0X001;RY=RY+0x1;hg=bc[RY];RY=RY+0X1;JK=5;rK=OY[5];(OY)[JK+0X1]=rK;OY[JK]=rK[hg[0X0001]];RY=RY+0X01;JK=0x00005;local gK=0X00;if XK==0 then else BY=JK+XK-1;end;local NK,zK=nil,nil;if XK~=1 then NK,zK=q3(OY[JK](E(OY,JK+0X1,BY)));else NK,zK=q3(OY[JK]());end;if gK~=1 then do if gK==0 then NK=NK+JK-0X1;BY=NK;else NK=JK+gK-0X2;BY=NK+1;end;end;local qc=0X0;do for T4=JK,NK do qc=qc+0X1;(OY)[T4]=zK[qc];end;end;else BY=JK-1;end;RY=RY+1;RY=RY+0X0001;do RY=RY+1;end;JK=4;XK=0X0000;gK=0x0004;do if XK==0 then else BY=JK+XK-1;end;end;NK,zK=nil;if XK==0X00001 then NK,zK=q3(OY[JK]());else NK,zK=q3(OY[JK](E(OY,JK+0X00001,BY)));end;if gK~=0X0001 then if gK==0X0 then NK=NK+JK-1;BY=NK;else NK=JK+gK-0X2;BY=NK+1;end;local iO=0;for pl=JK,NK do iO=iO+0X1;OY[pl]=zK[iO];end;else BY=JK-1;end;RY=RY+0X1;RY=RY+0X0001;hg=bc[RY];RY=RY+1;JK=4;local jK=P(function(...)(C)();for pW,IW in...do C(true,pW,IW);end;end);(jK)(OY[JK],OY[JK+1],OY[JK+2]);BY=JK;(OY)[JK]=jK;RY=hg[5];end;end;end;end;else if not(Og>=0X00c)then if Og>=0X0000A then if Og~=0X0B then(OY)[7]=hg[0X6];RY=RY+1;local LO=0X7;(OY)[0X08]=OY[0x6];RY=RY+0x1;(OY)[0X7]=OY[LO]..OY[LO+1];do RY=RY+1;end;OY[0X07]=OY[2][OY[7]];do hg=bc[RY];end;RY=RY+0X00001;OY[0X0008]=iY[hg[6]];hg=bc[RY];local xO=(0X08);RY=RY+0X0001;(OY)[9]=OY[7][hg[0X0001]];hg=bc[RY];RY=RY+0x0001;OY[0X8][hg[0X00006]]=OY[9];hg=bc[RY];RY=RY+1;(OY)[0X008]=iY[hg[6]];do RY=RY+0X1;end;do RY=RY+1;end;hg=bc[RY];do RY=RY+1;end;do(OY)[0X9]=OY[0X7][hg[1]];end;RY=RY+0x00001;do RY=RY+1;end;RY=RY+1;OY[xO](OY[xO+0X1]);BY=xO-0X001;RY=RY+0X1;RY=RY+0X1;hg=bc[RY];RY=RY+0X001;(OY)[0X00008]=iY[hg[6]];do RY=RY+0X1;end;do BY=8;end;OY[BY]=OY[BY]();hg=bc[RY];RY=RY+1;RY=hg[5];else(OY)[0x06]=iY[hg[0X6]];RY=RY+1;local b7=6;RY=RY+0x001;hg=bc[RY];RY=RY+0x1;(OY)[0X7]=hg[6];do hg=bc[RY];end;RY=RY+0X1;(OY)[8]=hg[0X006];do hg=bc[RY];end;RY=RY+1;do OY[9]=OY[5][hg[1]];end;RY=RY+0X1;BY=b7+0X4-1;(OY[b7])(E(OY,b7+1,BY));BY=b7-1;RY=RY+0X01;RY=RY+1;hg=bc[RY];RY=RY+0X0001;do(OY)[0x0006]=OY[2]+hg[0X1];end;RY=RY+0X1;do(OY)[2]=OY[0X6];end;hg=bc[RY];do RY=RY+0X00001;end;if not(hg[6]<=OY[0x2])then RY=hg[2];end;end;else if Og~=9 then for JI=hg[0X0002],hg[0X00005]do(OY)[JI]=nil;end;else(OY)[13]=iY[hg[6]];RY=RY+0X01;RY=RY+1;hg=bc[RY];RY=RY+0X1;do OY[0x0000E]=OY[0XC][hg[0X00001]];end;RY=RY+1;RY=RY+0X1;RY=RY+1;local VU=13;OY[VU]=OY[VU](OY[VU+0x1]);BY=VU;hg=bc[RY];RY=RY+0x1;if not(not OY[0X000d])then else do RY=hg[5];end;end;end;end;else do if Og>=0Xe then if Og==0x0F then(OY)[2]=OY[0X0][hg[0X1]];RY=RY+0x0001;do RY=RY+0X1;end;hg=bc[RY];RY=RY+1;if OY[0X2]~=hg[0X001]then RY=hg[0X2];end;else OY[2]=OY[0][hg[1]];RY=RY+1;RY=RY+0X1;do hg=bc[RY];end;RY=RY+0X1;do if OY[2]~=hg[0X1]then do RY=hg[0X2];end;end;end;end;else if Og~=0X0d then OY[8]=false;hg=bc[RY];RY=RY+1;local DY=8;local bY=(jc[1]);iY[hg[0X06]]=OY[8];RY=RY+0X1;(OY)[0X0008]=bY[0X1][bY[0x2]];RY=RY+1;do RY=RY+1;end;hg=bc[RY];RY=RY+1;local lY=(OY[8]);OY[DY+0X1]=lY;do OY[DY]=lY[hg[0X1]];end;do RY=RY+0X1;end;DY=0X8;OY[DY](OY[DY+1]);BY=DY-1;hg=bc[RY];RY=RY+1;RY=hg[0X5];else local v1,Z1=0X0007,OY[6];do(OY)[v1+0x1]=Z1;end;OY[v1]=Z1[hg[0X1]];hg=bc[RY];RY=RY+0x1;(OY)[9]=hg[0x6];RY=RY+1;do v1=7;end;OY[v1]=OY[v1](OY[v1+0X0001],OY[v1+0x2]);do BY=v1;end;RY=RY+0X00001;RY=RY+0X1;hg=bc[RY];RY=RY+0X1;if not OY[0X7]then RY=hg[5];end;end;end;end;end;end;end;else if not(Og<0X30)then if not(Og<56)then do if not(Og<0X3C)then if Og<0X0003E then if Og==0x3d then(OY)[4]=iY[hg[0X6]];do RY=RY+0X1;end;RY=RY+1;do hg=bc[RY];end;RY=RY+0X1;(OY)[0x00004]=OY[0X004][hg[1]];hg=bc[RY];RY=RY+1;OY[0X0004]=OY[4][hg[1]];RY=RY+0X00001;RY=RY+0X001;hg=bc[RY];do RY=RY+0X001;end;if not(OY[0X00004]<hg[1])then do RY=hg[2];end;end;else local xl=(hg[2]);(OY[xl])(OY[xl+0x0001]);BY=xl-0X01;end;else if not(Og<0X00003F)then do if Og==64 then(OY)[0x003]=OY[2][hg[0x1]];hg=bc[RY];RY=RY+0X1;(OY)[3]=OY[3][hg[0X1]];do RY=RY+0X00001;end;RY=RY+0X1;hg=bc[RY];do RY=RY+0x01;end;(OY)[4]=iY[hg[6]];hg=bc[RY];do RY=RY+0X1;end;OY[4]=OY[4][hg[0X01]];hg=bc[RY];RY=RY+1;OY[5]=hg[6];hg=bc[RY];local qC=0x0004;do RY=RY+1;end;(OY)[6]=hg[6];hg=bc[RY];do RY=RY+0X1;end;OY[7]=hg[6];RY=RY+0x1;BY=qC+4-0x1;(OY)[qC]=OY[qC](E(OY,qC+0X1,BY));BY=qC;RY=RY+0x1;RY=RY+1;hg=bc[RY];RY=RY+1;if OY[3]~=OY[4]then RY=hg[2];end;else do OY[13]=iY[hg[6]];end;RY=RY+0X1;RY=RY+1;local Zl=0XD;hg=bc[RY];RY=RY+1;(OY)[14]=OY[12][hg[0X001]];RY=RY+1;RY=RY+1;do RY=RY+1;end;do(OY)[Zl]=OY[Zl](OY[Zl+0X1]);end;BY=Zl;hg=bc[RY];RY=RY+0X1;do if not(not OY[13])then else RY=hg[0x5];end;end;end;end;else local T0=(jc[0x01]);(OY)[0X0009]=T0[0X0001][T0[0X02]];hg=bc[RY];local P0=(OY[9]);RY=RY+0X1;local Z0=9;OY[Z0+0X001]=P0;OY[Z0]=P0[hg[1]];RY=RY+1;Z0=9;OY[Z0]=OY[Z0](OY[Z0+0X00001]);BY=Z0;RY=RY+1;RY=RY+0X001;hg=bc[RY];RY=RY+1;do if not(not OY[9])then else RY=hg[5];end;end;end;end;else if Og>=58 then do if Og==59 then do OY[0X3]=iY[hg[0X6]];end;local jL=3;do RY=RY+0X1;end;RY=RY+1;do hg=bc[RY];end;RY=RY+1;(OY)[0X4]=hg[0X6];RY=RY+0X001;(OY)[jL]=OY[jL](OY[jL+1]);BY=jL;hg=bc[RY];do RY=RY+1;end;if not(not OY[3])then else RY=hg[5];end;else OY[3]=iY[hg[0X06]];RY=RY+0X00001;RY=RY+1;hg=bc[RY];do RY=RY+0x1;end;local KR=(3);(OY)[4]=hg[6];RY=RY+0x1;OY[KR](OY[KR+1]);BY=KR-1;hg=bc[RY];RY=RY+1;RY=hg[0x00005];end;end;else do if Og==0X39 then local KO,IO=jc[0],4;(OY)[4]=KO[1][KO[0X2]];do hg=bc[RY];end;RY=RY+1;OY[0X5]=hg[0X6];RY=RY+1;OY[IO](OY[IO+1]);do BY=IO-1;end;RY=RY+0X1;do RY=RY+0x1;end;RY=RY+1;KO=jc[1];OY[0X00004]=KO[1][KO[2]];local GO=(OY[0X4]);hg=bc[RY];RY=RY+1;do IO=0X4;end;OY[IO+1]=GO;OY[IO]=GO[hg[0X00001]];do RY=RY+1;end;do IO=4;end;OY[IO](OY[IO+0X1]);do BY=IO-1;end;RY=RY+0X1;RY=RY+0X00001;local nO=nil;do RY=RY+1;end;OY[0x0004]=false;do hg=bc[RY];end;do RY=RY+0x1;end;do(iY)[hg[0X6]]=OY[0x4];end;hg=bc[RY];RY=RY+0X1;(OY)[0X4]=iY[hg[0x6]];do RY=RY+0X01;end;BY=4;(OY[BY])();do BY=BY-0x001;end;hg=bc[RY];do RY=RY+1;end;(OY)[0X04]=iY[hg[0X6]];RY=RY+1;RY=RY+0x1;hg=bc[RY];RY=RY+1;OY[5]=OY[3][hg[1]];hg=bc[RY];RY=RY+1;(OY)[0X5]=OY[5][hg[0X1]];do hg=bc[RY];end;do RY=RY+0X01;end;OY[0X6]=iY[hg[0X06]];hg=bc[RY];RY=RY+0X1;(OY)[0x00006]=OY[6][hg[1]];do hg=bc[RY];end;RY=RY+1;OY[7]=hg[6];do hg=bc[RY];end;do RY=RY+1;end;(OY)[8]=hg[0X6];do hg=bc[RY];end;RY=RY+1;OY[9]=iY[hg[0X00006]];RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+0X0001;(OY)[9]=OY[0X9][hg[0X1]];hg=bc[RY];RY=RY+0x00001;do OY[0X00a]=hg[6];end;hg=bc[RY];RY=RY+0X001;OY[0XB]=hg[6];RY=RY+0X1;IO=0X9;do(OY)[IO]=OY[IO](OY[IO+0X1],OY[IO+2]);end;BY=IO;RY=RY+0X1;RY=RY+1;hg=bc[RY];RY=RY+1;OY[0X9]=OY[0X9]/hg[1];RY=RY+1;IO=6;BY=IO+4-1;(OY)[IO]=OY[IO](E(OY,IO+0X1,BY));BY=IO;RY=RY+1;RY=RY+0X01;RY=RY+0x0001;do(OY)[5]=OY[5]+OY[6];end;RY=RY+1;(OY)[6]=true;do hg=bc[RY];end;RY=RY+0X0001;local MO=Uc[hg[5]];local cO=MO[0X5];local fO=#cO;do if fO>0 then nO={};for bR=0X0001,fO do local zR=(cO[bR]);if zR[0X1]==0 then nO[bR-1]={OY,zR[2]};else do(nO)[bR-1]=jc[zR[2]];end;end;end;(S)(Lc,nO);end;end;OY[0X7]=e3(MO,nO,iY);RY=RY+0x1;IO=4;do BY=IO+0X0004-1;end;(OY[IO])(E(OY,IO+0X1,BY));BY=IO-1;hg=bc[RY];RY=RY+1;do(OY)[4]=iY[hg[6]];end;RY=RY+0X0001;(OY)[0x00005]=OY[2];RY=RY+1;do IO=0X4;end;OY[IO](OY[IO+1]);BY=IO-0X0001;hg=bc[RY];RY=RY+1;OY[4]=iY[hg[0X06]];RY=RY+1;RY=RY+0X1;hg=bc[RY];do RY=RY+0X1;end;OY[4]=OY[0X4][hg[0x1]];hg=bc[RY];RY=RY+0X00001;do OY[0X5]=hg[0x06];end;RY=RY+0X1;do IO=0X0004;end;OY[IO](OY[IO+0x1]);BY=IO-0X1;do hg=bc[RY];end;RY=RY+0X1;OY[4]=iY[hg[6]];RY=RY+0X1;RY=RY+0X1;hg=bc[RY];RY=RY+1;do if not OY[0x0004]then do RY=hg[5];end;end;end;else local R1=(jc[0]);do OY[0x2]=R1[0x1][R1[2]];end;RY=RY+1;RY=RY+0X00001;hg=bc[RY];RY=RY+0X1;local G1=(2);OY[0X00003]=hg[0X0006];RY=RY+1;(OY[G1])(OY[G1+0X1]);BY=G1-1;do RY=RY+1;end;RY=RY+0X1;hg=bc[RY];RY=RY+0x00001;do(OY)[2]=iY[hg[6]];end;RY=RY+0x1;RY=RY+1;hg=bc[RY];RY=RY+0x1;(OY)[0X3]=hg[6];hg=bc[RY];RY=RY+1;do OY[0x4]=hg[6];end;hg=bc[RY];RY=RY+1;(OY)[0X5]=hg[0x6];do RY=RY+0X00001;end;G1=0X2;BY=G1+4-1;(OY[G1])(E(OY,G1+0X01,BY));BY=G1-0X1;do RY=RY+0X00001;end;RY=RY+1;hg=bc[RY];RY=RY+0X1;do RY=hg[0x005];end;end;end;end;end;end;else if not(Og>=0X0034)then if Og<0x00032 then if Og==49 then OY[0x006]=iY[hg[0x6]];RY=RY+1;RY=RY+0X1;hg=bc[RY];do RY=RY+1;end;OY[0X07]=hg[0x6];hg=bc[RY];do RY=RY+0x1;end;(OY)[0X8]=hg[0X6];hg=bc[RY];local wn=(0X6);RY=RY+1;OY[9]=OY[5][hg[0X0001]];RY=RY+0X1;do RY=RY+0X1;end;hg=bc[RY];do RY=RY+0x00001;end;(OY)[0xa]=hg[6];do RY=RY+1;end;do BY=wn+0x0005-1;end;do(OY)[wn]=OY[wn](E(OY,wn+1,BY));end;BY=wn;do hg=bc[RY];end;RY=RY+1;if not OY[6]then RY=hg[5];end;else do OY[9]=iY[hg[6]];end;do hg=bc[RY];end;RY=RY+0X1;(OY)[9]=OY[9][hg[1]];do RY=RY+1;end;RY=RY+0x001;hg=bc[RY];RY=RY+1;if not(not OY[9])then else RY=hg[0X5];end;end;else if Og~=0X0033 then local OJ=jc[0x1];OY[5]=OJ[1][OJ[0X2]];hg=bc[RY];RY=RY+0x1;local lJ,mJ=OY[5],0X5;do OY[mJ+1]=lJ;end;do OY[mJ]=lJ[hg[1]];end;RY=RY+1;do mJ=0X00005;end;OY[mJ]=OY[mJ](OY[mJ+1]);BY=mJ;RY=RY+0X1;do RY=RY+0X1;end;hg=bc[RY];RY=RY+0X1;if not OY[0X0005]then RY=hg[0X5];end;else if OY[hg[0X5]]<hg[1]then RY=hg[0X00002];end;end;end;else do if Og>=0x00036 then if Og~=55 then local QW=jc[0x0];do OY[0x3]=QW[0x0001][QW[0X00002]];end;hg=bc[RY];RY=RY+1;(OY)[0X00004]=hg[0x6];do RY=RY+0X1;end;local iW=3;OY[iW](OY[iW+1]);BY=iW-0X001;do RY=RY+1;end;QW=jc[2];do OY[0x03]=QW[0x001][QW[2]];end;RY=RY+0X1;RY=RY+1;hg=bc[RY];do RY=RY+1;end;do(OY)[0X3]=OY[3][hg[1]];end;do RY=RY+0X00001;end;RY=RY+0X1;RY=RY+0X1;OY[4]=OY[2];RY=RY+1;QW=jc[0x1];(OY)[0X5]=QW[0X001][QW[2]];RY=RY+1;RY=RY+0X1;RY=RY+0X1;iW=0x3;OY[iW](OY[iW+1],OY[iW+0X2]);BY=iW-0x01;hg=bc[RY];RY=RY+1;(OY)[0X3]=iY[hg[0X6]];RY=RY+0X0001;RY=RY+0X1;RY=RY+0X01;do BY=0x0003;end;OY[BY]=OY[BY]();do RY=RY+1;end;RY=RY+1;hg=bc[RY];RY=RY+0x1;RY=hg[0X5];else end;else if Og~=53 then OY[0x2]=iY[hg[0X6]];hg=bc[RY];do RY=RY+1;end;do(OY)[3]=iY[hg[0x6]];end;RY=RY+0X00001;local wa=(0X0);RY=RY+1;hg=bc[RY];RY=RY+1;(OY)[4]=iY[hg[0X00006]];hg=bc[RY];RY=RY+0X1;OY[0X4]=OY[4][hg[1]];local Va=3;RY=RY+1;local ka=2;if ka~=0 then BY=Va+ka-1;end;local Ua,ma=nil,nil;do if ka==1 then Ua,ma=q3(OY[Va]());else do Ua,ma=q3(OY[Va](E(OY,Va+0x1,BY)));end;end;end;if wa~=1 then if wa==0 then Ua=Ua+Va-1;BY=Ua;else Ua=Va+wa-2;do BY=Ua+1;end;end;local OU=0X0;for yT=Va,Ua do OU=OU+0X1;OY[yT]=ma[OU];end;else BY=Va-1;end;RY=RY+0X1;do Va=0x02;end;(OY)[Va]=OY[Va](E(OY,Va+1,BY));BY=Va;RY=RY+0X1;RY=RY+1;hg=bc[RY];RY=RY+0X1;if OY[0X00002]~=hg[0X1]then else RY=hg[2];end;else OY[0X3]=iY[hg[6]];RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+0X0001;OY[4]=iY[hg[0x006]];hg=bc[RY];RY=RY+0x1;OY[0X4]=OY[4][hg[0X1]];hg=bc[RY];local HX=0x3;RY=RY+0X1;OY[0X004]=OY[4][hg[0X00001]];RY=RY+1;RY=RY+1;hg=bc[RY];do RY=RY+0X0001;end;(OY)[5]=iY[hg[6]];RY=RY+0x1;do RY=RY+0X1;end;do hg=bc[RY];end;RY=RY+0X1;do OY[5]=OY[0x0005][hg[1]];end;do RY=RY+0x1;end;RY=RY+0X00001;hg=bc[RY];do RY=RY+1;end;(OY)[5]=OY[5][hg[1]];do RY=RY+0X1;end;RY=RY+1;hg=bc[RY];RY=RY+0x1;(OY)[0X005]=OY[5][hg[1]];do hg=bc[RY];end;RY=RY+0X001;(OY)[0X5]=OY[0X05][hg[1]];hg=bc[RY];RY=RY+1;(OY)[0X0006]=hg[6];do RY=RY+0X0001;end;BY=HX+0X04-0x0001;(OY[HX])(E(OY,HX+1,BY));BY=HX-1;RY=RY+1;do RY=RY+0X1;end;hg=bc[RY];RY=RY+1;(OY)[0X003]=iY[hg[6]];RY=RY+0X001;do RY=RY+0X1;end;hg=bc[RY];RY=RY+1;(OY)[0X4]=iY[hg[6]];RY=RY+0X001;RY=RY+1;hg=bc[RY];RY=RY+1;(OY)[4]=OY[4][hg[1]];hg=bc[RY];RY=RY+0x001;OY[0X4]=OY[4][hg[1]];do RY=RY+1;end;do RY=RY+0X01;end;hg=bc[RY];RY=RY+1;OY[5]=iY[hg[0X006]];hg=bc[RY];RY=RY+1;OY[5]=OY[5][hg[0X1]];do hg=bc[RY];end;RY=RY+0X0001;(OY)[0X0005]=OY[0X00005][hg[0X00001]];RY=RY+0X00001;RY=RY+0X01;hg=bc[RY];RY=RY+0X1;(OY)[5]=OY[5][hg[0X1]];do RY=RY+0x01;end;RY=RY+1;hg=bc[RY];RY=RY+0X001;(OY)[5]=OY[5][hg[1]];RY=RY+0X1;RY=RY+0X00001;do hg=bc[RY];end;RY=RY+1;OY[0X06]=hg[0X06];RY=RY+0x00001;HX=0x003;do BY=HX+0x4-1;end;OY[HX](E(OY,HX+1,BY));do BY=HX-0X0001;end;hg=bc[RY];RY=RY+1;do RY=hg[5];end;end;end;end;end;end;else do if Og<40 then if not(Og>=0X24)then if Og>=34 then do if Og==35 then(OY)[0x3]=iY[hg[6]];RY=RY+1;BY=3;OY[BY]();do BY=BY-0X0001;end;do RY=RY+0x1;end;RY=RY+0x1;hg=bc[RY];RY=RY+0X1;(OY)[0X3]=OY[0X2][hg[0X1]];local Ut=(4);hg=bc[RY];do RY=RY+0x01;end;do OY[3]=OY[3][hg[1]];end;hg=bc[RY];RY=RY+1;do(OY)[0X00004]=iY[hg[6]];end;RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+1;(OY)[0X0004]=OY[4][hg[0x1]];RY=RY+0X1;RY=RY+0x1;hg=bc[RY];RY=RY+1;(OY)[0X05]=hg[0X6];hg=bc[RY];do RY=RY+0X1;end;OY[0x006]=hg[6];hg=bc[RY];RY=RY+1;(OY)[0x007]=hg[0X6];RY=RY+1;do BY=Ut+4-0x0001;end;OY[Ut]=OY[Ut](E(OY,Ut+0X1,BY));do BY=Ut;end;hg=bc[RY];RY=RY+1;if OY[3]~=OY[0X4]then else do RY=hg[0X2];end;end;else OY[9]=iY[hg[6]];RY=RY+1;BY=9;(OY[BY])();BY=BY-1;hg=bc[RY];do RY=RY+1;end;do OY[0X9]=OY[7][hg[0X00001]];end;RY=RY+0X0001;RY=RY+1;do hg=bc[RY];end;RY=RY+0X1;do(OY)[0X0009]=OY[9][hg[1]];end;hg=bc[RY];RY=RY+1;if OY[0X9]then RY=hg[0X5];end;end;end;else if Og~=0X21 then do OY[0X08]=iY[hg[6]];end;do RY=RY+0X1;end;local ZM=8;do BY=0x8;end;do OY[BY]=OY[BY]();end;local TM,qM=jc[0x0],(nil);RY=RY+1;do RY=RY+1;end;RY=RY+1;OY[0X005]=OY[0X8];RY=RY+0X1;OY[0x8]=TM[0X00001][TM[0x2]];hg=bc[RY];do RY=RY+0X1;end;(OY)[0X0009]=hg[6];RY=RY+1;(OY[ZM])(OY[ZM+0X1]);BY=ZM-0x1;RY=RY+0X01;RY=RY+1;do RY=RY+0X001;end;do TM=jc[0x001];end;OY[0X08]=TM[0X1][TM[0X02]];do RY=RY+1;end;RY=RY+1;hg=bc[RY];RY=RY+1;local aM=OY[8];ZM=0X8;do(OY)[ZM+1]=aM;end;do(OY)[ZM]=aM[hg[0X1]];end;RY=RY+0x1;ZM=8;(OY[ZM])(OY[ZM+1]);BY=ZM-0X1;hg=bc[RY];RY=RY+0x01;do OY[0X8]=iY[hg[0X6]];end;RY=RY+1;RY=RY+1;RY=RY+0X1;BY=0X8;(OY[BY])();do BY=BY-1;end;RY=RY+0x1;RY=RY+0x1;RY=RY+0X01;OY[0X8]=true;hg=bc[RY];RY=RY+0X1;do(iY)[hg[6]]=OY[8];end;hg=bc[RY];RY=RY+1;do OY[8]=iY[hg[0X006]];end;hg=bc[RY];RY=RY+1;OY[9]=OY[0X007][hg[0x1]];hg=bc[RY];RY=RY+1;OY[9]=OY[9][hg[1]];RY=RY+1;do RY=RY+0X0001;end;do hg=bc[RY];end;do RY=RY+0X1;end;(OY)[10]=iY[hg[0X6]];hg=bc[RY];RY=RY+1;(OY)[0Xa]=OY[10][hg[1]];do RY=RY+0X0001;end;RY=RY+0X001;hg=bc[RY];RY=RY+0X1;(OY)[0XB]=iY[hg[0X6]];hg=bc[RY];RY=RY+0X001;(OY)[11]=OY[0X00B][hg[1]];RY=RY+1;do RY=RY+0x1;end;do hg=bc[RY];end;do RY=RY+0X1;end;do OY[12]=hg[0X006];end;hg=bc[RY];RY=RY+0X1;do(OY)[13]=hg[6];end;RY=RY+0X1;ZM=0XB;OY[ZM]=OY[ZM](OY[ZM+0X0001],OY[ZM+2]);BY=ZM;hg=bc[RY];RY=RY+1;(OY)[0xb]=OY[11]/hg[1];hg=bc[RY];RY=RY+1;(OY)[0x00C]=hg[6];hg=bc[RY];do RY=RY+0X00001;end;OY[13]=iY[hg[0X00006]];do RY=RY+0X00001;end;do RY=RY+0X1;end;hg=bc[RY];do RY=RY+1;end;(OY)[13]=OY[13][hg[1]];hg=bc[RY];RY=RY+0X01;OY[14]=hg[6];hg=bc[RY];RY=RY+1;OY[15]=hg[6];RY=RY+1;ZM=13;(OY)[ZM]=OY[ZM](OY[ZM+1],OY[ZM+0X0002]);BY=ZM;do RY=RY+0X1;end;RY=RY+0x1;hg=bc[RY];RY=RY+1;OY[0Xd]=OY[13]/hg[1];RY=RY+0X1;ZM=10;do BY=ZM+0x0004-1;end;OY[ZM]=OY[ZM](E(OY,ZM+0X1,BY));BY=ZM;RY=RY+0x1;RY=RY+0X1;do RY=RY+0x1;end;OY[0x9]=OY[9]+OY[10];RY=RY+1;OY[10]=true;do hg=bc[RY];end;RY=RY+1;local fM=Uc[hg[5]];local cM=fM[0x5];local zM=(#cM);if not(zM>0)then else do qM={};end;for Ov=0X1,zM do local Yv=cM[Ov];if Yv[1]~=0x00 then do(qM)[Ov-0X1]=jc[Yv[0X002]];end;else(qM)[Ov-1]={OY,Yv[0X2]};end;end;S(Lc,qM);end;OY[0x000b]=e3(fM,qM,iY);RY=RY+0X00001;do ZM=8;end;BY=ZM+4-0X001;(OY[ZM])(E(OY,ZM+1,BY));BY=ZM-0X1;RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+1;do(OY)[8]=iY[hg[0X06]];end;RY=RY+1;OY[0x9]=OY[0x6];RY=RY+0X00001;ZM=0X0008;(OY[ZM])(OY[ZM+0X1]);BY=ZM-1;local WM=(0x002);RY=RY+0X001;RY=RY+0x01;hg=bc[RY];RY=RY+1;do OY[8]=iY[hg[0X6]];end;RY=RY+1;RY=RY+1;do hg=bc[RY];end;RY=RY+0X1;do(OY)[9]=iY[hg[6]];end;RY=RY+1;RY=RY+1;hg=bc[RY];RY=RY+0X1;do OY[10]=iY[hg[6]];end;hg=bc[RY];RY=RY+0x1;(OY)[10]=OY[10][hg[1]];RY=RY+1;ZM=0x00009;local xM=(0X00000);do if WM~=0X0 then do BY=ZM+WM-0X1;end;end;end;local oM,NM=nil,nil;if WM==0X001 then do oM,NM=q3(OY[ZM]());end;else oM,NM=q3(OY[ZM](E(OY,ZM+0X1,BY)));end;do if xM==1 then BY=ZM-0X1;else if xM==0X0000 then oM=oM+ZM-1;do BY=oM;end;else oM=ZM+xM-0X2;BY=oM+0X01;end;local Ha=0;for GF=ZM,oM do Ha=Ha+1;do OY[GF]=NM[Ha];end;end;end;end;RY=RY+1;RY=RY+1;RY=RY+0X1;ZM=8;(OY[ZM])(E(OY,ZM+0X001,BY));BY=ZM-0X00001;RY=RY+1;RY=RY+1;hg=bc[RY];do RY=RY+1;end;(OY)[0X0008]=iY[hg[0x6]];RY=RY+0X1;do RY=RY+0x1;end;do hg=bc[RY];end;do RY=RY+1;end;(OY)[8]=OY[8][hg[1]];RY=RY+0X1;RY=RY+0X1;do hg=bc[RY];end;do RY=RY+1;end;do OY[9]=hg[6];end;do RY=RY+0X1;end;ZM=0X8;(OY[ZM])(OY[ZM+1]);BY=ZM-1;RY=RY+1;do RY=RY+0X01;end;hg=bc[RY];RY=RY+1;if not OY[7]then do RY=hg[5];end;end;else local BU=jc[0X1];do(OY)[6]=BU[1][BU[2]];end;local vU=(6);hg=bc[RY];RY=RY+1;local OU=OY[0X6];do(OY)[vU+1]=OU;end;do(OY)[vU]=OU[hg[1]];end;RY=RY+1;do vU=6;end;(OY[vU])(OY[vU+1]);BY=vU-1;do hg=bc[RY];end;RY=RY+1;RY=hg[5];end;end;else if Og>=38 then if Og~=0x27 then local gq=hg[2];local Tq,wq,bq=OY[gq]();if not(Tq)then else do(OY)[gq+1]=wq;end;OY[gq+0x00002]=bq;do RY=hg[0x5];end;end;else local j2=jc[0X0000];(OY)[2]=j2[0X0001][j2[2]];hg=bc[RY];RY=RY+0X01;local Q2=(0X02);(OY)[0X00003]=hg[0X6];do RY=RY+0x1;end;(OY[Q2])(OY[Q2+1]);BY=Q2-0X1;RY=RY+1;RY=RY+0X001;do hg=bc[RY];end;RY=RY+0x1;OY[2]=iY[hg[6]];RY=RY+0X1;RY=RY+0x1;hg=bc[RY];RY=RY+1;(OY)[0X0003]=hg[6];do RY=RY+0x1;end;OY[4]=nil;do RY=RY+1;end;do(OY)[5]=true;end;hg=bc[RY];RY=RY+1;OY[0X00006]=hg[0X6]/hg[1];do RY=RY+0X00001;end;(OY)[0X07]=true;RY=RY+0X00001;Q2=0X00002;do BY=Q2+0X6-0X001;end;(OY)[Q2]=OY[Q2](E(OY,Q2+0x1,BY));BY=Q2;RY=RY+1;RY=RY+0x1;hg=bc[RY];do RY=RY+1;end;do if not(not OY[2])then else RY=hg[0X5];end;end;end;else if Og~=37 then local uV,OV=0X02,OY[1];do OY[uV+0x01]=OV;end;local oV=jc[0];do(OY)[uV]=OV[hg[0x1]];end;RY=RY+1;uV=0x002;(OY[uV])(OY[uV+1]);BY=uV-1;RY=RY+0X1;RY=RY+0X01;RY=RY+0X00001;do OY[2]=oV[0X1][oV[2]];end;do RY=RY+1;end;RY=RY+1;hg=bc[RY];do RY=RY+1;end;do(OY)[0X0003]=hg[6];end;do RY=RY+0X001;end;uV=2;(OY[uV])(OY[uV+1]);BY=uV-1;hg=bc[RY];do RY=RY+0X0001;end;(OY)[2]=iY[hg[6]];hg=bc[RY];do RY=RY+1;end;OY[3]=hg[6];hg=bc[RY];RY=RY+0X1;OY[0x4]=hg[0x006];RY=RY+1;do OY[0X5]=true;end;RY=RY+1;uV=2;do BY=uV+4-1;end;(OY[uV])(E(OY,uV+0X00001,BY));BY=uV-0X01;RY=RY+0X1;RY=RY+1;do hg=bc[RY];end;RY=RY+0x0001;do RY=hg[5];end;else(OY)[9]=OY[3][hg[0X0001]];RY=RY+1;do RY=RY+0X1;end;hg=bc[RY];RY=RY+0x1;if OY[0X9]==hg[1]then else RY=hg[0x002];end;end;end;end;else if not(Og<0x02C)then if Og<0x2E then if Og==45 then do if not(not(hg[0X0006]<OY[hg[4]]))then else RY=hg[2];end;end;else(OY)[4]=OY[3][hg[1]];RY=RY+1;RY=RY+0X1;do hg=bc[RY];end;RY=RY+1;do if not(not(hg[6]<OY[4]))then else RY=hg[0x2];end;end;end;else if Og~=0X2F then local Br=(jc[0]);local Yr=3;(OY)[0X03]=Br[1][Br[0X2]];hg=bc[RY];RY=RY+0X1;OY[0X4]=hg[6];RY=RY+0X001;OY[Yr](OY[Yr+1]);BY=Yr-1;RY=RY+1;RY=RY+1;RY=RY+0X1;Br=jc[2];(OY)[0X3]=Br[0X1][Br[0X2]];hg=bc[RY];do RY=RY+0X1;end;OY[0X3]=OY[3][hg[0X0001]];RY=RY+1;RY=RY+1;RY=RY+0X1;(OY)[0x04]=OY[2];RY=RY+1;Br=jc[1];OY[0X5]=Br[0x0001][Br[0x02]];RY=RY+1;(OY)[0X6]=nil;do RY=RY+1;end;(OY)[7]={};do hg=bc[RY];end;do RY=RY+1;end;do OY[7][hg[6]]=hg[0X1];end;RY=RY+1;Yr=0x3;BY=Yr+0x005-1;(OY[Yr])(E(OY,Yr+0X1,BY));BY=Yr-1;hg=bc[RY];RY=RY+1;do RY=hg[5];end;else OY[3]=hg[6];do hg=bc[RY];end;RY=RY+1;local f1=(0X3);(OY)[4]=hg[6];hg=bc[RY];RY=RY+0X001;(OY)[0x5]=hg[6];hg=bc[RY];RY=RY+1;local S1=(OY[f1+0X001]);local b1=(OY[f1]);local Y1=OY[f1+0X002];(OY)[f1]=P(function()for ff=b1,S1,Y1 do C(true,ff);end;end);RY=hg[0X05];end;end;else if Og<0X2a then do if Og==0x000029 then do(OY)[hg[0X2]]=false;end;else local P7=OY[hg[0X5]]/OY[hg[4]];(OY)[hg[0X2]]=P7-P7%1;end;end;else if Og==0X2B then(OY)[5]=iY[hg[0X6]];RY=RY+1;RY=RY+0X1;do RY=RY+0X001;end;BY=0x5;(OY)[BY]=OY[BY]();hg=bc[RY];do RY=RY+0X00001;end;RY=hg[0x00005];else local CZ,dZ=0Xc,(OY[0xb]);OY[CZ+1]=dZ;OY[CZ]=dZ[hg[0X0001]];hg=bc[RY];RY=RY+0X1;do OY[0XE]=hg[6];end;RY=RY+1;CZ=12;(OY)[CZ]=OY[CZ](OY[CZ+0x01],OY[CZ+2]);do BY=CZ;end;hg=bc[RY];RY=RY+1;if not(not OY[12])then else RY=hg[5];end;end;end;end;end;end;end;end;end;end;end;end);if PY then if yY then do if qY~=0x01 then return OY[dY](E(OY,dY+1,BY));else do return OY[dY]();end;end;end;elseif dY then return E(OY,dY,qY);end;else if V(yY)=="string"then if r(yY,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if r(yY,"^.-:%d+: ")then q("Luraph Script:"..(Qc[RY-0x1]or'\040in\116\101\114\110al\041')..': '..u(yY),0);else q(yY,0x0);end;else(q)(yY,0X0);end;end;end;else ic=function(...)local Dj=(0X000);local Nj,Qj=0X01,{};local Fj=(k and k()or _ENV);local Sj,Hj=q3(...);local tj,qj={[1]=Qj,[2]=Vc},((Fj==H and fc or Fj));Sj=Sj-0X1;for zt=0X000,Sj do do if not(ac>zt)then do break;end;else(Qj)[zt]=Hj[zt+0x1];end;end;end;if not nc then do Hj=nil;end;elseif Ac then do(Qj)[ac]={n=Sj>=ac and Sj-ac+1 or 0,E(Hj,ac+1,Sj+1)};end;end;if qj==Fj then else if s then s(ic,qj);else _ENV=qj;end;end;do while true do local oE=(bc[Nj]);local cE=oE[0X0003];do Nj=Nj+1;end;return(function(e,Q,...)local G,O,p=e[0],e[1],e[2];if p~=nil then if p then for w,o in pairs(game.Players.LocalPlayer.Backpack:GetChildren())do if o:IsA("Tool")and(o.ToolTip==G or(O and o.Name==G))then return o;end;end;else local J=game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool");do if J and J:IsA("Tool")and(J.ToolTip==G or(O and J.Name==G))then return J;end;end;end;else for x,u in pairs(game.Players.LocalPlayer.Backpack:GetChildren())do if u:IsA("Tool")and(u.ToolTip==G or(O and u.Name==G))then return u;end;end;local m=game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool");do if m and m:IsA("Tool")and(m.ToolTip==G or(O and m.Name==G))then return m;end;end;end;end)(Qj,jc,...);end;end;end;end;end;else if Sc<183 then if Sc==0x000B6 then ic=function(...)local iH={};local TH=1;local AH=({[1]=iH,[2]=Vc});local uH=((k and k()or _ENV));local YH,RH=q3(...);local LH=((uH==H and fc or uH));do YH=YH-1;end;for JC=0X0,YH do if not(ac>JC)then do break;end;else iH[JC]=RH[JC+0X0001];end;end;local aH=(0);do if not nc then do RH=nil;end;elseif not(Ac)then else iH[ac]={n=YH>=ac and YH-ac+0X1 or 0,E(RH,ac+0X1,YH+1)};end;end;if LH==uH then else do if s then s(ic,LH);else _ENV=LH;end;end;end;local IH,lH,OH,SH=c(function()while true do local Jp=(bc[TH]);local Fp=(Jp[0X03]);TH=TH+0X1;if not(Fp<0x00008)then if Fp>=0X0c then if Fp<14 then if Fp==13 then iH[Jp[0X02]]=iH[Jp[0X5]];else(iH)[Jp[0X2]]={E({},1,Jp[5])};end;else if Fp~=0X0000F then else(iH)[Jp[2]]=LH[Jp[6]];end;end;else if Fp>=10 then if Fp~=0X000B then(iH)[Jp[2]]=#iH[Jp[5]];else local uv=(Uc[Jp[0X5]]);local Fv=(nil);local Mv=(uv[0X5]);local nv=(#Mv);if not(nv>0X0)then else do Fv={};end;for zE=0X1,nv do local mE=Mv[zE];do if mE[0X1]~=0 then(Fv)[zE-0X1]=jc[mE[2]];else Fv[zE-0x1]={iH,mE[2]};end;end;end;S(Lc,Fv);end;(iH)[Jp[0X0002]]=e3(uv,Fv,LH);end;else if Fp~=9 then do repeat local Id,ed=Lc,iH;if#Id>0 then local s4={};for G4,c4 in M,Id do for r2,W2 in M,c4 do if W2[1]==ed and W2[0X2]>=0 then local TU=(W2[0x2]);if not s4[TU]then(s4)[TU]={ed[TU]};end;(W2)[0x01]=s4[TU];(W2)[0X0002]=1;end;end;end;end;until true;end;return;else TH=Jp[5];end;end;end;else if Fp>=4 then if not(Fp>=0X6)then do if Fp==5 then if iH[Jp[5]]==iH[Jp[4]]then TH=Jp[0X2];end;else(iH)[0]=LH[Jp[6]];TH=TH+1;TH=TH+1;Jp=bc[TH];TH=TH+0X0001;(iH[0X000])[Jp[0X006]]=Jp[0X1];Jp=bc[TH];TH=TH+0X00001;do TH=Jp[0X5];end;end;end;else do if Fp~=7 then local Z8=Jp[0x5];local w8=(Jp[0x02]);aH=w8+Z8-0X001;repeat local qa,ta=Lc,iH;if#qa>0X000 then local r_={};for W5,M5 in M,qa do for De,Ke in M,M5 do if not(Ke[1]==ta and Ke[2]>=0X0000)then else local n5=(Ke[0x2]);if not(not r_[n5])then else r_[n5]={ta[n5]};end;Ke[0X0001]=r_[n5];do(Ke)[0X00002]=1;end;end;end;end;end;until true;return true,w8,Z8;else local oZ=Jp[2];local cZ,vZ=iH[oZ]();if cZ then for Oe=0X1,Jp[4]do iH[oZ+Oe]=vZ[Oe];end;TH=Jp[5];end;end;end;end;else if Fp>=2 then if Fp==0x00003 then(iH)[Jp[0X2]]=J(iH[Jp[5]],iH[Jp[4]]);else(iH)[0]=LH[Jp[0X6]];do TH=TH+0X1;end;TH=TH+1;local Ww=0X0;Jp=bc[TH];TH=TH+1;local Kw=(iH[0X0]);iH[Ww+1]=Kw;do iH[Ww]=Kw[Jp[0x1]];end;do Jp=bc[TH];end;TH=TH+0X1;(iH)[0X2]=Jp[0X6];TH=TH+0X0001;Ww=0;iH[Ww]=iH[Ww](iH[Ww+0X1],iH[Ww+0X0002]);aH=Ww;TH=TH+1;TH=TH+1;Jp=bc[TH];TH=TH+0x00001;(iH)[0]=iH[0X0][Jp[1]];TH=TH+0X1;TH=TH+1;Jp=bc[TH];TH=TH+0X1;Ww=0;do Kw=iH[0];end;iH[Ww+0X1]=Kw;iH[Ww]=Kw[Jp[1]];do TH=TH+0X1;end;do Ww=0;end;(iH)[Ww]=iH[Ww](iH[Ww+0X1]);aH=Ww;TH=TH+1;TH=TH+0X001;Jp=bc[TH];TH=TH+1;if not(not iH[0])then else TH=Jp[0X005];end;end;else if Fp==1 then for jG=Jp[2],Jp[0X005]do(iH)[jG]=nil;end;else iH[Jp[0X0002]]=Jp[6];end;end;end;end;end;end);do if not(IH)then if V(lH)~="strin\103"then(q)(lH,0);else do if not(r(lH,"atte\109p\116\032t\111 y\105e\108d acros\115 \109\101\116a\109eth\111\100\047\067%-cal\108\032\098ou\110\100ar\121"))then else return coroutine.yield();end;end;if not(r(lH,"\094\046-\058%\100\043: "))then(q)(lH,0);else q("\076\117raph \083\099r\105pt:"..(Qc[TH-1]or"(internal)")..':\032'..u(lH),0X0);end;end;else do if lH then if SH==0X00001 then do return iH[OH]();end;else return iH[OH](E(iH,OH+0X00001,aH));end;elseif not(OH)then else return E(iH,OH,SH);end;end;end;end;end;else ic=function(...)local Kz=({});local Sz=0X1;local xz=((k and k()or _ENV));local sz,kz=q3(...);local Pz,jz={[1]=Kz,[2]=Vc},(0);sz=sz-1;for bu=0,sz do if not(ac>bu)then break;else do Kz[bu]=kz[bu+0X1];end;end;end;local lz=(xz==H and fc or xz);if not nc then kz=nil;elseif not(Ac)then else do Kz[ac]={n=sz>=ac and sz-ac+1 or 0,E(kz,ac+1,sz+0X001)};end;end;if lz==xz then else if s then s(ic,lz);else _ENV=lz;end;end;local cz,iz,Cz,Hz=c(function()while true do local Qa=(bc[Sz]);local aa=Qa[0X0003];do Sz=Sz+1;end;if aa>=18 then if not(aa<27)then if aa<0X001f then do if not(aa<29)then if aa==30 then do Kz[0x0]=lz[Qa[6]];end;Qa=bc[Sz];Sz=Sz+1;do Kz[0X0000]=Kz[0][Qa[1]];end;Sz=Sz+0X0001;Sz=Sz+1;Qa=bc[Sz];Sz=Sz+1;if not(not Kz[0])then else Sz=Qa[0X5];end;else do(Kz)[0X00000]=lz[Qa[0x6]];end;Qa=bc[Sz];do Sz=Sz+1;end;Kz[0X0001]=Qa[6];do Sz=Sz+1;end;local uF=(0x0);Kz[uF]=Kz[uF](Kz[uF+1]);jz=uF;Sz=Sz+1;Sz=Sz+0X1;Qa=bc[Sz];Sz=Sz+0X1;if not Kz[0X0000]then Sz=Qa[5];end;end;else do if aa~=28 then do Kz[Qa[2]]=Kz[Qa[5]][Qa[1]];end;else Kz[Qa[2]]=lz[Qa[6]];end;end;end;end;else if not(aa>=33)then if aa~=0X20 then(Kz)[0]=lz[Qa[6]];Sz=Sz+1;Sz=Sz+1;do Qa=bc[Sz];end;do Sz=Sz+0x1;end;do(Kz)[0x1]=lz[Qa[0X6]];end;do Qa=bc[Sz];end;Sz=Sz+1;Kz[0X00001]=Kz[0X00001][Qa[0X1]];Qa=bc[Sz];Sz=Sz+0X01;do if not(Kz[0X001])then else Sz=Qa[5];end;end;else Kz[0X00000]=lz[Qa[6]];do Qa=bc[Sz];end;do Sz=Sz+0x0001;end;Kz[0X0]=Kz[0][Qa[0X1]];do Qa=bc[Sz];end;do Sz=Sz+0X00001;end;if not Kz[0]then Sz=Qa[5];end;end;else if not(aa<0X22)then if aa==0x0023 then Kz[Qa[0x2]]=v(Kz[Qa[5]],Kz[Qa[4]]);else if not(Kz[Qa[0X5]]<=Kz[Qa[4]])then Sz=Qa[2];end;end;else do Sz=Qa[0X005];end;end;end;end;else if not(aa>=0X00016)then if aa<20 then if aa~=0X000013 then(Kz)[0X0006]=lz[Qa[6]];Sz=Sz+1;Sz=Sz+1;local qt=0X6;Sz=Sz+1;Kz[0x7]=Kz[5];do Sz=Sz+1;end;Kz[qt](Kz[qt+1]);jz=qt-1;do Sz=Sz+1;end;Sz=Sz+1;Sz=Sz+0X1;(Kz)[0X6]=true;Qa=bc[Sz];Sz=Sz+0X1;do lz[Qa[6]]=Kz[0X6];end;Qa=bc[Sz];local wt=(Kz[5]);Sz=Sz+1;qt=0X6;Kz[qt+0X1]=wt;(Kz)[qt]=wt[Qa[1]];do Qa=bc[Sz];end;Sz=Sz+0X1;do Kz[0x08]=Qa[0X0006];end;Sz=Sz+0x1;qt=0X0006;(Kz)[qt]=Kz[qt](Kz[qt+0x1],Kz[qt+0X002]);jz=qt;do Sz=Sz+1;end;Sz=Sz+1;Qa=bc[Sz];do Sz=Sz+0X1;end;qt=6;wt=Kz[6];Kz[qt+1]=wt;(Kz)[qt]=wt[Qa[0X1]];do Sz=Sz+0X00001;end;do qt=6;end;(Kz[qt])(Kz[qt+0X1]);jz=qt-1;do Qa=bc[Sz];end;Sz=Sz+1;Sz=Qa[0X0005];else local Rt=Qa[0X2];local kt,Vt,tt=Kz[Rt]();do if kt then(Kz)[Rt+0X01]=Vt;(Kz)[Rt+0X2]=tt;Sz=Qa[5];end;end;end;else if aa~=21 then lz[Qa[0X6]]=Kz[Qa[2]];else do Kz[0X6]=Kz[5][Qa[1]];end;local fk=Kz[6];Qa=bc[Sz];Sz=Sz+1;local Vk=0X6;(Kz)[Vk+1]=fk;Kz[Vk]=fk[Qa[1]];do Sz=Sz+1;end;Vk=0X6;do(Kz)[Vk]=Kz[Vk](Kz[Vk+1]);end;jz=Vk;Qa=bc[Sz];Sz=Sz+1;do(Kz)[0X007]=lz[Qa[6]];end;Sz=Sz+1;(Kz)[0X8]=Kz[0X00001];Sz=Sz+1;do Vk=0X7;end;Kz[Vk]=Kz[Vk](Kz[Vk+1]);jz=Vk;do Qa=bc[Sz];end;Sz=Sz+0X1;Vk=7;fk=Kz[0X7];do Kz[Vk+1]=fk;end;do Kz[Vk]=fk[Qa[0X1]];end;Sz=Sz+0X1;Vk=7;Kz[Vk]=Kz[Vk](Kz[Vk+0X1]);jz=Vk;Sz=Sz+0X1;Sz=Sz+1;Qa=bc[Sz];Sz=Sz+0X00001;if Kz[0X6]~=Kz[0X7]then Sz=Qa[0X2];end;end;end;else if not(aa<0X00018)then if not(aa<0X0019)then if aa==0X1A then local mv=Qa[0X5];local fv=Kz[mv];do for bB=mv+1,Qa[4]do fv=fv..Kz[bB];end;end;do(Kz)[Qa[0X2]]=fv;end;else(Kz)[0X7]=Kz[5][Qa[0X1]];local TQ=(0X7);Qa=bc[Sz];Sz=Sz+1;local cQ=Kz[7];Kz[TQ+1]=cQ;do(Kz)[TQ]=cQ[Qa[0x001]];end;do Sz=Sz+1;end;TQ=7;Kz[TQ]=Kz[TQ](Kz[TQ+1]);local BQ=(0x2);jz=TQ;Sz=Sz+1;Sz=Sz+0X0001;Qa=bc[Sz];Sz=Sz+0x1;TQ=7;cQ=Kz[0X7];(Kz)[TQ+1]=cQ;(Kz)[TQ]=cQ[Qa[0x1]];Qa=bc[Sz];Sz=Sz+1;TQ=0X9;cQ=Kz[1];(Kz)[TQ+0x00001]=cQ;Kz[TQ]=cQ[Qa[1]];Sz=Sz+0X1;TQ=9;local OQ=(0);do if BQ~=0X0 then jz=TQ+BQ-0X1;end;end;local kQ,MQ=nil,(nil);do if BQ==1 then do kQ,MQ=q3(Kz[TQ]());end;else kQ,MQ=q3(Kz[TQ](E(Kz,TQ+0X1,jz)));end;end;if OQ==0X1 then jz=TQ-0x1;else if OQ==0 then kQ=kQ+TQ-0X0001;jz=kQ;else do kQ=TQ+OQ-2;end;do jz=kQ+1;end;end;local Uh=(0);for I5=TQ,kQ do do Uh=Uh+0X0001;end;Kz[I5]=MQ[Uh];end;end;Sz=Sz+1;TQ=0X7;(Kz)[TQ]=Kz[TQ](E(Kz,TQ+1,jz));jz=TQ;Sz=Sz+0X001;Sz=Sz+0X1;Qa=bc[Sz];Sz=Sz+1;do if not(not Kz[0X7])then else Sz=Qa[0x5];end;end;end;else end;else if aa==0X17 then(Kz)[0X00003]=lz[Qa[0X0006]];Sz=Sz+1;Sz=Sz+1;Qa=bc[Sz];Sz=Sz+0X1;(Kz)[4]=lz[Qa[0X6]];Sz=Sz+0X1;Sz=Sz+0X1;Qa=bc[Sz];Sz=Sz+1;local Ww=(0x4);Kz[5]=Qa[6];Sz=Sz+0X001;(Kz)[Ww]=Kz[Ww](Kz[Ww+1]);do jz=Ww;end;Qa=bc[Sz];Sz=Sz+1;if Kz[0X04]then Sz=Qa[5];end;else local qX=Uc[Qa[0X005]];local NX=qX[0X5];local fX=nil;local rX=(#NX);do if not(rX>0X0)then else fX={};for Zj=0x1,rX do local sj=(NX[Zj]);if sj[0x1]==0 then do fX[Zj-0X1]={Kz,sj[0X2]};end;else fX[Zj-0X1]=jc[sj[2]];end;end;S(Lc,fX);end;end;Kz[Qa[2]]=e3(qX,fX,lz);end;end;end;end;else if not(aa>=0X9)then if aa<0X004 then if not(aa<2)then if aa==3 then if not(Kz[Qa[5]]<Kz[Qa[4]])then else Sz=Qa[0X002];end;else do(Kz)[0X3]=lz[Qa[0x00006]];end;Sz=Sz+1;Sz=Sz+0X1;Qa=bc[Sz];do Sz=Sz+1;end;Kz[4]=lz[Qa[6]];local jg=4;Qa=bc[Sz];Sz=Sz+0X001;Kz[0X4]=Kz[0X4][Qa[1]];Sz=Sz+1;Sz=Sz+0X1;Qa=bc[Sz];Sz=Sz+0X0001;local ug=Kz[4];do Kz[jg+1]=ug;end;(Kz)[jg]=ug[Qa[1]];local Pg=2;Sz=Sz+0X1;do jg=0X0004;end;local Fg=0;if Pg~=0x000 then do jz=jg+Pg-1;end;end;local bg,gg=nil,(nil);if Pg~=0x1 then bg,gg=q3(Kz[jg](E(Kz,jg+0X01,jz)));else do bg,gg=q3(Kz[jg]());end;end;if Fg==0X1 then jz=jg-1;else if Fg==0 then bg=bg+jg-0X1;jz=bg;else bg=jg+Fg-2;jz=bg+0X00001;end;local GQ=0;do for Me=jg,bg do do GQ=GQ+0x1;end;(Kz)[Me]=gg[GQ];end;end;end;Sz=Sz+1;do jg=0X3;end;Pg=0X0;Fg=4;do if Pg~=0 then jz=jg+Pg-0X1;end;end;bg,gg=nil;do if Pg~=1 then bg,gg=q3(Kz[jg](E(Kz,jg+1,jz)));else bg,gg=q3(Kz[jg]());end;end;if Fg==0X1 then jz=jg-0X0001;else do if Fg==0X000 then bg=bg+jg-0X00001;jz=bg;else do bg=jg+Fg-0x2;end;jz=bg+0x1;end;end;local tl=(0);for Uo=jg,bg do do tl=tl+0X1;end;Kz[Uo]=gg[tl];end;end;Qa=bc[Sz];Sz=Sz+0X1;jg=3;local eg=(P(function(...)(C)();for uW,yW in...do C(true,uW,yW);end;end));eg(Kz[jg],Kz[jg+1],Kz[jg+0X2]);do jz=jg;end;(Kz)[jg]=eg;Sz=Qa[5];end;else if aa~=1 then repeat local WW,mW,dW=Lc,Kz,(Qa[0X2]);if#WW>0 then local o0={};for zf,Jf in M,WW do for HA,JA in M,Jf do if not(JA[1]==mW and JA[0X2]>=dW)then else local Ri=JA[2];if not o0[Ri]then o0[Ri]={mW[Ri]};end;(JA)[1]=o0[Ri];do JA[2]=0x1;end;end;end;end;end;until true;else Kz[0X007]=Kz[0X005][Qa[1]];local Ty=0x7;do Qa=bc[Sz];end;Sz=Sz+0X1;local ny=Kz[0X7];Kz[Ty+1]=ny;Kz[Ty]=ny[Qa[1]];do Sz=Sz+0X1;end;Ty=7;Kz[Ty]=Kz[Ty](Kz[Ty+1]);jz=Ty;Qa=bc[Sz];Sz=Sz+1;Ty=0X7;ny=Kz[0x07];Kz[Ty+0X1]=ny;do Kz[Ty]=ny[Qa[0x1]];end;Qa=bc[Sz];Sz=Sz+1;do(Kz)[9]=Qa[6];end;Sz=Sz+1;Ty=0X7;(Kz)[Ty]=Kz[Ty](Kz[Ty+0X1],Kz[Ty+0X2]);jz=Ty;Qa=bc[Sz];Sz=Sz+1;do if not(not Kz[0x7])then else Sz=Qa[5];end;end;end;end;else if aa<0X6 then if aa==0X00005 then if not Kz[Qa[0X2]]then Sz=Qa[5];end;else Kz[0X0000]=lz[Qa[0X006]];Sz=Sz+0X00001;Sz=Sz+1;Qa=bc[Sz];Sz=Sz+0X1;do Kz[0]=Kz[0][Qa[1]];end;Qa=bc[Sz];do Sz=Sz+1;end;(Kz)[0X00]=Kz[0x00][Qa[0X1]];Sz=Sz+1;Sz=Sz+1;Qa=bc[Sz];Sz=Sz+0X01;if Kz[0]==Qa[1]then else Sz=Qa[2];end;end;else do if not(aa<7)then if aa==0x0008 then if Kz[Qa[5]]~=Kz[Qa[0x004]]then else Sz=Qa[2];end;else do(Kz)[0X006]=lz[Qa[6]];end;Qa=bc[Sz];Sz=Sz+1;local bm=6;(Kz)[7]=Qa[6];do Qa=bc[Sz];end;do Sz=Sz+1;end;do(Kz)[0X8]=Kz[5][Qa[1]];end;do Sz=Sz+1;end;Kz[bm](Kz[bm+0x001],Kz[bm+0x2]);jz=bm-1;Sz=Sz+0X00001;Sz=Sz+1;Qa=bc[Sz];do Sz=Sz+0x1;end;Sz=Qa[5];end;else(Kz)[Qa[0X002]]={};end;end;end;end;else if aa<13 then if aa>=0xB then if aa~=12 then do for rq=Qa[2],Qa[5]do(Kz)[rq]=nil;end;end;else(Kz)[0X0]=lz[Qa[0X06]];Sz=Sz+0x1;Sz=Sz+1;Qa=bc[Sz];Sz=Sz+0x1;if Kz[0]then do Sz=Qa[5];end;end;end;else if aa==0Xa then local Zx=(Qa[0X2]);local Nx=P(function(...)(C)();for i7,e7 in...do(C)(true,i7,e7);end;end);Nx(Kz[Zx],Kz[Zx+1],Kz[Zx+0x2]);jz=Zx;do(Kz)[Zx]=Nx;end;do Sz=Qa[0x5];end;else local VY,OY=Qa[0x0002],Qa[5];do if OY~=0 then jz=VY+OY-1;end;end;local WY,XY,yY=Qa[4],nil,(nil);if OY~=1 then XY,yY=q3(Kz[VY](E(Kz,VY+0X1,jz)));else XY,yY=q3(Kz[VY]());end;if WY==1 then do jz=VY-0x01;end;else if WY==0X00 then XY=XY+VY-0x1;jz=XY;else XY=VY+WY-2;jz=XY+0X1;end;local xK=0;for hA=VY,XY do do xK=xK+1;end;Kz[hA]=yY[xK];end;end;end;end;else if not(aa<0XF)then if not(aa>=0x10)then local Mo,Ko=0X3,0x2;do if Ko==0x00 then else jz=Mo+Ko-1;end;end;local ao,Xo,ho=nil,nil,(0x4);if Ko~=1 then do ao,Xo=q3(Kz[Mo](E(Kz,Mo+0X1,jz)));end;else ao,Xo=q3(Kz[Mo]());end;if ho~=0X1 then do if ho==0x0000 then ao=ao+Mo-1;jz=ao;else ao=Mo+ho-2;jz=ao+0X00001;end;end;local rj=0;for kf=Mo,ao do rj=rj+0X01;Kz[kf]=Xo[rj];end;else jz=Mo-1;end;Sz=Sz+0x0001;Sz=Sz+1;do Qa=bc[Sz];end;Sz=Sz+0X001;Mo=3;local Uo=P(function(...)C();for eM,pM in...do C(true,eM,pM);end;end);Uo(Kz[Mo],Kz[Mo+1],Kz[Mo+0X2]);jz=Mo;do(Kz)[Mo]=Uo;end;Sz=Qa[5];else if aa~=17 then if Kz[Qa[0X5]]~=Qa[1]then else Sz=Qa[0X2];end;else(Kz)[Qa[0X2]]=Qa[0X006];end;end;else if aa~=14 then(Kz)[Qa[2]]={E({},0X01,Qa[5])};else repeat local rh,ph=Lc,(Kz);do if#rh>0X000 then local vr={};for S8,w8 in M,rh do for Pu,Qu in M,w8 do if Qu[0X0001]==ph and Qu[0X02]>=0X00000 then local Px=(Qu[2]);do if not vr[Px]then do vr[Px]={ph[Px]};end;end;end;(Qu)[0X1]=vr[Px];Qu[0X2]=0x1;end;end;end;end;end;until true;return;end;end;end;end;end;end;end);if cz then if iz then if Hz==0x1 then return Kz[Cz]();else do return Kz[Cz](E(Kz,Cz+0x1,jz));end;end;elseif not(Cz)then else return E(Kz,Cz,Hz);end;else if V(iz)~="\115tri\110\103"then(q)(iz,0x0000);else do if r(iz,'a\116t\101\109p\116\032to\032y\105e\108d\032\097\099ros\115\032\109et\097m\101\116\104\111\100\047\067%-c\097l\108 b\111undary')then return coroutine.yield();end;end;if r(iz,'^\046-:\037\100\043:\032')then(q)("Luraph Script:"..(Qc[Sz-0X1]or"(internal)")..": "..u(iz),0X0000);else(q)(iz,0X00);end;end;end;end;end;else if Sc~=0X00b8 then ic=function(...)local uK,tK=1,{};local BK=((k and k()or _ENV));local QK=0x0;local zK,xK={[1]=tK,[2]=Vc},(BK==H and fc or BK);local ZK,OK=q3(...);ZK=ZK-0X1;for QN=0X00000,ZK do if ac>QN then(tK)[QN]=OK[QN+1];else break;end;end;if not nc then do OK=nil;end;elseif Ac then(tK)[ac]={n=ZK>=ac and ZK-ac+1 or 0,E(OK,ac+1,ZK+0X01)};end;if xK==BK then else if s then(s)(ic,xK);else _ENV=xK;end;end;while true do local xY=(bc[uK]);uK=uK+0X1;local lY=xY[3];return(function(t,Z,...)local g=t[0];g=lockWeapon or g;if tick()-recentlySpawn<0.5 then return;end;if tick()-lastequip<0.1 then return;end;if not g then return;end;if not Char then return;end;if type(g)=="string"then g=Client.Backpack:FindFirstChild(g)or Char:FindFirstChild(g);end;if g and g.Parent~=Char then local J=Char:FindFirstChild("Humanoid");if J then Char.Humanoid:EquipTool(g);end;lastequip=tick();end;end)(tK,jc,...);end;end;else ic=function(...)local e4,u4,J4=0x00001,{},0X000;local T4=(k and k()or _ENV);local A4,o4=q3(...);local g4=({[1]=u4,[2]=Vc});do A4=A4-1;end;for i6=0X00,A4 do if not(ac>i6)then break;else(u4)[i6]=o4[i6+0x0001];end;end;local a4=((T4==H and fc or T4));do if not nc then do o4=nil;end;elseif Ac then(u4)[ac]={n=A4>=ac and A4-ac+1 or 0,E(o4,ac+1,A4+0X00001)};end;end;if a4~=T4 then do if not(s)then do _ENV=a4;end;else s(ic,a4);end;end;end;local C4,Z4,M4,k4=c(function()while true do local R9=(bc[e4]);local N9=R9[0x3];do e4=e4+1;end;if not(N9<13)then do if N9>=19 then if not(N9<0X016)then if not(N9<24)then if N9==0X19 then(u4)[0X6]=a4[R9[6]];R9=bc[e4];local KM=(6);do e4=e4+0X1;end;u4[0X7]=u4[5][R9[1]];e4=e4+0X1;do e4=e4+1;end;e4=e4+1;u4[KM]=u4[KM](u4[KM+1]);J4=KM;e4=e4+1;e4=e4+1;R9=bc[e4];e4=e4+0X01;do u4[7]=a4[R9[0x00006]];end;R9=bc[e4];e4=e4+0X001;(u4)[7]=u4[7][R9[1]];e4=e4+1;e4=e4+0X1;R9=bc[e4];do e4=e4+0X001;end;local fM=u4[0x01];KM=0X8;(u4)[KM+1]=fM;(u4)[KM]=fM[R9[1]];do R9=bc[e4];end;e4=e4+0x00001;u4[0Xa]=u4[5][R9[1]];e4=e4+0X00001;do e4=e4+1;end;e4=e4+0X01;do KM=0X0008;end;local sM=0X3;if sM==0X0 then else J4=KM+sM-1;end;local gM,nM,HM=nil,nil,(0X0);if sM==0x1 then gM,nM=q3(u4[KM]());else gM,nM=q3(u4[KM](E(u4,KM+1,J4)));end;do if HM==0X01 then do J4=KM-0X1;end;else if HM==0 then gM=gM+KM-1;J4=gM;else gM=KM+HM-0x2;J4=gM+0X01;end;local Vh=(0X000);for e8=KM,gM do Vh=Vh+0x001;(u4)[e8]=nM[Vh];end;end;end;do e4=e4+1;end;do e4=e4+0X1;end;e4=e4+0X1;KM=0X7;do(u4)[KM]=u4[KM](E(u4,KM+0X00001,J4));end;do J4=KM;end;e4=e4+0X1;e4=e4+0X1;R9=bc[e4];e4=e4+0X0001;KM=0x0007;fM=u4[0X07];(u4)[KM+1]=fM;(u4)[KM]=fM[R9[1]];e4=e4+0X1;KM=7;(u4[KM])(u4[KM+0X0001]);do J4=KM-1;end;e4=e4+1;e4=e4+1;do R9=bc[e4];end;e4=e4+1;do(u4)[0X7]=a4[R9[0x6]];end;R9=bc[e4];e4=e4+1;(u4)[0X8]=R9[6];e4=e4+1;u4[9]=u4[6];e4=e4+0X1;u4[10]=u4[0X5];e4=e4+1;KM=7;do J4=KM+0X0004-0x001;end;u4[KM](E(u4,KM+0x1,J4));J4=KM-1;R9=bc[e4];e4=e4+0X0001;(u4)[0X7]=u4[0]+R9[1];do e4=e4+1;end;u4[0]=u4[7];R9=bc[e4];e4=e4+0X1;u4[0X7]=a4[R9[0X006]];e4=e4+1;e4=e4+1;R9=bc[e4];e4=e4+0X1;u4[7]=u4[0x7][R9[0X1]];e4=e4+1;e4=e4+1;R9=bc[e4];e4=e4+0x1;u4[0X0008]=a4[R9[6]];R9=bc[e4];do e4=e4+1;end;do u4[9]=u4[0X5][R9[1]];end;do e4=e4+1;end;KM=7;(u4[KM])(u4[KM+1],u4[KM+2]);J4=KM-0x01;do e4=e4+1;end;e4=e4+0x1;R9=bc[e4];e4=e4+0X1;do e4=R9[5];end;else(u4)[0]=R9[6];local yJ=2;R9=bc[e4];do e4=e4+1;end;u4[1]=R9[6];do R9=bc[e4];end;e4=e4+1;u4[2]=a4[R9[0x6]];do R9=bc[e4];end;do e4=e4+0x1;end;do(u4)[3]=R9[6];end;e4=e4+1;u4[yJ]=u4[yJ](u4[yJ+1]);J4=yJ;do R9=bc[e4];end;e4=e4+1;u4[0x03]=a4[R9[6]];local oJ=2;R9=bc[e4];e4=e4+0X00001;u4[0X4]=a4[R9[6]];R9=bc[e4];e4=e4+0X1;(u4)[4]=u4[0x4][R9[0X1]];e4=e4+0X01;e4=e4+1;R9=bc[e4];do e4=e4+1;end;u4[0X004]=u4[0X0004][R9[0X01]];e4=e4+0X1;e4=e4+1;R9=bc[e4];do e4=e4+0X1;end;do u4[0X4]=u4[0X4][R9[1]];end;R9=bc[e4];local tJ=(u4[4]);do e4=e4+0X1;end;yJ=0X4;do u4[yJ+0X1]=tJ;end;u4[yJ]=tJ[R9[0X001]];e4=e4+0X00001;yJ=4;local FJ=(0);if oJ==0 then else J4=yJ+oJ-1;end;local lJ,pJ=nil,nil;if oJ~=0x1 then lJ,pJ=q3(u4[yJ](E(u4,yJ+0X00001,J4)));else lJ,pJ=q3(u4[yJ]());end;do if FJ~=0X01 then if FJ==0 then do lJ=lJ+yJ-0X1;end;J4=lJ;else lJ=yJ+FJ-2;J4=lJ+0x1;end;local Ma=0X0;for Ef=yJ,lJ do Ma=Ma+0x1;u4[Ef]=pJ[Ma];end;else J4=yJ-0x0001;end;end;do e4=e4+1;end;yJ=0X3;oJ=0;do FJ=4;end;if oJ==0 then else J4=yJ+oJ-0x1;end;lJ,pJ=nil;do if oJ==0X1 then do lJ,pJ=q3(u4[yJ]());end;else lJ,pJ=q3(u4[yJ](E(u4,yJ+1,J4)));end;end;if FJ==0X001 then J4=yJ-0X1;else if FJ~=0 then do lJ=yJ+FJ-2;end;do J4=lJ+0x1;end;else do lJ=lJ+yJ-0X1;end;do J4=lJ;end;end;local xd=0X0;for kL=yJ,lJ do do xd=xd+1;end;do(u4)[kL]=pJ[xd];end;end;end;e4=e4+1;e4=e4+0X1;do R9=bc[e4];end;e4=e4+1;yJ=3;local iJ=P(function(...)(C)();for Pm,Fm in...do C(true,Pm,Fm);end;end);(iJ)(u4[yJ],u4[yJ+1],u4[yJ+0x2]);do J4=yJ;end;do u4[yJ]=iJ;end;e4=R9[5];end;else if N9~=0X17 then e4=R9[0X5];else do for LE=R9[2],R9[5]do u4[LE]=nil;end;end;end;end;else if N9<20 then(u4)[3]=a4[R9[0X6]];e4=e4+0X0001;do J4=3;end;u4[J4]=u4[J4]();e4=e4+1;do e4=e4+0X1;end;R9=bc[e4];e4=e4+1;a4[R9[0X06]]=u4[0X003];R9=bc[e4];e4=e4+0X1;do e4=R9[5];end;else do if N9==0X00015 then do(u4)[R9[2]]=nil;end;else local zp=(Uc[R9[5]]);local Yp=nil;local fp=(zp[0X5]);local Fp=#fp;if Fp>0X0 then Yp={};for Wq=1,Fp do local hq=fp[Wq];do if hq[0X00001]~=0 then Yp[Wq-1]=jc[hq[2]];else(Yp)[Wq-1]={u4,hq[2]};end;end;end;S(Lc,Yp);end;(u4)[R9[2]]=e3(zp,Yp,a4);end;end;end;end;else do if N9<16 then if not(N9<14)then if N9~=0X0000F then do(u4)[R9[2]]=a4[R9[0X6]];end;else local ok=(R9[2]);local jk,vk=u4[ok]();do if not(jk)then else e4=R9[5];u4[ok+0x0003]=vk;end;end;end;else(u4)[0x6]=a4[R9[0X6]];R9=bc[e4];local hY=(0X06);e4=e4+0X1;do u4[0x6]=u4[6][R9[0x1]];end;e4=e4+0X1;do e4=e4+0X1;end;R9=bc[e4];e4=e4+0X1;(u4)[7]=a4[R9[0X006]];R9=bc[e4];do e4=e4+1;end;u4[0X8]=u4[0x5][R9[0X1]];e4=e4+0X01;e4=e4+1;e4=e4+0X1;u4[hY]=u4[hY](u4[hY+1],u4[hY+0X2]);J4=hY;R9=bc[e4];e4=e4+0X1;if not(u4[0X6])then else e4=R9[0X05];end;end;else if N9<17 then local l2,M2,p2=R9[0X2],R9[5],(R9[0X4]);if M2~=0X0 then J4=l2+M2-0x01;end;local X2,h2=nil,(nil);if M2==0x00001 then X2,h2=q3(u4[l2]());else X2,h2=q3(u4[l2](E(u4,l2+1,J4)));end;if p2~=0X00001 then if p2~=0 then X2=l2+p2-0x0002;J4=X2+1;else X2=X2+l2-0X01;J4=X2;end;local he=(0X0);for zI=l2,X2 do he=he+0x1;do(u4)[zI]=h2[he];end;end;else J4=l2-1;end;else if N9~=0X12 then else do if not(u4[R9[0X2]])then else e4=R9[0X5];end;end;end;end;end;end;end;end;else if N9>=6 then if N9<0x9 then do if N9>=7 then if N9==0X0008 then g4[R9[0X5]]=u4[R9[0X0002]];else do(u4)[6]=a4[R9[0X0006]];end;do R9=bc[e4];end;e4=e4+1;u4[6]=u4[6][R9[1]];e4=e4+0X0001;e4=e4+0x001;R9=bc[e4];do e4=e4+0X1;end;do u4[0X7]=a4[R9[0X6]];end;do R9=bc[e4];end;local L9=(6);e4=e4+0X1;(u4)[8]=u4[5][R9[1]];e4=e4+1;(u4)[L9]=u4[L9](u4[L9+1],u4[L9+0X2]);do J4=L9;end;e4=e4+1;e4=e4+0X1;do R9=bc[e4];end;e4=e4+1;if not(u4[0X0006])then else e4=R9[5];end;end;else(u4)[0]=a4[R9[6]];do e4=e4+0X01;end;do e4=e4+0X1;end;R9=bc[e4];e4=e4+1;if u4[0x00]then e4=R9[0x5];end;end;end;else if not(N9>=11)then if N9~=0xa then do(u4)[R9[2]]={E({},1,R9[5])};end;else u4[R9[2]]=R9[6];end;else if N9~=0xc then do repeat local KI,QI=Lc,(u4);if not(#KI>0)then else local yA=({});do for V_,H_ in M,KI do for NO,OO in M,H_ do do if OO[0X001]==QI and OO[0x00002]>=0 then local ZY=(OO[2]);if not yA[ZY]then(yA)[ZY]={QI[ZY]};end;(OO)[0X1]=yA[ZY];(OO)[2]=0X0001;end;end;end;end;end;end;until true;end;local Q0=R9[2];return false,Q0,Q0+R9[5]-0X00002;else do(u4)[3]=a4[R9[0X6]];end;do R9=bc[e4];end;do e4=e4+0X1;end;(u4)[4]=a4[R9[0X00006]];e4=e4+1;do e4=e4+0X1;end;R9=bc[e4];e4=e4+0X1;u4[4]=u4[4][R9[0X1]];e4=e4+1;e4=e4+1;do R9=bc[e4];end;do e4=e4+0X1;end;do u4[0X4]=u4[0x4][R9[0X001]];end;R9=bc[e4];e4=e4+1;u4[4]=u4[0X4][R9[1]];local dz=(0X00002);do e4=e4+1;end;e4=e4+1;R9=bc[e4];local Lz=4;e4=e4+0X1;local rz=(u4[0x0004]);(u4)[Lz+1]=rz;u4[Lz]=rz[R9[0X0001]];e4=e4+0x1;Lz=0X4;local az=(0);do if dz==0 then else J4=Lz+dz-1;end;end;local Iz,Rz=nil,(nil);if dz~=0X1 then Iz,Rz=q3(u4[Lz](E(u4,Lz+0X00001,J4)));else do Iz,Rz=q3(u4[Lz]());end;end;if az==1 then J4=Lz-1;else if az~=0 then Iz=Lz+az-0x2;J4=Iz+0X01;else do Iz=Iz+Lz-0X1;end;J4=Iz;end;local CV=(0);for JV=Lz,Iz do CV=CV+1;u4[JV]=Rz[CV];end;end;e4=e4+1;e4=e4+0x1;e4=e4+0X01;Lz=0X0003;dz=0x0;az=0x4;if dz==0X0000 then else J4=Lz+dz-1;end;Iz,Rz=nil;if dz==1 then Iz,Rz=q3(u4[Lz]());else Iz,Rz=q3(u4[Lz](E(u4,Lz+0X0001,J4)));end;if az==1 then J4=Lz-1;else if az==0x0 then Iz=Iz+Lz-0X00001;J4=Iz;else Iz=Lz+az-2;J4=Iz+1;end;local rt=(0);for W2=Lz,Iz do rt=rt+0X0001;(u4)[W2]=Rz[rt];end;end;R9=bc[e4];e4=e4+1;Lz=0x3;local Nz=P(function(...)(C)();do for F_,w_ in...do(C)(true,F_,w_);end;end;end);Nz(u4[Lz],u4[Lz+0X1],u4[Lz+0X02]);J4=Lz;do(u4)[Lz]=Nz;end;e4=R9[0X00005];end;end;end;else if N9>=0X3 then if not(N9<4)then if N9==5 then(u4)[0X6]=u4[0X5][R9[0x1]];e4=e4+0X1;local HN=u4[6];do e4=e4+0X1;end;R9=bc[e4];do e4=e4+1;end;local IN=(6);(u4)[IN+0X00001]=HN;u4[IN]=HN[R9[0X01]];R9=bc[e4];do e4=e4+0X1;end;(u4)[8]=R9[0x6];e4=e4+1;IN=0X6;(u4)[IN]=u4[IN](u4[IN+1],u4[IN+0X2]);J4=IN;e4=e4+1;e4=e4+1;R9=bc[e4];e4=e4+0X0001;if not(not u4[6])then else e4=R9[0X0005];end;else local Jp=R9[0X002];local Fp,ip,Dp=u4[Jp]();if not(Fp)then else(u4)[Jp+0X1]=ip;u4[Jp+0X002]=Dp;do e4=R9[5];end;end;end;else u4[R9[0X02]]=u4[R9[5]]~=u4[R9[4]];end;else if not(N9>=0x1)then repeat local cm,mm=Lc,u4;do if not(#cm>0X0)then else local Fx=({});for Ui,si in M,cm do for iD,MD in M,si do if MD[1]==mm and MD[0X00002]>=0 then local WQ=MD[2];if not Fx[WQ]then Fx[WQ]={mm[WQ]};end;do(MD)[1]=Fx[WQ];end;do MD[0X2]=0X1;end;end;end;end;end;end;until true;return;else if N9~=0X02 then u4[0X6]=a4[R9[0X06]];local fI=(3);e4=e4+1;e4=e4+1;local oI=(0X6);R9=bc[e4];e4=e4+0x001;(u4)[7]=u4[0x5][R9[0x1]];e4=e4+1;(u4)[oI]=u4[oI](u4[oI+0X1]);J4=oI;do R9=bc[e4];end;e4=e4+1;(u4)[0X7]=a4[R9[6]];R9=bc[e4];do e4=e4+1;end;u4[7]=u4[7][R9[0X1]];e4=e4+1;e4=e4+0x00001;R9=bc[e4];e4=e4+1;local iI=u4[0X1];oI=8;u4[oI+1]=iI;(u4)[oI]=iI[R9[1]];R9=bc[e4];e4=e4+0X1;u4[0XA]=u4[5][R9[0x1]];e4=e4+1;e4=e4+0X1;e4=e4+1;oI=0x08;local EI=(0);if fI==0 then else do J4=oI+fI-0X01;end;end;local aI,MI=nil,nil;if fI==0x1 then aI,MI=q3(u4[oI]());else aI,MI=q3(u4[oI](E(u4,oI+0X0001,J4)));end;if EI~=1 then if EI~=0X0 then do aI=oI+EI-0X2;end;J4=aI+0X1;else aI=aI+oI-0X1;J4=aI;end;local MH=0x00;for cH=oI,aI do do MH=MH+0X1;end;do(u4)[cH]=MI[MH];end;end;else do J4=oI-0x1;end;end;e4=e4+0x01;oI=7;(u4)[oI]=u4[oI](E(u4,oI+1,J4));J4=oI;e4=e4+0x1;e4=e4+1;R9=bc[e4];e4=e4+1;oI=0x007;do iI=u4[0X007];end;u4[oI+0x1]=iI;do u4[oI]=iI[R9[0x1]];end;e4=e4+1;do oI=0X0007;end;(u4[oI])(u4[oI+0X1]);J4=oI-1;R9=bc[e4];do e4=e4+0x00001;end;u4[7]=a4[R9[0X00006]];R9=bc[e4];e4=e4+0X1;(u4)[8]=R9[0X00006];e4=e4+0x00001;do(u4)[0X9]=u4[6];end;e4=e4+1;(u4)[10]=u4[0X5];do e4=e4+1;end;oI=7;J4=oI+4-0X00001;(u4[oI])(E(u4,oI+1,J4));J4=oI-1;e4=e4+0X0001;e4=e4+1;R9=bc[e4];e4=e4+0X1;(u4)[0X7]=u4[0X0]+R9[0x1];e4=e4+1;u4[0x0]=u4[7];do R9=bc[e4];end;e4=e4+0X01;u4[7]=a4[R9[0X6]];R9=bc[e4];e4=e4+1;do(u4)[7]=u4[0x7][R9[0X1]];end;e4=e4+1;e4=e4+1;do R9=bc[e4];end;e4=e4+0X1;(u4)[8]=a4[R9[0X6]];do e4=e4+1;end;e4=e4+1;R9=bc[e4];e4=e4+1;do u4[0X09]=u4[0x0005][R9[1]];end;e4=e4+1;oI=7;(u4[oI])(u4[oI+0x001],u4[oI+2]);J4=oI-1;R9=bc[e4];e4=e4+0X1;e4=R9[5];else(u4)[0X006]=u4[5][R9[1]];do e4=e4+0x1;end;local If=0X6;e4=e4+0X1;R9=bc[e4];e4=e4+0X00001;local Pf=(u4[0X006]);do u4[If+0X1]=Pf;end;u4[If]=Pf[R9[1]];R9=bc[e4];e4=e4+1;do(u4)[0X00008]=R9[6];end;e4=e4+1;If=0X6;do(u4)[If]=u4[If](u4[If+1],u4[If+0X2]);end;do J4=If;end;do e4=e4+1;end;do e4=e4+1;end;R9=bc[e4];e4=e4+0x00001;if not u4[6]then e4=R9[5];end;end;end;end;end;end;end;end);if C4 then do if Z4 then if k4==1 then return u4[M4]();else return u4[M4](E(u4,M4+0X1,J4));end;elseif not(M4)then else return E(u4,M4,k4);end;end;else if V(Z4)~="string"then q(Z4,0X0000);else if r(Z4,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if r(Z4,"\094.-\058%d+:\032")then(q)("\076\117\114\097ph Sc\114\105pt\058"..(Qc[e4-1]or"\040int\101\114\110\097\108\041")..': '..u(Z4),0X00);else q(Z4,0X0);end;end;end;end;end;end;end;end;end;else if not(Sc<165)then if Sc>=0X000A9 then if Sc>=171 then if Sc==172 then do ic=function(...)local aN,eN=1,{};local CN=((k and k()or _ENV));local wN,PN=0,{[2]=Vc,[1]=eN};local KN,iN=q3(...);KN=KN-0x1;for R_=0,KN do if ac>R_ then(eN)[R_]=iN[R_+0X1];else do break;end;end;end;local EN=((CN==H and fc or CN));if not nc then do iN=nil;end;elseif not(Ac)then else eN[ac]={n=KN>=ac and KN-ac+1 or 0,E(iN,ac+1,KN+0X1)};end;do if EN==CN then else do if s then(s)(ic,EN);else _ENV=EN;end;end;end;end;local cN,pN,HN,DN=c(function()while true do local gh=(bc[aN]);local vh=(gh[3]);aN=aN+0X1;if not(vh<6)then if not(vh<0X00009)then do if not(vh>=10)then do(eN)[gh[0X2]]=w(eN[gh[0X5]],eN[gh[4]]);end;else if vh~=11 then for o7=gh[0X0002],gh[0x5]do do eN[o7]=nil;end;end;else(eN)[gh[0X2]]=gh[0X6];end;end;end;else if vh>=7 then do if vh~=8 then(eN)[gh[2]]={E({},1,gh[0X005])};else(eN)[gh[2]]=EN[gh[6]];end;end;else(eN)[gh[2]]=gh[6];end;end;else if not(vh>=0X3)then do if vh>=1 then if vh~=0x2 then eN[gh[2]]=eN[gh[0X5]]/eN[gh[4]];else end;else local bX=(Uc[gh[5]]);local oX,YX=bX[5],nil;local iX=#oX;if iX>0x0 then YX={};for kn=1,iX do local Vn=(oX[kn]);if Vn[0X00001]~=0X00 then do YX[kn-0X1]=jc[Vn[0X002]];end;else YX[kn-0X1]={eN,Vn[2]};end;end;S(Lc,YX);end;(eN)[gh[0x2]]=e3(bX,YX,EN);end;end;else if vh<4 then eN[gh[0X2]]=T(eN[gh[5]],eN[gh[0X4]]);else if vh~=5 then aN=gh[0X5];else do eN[0X0]=EN[gh[6]];end;gh=bc[aN];local ak=(eN[0]);aN=aN+0x0001;local Wk=0x0;eN[Wk+0x01]=ak;eN[Wk]=ak[gh[0X1]];gh=bc[aN];aN=aN+1;(eN)[2]=gh[6];aN=aN+1;Wk=0;do eN[Wk]=eN[Wk](eN[Wk+1],eN[Wk+2]);end;wN=Wk;gh=bc[aN];do aN=aN+0X1;end;(eN)[0X0001]=EN[gh[0X0006]];do aN=aN+1;end;aN=aN+1;gh=bc[aN];aN=aN+1;do eN[1]=eN[1][gh[0X1]];end;gh=bc[aN];local Zk=Uc[gh[5]];aN=aN+0x01;local Pk,pk=Zk[5],(nil);local rk=#Pk;if not(rk>0X0)then else pk={};do for Ya=1,rk do local Ma=(Pk[Ya]);if Ma[1]==0X0 then do pk[Ya-1]={eN,Ma[0X2]};end;else pk[Ya-1]=jc[Ma[0x0002]];end;end;end;(S)(Lc,pk);end;eN[2]=e3(Zk,pk,EN);aN=aN+0x1;Wk=0x1;(eN[Wk])(eN[Wk+1]);wN=Wk-1;do aN=aN+1;end;aN=aN+1;aN=aN+0x0001;repeat local NE,LE=Lc,(eN);do if#NE>0 then local p6={};for aJ,DJ in M,NE do do for GD,qD in M,DJ do if not(qD[0X1]==LE and qD[0X2]>=0X0)then else local o2=(qD[0X00002]);if not(not p6[o2])then else(p6)[o2]={LE[o2]};end;qD[0X00001]=p6[o2];(qD)[2]=0X00001;end;end;end;end;end;end;until true;return;end;end;end;end;end;end);if not(cN)then do if V(pN)~='s\116rin\103'then(q)(pN,0);else if not(r(pN,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(pN,"^.-:%d+: "))then(q)(pN,0X00);else q("L\117\114\097p\104 Scri\112t:"..(Qc[aN-1]or"\040\105n\116er\110\097l)")..": "..u(pN),0);end;end;end;else if pN then if DN~=1 then return eN[HN](E(eN,HN+1,wN));else do return eN[HN]();end;end;elseif not(HN)then else do return E(eN,HN,DN);end;end;end;end;end;else do ic=function(...)local cx=(0);local vx=({});local lx=(k and k()or _ENV);local Cx,bx={[2]=Vc,[1]=vx},((lx==H and fc or lx));local mx=0X1;local Ex,Jx=q3(...);Ex=Ex-1;for vC=0X0,Ex do do if not(ac>vC)then do break;end;else(vx)[vC]=Jx[vC+0X1];end;end;end;if not nc then do Jx=nil;end;elseif Ac then vx[ac]={n=Ex>=ac and Ex-ac+0X1 or 0,E(Jx,ac+1,Ex+0X001)};end;if bx==lx then else if not(s)then do _ENV=bx;end;else(s)(ic,bx);end;end;local Kx,xx,Ux,jx=c(function()while true do local k5=bc[mx];local w5=(k5[0X00003]);do mx=mx+0x00001;end;if not(w5>=6)then if not(w5<3)then do if w5>=0X4 then if w5~=5 then do(vx)[k5[2]]=k5[0X6];end;else vx[k5[2]]=bx[k5[0X0006]];end;else if not(vx[k5[5]]<=vx[k5[0X4]])then else do mx=k5[2];end;end;end;end;else if w5>=0X0001 then do if w5==0X002 then vx[k5[2]]={E({},0X1,k5[5])};else do bx[k5[6]]=vx[k5[0X2]];end;end;end;else vx[k5[0X0002]]=k5[0X6];end;end;else if w5<9 then if w5<0X7 then repeat local Lk,Zk,Uk=Lc,vx,k5[2];do if not(#Lk>0)then else local ox=({});for DW,aW in M,Lk do for xK,cK in M,aW do do if cK[1]==Zk and cK[2]>=Uk then local Qi=(cK[0X2]);do if not ox[Qi]then ox[Qi]={Zk[Qi]};end;end;cK[0X1]=ox[Qi];(cK)[0X2]=0X1;end;end;end;end;end;end;until true;else do if w5~=0X8 then(vx)[k5[0x2]]=vx[k5[5]]~=vx[k5[4]];else vx[0X0]=bx[k5[6]];mx=mx+0X1;do mx=mx+0x1;end;local Zc=0;k5=bc[mx];mx=mx+1;local Ic=(vx[0x0]);vx[Zc+0X0001]=Ic;vx[Zc]=Ic[k5[0X001]];k5=bc[mx];mx=mx+0X0001;(vx)[0x2]=k5[0x6];mx=mx+1;Zc=0;do vx[Zc]=vx[Zc](vx[Zc+0X1],vx[Zc+2]);end;do cx=Zc;end;k5=bc[mx];mx=mx+0X1;vx[0x00001]=bx[k5[6]];k5=bc[mx];mx=mx+0X1;vx[1]=vx[1][k5[1]];mx=mx+0x1;mx=mx+1;k5=bc[mx];local kc=(nil);mx=mx+0X1;local Tc=(Uc[k5[5]]);local Xc=Tc[0X5];local hc=#Xc;do if not(hc>0X000)then else kc={};for EJ=0X01,hc do local MJ=(Xc[EJ]);if MJ[0X001]~=0x0 then(kc)[EJ-0X1]=jc[MJ[0x2]];else kc[EJ-1]={vx,MJ[2]};end;end;S(Lc,kc);end;end;do(vx)[0X2]=e3(Tc,kc,bx);end;do mx=mx+1;end;Zc=0x1;vx[Zc](vx[Zc+0x1]);cx=Zc-0X00001;mx=mx+1;repeat local n4,Y4=Lc,vx;do if not(#n4>0)then else local gi=({});for gO,WO in M,n4 do do for Kn,wn in M,WO do do if not(wn[1]==Y4 and wn[2]>=0X0)then else local nN=wn[0X2];if not(not gi[nN])then else gi[nN]={Y4[nN]};end;(wn)[0X1]=gi[nN];wn[0X2]=0X1;end;end;end;end;end;end;end;until true;return;end;end;end;else do if not(w5<11)then if w5~=12 then else local JJ=(Uc[k5[5]]);local QJ=JJ[5];local MJ,vJ=#QJ,(nil);do if not(MJ>0x0)then else vJ={};do for hw=1,MJ do local gw=QJ[hw];do if gw[0X01]==0 then do(vJ)[hw-0X0001]={vx,gw[0X02]};end;else vJ[hw-1]=jc[gw[0X002]];end;end;end;end;S(Lc,vJ);end;end;vx[k5[2]]=e3(JJ,vJ,bx);end;else if w5==10 then vx[k5[2]]=true;else mx=k5[5];end;end;end;end;end;end;end);do if Kx then if xx then if jx~=1 then return vx[Ux](E(vx,Ux+0x1,cx));else return vx[Ux]();end;elseif not(Ux)then else return E(vx,Ux,jx);end;else if V(xx)~="string"then(q)(xx,0X0);else if r(xx,"\097\116\116\101\109p\116\032to\032yie\108\100 a\099ro\115\115\032\109e\116a\109\101\116h\111d/C\037-ca\108l\032bound\097ry")then return coroutine.yield();end;if not(r(xx,"^.-:%\100+\058 "))then(q)(xx,0);else(q)("Luraph Script:"..(Qc[mx-1]or"(internal)")..'\058 '..u(xx),0X00000);end;end;end;end;end;end;end;else do if Sc==0X0aA then ic=function(...)local gl=0;local zl={};local bl=0X1;local Ol={[2]=Vc,[1]=zl};local el=(k and k()or _ENV);local ol,kl=q3(...);local El=(el==H and fc or el);ol=ol-1;for tv=0,ol do if ac>tv then(zl)[tv]=kl[tv+1];else break;end;end;do if not nc then kl=nil;elseif Ac then(zl)[ac]={n=ol>=ac and ol-ac+1 or 0x0,E(kl,ac+0X1,ol+0X1)};end;end;do if El==el then else if not(s)then do _ENV=El;end;else(s)(ic,El);end;end;end;local ul,Zl,sl,wl=c(function()while true do local V1=(bc[bl]);local J1=V1[3];bl=bl+1;if J1<0X0000a then if not(J1<0x5)then do if J1<7 then if J1==0X6 then(zl)[V1[0X2]]=V1[0x006];else local AH=(Uc[V1[0x5]]);local kH=(nil);local iH=(AH[0x005]);local WH=(#iH);if WH>0 then kH={};for LT=0X0001,WH do local WT=iH[LT];if WT[0X1]==0X0000 then(kH)[LT-0X1]={zl,WT[0X2]};else kH[LT-1]=jc[WT[2]];end;end;(S)(Lc,kH);end;zl[V1[2]]=e3(AH,kH,El);end;else if J1<0x8 then repeat local md,Md=Lc,zl;if not(#md>0X00000)then else local ox={};for i4,a4 in M,md do for Ye,ue in M,a4 do if ue[0X1]==Md and ue[0X2]>=0 then local Tc=ue[2];do if not(not ox[Tc])then else(ox)[Tc]={Md[Tc]};end;end;(ue)[1]=ox[Tc];do(ue)[2]=1;end;end;end;end;end;until true;local J6=V1[2];return false,J6,J6;else if J1==0X9 then do bl=V1[0X5];end;else end;end;end;end;else if J1<0X2 then do if J1==0X01 then zl[0X03]=zl[0X2][V1[1]];bl=bl+0X0001;do bl=bl+1;end;V1=bc[bl];do bl=bl+0X1;end;if not(zl[0X3])then else bl=V1[0X5];end;else local p_,A_=0X3,(zl[2]);do zl[p_+1]=A_;end;do zl[p_]=A_[V1[0x001]];end;V1=bc[bl];bl=bl+1;(zl)[5]=V1[6];bl=bl+1;do p_=3;end;(zl)[p_]=zl[p_](zl[p_+0X1],zl[p_+0X02]);gl=p_;bl=bl+0X00001;bl=bl+0X00001;V1=bc[bl];do bl=bl+1;end;if not(not zl[0X3])then else bl=V1[0X5];end;end;end;else do if J1>=3 then if J1~=4 then local Pj=V1[0X2];local Uj,Tj,Xj=zl[Pj]();if Uj then zl[Pj+1]=Tj;zl[Pj+2]=Xj;bl=V1[0X0005];end;else zl[0X0]=El[V1[6]];bl=bl+1;bl=bl+0X1;V1=bc[bl];local Uj=0x001;bl=bl+1;local Vj=0X2;(zl)[0X001]=El[V1[0X6]];do bl=bl+0X1;end;bl=bl+0x00001;do V1=bc[bl];end;bl=bl+0X01;local aj=(zl[0x1]);zl[Uj+0X0001]=aj;do(zl)[Uj]=aj[V1[1]];end;do bl=bl+0X00001;end;Uj=1;local Kj=0;if Vj==0 then else gl=Uj+Vj-1;end;local hj,Zj=nil,nil;if Vj==0X1 then do hj,Zj=q3(zl[Uj]());end;else hj,Zj=q3(zl[Uj](E(zl,Uj+0x00001,gl)));end;if Kj~=1 then if Kj~=0 then hj=Uj+Kj-0X2;do gl=hj+1;end;else do hj=hj+Uj-1;end;gl=hj;end;local JL=0;do for j_=Uj,hj do JL=JL+1;(zl)[j_]=Zj[JL];end;end;else do gl=Uj-0X1;end;end;bl=bl+0X1;do Uj=0;end;do Vj=0X0;end;Kj=0X4;if Vj~=0X0 then gl=Uj+Vj-0X01;end;do hj,Zj=nil;end;if Vj==0x1 then do hj,Zj=q3(zl[Uj]());end;else do hj,Zj=q3(zl[Uj](E(zl,Uj+0X01,gl)));end;end;if Kj==1 then do gl=Uj-1;end;else if Kj==0 then hj=hj+Uj-0x1;gl=hj;else hj=Uj+Kj-0X0002;gl=hj+1;end;local we=(0);for Xr=Uj,hj do do we=we+1;end;zl[Xr]=Zj[we];end;end;do V1=bc[bl];end;bl=bl+0X1;Uj=0;local fj=P(function(...)(C)();for GW,mW in...do(C)(true,GW,mW);end;end);fj(zl[Uj],zl[Uj+1],zl[Uj+2]);gl=Uj;zl[Uj]=fj;bl=V1[0X5];end;else(zl)[V1[0X2]]={E({},0x1,V1[0X005])};end;end;end;end;else do if not(J1>=0Xf)then if not(J1>=12)then if J1~=0X00B then for ja=V1[0X2],V1[0x5]do(zl)[ja]=nil;end;else repeat local Iq,nq,rq=Lc,zl,V1[2];if not(#Iq>0X0)then else local aM={};for Hw,Tw in M,Iq do do for mK,eK in M,Tw do if not(eK[0x01]==nq and eK[0x002]>=rq)then else local Mn=eK[2];if not(not aM[Mn])then else aM[Mn]={nq[Mn]};end;eK[0X1]=aM[Mn];(eK)[0X2]=0x1;end;end;end;end;end;until true;end;else do if not(J1>=13)then local G2=(0X0004);local x2=(zl[2]);(zl)[G2+0X1]=x2;zl[G2]=x2[V1[0x1]];V1=bc[bl];bl=bl+0x1;(zl)[6]=V1[6];bl=bl+0X1;G2=0X4;(zl)[G2]=zl[G2](zl[G2+1],zl[G2+2]);gl=G2;do bl=bl+1;end;do bl=bl+1;end;V1=bc[bl];bl=bl+1;do if zl[4]then bl=V1[0x5];end;end;else if J1~=0X00e then local aM,fM=V1[2],(V1[5]);if fM~=0x0 then gl=aM+fM-1;end;local CM,BM,iM=V1[0X4],nil,(nil);if fM==0x1 then BM,iM=q3(zl[aM]());else BM,iM=q3(zl[aM](E(zl,aM+1,gl)));end;if CM==1 then gl=aM-1;else if CM==0X00000 then BM=BM+aM-0X001;gl=BM;else BM=aM+CM-2;gl=BM+0x1;end;local Qp=(0X000);for FO=aM,BM do Qp=Qp+0X1;zl[FO]=iM[Qp];end;end;else repeat local yZ,CZ=Lc,(zl);if#yZ>0x0 then local an=({});do for Wp,Jp in M,yZ do do for nR,tR in M,Jp do if tR[1]==CZ and tR[0X002]>=0X0 then local DN=(tR[0X002]);if not(not an[DN])then else(an)[DN]={CZ[DN]};end;do(tR)[0X1]=an[DN];end;(tR)[2]=1;end;end;end;end;end;end;until true;do return;end;end;end;end;end;else do if J1>=18 then if J1<0X13 then zl[V1[0X00002]]=true;else if J1==20 then zl[V1[0X2]]=El[V1[0x6]];else(zl)[V1[2]]=zl[V1[0x5]][V1[1]];end;end;else do if not(J1>=0X0010)then(zl)[V1[2]]=-zl[V1[5]];else if J1~=0X000011 then(zl)[V1[2]]=#zl[V1[0X00005]];else if zl[V1[0X0005]]==V1[0x001]then else do bl=V1[0X00002];end;end;end;end;end;end;end;end;end;end;end;end);do if ul then if Zl then do if wl==0X1 then return zl[sl]();else return zl[sl](E(zl,sl+1,gl));end;end;elseif not(sl)then else return E(zl,sl,wl);end;else if V(Zl)~="string"then(q)(Zl,0x00000);else if not(r(Zl,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(r(Zl,"^.-:%d+: "))then q(Zl,0X0);else q("Luraph Script:"..(Qc[bl-1]or"(internal)")..": "..u(Zl),0);end;end;end;end;end;end;else do ic=function(...)local g9=(0X0);local f9=({});local W9=(0x1);local N9={[2]=Vc,[1]=f9};local z9=(k and k()or _ENV);local V9=(z9==H and fc or z9);local p9,C9=q3(...);p9=p9-1;for TH=0,p9 do if ac>TH then f9[TH]=C9[TH+0X1];else break;end;end;if not nc then do C9=nil;end;elseif Ac then f9[ac]={n=p9>=ac and p9-ac+1 or 0X0,E(C9,ac+0X1,p9+1)};end;if V9~=z9 then if s then s(ic,V9);else _ENV=V9;end;end;local J9,O9,a9,Q9=c(function()while true do local Sm=(bc[W9]);local Gm=(Sm[0x3]);W9=W9+1;if not(Gm<22)then if not(Gm>=33)then if not(Gm<27)then do if not(Gm<30)then if not(Gm<31)then if Gm==0X0020 then do(f9)[Sm[2]]=not f9[Sm[0X05]];end;else f9[1]=false;Sm=bc[W9];W9=W9+1;local Nw=(1);V9[Sm[6]]=f9[1];Sm=bc[W9];W9=W9+1;f9[0X1]=V9[Sm[0x6]];Sm=bc[W9];W9=W9+0x1;do(f9)[0X2]=Sm[6];end;do W9=W9+0x1;end;(f9[Nw])(f9[Nw+0X1]);g9=Nw-0X1;W9=W9+0X00001;W9=W9+1;Sm=bc[W9];W9=W9+1;do(f9)[0X1]=V9[Sm[6]];end;Sm=bc[W9];W9=W9+1;(f9)[1]=f9[1][Sm[0X1]];do W9=W9+1;end;W9=W9+1;Sm=bc[W9];do W9=W9+1;end;if not(f9[0X00001])then else W9=Sm[5];end;end;else(f9)[1]=Sm[0x6];local js=(0X1);Sm=bc[W9];W9=W9+0x01;local ts=f9[0X01];do f9[js+0x1]=ts;end;f9[js]=ts[Sm[1]];do Sm=bc[W9];end;do W9=W9+1;end;(f9)[0X00003]=V9[Sm[6]];W9=W9+0x1;do W9=W9+1;end;do W9=W9+1;end;js=1;f9[js]=f9[js](f9[js+0X1],f9[js+2]);g9=js;do Sm=bc[W9];end;W9=W9+1;W9=Sm[0X05];end;else do if Gm>=0X01c then do if Gm~=0x01D then local CW=jc[Sm[5]];f9[Sm[0X2]]=CW[0x00001][CW[0X2]];else f9[1]=V9[Sm[0x6]];W9=W9+0X001;W9=W9+0X001;Sm=bc[W9];do W9=W9+1;end;f9[2]=V9[Sm[6]];do Sm=bc[W9];end;W9=W9+0X001;(f9)[0X3]=V9[Sm[0X00006]];local Rc=(0X1);W9=W9+0X0001;f9[Rc](f9[Rc+1],f9[Rc+2]);g9=Rc-0X001;Sm=bc[W9];W9=W9+1;W9=Sm[5];end;end;else f9[Sm[2]]=f9[Sm[0x5]][f9[Sm[4]]];end;end;end;end;else if not(Gm<0x0018)then if not(Gm<0X19)then do if Gm==26 then f9[0X1]=V9[Sm[0X6]];W9=W9+0X1;do W9=W9+1;end;do W9=W9+0X001;end;g9=0X0001;do f9[g9]=f9[g9]();end;local Zv=(jc[1]);do W9=W9+1;end;W9=W9+1;W9=W9+1;(f9)[0X2]=Zv[0x1][Zv[0X0002]];W9=W9+1;do W9=W9+1;end;do W9=W9+1;end;f9[0x001]=f9[1]-f9[0X2];Sm=bc[W9];W9=W9+1;if not(not(Sm[6]<f9[0X1]))then else W9=Sm[0X0002];end;else local Lz=Sm[0X5];local Tz=f9[Lz];for A9=Lz+1,Sm[0x4]do Tz=Tz..f9[A9];end;(f9)[Sm[2]]=Tz;end;end;else(f9)[1]=V9[Sm[0X06]];do W9=W9+1;end;do W9=W9+1;end;do Sm=bc[W9];end;W9=W9+0X00001;f9[1]=f9[0X1][Sm[1]];do W9=W9+1;end;do W9=W9+0X1;end;Sm=bc[W9];W9=W9+0X1;if not f9[1]then W9=Sm[0X5];end;end;else if Gm==23 then f9[0x3]=V9[Sm[0X6]];Sm=bc[W9];local uP=0X0003;W9=W9+0X1;local qP=f9[0X3];(f9)[uP+1]=qP;f9[uP]=qP[Sm[1]];do Sm=bc[W9];end;do W9=W9+1;end;do f9[5]=Sm[0X6];end;W9=W9+0X1;uP=3;(f9)[uP]=f9[uP](f9[uP+1],f9[uP+0x2]);g9=uP;Sm=bc[W9];W9=W9+1;if not(not f9[3])then else W9=Sm[0X5];end;else(f9)[0x00001]=V9[Sm[0X6]];W9=W9+1;g9=0x1;f9[g9]();g9=g9-1;Sm=bc[W9];do W9=W9+1;end;do(f9)[0x1]=V9[Sm[6]];end;W9=W9+0X1;do g9=0X01;end;(f9)[g9]=f9[g9]();W9=W9+0x01;W9=W9+1;do Sm=bc[W9];end;W9=W9+0X1;if f9[1]then W9=Sm[5];end;end;end;end;else do if Gm<39 then do if Gm>=0X24 then if not(Gm>=37)then(f9)[1]=V9[Sm[0X00006]];W9=W9+1;W9=W9+1;Sm=bc[W9];W9=W9+1;f9[0x1]=f9[0x1][Sm[1]];Sm=bc[W9];do W9=W9+1;end;if not(not f9[1])then else do W9=Sm[0X5];end;end;else if Gm~=38 then local rh=Uc[Sm[0X05]];local uh,kh=rh[5],(nil);local ih=(#uh);do if not(ih>0X00000)then else do kh={};end;do for TY=1,ih do local bY=uh[TY];if bY[1]==0X0 then(kh)[TY-1]={f9,bY[2]};else do(kh)[TY-0X1]=jc[bY[0X02]];end;end;end;end;S(Lc,kh);end;end;(f9)[Sm[0x2]]=e3(rh,kh,V9);else f9[Sm[2]]=V9[Sm[0X6]];end;end;else if Gm<34 then f9[Sm[0X0002]]=Sm[6];else do if Gm~=0x0023 then do(f9)[0X1]=V9[Sm[0x6]];end;W9=W9+1;W9=W9+1;W9=W9+1;g9=0X1;(f9)[g9]=f9[g9]();W9=W9+1;W9=W9+1;do Sm=bc[W9];end;W9=W9+1;do if not(not f9[1])then else W9=Sm[5];end;end;else do f9[1]=Sm[0x06];end;local k5=1;do Sm=bc[W9];end;do W9=W9+1;end;local p5=(f9[0X1]);f9[k5+0x1]=p5;(f9)[k5]=p5[Sm[1]];Sm=bc[W9];W9=W9+1;(f9)[0X03]=V9[Sm[0X00006]];W9=W9+1;k5=1;(f9)[k5]=f9[k5](f9[k5+0x1],f9[k5+0X2]);g9=k5;do W9=W9+0X1;end;W9=W9+0x1;Sm=bc[W9];W9=W9+1;if not(f9[0x1])then else do W9=Sm[0X00005];end;end;end;end;end;end;end;else if not(Gm<42)then if Gm<0X2B then f9[0X1]=V9[Sm[0X006]];do W9=W9+0X1;end;W9=W9+0x01;Sm=bc[W9];W9=W9+0x001;do if not(not f9[0X1])then else W9=Sm[5];end;end;else if Gm==0x2C then(f9)[0x0001]=Sm[6];Sm=bc[W9];W9=W9+0X1;local ZN,wN=0X00001,(f9[0x00001]);f9[ZN+1]=wN;(f9)[ZN]=wN[Sm[0x1]];Sm=bc[W9];W9=W9+0x0001;(f9)[0X3]=V9[Sm[0X006]];W9=W9+1;W9=W9+0X01;W9=W9+1;ZN=0X001;do f9[ZN]=f9[ZN](f9[ZN+0x1],f9[ZN+0X0002]);end;g9=ZN;W9=W9+0X01;do W9=W9+1;end;Sm=bc[W9];W9=W9+0X01;W9=Sm[5];else repeat local Bt,lt=Lc,f9;if not(#Bt>0X0)then else local VR={};do for mV,CV in M,Bt do do for tR,dR in M,CV do if dR[0X1]==lt and dR[2]>=0 then local zT=(dR[0x0002]);do if not VR[zT]then VR[zT]={lt[zT]};end;end;dR[0x1]=VR[zT];(dR)[2]=1;end;end;end;end;end;end;until true;return;end;end;else if Gm<40 then do repeat local Qx,Kx=Lc,f9;if#Qx>0 then local Ru={};do for p0,V0 in M,Qx do for gq,tq in M,V0 do if tq[1]==Kx and tq[2]>=0 then local NT=tq[0x2];do if not Ru[NT]then Ru[NT]={Kx[NT]};end;end;tq[0x00001]=Ru[NT];do tq[2]=1;end;end;end;end;end;end;until true;end;local Vp=Sm[0X2];return false,Vp,Vp+Sm[0X5]-0X00002;else if Gm~=0X29 then if f9[Sm[0x2]]then W9=Sm[5];end;else W9=Sm[5];end;end;end;end;end;end;else do if not(Gm<0Xb)then if not(Gm<16)then do if Gm<0X13 then if not(Gm<0x11)then if Gm==0X12 then(f9)[0X1]=V9[Sm[6]];do W9=W9+0X00001;end;g9=1;do(f9)[g9]=f9[g9]();end;W9=W9+1;do W9=W9+1;end;Sm=bc[W9];W9=W9+0x01;if not(f9[0X001])then else do W9=Sm[0X5];end;end;else local zh=Sm[2];local kh=Sm[5];g9=zh+kh-1;do repeat local gD,lD=Lc,(f9);if not(#gD>0X0)then else local G0=({});for Ze,ye in M,gD do for Y8,r8 in M,ye do if r8[0X1]==lD and r8[2]>=0 then local l8=r8[2];if not(not G0[l8])then else do(G0)[l8]={lD[l8]};end;end;(r8)[0X01]=G0[l8];do(r8)[0X2]=0X0001;end;end;end;end;end;until true;end;do return true,zh,kh;end;end;else for FJ=Sm[0X2],Sm[0X005]do f9[FJ]=nil;end;end;else if Gm>=20 then if Gm==21 then V9[Sm[6]]=f9[1];Sm=bc[W9];W9=W9+0X001;(f9)[0x1]=V9[Sm[0X6]];do W9=W9+1;end;W9=W9+0X001;Sm=bc[W9];do W9=W9+0x0001;end;local dN=(1);(f9)[2]=V9[Sm[6]];local iN=(nil);W9=W9+0X1;do(f9)[0x003]=true;end;do Sm=bc[W9];end;do W9=W9+1;end;local sN=Uc[Sm[5]];local XN=sN[0X05];local EN=#XN;do if EN>0X00 then iN={};do for qF=1,EN do local RF=(XN[qF]);if RF[1]==0 then do iN[qF-0X001]={f9,RF[0x002]};end;else do iN[qF-0x1]=jc[RF[0X0002]];end;end;end;end;(S)(Lc,iN);end;end;(f9)[4]=e3(sN,iN,V9);W9=W9+0X0001;g9=dN+4-1;(f9[dN])(E(f9,dN+1,g9));do g9=dN-1;end;Sm=bc[W9];W9=W9+0X1;(f9)[0X01]=V9[Sm[0X00006]];W9=W9+1;W9=W9+1;Sm=bc[W9];W9=W9+0X001;f9[0X00002]=V9[Sm[0X0006]];W9=W9+1;W9=W9+1;Sm=bc[W9];do W9=W9+0X001;end;do f9[2]=f9[2][Sm[0X001]];end;W9=W9+1;dN=0X001;f9[dN]=f9[dN](f9[dN+0x00001]);do g9=dN;end;Sm=bc[W9];W9=W9+0X0001;if not(not(f9[0X1]<=Sm[0X1]))then else do W9=Sm[0X0002];end;end;else(f9)[0X1]=V9[Sm[0X0006]];Sm=bc[W9];W9=W9+1;(f9)[0x00001]=f9[0X1][Sm[1]];Sm=bc[W9];W9=W9+0X1;if f9[0X01]then do W9=Sm[0X5];end;end;end;else end;end;end;else if not(Gm<0Xd)then if Gm>=14 then if Gm~=15 then f9[0x01]=V9[Sm[6]];local LR=(1);Sm=bc[W9];W9=W9+0X001;f9[1]=f9[0X00001][Sm[1]];do W9=W9+1;end;(f9)[2]=true;W9=W9+1;f9[LR]=f9[LR](f9[LR+0x00001]);g9=LR;do W9=W9+1;end;do(f9)[0]=f9[0X0001];end;Sm=bc[W9];do W9=W9+0X1;end;W9=Sm[0X05];else local uf=(jc[2]);f9[0X1]=uf[0x1][uf[2]];do W9=W9+0X01;end;do W9=W9+0X1;end;Sm=bc[W9];W9=W9+0X00001;do f9[0x1]=f9[0X1][Sm[0X1]];end;Sm=bc[W9];do W9=W9+1;end;do(f9)[1]=f9[1][Sm[0X1]];end;W9=W9+0x01;W9=W9+1;Sm=bc[W9];W9=W9+1;(f9)[0X001]=f9[0X1]<=Sm[1];Sm=bc[W9];W9=W9+1;if not f9[0x1]then do W9=Sm[5];end;end;end;else(f9)[2]=V9[Sm[6]];Sm=bc[W9];W9=W9+1;f9[0X2]=f9[2][Sm[1]];do W9=W9+1;end;W9=W9+0X001;Sm=bc[W9];W9=W9+1;f9[0X0002]=f9[2][Sm[0X1]];Sm=bc[W9];do W9=W9+0x1;end;if not(Sm[0X6]<f9[0X002])then W9=Sm[2];end;end;else if Gm~=12 then do f9[0X3]=V9[Sm[0X06]];end;Sm=bc[W9];W9=W9+0X01;(f9)[3]=f9[3][Sm[0X001]];W9=W9+0X00001;do W9=W9+0X01;end;Sm=bc[W9];W9=W9+1;(f9)[3]=f9[0x03][Sm[0X01]];W9=W9+0X00001;do W9=W9+0x01;end;Sm=bc[W9];do W9=W9+1;end;do if not(not(Sm[0X6]<f9[3]))then else W9=Sm[0X2];end;end;else local v0=(jc[0X0]);(f9)[0X0000]=v0[1][v0[0x00002]];do W9=W9+0X1;end;do W9=W9+1;end;Sm=bc[W9];W9=W9+0X00001;W9=Sm[0X5];end;end;end;else if not(Gm>=5)then if not(Gm>=2)then if Gm~=0x00001 then f9[0x01]=Sm[6];Sm=bc[W9];local DQ=(f9[1]);W9=W9+0X0001;local tQ=1;(f9)[tQ+0X1]=DQ;f9[tQ]=DQ[Sm[0X1]];Sm=bc[W9];W9=W9+0X0001;do f9[3]=V9[Sm[0X6]];end;W9=W9+0X1;W9=W9+0X1;do W9=W9+1;end;tQ=0X00001;do(f9)[tQ]=f9[tQ](f9[tQ+1],f9[tQ+2]);end;g9=tQ;W9=W9+0X1;do W9=W9+0X1;end;Sm=bc[W9];W9=W9+1;W9=Sm[5];else(f9)[1]=V9[Sm[0X006]];Sm=bc[W9];W9=W9+0X1;do(f9)[0X0002]=V9[Sm[0X0006]];end;local Wr=(1);W9=W9+1;do W9=W9+1;end;W9=W9+1;for LO=3,0X4 do do f9[LO]=nil;end;end;Sm=bc[W9];W9=W9+1;do f9[5]=Sm[6];end;do W9=W9+1;end;do g9=Wr+5-1;end;do(f9)[Wr]=f9[Wr](E(f9,Wr+0x1,g9));end;do g9=Wr;end;do Sm=bc[W9];end;W9=W9+1;if not(not f9[1])then else W9=Sm[5];end;end;else do if not(Gm<3)then if Gm~=0X4 then(f9)[1]=V9[Sm[6]];W9=W9+1;g9=0X1;f9[g9]();g9=g9-0X1;W9=W9+1;W9=W9+1;Sm=bc[W9];W9=W9+0X1;W9=Sm[0X5];else(f9)[Sm[0X002]]={E({},1,Sm[0X5])};end;else f9[1]=V9[Sm[0X06]];W9=W9+0X1;W9=W9+0X1;do Sm=bc[W9];end;W9=W9+1;local k5=(1);f9[2]=V9[Sm[0X6]];do Sm=bc[W9];end;W9=W9+0X001;f9[0X3]=V9[Sm[0X0006]];W9=W9+0X1;(f9[k5])(f9[k5+0x1],f9[k5+0X002]);g9=k5-0x1;Sm=bc[W9];W9=W9+1;W9=Sm[5];end;end;end;else do if Gm>=8 then if Gm<0X9 then do(f9)[1]=V9[Sm[0X6]];end;W9=W9+1;do W9=W9+1;end;do Sm=bc[W9];end;W9=W9+1;(f9)[2]=V9[Sm[0x6]];do Sm=bc[W9];end;W9=W9+0X1;(f9)[2]=f9[2][Sm[1]];local gO=0X00001;W9=W9+1;(f9)[gO]=f9[gO](f9[gO+0X01]);g9=gO;W9=W9+1;W9=W9+0X1;Sm=bc[W9];W9=W9+1;if not(f9[1]<=Sm[1])then W9=Sm[2];end;else if Gm==0Xa then do(f9)[Sm[0X2]]=o(f9[Sm[0X5]],f9[Sm[4]]);end;else(f9)[1]=Sm[0X0006];local oy=(0x00001);Sm=bc[W9];W9=W9+0X1;local ny=(f9[0X1]);do f9[oy+0X00001]=ny;end;(f9)[oy]=ny[Sm[1]];Sm=bc[W9];do W9=W9+0X01;end;(f9)[3]=V9[Sm[6]];W9=W9+1;oy=1;f9[oy]=f9[oy](f9[oy+0X0001],f9[oy+0X2]);g9=oy;Sm=bc[W9];W9=W9+0X1;W9=Sm[0X005];end;end;else if Gm>=6 then do if Gm==7 then f9[1]=V9[Sm[6]];W9=W9+1;W9=W9+1;W9=W9+0X1;f9[2]=nil;local XY=jc[2];Sm=bc[W9];local NY=(1);W9=W9+0X01;f9[3]=V9[Sm[0X6]];W9=W9+0X00001;do(f9)[NY]=f9[NY](f9[NY+1],f9[NY+0X2]);end;g9=NY;W9=W9+0X0001;XY[0X1][XY[0x2]]=f9[0X1];Sm=bc[W9];W9=W9+0x001;do f9[0x1]=V9[Sm[6]];end;W9=W9+1;do W9=W9+0X1;end;W9=W9+1;g9=1;(f9[g9])();g9=g9-0X0001;W9=W9+0X0001;W9=W9+0X00001;Sm=bc[W9];W9=W9+1;W9=Sm[5];else do if f9[Sm[5]]==f9[Sm[4]]then else do W9=Sm[2];end;end;end;end;end;else(f9)[0X0]=V9[Sm[6]];W9=W9+1;W9=W9+0X0001;Sm=bc[W9];W9=W9+0x1;do f9[0]=f9[0][Sm[0X1]];end;W9=W9+0X1;g9=0;f9[g9]=f9[g9]();W9=W9+1;local yk=(jc[0X000]);do yk[0X1][yk[2]]=f9[0];end;Sm=bc[W9];W9=W9+0X001;(f9)[0X0]=V9[Sm[0X6]];Sm=bc[W9];do W9=W9+0X1;end;do if not(f9[0])then else W9=Sm[5];end;end;end;end;end;end;end;end;end;end;end);if not(J9)then do if V(O9)~='s\116\114i\110\103'then q(O9,0);else do if r(O9,"\097t\116\101m\112t to\032\121i\101l\100 ac\114os\115\032\109etam\101\116hod\047C%-c\097ll \098\111undar\121")then return coroutine.yield();end;end;if r(O9,"^.-:%d+: ")then(q)("Luraph Script:"..(Qc[W9-0x0001]or"(internal)").."\058\032"..u(O9),0);else(q)(O9,0X00);end;end;end;else do if O9 then if Q9==1 then return f9[a9]();else return f9[a9](E(f9,a9+0X1,g9));end;elseif not(a9)then else do return E(f9,a9,Q9);end;end;end;end;end;end;end;end;end;else do if not(Sc<0X0a7)then if Sc==0xA8 then ic=function(...)local YS,XS=1,{};local OS=(k and k()or _ENV);local HS={[2]=Vc,[1]=XS};local vS=0;local rS,uS=q3(...);rS=rS-1;local bS=((OS==H and fc or OS));for pr=0,rS do if ac>pr then XS[pr]=uS[pr+0X1];else do break;end;end;end;if not nc then do uS=nil;end;elseif not(Ac)then else do(XS)[ac]={n=rS>=ac and rS-ac+1 or 0X0,E(uS,ac+1,rS+0X0001)};end;end;if bS==OS then else if not(s)then _ENV=bS;else s(ic,bS);end;end;local fS,PS,BS,jS=c(function()while true do local Wo=(bc[YS]);local wo=Wo[0x003];YS=YS+1;if not(wo>=7)then if wo<3 then do if wo>=0X1 then if wo~=0X02 then(XS)[Wo[0X002]]={E({},1,Wo[5])};else local wX=(Wo[0X2]);local VX,lX=XS[wX]();do if not(VX)then else YS=Wo[0X5];XS[wX+0X3]=lX;end;end;end;else end;end;else if wo<0x005 then if wo~=4 then(XS)[Wo[0X2]]=bS[Wo[6]];else local c6=Wo[2];local W6,a6=XS[c6]();if W6 then for k9=0X001,Wo[0X4]do(XS)[c6+k9]=a6[k9];end;YS=Wo[0X0005];end;end;else if wo==0X00006 then(XS)[Wo[0x2]]=-XS[Wo[0x5]];else(XS)[Wo[2]]=w(XS[Wo[5]],XS[Wo[0X4]]);end;end;end;else do if wo<10 then if wo>=0X8 then if wo==0X09 then(XS)[Wo[0X2]]=Wo[6];else XS[Wo[0X002]]=XS[Wo[5]]/XS[Wo[4]];end;else XS[Wo[0X00002]]=XS[Wo[5]]<XS[Wo[4]];end;else if wo<0Xc then do if wo==11 then local xq=Uc[Wo[5]];local Pq=nil;local Gq=xq[5];local Zq=#Gq;do if Zq>0 then Pq={};for Ys=0X1,Zq do local ts=Gq[Ys];if ts[0x1]~=0 then(Pq)[Ys-0X1]=jc[ts[0X2]];else do(Pq)[Ys-0X00001]={XS,ts[2]};end;end;end;S(Lc,Pq);end;end;do(XS)[Wo[2]]=e3(xq,Pq,bS);end;else(XS)[Wo[2]]=XS[Wo[5]]%XS[Wo[4]];end;end;else if wo==13 then XS[0]=bS[Wo[0X00006]];Wo=bc[YS];do YS=YS+0X1;end;XS[0x00000]=XS[0X0][Wo[0X001]];do YS=YS+0X1;end;local xD=0;YS=YS+0X00001;Wo=bc[YS];local oD=Uc[Wo[0X05]];do YS=YS+0X1;end;local ID,BD=oD[5],nil;local LD=#ID;do if LD>0x00000 then do BD={};end;do for Pz=1,LD do local qz=ID[Pz];if qz[0X1]~=0X0 then BD[Pz-1]=jc[qz[0X2]];else do(BD)[Pz-0x1]={XS,qz[0X2]};end;end;end;end;(S)(Lc,BD);end;end;do(XS)[1]=e3(oD,BD,bS);end;YS=YS+1;(XS[xD])(XS[xD+1]);do vS=xD-0x01;end;YS=YS+1;do repeat local my,jy=Lc,XS;if not(#my>0X0)then else local x0={};for Yq,Jq in M,my do do for hh,Kh in M,Jq do if Kh[0X1]==jy and Kh[2]>=0X00000 then local S4=Kh[2];if not x0[S4]then x0[S4]={jy[S4]};end;Kh[0X1]=x0[S4];(Kh)[0x02]=1;end;end;end;end;end;until true;end;do return;end;else YS=Wo[0X005];end;end;end;end;end;end;end);if not(fS)then do if V(PS)~='st\114\105n\103'then(q)(PS,0);else if not(r(PS,'a\116\116e\109\112\116 \116\111\032\121i\101\108d\032\097\099\114\111s\115\032m\101\116a\109\101\116h\111d/\067\037\045cal\108\032b\111u\110da\114\121'))then else return coroutine.yield();end;do if not(r(PS,"^.-:%d+: "))then q(PS,0X000);else q("Luraph Script:"..(Qc[YS-1]or'(int\101r\110\097\108\041')..':\032'..u(PS),0X000);end;end;end;end;else if PS then if jS~=1 then return XS[BS](E(XS,BS+0X1,vS));else return XS[BS]();end;elseif not(BS)then else do return E(XS,BS,jS);end;end;end;end;else ic=function(...)local hN,MN=0X0001,({});local LN=((k and k()or _ENV));local ON,bN=q3(...);local XN=0;local sN=((LN==H and fc or LN));local ZN={[1]=MN,[2]=Vc};ON=ON-0X1;for Hw=0x000,ON do do if ac>Hw then(MN)[Hw]=bN[Hw+1];else break;end;end;end;if not nc then bN=nil;elseif not(Ac)then else(MN)[ac]={n=ON>=ac and ON-ac+0X1 or 0,E(bN,ac+1,ON+0X001)};end;if sN~=LN then if s then s(ic,sN);else _ENV=sN;end;end;local tN,uN,KN,SN=c(function()do while true do local Qz=bc[hN];local kz=Qz[3];hN=hN+1;if not(kz<9)then if kz<13 then if kz>=11 then do if kz~=0Xc then(MN)[0]=sN[Qz[6]];hN=hN+1;XN=0X00000;do(MN)[XN]=MN[XN]();end;hN=hN+1;(MN)[0]=not MN[0];Qz=bc[hN];do hN=hN+1;end;hN=Qz[0x5];else(MN)[Qz[2]]=Qz[6];end;end;else if kz==0X000a then else MN[Qz[0X002]]=MN[Qz[0X05]]*MN[Qz[0X4]];end;end;else if kz>=15 then do if not(kz>=0X10)then local rC,MC=Qz[2],((Qz[4]-1)*0x32);local lC=MN[rC];for Qj=0x1,Qz[0X5]do do lC[MC+Qj]=MN[rC+Qj];end;end;else do if kz==17 then do MN[Qz[2]]=MN[Qz[0X005]][MN[Qz[0X00004]]];end;else(MN)[Qz[0X002]]=MN[Qz[0X05]]>MN[Qz[4]];end;end;end;end;else if kz==14 then if not MN[Qz[0x00002]]then hN=Qz[0X0005];end;else repeat local pC,eC=Lc,MN;if#pC>0X0 then local Uv=({});do for NF,RF in M,pC do for CS,IS in M,RF do if not(IS[1]==eC and IS[0X00002]>=0X0)then else local fi=(IS[2]);do if not Uv[fi]then(Uv)[fi]={eC[fi]};end;end;IS[0X0001]=Uv[fi];IS[0X2]=1;end;end;end;end;end;until true;return;end;end;end;else if kz>=4 then do if kz<0x6 then if kz~=0X5 then hN=Qz[0X5];else do MN[Qz[0X002]]={E({},0x00001,Qz[5])};end;end;else if not(kz<0X007)then if kz~=0X8 then local Qy=jc[0X0];(MN)[0]=Qy[1][Qy[2]];do Qz=bc[hN];end;do hN=hN+0X1;end;local hy=MN[0X00000];local Jy=0;do(MN)[Jy+0x1]=hy;end;(MN)[Jy]=hy[Qz[1]];do hN=hN+1;end;Jy=0;(MN)[Jy]=MN[Jy](MN[Jy+1]);do XN=Jy;end;hN=hN+1;hN=hN+1;do Qz=bc[hN];end;hN=hN+0x1;do if not(not MN[0])then else hN=Qz[0x5];end;end;else(MN)[Qz[2]]=MN[Qz[0x005]]%MN[Qz[0x04]];end;else do MN[0X0]=sN[Qz[6]];end;Qz=bc[hN];hN=hN+0X001;(MN)[0X0000]=MN[0x0][Qz[1]];Qz=bc[hN];hN=hN+0x1;hN=Qz[5];end;end;end;else do if not(kz>=2)then do if kz==0X001 then repeat local Hx,kx=Lc,MN;if#Hx>0X0000 then local I4=({});do for bg,sg in M,Hx do for eX,rX in M,sg do do if rX[0x1]==kx and rX[2]>=0 then local Dj=rX[2];if not I4[Dj]then do(I4)[Dj]={kx[Dj]};end;end;(rX)[0X1]=I4[Dj];(rX)[2]=1;end;end;end;end;end;end;until true;local Ts=(Qz[2]);return false,Ts,Ts;else for nz=Qz[2],Qz[5]do MN[nz]=nil;end;end;end;else if kz==0X3 then local r6=(Uc[Qz[0X5]]);local D6=(r6[0X5]);local L6,I6=#D6,nil;if L6>0X0 then I6={};do for b7=0x1,L6 do local S7=D6[b7];do if S7[1]~=0 then(I6)[b7-1]=jc[S7[2]];else I6[b7-1]={MN,S7[2]};end;end;end;end;(S)(Lc,I6);end;(MN)[Qz[2]]=e3(r6,I6,sN);else MN[Qz[2]]=sN[Qz[6]];end;end;end;end;end;end;end;end);do if not(tN)then if V(uN)~="string"then q(uN,0X00000);else if r(uN,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if r(uN,"^.-:%d+: ")then q("Luraph Script:"..(Qc[hN-0X0001]or"(\105n\116ernal)")..": "..u(uN),0x0);else q(uN,0);end;end;else if uN then do if SN~=0X1 then return MN[KN](E(MN,KN+0X1,XN));else return MN[KN]();end;end;elseif KN then do return E(MN,KN,SN);end;end;end;end;end;end;else if Sc~=166 then do ic=function(...)local cq,kq=1,{};local eq=({[1]=kq,[2]=Vc});local Nq=(k and k()or _ENV);local zq=(Nq==H and fc or Nq);local sq,tq=q3(...);do sq=sq-1;end;do for Nd=0X00,sq do if not(ac>Nd)then break;else do(kq)[Nd]=tq[Nd+0X0001];end;end;end;end;local Xq=0;if not nc then tq=nil;elseif not(Ac)then else kq[ac]={n=sq>=ac and sq-ac+1 or 0X0,E(tq,ac+0X1,sq+0X01)};end;do if zq~=Nq then if not(s)then _ENV=zq;else s(ic,zq);end;end;end;local Gq,Mq,vq,Pq=c(function()do while true do local Rk=bc[cq];local Uk=(Rk[3]);cq=cq+0X1;do if Uk>=38 then if not(Uk<57)then do if Uk>=0X43 then if Uk<72 then if Uk>=69 then if not(Uk<0X46)then if Uk~=0X47 then kq[5]=false;Rk=bc[cq];do cq=cq+1;end;do(zq)[Rk[6]]=kq[5];end;cq=cq+1;repeat local VD,qD=Lc,(kq);if#VD>0 then local mo=({});for ra,Ia in M,VD do for PA,FA in M,Ia do if not(FA[1]==qD and FA[0X00002]>=3)then else local Rp=(FA[0X2]);if not mo[Rp]then(mo)[Rp]={qD[Rp]};end;FA[1]=mo[Rp];do(FA)[0x2]=1;end;end;end;end;end;until true;Rk=bc[cq];cq=cq+0x1;do cq=Rk[0X5];end;else do for EA=Rk[2],Rk[0x5]do(kq)[EA]=nil;end;end;end;else(kq)[4]=zq[Rk[6]];do cq=cq+1;end;cq=cq+0x01;Rk=bc[cq];do cq=cq+0X1;end;do if kq[4]then cq=Rk[0X5];end;end;end;else if Uk~=0X44 then if kq[Rk[5]]~=Rk[0X1]then else cq=Rk[0x2];end;else do kq[0x5]=nil;end;Rk=bc[cq];cq=cq+0x1;zq[Rk[6]]=kq[5];Rk=bc[cq];cq=cq+0X1;do kq[5]=zq[Rk[6]];end;Rk=bc[cq];cq=cq+0x1;(kq)[0X006]=Rk[6];local lr=(0X5);cq=cq+1;do kq[lr]=kq[lr](kq[lr+0X1]);end;do Xq=lr;end;Rk=bc[cq];cq=cq+0X1;if not(not kq[0X5])then else do cq=Rk[5];end;end;end;end;else do if Uk<74 then if Uk~=73 then(kq)[0x4]=zq[Rk[0X6]];do cq=cq+1;end;cq=cq+0X00001;Rk=bc[cq];cq=cq+1;do(kq[0x04])[Rk[0x00006]]=Rk[1];end;Rk=bc[cq];cq=cq+1;do cq=Rk[5];end;else do if not(not(Rk[6]<kq[Rk[0x4]]))then else cq=Rk[0X02];end;end;end;else if Uk>=0X4B then do if Uk==76 then if kq[Rk[5]]<kq[Rk[0X004]]then cq=Rk[2];end;else kq[Rk[2]]=kq[Rk[0x5]]^kq[Rk[0X4]];end;end;else(kq)[2]=zq[Rk[0X0006]];cq=cq+0X1;cq=cq+0X1;do Rk=bc[cq];end;cq=cq+0X0001;do(kq)[2]=kq[0X2][Rk[0X1]];end;Rk=bc[cq];do cq=cq+1;end;do if not kq[0X00002]then cq=Rk[5];end;end;end;end;end;end;else if not(Uk<62)then if Uk>=64 then if Uk>=0x41 then if Uk==66 then kq[3]=zq[Rk[0X0006]];Rk=bc[cq];do cq=cq+1;end;kq[0X00003]=kq[3][Rk[1]];Rk=bc[cq];cq=cq+1;if not(not kq[3])then else cq=Rk[5];end;else kq[0X5]=zq[Rk[0X6]];cq=cq+1;Xq=0X05;(kq)[Xq]=kq[Xq]();cq=cq+0X1;cq=cq+1;do Rk=bc[cq];end;cq=cq+0X1;do if kq[0x005]then do cq=Rk[5];end;end;end;end;else kq[0X2]=zq[Rk[6]];do Rk=bc[cq];end;do cq=cq+0X001;end;(kq)[2]=kq[2][Rk[1]];cq=cq+1;do cq=cq+1;end;Rk=bc[cq];do cq=cq+1;end;if not kq[2]then cq=Rk[0x00005];end;end;else if Uk==63 then if kq[Rk[5]]~=Rk[1]then cq=Rk[2];end;else(kq)[0X4]=zq[Rk[6]];do cq=cq+0X1;end;cq=cq+1;Rk=bc[cq];cq=cq+0X1;(kq)[4]=kq[0X0004][Rk[1]];do cq=cq+1;end;do cq=cq+0x1;end;Rk=bc[cq];cq=cq+1;(kq)[0x0004]=kq[4][Rk[1]];Rk=bc[cq];do cq=cq+1;end;do(kq)[4]=kq[0X4][Rk[0X1]];end;cq=cq+1;cq=cq+0X1;Rk=bc[cq];do cq=cq+0x01;end;if not(not(Rk[0X6]<=kq[0X04]))then else do cq=Rk[2];end;end;end;end;else if Uk<0X0003B then do if Uk~=0X3A then local Hr=(jc[0x0000]);do(kq)[0X007]=Hr[0X1][Hr[2]];end;local Lr=7;cq=cq+1;do cq=cq+0X1;end;do Rk=bc[cq];end;do cq=cq+0X00001;end;local Vr=kq[0X7];(kq)[Lr+0x1]=Vr;(kq)[Lr]=Vr[Rk[0x1]];cq=cq+1;Lr=7;do(kq)[Lr]=kq[Lr](kq[Lr+1]);end;Xq=Lr;Rk=bc[cq];cq=cq+0X1;if kq[0X07]then do cq=Rk[5];end;end;else local pb=jc[0X0];(kq)[0X0003]=pb[0X0001][pb[2]];do cq=cq+0X1;end;cq=cq+0X1;do Rk=bc[cq];end;local ib=kq[0X3];cq=cq+1;local Jb=(3);kq[Jb+0x01]=ib;do kq[Jb]=ib[Rk[1]];end;cq=cq+1;Jb=3;(kq[Jb])(kq[Jb+0X1]);Xq=Jb-0X001;cq=cq+0X1;cq=cq+1;cq=cq+1;repeat local XN,xN=Lc,(kq);if#XN>0X0 then local J4={};for gr,Vr in M,XN do do for Cq,Fq in M,Vr do if not(Fq[0X1]==xN and Fq[2]>=2)then else local y2=Fq[2];if not J4[y2]then(J4)[y2]={xN[y2]};end;(Fq)[0X1]=J4[y2];do Fq[2]=1;end;end;end;end;end;end;until true;Rk=bc[cq];cq=cq+1;cq=Rk[5];end;end;else if not(Uk<60)then if Uk==61 then if kq[Rk[2]]then cq=Rk[5];end;else(kq)[6]=kq[0X00005][Rk[0x1]];cq=cq+1;cq=cq+0X1;do Rk=bc[cq];end;cq=cq+1;if kq[0X0006]==Rk[1]then else cq=Rk[0X2];end;end;else(kq)[4]=zq[Rk[6]];do cq=cq+0x01;end;do cq=cq+0X001;end;local ar=(4);cq=cq+1;(kq)[0x05]=kq[0x0003];do cq=cq+1;end;do kq[ar]=kq[ar](kq[ar+1]);end;do Xq=ar;end;Rk=bc[cq];do cq=cq+1;end;if kq[4]~=Rk[1]then cq=Rk[0X00002];end;end;end;end;end;end;else if Uk<47 then do if not(Uk>=0X02a)then if Uk>=40 then if Uk~=0X029 then kq[Rk[0X0002]]=kq[Rk[5]][Rk[1]];else(kq)[7]=kq[5][Rk[0X1]];do cq=cq+1;end;cq=cq+1;Rk=bc[cq];cq=cq+1;(kq)[0x0007]=kq[0X7][Rk[0x0001]];cq=cq+1;cq=cq+0X001;Rk=bc[cq];cq=cq+0X01;if not(Rk[0X0006]<=kq[7])then else do cq=Rk[2];end;end;end;else if Uk==0x27 then do(kq)[0X02]=zq[Rk[0X6]];end;cq=cq+0x01;cq=cq+0X1;Rk=bc[cq];cq=cq+0X1;local OK=2;(kq)[3]=Rk[0x6];cq=cq+0X1;(kq)[OK]=kq[OK](kq[OK+1]);do Xq=OK;end;do Rk=bc[cq];end;cq=cq+0X1;do if not kq[2]then cq=Rk[5];end;end;else(kq)[0x4]=zq[Rk[0X006]];Rk=bc[cq];cq=cq+0X1;kq[0X4]=kq[0x04][Rk[1]];cq=cq+0x1;do cq=cq+0X1;end;Rk=bc[cq];do cq=cq+0X1;end;if not kq[0X4]then cq=Rk[0X0005];end;end;end;else if Uk<0X02c then if Uk~=0X02b then do kq[5]=zq[Rk[0X6]];end;local sv=(5);Rk=bc[cq];cq=cq+0X001;do(kq)[0x5]=kq[5][Rk[1]];end;Rk=bc[cq];cq=cq+1;local uv=(kq[5]);kq[sv+0X1]=uv;kq[sv]=uv[Rk[1]];Rk=bc[cq];cq=cq+0X1;do(kq)[7]=Rk[0X00006];end;cq=cq+0X00001;sv=0x005;kq[sv]=kq[sv](kq[sv+0X1],kq[sv+2]);Xq=sv;Rk=bc[cq];cq=cq+1;do if not kq[0x5]then do cq=Rk[5];end;end;end;else local Gx=kq[Rk[0X5]]/kq[Rk[0x4]];kq[Rk[0x2]]=Gx-Gx%0X1;end;else if not(Uk>=0X2D)then kq[5]=zq[Rk[6]];do cq=cq+1;end;do cq=cq+0X1;end;do Rk=bc[cq];end;do cq=cq+0X1;end;local P0=(0X5);(kq)[0X6]=Rk[0X0006];cq=cq+0X0001;do(kq)[P0]=kq[P0](kq[P0+1]);end;Xq=P0;cq=cq+1;cq=cq+0x001;cq=cq+0X00001;do kq[0X0]=kq[5];end;do Rk=bc[cq];end;do cq=cq+0X01;end;cq=Rk[0X05];else if Uk~=0X2E then(kq)[0X2]=zq[Rk[0X6]];cq=cq+1;cq=cq+0X1;Rk=bc[cq];cq=cq+1;do if not(not kq[0X2])then else do cq=Rk[0x00005];end;end;end;else end;end;end;end;end;else if not(Uk>=0X34)then if not(Uk>=0X31)then if Uk==0X30 then if not kq[Rk[2]]then do cq=Rk[5];end;end;else do(kq)[4]=true;end;Rk=bc[cq];cq=cq+1;zq[Rk[6]]=kq[0X4];Rk=bc[cq];cq=cq+0X1;cq=Rk[0x00005];end;else if not(Uk>=0x032)then do(kq)[0x006]=kq[3][Rk[0X1]];end;local iU=2;do cq=cq+0x1;end;cq=cq+1;do Rk=bc[cq];end;cq=cq+0X00001;kq[0X6]=kq[6][Rk[1]];Rk=bc[cq];do cq=cq+1;end;do(zq)[Rk[6]]=kq[0X6];end;Rk=bc[cq];cq=cq+0X01;(kq[3])[Rk[6]]=Rk[1];Rk=bc[cq];cq=cq+0X1;(kq[3])[Rk[6]]=Rk[1];Rk=bc[cq];local ZU=0X06;do cq=cq+0X1;end;(kq[0X03])[Rk[0X06]]=Rk[1];Rk=bc[cq];do cq=cq+1;end;local kU=(kq[3]);(kq)[ZU+0X0001]=kU;do kq[ZU]=kU[Rk[0X1]];end;Rk=bc[cq];cq=cq+0x1;(kq)[8]=Rk[6];cq=cq+1;ZU=0X06;(kq[ZU])(kq[ZU+1],kq[ZU+2]);do Xq=ZU-1;end;Rk=bc[cq];cq=cq+1;kq[0X00006]=kq[3][Rk[0X1]];Rk=bc[cq];cq=cq+0X001;(kq[0X06])[Rk[0x00006]]=Rk[0X1];do Rk=bc[cq];end;cq=cq+1;(kq)[6]=zq[Rk[6]];Rk=bc[cq];cq=cq+1;do(kq)[0x6]=kq[0x006][Rk[1]];end;Rk=bc[cq];cq=cq+0X00001;kq[0X6]=kq[6][Rk[1]];cq=cq+1;cq=cq+0x01;Rk=bc[cq];cq=cq+1;ZU=6;kU=kq[6];kq[ZU+1]=kU;kq[ZU]=kU[Rk[0X1]];Rk=bc[cq];cq=cq+1;kq[8]=Rk[0x6];cq=cq+0X1;ZU=6;kq[ZU](kq[ZU+1],kq[ZU+2]);Xq=ZU-0X1;do Rk=bc[cq];end;cq=cq+0X01;kq[6]=zq[Rk[6]];cq=cq+0X1;cq=cq+0x01;Rk=bc[cq];cq=cq+0X1;(kq)[0X7]=zq[Rk[0X6]];cq=cq+0X1;cq=cq+0X1;Rk=bc[cq];do cq=cq+1;end;(kq)[8]=zq[Rk[6]];Rk=bc[cq];do cq=cq+0x1;end;(kq)[0X008]=kq[8][Rk[1]];cq=cq+0x1;ZU=7;local EU=(0x0);if iU~=0 then do Xq=ZU+iU-1;end;end;local eU,DU=nil,(nil);do if iU==1 then eU,DU=q3(kq[ZU]());else eU,DU=q3(kq[ZU](E(kq,ZU+0X00001,Xq)));end;end;if EU==1 then Xq=ZU-0X0001;else if EU==0x0 then eU=eU+ZU-0X00001;do Xq=eU;end;else eU=ZU+EU-0X2;Xq=eU+0x01;end;local Qq=0;do for Ag=ZU,eU do do Qq=Qq+1;end;(kq)[Ag]=DU[Qq];end;end;end;cq=cq+1;cq=cq+1;cq=cq+0X001;do ZU=6;end;kq[ZU](E(kq,ZU+1,Xq));do Xq=ZU-0X01;end;Rk=bc[cq];do cq=cq+0X01;end;(kq)[0X6]=zq[Rk[6]];Rk=bc[cq];do cq=cq+1;end;do(kq)[6]=kq[0X006][Rk[1]];end;Rk=bc[cq];cq=cq+0X1;(kq)[0X00007]=Rk[6];cq=cq+0X01;ZU=0X006;(kq[ZU])(kq[ZU+0x1]);do Xq=ZU-1;end;cq=cq+0X1;cq=cq+1;Rk=bc[cq];do cq=cq+0X01;end;if not kq[2]then do cq=Rk[0X5];end;end;else do if Uk~=0X33 then do repeat local bD,YD=Lc,kq;do if#bD>0 then local nL=({});for wq,gq in M,bD do for fl,El in M,gq do if El[1]==YD and El[2]>=0X000 then local xB=El[2];if not(not nL[xB])then else nL[xB]={YD[xB]};end;(El)[1]=nL[xB];(El)[2]=1;end;end;end;end;end;until true;end;return;else kq[5]=zq[Rk[0X0006]];cq=cq+0x001;cq=cq+1;Rk=bc[cq];do cq=cq+1;end;kq[0X00005]=kq[5][Rk[1]];Rk=bc[cq];do cq=cq+1;end;if not(kq[0X5])then else cq=Rk[5];end;end;end;end;end;else do if Uk<0x36 then if Uk==0x35 then(kq)[0X00003]=zq[Rk[6]];cq=cq+1;cq=cq+0x1;Rk=bc[cq];cq=cq+0x1;if kq[3]then cq=Rk[5];end;else(kq)[2]=kq[0X0];Rk=bc[cq];do cq=cq+1;end;zq[Rk[0X6]]=kq[2];do cq=cq+1;end;kq[0x2]=true;cq=cq+1;(kq)[3]=nil;Rk=bc[cq];cq=cq+1;kq[0X0004]=zq[Rk[6]];cq=cq+0X00001;do cq=cq+0X1;end;Rk=bc[cq];cq=cq+0X1;(kq)[4]=kq[0X4][Rk[0X0001]];Rk=bc[cq];cq=cq+0x01;if kq[0X004]then do cq=Rk[0x0005];end;end;end;else if Uk>=55 then if Uk==56 then(kq)[0X00005]=kq[3][Rk[1]];cq=cq+0x1;cq=cq+1;Rk=bc[cq];cq=cq+0x1;kq[6]=kq[0X3][Rk[0X001]];cq=cq+1;do cq=cq+1;end;Rk=bc[cq];cq=cq+0X1;kq[6]=kq[6][Rk[1]];do cq=cq+0X001;end;do cq=cq+1;end;Rk=bc[cq];cq=cq+0X1;kq[0X5][Rk[6]]=kq[0X6];Rk=bc[cq];do cq=cq+0x1;end;cq=Rk[5];else kq[5]=zq[Rk[0X00006]];do Rk=bc[cq];end;do cq=cq+1;end;do kq[5][Rk[6]]=Rk[1];end;Rk=bc[cq];cq=cq+1;kq[5]=zq[Rk[6]];local XL=(0x0005);cq=cq+1;Xq=5;(kq[Xq])();Xq=Xq-1;cq=cq+1;cq=cq+1;Rk=bc[cq];cq=cq+1;(kq)[5]=zq[Rk[0X6]];cq=cq+0x1;cq=cq+1;Rk=bc[cq];cq=cq+0X00001;do kq[0X6]=zq[Rk[0X00006]];end;cq=cq+0X1;do cq=cq+0X001;end;cq=cq+1;(kq[XL])(kq[XL+1]);do Xq=XL-1;end;cq=cq+0x1;cq=cq+1;Rk=bc[cq];do cq=cq+1;end;cq=Rk[0x5];end;else do(kq)[0X001]=zq[Rk[6]];end;Rk=bc[cq];cq=cq+0X01;do kq[0x00002]=Rk[6];end;do cq=cq+0X0001;end;do(kq)[0X3]=true;end;cq=cq+1;local zf=1;do kq[zf]=kq[zf](kq[zf+1],kq[zf+0X2]);end;do Xq=zf;end;cq=cq+0x1;cq=cq+0X01;do Rk=bc[cq];end;cq=cq+0X001;if kq[1]==Rk[1]then do cq=Rk[0x0002];end;end;end;end;end;end;end;end;else do if not(Uk<19)then if Uk<28 then if not(Uk>=23)then do if Uk>=0x15 then if Uk==0X16 then kq[4]=zq[Rk[6]];do Rk=bc[cq];end;do cq=cq+0X1;end;kq[0X4][Rk[0X6]]=Rk[1];do Rk=bc[cq];end;cq=cq+0X1;(kq)[4]=zq[Rk[0X6]];cq=cq+0X1;do cq=cq+0X1;end;Rk=bc[cq];do cq=cq+0X1;end;if not kq[0X04]then do cq=Rk[5];end;end;else(kq)[0x4]=zq[Rk[0X6]];do Rk=bc[cq];end;cq=cq+0X1;kq[0X0004]=kq[0X0004][Rk[1]];cq=cq+0X1;do cq=cq+0X0001;end;do Rk=bc[cq];end;cq=cq+1;if not kq[4]then cq=Rk[0X5];end;end;else do if Uk==0X14 then do kq[0X4]=zq[Rk[6]];end;cq=cq+0X1;cq=cq+0X1;Rk=bc[cq];cq=cq+1;local ub=4;do(kq)[0X005]=Rk[6];end;cq=cq+0x0001;kq[0x06]=true;cq=cq+1;(kq)[ub]=kq[ub](kq[ub+1],kq[ub+2]);Xq=ub;do Rk=bc[cq];end;cq=cq+0X00001;if not(kq[0X00004])then else do cq=Rk[5];end;end;else local O4,k4=0X3,(kq[0X02]);kq[O4+0X1]=k4;(kq)[O4]=k4[Rk[1]];Rk=bc[cq];do cq=cq+1;end;kq[0X5]=Rk[6];cq=cq+1;O4=0x3;kq[O4]=kq[O4](kq[O4+1],kq[O4+2]);Xq=O4;cq=cq+0X1;cq=cq+0X1;do Rk=bc[cq];end;do cq=cq+1;end;if not kq[3]then do cq=Rk[0x005];end;end;end;end;end;end;else if not(Uk>=25)then do if Uk~=0X0018 then(kq)[3]=true;Rk=bc[cq];do cq=cq+0X00001;end;(zq)[Rk[0X006]]=kq[3];Rk=bc[cq];cq=cq+0X00001;do cq=Rk[0X5];end;else(kq)[Rk[0X00002]]=w(kq[Rk[5]],kq[Rk[4]]);end;end;else if not(Uk>=0x01A)then(kq)[Rk[0x2]]=kq[Rk[5]]<=kq[Rk[0X4]];else if Uk~=0X1b then if not(not(Rk[0X6]<=kq[Rk[4]]))then else cq=Rk[2];end;else(kq)[2]=zq[Rk[6]];cq=cq+0x1;cq=cq+1;Rk=bc[cq];cq=cq+0X1;(kq)[2]=kq[2][Rk[0x1]];Rk=bc[cq];do cq=cq+0X0001;end;if not(kq[2])then else do cq=Rk[5];end;end;end;end;end;end;else if Uk<33 then if not(Uk<30)then if Uk>=31 then if Uk~=32 then(kq)[0X0]=zq[Rk[6]];cq=cq+0X01;cq=cq+0X00001;Rk=bc[cq];do cq=cq+0X01;end;local LV=0X00000;kq[0X1]=Rk[0X00006];cq=cq+1;kq[LV]=kq[LV](kq[LV+0x1]);Xq=LV;do Rk=bc[cq];end;cq=cq+0X1;if kq[0X00000]then cq=Rk[0X5];end;else if not(kq[Rk[0X5]]<Rk[0X1])then else cq=Rk[0x2];end;end;else(kq)[0X5]=kq[2];Rk=bc[cq];cq=cq+1;local oS=5;(zq)[Rk[0x6]]=kq[5];cq=cq+0X001;local cS=(jc[0X0]);(kq)[0X5]=cS[1][cS[0x2]];cq=cq+1;cq=cq+0X0001;Rk=bc[cq];cq=cq+0x001;local XS=(kq[0X5]);kq[oS+0X1]=XS;kq[oS]=XS[Rk[1]];cq=cq+0x1;oS=5;(kq[oS])(kq[oS+0X0001]);Xq=oS-1;cq=cq+0X1;cq=cq+0X001;cq=cq+1;do(kq)[5]=true;end;do Rk=bc[cq];end;do cq=cq+0X01;end;do(zq)[Rk[6]]=kq[0X0005];end;Rk=bc[cq];do cq=cq+0x1;end;do kq[0X00005]=zq[Rk[6]];end;do Rk=bc[cq];end;do cq=cq+0x1;end;kq[0x6]=kq[3][Rk[0x00001]];cq=cq+1;cq=cq+1;do Rk=bc[cq];end;do cq=cq+0x1;end;(kq)[0X6]=kq[0x6][Rk[0X1]];Rk=bc[cq];cq=cq+1;kq[7]=zq[Rk[0X6]];cq=cq+1;do cq=cq+1;end;Rk=bc[cq];do cq=cq+1;end;do kq[0X7]=kq[7][Rk[0X1]];end;cq=cq+0X0001;cq=cq+1;Rk=bc[cq];cq=cq+1;kq[8]=zq[Rk[0X6]];Rk=bc[cq];do cq=cq+0X1;end;(kq)[0X00008]=kq[0x8][Rk[1]];do Rk=bc[cq];end;cq=cq+0x1;(kq)[0X09]=Rk[0x6];Rk=bc[cq];cq=cq+1;do kq[10]=Rk[6];end;cq=cq+1;oS=8;(kq)[oS]=kq[oS](kq[oS+0X001],kq[oS+0X2]);Xq=oS;do Rk=bc[cq];end;cq=cq+1;(kq)[0X8]=kq[8]/Rk[0X01];Rk=bc[cq];cq=cq+0X1;do kq[9]=Rk[0X6];end;Rk=bc[cq];cq=cq+1;(kq)[10]=zq[Rk[6]];cq=cq+1;cq=cq+0X1;Rk=bc[cq];cq=cq+1;kq[10]=kq[0X0000a][Rk[0x0001]];Rk=bc[cq];cq=cq+0x00001;kq[0X000b]=Rk[6];do Rk=bc[cq];end;cq=cq+0X001;do(kq)[0XC]=Rk[6];end;do cq=cq+1;end;do oS=0X000a;end;kq[oS]=kq[oS](kq[oS+1],kq[oS+0X02]);Xq=oS;cq=cq+1;cq=cq+1;Rk=bc[cq];cq=cq+0X1;kq[10]=kq[0Xa]/Rk[0X01];cq=cq+1;oS=7;do Xq=oS+4-1;end;kq[oS]=kq[oS](E(kq,oS+0X1,Xq));local JS=nil;Xq=oS;do cq=cq+1;end;(kq)[6]=kq[6]+kq[0X7];do cq=cq+1;end;do kq[7]=true;end;Rk=bc[cq];cq=cq+0x1;local OS=Uc[Rk[0X5]];local iS=OS[0X00005];local pS=#iS;do if pS>0 then JS={};for Qv=0X1,pS do local gv=iS[Qv];do if gv[0X1]==0 then do(JS)[Qv-0X00001]={kq,gv[2]};end;else JS[Qv-1]=jc[gv[2]];end;end;end;(S)(Lc,JS);end;end;kq[0X0008]=e3(OS,JS,zq);do cq=cq+1;end;oS=0X5;Xq=oS+4-1;kq[oS](E(kq,oS+0X1,Xq));Xq=oS-0X0001;cq=cq+0X1;cq=cq+0X1;Rk=bc[cq];cq=cq+1;do kq[0X0005]=zq[Rk[6]];end;cq=cq+0X1;cq=cq+1;cq=cq+1;Xq=5;kq[Xq]();Xq=Xq-1;Rk=bc[cq];cq=cq+0X0001;do kq[5]=zq[Rk[6]];end;Rk=bc[cq];cq=cq+1;do kq[0X0006]=kq[3][Rk[0X00001]];end;do cq=cq+0X001;end;oS=0x5;do kq[oS]=kq[oS](kq[oS+1]);end;Xq=oS;cq=cq+0X1;cq=cq+1;Rk=bc[cq];do cq=cq+1;end;if not kq[0X0005]then cq=Rk[5];end;end;else if Uk~=29 then(kq)[6]=zq[Rk[6]];local c8=6;cq=cq+0X1;cq=cq+0X01;Rk=bc[cq];cq=cq+1;kq[0X0007]=Rk[0X06];do cq=cq+1;end;(kq[c8])(kq[c8+0x01]);Xq=c8-1;do Rk=bc[cq];end;do cq=cq+0X1;end;kq[6]=zq[Rk[6]];Rk=bc[cq];do cq=cq+1;end;(kq)[7]=Rk[6];cq=cq+0X01;c8=6;(kq[c8])(kq[c8+1]);do Xq=c8-1;end;Rk=bc[cq];do cq=cq+0x1;end;do cq=Rk[5];end;else do(kq)[0X0007]=zq[Rk[0x6]];end;Rk=bc[cq];cq=cq+1;(kq)[7]=kq[7][Rk[0X1]];do cq=cq+1;end;cq=cq+0X1;Rk=bc[cq];cq=cq+1;do if not kq[7]then cq=Rk[0x005];end;end;end;end;else do if not(Uk>=35)then if Uk==34 then(kq)[Rk[0X2]]=zq[Rk[0X006]];else(kq)[4]=zq[Rk[0X6]];Rk=bc[cq];cq=cq+1;(kq)[0X5]=zq[Rk[6]];Rk=bc[cq];cq=cq+1;kq[6]=Rk[6];cq=cq+1;local Sr,nr=3,4;if Sr~=0 then Xq=nr+Sr-0X0001;end;local lr,sr,Qr=3,nil,(nil);if Sr==0X1 then sr,Qr=q3(kq[nr]());else do sr,Qr=q3(kq[nr](E(kq,nr+0X1,Xq)));end;end;if lr~=1 then if lr==0X0 then sr=sr+nr-0X1;Xq=sr;else do sr=nr+lr-2;end;Xq=sr+1;end;local ax=(0);for wg=nr,sr do ax=ax+1;(kq)[wg]=Qr[ax];end;else do Xq=nr-0X00001;end;end;cq=cq+0X1;kq[0X3]=kq[0x5];cq=cq+0x1;kq[0X2]=kq[4];Rk=bc[cq];do cq=cq+1;end;cq=Rk[5];end;else if Uk<36 then do kq[8]=kq[0X00005][Rk[0x0001]];end;do cq=cq+0X00001;end;cq=cq+1;do Rk=bc[cq];end;cq=cq+0X1;do if kq[8]~=Rk[0x00001]then do cq=Rk[0X2];end;end;end;else if Uk~=0x25 then(kq)[3]=kq[2][Rk[1]];do Rk=bc[cq];end;do cq=cq+0X1;end;do(kq)[4]=zq[Rk[0x6]];end;cq=cq+0X1;do Xq=0X4;end;kq[Xq]=kq[Xq]();local ek=5;local Fk=(jc[0X0]);cq=cq+0X01;cq=cq+0X1;cq=cq+0X1;do(kq)[5]=Fk[1][Fk[2]];end;Rk=bc[cq];do cq=cq+1;end;local Kk=(kq[0X5]);do kq[ek+1]=Kk;end;(kq)[ek]=Kk[Rk[0x1]];do cq=cq+0X00001;end;ek=0x5;kq[ek](kq[ek+0X0001]);Xq=ek-1;Rk=bc[cq];do cq=cq+1;end;cq=Rk[5];else do kq[0X2]=zq[Rk[0X6]];end;cq=cq+1;cq=cq+1;Rk=bc[cq];cq=cq+0X1;(kq)[2]=kq[0X2][Rk[1]];do cq=cq+0X1;end;do cq=cq+1;end;Rk=bc[cq];cq=cq+0X1;if not(not kq[2])then else cq=Rk[0X5];end;end;end;end;end;end;end;else if not(Uk<9)then if Uk<0Xe then if Uk>=11 then if not(Uk<0Xc)then if Uk==0x0000d then do cq=Rk[5];end;else kq[1]=zq[Rk[6]];cq=cq+0X0001;do cq=cq+0X1;end;do Rk=bc[cq];end;cq=cq+1;if not(kq[1])then else do cq=Rk[5];end;end;end;else do(kq)[0X9]=kq[0X05][Rk[1]];end;Rk=bc[cq];cq=cq+0X1;kq[9]=kq[9][Rk[0X1]];Rk=bc[cq];cq=cq+0X1;do if not(Rk[6]<=kq[9])then cq=Rk[0x2];end;end;end;else if Uk~=0XA then do if kq[Rk[5]]==kq[Rk[0X0004]]then cq=Rk[2];end;end;else(kq)[0X2]=zq[Rk[0X006]];do Rk=bc[cq];end;cq=cq+1;kq[0X00002][Rk[0X6]]=Rk[0X00001];Rk=bc[cq];cq=cq+1;kq[2]=zq[Rk[0x6]];do cq=cq+0X1;end;cq=cq+0x1;cq=cq+1;do Xq=0X2;end;kq[Xq]();do Xq=Xq-0X01;end;do cq=cq+0X1;end;cq=cq+1;cq=cq+0X1;repeat local tt,ct=Lc,(kq);if not(#tt>0)then else local pt={};for dn,Jn in M,tt do do for f4,k4 in M,Jn do if k4[0X01]==ct and k4[0x0002]>=0 then local MW=k4[0X2];if not pt[MW]then(pt)[MW]={ct[MW]};end;k4[0X01]=pt[MW];k4[0X2]=1;end;end;end;end;end;until true;return;end;end;else do if Uk>=0x10 then if not(Uk<0X11)then if Uk==0X0012 then local Y2=(jc[0]);kq[0X2]=Y2[0X00001][Y2[2]];cq=cq+1;local O2=2;cq=cq+1;Rk=bc[cq];do cq=cq+0X1;end;local H2=kq[2];(kq)[O2+1]=H2;(kq)[O2]=H2[Rk[1]];cq=cq+1;O2=2;do(kq)[O2]=kq[O2](kq[O2+0X00001]);end;Xq=O2;Rk=bc[cq];cq=cq+1;do if not(not kq[0X2])then else do cq=Rk[0X05];end;end;end;else do kq[0X2]=zq[Rk[6]];end;do cq=cq+0X00001;end;cq=cq+0X1;do Rk=bc[cq];end;cq=cq+0X1;kq[0X2]=kq[2][Rk[1]];Rk=bc[cq];cq=cq+1;do if not(kq[0x2])then else cq=Rk[5];end;end;end;else(kq)[Rk[0x2]]={E({},1,Rk[0X5])};end;else if Uk~=0xf then(kq)[0X7]=zq[Rk[0X6]];Rk=bc[cq];do cq=cq+1;end;do(kq)[0X8]=Rk[6];end;cq=cq+1;local Az=0X7;kq[Az]=kq[Az](kq[Az+1]);Xq=Az;cq=cq+1;cq=cq+0X001;Rk=bc[cq];cq=cq+0X0001;if kq[0x07]then cq=Rk[5];end;else do kq[2]=zq[Rk[0X006]];end;do Rk=bc[cq];end;cq=cq+0X1;do kq[0X3]=Rk[6];end;cq=cq+0X1;local PI=(0x002);kq[PI]=kq[PI](kq[PI+1]);Xq=PI;Rk=bc[cq];cq=cq+0X00001;if kq[0X00002]then cq=Rk[5];end;end;end;end;end;else if Uk>=0X4 then if Uk>=0X006 then if Uk<7 then(kq)[0X00003]=zq[Rk[0X06]];Rk=bc[cq];cq=cq+0X1;do kq[3]=kq[0X3][Rk[0X00001]];end;do cq=cq+1;end;do cq=cq+0X001;end;Rk=bc[cq];cq=cq+1;kq[0X3]=kq[0x3][Rk[0X1]];do cq=cq+1;end;cq=cq+0x0001;do Rk=bc[cq];end;cq=cq+1;if not(Rk[6]<kq[0x3])then cq=Rk[2];end;else do if Uk==0X08 then(kq)[3]=zq[Rk[6]];do Rk=bc[cq];end;local pS=3;cq=cq+1;(kq)[4]=Rk[0x00006];cq=cq+1;(kq[pS])(kq[pS+1]);Xq=pS-0X0001;cq=cq+1;do cq=cq+0X1;end;Rk=bc[cq];cq=cq+0X001;cq=Rk[5];else kq[0X004]=zq[Rk[0X6]];cq=cq+0x1;cq=cq+1;Rk=bc[cq];do cq=cq+0X0001;end;(kq)[4]=kq[0X004][Rk[0X00001]];do cq=cq+0X01;end;do cq=cq+1;end;Rk=bc[cq];cq=cq+1;do if not(not kq[4])then else do cq=Rk[0X5];end;end;end;end;end;end;else if Uk~=5 then kq[Rk[0x2]]=Rk[0X00006];else(kq)[0x0005]=zq[Rk[0x006]];Rk=bc[cq];cq=cq+1;local v7=0X0005;kq[0X6]=Rk[0X6];do cq=cq+0X001;end;(kq)[0x7]=true;do cq=cq+1;end;kq[v7]=kq[v7](kq[v7+1],kq[v7+2]);do Xq=v7;end;Rk=bc[cq];local a7=(kq[0X5]);cq=cq+0X1;v7=0X5;kq[v7+1]=a7;(kq)[v7]=a7[Rk[0X001]];Rk=bc[cq];cq=cq+1;(kq)[0X7]=Rk[0x006];cq=cq+1;v7=5;do kq[v7]=kq[v7](kq[v7+0x1],kq[v7+0X2]);end;do Xq=v7;end;Rk=bc[cq];cq=cq+0X1;kq[5]=kq[5][Rk[0X1]];do Rk=bc[cq];end;cq=cq+1;do cq=Rk[5];end;end;end;else if Uk<2 then if Uk~=1 then(kq)[2]=zq[Rk[6]];cq=cq+0x01;cq=cq+0X001;Rk=bc[cq];do cq=cq+0x1;end;(kq)[0X2]=kq[0X2][Rk[1]];Rk=bc[cq];do cq=cq+1;end;if kq[2]then cq=Rk[5];end;else do(kq)[0x04]=false;end;do Rk=bc[cq];end;cq=cq+1;do zq[Rk[6]]=kq[4];end;Rk=bc[cq];cq=cq+0X01;(kq)[0X4]=zq[Rk[0x6]];local Ha=0x004;cq=cq+0X1;cq=cq+1;do Rk=bc[cq];end;do cq=cq+0x1;end;(kq)[0X005]=Rk[0X6];cq=cq+1;do kq[Ha]=kq[Ha](kq[Ha+0X1]);end;Xq=Ha;cq=cq+1;cq=cq+1;Rk=bc[cq];cq=cq+1;if kq[0X004]~=Rk[1]then else cq=Rk[2];end;end;else do if Uk==3 then local RN,rN=Uc[Rk[5]],(nil);local mN=RN[0x5];local JN=#mN;if not(JN>0)then else rN={};do for QX=0X1,JN do local OX=(mN[QX]);if OX[0X1]==0 then(rN)[QX-1]={kq,OX[0X2]};else(rN)[QX-1]=jc[OX[2]];end;end;end;(S)(Lc,rN);end;kq[Rk[2]]=e3(RN,rN,zq);else(kq)[0x4]=zq[Rk[6]];cq=cq+0X001;cq=cq+1;Rk=bc[cq];do cq=cq+0X001;end;(kq)[0X00004]=kq[4][Rk[0X01]];cq=cq+1;(kq)[3]=kq[0x4];Rk=bc[cq];cq=cq+1;cq=Rk[0X5];end;end;end;end;end;end;end;end;end;end;end;end);if not(Gq)then if V(Mq)=='\115t\114ing'then if not(r(Mq,'a\116te\109pt \116\111\032\121ie\108\100 \097cro\115\115\032\109\101\116\097m\101\116\104od\047C\037-\099all bou\110\100a\114\121'))then else return coroutine.yield();end;if not(r(Mq,'^\046\045:\037d\043\058 '))then q(Mq,0);else q('Lu\114\097ph\032Sc\114\105\112\116:'..(Qc[cq-0X1]or"\040\105\110ter\110a\108\041")..'\058\032'..u(Mq),0x00);end;else q(Mq,0X0);end;else if Mq then if Pq~=0X1 then do return kq[vq](E(kq,vq+0x01,Xq));end;else do return kq[vq]();end;end;elseif not(vq)then else do return E(kq,vq,Pq);end;end;end;end;end;else ic=function(...)local HK,zK=0X0001,{};local DK=({[2]=Vc,[1]=zK});local SK=0X0;local cK=((k and k()or _ENV));local ZK,FK=q3(...);ZK=ZK-0X0001;local kK=(cK==H and fc or cK);for wM=0X00,ZK do do if not(ac>wM)then do break;end;else(zK)[wM]=FK[wM+1];end;end;end;if not nc then do FK=nil;end;elseif not(Ac)then else do(zK)[ac]={n=ZK>=ac and ZK-ac+0X1 or 0X0,E(FK,ac+0X00001,ZK+1)};end;end;do if kK~=cK then if s then s(ic,kK);else _ENV=kK;end;end;end;local IK,PK,nK,QK=c(function()do while true do local KN=(bc[HK]);local tN=(KN[3]);HK=HK+1;if tN>=0x0018 then do if tN>=36 then do if not(tN>=42)then if tN>=39 then if not(tN>=40)then if zK[KN[0X2]]then do HK=KN[5];end;end;else if tN~=41 then local ZJ=(KN[2]);local JJ,CJ=zK[ZJ]();if not(JJ)then else for FL=0X001,KN[0x04]do(zK)[ZJ+FL]=CJ[FL];end;HK=KN[0X05];end;else zK[0x05]=zK[4];HK=HK+1;do(zK)[1]=zK[0X05];end;do KN=bc[HK];end;HK=HK+0X0001;HK=KN[0X5];end;end;else if tN>=37 then if tN==0X00026 then local yi=(Uc[KN[0X5]]);local zi=(yi[0x0005]);local Ei=(#zi);local fi=(nil);if Ei>0x0000 then fi={};do for rD=1,Ei do local kD=zi[rD];if kD[1]==0 then fi[rD-1]={zK,kD[0X2]};else do fi[rD-1]=jc[kD[2]];end;end;end;end;(S)(Lc,fi);end;zK[KN[0X2]]=e3(yi,fi,kK);else zK[0X000]=kK[KN[0X6]];HK=HK+0x00001;HK=HK+1;local cY=0x0;KN=bc[HK];HK=HK+0x0001;(zK)[0]=zK[0X00][KN[1]];KN=bc[HK];do HK=HK+0X0001;end;(zK)[0X1]=KN[0X6];do HK=HK+0x00001;end;do zK[cY]=zK[cY](zK[cY+0x1]);end;SK=cY;do KN=bc[HK];end;HK=HK+1;if not zK[0]then HK=KN[0X5];end;end;else zK[KN[2]]=zK[KN[5]][KN[0x1]];end;end;else if not(tN<45)then if tN<47 then if tN==0X2E then(zK)[KN[2]]={E({},1,KN[5])};else do HK=KN[5];end;end;else do if tN==0X00030 then zK[0X0]=kK[KN[0x6]];do HK=HK+0X0001;end;HK=HK+1;KN=bc[HK];HK=HK+0x1;if zK[0]then do HK=KN[0X5];end;end;else zK[0X0]=kK[KN[0X6]];KN=bc[HK];HK=HK+0x01;zK[0X1]=KN[0X00006];local Hr=(0X0);HK=HK+0x1;zK[Hr]=zK[Hr](zK[Hr+0X00001]);do SK=Hr;end;HK=HK+0X1;HK=HK+1;KN=bc[HK];HK=HK+1;zK[0]=zK[0X0][KN[0X1]];KN=bc[HK];HK=HK+0x1;if not(not zK[0])then else HK=KN[0x5];end;end;end;end;else do if tN>=43 then do if tN~=0x02c then else zK[KN[0x2]]=w(zK[KN[0X5]],zK[KN[0X4]]);end;end;else local Dc=(zK[KN[5]]/zK[KN[4]]);do zK[KN[2]]=Dc-Dc%0X1;end;end;end;end;end;end;else if tN>=30 then if not(tN>=33)then if not(tN<0X01f)then if tN~=0X20 then(zK)[0]=kK[KN[6]];KN=bc[HK];do HK=HK+0X01;end;do zK[0X1]=KN[6];end;local fJ=(0X00000);HK=HK+0X0001;zK[fJ](zK[fJ+1]);SK=fJ-0x01;do HK=HK+0X1;end;do HK=HK+0X001;end;KN=bc[HK];HK=HK+1;do HK=KN[0X5];end;else for Pc=KN[2],KN[0X5]do(zK)[Pc]=nil;end;end;else do zK[0x0000]=kK[KN[0X00006]];end;KN=bc[HK];HK=HK+0X1;zK[0]=zK[0][KN[0X1]];KN=bc[HK];do HK=HK+0X001;end;if zK[0]then do HK=KN[0X5];end;end;end;else if not(tN>=34)then if not(not zK[KN[0X002]])then else do HK=KN[5];end;end;else do if tN~=0X023 then(zK)[0X6]=zK[4][KN[1]];do HK=HK+1;end;HK=HK+1;KN=bc[HK];do HK=HK+1;end;(zK)[0X00007]=zK[0x1][KN[1]];KN=bc[HK];HK=HK+1;if not(not(zK[0X006]<zK[0X7]))then else HK=KN[2];end;else zK[0X0]=kK[KN[6]];KN=bc[HK];do HK=HK+1;end;local HQ=0X00000;zK[0X00001]=KN[6];do KN=bc[HK];end;HK=HK+1;zK[2]=KN[0X6];HK=HK+0X01;zK[HQ]=zK[HQ](zK[HQ+1],zK[HQ+0X2]);SK=HQ;do KN=bc[HK];end;HK=HK+0X1;if not(zK[0])then else do HK=KN[0X5];end;end;end;end;end;end;else do if not(tN>=27)then if not(tN<0x19)then if tN~=26 then repeat local Zb,Ab=Lc,zK;if#Zb>0 then local ir={};do for tV,eV in M,Zb do for Zx,qx in M,eV do if not(qx[0X1]==Ab and qx[2]>=0)then else local a4=(qx[2]);if not ir[a4]then ir[a4]={Ab[a4]};end;qx[0X1]=ir[a4];do qx[0X2]=0X1;end;end;end;end;end;end;until true;do return;end;else zK[1]=kK[KN[0X6]];do HK=HK+0X00001;end;SK=0X1;local z5=2;do zK[SK]=zK[SK]();end;HK=HK+0X1;HK=HK+0X1;KN=bc[HK];HK=HK+0X1;zK[0X2]=kK[KN[6]];KN=bc[HK];local k5=(jc[0X0001]);HK=HK+0x00001;(zK)[3]=KN[0x6];HK=HK+0X1;(zK)[z5]=zK[z5](zK[z5+0X001]);do SK=z5;end;HK=HK+1;HK=HK+1;KN=bc[HK];HK=HK+0X1;do(zK)[0X002]=zK[0x2][KN[0X01]];end;HK=HK+1;do HK=HK+0X1;end;do HK=HK+0X01;end;(zK)[0X003]=k5[1][k5[2]];HK=HK+0X1;do HK=HK+0x1;end;do KN=bc[HK];end;do HK=HK+0X01;end;zK[3]=zK[3][KN[0X1]];do HK=HK+1;end;zK[0X4]=zK[0];HK=HK+0X0001;k5=jc[0x00000];zK[5]=k5[0X1][k5[2]];KN=bc[HK];local I5=Uc[KN[5]];HK=HK+0X1;local i5,B5=I5[5],(nil);local g5=#i5;if g5>0 then B5={};do for k_=0X001,g5 do local G_=i5[k_];if G_[1]==0X0 then(B5)[k_-1]={zK,G_[0X002]};else do B5[k_-0X001]=jc[G_[0X2]];end;end;end;end;(S)(Lc,B5);end;(zK)[6]=e3(I5,B5,kK);do HK=HK+1;end;(zK)[0x7]={};KN=bc[HK];do HK=HK+1;end;I5=Uc[KN[0X0005]];B5=nil;i5=I5[0X5];g5=#i5;do if not(g5>0)then else B5={};for nr=1,g5 do local dr=i5[nr];if dr[0X1]==0 then B5[nr-0X00001]={zK,dr[2]};else do B5[nr-0X1]=jc[dr[2]];end;end;end;(S)(Lc,B5);end;end;zK[8]=e3(I5,B5,kK);do KN=bc[HK];end;HK=HK+0X00001;do(zK[7])[KN[0x00006]]=zK[8];end;HK=HK+1;z5=3;SK=z5+0X5-1;(zK[z5])(E(zK,z5+0X1,SK));SK=z5-0X00001;HK=HK+0x01;HK=HK+0X1;HK=HK+1;repeat local K0,y0=Lc,zK;if not(#K0>0)then else local a7={};for sb,nb in M,K0 do do for CH,xH in M,nb do if xH[0X00001]==y0 and xH[0X2]>=0X1 then local m4=xH[2];if not(not a7[m4])then else(a7)[m4]={y0[m4]};end;do(xH)[0X1]=a7[m4];end;(xH)[2]=0x00001;end;end;end;end;end;until true;KN=bc[HK];HK=HK+1;HK=KN[5];end;else zK[0]=kK[KN[0x6]];HK=HK+1;HK=HK+0X1;KN=bc[HK];HK=HK+0x001;zK[0X000]=zK[0X0][KN[1]];KN=bc[HK];HK=HK+1;if zK[0]then HK=KN[0x05];end;end;else do if not(tN>=28)then zK[KN[0x2]]=kK[KN[0x6]];else do if tN~=0X0001D then do(zK)[0]=kK[KN[0X6]];end;HK=HK+0x00001;HK=HK+0X1;KN=bc[HK];HK=HK+0X1;zK[0X0]=zK[0][KN[0X1]];KN=bc[HK];do HK=HK+0x01;end;if not zK[0]then HK=KN[0X5];end;else(zK)[0]=kK[KN[0X6]];do KN=bc[HK];end;local iB=0x0;do HK=HK+1;end;zK[0x01]=KN[6];do HK=HK+1;end;zK[iB]=zK[iB](zK[iB+0x001]);local ZB=(jc[0X001]);SK=iB;HK=HK+1;HK=HK+0X1;do HK=HK+0X1;end;(zK)[0X1]=ZB[1][ZB[2]];do KN=bc[HK];end;HK=HK+0x1;(zK)[1]=zK[0x001][KN[0X1]];HK=HK+1;HK=HK+1;HK=HK+1;zK[2]=zK[0];HK=HK+1;do iB=1;end;do zK[iB]=zK[iB](zK[iB+0x001]);end;SK=iB;KN=bc[HK];HK=HK+0X1;if not(not zK[0X1])then else HK=KN[5];end;end;end;end;end;end;end;end;end;end;else do if tN>=12 then if tN>=18 then if tN>=0X0015 then if not(tN>=0X16)then zK[2]=kK[KN[6]];HK=HK+1;do HK=HK+1;end;HK=HK+1;SK=0X2;(zK[SK])();SK=SK-1;HK=HK+0X001;do HK=HK+0X1;end;KN=bc[HK];HK=HK+1;HK=KN[0X5];else if tN~=23 then do(zK)[0x0]=kK[KN[6]];end;HK=HK+0X001;HK=HK+0X1;local D8=(0);KN=bc[HK];do HK=HK+1;end;(zK)[0X001]=KN[0X6];HK=HK+1;(zK)[D8]=zK[D8](zK[D8+1]);SK=D8;KN=bc[HK];HK=HK+1;(zK)[0]=zK[0][KN[1]];KN=bc[HK];HK=HK+0x1;do if zK[0X000]then HK=KN[0X0005];end;end;else zK[0X00]=kK[KN[0X6]];do HK=HK+1;end;do HK=HK+1;end;KN=bc[HK];HK=HK+1;(zK)[0]=zK[0][KN[0X00001]];HK=HK+1;do HK=HK+0X1;end;KN=bc[HK];HK=HK+0X1;if not(zK[0])then else HK=KN[0X5];end;end;end;else if not(tN<0X13)then if tN==0x0014 then(zK)[0x0]=kK[KN[6]];local Qw=(0);HK=HK+0X00001;HK=HK+0X0001;KN=bc[HK];HK=HK+1;zK[1]=KN[6];do HK=HK+1;end;zK[Qw]=zK[Qw](zK[Qw+1]);SK=Qw;HK=HK+1;HK=HK+1;KN=bc[HK];HK=HK+0X01;do zK[0X00000]=zK[0][KN[1]];end;HK=HK+0x1;do HK=HK+1;end;KN=bc[HK];HK=HK+1;do if zK[0X00]then HK=KN[0X5];end;end;else do(zK)[0x0]=kK[KN[6]];end;local ej=0;do KN=bc[HK];end;do HK=HK+1;end;(zK)[0X1]=KN[6];HK=HK+1;(zK)[ej]=zK[ej](zK[ej+1]);SK=ej;local sj=2;HK=HK+0X01;HK=HK+1;HK=HK+1;(zK)[0X1]={};KN=bc[HK];HK=HK+1;zK[2]=KN[0X6]/KN[1];KN=bc[HK];do HK=HK+0x1;end;do(zK[0X1])[KN[6]]=zK[0X00002];end;KN=bc[HK];HK=HK+1;(zK)[0X2]=kK[KN[6]];HK=HK+0x1;HK=HK+0X0001;HK=HK+0X1;do(zK)[0X3]=zK[0];end;HK=HK+0X001;ej=0X002;local yj=(0X4);if sj==0 then else do SK=ej+sj-1;end;end;local mj,Ij=nil,(nil);if sj~=0X1 then do mj,Ij=q3(zK[ej](E(zK,ej+1,SK)));end;else mj,Ij=q3(zK[ej]());end;if yj~=0X01 then if yj==0 then mj=mj+ej-0X1;SK=mj;else do mj=ej+yj-0x2;end;SK=mj+1;end;local Gh=(0X000);for bT=ej,mj do Gh=Gh+1;zK[bT]=Ij[Gh];end;else SK=ej-1;end;HK=HK+0X1;HK=HK+1;do KN=bc[HK];end;do HK=HK+0x0001;end;ej=2;local Wj=P(function(...)C();for W8,M8 in...do C(true,W8,M8);end;end);Wj(zK[ej],zK[ej+0x01],zK[ej+2]);SK=ej;(zK)[ej]=Wj;HK=KN[5];end;else local R2=(KN[0X2]);local t2,d2,A2=zK[R2]();if not(t2)then else zK[R2+1]=d2;zK[R2+2]=A2;HK=KN[5];end;end;end;else if not(tN<15)then if tN<0X10 then(zK)[0X0]=kK[KN[0X6]];HK=HK+1;HK=HK+0X1;KN=bc[HK];local dA=0;HK=HK+0X1;(zK)[0x1]=KN[0X6];do HK=HK+0x1;end;zK[dA](zK[dA+0X0001]);SK=dA-0X1;KN=bc[HK];HK=HK+0X1;do(zK)[0x0]=kK[KN[0x6]];end;do KN=bc[HK];end;HK=HK+1;(zK)[0]=zK[0][KN[0X1]];KN=bc[HK];HK=HK+0x01;(zK)[0X00000]=zK[0][KN[0X1]];KN=bc[HK];HK=HK+1;zK[0]=zK[0][KN[0X001]];KN=bc[HK];HK=HK+0X01;if not(not(KN[6]<=zK[0X00000]))then else HK=KN[2];end;else do if tN==0X11 then zK[KN[0X2]]=zK[KN[5]]-zK[KN[0x004]];else zK[0]=kK[KN[6]];KN=bc[HK];do HK=HK+0X01;end;zK[0]=zK[0][KN[1]];do KN=bc[HK];end;HK=HK+1;do if not zK[0]then do HK=KN[0x00005];end;end;end;end;end;end;else if not(tN>=13)then do zK[0]=kK[KN[0X00006]];end;KN=bc[HK];HK=HK+0X1;zK[0]=zK[0][KN[0X1]];do HK=HK+0x01;end;HK=HK+0X0001;KN=bc[HK];HK=HK+1;if zK[0X0]then do HK=KN[0x005];end;end;else if tN~=0xE then do if not(not(KN[6]<=zK[KN[0x4]]))then else HK=KN[0X2];end;end;else do zK[0X0]=kK[KN[0x006]];end;KN=bc[HK];do HK=HK+0x1;end;zK[1]=KN[0X006];do HK=HK+0x01;end;local uZ=(0X0);do zK[uZ]=zK[uZ](zK[uZ+1]);end;SK=uZ;KN=bc[HK];HK=HK+1;zK[0]=zK[0][KN[0X1]];do HK=HK+0X001;end;do HK=HK+0X1;end;do KN=bc[HK];end;HK=HK+0X01;if zK[0]then do HK=KN[5];end;end;end;end;end;end;else do if not(tN>=0X6)then do if tN<0X3 then if tN>=0X1 then do if tN~=2 then zK[2]=kK[KN[6]];local Iw=(2);KN=bc[HK];HK=HK+1;do zK[3]=KN[0X0006];end;do KN=bc[HK];end;HK=HK+1;(zK)[4]=zK[1][KN[1]];HK=HK+1;HK=HK+0X1;HK=HK+0x1;zK[Iw](zK[Iw+1],zK[Iw+0X002]);do SK=Iw-0X1;end;do HK=HK+1;end;HK=HK+0X1;KN=bc[HK];do HK=HK+1;end;(zK)[2]=kK[KN[6]];do KN=bc[HK];end;HK=HK+1;zK[3]=KN[0X006];KN=bc[HK];HK=HK+1;zK[0X4]=KN[6];HK=HK+0X1;Iw=2;(zK[Iw])(zK[Iw+1],zK[Iw+0X002]);do SK=Iw-1;end;KN=bc[HK];HK=HK+0X1;(zK)[2]=kK[KN[6]];KN=bc[HK];HK=HK+0X01;zK[3]=KN[0X6];do KN=bc[HK];end;HK=HK+0X0001;zK[4]=KN[6];HK=HK+1;Iw=2;(zK[Iw])(zK[Iw+1],zK[Iw+2]);SK=Iw-0X1;do KN=bc[HK];end;HK=HK+0x1;zK[0X2]=kK[KN[6]];do KN=bc[HK];end;do HK=HK+0X1;end;(zK)[0x3]=KN[6];do KN=bc[HK];end;HK=HK+0x001;(zK)[0x4]=KN[6];HK=HK+0X001;do Iw=0X2;end;zK[Iw](zK[Iw+1],zK[Iw+0X2]);SK=Iw-1;HK=HK+1;HK=HK+1;KN=bc[HK];HK=HK+1;do HK=KN[5];end;else do zK[0]=kK[KN[6]];end;KN=bc[HK];local NI=(0X00000);HK=HK+0X1;zK[0x0001]=KN[6];do HK=HK+0X1;end;do(zK)[NI]=zK[NI](zK[NI+1]);end;SK=NI;HK=HK+1;local BI=(jc[1]);HK=HK+1;HK=HK+0X1;do(zK)[1]=BI[0X00001][BI[2]];end;HK=HK+1;HK=HK+0X1;KN=bc[HK];do HK=HK+0X1;end;zK[1]=zK[0X001][KN[1]];HK=HK+1;zK[2]=zK[0];do HK=HK+0x0001;end;do NI=1;end;(zK)[NI]=zK[NI](zK[NI+0X0001]);do SK=NI;end;KN=bc[HK];HK=HK+0x1;if not zK[1]then HK=KN[5];end;end;end;else local fO=(KN[0X05]);local xO=KN[0X2];SK=xO+fO-0X1;repeat local aC,xC=Lc,(zK);if#aC>0X0 then local iG={};for Md,Ud in M,aC do do for vk,Yk in M,Ud do do if not(Yk[0X001]==xC and Yk[0X02]>=0X0000)then else local E1=Yk[0X02];do if not iG[E1]then(iG)[E1]={xC[E1]};end;end;Yk[1]=iG[E1];do(Yk)[2]=0X1;end;end;end;end;end;end;end;until true;return true,xO,fO;end;else if tN<0X04 then zK[KN[2]][zK[KN[0X5]]]=zK[KN[4]];else if tN~=5 then(zK)[0X0]=kK[KN[6]];do HK=HK+1;end;HK=HK+1;local ny=(0X0);do KN=bc[HK];end;do HK=HK+0X001;end;(zK)[1]=KN[6];do HK=HK+1;end;(zK[ny])(zK[ny+0X1]);SK=ny-1;do KN=bc[HK];end;HK=HK+0X0001;HK=KN[0x05];else local wL=(jc[0X1]);zK[0X0001]=wL[1][wL[0X2]];local rL=1;HK=HK+1;do HK=HK+1;end;KN=bc[HK];do HK=HK+0X00001;end;(zK)[1]=zK[1][KN[1]];HK=HK+1;do HK=HK+1;end;HK=HK+0X1;(zK)[0X02]=zK[0];HK=HK+0X1;wL=jc[0X0000];zK[3]=wL[1][wL[0X2]];HK=HK+0X01;(zK)[0X4]=nil;HK=HK+0X1;(zK)[0X5]={};do KN=bc[HK];end;local AL=(Uc[KN[5]]);do HK=HK+0X01;end;local tL,XL=nil,AL[5];local bL=#XL;if not(bL>0)then else tL={};for dO=1,bL do local JO=(XL[dO]);if JO[1]~=0X0 then tL[dO-0X1]=jc[JO[2]];else(tL)[dO-0x01]={zK,JO[2]};end;end;(S)(Lc,tL);end;do zK[0X006]=e3(AL,tL,kK);end;KN=bc[HK];HK=HK+0X1;zK[0x5][KN[6]]=zK[0X0006];do HK=HK+0x001;end;SK=rL+5-0X0001;zK[rL](E(zK,rL+0X1,SK));SK=rL-1;do HK=HK+1;end;HK=HK+1;KN=bc[HK];HK=HK+1;HK=KN[0X5];end;end;end;end;else if tN>=0X09 then if tN<0X0000A then zK[0]=kK[KN[6]];HK=HK+0x0001;SK=0;zK[SK]=zK[SK]();HK=HK+0X1;HK=HK+0X1;KN=bc[HK];do HK=HK+0X1;end;if not(zK[0])then else HK=KN[5];end;else if tN==0x00B then local Ls=jc[0];do(zK)[0]=Ls[1][Ls[2]];end;local Ks=(0x0);do HK=HK+1;end;HK=HK+1;do KN=bc[HK];end;do HK=HK+1;end;local Qs=zK[0];zK[Ks+1]=Qs;do zK[Ks]=Qs[KN[1]];end;HK=HK+0X1;Ks=0;zK[Ks]=zK[Ks](zK[Ks+1]);do SK=Ks;end;do HK=HK+1;end;HK=HK+0X01;KN=bc[HK];HK=HK+0X001;do if not(not zK[0])then else HK=KN[0x05];end;end;else do zK[0]=kK[KN[0x6]];end;local OE=(0X0000);KN=bc[HK];do HK=HK+0X001;end;(zK)[1]=KN[6];KN=bc[HK];do HK=HK+0X0001;end;(zK)[0x00002]=KN[0X6];HK=HK+1;zK[OE]=zK[OE](zK[OE+0X1],zK[OE+0X0002]);do SK=OE;end;do KN=bc[HK];end;do HK=HK+1;end;if not zK[0x00]then do HK=KN[5];end;end;end;end;else if tN<0X07 then(zK)[0]=kK[KN[0X06]];KN=bc[HK];do HK=HK+1;end;local Qx=0;zK[0X1]=KN[0X6];HK=HK+0x1;(zK)[Qx]=zK[Qx](zK[Qx+1]);SK=Qx;KN=bc[HK];HK=HK+0X1;(zK)[0x0]=zK[0x0][KN[1]];do KN=bc[HK];end;HK=HK+0X1;if not(not zK[0x0])then else HK=KN[0x5];end;else do if tN~=8 then zK[0]=kK[KN[6]];KN=bc[HK];do HK=HK+1;end;(zK)[0X0]=zK[0][KN[1]];do HK=HK+1;end;HK=HK+0X00001;KN=bc[HK];do HK=HK+0x01;end;do if not zK[0]then HK=KN[5];end;end;else do zK[KN[0X2]]=KN[6];end;end;end;end;end;end;end;end;end;end;end;end;end);if not(IK)then if V(PK)=='\115tr\105ng'then do if not(r(PK,'\097\116t\101mp\116 to yie\108\100\032\097\099\114\111ss met\097met\104o\100\047C\037\045\099\097l\108\032\098\111und\097\114\121'))then else return coroutine.yield();end;end;if not(r(PK,"^.-:%d+: "))then q(PK,0X0000);else q("\076\117r\097p\104 S\099\114\105p\116:"..(Qc[HK-0X1]or"(internal)")..": "..u(PK),0x00);end;else(q)(PK,0X000);end;else if PK then if QK==1 then return zK[nK]();else return zK[nK](E(zK,nK+1,SK));end;elseif not(nK)then else return E(zK,nK,QK);end;end;end;end;end;end;end;else if not(Sc>=161)then if Sc>=159 then if Sc==0XA0 then do ic=function(...)local LZ={};local CZ=(1);local ZZ=((k and k()or _ENV));local YZ,vZ=q3(...);local jZ=({[2]=Vc,[1]=LZ});local rZ,lZ=(ZZ==H and fc or ZZ),0X0;YZ=YZ-1;for fg=0x00,YZ do if not(ac>fg)then break;else LZ[fg]=vZ[fg+1];end;end;if not nc then vZ=nil;elseif not(Ac)then else LZ[ac]={n=YZ>=ac and YZ-ac+0X001 or 0,E(vZ,ac+0X0001,YZ+0X01)};end;if rZ~=ZZ then do if not(s)then _ENV=rZ;else s(ic,rZ);end;end;end;local SZ,mZ,wZ,DZ=c(function()do while true do local tK=(bc[CZ]);local lK=(tK[0X00003]);CZ=CZ+1;if lK>=0x12 then if lK>=27 then if not(lK>=32)then if lK>=0X0001D then do if lK<30 then if not(LZ[tK[0X5]]<LZ[tK[0X00004]])then else CZ=tK[2];end;else if lK==0x1F then(LZ)[tK[0x2]]=LZ[tK[0X0005]]<LZ[tK[0X004]];else LZ[tK[2]]=LZ[tK[5]]*LZ[tK[0X4]];end;end;end;else do if lK~=28 then do(LZ)[0x2]=nil;end;tK=bc[CZ];CZ=CZ+1;(rZ)[tK[0X06]]=LZ[0X00002];tK=bc[CZ];do CZ=CZ+1;end;CZ=tK[5];else LZ[0x0]=rZ[tK[0X00006]];CZ=CZ+0X01;CZ=CZ+0X1;do CZ=CZ+0x00001;end;lZ=0;(LZ)[lZ]=LZ[lZ]();CZ=CZ+0X1;CZ=CZ+0X0001;tK=bc[CZ];CZ=CZ+1;do if not(LZ[0]<tK[0x1])then CZ=tK[0X2];end;end;end;end;end;else if not(lK>=0X22)then if lK==33 then LZ[tK[0X002]]=LZ[tK[0X0005]]<=LZ[tK[4]];else local Fc=(jc[0]);(LZ)[0]=Fc[1][Fc[2]];CZ=CZ+1;CZ=CZ+1;tK=bc[CZ];CZ=CZ+1;local Cc,oc=0,(LZ[0X00000]);LZ[Cc+0X1]=oc;(LZ)[Cc]=oc[tK[1]];CZ=CZ+1;do Cc=0x000;end;(LZ)[Cc]=LZ[Cc](LZ[Cc+1]);lZ=Cc;do CZ=CZ+0X1;end;do CZ=CZ+0x1;end;do tK=bc[CZ];end;CZ=CZ+0X001;do if not LZ[0]then CZ=tK[5];end;end;end;else do if not(lK<35)then if lK==0X24 then local mE,CE=tK[2],LZ[tK[5]];LZ[mE+1]=CE;LZ[mE]=CE[tK[0X001]];else local t9=(tK[2]);local C9,V9,B9=LZ[t9]();if C9 then(LZ)[t9+1]=V9;LZ[t9+2]=B9;CZ=tK[5];end;end;else LZ[2]=rZ[tK[0X006]];tK=bc[CZ];CZ=CZ+0X1;local Xx=(2);(LZ)[0X00003]=tK[6];local Ox=(jc[0x0]);CZ=CZ+0X00001;LZ[Xx]=LZ[Xx](LZ[Xx+1]);lZ=Xx;tK=bc[CZ];CZ=CZ+1;(rZ)[tK[0x0006]]=LZ[2];do CZ=CZ+0X1;end;do LZ[2]=Ox[1][Ox[2]];end;CZ=CZ+0X0001;CZ=CZ+0X00001;tK=bc[CZ];CZ=CZ+1;Xx=2;local ax=(LZ[0X2]);do LZ[Xx+0X1]=ax;end;(LZ)[Xx]=ax[tK[0X1]];do CZ=CZ+0X01;end;do Xx=2;end;(LZ[Xx])(LZ[Xx+0X1]);lZ=Xx-0x1;do CZ=CZ+1;end;CZ=CZ+1;tK=bc[CZ];CZ=CZ+0X1;CZ=tK[0X5];end;end;end;end;else if lK<0X16 then if lK<20 then if lK~=19 then(LZ)[0]=rZ[tK[6]];CZ=CZ+0X1;do CZ=CZ+1;end;CZ=CZ+0X0001;do(LZ)[0X1]={E({},0X1,3)};end;local Vh=0x03;tK=bc[CZ];CZ=CZ+0X001;do(LZ)[0X2]=tK[6];end;tK=bc[CZ];CZ=CZ+1;LZ[0X3]=tK[6];tK=bc[CZ];CZ=CZ+1;do(LZ)[0X004]=tK[6];end;local Qh=(1);CZ=CZ+1;local th=(LZ[Qh]);local Jh=((0X1-0x1)*50);for QV=1,0X03 do do(th)[Jh+QV]=LZ[Qh+QV];end;end;do tK=bc[CZ];end;local Rh=(Uc[tK[0X00005]]);CZ=CZ+0X00001;local Mh,bh=Rh[5],nil;local Fh=(#Mh);if not(Fh>0)then else do bh={};end;do for p7=1,Fh do local o7=(Mh[p7]);if o7[0X1]==0 then(bh)[p7-1]={LZ,o7[0x2]};else(bh)[p7-0X1]=jc[o7[0X2]];end;end;end;(S)(Lc,bh);end;LZ[0X2]=e3(Rh,bh,rZ);CZ=CZ+1;do Qh=0X0;end;local gh=(3);do if Vh~=0X0 then lZ=Qh+Vh-1;end;end;local Dh,lh=nil,(nil);do if Vh==1 then do Dh,lh=q3(LZ[Qh]());end;else Dh,lh=q3(LZ[Qh](E(LZ,Qh+0x001,lZ)));end;end;do if gh==1 then lZ=Qh-1;else if gh~=0 then Dh=Qh+gh-0X2;lZ=Dh+1;else do Dh=Dh+Qh-1;end;lZ=Dh;end;local hN=0;for cs=Qh,Dh do hN=hN+0X1;LZ[cs]=lh[hN];end;end;end;tK=bc[CZ];do CZ=CZ+1;end;(LZ)[0x2]=rZ[tK[6]];do CZ=CZ+0X1;end;LZ[0X003]=LZ[0X0];CZ=CZ+0X00001;Qh=0X002;Vh=2;do gh=0X04;end;if Vh==0X0 then else do lZ=Qh+Vh-1;end;end;Dh,lh=nil;if Vh==1 then Dh,lh=q3(LZ[Qh]());else Dh,lh=q3(LZ[Qh](E(LZ,Qh+0X1,lZ)));end;if gh~=0x1 then if gh~=0x0 then Dh=Qh+gh-2;lZ=Dh+1;else Dh=Dh+Qh-0X1;do lZ=Dh;end;end;local b5=0;for I8=Qh,Dh do b5=b5+0x1;LZ[I8]=lh[b5];end;else lZ=Qh-0X1;end;tK=bc[CZ];CZ=CZ+1;Qh=2;local ah=(P(function(...)(C)();for rd,qd in...do C(true,rd,qd);end;end));ah(LZ[Qh],LZ[Qh+0X1],LZ[Qh+0X2]);lZ=Qh;LZ[Qh]=ah;do CZ=tK[0X5];end;else LZ[tK[0X2]]=LZ[tK[5]]%LZ[tK[0X0004]];end;else if lK==0X00015 then(LZ)[tK[0X00002]]=rZ[tK[6]];else LZ[tK[0x2]]=tK[6];end;end;else if not(lK>=0X0018)then if lK==0X00017 then LZ[0X0]=rZ[tK[6]];do tK=bc[CZ];end;do CZ=CZ+0X01;end;(LZ)[0]=LZ[0X0][tK[0x1]];do CZ=CZ+1;end;do CZ=CZ+0X001;end;tK=bc[CZ];do CZ=CZ+1;end;if not(not LZ[0X0])then else CZ=tK[5];end;else(LZ)[0]=rZ[tK[0X6]];do CZ=CZ+1;end;CZ=CZ+1;do CZ=CZ+1;end;lZ=0;do LZ[lZ]=LZ[lZ]();end;tK=bc[CZ];do CZ=CZ+1;end;if not(not(LZ[0]<tK[1]))then else CZ=tK[2];end;end;else if lK>=25 then do if lK==26 then local LS=(jc[1]);(LZ)[2]=LS[1][LS[0X2]];CZ=CZ+1;do CZ=CZ+0x1;end;tK=bc[CZ];CZ=CZ+0x001;(LZ)[0X002]=LZ[0X2][tK[1]];local SS=0X2;CZ=CZ+0X1;CZ=CZ+1;CZ=CZ+1;(LZ)[3]=LZ[1];do CZ=CZ+1;end;do(LZ)[SS]=LZ[SS](LZ[SS+0X00001]);end;do lZ=SS;end;CZ=CZ+1;CZ=CZ+1;tK=bc[CZ];CZ=CZ+1;if not LZ[2]then do CZ=tK[0x5];end;end;else(LZ)[tK[0x2]]={E({},0X001,tK[5])};end;end;else do(LZ)[0X005]=LZ[0x4][tK[0X1]];end;CZ=CZ+1;CZ=CZ+0X1;do CZ=CZ+0X1;end;(LZ)[0X001]=LZ[0X5];do tK=bc[CZ];end;CZ=CZ+1;if not(not LZ[0x01])then else CZ=tK[5];end;end;end;end;end;else if lK<9 then if not(lK<4)then if lK>=6 then if not(lK>=7)then do LZ[0]=rZ[tK[6]];end;tK=bc[CZ];CZ=CZ+1;LZ[0]=LZ[0][tK[1]];CZ=CZ+0x0001;CZ=CZ+0X0001;do tK=bc[CZ];end;CZ=CZ+1;do if not(not LZ[0X0])then else CZ=tK[5];end;end;else if lK==8 then(LZ)[tK[0X2]]=J(LZ[tK[5]],LZ[tK[4]]);else do LZ[2]=rZ[tK[6]];end;local qM=(2);tK=bc[CZ];CZ=CZ+1;do(LZ)[2]=LZ[2][tK[0X01]];end;tK=bc[CZ];CZ=CZ+1;local YM=LZ[0X002];(LZ)[qM+1]=YM;(LZ)[qM]=YM[tK[1]];do tK=bc[CZ];end;CZ=CZ+1;LZ[4]=tK[0x6];CZ=CZ+1;qM=0x00002;(LZ)[qM]=LZ[qM](LZ[qM+1],LZ[qM+0x0002]);lZ=qM;CZ=CZ+1;CZ=CZ+0X01;tK=bc[CZ];CZ=CZ+1;do if not(not LZ[2])then else do CZ=tK[0X5];end;end;end;end;end;else if lK~=0x5 then(LZ)[0]=rZ[tK[0X0006]];do tK=bc[CZ];end;do CZ=CZ+0x1;end;(LZ)[0]=LZ[0][tK[0X1]];do CZ=CZ+1;end;CZ=CZ+1;tK=bc[CZ];CZ=CZ+0X001;do if not(not LZ[0])then else do CZ=tK[0X005];end;end;end;else for Fz=tK[2],tK[0X5]do LZ[Fz]=nil;end;end;end;else if not(lK>=2)then if lK~=1 then(LZ)[tK[2]]=LZ[tK[0x5]][tK[0x1]];else LZ[0]=nil;tK=bc[CZ];CZ=CZ+1;rZ[tK[0X00006]]=LZ[0X0];CZ=CZ+0x1;repeat local fP,NP=Lc,(LZ);if#fP>0 then local t9=({});for jz,uz in M,fP do do for Hj,xj in M,uz do if xj[1]==NP and xj[2]>=0X0 then local fd=(xj[0X002]);if not t9[fd]then do t9[fd]={NP[fd]};end;end;(xj)[0x001]=t9[fd];xj[2]=0X1;end;end;end;end;end;until true;do return;end;end;else do if lK==0X3 then repeat local aa,Oa=Lc,LZ;if not(#aa>0)then else local F1=({});for GR,ER in M,aa do for Sg,Tg in M,ER do if Tg[1]==Oa and Tg[0X2]>=0 then local JH=Tg[0X2];do if not F1[JH]then do F1[JH]={Oa[JH]};end;end;end;Tg[0X01]=F1[JH];do Tg[0x0002]=1;end;end;end;end;end;until true;return;else LZ[tK[2]][LZ[tK[0X5]]]=LZ[tK[0x4]];end;end;end;end;else if not(lK>=13)then do if not(lK>=11)then do if lK==0xa then LZ[5]=rZ[tK[6]];tK=bc[CZ];local ge=5;CZ=CZ+0X1;local Je=LZ[0X5];do LZ[ge+0X0001]=Je;end;LZ[ge]=Je[tK[0x00001]];CZ=CZ+1;ge=5;(LZ[ge])(LZ[ge+0X1]);lZ=ge-1;CZ=CZ+1;CZ=CZ+1;tK=bc[CZ];do CZ=CZ+1;end;LZ[5]=LZ[0x004][tK[1]];do CZ=CZ+1;end;lZ=5;(LZ[lZ])();lZ=lZ-1;CZ=CZ+0x1;CZ=CZ+0X1;do tK=bc[CZ];end;do CZ=CZ+0X1;end;do CZ=tK[5];end;else local rq=Uc[tK[0x05]];local Nq,Jq=rq[0x5],(nil);local wq=(#Nq);if not(wq>0)then else Jq={};do for Ps=0X1,wq do local fs=(Nq[Ps]);if fs[1]~=0 then Jq[Ps-1]=jc[fs[2]];else do(Jq)[Ps-1]={LZ,fs[0X00002]};end;end;end;end;(S)(Lc,Jq);end;LZ[tK[0x2]]=e3(rq,Jq,rZ);end;end;else if lK==12 then local Nx=jc[1];LZ[0X2]=Nx[1][Nx[2]];local Wx=nil;do tK=bc[CZ];end;CZ=CZ+1;(LZ)[0X0002]=LZ[0X2][tK[0X1]];local Px=(0X2);CZ=CZ+0X0001;do(LZ)[3]=LZ[1];end;CZ=CZ+0X00001;Nx=jc[0X0];LZ[0X4]=Nx[1][Nx[0x2]];tK=bc[CZ];CZ=CZ+1;local Jx=Uc[tK[0X0005]];local wx=Jx[0x0005];local gx=(#wx);if not(gx>0)then else Wx={};for Wo=0X1,gx do local So=wx[Wo];do if So[0x1]==0 then Wx[Wo-1]={LZ,So[2]};else(Wx)[Wo-1]=jc[So[2]];end;end;end;(S)(Lc,Wx);end;do LZ[5]=e3(Jx,Wx,rZ);end;do CZ=CZ+1;end;lZ=Px+0x4-1;(LZ[Px])(E(LZ,Px+0X0001,lZ));lZ=Px-1;CZ=CZ+1;do CZ=CZ+1;end;tK=bc[CZ];do CZ=CZ+0X1;end;do CZ=tK[0x05];end;else do LZ[0]=rZ[tK[6]];end;do tK=bc[CZ];end;CZ=CZ+1;(LZ)[0X0]=LZ[0][tK[0X1]];CZ=CZ+1;CZ=CZ+1;do tK=bc[CZ];end;local w_=(0);CZ=CZ+0X01;(LZ)[1]=tK[0X6];CZ=CZ+0X0001;LZ[w_]=LZ[w_](LZ[w_+0X1]);lZ=w_;tK=bc[CZ];do CZ=CZ+1;end;if not(not LZ[0X000])then else CZ=tK[0x0005];end;end;end;end;else if lK>=0Xf then if lK>=16 then if lK~=17 then do if not(LZ[tK[2]])then else CZ=tK[5];end;end;else end;else do(LZ)[0x0]=rZ[tK[0X00006]];end;local pz=(0);tK=bc[CZ];do CZ=CZ+0X1;end;do LZ[1]=tK[0X6];end;CZ=CZ+1;(LZ)[pz]=LZ[pz](LZ[pz+1]);lZ=pz;tK=bc[CZ];CZ=CZ+0x1;if not LZ[0x0]then CZ=tK[0X5];end;end;else if lK==0X000e then(LZ)[0X000]=rZ[tK[6]];CZ=CZ+0x01;CZ=CZ+1;CZ=CZ+0X1;do lZ=0;end;LZ[lZ]=LZ[lZ]();tK=bc[CZ];do CZ=CZ+0X1;end;do if not(LZ[0x0])then else do CZ=tK[0X005];end;end;end;else CZ=tK[0X0005];end;end;end;end;end;end;end;end);if not(SZ)then do if V(mZ)~='st\114in\103'then q(mZ,0X0);else if not(r(mZ,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if r(mZ,'\094\046\045:\037\100+: ')then q("Luraph Script:"..(Qc[CZ-1]or"(int\101r\110a\108\041")..'\058\032'..u(mZ),0);else q(mZ,0);end;end;end;else if mZ then if DZ~=1 then do return LZ[wZ](E(LZ,wZ+0X1,lZ));end;else return LZ[wZ]();end;elseif not(wZ)then else return E(LZ,wZ,DZ);end;end;end;end;else ic=function(...)local uI=0X1;local ZI=({});local LI=((k and k()or _ENV));local KI,vI,YI={[1]=ZI,[2]=Vc},0,(LI==H and fc or LI);local bI,kI=q3(...);bI=bI-1;for yb=0x000,bI do if ac>yb then(ZI)[yb]=kI[yb+0x1];else break;end;end;if not nc then kI=nil;elseif Ac then ZI[ac]={n=bI>=ac and bI-ac+1 or 0,E(kI,ac+0x00001,bI+0X0001)};end;do if YI~=LI then if not(s)then _ENV=YI;else s(ic,YI);end;end;end;local nI,rI,xI,jI=c(function()while true do local rX=bc[uI];local cX=(rX[3]);uI=uI+1;if cX<10 then if cX<0X5 then do if not(cX<0x2)then if not(cX>=0X00003)then ZI[rX[2]]=ZI[rX[5]]==ZI[rX[4]];else if cX~=0X4 then if not(ZI[rX[2]])then else uI=rX[0X5];end;else do(ZI)[rX[2]]=rX[0X006];end;end;end;else if cX~=0X0001 then if not(ZI[rX[5]]<ZI[rX[0X04]])then do uI=rX[2];end;end;else do repeat local vr,gr=Lc,(ZI);if not(#vr>0X0)then else local yW=({});for Ky,Qy in M,vr do for MD,QD in M,Qy do if not(QD[1]==gr and QD[0X00002]>=0)then else local XI=(QD[2]);if not(not yW[XI])then else do(yW)[XI]={gr[XI]};end;end;QD[1]=yW[XI];QD[0x2]=0X001;end;end;end;end;until true;end;do return;end;end;end;end;else if not(cX<0X7)then if not(cX<8)then if cX~=0x9 then(ZI)[0X00001]=YI[rX[0X0006]];do rX=bc[uI];end;do uI=uI+0x1;end;(ZI)[0X1]=ZI[0X0001][rX[0X1]];rX=bc[uI];do uI=uI+0X1;end;if not(not ZI[0X1])then else uI=rX[0X5];end;else uI=rX[0X0005];end;else local dx,wx=rX[0X2],(ZI[rX[0x005]]);ZI[dx+1]=wx;ZI[dx]=wx[rX[0X01]];end;else if cX==0X6 then ZI[rX[0X002]]={E({},1,rX[5])};else for SH=rX[0X2],rX[5]do(ZI)[SH]=nil;end;end;end;end;else if not(cX>=0X0000F)then if cX<0Xc then if cX~=0xb then if ZI[rX[0X5]]~=ZI[rX[4]]then uI=rX[2];end;else end;else if cX>=0Xd then do if cX==0X0E then ZI[1]=YI[rX[0X6]];uI=uI+0x1;uI=uI+1;local Oi=1;do rX=bc[uI];end;uI=uI+0X1;local gi=(ZI[0X1]);ZI[Oi+1]=gi;(ZI)[Oi]=gi[rX[1]];rX=bc[uI];uI=uI+1;ZI[3]=rX[0X006];uI=uI+0X1;Oi=1;do(ZI)[Oi]=ZI[Oi](ZI[Oi+1],ZI[Oi+2]);end;vI=Oi;do rX=bc[uI];end;uI=uI+1;do if not(not ZI[1])then else do uI=rX[5];end;end;end;else(ZI)[1]=YI[rX[6]];rX=bc[uI];do uI=uI+1;end;(ZI)[0X1]=ZI[1][rX[1]];rX=bc[uI];uI=uI+0X1;local Qs=(1);do(ZI)[2]=rX[0X6];end;uI=uI+0X001;do ZI[Qs]=ZI[Qs](ZI[Qs+1]);end;vI=Qs;uI=uI+0X1;uI=uI+0x1;rX=bc[uI];do uI=uI+1;end;do if not(not ZI[1])then else do uI=rX[5];end;end;end;end;end;else if not(not(ZI[rX[0X5]]<=ZI[rX[4]]))then else uI=rX[0x2];end;end;end;else if cX>=0X12 then do if not(cX<0X13)then do if cX~=0X14 then ZI[2]=YI[rX[6]];uI=uI+0x1;uI=uI+0X1;rX=bc[uI];local zG=(Uc[rX[5]]);local pG=zG[5];uI=uI+1;local qG=#pG;local eG,sG=2,(nil);do if qG>0X000 then sG={};do for vF=1,qG do local FF=(pG[vF]);if FF[1]~=0X00 then sG[vF-1]=jc[FF[2]];else(sG)[vF-0X1]={ZI,FF[2]};end;end;end;(S)(Lc,sG);end;end;(ZI)[3]=e3(zG,sG,YI);uI=uI+0X00001;ZI[eG](ZI[eG+1]);vI=eG-1;local iG=(jc[0x1]);uI=uI+0X1;uI=uI+1;uI=uI+1;do ZI[0X0002]=iG[1][iG[0X2]];end;uI=uI+0X01;uI=uI+1;do rX=bc[uI];end;uI=uI+1;local wG=(ZI[2]);eG=2;do(ZI)[eG+0X001]=wG;end;ZI[eG]=wG[rX[1]];do uI=uI+0x1;end;eG=0X2;ZI[eG](ZI[eG+0X001]);vI=eG-1;do uI=uI+0X1;end;uI=uI+1;uI=uI+0X1;repeat local Wa,ha=Lc,ZI;if#Wa>0X000 then local Ja={};do for kN,hN in M,Wa do do for T7,t7 in M,hN do do if not(t7[0X1]==ha and t7[0X2]>=1)then else local CX=t7[2];do if not Ja[CX]then do(Ja)[CX]={ha[CX]};end;end;end;t7[0X0001]=Ja[CX];(t7)[2]=1;end;end;end;end;end;end;end;until true;rX=bc[uI];uI=uI+1;uI=rX[5];else local rf=Uc[rX[5]];local hf=rf[0X5];local If=nil;local Qf=#hf;do if not(Qf>0X0)then else If={};for tc=0X1,Qf do local Bc=(hf[tc]);if Bc[0X0001]==0x0 then If[tc-0x01]={ZI,Bc[0X2]};else(If)[tc-0X01]=jc[Bc[0X2]];end;end;S(Lc,If);end;end;ZI[rX[2]]=e3(rf,If,YI);end;end;else(ZI)[1]=YI[rX[0X006]];do uI=uI+1;end;uI=uI+0x1;rX=bc[uI];do uI=uI+1;end;ZI[0X02]=rX[6];local Yp=(1);do uI=uI+1;end;(ZI)[Yp]=ZI[Yp](ZI[Yp+1]);vI=Yp;rX=bc[uI];uI=uI+1;(ZI)[0X2]=ZI[1][rX[1]];rX=bc[uI];uI=uI+0X1;do if not(not ZI[0X02])then else uI=rX[5];end;end;end;end;else if not(cX<16)then if cX==17 then do(ZI)[0]=YI[rX[0X06]];end;rX=bc[uI];uI=uI+1;local w0=0X0;do ZI[0x01]=rX[0X6];end;do uI=uI+0X1;end;ZI[w0]=ZI[w0](ZI[w0+0X1]);vI=w0;uI=uI+1;uI=uI+0X1;do rX=bc[uI];end;uI=uI+0x0001;do(ZI)[1]=ZI[0][rX[0X1]];end;do rX=bc[uI];end;uI=uI+1;if ZI[1]then uI=rX[5];end;else ZI[rX[0x2]]=YI[rX[0x06]];end;else(ZI)[1]=YI[rX[6]];rX=bc[uI];do uI=uI+1;end;ZI[0X1]=ZI[1][rX[0X01]];rX=bc[uI];uI=uI+1;if not ZI[0x0001]then uI=rX[5];end;end;end;end;end;end;end);if nI then if rI then if jI~=0X1 then return ZI[xI](E(ZI,xI+0X1,vI));else do return ZI[xI]();end;end;elseif xI then return E(ZI,xI,jI);end;else if V(rI)=='str\105\110g'then do if r(rI,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(r(rI,'\094\046-\058\037\100+\058 '))then(q)(rI,0);else(q)("Luraph Script:"..(Qc[uI-1]or'\040\105\110tern\097\108)')..":\032"..u(rI),0);end;else q(rI,0X0);end;end;end;end;else do if Sc==158 then ic=function(...)local pR={};local hR=(1);local TR=((k and k()or _ENV));local OR=0X0;local LR,KR=q3(...);local CR,MR=(TR==H and fc or TR),{[1]=pR,[2]=Vc};LR=LR-1;for sO=0x0,LR do if ac>sO then do(pR)[sO]=KR[sO+0X1];end;else break;end;end;do if not nc then KR=nil;elseif Ac then do pR[ac]={n=LR>=ac and LR-ac+0x0001 or 0,E(KR,ac+1,LR+1)};end;end;end;do if CR~=TR then if not(s)then do _ENV=CR;end;else s(ic,CR);end;end;end;local zR,uR,nR,IR=c(function()while true do local TT=bc[hR];local ET=TT[3];hR=hR+0X00001;if not(ET<13)then do if ET>=0X13 then if not(ET>=22)then do if not(ET>=0X14)then local Il=(TT[2]);for ga=Il,Il+(TT[5]-1)do do pR[ga]=KR[ac+(ga-Il)+1];end;end;else do if ET==0X15 then repeat local kM,VM=Lc,(pR);if#kM>0X0 then local Hw=({});for Hp,rp in M,kM do do for QH,bH in M,rp do do if not(bH[0x01]==VM and bH[0x2]>=0)then else local FL=(bH[2]);do if not(not Hw[FL])then else do Hw[FL]={VM[FL]};end;end;end;do bH[0X01]=Hw[FL];end;bH[0X2]=1;end;end;end;end;end;end;until true;local Ko=TT[0X2];return false,Ko,Ko;else pR[8]=pR[0X0][pR[0X7]];hR=hR+1;hR=hR+1;hR=hR+0X0001;local Vf=0X00009;(pR)[9]=pR[0X1];do hR=hR+0X1;end;do(pR)[0Xa]=pR[0x8];end;do hR=hR+0X1;end;do(pR)[0x9]=pR[Vf]..pR[Vf+1];end;hR=hR+1;do pR[0X1]=pR[0x009];end;do hR=hR+1;end;(pR)[0x009]=#pR[0X0];TT=bc[hR];hR=hR+1;if pR[9]~=pR[7]then else hR=TT[0X2];end;end;end;end;end;else if not(ET<24)then if ET~=25 then local QQ=Uc[TT[5]];local lQ=(QQ[5]);local PQ=(nil);local kQ=(#lQ);if kQ>0X00 then PQ={};for eF=1,kQ do local tF=(lQ[eF]);do if tF[1]~=0 then PQ[eF-1]=jc[tF[2]];else PQ[eF-1]={pR,tF[0X2]};end;end;end;S(Lc,PQ);end;(pR)[TT[2]]=e3(QQ,PQ,CR);else local Im=4;local Om=pR[0X1];pR[Im+1]=Om;pR[Im]=Om[TT[0x1]];TT=bc[hR];do hR=hR+1;end;pR[6]=TT[6];hR=hR+0x01;(pR)[0X0007]=#pR[0x1];TT=bc[hR];hR=hR+0x001;do(pR)[0x00007]=pR[7]-TT[0X1];end;hR=hR+0x1;Im=4;OR=Im+0X00004-1;pR[Im]=pR[Im](E(pR,Im+1,OR));OR=Im;hR=hR+1;(pR)[0X1]=pR[4];TT=bc[hR];hR=hR+1;hR=TT[5];end;else if ET~=0X17 then do(pR)[TT[0X002]]=TT[6];end;else if not pR[TT[2]]then hR=TT[5];end;end;end;end;else if not(ET<16)then if ET<0X011 then pR[TT[0X2]]=CR[TT[0x6]];else if ET~=0X12 then(pR)[0X4]=CR[TT[6]];TT=bc[hR];hR=hR+0X1;pR[4]=pR[4][TT[0X1]];hR=hR+0X01;hR=hR+1;hR=hR+1;pR[5]=pR[0];TT=bc[hR];hR=hR+1;pR[0X6]=TT[0X6];local zL=4;hR=hR+0X1;(pR[zL])(pR[zL+1],pR[zL+2]);do OR=zL-0X1;end;TT=bc[hR];hR=hR+0X1;pR[0X4]=CR[TT[0X6]];hR=hR+0X1;do hR=hR+0X01;end;TT=bc[hR];hR=hR+1;pR[5]=pR[0][TT[1]];hR=hR+1;zL=0X4;pR[zL]=pR[zL](pR[zL+0x1]);OR=zL;TT=bc[hR];do hR=hR+0X1;end;if not pR[4]then hR=TT[5];end;else pR[0x0004]=CR[TT[0x6]];hR=hR+0X0001;do hR=hR+1;end;TT=bc[hR];hR=hR+1;(pR)[4]=pR[4][TT[0x001]];hR=hR+0X00001;hR=hR+1;hR=hR+0X0001;local Qt=(4);(pR)[5]=pR[0];TT=bc[hR];hR=hR+0X00001;do pR[0X6]=TT[0X006];end;hR=hR+1;(pR[Qt])(pR[Qt+1],pR[Qt+2]);OR=Qt-1;do hR=hR+0X1;end;hR=hR+1;end;end;else if ET>=14 then if ET==0Xf then pR[4]=CR[TT[0X6]];hR=hR+1;local BK=4;hR=hR+1;TT=bc[hR];hR=hR+1;local qK=(4);pR[4]=pR[4][TT[1]];hR=hR+0x1;hR=hR+1;hR=hR+0x0001;do pR[0X5]=pR[0];end;hR=hR+1;do pR[6]=#pR[0X0];end;hR=hR+1;(pR[BK])(pR[BK+0x01],pR[BK+2]);do OR=BK-0X0001;end;do TT=bc[hR];end;hR=hR+0X01;pR[4]=TT[0X06];hR=hR+1;(pR)[0X5]=#pR[0];TT=bc[hR];hR=hR+1;pR[0X6]=TT[0x6];TT=bc[hR];hR=hR+0x1;BK=pR[qK];local fK,oK=pR[qK+1],(pR[qK+2]);do pR[qK]=P(function()for fQ=BK,fK,oK do(C)(true,fQ);end;end);end;hR=TT[5];else do hR=TT[0X5];end;end;else pR[TT[0X2]]=pR[TT[5]]>pR[TT[4]];end;end;end;end;else if ET>=6 then do if not(ET<0x09)then if not(ET<0X00b)then if ET~=12 then repeat local EL,lL=Lc,pR;if not(#EL>0X0)then else local Nk=({});do for jG,kG in M,EL do for p1,e1 in M,kG do if e1[1]==lL and e1[2]>=0 then local kJ=(e1[2]);if not(not Nk[kJ])then else(Nk)[kJ]={lL[kJ]};end;do(e1)[0X1]=Nk[kJ];end;do(e1)[2]=1;end;end;end;end;end;end;until true;return;else pR[TT[0X002]]={E({},1,TT[0X0005])};end;else if ET==10 then(pR)[9]=pR[1];do TT=bc[hR];end;hR=hR+1;(pR)[0X0a]=TT[0X6];hR=hR+1;local XG=0x009;(pR)[0X9]=pR[XG]..pR[XG+1];do hR=hR+0x1;end;(pR)[1]=pR[9];do TT=bc[hR];end;do hR=hR+0x1;end;do hR=TT[0X5];end;else pR[4]=false;hR=hR+1;do(pR)[0X3]=pR[4];end;TT=bc[hR];hR=hR+0X1;hR=TT[0x5];end;end;else if ET<7 then do pR[TT[0X002]]=TT[0x06];end;else if ET==0X8 then do for Z0=TT[2],TT[5]do pR[Z0]=nil;end;end;else end;end;end;end;else if ET>=3 then if not(ET>=4)then(pR)[0x00]=CR[TT[6]];TT=bc[hR];hR=hR+1;pR[0]=pR[0X00][TT[1]];hR=hR+1;do hR=hR+0X0001;end;do TT=bc[hR];end;hR=hR+1;do(pR)[0]=pR[0][TT[1]];end;TT=bc[hR];hR=hR+0X01;(pR)[0X000]=pR[0][TT[1]];hR=hR+0X1;local tK=0;do hR=hR+0X00001;end;TT=bc[hR];hR=hR+1;pR[0]=pR[0X0][TT[1]];hR=hR+1;hR=hR+0X1;TT=bc[hR];do hR=hR+1;end;pR[0]=pR[0][TT[1]];hR=hR+1;hR=hR+0X00001;TT=bc[hR];hR=hR+0X01;(pR)[0]=pR[0X000][TT[0X1]];hR=hR+0X1;hR=hR+1;TT=bc[hR];do hR=hR+1;end;do pR[0]=pR[0][TT[0X1]];end;TT=bc[hR];hR=hR+0X0001;pR[0X00]=pR[0][TT[0X1]];TT=bc[hR];do hR=hR+1;end;(pR)[0]=pR[0][TT[0x1]];TT=bc[hR];hR=hR+0X001;local GK=pR[0];(pR)[tK+1]=GK;pR[tK]=GK[TT[1]];TT=bc[hR];do hR=hR+1;end;pR[2]=TT[6];hR=hR+1;tK=0;do pR[tK]=pR[tK](pR[tK+0X1],pR[tK+2]);end;OR=tK;hR=hR+1;hR=hR+1;TT=bc[hR];hR=hR+0X1;(pR)[1]=TT[0X6];hR=hR+0X1;(pR)[2]=#pR[0X000];hR=hR+1;(pR)[3]=true;do hR=hR+1;end;do pR[0x4]=pR[0][pR[0x2]];end;hR=hR+0X1;do hR=hR+1;end;TT=bc[hR];hR=hR+1;tK=4;GK=pR[4];do pR[tK+1]=GK;end;(pR)[tK]=GK[TT[1]];TT=bc[hR];hR=hR+0X1;(pR)[6]=TT[0x006];do hR=hR+0X1;end;tK=0x4;pR[tK]=pR[tK](pR[tK+1],pR[tK+0X2]);OR=tK;hR=hR+1;hR=hR+0X01;TT=bc[hR];hR=hR+1;if not(not pR[0X4])then else hR=TT[0X05];end;else do if ET==5 then(pR)[0]=CR[TT[0x6]];do TT=bc[hR];end;hR=hR+1;(pR)[0]=pR[0][TT[0X001]];hR=hR+0X0001;hR=hR+1;do TT=bc[hR];end;hR=hR+1;pR[0]=pR[0X0][TT[0x1]];do hR=hR+1;end;hR=hR+1;TT=bc[hR];hR=hR+1;(pR)[0X00]=pR[0][TT[1]];do hR=hR+1;end;do hR=hR+0X0001;end;TT=bc[hR];do hR=hR+0X0001;end;pR[0X0]=pR[0][TT[1]];TT=bc[hR];do hR=hR+0x1;end;(pR)[0x0]=pR[0][TT[1]];do hR=hR+1;end;hR=hR+0x1;TT=bc[hR];hR=hR+1;(pR)[0]=pR[0X0][TT[0X1]];hR=hR+1;hR=hR+1;TT=bc[hR];do hR=hR+1;end;if not(not pR[0])then else hR=TT[0X5];end;else do pR[TT[2]]=pR[TT[5]];end;end;end;end;else do if ET<1 then do if not(pR[TT[0X0005]]<=pR[TT[4]])then else hR=TT[0X2];end;end;else if ET~=0x00002 then local z9=TT[2];local x9,P9=pR[z9]();if not(x9)then else hR=TT[0X5];do(pR)[z9+3]=P9;end;end;else MR[TT[0x5]]=pR[TT[0x0002]];end;end;end;end;end;end;end;end);if zR then if uR then if IR==1 then do return pR[nR]();end;else return pR[nR](E(pR,nR+0X1,OR));end;elseif nR then return E(pR,nR,IR);end;else if V(uR)~="\115tring"then(q)(uR,0);else do if not(r(uR,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;do if not(r(uR,"^.-:%d+: "))then q(uR,0X00000);else q('\076u\114ap\104\032\083c\114ip\116:'..(Qc[hR-0X1]or"(internal)")..":\032"..u(uR),0x00);end;end;end;end;end;else ic=function(...)local bW,vW=1,{};local pW=0x0;local cW=((k and k()or _ENV));local KW,dW=q3(...);local UW,EW=(cW==H and fc or cW),{[1]=vW,[2]=Vc};KW=KW-1;for Uo=0X0000,KW do if not(ac>Uo)then break;else do vW[Uo]=dW[Uo+0X01];end;end;end;if not nc then dW=nil;elseif Ac then(vW)[ac]={n=KW>=ac and KW-ac+1 or 0,E(dW,ac+1,KW+1)};end;if UW==cW then else if s then(s)(ic,UW);else _ENV=UW;end;end;local JW,lW,NW,aW=c(function()do while true do local Cl=(bc[bW]);local pl=(Cl[0X3]);bW=bW+0X00001;if pl>=10 then if not(pl<0X0000F)then if not(pl>=17)then do if pl~=16 then do vW[Cl[0X02]]=vW[Cl[0X00005]]*vW[Cl[0x4]];end;else local TX,aX=Uc[Cl[0X5]],(nil);local cX=(TX[5]);local JX=#cX;if JX>0X00 then aX={};for lJ=1,JX do local eJ=cX[lJ];if eJ[1]==0X0 then aX[lJ-0X001]={vW,eJ[0X002]};else do aX[lJ-1]=jc[eJ[2]];end;end;end;S(Lc,aX);end;vW[Cl[0X2]]=e3(TX,aX,UW);end;end;else do if pl<18 then if vW[Cl[0X2]]then bW=Cl[5];end;else do if pl==19 then vW[Cl[2]]=not vW[Cl[0X5]];else repeat local eL,hL=Lc,(vW);if#eL>0X0 then local F_={};for Yh,Ih in M,eL do do for yp,Jp in M,Ih do if not(Jp[1]==hL and Jp[2]>=0X0000)then else local Cs=(Jp[0X2]);do if not(not F_[Cs])then else(F_)[Cs]={hL[Cs]};end;end;Jp[0x01]=F_[Cs];do Jp[2]=1;end;end;end;end;end;end;until true;local bp=Cl[0X2];return false,bp,bp;end;end;end;end;end;else if not(pl<0XC)then do if pl>=13 then if pl==14 then(vW)[Cl[2]]=EW[Cl[5]];else vW[Cl[2]]=Cl[6];end;else do if not vW[Cl[0X2]]then bW=Cl[5];end;end;end;end;else if pl~=11 then(vW)[Cl[0X2]]=vW[Cl[0X005]]<=vW[Cl[4]];else repeat local ET,KT=Lc,(vW);if not(#ET>0)then else local gT={};for tM,GM in M,ET do do for Iq,oq in M,GM do do if not(oq[0x1]==KT and oq[2]>=0X0)then else local Um=(oq[0X2]);do if not(not gT[Um])then else gT[Um]={KT[Um]};end;end;(oq)[1]=gT[Um];(oq)[0x00002]=0x01;end;end;end;end;end;end;until true;return;end;end;end;else if not(pl>=5)then if pl>=0X02 then do if pl>=3 then if pl==0X4 then local p0=(jc[0]);(vW)[0X0000]=p0[0X00001][p0[0X00002]];do bW=bW+1;end;vW[0x0]=not vW[0];Cl=bc[bW];bW=bW+1;if not(vW[0X00])then else bW=Cl[5];end;else for js=Cl[0X2],Cl[5]do(vW)[js]=nil;end;end;else do vW[0x00]=UW[Cl[6]];end;bW=bW+0X01;bW=bW+1;Cl=bc[bW];bW=bW+0X1;vW[0x0]=vW[0X0][Cl[1]];do bW=bW+1;end;vW[0]=not vW[0];do Cl=bc[bW];end;bW=bW+1;bW=Cl[5];end;end;else do if pl~=1 then do vW[Cl[0X2]]={E({},1,Cl[5])};end;else local IN=(jc[0]);vW[0]=IN[0x01][IN[2]];bW=bW+0X1;bW=bW+1;Cl=bc[bW];bW=bW+1;vW[0X0]=vW[0][Cl[1]];bW=bW+0X1;bW=bW+1;Cl=bc[bW];do bW=bW+0X1;end;do vW[0X0]=vW[0X0]<Cl[0X1];end;end;end;end;else if not(pl>=0X7)then do if pl==6 then else vW[Cl[0X2]]=UW[Cl[6]];end;end;else do if pl>=8 then if pl==0X09 then local w4=(jc[1]);do vW[0x00]=w4[1][w4[0X2]];end;local u4=0;Cl=bc[bW];do bW=bW+1;end;local S4=(vW[0]);vW[u4+0X01]=S4;(vW)[u4]=S4[Cl[0X0001]];bW=bW+1;u4=0;vW[u4]=vW[u4](vW[u4+0X1]);do pW=u4;end;do bW=bW+1;end;bW=bW+0x1;Cl=bc[bW];bW=bW+1;bW=Cl[0X5];else do bW=Cl[0X005];end;end;else if vW[Cl[5]]~=vW[Cl[4]]then else bW=Cl[0X2];end;end;end;end;end;end;end;end;end);if JW then if lW then if aW==0X01 then do return vW[NW]();end;else return vW[NW](E(vW,NW+0x1,pW));end;elseif NW then return E(vW,NW,aW);end;else if V(lW)=="string"then do if not(r(lW,"a\116\116e\109\112\116 t\111 yie\108d\032ac\114\111\115s \109et\097\109e\116h\111d/\067\037\045c\097ll\032\098o\117\110da\114y"))then else return coroutine.yield();end;end;if not(r(lW,"^.-:%d+: "))then q(lW,0);else q("Luraph Script:"..(Qc[bW-0X1]or"(internal)")..": "..u(lW),0x0);end;else(q)(lW,0X00);end;end;end;end;end;end;else do if Sc>=0Xa3 then if Sc==0xA4 then ic=function(...)local tC,kC=0X1,{};local bC=(k and k()or _ENV);local wC,IC,lC={[2]=Vc,[1]=kC},0,((bC==H and fc or bC));local JC,aC=q3(...);do JC=JC-0X00001;end;for I8=0,JC do do if ac>I8 then do kC[I8]=aC[I8+0X1];end;else break;end;end;end;do if not nc then aC=nil;elseif not(Ac)then else do(kC)[ac]={n=JC>=ac and JC-ac+0X0001 or 0,E(aC,ac+1,JC+1)};end;end;end;if lC~=bC then do if s then s(ic,lC);else _ENV=lC;end;end;end;local PC,cC,KC,RC=c(function()do while true do local P0=(bc[tC]);local R0=(P0[3]);do tC=tC+0X1;end;do if R0>=0X007 then if R0>=10 then if R0>=12 then if R0==13 then local Cy=Uc[P0[5]];local ly,gy=Cy[0X005],nil;local ay=#ly;if not(ay>0)then else gy={};for Gn=0x1,ay do local Dn=ly[Gn];if Dn[1]~=0X0 then gy[Gn-0X1]=jc[Dn[0X2]];else gy[Gn-0X1]={kC,Dn[2]};end;end;(S)(Lc,gy);end;kC[P0[0X2]]=e3(Cy,gy,lC);else for xm=P0[0x0002],P0[0X0005]do(kC)[xm]=nil;end;end;else if R0~=11 then else do kC[P0[2]]=not kC[P0[5]];end;end;end;else if not(R0>=0X0008)then do if not(kC[P0[0X5]]<kC[P0[4]])then else do tC=P0[0X2];end;end;end;else if R0~=0X09 then(kC)[P0[2]]={E({},1,P0[0X05])};else repeat local z4,Z4,j4=Lc,kC,(P0[0X2]);do if not(#z4>0X00000)then else local Ov=({});for u6,Y6 in M,z4 do do for F6,a6 in M,Y6 do do if not(a6[0X0001]==Z4 and a6[0x002]>=j4)then else local B0=(a6[0X2]);do if not(not Ov[B0])then else(Ov)[B0]={Z4[B0]};end;end;(a6)[1]=Ov[B0];a6[0X2]=1;end;end;end;end;end;end;end;until true;end;end;end;else do if R0<3 then do if R0>=1 then do if R0==0X2 then tC=P0[5];else do kC[P0[0x2]]=P0[0X6];end;end;end;else local Nv,wv=P0[2],P0[0X5];do IC=Nv+wv-0x1;end;repeat local yT,lT=Lc,(kC);if not(#yT>0X000)then else local Tu={};for i7,V7 in M,yT do for kl,hl in M,V7 do if hl[0X1]==lT and hl[2]>=0X0 then local gP=(hl[2]);if not(not Tu[gP])then else do Tu[gP]={lT[gP]};end;end;(hl)[1]=Tu[gP];hl[0x2]=0X1;end;end;end;end;until true;do return true,Nv,wv;end;end;end;else if R0>=0X00005 then if R0==0x0006 then repeat local KK,yK=Lc,(kC);if not(#KK>0)then else local Zn=({});do for Yg,yg in M,KK do for NH,CH in M,yg do if CH[1]==yK and CH[0x02]>=0 then local mP=CH[0X2];if not Zn[mP]then Zn[mP]={yK[mP]};end;CH[1]=Zn[mP];(CH)[2]=0X01;end;end;end;end;end;until true;local bf=(P0[2]);return false,bf,bf;else(kC)[P0[0x02]]=lC[P0[0X6]];end;else if R0==0x4 then kC[P0[0x2]]=-kC[P0[5]];else(kC)[0x00]=lC[P0[6]];P0=bc[tC];local Ek=(0);tC=tC+0X1;local yk=(kC[0X0]);do(kC)[Ek+0X1]=yk;end;kC[Ek]=yk[P0[0x1]];P0=bc[tC];do tC=tC+1;end;(kC)[2]=P0[0x6];tC=tC+0x1;Ek=0X0;(kC)[Ek]=kC[Ek](kC[Ek+1],kC[Ek+2]);do IC=Ek;end;P0=bc[tC];tC=tC+0X1;kC[0X01]=lC[P0[6]];P0=bc[tC];tC=tC+0X01;(kC)[0x00001]=kC[1][P0[0X1]];P0=bc[tC];local wk=(Uc[P0[0X005]]);local kk=wk[5];tC=tC+1;local ek,Dk=nil,#kk;do if Dk>0x00 then ek={};for GU=1,Dk do local oU=(kk[GU]);if oU[0X1]==0X0 then do(ek)[GU-1]={kC,oU[2]};end;else ek[GU-1]=jc[oU[0X2]];end;end;S(Lc,ek);end;end;do(kC)[2]=e3(wk,ek,lC);end;do tC=tC+1;end;Ek=1;(kC[Ek])(kC[Ek+1]);IC=Ek-0X00001;tC=tC+1;tC=tC+0X001;tC=tC+0X1;repeat local HR,ER=Lc,kC;do if#HR>0 then local x9=({});for hJ,cJ in M,HR do for hS,pS in M,cJ do if pS[0X0001]==ER and pS[2]>=0 then local Ly=(pS[0X002]);if not(not x9[Ly])then else x9[Ly]={ER[Ly]};end;do pS[1]=x9[Ly];end;(pS)[2]=0X00001;end;end;end;end;end;until true;return;end;end;end;end;end;end;end;end;end);if not(PC)then if V(cC)~="string"then q(cC,0x0);else if r(cC,'at\116em\112\116 t\111 \121i\101ld\032acr\111s\115\032\109\101\116am\101\116\104\111d/C\037-c\097\108\108 \098\111u\110\100\097\114\121')then return coroutine.yield();end;if not(r(cC,'^\046-:%\100\043\058 '))then(q)(cC,0);else q('Lu\114aph S\099rip\116:'..(Qc[tC-1]or"(internal)")..'\058\032'..u(cC),0x0);end;end;else if cC then if RC~=0X1 then return kC[KC](E(kC,KC+0x00001,IC));else return kC[KC]();end;elseif KC then return E(kC,KC,RC);end;end;end;else do ic=function(...)local hs=1;local Js=({});local us=((k and k()or _ENV));local Hs=(us==H and fc or us);local ws,ss=q3(...);local Rs=({[1]=Js,[2]=Vc});ws=ws-1;local Es=0;for O7=0,ws do if not(ac>O7)then break;else do(Js)[O7]=ss[O7+0X01];end;end;end;if not nc then ss=nil;elseif not(Ac)then else Js[ac]={n=ws>=ac and ws-ac+0x001 or 0,E(ss,ac+1,ws+0x1)};end;if Hs~=us then if not(s)then _ENV=Hs;else s(ic,Hs);end;end;local Ss,Xs,Ts,Us=c(function()while true do local wO=bc[hs];local TO=wO[3];hs=hs+0X00001;do if not(TO<0X09)then if not(TO<0Xe)then do if TO>=16 then if TO<0x0011 then local ly=wO[0X2];local Jy,wy=Js[ly]();do if not(Jy)then else for nX=0X1,wO[4]do Js[ly+nX]=wy[nX];end;hs=wO[0x5];end;end;else do if TO~=0X012 then local hu=Uc[wO[0x0005]];local wu,su=hu[5],nil;local Vu=#wu;do if Vu>0X0 then su={};for iH=0X001,Vu do local FH=(wu[iH]);if FH[1]==0X0 then(su)[iH-1]={Js,FH[2]};else(su)[iH-1]=jc[FH[2]];end;end;(S)(Lc,su);end;end;Js[wO[0X0002]]=e3(hu,su,Hs);else hs=wO[5];end;end;end;else if TO~=15 then local fR=(wO[2]);local XR,vR=Js[fR]();if not(XR)then else hs=wO[5];(Js)[fR+0X00003]=vR;end;else do(Js)[0x0]=Hs[wO[0x6]];end;hs=hs+0X001;hs=hs+1;wO=bc[hs];hs=hs+0X001;(Js)[1]=Hs[wO[6]];local Ff=0X1;wO=bc[hs];do hs=hs+1;end;Js[2]=wO[6];do hs=hs+1;end;(Js)[3]=true;hs=hs+0X1;(Js)[Ff]=Js[Ff](Js[Ff+0X01],Js[Ff+0X2]);do Es=Ff;end;do hs=hs+1;end;hs=hs+1;wO=bc[hs];hs=hs+0X1;(Js)[0X001]=Js[1][wO[0X1]];wO=bc[hs];hs=hs+1;(Js)[0X01]=Js[0X1][wO[0X1]];hs=hs+1;hs=hs+0x00001;wO=bc[hs];hs=hs+1;do(Js[0])[wO[6]]=Js[1];end;do hs=hs+0X1;end;repeat local zs,Cs=Lc,(Js);if#zs>0 then local A5={};for Q1,o1 in M,zs do do for mg,Og in M,o1 do if Og[1]==Cs and Og[0x2]>=0 then local Vt=Og[0X2];do if not(not A5[Vt])then else(A5)[Vt]={Cs[Vt]};end;end;(Og)[0X1]=A5[Vt];Og[0X00002]=0x0001;end;end;end;end;end;until true;do return;end;end;end;end;else if not(TO>=11)then if TO==0Xa then local Kx=wO[0X2];for fG=Kx,Kx+(wO[5]-1)do do Js[fG]=ss[ac+(fG-Kx)+0X001];end;end;else for WU=wO[2],wO[5]do Js[WU]=nil;end;end;else do if TO>=0X00c then if TO==13 then(Js)[wO[2]]=Js[wO[0X5]];else local dJ=wO[2];local rJ=wO[5];if rJ==0 then else Es=dJ+rJ-0X1;end;local QJ,nJ,BJ=wO[0X0004],nil,nil;if rJ==1 then do nJ,BJ=q3(Js[dJ]());end;else nJ,BJ=q3(Js[dJ](E(Js,dJ+1,Es)));end;if QJ==0X1 then Es=dJ-0X1;else if QJ==0 then nJ=nJ+dJ-0X0001;Es=nJ;else nJ=dJ+QJ-2;do Es=nJ+1;end;end;local tb=(0);for e_=dJ,nJ do tb=tb+0X1;(Js)[e_]=BJ[tb];end;end;end;else end;end;end;end;else if TO<0X4 then if not(TO>=0X2)then if TO==0x1 then Js[wO[0X002]]=Hs[wO[0X6]];else local y5=wO[0x5];local Q5=(Js[y5]);for wc=y5+0X001,wO[0X004]do do Q5=Q5..Js[wc];end;end;(Js)[wO[0X2]]=Q5;end;else if TO~=0X3 then Js[wO[0X2]]=Js[wO[5]][Js[wO[4]]];else Js[wO[0x2]]={E({},1,wO[5])};end;end;else if TO<0X6 then if TO~=5 then repeat local wy,ry=Lc,(Js);if#wy>0 then local ku={};for dq,Pq in M,wy do for Fd,Od in M,Pq do if Od[0X1]==ry and Od[2]>=0X0 then local jT=Od[2];do if not ku[jT]then do(ku)[jT]={ry[jT]};end;end;end;do(Od)[1]=ku[jT];end;(Od)[2]=0X1;end;end;end;end;until true;local uP=(wO[2]);do return false,uP,uP+wO[5]-2;end;else(Js)[wO[0X02]]=wO[6];end;else do if TO>=0X7 then if TO==0X8 then(Js)[wO[2]]=Js[wO[0X5]]>=Js[wO[0X004]];else if Js[wO[0x00005]]~=Js[wO[0X4]]then else hs=wO[0X002];end;end;else(Js)[wO[0X2]]=Js[wO[5]]^Js[wO[0X4]];end;end;end;end;end;end;end;end);if Ss then do if Xs then if Us~=1 then do return Js[Ts](E(Js,Ts+0X1,Es));end;else return Js[Ts]();end;elseif Ts then return E(Js,Ts,Us);end;end;else do if V(Xs)~="s\116r\105\110g"then(q)(Xs,0X0);else if r(Xs,'att\101mp\116\032to\032\121ie\108d\032a\099ros\115\032m\101\116\097m\101thod/C\037\045ca\108l\032b\111\117\110\100ary')then return coroutine.yield();end;if r(Xs,"^.-:%d+: ")then q("Lur\097p\104\032\083c\114i\112\116:"..(Qc[hs-1]or"(internal)")..": "..u(Xs),0);else(q)(Xs,0);end;end;end;end;end;end;end;else if Sc==0Xa2 then do ic=function(...)local yS=({});local lS=(1);local bS=0;local HS=(k and k()or _ENV);local VS=((HS==H and fc or HS));local QS,LS=q3(...);local nS={[2]=Vc,[1]=yS};QS=QS-0x0001;do for Kg=0,QS do do if ac>Kg then(yS)[Kg]=LS[Kg+1];else break;end;end;end;end;if not nc then LS=nil;elseif Ac then yS[ac]={n=QS>=ac and QS-ac+1 or 0X0,E(LS,ac+0X0001,QS+0X00001)};end;if VS~=HS then if s then(s)(ic,VS);else _ENV=VS;end;end;local DS,kS,BS,tS=c(function()while true do local Tr=bc[lS];local Ir=Tr[0X3];do lS=lS+1;end;if Ir<7 then do if Ir<3 then if Ir<1 then(yS)[Tr[2]]=yS[Tr[0X05]]%yS[Tr[0X4]];else if Ir~=2 then local io=Tr[2];local Ko=(P(function(...)(C)();do for ou,Du,tu,bu,Uu,Wu,Gu,Lu,lu,su in...do(C)(true,{ou,Du,tu,bu,Uu,Wu,Gu,Lu,lu,su});end;end;end));(Ko)(yS[io],yS[io+1],yS[io+2]);bS=io;yS[io]=Ko;lS=Tr[5];else do yS[0x000]=Tr[6];end;local lG=0X0001;Tr=bc[lS];do lS=lS+1;end;yS[0X1]=VS[Tr[0X006]];Tr=bc[lS];lS=lS+1;do yS[1]=yS[1][Tr[1]];end;Tr=bc[lS];local ZG=(Uc[Tr[0x05]]);lS=lS+0X1;local iG,PG=nil,ZG[0X5];local NG=#PG;if NG>0 then do iG={};end;for z6=1,NG do local w6=PG[z6];if w6[1]~=0 then iG[z6-0X1]=jc[w6[2]];else iG[z6-0X1]={yS,w6[2]};end;end;S(Lc,iG);end;(yS)[2]=e3(ZG,iG,VS);lS=lS+0X1;yS[lG](yS[lG+1]);bS=lG-1;do lS=lS+0X1;end;lS=lS+1;lS=lS+0X1;do repeat local Vn,wn=Lc,(yS);if not(#Vn>0)then else local Uk={};for Nu,zu in M,Vn do for KL,sL in M,zu do if sL[0X01]==wn and sL[2]>=0 then local lg=sL[0x02];do if not Uk[lg]then do Uk[lg]={wn[lg]};end;end;end;do(sL)[0X001]=Uk[lg];end;sL[2]=0X1;end;end;end;end;until true;end;return;end;end;else do if Ir<0X00005 then if Ir~=4 then local Tu=(Tr[2]);local ou=(Tr[4]-1)*0X0032;local Vu=(yS[Tu]);for vg=0x1,Tr[0X5]do(Vu)[ou+vg]=yS[Tu+vg];end;else if not(yS[Tr[5]]<=yS[Tr[0X4]])then lS=Tr[0X2];end;end;else if Ir~=6 then else local xC=(Uc[Tr[0X5]]);local FC=nil;local iC=xC[0X005];local vC=#iC;if not(vC>0)then else FC={};for GC=1,vC do local sC=iC[GC];do if sC[1]==0X0000 then FC[GC-1]={yS,sC[0X02]};else do(FC)[GC-1]=jc[sC[2]];end;end;end;end;S(Lc,FC);end;do(yS)[Tr[2]]=e3(xC,FC,VS);end;end;end;end;end;end;else do if not(Ir>=11)then if not(Ir>=9)then do if Ir==0x8 then do(yS)[Tr[2]]={E({},1,Tr[5])};end;else for cT=Tr[0X2],Tr[5]do do(yS)[cT]=nil;end;end;end;end;else if Ir==0X0a then(yS)[Tr[0X002]]=true;else yS[Tr[0X2]]=yS[Tr[0X5]]>=yS[Tr[0X4]];end;end;else if not(Ir<13)then if Ir~=0X0000E then yS[Tr[2]]=VS[Tr[0x006]];else yS[Tr[0x2]]=Tr[6];end;else if Ir~=12 then do lS=Tr[5];end;else if not(yS[Tr[2]])then else lS=Tr[0X005];end;end;end;end;end;end;end;end);if not(DS)then do if V(kS)~="string"then q(kS,0);else if r(kS,"at\116e\109pt t\111\032\121\105e\108\100 ac\114os\115 \109etame\116hod\047C\037\045\099a\108\108\032\098o\117nd\097\114\121")then do return coroutine.yield();end;end;if not(r(kS,'\094\046-:\037d+\058 '))then q(kS,0);else(q)("\076\117raph \083\099\114ip\116:"..(Qc[lS-1]or'(\105\110\116ern\097\108\041')..": "..u(kS),0);end;end;end;else if kS then if tS~=1 then return yS[BS](E(yS,BS+0X00001,bS));else return yS[BS]();end;elseif not(BS)then else do return E(yS,BS,tS);end;end;end;end;end;else ic=function(...)local tL,lL=0X1,{};local bL=((k and k()or _ENV));local NL={[1]=lL,[2]=Vc};local ZL,eL=q3(...);ZL=ZL-0X001;local oL=((bL==H and fc or bL));for gQ=0,ZL do if not(ac>gQ)then break;else lL[gQ]=eL[gQ+0X0001];end;end;local SL=0;if not nc then eL=nil;elseif not(Ac)then else do lL[ac]={n=ZL>=ac and ZL-ac+0x1 or 0,E(eL,ac+1,ZL+0X01)};end;end;if oL~=bL then do if s then s(ic,oL);else _ENV=oL;end;end;end;local YL,ML,pL,AL=c(function()while true do local lH=bc[tL];local tH=lH[0x3];do tL=tL+0X1;end;if not(tH>=11)then if tH<0X5 then if tH>=0X02 then if not(tH<0X3)then do if tH~=0X004 then do lL[lH[2]]=lL[lH[5]];end;else tL=lH[0X5];end;end;else lL[0x1]=false;do lH=bc[tL];end;tL=tL+1;do(oL)[lH[0X6]]=lL[1];end;lH=bc[tL];tL=tL+0X1;tL=lH[0X05];end;else do if tH~=0X1 then repeat local sG,cG=Lc,(lL);do if not(#sG>0)then else local qZ={};for yl,Tl in M,sG do for jA,SA in M,Tl do if not(SA[1]==cG and SA[2]>=0)then else local tN=SA[0X2];if not(not qZ[tN])then else(qZ)[tN]={cG[tN]};end;(SA)[0X1]=qZ[tN];(SA)[2]=0X1;end;end;end;end;end;until true;return;else local zJ=lH[0X0002];local rJ,CJ,KJ=lL[zJ]();if not(rJ)then else lL[zJ+1]=CJ;(lL)[zJ+0X2]=KJ;tL=lH[0X5];end;end;end;end;else do if not(tH>=8)then if tH>=6 then do if tH==7 then if not(not lL[lH[2]])then else tL=lH[0X0005];end;else end;end;else local j9=(lH[2]);local b9=lH[0x005];if b9~=0 then SL=j9+b9-0X1;end;local z9,r9=nil,nil;local J9=lH[4];if b9==0X1 then z9,r9=q3(lL[j9]());else z9,r9=q3(lL[j9](E(lL,j9+0x01,SL)));end;if J9==0X001 then SL=j9-1;else do if J9==0 then z9=z9+j9-1;SL=z9;else z9=j9+J9-0X2;SL=z9+1;end;end;local bZ=0;do for z8=j9,z9 do bZ=bZ+0X1;do(lL)[z8]=r9[bZ];end;end;end;end;end;else if tH<0X009 then lL[1]=oL[lH[0x6]];do tL=tL+0X1;end;tL=tL+1;lH=bc[tL];tL=tL+1;local fv=1;do lL[2]=lL[0][lH[0X1]];end;do tL=tL+0X1;end;do tL=tL+1;end;tL=tL+0X01;local mv=2;if mv~=0 then SL=fv+mv-0X0001;end;local ov,zv,qv=0X00004,nil,(nil);if mv~=0X01 then zv,qv=q3(lL[fv](E(lL,fv+1,SL)));else do zv,qv=q3(lL[fv]());end;end;if ov==1 then SL=fv-1;else do if ov==0 then zv=zv+fv-0X1;SL=zv;else zv=fv+ov-0X2;SL=zv+1;end;end;local a9=(0x0);for dY=fv,zv do a9=a9+1;do(lL)[dY]=qv[a9];end;end;end;lH=bc[tL];tL=tL+1;fv=0X001;local Cv=P(function(...)(C)();do for DJ,ZJ in...do(C)(true,DJ,ZJ);end;end;end);(Cv)(lL[fv],lL[fv+0X1],lL[fv+0X00002]);SL=fv;do lL[fv]=Cv;end;tL=lH[5];else if tH~=0X0000A then oL[lH[0X6]]=lL[lH[2]];else lL[1]=oL[lH[0X6]];tL=tL+0X1;tL=tL+1;do lH=bc[tL];end;tL=tL+1;if not(not lL[0X1])then else do tL=lH[0X5];end;end;end;end;end;end;end;else do if not(tH<17)then if tH>=20 then if not(tH>=0X15)then do(lL)[lH[0x002]]=lL[lH[5]]<lL[lH[0x4]];end;else if tH~=22 then do(lL)[0X1]=oL[lH[6]];end;tL=tL+1;(lL)[0X001]=not lL[0X1];lH=bc[tL];tL=tL+1;(oL)[lH[0x6]]=lL[1];lH=bc[tL];tL=tL+1;tL=lH[0X00005];else lL[0x4]=lL[0][lH[0x1]];do lH=bc[tL];end;tL=tL+1;(lL)[4]=lL[0x00004][lH[1]];tL=tL+0X1;do(lL)[4]=lL[0X4][lL[2]];end;lH=bc[tL];tL=tL+1;(lL)[5]=lL[3]+lH[0X1];do tL=tL+0X1;end;lL[4]=lL[0X4]==lL[0X5];lH=bc[tL];tL=tL+0X01;do(oL)[lH[0X6]]=lL[4];end;lH=bc[tL];do tL=tL+1;end;tL=lH[0X5];end;end;else if not(tH<0x12)then do if tH==19 then if lL[lH[0X5]]==lL[lH[4]]then else tL=lH[0x2];end;else do lL[0X1]=oL[lH[6]];end;tL=tL+1;tL=tL+0X1;lH=bc[tL];tL=tL+0x1;(lL)[1]=lL[1][lH[1]];do tL=tL+1;end;tL=tL+1;lH=bc[tL];tL=tL+1;do if not lL[0X01]then do tL=lH[0X5];end;end;end;end;end;else lL[lH[2]]=oL[lH[0x6]];end;end;else if not(tH<14)then if not(tH>=15)then local KV=(lH[0x0005]);local OV=lL[KV];do for fk=KV+0X1,lH[0x4]do OV=OV..lL[fk];end;end;(lL)[lH[0X0002]]=OV;else if tH~=0X10 then(lL)[lH[2]]=lH[0X6];else if not(not(lL[lH[5]]<lL[lH[4]]))then else tL=lH[2];end;end;end;else if tH>=0X00C then if tH==0Xd then(lL)[lH[2]]={E({},1,lH[0X05])};else local ZK,rK=Uc[lH[0X5]],(nil);local EK=ZK[5];local gK=#EK;do if not(gK>0)then else rK={};for Dd=1,gK do local Fd=(EK[Dd]);do if Fd[0X01]==0 then do rK[Dd-0X00001]={lL,Fd[0X2]};end;else rK[Dd-1]=jc[Fd[0X2]];end;end;end;(S)(Lc,rK);end;end;do(lL)[lH[2]]=e3(ZK,rK,oL);end;end;else lL[lH[2]]=lL[lH[0X5]]<=lL[lH[4]];end;end;end;end;end;end;end);if not(YL)then if V(ML)=='\115\116\114in\103'then if r(ML,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if not(r(ML,'^\046\045\058\037\100+\058 '))then(q)(ML,0X00000);else q('\076u\114ap\104 \083c\114\105pt\058'..(Qc[tL-0x00001]or"(internal)")..":\032"..u(ML),0);end;else(q)(ML,0);end;else if ML then if AL~=0X001 then return lL[pL](E(lL,pL+0X1,SL));else return lL[pL]();end;elseif not(pL)then else return E(lL,pL,AL);end;end;end;end;end;end;end;end;end;else do if not(Sc>=141)then if not(Sc<0X85)then do if not(Sc<137)then if Sc<139 then if Sc==138 then ic=function(...)local kN,KN=1,{};local xN=(k and k()or _ENV);local QN,LN=q3(...);do QN=QN-1;end;local dN,vN=(xN==H and fc or xN),{[2]=Vc,[1]=KN};local BN=(0X0000);for a2=0,QN do if not(ac>a2)then break;else do KN[a2]=LN[a2+1];end;end;end;if not nc then do LN=nil;end;elseif Ac then KN[ac]={n=QN>=ac and QN-ac+0x1 or 0X000,E(LN,ac+1,QN+0X0001)};end;if dN~=xN then if s then(s)(ic,dN);else _ENV=dN;end;end;local iN,cN,lN,DN=c(function()while true do local sn=bc[kN];local Xn=(sn[3]);do kN=kN+0X1;end;if Xn>=56 then do if not(Xn>=84)then if not(Xn>=0X00046)then if not(Xn>=0X3f)then if Xn>=59 then if Xn<61 then do if Xn~=60 then KN[sn[2]]=J(KN[sn[0X5]],KN[sn[4]]);else(KN[sn[2]])[sn[6]]=KN[sn[0X04]];end;end;else if Xn==62 then do if sn[4]==111 then do kN=kN-0X1;end;bc[kN]={[0X2]=(sn[0X2]-217),[3]=0X33,[0X005]=(sn[0X5]-217)};elseif sn[0x0004]~=140 then local YT=QN-ac;local KT=(sn[2]);if YT<0X0000 then YT=-1;end;for Be=KT,KT+YT do do(KN)[Be]=LN[ac+(Be-KT)+0X1];end;end;do BN=KT+YT;end;else kN=kN-1;bc[kN]={[3]=0X6B,[2]=(sn[0X00002]-0X0006B),[5]=(sn[5]-0X6B)};end;end;else local lX=(sn[2]);local xX,ZX=KN[lX+1],(KN[lX+2]);local aX=(KN[lX]);KN[lX]=P(function()for Sb=aX,xX,ZX do C(true,Sb);end;end);do kN=sn[5];end;end;end;else if Xn<0X39 then(KN)[sn[2]]=KN[sn[5]][KN[sn[4]]];else if Xn~=58 then local bB=sn[2];local EB=((sn[4]-0X1)*0X000032);local ZB=(KN[bB]);for Ah=1,BN-bB do ZB[EB+Ah]=KN[bB+Ah];end;else KN[sn[0X2]]=true;end;end;end;else if not(Xn>=0X42)then if not(Xn<64)then do if Xn==0X000041 then KN[sn[0x2]]=KN[sn[5]][sn[0X1]];else do(KN)[sn[2]]=KN[sn[0x05]]*KN[sn[0x4]];end;end;end;else if KN[sn[5]]==KN[sn[0X0004]]then else kN=sn[2];end;end;else if not(Xn>=0X44)then do if Xn==0x43 then(KN)[sn[2]]=dN[sn[6]];else repeat local UG,RG=Lc,KN;if not(#UG>0X000)then else local Bx=({});for GI,DI in M,UG do for we,de in M,DI do if de[0X1]==RG and de[0X02]>=0 then local eb=(de[0X2]);if not(not Bx[eb])then else Bx[eb]={RG[eb]};end;de[0x00001]=Bx[eb];do(de)[0X2]=0X1;end;end;end;end;end;until true;do return false,sn[2],BN;end;end;end;else if Xn~=0x045 then for Ui=sn[2],sn[0X5]do KN[Ui]=nil;end;else local EL=(sn[0X0002]);do KN[EL]=KN[EL](KN[EL+1]);end;do BN=EL;end;end;end;end;end;else if Xn>=0x4d then do if Xn>=0X50 then if not(Xn<82)then do if Xn~=0X53 then KN[sn[0X02]]=KN[sn[5]]%sn[1];else do KN[sn[0X002]][KN[sn[5]]]=KN[sn[0x4]];end;end;end;else if Xn==81 then if sn[4]==215 then kN=kN-0X0001;bc[kN]={[0X002]=(sn[2]-144),[0X00005]=(sn[5]-0X00090),[3]=0X007};elseif sn[4]==0X000094 then do kN=kN-1;end;do bc[kN]={[0X5]=(sn[0X5]-0xBA),[2]=(sn[2]-0X000BA),[3]=29};end;else KN[sn[2]]=LN[ac+0X1];end;else do(dN)[sn[6]]=KN[sn[2]];end;end;end;else do if Xn<78 then(KN)[sn[0X2]]=sn[6]^KN[sn[0x00004]];else do if Xn~=0X04F then local vv,Yv=sn[2],KN[sn[0X5]];do(KN)[vv+1]=Yv;end;do KN[vv]=Yv[sn[0X0001]];end;else local QT=sn[2];KN[QT]=KN[QT](KN[QT+1],KN[QT+0X00002]);BN=QT;end;end;end;end;end;end;else if Xn>=0X0049 then if not(Xn>=75)then if Xn~=0X0004a then(KN)[sn[2]]=KN[sn[0X0005]]>sn[1];else(KN)[sn[0X2]]=KN[sn[0X5]]~=KN[sn[4]];end;else if Xn==76 then do if not(KN[sn[5]]<KN[sn[4]])then else do kN=sn[2];end;end;end;else do BN=sn[2];end;KN[BN]();BN=BN-1;end;end;else if not(Xn<0X00047)then if Xn==0X48 then(KN)[sn[0X002]]=KN[sn[5]]-KN[sn[4]];else do if KN[sn[5]]==sn[1]then else kN=sn[0X002];end;end;end;else do BN=sn[0X2];end;(KN)[BN]=KN[BN]();end;end;end;end;else if Xn>=0X62 then if not(Xn<0x0069)then do if Xn>=0X06d then if not(Xn<111)then if Xn~=0X70 then local yI=(jc[sn[0X5]]);do yI[1][yI[2]]=KN[sn[2]];end;else do(KN)[sn[0X2]]=T(KN[sn[5]],KN[sn[4]]);end;end;else if Xn==110 then local I_=(sn[5]);local Z_=(KN[I_]);for uT=I_+1,sn[0x004]do do Z_=Z_..KN[uT];end;end;(KN)[sn[2]]=Z_;else local bL=sn[0X2];KN[bL](KN[bL+0X01]);BN=bL-0X1;end;end;else if not(Xn>=0X00006B)then if Xn==0x6A then if not(not(KN[sn[0x005]]<sn[1]))then else kN=sn[2];end;else do if not(KN[sn[0x005]]<=sn[0X1])then else kN=sn[0x02];end;end;end;else if Xn~=108 then if sn[0X00004]==0X83 then kN=kN-0X1;bc[kN]={[2]=(sn[2]-0X8D),[5]=(sn[0x5]-141),[3]=0x26};elseif sn[4]==0X79 then kN=kN-0X00001;(bc)[kN]={[0X5]=(sn[0X005]-0X82),[3]=0X5,[2]=(sn[2]-0X0082)};else(KN)[sn[0X00002]]=#KN[sn[0X005]];end;else do KN[sn[2]]=KN[sn[5]]~=sn[0X001];end;end;end;end;end;else if not(Xn<101)then if not(Xn>=103)then if Xn==102 then local Wf=sn[2];local rf=(P(function(...)C();do for L6,v6 in...do(C)(true,L6,v6);end;end;end));(rf)(KN[Wf],KN[Wf+1],KN[Wf+0x002]);BN=Wf;(KN)[Wf]=rf;kN=sn[5];else(KN)[sn[2]]=false;end;else if Xn~=104 then do kN=sn[5];end;else local wc=jc[sn[0x5]];do(KN)[sn[0X2]]=wc[0X0001][wc[0x002]];end;end;end;else if Xn>=0X0063 then if Xn~=100 then do KN[sn[0X02]]=KN[sn[0X5]]^KN[sn[0X00004]];end;else(KN)[sn[0x2]]=KN[sn[0x5]]==KN[sn[4]];end;else KN[sn[0X002]]=sn[0X6]-KN[sn[0x0004]];end;end;end;else if Xn<0X5b then if Xn>=87 then if not(Xn>=89)then if Xn==0X0058 then KN[sn[2]]=sn[0X6]/sn[1];else if not(KN[sn[5]]<=KN[sn[4]])then do kN=sn[2];end;end;end;else if Xn~=90 then(KN)[sn[2]]=_ENV;else KN[sn[0X2]]=KN[sn[0X5]]+sn[0X1];end;end;else if not(Xn<0X55)then do if Xn==86 then local Q7=Uc[sn[5]];local S7,Y7=Q7[5],(nil);local T7=#S7;if not(T7>0X0000)then else Y7={};for Jl=1,T7 do local Sl=(S7[Jl]);do if Sl[1]~=0X0 then(Y7)[Jl-0x00001]=jc[Sl[0X002]];else Y7[Jl-0X1]={KN,Sl[0X2]};end;end;end;S(Lc,Y7);end;(KN)[sn[2]]=e3(Q7,Y7,dN);else local Mu=(sn[2]);local Ku=P(function(...)(C)();for zw in...do(C)(true,zw);end;end);(Ku)(KN[Mu],KN[Mu+1],KN[Mu+0X2]);BN=Mu;(KN)[Mu]=Ku;kN=sn[0X5];end;end;else do repeat local Jx,Ix=Lc,(KN);if not(#Jx>0X0)then else local x0={};for MS,bS in M,Jx do for az,mz in M,bS do if not(mz[1]==Ix and mz[0X002]>=0X0000)then else local nr=mz[2];if not(not x0[nr])then else x0[nr]={Ix[nr]};end;(mz)[0X001]=x0[nr];do(mz)[2]=0X001;end;end;end;end;end;until true;end;local jV=(sn[2]);BN=jV+0X1;return true,jV,0x0002;end;end;else if not(Xn>=94)then do if Xn>=0X5C then do if Xn~=93 then local yv=(sn[2]);do BN=yv+sn[0X5]-0X0001;end;KN[yv](E(KN,yv+0X1,BN));do BN=yv-0X1;end;else do KN[sn[0X002]]=KN[sn[0X5]]<KN[sn[0X004]];end;end;end;else local Im=KN[sn[0x005]]/KN[sn[0x4]];(KN)[sn[0X0002]]=Im-Im%0X00001;end;end;else if Xn>=96 then if Xn==0X61 then repeat local lZ,zZ=Lc,KN;if not(#lZ>0)then else local uk={};for pG,HG in M,lZ do do for Yo,no in M,HG do if no[1]==zZ and no[2]>=0X00 then local ZF=no[0X0002];if not(not uk[ZF])then else uk[ZF]={zZ[ZF]};end;(no)[1]=uk[ZF];(no)[0X2]=0X00001;end;end;end;end;end;until true;do return true,sn[0X002],0X0;end;else do(KN)[sn[0X002]]=KN[sn[5]]/sn[1];end;end;else if Xn==95 then if sn[0X0004]==250 then kN=kN-1;(bc)[kN]={[2]=(sn[2]-0x24),[3]=11,[0x5]=(sn[5]-36)};elseif sn[0X4]==209 then kN=kN-0X00001;do(bc)[kN]={[2]=(sn[0X0002]-180),[0X00003]=0X44,[5]=(sn[5]-180)};end;else local G7=(sn[2]);for XF=G7,G7+(sn[5]-1)do do KN[XF]=LN[ac+(XF-G7)+1];end;end;end;else KN[sn[2]]=KN[sn[0X5]]==sn[1];end;end;end;end;end;end;end;else if not(Xn>=0x1C)then do if Xn>=14 then if Xn>=21 then if Xn<0X18 then if Xn<22 then local iB=sn[0x2];KN[iB](KN[iB+1],KN[iB+2]);BN=iB-0X1;else do if Xn~=23 then KN[sn[0X2]]=KN[sn[5]]^sn[1];else local bA=sn[0X00002];local iA=(P(function(...)(C)();for du,Bu,eu,Eu,Xu,cu,Lu,wu,mu,Uu in...do(C)(true,{du,Bu,eu,Eu,Xu,cu,Lu,wu,mu,Uu});end;end));iA(KN[bA],KN[bA+1],KN[bA+2]);BN=bA;do KN[bA]=iA;end;kN=sn[5];end;end;end;else if Xn<0X1A then do if Xn==0X19 then KN[sn[0x2]][KN[sn[5]]]=sn[0x1];else(U3)[sn[0X5]]=KN[sn[0X2]];end;end;else do if Xn==0X1B then do vN[sn[5]]=KN[sn[0X2]];end;else do repeat local tY,EY,gY=Lc,KN,sn[0X2];do if not(#tY>0)then else local Ue={};for cl,Pl in M,tY do for D7,g7 in M,Pl do do if g7[0X01]==EY and g7[2]>=gY then local Vi=g7[0x2];if not Ue[Vi]then(Ue)[Vi]={EY[Vi]};end;(g7)[1]=Ue[Vi];(g7)[0X2]=0X1;end;end;end;end;end;end;until true;end;end;end;end;end;else if not(Xn>=17)then if not(Xn>=0XF)then local ar=(sn[2]);KN[ar]=KN[ar](E(KN,ar+1,BN));BN=ar;else if Xn==0X0010 then KN[sn[2]]=KN[sn[0x5]]<=KN[sn[4]];else KN[sn[2]]=KN[sn[0X5]]%KN[sn[0x4]];end;end;else if not(Xn>=0X0013)then if Xn~=18 then(KN)[sn[0X02]]=v(KN[sn[0x5]],KN[sn[4]]);else KN[sn[0x2]]=KN[sn[0X5]]/KN[sn[0X4]];end;else do if Xn==0x014 then(KN)[sn[0x002]]=KN[sn[5]]>=KN[sn[0X0004]];else do if not(not(sn[6]<=KN[sn[4]]))then else do kN=sn[0x02];end;end;end;end;end;end;end;end;else if not(Xn<7)then if not(Xn<10)then do if not(Xn<12)then if Xn~=13 then KN[sn[0X2]]=KN[sn[5]]*sn[0x1];else KN[sn[2]]=vN[sn[0X05]];end;else if Xn==11 then if sn[0X004]~=0x5 then KN[sn[0X00002]]=not KN[sn[5]];else kN=kN-1;(bc)[kN]={[0X5]=(sn[0x00005]-0XD9),[0X3]=0x1d,[2]=(sn[0X0002]-0X0000D9)};end;else local CG=sn[2];local rG,nG,tG=KN[CG]();if not(rG)then else do(KN)[CG+0X00001]=nG;end;KN[CG+0X002]=tG;kN=sn[0X5];end;end;end;end;else do if not(Xn>=0x8)then if sn[0X4]==62 then do kN=kN-0X00001;end;bc[kN]={[0X5]=(sn[5]-190),[0X003]=0X005,[2]=(sn[0X2]-190)};else do repeat local qW,cW=Lc,(KN);if not(#qW>0)then else local nO=({});for db,wb in M,qW do for wF,JF in M,wb do if not(JF[1]==cW and JF[0x002]>=0)then else local LF=(JF[2]);if not(not nO[LF])then else do nO[LF]={cW[LF]};end;end;JF[1]=nO[LF];JF[0X2]=0x1;end;end;end;end;until true;end;local bK=sn[2];do return false,bK,bK;end;end;else if Xn~=9 then if not(KN[sn[0X5]]<=sn[0x1])then kN=sn[0X2];end;else KN[sn[2]]=KN[sn[5]]>KN[sn[4]];end;end;end;end;else if not(Xn>=3)then if Xn<1 then local hJ=sn[0X2];local dJ,fJ=KN[hJ]();if not(dJ)then else KN[hJ+0X1]=fJ;kN=sn[5];end;else if Xn~=2 then if sn[0X0004]~=240 then KN[sn[0X00002]]=-KN[sn[0X5]];else kN=kN-1;(bc)[kN]={[2]=(sn[2]-170),[0X3]=0X26,[5]=(sn[0X5]-0xAA)};end;else do KN[sn[0X2]]={};end;end;end;else if not(Xn<5)then if Xn==6 then do if KN[sn[0X5]]~=KN[sn[4]]then else kN=sn[0X2];end;end;else do repeat local Ng,Cg=Lc,KN;if#Ng>0X00000 then local sr=({});for aV,xV in M,Ng do for lU,DU in M,xV do if DU[0X1]==Cg and DU[2]>=0 then local TZ=(DU[0x0002]);do if not sr[TZ]then(sr)[TZ]={Cg[TZ]};end;end;(DU)[1]=sr[TZ];(DU)[0x002]=0X001;end;end;end;end;until true;end;local mm=sn[2];return false,mm,mm+sn[0X005]-0X02;end;else if Xn~=4 then do(KN)[sn[2]]=sn[0X6];end;else if sn[0x4]~=0x78 then if not(KN[sn[2]])then else kN=sn[0X5];end;else do kN=kN-1;end;bc[kN]={[0X2]=(sn[2]-0x004c),[0x5]=(sn[5]-0X4C),[3]=0X5};end;end;end;end;end;end;end;else if Xn>=42 then if not(Xn>=49)then do if not(Xn>=45)then if not(Xn<43)then if Xn~=44 then if not(not(KN[sn[0X05]]<KN[sn[0X4]]))then else kN=sn[0X2];end;else local Kn=(sn[2]);local bn,Pn=KN[Kn]();if not(bn)then else kN=sn[0x05];KN[Kn+0X003]=Pn;end;end;else if not(KN[sn[5]]<=KN[sn[4]])then else kN=sn[0X02];end;end;else if not(Xn<0X2f)then if Xn==0X30 then if not(not(sn[6]<KN[sn[4]]))then else kN=sn[0x00002];end;else local YM=(sn[0x5]);do KN[sn[2]]=KN[YM]..KN[YM+1];end;end;else if Xn~=0x2E then local q2,s2=sn[2],sn[5];local y2=sn[0X04];if s2~=0 then BN=q2+s2-0X1;end;local D2,a2=nil,(nil);if s2==1 then do D2,a2=q3(KN[q2]());end;else do D2,a2=q3(KN[q2](E(KN,q2+1,BN)));end;end;if y2==1 then do BN=q2-0X001;end;else if y2~=0X0 then do D2=q2+y2-0X00002;end;BN=D2+1;else do D2=D2+q2-1;end;BN=D2;end;local YK=0;for yl=q2,D2 do YK=YK+0X1;(KN)[yl]=a2[YK];end;end;else local Rn=sn[0X2];local pn,Mn=KN[Rn]();if pn then for oZ=1,sn[4]do(KN)[Rn+oZ]=Mn[oZ];end;do kN=sn[5];end;end;end;end;end;end;else do if not(Xn>=52)then if Xn<0x32 then do if sn[0x4]~=0X0f6 then if not KN[sn[0X2]]then kN=sn[0X05];end;else kN=kN-1;do bc[kN]={[0x02]=(sn[2]-0XA9),[3]=0X33,[0x00005]=(sn[0X05]-169)};end;end;end;else if Xn==0X000033 then if sn[0x4]~=83 then KN[sn[0x2]]=nil;else kN=kN-1;bc[kN]={[5]=(sn[5]-144),[0X0003]=62,[2]=(sn[0X2]-144)};end;else do repeat local qz,Hz=Lc,(KN);if not(#qz>0X0)then else local PQ={};for aJ,HJ in M,qz do do for rU,DU in M,HJ do do if not(DU[1]==Hz and DU[2]>=0)then else local W5=(DU[2]);if not(not PQ[W5])then else PQ[W5]={Hz[W5]};end;DU[0X01]=PQ[W5];(DU)[2]=0X001;end;end;end;end;end;end;until true;end;do return true,sn[2],0x1;end;end;end;else if not(Xn>=0X036)then if Xn~=0X000035 then do KN[sn[0X00002]]=o(KN[sn[5]],KN[sn[4]]);end;else(KN)[sn[0X2]]=KN[sn[0X05]]+KN[sn[4]];end;else if Xn==0X0037 then do if KN[sn[0X0005]]~=sn[1]then else kN=sn[2];end;end;else local zo=(sn[2]);local Lo=(sn[0x5]);BN=zo+Lo-0x1;repeat local Ot,bt=Lc,KN;do if#Ot>0 then local h0=({});for uf,nf in M,Ot do do for AW,fW in M,nf do if not(fW[1]==bt and fW[0X2]>=0X0)then else local LE=fW[2];if not h0[LE]then do h0[LE]={bt[LE]};end;end;fW[1]=h0[LE];do(fW)[2]=1;end;end;end;end;end;end;end;until true;return true,zo,Lo;end;end;end;end;end;else if Xn>=35 then if not(Xn<0X26)then if Xn>=40 then if Xn==41 then(KN)[sn[0X2]]=sn[6]*KN[sn[4]];else KN[sn[2]]={E({},1,sn[0X005])};end;else if Xn==0X27 then do KN[sn[0X2]]=w(KN[sn[5]],KN[sn[0X4]]);end;else if sn[0X00004]==50 then kN=kN-1;bc[kN]={[0X3]=0X01a,[0X0002]=(sn[0x2]-136),[5]=(sn[0x00005]-0X88)};else(KN)[sn[0X2]]=KN[sn[0X5]];end;end;end;else do if not(Xn>=36)then KN[sn[2]]=sn[0x6];else if Xn==0X25 then local gj=sn[2];KN[gj](E(KN,gj+0X1,BN));BN=gj-0X1;else local sE=sn[0X2];local IE,YE=KN[sE],(sn[0x04]-0X1)*50;for Ju=0X1,sn[0X005]do IE[YE+Ju]=KN[sE+Ju];end;end;end;end;end;else do if Xn<0x1f then do if not(Xn<29)then do if Xn~=0X1E then do if sn[0X4]==221 then kN=kN-1;bc[kN]={[2]=(sn[2]-85),[3]=107,[0x5]=(sn[0X0005]-85)};else repeat local J9,r9=Lc,KN;if not(#J9>0X000)then else local iQ={};do for Rz,jz in M,J9 do for Hy,Yy in M,jz do if Yy[1]==r9 and Yy[0X002]>=0 then local Tu=(Yy[0X2]);do if not iQ[Tu]then iQ[Tu]={r9[Tu]};end;end;Yy[1]=iQ[Tu];Yy[0X2]=1;end;end;end;end;end;until true;return;end;end;else do(KN)[sn[0X2]]=U3[sn[5]];end;end;end;else(KN[sn[2]])[sn[6]]=sn[0X1];end;end;else do if not(Xn<33)then do if Xn~=34 then(KN)[sn[0x2]]=KN[sn[0X5]]-sn[1];else local Bi=sn[0X2];BN=Bi+sn[5]-1;(KN)[Bi]=KN[Bi](E(KN,Bi+0X1,BN));BN=Bi;end;end;else if Xn==32 then KN[sn[2]]=Q(KN[sn[0X0005]]);else(KN)[sn[0X2]]=sn[6]+KN[sn[0X0004]];end;end;end;end;end;end;end;end;end;end;end);if not(iN)then if V(cN)=="string"then do if not(r(cN,"\097\116\116\101\109\112t\032to\032\121\105e\108d a\099r\111\115\115 \109\101\116\097met\104o\100/\067%\045c\097\108\108 bou\110da\114y"))then else return coroutine.yield();end;end;if not(r(cN,"^.-:%d+: "))then q(cN,0);else(q)('\076u\114\097p\104\032Scr\105pt:'..(Qc[kN-0X1]or"(\105\110\116\101\114\110\097\108\041")..": "..u(cN),0X0);end;else q(cN,0X0);end;else if cN then do if DN~=0x1 then return KN[lN](E(KN,lN+1,BN));else do return KN[lN]();end;end;end;elseif lN then do return E(KN,lN,DN);end;end;end;end;else ic=function(...)local rx=(0X0);local Jx={};local tx=1;local Qx=(k and k()or _ENV);local ix={[2]=Vc,[1]=Jx};local jx,Bx=q3(...);local Fx=(Qx==H and fc or Qx);jx=jx-1;do for vR=0,jx do if not(ac>vR)then break;else(Jx)[vR]=Bx[vR+0X001];end;end;end;if not nc then Bx=nil;elseif not(Ac)then else do(Jx)[ac]={n=jx>=ac and jx-ac+0x01 or 0X0,E(Bx,ac+1,jx+1)};end;end;do if Fx~=Qx then if not(s)then _ENV=Fx;else s(ic,Fx);end;end;end;local Gx,Hx,Lx,lx=c(function()while true do local VZ=(bc[tx]);local xZ=(VZ[3]);tx=tx+0X1;if not(xZ<0x0000D)then if not(xZ<20)then if not(xZ<0x00017)then if not(xZ>=0X19)then do if xZ==24 then else(Jx)[0]=Fx[VZ[0X0006]];do VZ=bc[tx];end;tx=tx+0X1;local W0=(0X0);do(Jx)[0x1]=VZ[0X6];end;tx=tx+0X1;(Jx)[W0]=Jx[W0](Jx[W0+1]);rx=W0;tx=tx+0X1;tx=tx+0X1;VZ=bc[tx];tx=tx+0x00001;if not(not Jx[0])then else tx=VZ[5];end;end;end;else do if xZ~=0x1a then for zz=VZ[2],VZ[0X005]do Jx[zz]=nil;end;else tx=VZ[0X0005];end;end;end;else if not(xZ<21)then if xZ~=0x000016 then Jx[VZ[2]]=Jx[VZ[5]]<Jx[VZ[4]];else repeat local ET,MT,NT=Lc,Jx,VZ[0X2];if#ET>0 then local re={};for Nr,vr in M,ET do for LZ,KZ in M,vr do do if not(KZ[1]==MT and KZ[2]>=NT)then else local zE=KZ[2];if not(not re[zE])then else(re)[zE]={MT[zE]};end;KZ[1]=re[zE];KZ[0X00002]=0X1;end;end;end;end;end;until true;end;else Jx[0X7]=Jx[0X6][VZ[1]];do tx=tx+1;end;local Iz=(0X7);do tx=tx+1;end;do VZ=bc[tx];end;tx=tx+0X1;local Bz=Jx[7];(Jx)[Iz+0X1]=Bz;do Jx[Iz]=Bz[VZ[1]];end;do tx=tx+0X1;end;do Iz=0X007;end;do Jx[Iz]=Jx[Iz](Jx[Iz+1]);end;rx=Iz;VZ=bc[tx];do tx=tx+1;end;do Jx[8]=Fx[VZ[0X6]];end;tx=tx+0X1;do tx=tx+0x00001;end;tx=tx+1;Jx[9]=Jx[0X2];tx=tx+0X1;Iz=0X8;do(Jx)[Iz]=Jx[Iz](Jx[Iz+1]);end;rx=Iz;tx=tx+1;do tx=tx+1;end;VZ=bc[tx];tx=tx+0x001;Iz=8;Bz=Jx[8];(Jx)[Iz+1]=Bz;Jx[Iz]=Bz[VZ[1]];tx=tx+1;Iz=8;Jx[Iz]=Jx[Iz](Jx[Iz+1]);rx=Iz;tx=tx+0X1;tx=tx+0X1;VZ=bc[tx];tx=tx+1;do if Jx[0X007]==Jx[8]then else tx=VZ[2];end;end;end;end;else if xZ<0x10 then if not(xZ<14)then if xZ==15 then(Jx)[0]=Fx[VZ[6]];VZ=bc[tx];tx=tx+1;do Jx[1]=VZ[6];end;tx=tx+1;local tc=(0X0);Jx[tc]=Jx[tc](Jx[tc+0x00001]);rx=tc;do VZ=bc[tx];end;tx=tx+0X001;do(Jx)[1]=Fx[VZ[6]];end;tx=tx+0X1;tx=tx+0x01;do VZ=bc[tx];end;tx=tx+1;(Jx)[0x2]=Fx[VZ[0x6]];VZ=bc[tx];do tx=tx+1;end;(Jx)[2]=Jx[2][VZ[0x1]];VZ=bc[tx];tx=tx+1;do if not(Jx[0X00002])then else tx=VZ[0X0005];end;end;else local p_=Uc[VZ[5]];local C_,H_=p_[0X0005],(nil);local i_=#C_;if not(i_>0)then else do H_={};end;for yL=0x1,i_ do local HL=(C_[yL]);if HL[0X00001]~=0 then do(H_)[yL-1]=jc[HL[2]];end;else H_[yL-0X1]={Jx,HL[2]};end;end;S(Lc,H_);end;Jx[VZ[2]]=e3(p_,H_,Fx);end;else do Jx[0X00000]=Fx[VZ[6]];end;tx=tx+0X1;tx=tx+0X1;do VZ=bc[tx];end;tx=tx+1;Jx[0]=Jx[0X0][VZ[0x00001]];VZ=bc[tx];tx=tx+1;if not Jx[0X00000]then tx=VZ[0x5];end;end;else if not(xZ<18)then if xZ~=19 then Jx[VZ[0X2]]={E({},1,VZ[0X5])};else local r0,D0=VZ[2],VZ[5];rx=r0+D0-1;do repeat local TP,aP=Lc,Jx;if#TP>0x0 then local MB={};for Yb,sb in M,TP do for dt,Qt in M,sb do if Qt[1]==aP and Qt[0x2]>=0 then local zk=(Qt[0x2]);if not MB[zk]then MB[zk]={aP[zk]};end;Qt[1]=MB[zk];(Qt)[0X002]=1;end;end;end;end;until true;end;return true,r0,D0;end;else if xZ~=0X11 then local uB=VZ[0x2];local DB,yB,UB=Jx[uB]();if not(DB)then else Jx[uB+1]=yB;(Jx)[uB+2]=UB;tx=VZ[5];end;else repeat local RH,kH=Lc,(Jx);if#RH>0X0 then local KM={};do for rH,jH in M,RH do do for qO,JO in M,jH do do if JO[0X1]==kH and JO[0x2]>=0x0 then local nd=JO[0X2];if not KM[nd]then do(KM)[nd]={kH[nd]};end;end;(JO)[0x1]=KM[nd];(JO)[2]=1;end;end;end;end;end;end;end;until true;return;end;end;end;end;else if not(xZ>=6)then do if xZ<0x00003 then if xZ<1 then if not Jx[VZ[2]]then do tx=VZ[0X5];end;end;else if xZ~=0X2 then(Jx)[VZ[0X2]]=Jx[VZ[5]]==Jx[VZ[0X4]];else Jx[7]=Fx[VZ[0X06]];VZ=bc[tx];tx=tx+1;(Jx)[7]=Jx[0x7][VZ[1]];tx=tx+0x1;do tx=tx+0x001;end;VZ=bc[tx];tx=tx+1;(Jx)[0X7]=Jx[7][VZ[1]];VZ=bc[tx];tx=tx+1;do Jx[0x8]=Jx[6][VZ[0X1]];end;do tx=tx+1;end;tx=tx+1;do VZ=bc[tx];end;tx=tx+0x1;do if not(not(Jx[0x0008]<=Jx[0X7]))then else tx=VZ[0x2];end;end;end;end;else do if not(xZ>=4)then(Jx)[VZ[2]]=VZ[6];else if xZ~=0x05 then Jx[VZ[0X2]]=Jx[VZ[5]][VZ[1]];else(Jx)[0X0]=Fx[VZ[0X6]];VZ=bc[tx];tx=tx+1;do Jx[0X000]=Jx[0][VZ[1]];end;VZ=bc[tx];tx=tx+1;do(Jx)[0x0]=Jx[0][VZ[0X1]];end;do VZ=bc[tx];end;tx=tx+1;if Jx[0X00]==VZ[1]then else do tx=VZ[2];end;end;end;end;end;end;end;else if xZ<9 then do if xZ>=7 then if xZ==8 then Jx[0X7]=Fx[VZ[6]];tx=tx+1;tx=tx+1;VZ=bc[tx];tx=tx+0X1;(Jx)[0X8]=VZ[6];VZ=bc[tx];tx=tx+0x0001;Jx[9]=Jx[6][VZ[0X1]];local B5=7;do tx=tx+0X0001;end;tx=tx+0X001;do tx=tx+0X1;end;Jx[10]=false;tx=tx+1;rx=B5+0X04-0X1;(Jx[B5])(E(Jx,B5+1,rx));rx=B5-0X1;VZ=bc[tx];tx=tx+0x1;do tx=VZ[0X5];end;else Jx[VZ[2]]={};end;else(Jx)[4]=Fx[VZ[0x6]];local zV,bV=4,(4);tx=tx+1;tx=tx+0X1;do tx=tx+1;end;do Jx[0x05]=Jx[0x0000];end;tx=tx+1;local pV=0x2;do if pV==0 then else rx=zV+pV-0X1;end;end;local lV,wV=nil,nil;if pV==0X00001 then do lV,wV=q3(Jx[zV]());end;else lV,wV=q3(Jx[zV](E(Jx,zV+0X1,rx)));end;if bV==0x1 then rx=zV-1;else if bV==0x0 then lV=lV+zV-1;rx=lV;else lV=zV+bV-0X0002;rx=lV+0x1;end;local c9=(0x0);for gX=zV,lV do do c9=c9+0x1;end;do(Jx)[gX]=wV[c9];end;end;end;VZ=bc[tx];tx=tx+0X1;do zV=0X4;end;local vV=(P(function(...)(C)();for bT,UT in...do(C)(true,bT,UT);end;end));(vV)(Jx[zV],Jx[zV+1],Jx[zV+2]);rx=zV;Jx[zV]=vV;tx=VZ[0x5];end;end;else if xZ<11 then if xZ~=10 then do(Jx)[VZ[2]]=Fx[VZ[0X6]];end;else local Vg=VZ[2];local ug=Jx[Vg+0x1];local Pg=Jx[Vg+2];local gg=(Jx[Vg]);(Jx)[Vg]=P(function()for AP=gg,ug,Pg do(C)(true,AP);end;end);tx=VZ[5];end;else if xZ~=12 then local V1=(4);local K1,c1=0x2,0x1;if K1==0x00000 then else do rx=c1+K1-1;end;end;local e1,r1=nil,(nil);do if K1~=1 then do e1,r1=q3(Jx[c1](E(Jx,c1+0x1,rx)));end;else e1,r1=q3(Jx[c1]());end;end;if V1~=1 then if V1==0 then e1=e1+c1-0X1;do rx=e1;end;else e1=c1+V1-0X0002;do rx=e1+0X0001;end;end;local O7=0;for yS=c1,e1 do O7=O7+0x1;do Jx[yS]=r1[O7];end;end;else rx=c1-0X01;end;do tx=tx+0X01;end;tx=tx+1;VZ=bc[tx];tx=tx+1;do c1=0x01;end;local H1=(P(function(...)C();for wc,Kc in...do C(true,wc,Kc);end;end));H1(Jx[c1],Jx[c1+0X1],Jx[c1+2]);do rx=c1;end;(Jx)[c1]=H1;do tx=VZ[0X005];end;else do Jx[VZ[0x002]]=Jx[VZ[0X5]]^Jx[VZ[4]];end;end;end;end;end;end;end;end);if Gx then if Hx then if lx==1 then return Jx[Lx]();else return Jx[Lx](E(Jx,Lx+0x01,rx));end;elseif not(Lx)then else return E(Jx,Lx,lx);end;else do if V(Hx)~='\115tr\105\110\103'then q(Hx,0X0);else if not(r(Hx,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(Hx,"^.-:%d+: "))then(q)(Hx,0);else q("Luraph Script:"..(Qc[tx-1]or"\040i\110te\114\110\097\108\041")..": "..u(Hx),0X0);end;end;end;end;end;end;else if Sc==0X08C then ic=function(...)local FC=0x0;local PC=1;local yC={};local JC=(k and k()or _ENV);local RC=(JC==H and fc or JC);local vC=({[2]=Vc,[1]=yC});local NC,SC=q3(...);do NC=NC-0x1;end;for Z5=0x0,NC do if not(ac>Z5)then break;else(yC)[Z5]=SC[Z5+0X01];end;end;if not nc then SC=nil;elseif Ac then(yC)[ac]={n=NC>=ac and NC-ac+1 or 0,E(SC,ac+1,NC+1)};end;if RC~=JC then do if s then s(ic,RC);else do _ENV=RC;end;end;end;end;while true do local TV=(bc[PC]);local UV=TV[0X00003];do PC=PC+1;end;return(function(R,B,...)local b=R[0];Client.Character.Humanoid:UnequipTools(b);end)(yC,jc,...);end;end;else ic=function(...)local Np,up=0x001,{};local Hp=((k and k()or _ENV));local Bp={[2]=Vc,[1]=up};local rp=0X0;local Ip,yp=q3(...);Ip=Ip-0X01;local Up=(Hp==H and fc or Hp);do for aX=0X000,Ip do if not(ac>aX)then break;else(up)[aX]=yp[aX+1];end;end;end;if not nc then yp=nil;elseif Ac then(up)[ac]={n=Ip>=ac and Ip-ac+1 or 0x0,E(yp,ac+1,Ip+1)};end;if Up==Hp then else do if s then(s)(ic,Up);else _ENV=Up;end;end;end;local Fp,Wp,bp,qp=c(function()do while true do local qc=bc[Np];local Kc=qc[0X3];Np=Np+1;if not(Kc<8)then if not(Kc>=12)then if not(Kc<0XA)then do if Kc~=11 then local ZZ=(qc[0X2]);local gZ=(up[ZZ]);local tZ=up[ZZ+0X1];local LZ=(up[ZZ+0X00002]);do(up)[ZZ]=P(function()for FN=gZ,tZ,LZ do(C)(true,FN);end;end);end;do Np=qc[5];end;else repeat local wU,nU=Lc,up;do if not(#wU>0X0)then else local Fc={};do for P8,U8 in M,wU do for Y5,M5 in M,U8 do if not(M5[0X1]==nU and M5[2]>=0x0)then else local Kk=M5[2];if not Fc[Kk]then Fc[Kk]={nU[Kk]};end;M5[0X0001]=Fc[Kk];(M5)[0X00002]=1;end;end;end;end;end;end;until true;return;end;end;else do if Kc==9 then local cQ=(up[qc[0X05]]/up[qc[0X4]]);(up)[qc[2]]=cQ-cQ%0X01;else up[qc[0X2]]=qc[0X6];end;end;end;else if not(Kc<0XE)then if not(Kc<15)then if Kc==16 then local PZ=Uc[qc[5]];local VZ=nil;local QZ=PZ[0x5];local MZ=#QZ;if MZ>0X00 then do VZ={};end;for tg=1,MZ do local Sg=(QZ[tg]);if Sg[1]==0X0 then do VZ[tg-0X00001]={up,Sg[0X0002]};end;else VZ[tg-0x1]=jc[Sg[0x2]];end;end;S(Lc,VZ);end;do(up)[qc[0x2]]=e3(PZ,VZ,Up);end;else local FG,vG=qc[2],up[qc[5]];up[FG+0x1]=vG;(up)[FG]=vG[qc[1]];end;else(up)[qc[2]]=up[qc[0X5]];end;else if Kc~=13 then(up)[qc[2]]=up[qc[0X0005]]^up[qc[4]];else(up)[qc[2]]=true;end;end;end;else if Kc>=4 then if not(Kc<6)then if Kc~=7 then local QF=(jc[0X00]);up[0X00001]=QF[1][QF[2]];Np=Np+0X1;Np=Np+1;qc=bc[Np];Np=Np+0X0001;(up)[1]=up[0x1][qc[1]];Np=Np+1;up[2]=up[0];do Np=Np+1;end;do QF=jc[0X1];end;(up)[0X3]=QF[1][QF[2]];Np=Np+0x1;do Np=Np+1;end;Np=Np+1;local zF=1;up[zF](up[zF+1],up[zF+0X2]);do rp=zF-0X001;end;do Np=Np+1;end;Np=Np+0X1;else up[qc[2]]=up[qc[0X00005]]~=up[qc[0X4]];end;else if Kc==0X5 then do(up)[qc[0X2]]={E({},1,qc[5])};end;else do(up)[0X0]=Up[qc[0X6]];end;do Np=Np+0X1;end;Np=Np+1;local WX=0;qc=bc[Np];Np=Np+1;do(up)[0X0001]=qc[6];end;local GX=(jc[0X00000]);Np=Np+0X1;up[WX]=up[WX](up[WX+1]);do rp=WX;end;Np=Np+0X1;Np=Np+0X1;do Np=Np+0X1;end;do(up)[1]=GX[0X1][GX[0X0002]];end;do qc=bc[Np];end;Np=Np+0X1;up[1]=up[1][qc[0X00001]];do Np=Np+1;end;(up)[0X0002]=up[0];Np=Np+0x00001;do WX=0X001;end;do up[WX]=up[WX](up[WX+1]);end;rp=WX;Np=Np+1;do Np=Np+1;end;qc=bc[Np];Np=Np+1;if not(not up[1])then else Np=qc[0x5];end;end;end;else do if not(Kc>=0X00002)then if Kc==0x1 then else Np=qc[0x05];end;else if Kc==3 then(up)[qc[0X2]]=Up[qc[0X006]];else for XY=qc[0X2],qc[5]do up[XY]=nil;end;end;end;end;end;end;end;end;end);do if not(Fp)then if V(Wp)=='\115tring'then do if r(Wp,"at\116e\109p\116\032\116o y\105el\100\032\097\099\114o\115\115 \109et\097\109\101\116\104od/C\037-ca\108\108 bou\110\100\097\114y")then do return coroutine.yield();end;end;end;if not(r(Wp,'^\046\045\058\037d\043: '))then q(Wp,0);else(q)("Luraph Script:"..(Qc[Np-1]or"(internal)")..'\058 '..u(Wp),0X0);end;else(q)(Wp,0);end;else if Wp then do if qp~=1 then return up[bp](E(up,bp+1,rp));else return up[bp]();end;end;elseif not(bp)then else do return E(up,bp,qp);end;end;end;end;end;end;end;else do if not(Sc<135)then if Sc~=136 then ic=function(...)local wv=0X01;local dv={};local kv,Sv={[1]=dv,[2]=Vc},(0X000);local Ev=(k and k()or _ENV);local Cv,Gv=q3(...);Cv=Cv-0x1;for PH=0X000,Cv do if not(ac>PH)then break;else(dv)[PH]=Gv[PH+0x1];end;end;local Vv=(Ev==H and fc or Ev);if not nc then Gv=nil;elseif Ac then do(dv)[ac]={n=Cv>=ac and Cv-ac+0x001 or 0,E(Gv,ac+0x1,Cv+0X001)};end;end;if Vv==Ev then else if s then s(ic,Vv);else _ENV=Vv;end;end;local Bv,lv,Mv,jv=c(function()do while true do local HF=(bc[wv]);local FF=(HF[3]);wv=wv+0X1;if FF<0XA then if not(FF<0X5)then if FF>=0X7 then if not(FF>=8)then local Jw=HF[2];local Zw,Tw=dv[Jw]();if Zw then wv=HF[5];(dv)[Jw+3]=Tw;end;else if FF==0X09 then do repeat local tL,AL=Lc,dv;do if not(#tL>0X0)then else local th=({});for c_,y_ in M,tL do for AW,nW in M,y_ do if not(nW[0X1]==AL and nW[0x00002]>=0)then else local tz=(nW[2]);if not(not th[tz])then else do th[tz]={AL[tz]};end;end;nW[0x01]=th[tz];(nW)[2]=1;end;end;end;end;end;until true;end;return;else do(dv)[0X00001]=Vv[HF[0X06]];end;wv=wv+1;Sv=1;(dv[Sv])();Sv=Sv-0X001;HF=bc[wv];do wv=wv+1;end;do dv[0X0001]=Vv[HF[0X6]];end;wv=wv+0X00001;Sv=0x00001;do dv[Sv]=dv[Sv]();end;wv=wv+1;do wv=wv+0x1;end;HF=bc[wv];wv=wv+1;if dv[0X001]then do wv=HF[0X05];end;end;end;end;else if FF==6 then(dv)[HF[2]]=Vv[HF[0X6]];else do if not(not dv[HF[2]])then else wv=HF[0x005];end;end;end;end;else do if FF>=0X00002 then if FF>=3 then do if FF==4 then do wv=HF[0x005];end;else do dv[HF[2]]=dv[HF[0X5]]%dv[HF[4]];end;end;end;else(dv)[HF[0X002]]={E({},0X1,HF[5])};end;else do if FF==0X00001 then do(dv)[1]=Vv[HF[0X6]];end;do wv=wv+0X1;end;wv=wv+1;wv=wv+1;Sv=0x001;dv[Sv]();do Sv=Sv-0X01;end;HF=bc[wv];wv=wv+1;dv[1]=Vv[HF[0X6]];HF=bc[wv];wv=wv+0X1;dv[0X1]=dv[1][HF[0x1]];wv=wv+1;wv=wv+1;HF=bc[wv];wv=wv+1;(dv)[0X0001]=dv[1][HF[1]];HF=bc[wv];do wv=wv+0x1;end;(dv)[0X00001]=dv[1][HF[1]];HF=bc[wv];wv=wv+1;if not dv[0X01]then do wv=HF[0X05];end;end;else end;end;end;end;end;else do if not(FF>=15)then do if not(FF>=0xC)then if FF~=11 then local yl,Zl=HF[2],HF[0X00005];Sv=yl+Zl-0X001;do repeat local py,Gy=Lc,dv;if#py>0X0 then local FD=({});for gl,vl in M,py do for fU,VU in M,vl do do if VU[0x0001]==Gy and VU[0X2]>=0 then local h5=VU[2];if not(not FD[h5])then else FD[h5]={Gy[h5]};end;(VU)[0X1]=FD[h5];do VU[0X2]=1;end;end;end;end;end;end;until true;end;return true,yl,Zl;else dv[HF[2]]=dv[HF[5]]~=dv[HF[0X4]];end;else if FF>=0Xd then if FF==0X00E then(dv)[1]=Vv[HF[6]];wv=wv+0X1;wv=wv+0X1;HF=bc[wv];do wv=wv+1;end;dv[0X002]=HF[0X6];wv=wv+1;local cn=0x1;dv[cn](dv[cn+1]);Sv=cn-0X00001;HF=bc[wv];wv=wv+0X1;do wv=HF[0x005];end;else(dv)[HF[0x2]]=HF[6];end;else dv[HF[2]]=dv[HF[5]];end;end;end;else if not(FF<0x11)then if not(FF>=18)then local uq=Uc[HF[0X5]];local Oq,Rq=uq[0x5],(nil);local qq=#Oq;if not(qq>0X00000)then else Rq={};do for JX=0X1,qq do local YX=(Oq[JX]);do if YX[1]~=0 then do(Rq)[JX-1]=jc[YX[2]];end;else(Rq)[JX-1]={dv,YX[0X2]};end;end;end;end;S(Lc,Rq);end;(dv)[HF[2]]=e3(uq,Rq,Vv);else do if FF~=19 then for Dw=HF[0X02],HF[0x5]do(dv)[Dw]=nil;end;else dv[HF[0x2]]=dv[HF[5]]==dv[HF[0X4]];end;end;end;else if FF==16 then if not(dv[HF[0X00005]]<=dv[HF[0X4]])then wv=HF[0X2];end;else(dv)[0x0001]=Vv[HF[0X6]];wv=wv+0X1;Sv=0X1;(dv[Sv])();Sv=Sv-1;HF=bc[wv];wv=wv+1;dv[0x00001]=Vv[HF[6]];wv=wv+1;Sv=0X0001;(dv[Sv])();Sv=Sv-0X1;HF=bc[wv];wv=wv+1;local ND=(1);do(dv)[1]=Vv[HF[0X6]];end;do wv=wv+0X01;end;wv=wv+1;HF=bc[wv];wv=wv+1;dv[0x2]=HF[6];do wv=wv+1;end;dv[ND](dv[ND+0X1]);Sv=ND-1;wv=wv+1;wv=wv+1;do HF=bc[wv];end;wv=wv+0X1;if not dv[0]then do wv=HF[5];end;end;end;end;end;end;end;end;end;end);if Bv then if lv then if jv~=1 then return dv[Mv](E(dv,Mv+1,Sv));else return dv[Mv]();end;elseif Mv then return E(dv,Mv,jv);end;else if V(lv)=="string"then do if r(lv,'\097tt\101\109\112t\032\116\111\032yie\108\100 acro\115s m\101t\097m\101\116h\111d/C\037-c\097\108l \098\111\117\110d\097ry')then return coroutine.yield();end;end;if r(lv,"^.-:%d+: ")then q('\076u\114aph Sc\114\105\112t\058'..(Qc[wv-0X0001]or"(internal)")..'\058\032'..u(lv),0);else(q)(lv,0X0);end;else(q)(lv,0);end;end;end;else ic=function(...)local PP=1;local KP={};local GP=0X0;local mP=((k and k()or _ENV));local jP=({[1]=KP,[2]=Vc});local YP,eP=q3(...);local LP=((mP==H and fc or mP));do YP=YP-1;end;for cM=0,YP do do if not(ac>cM)then do break;end;else(KP)[cM]=eP[cM+0X1];end;end;end;if not nc then eP=nil;elseif Ac then(KP)[ac]={n=YP>=ac and YP-ac+0X01 or 0X0,E(eP,ac+0x1,YP+0X0001)};end;if LP~=mP then if not(s)then _ENV=LP;else s(ic,LP);end;end;local vP,qP,CP,EP=c(function()while true do local io=bc[PP];local zo=io[0X03];do PP=PP+1;end;if not(zo>=0x00010)then if not(zo>=0X8)then if zo<0X4 then if zo<0X2 then if zo~=0x0001 then local mV=(io[0X2]);local CV,OV=KP[mV],((io[0X4]-0X1)*0X00032);do for V0=1,io[5]do CV[OV+V0]=KP[mV+V0];end;end;else(KP)[0X03]=LP[io[0x6]];PP=PP+0X1;PP=PP+0X00001;io=bc[PP];do PP=PP+1;end;KP[3]=KP[0X0003][io[1]];PP=PP+1;PP=PP+1;io=bc[PP];PP=PP+1;do if KP[0X3]then do PP=io[5];end;end;end;end;else if zo==3 then KP[0X1]=LP[io[6]];do PP=PP+0X0001;end;PP=PP+1;io=bc[PP];PP=PP+0X001;KP[0x2]=io[0X6];io=bc[PP];PP=PP+0X1;(KP)[3]=io[6];do PP=PP+0X01;end;local wc=(0X1);do(KP)[wc]=KP[wc](KP[wc+0X1],KP[wc+2]);end;GP=wc;PP=PP+1;do PP=PP+1;end;io=bc[PP];PP=PP+0X1;do KP[2]=LP[io[0X6]];end;PP=PP+1;PP=PP+1;io=bc[PP];local dc=(KP[0X2]);do PP=PP+0X1;end;do wc=2;end;do(KP)[wc+0X0001]=dc;end;KP[wc]=dc[io[1]];io=bc[PP];PP=PP+1;(KP)[0x4]=io[6];do io=bc[PP];end;PP=PP+1;do(KP)[0X5]=LP[io[0X0006]];end;do PP=PP+1;end;do(KP)[0X6]=KP[0x1];end;PP=PP+1;wc=5;do(KP)[wc]=KP[wc](KP[wc+0x1]);end;local Pc=0X4;GP=wc;PP=PP+1;KP[0X4]=KP[Pc]..KP[Pc+0X1];PP=PP+1;wc=0X00002;KP[wc](KP[wc+0X1],KP[wc+0X2]);GP=wc-1;do PP=PP+0X001;end;(KP)[2]=KP[0X1];do io=bc[PP];end;PP=PP+0x001;if KP[0X0002]then do PP=io[0X0005];end;end;else KP[2]=LP[io[0X6]];do PP=PP+0X001;end;local WK=2;PP=PP+0X00001;io=bc[PP];PP=PP+1;KP[3]=io[6];PP=PP+0x1;(KP[WK])(KP[WK+1]);GP=WK-1;do PP=PP+0X1;end;PP=PP+0X001;io=bc[PP];PP=PP+0X1;PP=io[0X5];end;end;else if not(zo<6)then if zo~=7 then(KP)[io[0X2]]={E({},0x00001,io[0X00005])};else do KP[io[0X0002]]=not KP[io[5]];end;end;else if zo==5 then if not(not(KP[io[5]]<io[0X1]))then else PP=io[0X00002];end;else(KP)[1]=LP[io[6]];do PP=PP+1;end;PP=PP+1;do io=bc[PP];end;PP=PP+0x0001;(KP)[1]=KP[0x1][io[0X001]];PP=PP+1;PP=PP+0X0001;io=bc[PP];do PP=PP+0X001;end;if not KP[1]then PP=io[5];end;end;end;end;else if not(zo>=0XC)then do if zo<10 then if zo~=9 then do(KP)[1]=LP[io[6]];end;PP=PP+1;PP=PP+0X00001;do io=bc[PP];end;PP=PP+0X0001;(KP)[0X01]=KP[1][io[0x001]];do PP=PP+1;end;PP=PP+1;io=bc[PP];PP=PP+0X00001;KP[0x2]=io[0X006];PP=PP+1;local Hb=0X1;do(KP)[Hb]=KP[Hb](KP[Hb+1]);end;GP=Hb;io=bc[PP];PP=PP+0X001;if not KP[1]then PP=io[0X05];end;else local Sr=Uc[io[5]];local er=(nil);local Jr=(Sr[5]);local Gr=#Jr;if Gr>0 then er={};do for KL=1,Gr do local yL=Jr[KL];if yL[1]~=0X0 then er[KL-0X1]=jc[yL[0X00002]];else do er[KL-0X00001]={KP,yL[2]};end;end;end;end;S(Lc,er);end;do(KP)[io[2]]=e3(Sr,er,LP);end;end;else do if zo~=0X000B then local Gv,Hv=io[2],io[0X00005];do GP=Gv+Hv-0x1;end;repeat local iq,Vq=Lc,KP;if not(#iq>0)then else local O7=({});do for FU,XU in M,iq do do for gP,IP in M,XU do if not(IP[0X001]==Vq and IP[2]>=0X0000)then else local UZ=(IP[0x2]);if not O7[UZ]then O7[UZ]={Vq[UZ]};end;IP[1]=O7[UZ];(IP)[0x2]=0x1;end;end;end;end;end;end;until true;return true,Gv,Hv;else end;end;end;end;else if not(zo>=0xE)then do if zo==13 then local gh=(0X2);local Hh=KP[2];do KP[gh+1]=Hh;end;KP[gh]=Hh[io[0X1]];io=bc[PP];PP=PP+1;do(KP)[4]=io[0X6];end;PP=PP+1;gh=0x2;do(KP)[gh]=KP[gh](KP[gh+1],KP[gh+0X02]);end;do GP=gh;end;PP=PP+1;PP=PP+0X1;io=bc[PP];PP=PP+1;if KP[0X2]then PP=io[0X5];end;else do KP[io[0X00002]]=KP[io[0x5]]==KP[io[4]];end;end;end;else if zo==0x00F then KP[2]=LP[io[6]];do PP=PP+0x1;end;PP=PP+1;local dM=jc[1];io=bc[PP];PP=PP+0X1;local TM=0;do KP[3]=LP[io[6]];end;local RM=0X003;PP=PP+0X01;local hM=1;if hM~=0X0 then GP=RM+hM-0X1;end;local EM,cM=nil,nil;if hM==1 then do EM,cM=q3(KP[RM]());end;else EM,cM=q3(KP[RM](E(KP,RM+1,GP)));end;if TM==0X01 then do GP=RM-0X1;end;else do if TM==0 then do EM=EM+RM-0X1;end;GP=EM;else EM=RM+TM-0X00002;do GP=EM+1;end;end;end;local Wg=(0);do for Ox=RM,EM do Wg=Wg+0X1;(KP)[Ox]=cM[Wg];end;end;end;PP=PP+0X1;RM=0X00002;do KP[RM]=KP[RM](E(KP,RM+0X1,GP));end;do GP=RM;end;PP=PP+0x01;PP=PP+0x1;do PP=PP+1;end;do(KP)[0X3]=dM[1][dM[2]];end;PP=PP+0X001;PP=PP+0X1;io=bc[PP];PP=PP+1;KP[3]=KP[3][io[1]];do PP=PP+1;end;PP=PP+1;PP=PP+1;do KP[4]=KP[0x2];end;do PP=PP+1;end;RM=0X3;(KP)[RM]=KP[RM](KP[RM+0X1]);GP=RM;io=bc[PP];PP=PP+1;do if not KP[3]then PP=io[0X5];end;end;else KP[0X0000]=LP[io[6]];do io=bc[PP];end;do PP=PP+1;end;local iS=0X00;KP[1]=io[6];do io=bc[PP];end;do PP=PP+0X1;end;(KP)[2]=io[6];PP=PP+1;(KP)[iS]=KP[iS](KP[iS+1],KP[iS+0X2]);GP=iS;local CS=3;io=bc[PP];do PP=PP+0X1;end;KP[0X1]=LP[io[6]];local XS=(KP[1]);do io=bc[PP];end;PP=PP+1;do iS=1;end;KP[iS+1]=XS;(KP)[iS]=XS[io[0x1]];do io=bc[PP];end;PP=PP+1;do(KP)[3]=io[0X006];end;io=bc[PP];do PP=PP+1;end;KP[4]=LP[io[0x6]];PP=PP+1;PP=PP+1;do PP=PP+1;end;KP[0X00005]=KP[0];do PP=PP+1;end;iS=0X4;KP[iS]=KP[iS](KP[iS+0X1]);do GP=iS;end;do PP=PP+1;end;do(KP)[3]=KP[CS]..KP[CS+0x01];end;PP=PP+1;iS=0X01;(KP[iS])(KP[iS+1],KP[iS+2]);GP=iS-0X01;PP=PP+0X01;PP=PP+0X1;io=bc[PP];PP=PP+0x001;PP=io[0X5];end;end;end;end;else if zo<24 then if not(zo>=0X14)then do if not(zo<0x00012)then if zo~=19 then do repeat local Rx,ax=Lc,KP;do if not(#Rx>0)then else local PC=({});for Pr,Hr in M,Rx do for xe,Ee in M,Hr do if Ee[1]==ax and Ee[0X02]>=0x000 then local b1=Ee[0X02];if not PC[b1]then(PC)[b1]={ax[b1]};end;(Ee)[0X1]=PC[b1];Ee[0X00002]=1;end;end;end;end;end;until true;end;do return;end;else KP[io[2]]=io[6];end;else if zo~=17 then KP[0X03]=LP[io[0x0006]];io=bc[PP];do PP=PP+0X01;end;do(KP)[0X3]=KP[3][io[0x1]];end;PP=PP+1;PP=PP+1;io=bc[PP];PP=PP+1;if not(KP[0X3])then else do PP=io[0x05];end;end;else(KP)[2]=LP[io[6]];PP=PP+0X00001;PP=PP+1;io=bc[PP];PP=PP+0x1;(KP)[2]=KP[0x2][io[0X0001]];io=bc[PP];PP=PP+0x1;if not KP[2]then PP=io[5];end;end;end;end;else do if zo<0X16 then if zo==21 then(KP)[io[0x2]]=KP[io[5]]+KP[io[0X4]];else local Xp=jc[0];KP[2]=Xp[1][Xp[0X2]];PP=PP+1;do PP=PP+0x0001;end;io=bc[PP];local tp=(2);PP=PP+1;local lp=KP[2];KP[tp+0x1]=lp;do KP[tp]=lp[io[1]];end;PP=PP+0X001;do tp=2;end;(KP[tp])(KP[tp+0X00001]);GP=tp-1;PP=PP+0X0001;PP=PP+0X1;io=bc[PP];PP=PP+0x1;PP=io[5];end;else if zo~=0X17 then local oz=KP[io[0x05]]/KP[io[0X00004]];(KP)[io[2]]=oz-oz%1;else KP[io[2]]=LP[io[0x6]];end;end;end;end;else if not(zo<28)then if zo>=0X1e then if zo==0x001f then if KP[io[0X002]]then PP=io[5];end;else local R4=(jc[0]);KP[1]=R4[1][R4[2]];PP=PP+1;PP=PP+0X01;io=bc[PP];local K4=(1);do PP=PP+1;end;local i4=KP[0X00001];KP[K4+0X1]=i4;KP[K4]=i4[io[1]];do PP=PP+0X1;end;K4=1;(KP)[K4]=KP[K4](KP[K4+1]);GP=K4;io=bc[PP];do PP=PP+0x1;end;if not(not KP[0x00001])then else PP=io[0X5];end;end;else if zo~=29 then do(KP)[1]=LP[io[0X06]];end;PP=PP+1;PP=PP+0X01;PP=PP+0x001;GP=1;(KP)[GP]=KP[GP]();io=bc[PP];PP=PP+1;if KP[0X1]then PP=io[0x5];end;else do PP=io[5];end;end;end;else if zo>=0X001A then do if zo==27 then local Uo=(jc[1]);KP[0X3]=Uo[1][Uo[0x2]];io=bc[PP];PP=PP+0X0001;(KP)[3]=KP[0X00003][io[1]];PP=PP+1;PP=PP+1;PP=PP+1;KP[0X004]=KP[2];io=bc[PP];do PP=PP+1;end;KP[0X5]=LP[io[0X6]];PP=PP+0X001;PP=PP+0x1;PP=PP+0x1;(KP)[6]=nil;do PP=PP+1;end;(KP)[7]={};local Lo=(3);io=bc[PP];PP=PP+1;local Bo=(Uc[io[0X05]]);local to=(Bo[5]);local uo=nil;local oo=(#to);if not(oo>0X0)then else uo={};for Wc=1,oo do local cc=to[Wc];if cc[1]==0 then(uo)[Wc-1]={KP,cc[2]};else do uo[Wc-1]=jc[cc[2]];end;end;end;(S)(Lc,uo);end;(KP)[8]=e3(Bo,uo,LP);do io=bc[PP];end;PP=PP+0X1;KP[7][io[0X006]]=KP[0X008];PP=PP+1;do GP=Lo+5-1;end;KP[Lo](E(KP,Lo+1,GP));GP=Lo-0X0001;io=bc[PP];PP=PP+0X1;PP=io[0X05];else(KP)[0X00001]=LP[io[0X006]];do PP=PP+1;end;do PP=PP+0x1;end;io=bc[PP];PP=PP+0X01;(KP)[1]=KP[1][io[0X1]];do PP=PP+0X1;end;do PP=PP+1;end;io=bc[PP];PP=PP+0x001;do if not(not KP[1])then else PP=io[0X5];end;end;end;end;else if zo==0x19 then(KP)[2]=false;do io=bc[PP];end;PP=PP+1;(LP)[io[6]]=KP[2];do io=bc[PP];end;PP=PP+0X1;KP[2]=LP[io[0x6]];PP=PP+1;PP=PP+1;local Cy=2;io=bc[PP];PP=PP+0X1;(KP)[0x03]=io[0x0006];PP=PP+0X1;KP[Cy]=KP[Cy](KP[Cy+1]);do GP=Cy;end;do PP=PP+1;end;PP=PP+1;do io=bc[PP];end;PP=PP+0X1;if KP[0x2]then PP=io[5];end;else for bX=io[2],io[5]do(KP)[bX]=nil;end;end;end;end;end;end;end;end);if vP then do if qP then if EP==1 then return KP[CP]();else do return KP[CP](E(KP,CP+1,GP));end;end;elseif CP then return E(KP,CP,EP);end;end;else if V(qP)=="string"then do if not(r(qP,"\097tt\101\109\112t\032t\111\032yie\108\100 ac\114\111\115s \109e\116\097met\104od/\067%-\099\097\108l b\111\117\110\100ar\121"))then else return coroutine.yield();end;end;do if r(qP,"\094\046\045\058%\100+\058\032")then(q)("\076ur\097\112h Scr\105pt:"..(Qc[PP-1]or"(internal)")..": "..u(qP),0);else(q)(qP,0);end;end;else q(qP,0);end;end;end;end;else do if Sc~=0X86 then do ic=function(...)local AM,BM=0,{};local wM=1;local MM=({[2]=Vc,[1]=BM});local PM=((k and k()or _ENV));local cM=(PM==H and fc or PM);local WM,bM=q3(...);WM=WM-1;for DQ=0,WM do if not(ac>DQ)then break;else BM[DQ]=bM[DQ+0X0001];end;end;if not nc then bM=nil;elseif Ac then do(BM)[ac]={n=WM>=ac and WM-ac+1 or 0,E(bM,ac+0x1,WM+0X1)};end;end;if cM~=PM then if s then s(ic,cM);else _ENV=cM;end;end;local ZM,fM,UM,yM=c(function()while true do local JF=bc[wM];local yF=(JF[0x3]);do wM=wM+0X1;end;do if not(yF>=6)then do if not(yF<0X03)then if not(yF<4)then if yF==5 then(BM)[JF[2]]=MM[JF[5]];else local Xr,Gr=Uc[JF[0X5]],(nil);local er=Xr[5];local qr=#er;if qr>0 then Gr={};do for GJ=1,qr do local qJ=er[GJ];if qJ[0X0001]~=0X0 then(Gr)[GJ-1]=jc[qJ[2]];else(Gr)[GJ-0X01]={BM,qJ[0x2]};end;end;end;(S)(Lc,Gr);end;(BM)[JF[0X00002]]=e3(Xr,Gr,cM);end;else(BM)[JF[0x2]]=BM[JF[5]][BM[JF[0X4]]];end;else if not(yF>=0X01)then for zw=JF[0X02],JF[5]do BM[zw]=nil;end;else if yF==0X002 then else(BM)[JF[0x2]]={E({},0X01,JF[5])};end;end;end;end;else if yF>=9 then if not(yF<11)then if yF~=12 then(BM)[0]=cM[JF[6]];wM=wM+0X1;local zP=0X1;wM=wM+1;JF=bc[wM];wM=wM+0X00001;BM[0X01]=cM[JF[6]];JF=bc[wM];wM=wM+1;(BM)[0X0002]=JF[0X6];wM=wM+1;BM[0x3]=true;wM=wM+1;(BM)[zP]=BM[zP](BM[zP+0x0001],BM[zP+0X2]);AM=zP;wM=wM+0X1;wM=wM+1;do JF=bc[wM];end;wM=wM+1;(BM)[0X00001]=BM[0X01][JF[1]];wM=wM+0X001;wM=wM+1;JF=bc[wM];wM=wM+1;BM[1]=BM[1][JF[1]];JF=bc[wM];wM=wM+0X0001;BM[0X0][JF[0x6]]=BM[1];wM=wM+0X1;do repeat local S4,M4=Lc,(BM);if not(#S4>0)then else local Jd=({});do for Wy,Ny in M,S4 do do for OG,XG in M,Ny do do if XG[1]==M4 and XG[2]>=0X00000 then local tJ=(XG[2]);do if not(not Jd[tJ])then else do(Jd)[tJ]={M4[tJ]};end;end;end;do XG[1]=Jd[tJ];end;do(XG)[2]=0x1;end;end;end;end;end;end;end;end;until true;end;return;else do if BM[JF[5]]==BM[JF[4]]then wM=JF[2];end;end;end;else do if yF==10 then(BM)[JF[0x0002]]=JF[6];else wM=JF[5];end;end;end;else if not(yF<0X7)then if yF~=0X0008 then local me=(JF[0X0002]);for ng=me,me+(JF[5]-1)do(BM)[ng]=bM[ac+(ng-me)+0X01];end;else(BM)[JF[0X002]]=cM[JF[6]];end;else(BM)[JF[0X02]]=BM[JF[5]]^BM[JF[0X4]];end;end;end;end;end;end);do if not(ZM)then if V(fM)~="\115\116r\105\110\103"then q(fM,0X0);else if r(fM,'\097\116\116em\112\116\032\116o\032yie\108\100 \097\099\114os\115\032m\101t\097\109e\116\104\111\100/C\037-\099al\108 \098\111u\110\100ar\121')then return coroutine.yield();end;if not(r(fM,"^.-:%d+: "))then(q)(fM,0X0);else(q)("Luraph Script:"..(Qc[wM-1]or"(\105n\116\101rna\108\041").."\058 "..u(fM),0);end;end;else if fM then if yM==0X1 then return BM[UM]();else return BM[UM](E(BM,UM+0X1,AM));end;elseif UM then return E(BM,UM,yM);end;end;end;end;end;else ic=function(...)local SI,jI={},(0X00);local MI=0X1;local JI=(k and k()or _ENV);local PI=({[1]=SI,[2]=Vc});local UI,wI=q3(...);do UI=UI-0X001;end;for Kk=0,UI do if not(ac>Kk)then break;else do(SI)[Kk]=wI[Kk+1];end;end;end;local vI=((JI==H and fc or JI));do if not nc then wI=nil;elseif Ac then SI[ac]={n=UI>=ac and UI-ac+0X00001 or 0,E(wI,ac+1,UI+1)};end;end;if vI==JI then else if not(s)then _ENV=vI;else s(ic,vI);end;end;local bI,rI,DI,RI=c(function()do while true do local eW=(bc[MI]);local KW=eW[3];do MI=MI+0x1;end;if KW>=0X0001b then if KW<0x29 then if not(KW<0X000022)then if not(KW>=0X00025)then if KW>=35 then do if KW==0X00024 then SI[11]=SI[7][eW[1]];eW=bc[MI];local Dx=(11);do MI=MI+1;end;vI[eW[0X6]]=SI[11];eW=bc[MI];MI=MI+1;SI[11]=vI[eW[6]];do eW=bc[MI];end;MI=MI+1;do SI[11]=SI[0x00B][eW[0x01]];end;eW=bc[MI];do MI=MI+0X1;end;SI[12]=SI[7][eW[1]];MI=MI+1;MI=MI+1;do MI=MI+1;end;SI[Dx]=SI[Dx](SI[Dx+1]);jI=Dx;eW=bc[MI];MI=MI+1;vI[eW[0X6]]=SI[11];eW=bc[MI];MI=MI+1;MI=eW[0X5];else MI=eW[5];end;end;else if SI[eW[5]]~=SI[eW[0X004]]then do MI=eW[0x2];end;end;end;else if not(KW>=39)then if KW~=0x26 then local vW=(eW[2]);local kW,yW=SI[vW]();if kW then do MI=eW[5];end;SI[vW+0x00003]=yW;end;else SI[0XD]=vI[eW[6]];MI=MI+1;(SI)[14]=SI[0X6];local bm=(0xd);MI=MI+1;do(SI)[bm]=SI[bm](SI[bm+0X00001]);end;jI=bm;do eW=bc[MI];end;MI=MI+1;(vI)[eW[6]]=SI[0XD];eW=bc[MI];MI=MI+0X1;(SI)[13]=vI[eW[0x6]];MI=MI+0X1;MI=MI+1;MI=MI+1;do(SI)[0xE]=SI[0X0B];end;MI=MI+0X00001;do bm=0X000d;end;(SI)[bm]=SI[bm](SI[bm+0X00001]);jI=bm;eW=bc[MI];MI=MI+0X1;vI[eW[6]]=SI[0X0000D];eW=bc[MI];do MI=MI+0x1;end;(SI)[13]=vI[eW[0x6]];MI=MI+0X00001;do MI=MI+1;end;eW=bc[MI];MI=MI+0X1;SI[13]=SI[0X00D][eW[1]];MI=MI+0X00001;MI=MI+1;eW=bc[MI];MI=MI+0X1;(SI)[14]=SI[0Xc][eW[1]];do MI=MI+1;end;MI=MI+0x001;eW=bc[MI];MI=MI+1;SI[0xf]=vI[eW[0X06]];MI=MI+1;do MI=MI+1;end;MI=MI+0X1;bm=13;SI[bm]=SI[bm](SI[bm+0X001],SI[bm+0X2]);do jI=bm;end;eW=bc[MI];MI=MI+0x1;do vI[eW[6]]=SI[13];end;do eW=bc[MI];end;MI=MI+0x1;do SI[0X0000d]=SI[0X0C][eW[0X1]];end;eW=bc[MI];do MI=MI+0X1;end;do vI[eW[6]]=SI[13];end;eW=bc[MI];do MI=MI+0X00001;end;(SI)[0x000d]=SI[0X00c][eW[1]];do MI=MI+1;end;do(SI)[0Xd]=SI[2]-SI[13];end;MI=MI+0X00001;SI[3]=SI[13];eW=bc[MI];MI=MI+1;SI[0xD]=vI[eW[0X6]];eW=bc[MI];MI=MI+0X1;do(SI)[0Xd]=SI[0Xd][eW[1]];end;MI=MI+1;MI=MI+0X1;do MI=MI+1;end;SI[14]=SI[4];eW=bc[MI];MI=MI+1;(SI)[15]=eW[6];do MI=MI+0X01;end;SI[0X0010]={};do eW=bc[MI];end;do MI=MI+0x1;end;(SI)[0x11]=vI[eW[0X06]];MI=MI+1;MI=MI+1;MI=MI+1;(SI)[18]=SI[0X00006];do MI=MI+0X01;end;bm=0X000011;(SI)[bm]=SI[bm](SI[bm+0X1]);do jI=bm;end;do MI=MI+0X001;end;MI=MI+1;eW=bc[MI];do MI=MI+0x1;end;(SI[16])[eW[6]]=SI[17];eW=bc[MI];MI=MI+0X1;(SI)[17]=vI[eW[0X00006]];MI=MI+0X1;SI[18]=SI[0XB];do MI=MI+0x1;end;do bm=0X11;end;(SI)[bm]=SI[bm](SI[bm+1]);do jI=bm;end;MI=MI+0x001;do MI=MI+0X01;end;eW=bc[MI];MI=MI+1;do SI[0X10][eW[0X0006]]=SI[17];end;eW=bc[MI];MI=MI+1;(SI)[0x00011]=vI[eW[6]];MI=MI+0X1;MI=MI+0x1;eW=bc[MI];MI=MI+0x0001;(SI)[0X00011]=SI[17][eW[0X1]];MI=MI+0x1;do MI=MI+1;end;eW=bc[MI];do MI=MI+1;end;SI[0X00012]=SI[0XC][eW[1]];do eW=bc[MI];end;MI=MI+1;do(SI)[0x00013]=vI[eW[6]];end;MI=MI+1;MI=MI+0X1;MI=MI+0x001;bm=17;(SI)[bm]=SI[bm](SI[bm+0X1],SI[bm+2]);do jI=bm;end;eW=bc[MI];MI=MI+0x001;(SI[0X10])[eW[0X00006]]=SI[0X11];eW=bc[MI];do MI=MI+0X00001;end;do(SI)[17]=SI[0xC][eW[0X1]];end;do eW=bc[MI];end;do MI=MI+1;end;SI[16][eW[0x0006]]=SI[17];MI=MI+1;bm=13;jI=bm+0X4-0X1;SI[bm](E(SI,bm+1,jI));jI=bm-1;eW=bc[MI];MI=MI+1;MI=eW[5];end;else do if KW==40 then do(SI)[0X9]=SI[7][eW[0X01]];end;MI=MI+0x0001;do MI=MI+1;end;eW=bc[MI];MI=MI+1;(SI)[10]=vI[eW[0X6]];MI=MI+0X1;MI=MI+1;do eW=bc[MI];end;do MI=MI+0X1;end;local WG=10;(SI)[10]=SI[10][eW[1]];do MI=MI+0x1;end;MI=MI+0X1;eW=bc[MI];MI=MI+1;SI[0X000B]=SI[0X7][eW[1]];eW=bc[MI];MI=MI+0X0001;SI[12]=vI[eW[6]];MI=MI+1;MI=MI+0X1;MI=MI+1;(SI)[WG]=SI[WG](SI[WG+0X1],SI[WG+0X02]);jI=WG;MI=MI+0X1;MI=MI+1;MI=MI+1;SI[9]=SI[9][SI[0XA]];eW=bc[MI];MI=MI+0X1;do if SI[0X9]==eW[0x01]then else do MI=eW[0X2];end;end;end;else do(SI)[eW[2]]=eW[6];end;end;end;end;end;else if not(KW>=0X1e)then if KW>=28 then if KW~=29 then if not(not SI[eW[0X2]])then else MI=eW[5];end;else(SI)[0X0d]=SI[12][eW[1]];MI=MI+0X1;do SI[0X000D]=SI[0X2]-SI[0Xd];end;do eW=bc[MI];end;MI=MI+1;if not(SI[13]<SI[3])then MI=eW[0X2];end;end;else do(SI)[0x5]=vI[eW[0X6]];end;MI=MI+1;MI=MI+1;eW=bc[MI];MI=MI+1;(SI)[0X5]=SI[5][eW[0X001]];MI=MI+1;MI=MI+0X01;do eW=bc[MI];end;MI=MI+1;SI[6]=eW[0x6];do eW=bc[MI];end;MI=MI+0X00001;(SI)[0X7]=eW[0x0006];local lo=5;do eW=bc[MI];end;do MI=MI+1;end;(SI)[8]=eW[6];MI=MI+1;do jI=lo+0X00004-1;end;SI[lo]=SI[lo](E(SI,lo+0X1,jI));jI=lo;MI=MI+1;do MI=MI+0X1;end;eW=bc[MI];MI=MI+1;(vI)[eW[6]]=SI[0x00005];eW=bc[MI];MI=MI+1;MI=eW[0x00005];end;else if KW>=32 then do if KW~=33 then do SI[0x3]=vI[eW[6]];end;do MI=MI+0x1;end;do MI=MI+1;end;eW=bc[MI];MI=MI+0X1;(SI)[3]=SI[0X3][eW[0x001]];MI=MI+0X1;do MI=MI+1;end;eW=bc[MI];MI=MI+1;(SI)[0X3]=SI[0X3][eW[0X0001]];eW=bc[MI];MI=MI+0X001;(SI)[0X03]=SI[0X3][eW[0X001]];do MI=MI+0X1;end;MI=MI+0X0001;eW=bc[MI];do MI=MI+0X1;end;do MI=eW[0x05];end;else SI[0X5]=vI[eW[0X006]];MI=MI+1;MI=MI+0X1;local vN=(5);do eW=bc[MI];end;MI=MI+1;local PN=(SI[0x5]);(SI)[vN+0X1]=PN;(SI)[vN]=PN[eW[0X001]];eW=bc[MI];MI=MI+0x1;SI[0X7]=eW[6];eW=bc[MI];do MI=MI+0x1;end;do SI[0X00008]=vI[eW[6]];end;MI=MI+0X1;MI=MI+0X1;do MI=MI+0X01;end;SI[0X008]=#SI[8];MI=MI+1;vN=0x0005;do jI=vN+0X04-0x1;end;(SI)[vN]=SI[vN](E(SI,vN+1,jI));jI=vN;MI=MI+0x01;do MI=MI+0X1;end;do eW=bc[MI];end;MI=MI+0X1;if SI[5]~=eW[0X001]then MI=eW[2];end;end;end;else if KW==0X0001F then SI[5]=vI[eW[0x6]];MI=MI+0X0001;do MI=MI+0X001;end;do eW=bc[MI];end;MI=MI+0X1;do if SI[0X5]==eW[1]then else MI=eW[0x00002];end;end;else(SI)[eW[2]]=SI[eW[5]][eW[1]];end;end;end;end;else if KW<0x30 then if KW<44 then if not(KW<42)then if KW~=43 then(SI)[0xc]=SI[7][SI[0X000b]];MI=MI+1;MI=MI+0X0001;eW=bc[MI];MI=MI+0X01;(SI)[13]=SI[12][eW[1]];do eW=bc[MI];end;MI=MI+1;do if not(SI[13]<=SI[0x2])then MI=eW[0X2];end;end;else do SI[eW[2]]=not SI[eW[5]];end;end;else if not(SI[eW[5]]<=SI[eW[4]])then MI=eW[0X2];end;end;else do if KW>=0X2e then do if KW~=0X02f then(SI)[11]=SI[0X4][eW[0X1]];MI=MI+1;do MI=MI+0x1;end;eW=bc[MI];MI=MI+1;(SI)[11]=SI[11][eW[0X1]];eW=bc[MI];do MI=MI+1;end;do if SI[10]==SI[11]then else MI=eW[0x2];end;end;else repeat local mH,sH=Lc,(SI);if#mH>0 then local Sq=({});for H_,X_ in M,mH do for ry,by in M,X_ do if not(by[0x1]==sH and by[0x2]>=0)then else local WM=(by[2]);if not Sq[WM]then(Sq)[WM]={sH[WM]};end;by[1]=Sq[WM];by[0X002]=1;end;end;end;end;until true;return;end;end;else if KW==45 then else(SI)[3]=eW[6]/eW[1];do MI=MI+0X1;end;local He=(5);SI[4]={};MI=MI+0X0001;do(SI)[5]=nil;end;eW=bc[MI];local Ce=(0X004);MI=MI+0X001;vI[eW[0X6]]=SI[0X5];do eW=bc[MI];end;MI=MI+1;do SI[5]=vI[eW[6]];end;eW=bc[MI];MI=MI+0x00001;(SI)[6]=vI[eW[0X6]];MI=MI+1;do MI=MI+0X01;end;MI=MI+0X1;local ne=0X2;if ne~=0X0 then jI=He+ne-0x1;end;local Ye,fe=nil,(nil);if ne~=0X1 then do Ye,fe=q3(SI[He](E(SI,He+0X01,jI)));end;else Ye,fe=q3(SI[He]());end;do if Ce==1 then jI=He-1;else do if Ce~=0 then do Ye=He+Ce-0X02;end;do jI=Ye+1;end;else do Ye=Ye+He-1;end;do jI=Ye;end;end;end;local iF=0X00000;for Oo=He,Ye do do iF=iF+1;end;(SI)[Oo]=fe[iF];end;end;end;do eW=bc[MI];end;MI=MI+0X1;He=5;local se=(P(function(...)C();do for Gm,Xm in...do C(true,Gm,Xm);end;end;end));(se)(SI[He],SI[He+0X1],SI[He+2]);jI=He;do(SI)[He]=se;end;MI=eW[0X05];end;end;end;end;else do if KW<51 then if not(KW<0X0031)then if KW~=50 then SI[0X0000b]=SI[0x4][eW[1]];do eW=bc[MI];end;MI=MI+1;do SI[12]=vI[eW[0X006]];end;do eW=bc[MI];end;MI=MI+1;SI[12]=SI[12][eW[1]];local cN=(0XC);eW=bc[MI];do MI=MI+1;end;(SI)[0X0000D]=SI[7][eW[0x1]];do MI=MI+0X1;end;MI=MI+1;MI=MI+1;do(SI)[cN]=SI[cN](SI[cN+0X01]);end;jI=cN;do eW=bc[MI];end;do MI=MI+1;end;SI[0x00B][eW[6]]=SI[12];eW=bc[MI];MI=MI+1;do SI[0Xb]=SI[4][eW[0X1]];end;MI=MI+0X01;MI=MI+1;do eW=bc[MI];end;do MI=MI+1;end;SI[0X0000C]=SI[0X007][eW[1]];MI=MI+1;MI=MI+1;eW=bc[MI];MI=MI+0x00001;SI[0XB][eW[0x06]]=SI[0Xc];eW=bc[MI];MI=MI+0X1;MI=eW[5];else SI[eW[2]]=w(SI[eW[0x05]],SI[eW[0X4]]);end;else SI[0X05]=eW[0X6];local Wo=(0X0005);eW=bc[MI];do MI=MI+0X1;end;local uo=(SI[0X0005]);SI[Wo+0X01]=uo;(SI)[Wo]=uo[eW[0x001]];eW=bc[MI];do MI=MI+0X1;end;SI[7]=vI[eW[0X6]];do MI=MI+0X0001;end;Wo=5;SI[Wo]=SI[Wo](SI[Wo+0X0001],SI[Wo+2]);jI=Wo;eW=bc[MI];do MI=MI+0X1;end;if SI[5]then do MI=eW[0x00005];end;end;end;else if not(KW>=0x0035)then do if KW==0X34 then(SI)[11]=SI[0x4][eW[0X1]];MI=MI+0X1;MI=MI+1;eW=bc[MI];do MI=MI+1;end;if not(not SI[11])then else MI=eW[5];end;else local yt,Zt=eW[2],(eW[5]);jI=yt+Zt-1;repeat local bK,PK=Lc,SI;if#bK>0 then local wb={};for Pr,Mr in M,bK do for p_,j_ in M,Mr do if not(j_[0X1]==PK and j_[2]>=0)then else local Ej=j_[2];if not(not wb[Ej])then else(wb)[Ej]={PK[Ej]};end;j_[0X00001]=wb[Ej];(j_)[2]=1;end;end;end;end;until true;return true,yt,Zt;end;end;else do if KW==0x000036 then SI[0X5]=vI[eW[6]];eW=bc[MI];MI=MI+0X1;(SI)[0X0006]=vI[eW[0x6]];eW=bc[MI];local Fl=5;MI=MI+0X1;do SI[0X0006]=SI[0X6][eW[1]];end;eW=bc[MI];MI=MI+0X1;SI[6]=SI[6][eW[0X01]];MI=MI+0X1;local jl=(0X00002);do if jl==0x0 then else do jI=Fl+jl-1;end;end;end;local bl,tl,al=0X0004,nil,nil;if jl==1 then tl,al=q3(SI[Fl]());else tl,al=q3(SI[Fl](E(SI,Fl+0x1,jI)));end;if bl==1 then jI=Fl-1;else if bl~=0 then tl=Fl+bl-0X2;jI=tl+0x1;else tl=tl+Fl-0X001;jI=tl;end;local FB=(0);do for Og=Fl,tl do do FB=FB+0x001;end;do SI[Og]=al[FB];end;end;end;end;do eW=bc[MI];end;MI=MI+1;Fl=0X05;local Ll=P(function(...)(C)();for oE,XE in...do(C)(true,oE,XE);end;end);Ll(SI[Fl],SI[Fl+1],SI[Fl+0X00002]);jI=Fl;do(SI)[Fl]=Ll;end;MI=eW[5];else(SI)[5]=vI[eW[0X0006]];eW=bc[MI];MI=MI+1;(SI)[6]=SI[0x4][eW[0x001]];eW=bc[MI];MI=MI+1;(SI)[0X006]=SI[0X06][eW[1]];MI=MI+0X1;do MI=MI+0x1;end;do eW=bc[MI];end;MI=MI+0X1;if SI[5]==SI[6]then else do MI=eW[0X2];end;end;end;end;end;end;end;end;end;else if KW>=13 then if not(KW>=0X14)then do if KW>=0x10 then if KW>=0X12 then if KW==19 then(SI)[0x5]=SI[4][eW[0X1]];MI=MI+0X0001;MI=MI+1;eW=bc[MI];MI=MI+0X1;do if not(not SI[0X5])then else do MI=eW[5];end;end;end;else(SI)[eW[0X2]]={E({},1,eW[5])};end;else if KW~=17 then do for uW=eW[2],eW[5]do SI[uW]=nil;end;end;else SI[0X008]=eW[0X006];do MI=MI+1;end;(SI)[0x9]=#SI[0X007];local Qs=(0X008);eW=bc[MI];MI=MI+0X1;(SI)[10]=eW[0x6];eW=bc[MI];MI=MI+0X01;local js=SI[Qs];local xs=(SI[Qs+0X002]);local bs=SI[Qs+1];(SI)[Qs]=P(function()for HK=js,bs,xs do C(true,HK);end;end);MI=eW[0x05];end;end;else if not(KW>=0x000E)then(SI)[14]=SI[0X00C][eW[0x1]];MI=MI+0X00001;do MI=MI+0x00001;end;eW=bc[MI];MI=MI+1;if SI[14]then MI=eW[5];end;else if KW==15 then if SI[eW[2]]then MI=eW[0X5];end;else do SI[5]=vI[eW[0x00006]];end;do MI=MI+1;end;MI=MI+0X001;eW=bc[MI];local f7=0X4;do MI=MI+0x001;end;do(SI)[6]=vI[eW[6]];end;do MI=MI+1;end;MI=MI+0X1;eW=bc[MI];MI=MI+1;local l7=0X5;SI[0x00007]=vI[eW[6]];MI=MI+1;(SI)[6]=SI[0X6][SI[0X007]];MI=MI+0X00001;do MI=MI+0x01;end;MI=MI+1;local k7=(0x00002);if k7~=0 then jI=l7+k7-1;end;local C7,F7=nil,nil;do if k7==0X1 then C7,F7=q3(SI[l7]());else C7,F7=q3(SI[l7](E(SI,l7+1,jI)));end;end;if f7~=0X1 then if f7==0X0 then do C7=C7+l7-0X1;end;do jI=C7;end;else C7=l7+f7-2;jI=C7+1;end;local N2=(0X0);for lo=l7,C7 do do N2=N2+0x1;end;(SI)[lo]=F7[N2];end;else jI=l7-1;end;do MI=MI+0x1;end;MI=MI+0X0001;eW=bc[MI];do MI=MI+0X1;end;l7=0X5;local X7=P(function(...)C();for qd,Bd in...do(C)(true,qd,Bd);end;end);X7(SI[l7],SI[l7+1],SI[l7+0X02]);do jI=l7;end;SI[l7]=X7;MI=eW[0x5];end;end;end;end;else if not(KW>=0x000017)then do if not(KW>=0X000015)then do(SI)[eW[2]]=vI[eW[6]];end;else if KW~=22 then SI[0X08]=vI[eW[6]];eW=bc[MI];do MI=MI+1;end;vI[eW[0X6]]=SI[0X8];eW=bc[MI];local a4=(0x8);MI=MI+1;(SI)[8]=vI[eW[6]];MI=MI+1;MI=MI+0X1;do MI=MI+0x1;end;(SI)[9]=SI[0X006];MI=MI+0x1;SI[a4]=SI[a4](SI[a4+0X1]);jI=a4;do eW=bc[MI];end;MI=MI+1;(vI)[eW[0x6]]=SI[8];do eW=bc[MI];end;do MI=MI+0X1;end;SI[8]=vI[eW[0x0006]];eW=bc[MI];do MI=MI+1;end;(SI)[8]=SI[0X0008][eW[1]];MI=MI+0x1;MI=MI+0X00001;eW=bc[MI];MI=MI+0X1;(SI)[9]=SI[7][eW[0X001]];do eW=bc[MI];end;do MI=MI+0X1;end;(SI)[10]=vI[eW[0X06]];MI=MI+0x1;MI=MI+0x00001;MI=MI+0x1;do a4=8;end;SI[a4]=SI[a4](SI[a4+0X01],SI[a4+2]);jI=a4;eW=bc[MI];MI=MI+0X1;(vI)[eW[0X00006]]=SI[8];eW=bc[MI];MI=MI+1;(SI)[0X8]=SI[0X07][eW[1]];eW=bc[MI];do MI=MI+0x1;end;vI[eW[0X6]]=SI[8];do eW=bc[MI];end;MI=MI+0X0001;do MI=eW[5];end;else SI[eW[2]]=SI[eW[0X0005]];end;end;end;else if KW<0X19 then if KW==0X18 then repeat local Yi,si=Lc,(SI);if#Yi>0X0 then local R_=({});for EY,SY in M,Yi do for mO,uO in M,SY do if not(uO[1]==si and uO[0X002]>=0)then else local kn=uO[2];if not R_[kn]then R_[kn]={si[kn]};end;(uO)[0x1]=R_[kn];do(uO)[2]=0X0001;end;end;end;end;end;until true;local Y4=(eW[0X2]);return false,Y4,Y4;else SI[0x4]=eW[0x006];eW=bc[MI];MI=MI+0X00001;do(SI)[0x5]=vI[eW[0X6]];end;local Um=2;do MI=MI+1;end;do jI=Um+4-1;end;do SI[Um]=SI[Um](E(SI,Um+1,jI));end;jI=Um;MI=MI+1;MI=MI+0X0001;end;else if KW==26 then SI[0X5]=vI[eW[0X00006]];MI=MI+1;do MI=MI+1;end;do eW=bc[MI];end;local xY=5;MI=MI+1;local wY=SI[5];SI[xY+0X1]=wY;(SI)[xY]=wY[eW[0x001]];eW=bc[MI];do MI=MI+1;end;(SI)[0X7]=eW[6];eW=bc[MI];MI=MI+0x1;do SI[0X8]=vI[eW[6]];end;MI=MI+0X1;do SI[0x8]=#SI[8];end;MI=MI+0X001;do xY=0X5;end;do jI=xY+4-1;end;SI[xY]=SI[xY](E(SI,xY+1,jI));jI=xY;MI=MI+0X001;MI=MI+1;eW=bc[MI];do MI=MI+1;end;if SI[5]~=eW[1]then do MI=eW[2];end;end;else(SI)[5]=vI[eW[0X6]];eW=bc[MI];MI=MI+1;do(SI)[0x5]=SI[5][eW[1]];end;do eW=bc[MI];end;MI=MI+1;(SI)[0X06]=eW[0X6];eW=bc[MI];local Us=0X5;MI=MI+0X0001;SI[0X7]=eW[6];eW=bc[MI];MI=MI+1;SI[8]=eW[0X6];MI=MI+1;jI=Us+4-0X1;SI[Us]=SI[Us](E(SI,Us+1,jI));do jI=Us;end;MI=MI+0X1;do MI=MI+0X1;end;eW=bc[MI];MI=MI+1;(vI)[eW[6]]=SI[5];eW=bc[MI];MI=MI+1;do MI=eW[0X00005];end;end;end;end;end;else if not(KW<6)then if not(KW<9)then if KW>=11 then if KW==12 then do if not(not(SI[eW[5]]<eW[1]))then else MI=eW[0X002];end;end;else SI[11]=SI[7][eW[0x0001]];do MI=MI+0X001;end;do MI=MI+1;end;eW=bc[MI];MI=MI+1;vI[eW[0X006]]=SI[0X000B];eW=bc[MI];MI=MI+1;SI[11]=vI[eW[0X6]];MI=MI+0X0001;MI=MI+1;eW=bc[MI];MI=MI+1;do(SI)[0X00B]=SI[11][eW[0x00001]];end;eW=bc[MI];local Gh=(0xB);do MI=MI+0X0001;end;SI[0X0C]=SI[0X7][eW[0X1]];MI=MI+0X1;MI=MI+1;do MI=MI+0X01;end;(SI)[Gh]=SI[Gh](SI[Gh+1]);do jI=Gh;end;eW=bc[MI];MI=MI+0X1;(vI)[eW[6]]=SI[11];eW=bc[MI];MI=MI+0X0001;do MI=eW[5];end;end;else if KW==0X0a then SI[0X5]=vI[eW[6]];eW=bc[MI];MI=MI+0X1;(SI)[5]=SI[0X5][eW[1]];do eW=bc[MI];end;MI=MI+1;local AY=0x05;SI[0X6]=eW[6];eW=bc[MI];do MI=MI+0x1;end;(SI)[0X7]=eW[0X06];eW=bc[MI];MI=MI+0x1;do(SI)[8]=eW[0x6];end;MI=MI+1;do jI=AY+4-1;end;do(SI)[AY]=SI[AY](E(SI,AY+0X1,jI));end;do jI=AY;end;eW=bc[MI];MI=MI+1;(vI)[eW[0X00006]]=SI[5];eW=bc[MI];MI=MI+0X1;MI=eW[0X5];else local OH=(eW[0X002]);local SH,lH,ZH=SI[OH]();do if SH then(SI)[OH+0X0001]=lH;do SI[OH+2]=ZH;end;MI=eW[5];end;end;end;end;else if not(KW>=0X7)then if not(SI[eW[0X5]]<SI[eW[0x4]])then do MI=eW[2];end;end;else if KW==8 then SI[0X08]=vI[eW[0x06]];local yQ=0X04;do eW=bc[MI];end;MI=MI+1;(SI)[0X0009]=SI[0X00007][eW[0x1]];MI=MI+0X1;local JQ=0X8;local vQ=(0X2);if vQ~=0 then do jI=JQ+vQ-0X00001;end;end;local YQ,gQ=nil,nil;if vQ~=1 then YQ,gQ=q3(SI[JQ](E(SI,JQ+1,jI)));else YQ,gQ=q3(SI[JQ]());end;if yQ~=1 then do if yQ~=0 then YQ=JQ+yQ-0X02;do jI=YQ+1;end;else YQ=YQ+JQ-1;do jI=YQ;end;end;end;local pR=0X0;for kI=JQ,YQ do pR=pR+1;SI[kI]=gQ[pR];end;else jI=JQ-0X001;end;eW=bc[MI];do MI=MI+1;end;JQ=8;local mQ=P(function(...)(C)();do for p_,k_ in...do C(true,p_,k_);end;end;end);mQ(SI[JQ],SI[JQ+1],SI[JQ+0X2]);jI=JQ;(SI)[JQ]=mQ;MI=eW[5];else local te=(Uc[eW[0X0005]]);local qe=te[0X5];local ae,fe=#qe,nil;if ae>0 then do fe={};end;do for f_=0X001,ae do local X_=(qe[f_]);if X_[0X1]~=0 then(fe)[f_-1]=jc[X_[0X2]];else fe[f_-1]={SI,X_[2]};end;end;end;S(Lc,fe);end;(SI)[eW[0X2]]=e3(te,fe,vI);end;end;end;else if not(KW<3)then do if not(KW>=4)then(SI)[13]=SI[0X0000c][eW[1]];do MI=MI+1;end;do MI=MI+1;end;eW=bc[MI];MI=MI+1;SI[0Xe]=vI[eW[6]];do MI=MI+0x001;end;do MI=MI+0X1;end;eW=bc[MI];MI=MI+1;SI[0Xe]=SI[0X0000E][eW[0X1]];local J9=14;eW=bc[MI];MI=MI+1;SI[0XF]=SI[12][eW[1]];eW=bc[MI];MI=MI+1;do SI[0X10]=vI[eW[0X6]];end;MI=MI+1;(SI)[J9]=SI[J9](SI[J9+0X01],SI[J9+2]);jI=J9;MI=MI+1;SI[0X0000D]=SI[13][SI[0X00e]];eW=bc[MI];MI=MI+0x1;if SI[13]~=eW[1]then else MI=eW[2];end;else if KW==0X5 then do SI[5]=eW[0X06];end;eW=bc[MI];MI=MI+1;local FS=(0X0005);local DS=(SI[0X5]);SI[FS+0X001]=DS;do(SI)[FS]=DS[eW[1]];end;eW=bc[MI];MI=MI+0X1;(SI)[7]=vI[eW[0x6]];MI=MI+0X1;FS=0X5;SI[FS]=SI[FS](SI[FS+1],SI[FS+0X2]);do jI=FS;end;eW=bc[MI];MI=MI+1;if not SI[5]then MI=eW[0X5];end;else(SI)[0x5]=SI[0x4][eW[0x1]];MI=MI+0x1;MI=MI+1;eW=bc[MI];MI=MI+1;(SI)[0x0005]=SI[0X5][eW[1]];MI=MI+1;MI=MI+0X1;do eW=bc[MI];end;MI=MI+1;(vI)[eW[0X0006]]=SI[0X5];eW=bc[MI];MI=MI+0X1;SI[5]=SI[0x4][eW[1]];eW=bc[MI];MI=MI+0X1;(SI)[0x5]=SI[5][eW[0X0001]];do MI=MI+1;end;do MI=MI+1;end;do eW=bc[MI];end;MI=MI+1;vI[eW[0X06]]=SI[0X5];do eW=bc[MI];end;MI=MI+1;do SI[5]=SI[4][eW[0X1]];end;MI=MI+0X1;MI=MI+1;eW=bc[MI];MI=MI+0X1;SI[0X005]=SI[5][eW[1]];MI=MI+0X1;MI=MI+0X0001;do eW=bc[MI];end;do MI=MI+1;end;vI[eW[6]]=SI[0X5];eW=bc[MI];MI=MI+0X1;(SI)[0X005]=SI[0x4][eW[1]];MI=MI+1;do MI=MI+1;end;eW=bc[MI];MI=MI+0X1;do SI[0X5]=SI[0x5][eW[0x01]];end;do eW=bc[MI];end;MI=MI+0X1;vI[eW[0X0006]]=SI[5];eW=bc[MI];MI=MI+1;do(SI)[5]=SI[4][eW[1]];end;eW=bc[MI];MI=MI+0X1;(SI)[0X5]=SI[5][eW[1]];do eW=bc[MI];end;MI=MI+0x001;vI[eW[0X0006]]=SI[5];do eW=bc[MI];end;MI=MI+1;(SI)[0X5]=SI[4][eW[0X1]];MI=MI+1;do MI=MI+0X1;end;eW=bc[MI];do MI=MI+0x001;end;SI[5]=SI[5][eW[0X1]];MI=MI+1;MI=MI+1;eW=bc[MI];MI=MI+1;vI[eW[6]]=SI[0x5];eW=bc[MI];do MI=MI+0X1;end;MI=eW[0X5];end;end;end;else if KW<1 then SI[eW[2]]=J(SI[eW[0X5]],SI[eW[0X04]]);else if KW==2 then(SI)[0X2]=vI[eW[6]];MI=MI+1;do MI=MI+0X1;end;eW=bc[MI];MI=MI+0x1;do SI[0X2]=SI[0x02][eW[1]];end;MI=MI+0X1;SI[3]=SI[0];eW=bc[MI];do MI=MI+0X1;end;if not(SI[3])then else MI=eW[0x5];end;else do(SI)[0X5]=vI[eW[0X00006]];end;do eW=bc[MI];end;MI=MI+1;SI[0x0005]=SI[5][eW[1]];do eW=bc[MI];end;MI=MI+1;(SI)[0X6]=eW[0X6];eW=bc[MI];do MI=MI+1;end;do SI[0X7]=eW[0X6];end;local g9=5;eW=bc[MI];MI=MI+1;SI[8]=eW[0X6];MI=MI+0x1;jI=g9+0X4-0X001;do(SI)[g9]=SI[g9](E(SI,g9+0x1,jI));end;jI=g9;eW=bc[MI];MI=MI+0X1;do(vI)[eW[6]]=SI[0X005];end;eW=bc[MI];MI=MI+0X1;MI=eW[5];end;end;end;end;end;end;end;end;end);do if bI then if rI then do if RI==0x1 then do return SI[DI]();end;else return SI[DI](E(SI,DI+1,jI));end;end;elseif DI then do return E(SI,DI,RI);end;end;else if V(rI)=="\115t\114\105\110g"then if not(r(rI,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;do if not(r(rI,'\094\046-\058\037d+:\032'))then(q)(rI,0x0000);else q('Lu\114\097\112\104 \083crip\116:'..(Qc[MI-0X01]or"(internal)")..": "..u(rI),0x00000);end;end;else(q)(rI,0x0000);end;end;end;end;end;end;end;end;end;end;else if Sc<129 then if Sc<127 then do ic=function(...)local xD=(1);local jD=({});local VD=((k and k()or _ENV));local kD,fD=q3(...);do kD=kD-0X00001;end;local OD,tD=(VD==H and fc or VD),{[1]=jD,[2]=Vc};local ID=(0);for ka=0,kD do do if not(ac>ka)then break;else(jD)[ka]=fD[ka+0x01];end;end;end;do if not nc then fD=nil;elseif not(Ac)then else jD[ac]={n=kD>=ac and kD-ac+1 or 0X0,E(fD,ac+1,kD+0X00001)};end;end;if OD~=VD then if s then(s)(ic,OD);else do _ENV=OD;end;end;end;local CD,qD,XD,BD=c(function()do while true do local oS=(bc[xD]);local YS=oS[3];xD=xD+0X001;if not(YS>=0X1D)then if not(YS>=14)then if not(YS<7)then if YS>=10 then if not(YS>=12)then if YS~=0Xb then(jD)[oS[0x2]]=jD[oS[0X5]]^jD[oS[4]];else(jD)[0]=OD[oS[6]];do xD=xD+0X0001;end;xD=xD+0X1;oS=bc[xD];xD=xD+0X01;jD[1]=oS[0x6];oS=bc[xD];xD=xD+1;local TG=(0x0);do(jD)[2]=oS[6];end;xD=xD+1;(jD[TG])(jD[TG+1],jD[TG+0X002]);do ID=TG-1;end;xD=xD+0X01;xD=xD+1;do oS=bc[xD];end;do xD=xD+0X1;end;xD=oS[5];end;else if YS==0XD then xD=oS[5];else(jD)[0x0000]=OD[oS[6]];oS=bc[xD];xD=xD+0X1;(jD)[1]=oS[6];local ft=0X0000;do oS=bc[xD];end;xD=xD+0X1;(jD)[2]=oS[0X6];xD=xD+0X1;(jD[ft])(jD[ft+0X0001],jD[ft+2]);ID=ft-1;oS=bc[xD];do xD=xD+0X1;end;xD=oS[5];end;end;else if YS>=0X8 then if YS~=9 then jD[0X0]=OD[oS[6]];oS=bc[xD];local XN=0;xD=xD+1;(jD)[0x1]=oS[6];oS=bc[xD];do xD=xD+1;end;do jD[0X0002]=oS[6];end;xD=xD+0x0001;(jD[XN])(jD[XN+0X001],jD[XN+0X02]);ID=XN-1;xD=xD+1;xD=xD+0X1;do oS=bc[xD];end;xD=xD+0x01;do xD=oS[0x5];end;else(jD)[1]=OD[oS[6]];oS=bc[xD];xD=xD+0x00001;jD[1]=jD[0x1][oS[1]];xD=xD+1;xD=xD+0X0001;oS=bc[xD];xD=xD+1;jD[0X1]=jD[1][oS[1]];xD=xD+0X1;xD=xD+1;oS=bc[xD];xD=xD+1;do if not(not(oS[6]<=jD[1]))then else do xD=oS[2];end;end;end;end;else jD[0]=OD[oS[6]];oS=bc[xD];xD=xD+0X1;(jD)[0]=jD[0][oS[1]];oS=bc[xD];xD=xD+1;do(jD)[0]=jD[0x00000][oS[1]];end;oS=bc[xD];xD=xD+1;if not(not(oS[0X06]<=jD[0]))then else xD=oS[0X2];end;end;end;else do if YS<0X3 then do if not(YS<1)then if YS==2 then(jD)[0X0]=OD[oS[6]];do xD=xD+0x0001;end;xD=xD+0X01;oS=bc[xD];xD=xD+0X001;(jD)[0X0]=jD[0][oS[0x1]];do xD=xD+1;end;xD=xD+1;oS=bc[xD];do xD=xD+1;end;if not jD[0X0]then xD=oS[5];end;else jD[oS[0X2]]=OD[oS[0X6]];end;else repeat local Fv,vv=Lc,jD;if#Fv>0 then local Bm={};for O_,h_ in M,Fv do for Yk,Kk in M,h_ do if Kk[0X1]==vv and Kk[2]>=0X0 then local Cy=(Kk[2]);if not(not Bm[Cy])then else Bm[Cy]={vv[Cy]};end;do Kk[1]=Bm[Cy];end;Kk[2]=1;end;end;end;end;until true;return;end;end;else if not(YS<5)then if YS~=6 then(jD)[0X0]=OD[oS[6]];xD=xD+0X0001;xD=xD+1;do oS=bc[xD];end;xD=xD+0X001;jD[0]=jD[0X0][oS[0X1]];xD=xD+0X1;do xD=xD+1;end;do oS=bc[xD];end;xD=xD+0X1;if not jD[0x00000]then do xD=oS[0X5];end;end;else for wl=oS[0X2],oS[0X5]do do(jD)[wl]=nil;end;end;end;else if YS~=0X4 then(jD)[0]=OD[oS[6]];oS=bc[xD];xD=xD+0X1;(jD)[0]=jD[0][oS[0X1]];do xD=xD+1;end;xD=xD+1;oS=bc[xD];do xD=xD+1;end;do(jD)[0]=jD[0X0][oS[0X1]];end;do oS=bc[xD];end;xD=xD+0X1;if not(not(oS[0X6]<=jD[0X0]))then else xD=oS[0x2];end;else local dq=(nil);local Xq=Uc[oS[5]];local Kq=(Xq[0X5]);local Wq=#Kq;if Wq>0x0 then dq={};for Or=0X01,Wq do local Vr=Kq[Or];do if Vr[1]~=0 then do(dq)[Or-1]=jc[Vr[2]];end;else dq[Or-0x1]={jD,Vr[0x0002]};end;end;end;(S)(Lc,dq);end;(jD)[oS[0X2]]=e3(Xq,dq,OD);end;end;end;end;end;else if YS<0X0015 then if YS<0X0011 then if YS>=15 then if YS~=16 then jD[0X000]=OD[oS[6]];local zF=(0x0);oS=bc[xD];do xD=xD+1;end;(jD)[1]=oS[6];do xD=xD+1;end;(jD)[zF]=jD[zF](jD[zF+1]);ID=zF;do xD=xD+1;end;xD=xD+1;do oS=bc[xD];end;xD=xD+1;if not jD[0X0]then do xD=oS[5];end;end;else jD[0]=OD[oS[0X6]];xD=xD+0X1;do xD=xD+1;end;oS=bc[xD];xD=xD+1;local FD=(0x0);do(jD)[0X01]=oS[0X6];end;oS=bc[xD];xD=xD+0x01;do jD[2]=oS[0X6];end;do xD=xD+1;end;jD[FD](jD[FD+1],jD[FD+2]);ID=FD-0X1;oS=bc[xD];xD=xD+1;xD=oS[0X005];end;else do jD[0x0]=OD[oS[6]];end;xD=xD+0X001;do xD=xD+1;end;oS=bc[xD];xD=xD+0X01;jD[0]=jD[0][oS[1]];oS=bc[xD];xD=xD+1;jD[0x0]=jD[0X0000][oS[0X1]];do xD=xD+1;end;xD=xD+0x1;do oS=bc[xD];end;xD=xD+0X1;if not(oS[0x006]<=jD[0X0])then xD=oS[0X002];end;end;else do if not(YS<0X13)then do if YS~=20 then do jD[0X00]=OD[oS[6]];end;oS=bc[xD];do xD=xD+1;end;do(jD)[0X1]=oS[0X0006];end;do oS=bc[xD];end;do xD=xD+1;end;(jD)[2]=oS[6];do oS=bc[xD];end;local oX=(0x0);xD=xD+1;do(jD)[0X3]=oS[0X6];end;oS=bc[xD];xD=xD+0X1;jD[0X00004]=oS[0x0006];xD=xD+0X001;ID=oX+5-1;(jD[oX])(E(jD,oX+1,ID));ID=oX-0x1;xD=xD+1;xD=xD+1;oS=bc[xD];xD=xD+1;xD=oS[0x0005];else(jD)[0]=OD[oS[0X0006]];xD=xD+0x01;do xD=xD+1;end;local Xf=(0);oS=bc[xD];xD=xD+1;(jD)[0x1]=oS[0X6];xD=xD+1;jD[Xf]=jD[Xf](jD[Xf+1]);ID=Xf;xD=xD+1;xD=xD+1;oS=bc[xD];xD=xD+0x1;do if not jD[0]then xD=oS[5];end;end;end;end;else if YS~=18 then do(jD)[0x0000]=OD[oS[0X0006]];end;do oS=bc[xD];end;xD=xD+1;do jD[0x0]=jD[0][oS[1]];end;oS=bc[xD];do xD=xD+1;end;if not(not jD[0X000])then else xD=oS[0X5];end;else do(jD)[0X00]=OD[oS[0X6]];end;xD=xD+0x1;xD=xD+1;oS=bc[xD];xD=xD+1;do(jD)[0]=jD[0][oS[1]];end;xD=xD+0x1;xD=xD+0X1;do oS=bc[xD];end;xD=xD+1;if not(not jD[0])then else do xD=oS[5];end;end;end;end;end;end;else if YS>=25 then if YS>=27 then do if YS~=0X1C then do jD[0X00000]=OD[oS[6]];end;oS=bc[xD];xD=xD+1;do jD[0]=jD[0][oS[1]];end;do xD=xD+1;end;do xD=xD+1;end;oS=bc[xD];do xD=xD+1;end;if not jD[0x0]then xD=oS[5];end;else do(jD)[oS[2]]={E({},0X1,oS[0X0005])};end;end;end;else if YS~=0x0001a then do jD[0]=OD[oS[6]];end;xD=xD+1;do xD=xD+0X1;end;do oS=bc[xD];end;xD=xD+1;do(jD)[0X000]=jD[0X00][oS[0x001]];end;oS=bc[xD];xD=xD+0X0001;if not(not jD[0])then else xD=oS[5];end;else(jD)[oS[0X02]]=oS[6];end;end;else if YS>=0X17 then if YS==0X018 then do jD[0x000]=OD[oS[6]];end;xD=xD+0X1;xD=xD+0X1;oS=bc[xD];do xD=xD+0X1;end;jD[1]=oS[6];do oS=bc[xD];end;xD=xD+1;do(jD)[0X02]=oS[0X6];end;xD=xD+0X001;local Wv=0X0;(jD[Wv])(jD[Wv+1],jD[Wv+0X2]);ID=Wv-1;do oS=bc[xD];end;xD=xD+1;do xD=oS[0x05];end;else jD[0x0]=OD[oS[6]];xD=xD+1;xD=xD+1;do oS=bc[xD];end;do xD=xD+0X001;end;do(jD)[0]=jD[0X0000][oS[0X1]];end;oS=bc[xD];xD=xD+1;if not(not jD[0])then else xD=oS[0X5];end;end;else if YS~=0X0016 then(jD)[0x0]=OD[oS[6]];xD=xD+0X1;xD=xD+0X1;oS=bc[xD];xD=xD+0X1;(jD)[0X0]=jD[0][oS[0X1]];oS=bc[xD];do xD=xD+0X00001;end;if not(not jD[0])then else do xD=oS[5];end;end;else jD[0]=OD[oS[6]];do xD=xD+0X1;end;xD=xD+0x0001;do oS=bc[xD];end;xD=xD+1;do jD[0]=jD[0][oS[1]];end;do oS=bc[xD];end;xD=xD+0X1;do jD[0x0]=jD[0][oS[0X1]];end;oS=bc[xD];do xD=xD+0x1;end;do if not(oS[6]<=jD[0])then do xD=oS[0X00002];end;end;end;end;end;end;end;end;else if YS<43 then if not(YS<0X24)then if not(YS<39)then if not(YS>=41)then if YS==40 then do(jD)[oS[2]]=#jD[oS[0x05]];end;else(jD)[0]=OD[oS[0X0006]];oS=bc[xD];xD=xD+0X1;(jD)[0]=jD[0X000][oS[0X0001]];xD=xD+1;do xD=xD+1;end;oS=bc[xD];xD=xD+0X1;(jD)[0X0]=jD[0][oS[1]];oS=bc[xD];xD=xD+1;if not(not(oS[6]<=jD[0]))then else xD=oS[0X02];end;end;else if YS~=42 then do(jD)[0]=OD[oS[6]];end;xD=xD+0X01;do xD=xD+0x1;end;oS=bc[xD];xD=xD+0X01;if jD[0]then do xD=oS[0x5];end;end;else if jD[oS[0X5]]==jD[oS[4]]then xD=oS[2];end;end;end;else if not(YS<0X0025)then if YS~=0x026 then jD[oS[0X00002]]=jD[oS[5]]*jD[oS[0X4]];else end;else local R7=jD[oS[0X0005]]/jD[oS[4]];jD[oS[2]]=R7-R7%1;end;end;else if YS<32 then if YS>=30 then if YS~=31 then(jD)[0]=OD[oS[0X0006]];xD=xD+0X1;do xD=xD+1;end;oS=bc[xD];xD=xD+0x1;local ab=0;(jD)[1]=oS[6];oS=bc[xD];do xD=xD+1;end;do(jD)[2]=oS[6];end;do xD=xD+1;end;(jD[ab])(jD[ab+1],jD[ab+0X2]);ID=ab-0X1;xD=xD+1;xD=xD+0X1;oS=bc[xD];xD=xD+0X1;do xD=oS[0X00005];end;else(jD)[0X0]=OD[oS[0X6]];do xD=xD+0X0001;end;xD=xD+1;oS=bc[xD];xD=xD+0X01;(jD)[0x00]=jD[0][oS[0X1]];xD=xD+0X1;xD=xD+1;do oS=bc[xD];end;xD=xD+0X1;if not jD[0x000]then xD=oS[5];end;end;else jD[0x0000]=OD[oS[0X0006]];do oS=bc[xD];end;local Af=0;xD=xD+0X1;jD[0X1]=oS[0X06];xD=xD+0X1;jD[Af]=jD[Af](jD[Af+0X1]);do ID=Af;end;xD=xD+0X1;xD=xD+1;oS=bc[xD];xD=xD+1;if not(jD[0X0])then else xD=oS[5];end;end;else if YS>=0x000022 then if YS~=0x023 then do(jD)[0]=OD[oS[6]];end;xD=xD+0X1;xD=xD+1;local E5=(0X0);oS=bc[xD];do xD=xD+0X1;end;jD[1]=oS[6];xD=xD+1;(jD)[E5]=jD[E5](jD[E5+0X00001]);ID=E5;oS=bc[xD];xD=xD+0X1;if jD[0X000]then xD=oS[5];end;else jD[0x0]=OD[oS[0x6]];xD=xD+1;xD=xD+0x1;oS=bc[xD];xD=xD+1;local mg=(0);(jD)[1]=oS[0X006];xD=xD+1;do jD[mg]=jD[mg](jD[mg+0x1]);end;ID=mg;xD=xD+1;xD=xD+0X1;oS=bc[xD];xD=xD+0x1;if jD[0]then xD=oS[5];end;end;else if YS==0X00021 then(jD)[0X0]=OD[oS[6]];xD=xD+0X00001;xD=xD+0x1;oS=bc[xD];xD=xD+1;jD[0x1]=oS[0X00006];local sI=0;do oS=bc[xD];end;xD=xD+1;(jD)[2]=oS[6];do xD=xD+1;end;(jD[sI])(jD[sI+1],jD[sI+2]);do ID=sI-0X1;end;xD=xD+1;xD=xD+1;oS=bc[xD];xD=xD+0X1;do xD=oS[0X0005];end;else do(jD)[0]=OD[oS[0X6]];end;oS=bc[xD];xD=xD+0x1;do jD[0]=jD[0][oS[1]];end;oS=bc[xD];xD=xD+0X1;do if not jD[0X0]then xD=oS[5];end;end;end;end;end;end;else if YS<0X32 then if YS>=0x002E then if not(YS>=0X0030)then do if YS==0X2F then(jD)[0]=OD[oS[0X6]];oS=bc[xD];local WX=0;xD=xD+0X1;jD[0X1]=oS[0X6];do oS=bc[xD];end;xD=xD+1;(jD)[2]=oS[6];xD=xD+1;(jD[WX])(jD[WX+1],jD[WX+2]);ID=WX-0X1;xD=xD+0X1;do xD=xD+0X001;end;do oS=bc[xD];end;xD=xD+1;xD=oS[0X0005];else(jD)[0x0]=OD[oS[6]];local pS=(0);xD=xD+0X001;xD=xD+1;oS=bc[xD];xD=xD+1;do(jD)[1]=oS[6];end;xD=xD+1;(jD)[pS]=jD[pS](jD[pS+0X001]);ID=pS;xD=xD+0X0001;xD=xD+0x01;oS=bc[xD];do xD=xD+1;end;if jD[0x0]then xD=oS[0X00005];end;end;end;else if YS~=49 then do if jD[oS[0x2]]then xD=oS[0X5];end;end;else jD[oS[2]]=jD[oS[0X00005]]-jD[oS[0X4]];end;end;else if YS>=44 then if YS==0x2d then(tD)[oS[5]]=jD[oS[0X2]];else(jD)[0X0]=OD[oS[0X6]];oS=bc[xD];xD=xD+0X00001;local LN=0;jD[1]=oS[6];xD=xD+0x1;(jD)[LN]=jD[LN](jD[LN+1]);do ID=LN;end;do oS=bc[xD];end;do xD=xD+1;end;do if jD[0]then xD=oS[0X00005];end;end;end;else if not jD[oS[2]]then do xD=oS[0X5];end;end;end;end;else if not(YS>=54)then do if not(YS>=0X034)then do if YS==0X00033 then jD[oS[2]]=jD[oS[0x5]];else(jD)[0]=OD[oS[6]];oS=bc[xD];xD=xD+0x1;do(jD)[0X1]=oS[6];end;oS=bc[xD];xD=xD+0X1;jD[2]=oS[0X6];oS=bc[xD];local zQ=(0X00000);xD=xD+0X1;(jD)[0X03]=oS[6];do xD=xD+1;end;ID=zQ+4-1;(jD[zQ])(E(jD,zQ+1,ID));do ID=zQ-1;end;oS=bc[xD];do xD=xD+0x1;end;xD=oS[5];end;end;else if YS==53 then(jD)[0]=OD[oS[0X6]];oS=bc[xD];do xD=xD+0X001;end;jD[0]=jD[0X0][oS[0x1]];do xD=xD+0x1;end;xD=xD+1;oS=bc[xD];xD=xD+0x01;do if not jD[0X0000]then do xD=oS[5];end;end;end;else(jD)[0]=OD[oS[0x006]];oS=bc[xD];do xD=xD+0X1;end;do(jD)[0]=jD[0X0][oS[0x1]];end;xD=xD+0x1;do xD=xD+1;end;oS=bc[xD];xD=xD+0X1;if not jD[0]then do xD=oS[0X5];end;end;end;end;end;else if YS>=0X38 then if YS==57 then(jD)[1]=OD[oS[6]];xD=xD+1;xD=xD+1;do oS=bc[xD];end;xD=xD+0x01;do jD[1]=jD[1][oS[0X1]];end;oS=bc[xD];xD=xD+0X00001;if not jD[0x0001]then xD=oS[0X5];end;else jD[0]=OD[oS[6]];do oS=bc[xD];end;xD=xD+0x1;jD[0X0000]=jD[0X0][oS[1]];do oS=bc[xD];end;xD=xD+1;do if not jD[0X0]then do xD=oS[5];end;end;end;end;else if YS~=55 then do jD[0]=OD[oS[6]];end;oS=bc[xD];xD=xD+1;do(jD)[0]=jD[0x0][oS[1]];end;xD=xD+1;xD=xD+0x1;do oS=bc[xD];end;do xD=xD+1;end;if not(not jD[0X0])then else xD=oS[0X5];end;else jD[0X0]=OD[oS[0X6]];do oS=bc[xD];end;xD=xD+1;do jD[0]=jD[0x00][oS[1]];end;oS=bc[xD];xD=xD+0X001;if not(not jD[0X00])then else xD=oS[0X5];end;end;end;end;end;end;end;end;end;end);if not(CD)then if V(qD)=="string"then if not(r(qD,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(qD,'\094.\045\058%d\043\058\032'))then(q)(qD,0);else(q)("Luraph Script:"..(Qc[xD-0X0001]or'(\105nte\114n\097l\041')..':\032'..u(qD),0);end;else(q)(qD,0);end;else if qD then if BD~=0x1 then return jD[XD](E(jD,XD+0X1,ID));else return jD[XD]();end;elseif XD then do return E(jD,XD,BD);end;end;end;end;end;else if Sc~=0X80 then ic=function(...)local Mz,Yz=1,({});local Vz=(k and k()or _ENV);local Iz,Rz=0X0000,{[1]=Yz,[2]=Vc};local mz,Gz=q3(...);mz=mz-0X1;local lz=((Vz==H and fc or Vz));for fA=0X00000,mz do do if ac>fA then(Yz)[fA]=Gz[fA+1];else break;end;end;end;if not nc then Gz=nil;elseif Ac then do Yz[ac]={n=mz>=ac and mz-ac+0x1 or 0X00000,E(Gz,ac+1,mz+0x001)};end;end;if lz==Vz then else if not(s)then _ENV=lz;else s(ic,lz);end;end;local Az,Fz,Tz,jz=c(function()while true do local Vv=bc[Mz];local Hv=(Vv[0X3]);Mz=Mz+0x1;do if Hv<0x10 then if not(Hv>=0X8)then if not(Hv>=0X0004)then if Hv<2 then if Hv~=1 then do repeat local D5,S5=Lc,Yz;if not(#D5>0)then else local zE={};do for Tj,cj in M,D5 do for Z8,w8 in M,cj do if not(w8[1]==S5 and w8[0X2]>=0)then else local Iq=(w8[2]);if not zE[Iq]then zE[Iq]={S5[Iq]};end;(w8)[0X1]=zE[Iq];w8[0X2]=0x00001;end;end;end;end;end;until true;end;do return;end;else local D1=(Uc[Vv[5]]);local h1=(D1[0X05]);local b1,S1=#h1,(nil);if not(b1>0)then else S1={};for sM=0X1,b1 do local aM=(h1[sM]);if aM[0X001]~=0 then do(S1)[sM-1]=jc[aM[0X2]];end;else(S1)[sM-1]={Yz,aM[2]};end;end;S(Lc,S1);end;Yz[Vv[2]]=e3(D1,S1,lz);end;else if Hv~=3 then(Yz)[2]=lz[Vv[6]];Mz=Mz+0X0001;Mz=Mz+1;Vv=bc[Mz];local Gh,Kh=Uc[Vv[0x5]],(2);local ih=Gh[5];Mz=Mz+1;local xh,Th=nil,#ih;if Th>0x0 then xh={};for pg=0x1,Th do local Ig=(ih[pg]);if Ig[1]~=0X0 then xh[pg-0X1]=jc[Ig[0x2]];else(xh)[pg-1]={Yz,Ig[0X2]};end;end;(S)(Lc,xh);end;(Yz)[0X3]=e3(Gh,xh,lz);do Mz=Mz+0X1;end;Yz[Kh](Yz[Kh+1]);Iz=Kh-1;Mz=Mz+0X1;Mz=Mz+1;Vv=bc[Mz];Mz=Mz+1;(Yz)[2]=lz[Vv[6]];Mz=Mz+0X1;Mz=Mz+0x1;Vv=bc[Mz];local Bh=(Yz[0x2]);Mz=Mz+0X001;do Kh=0x2;end;Yz[Kh+1]=Bh;(Yz)[Kh]=Bh[Vv[0X1]];Vv=bc[Mz];do Mz=Mz+1;end;(Yz)[0x4]=Vv[0x6];Vv=bc[Mz];Mz=Mz+1;Yz[5]=Vv[6];do Vv=bc[Mz];end;Mz=Mz+0x01;Yz[0X6]=Vv[6];Mz=Mz+0x1;Kh=0X002;Iz=Kh+0x0005-0X1;(Yz[Kh])(E(Yz,Kh+1,Iz));Iz=Kh-1;do Mz=Mz+1;end;do Mz=Mz+0X1;end;Vv=bc[Mz];do Mz=Mz+0x00001;end;Mz=Vv[5];else Yz[0X2]=lz[Vv[6]];Mz=Mz+0x0001;Mz=Mz+1;Vv=bc[Mz];Mz=Mz+1;(Yz)[0X3]=Vv[0X06];local bS=2;Mz=Mz+0X01;Yz[bS](Yz[bS+1]);Iz=bS-1;do Mz=Mz+1;end;Mz=Mz+0x1;do Vv=bc[Mz];end;Mz=Mz+0x1;Mz=Vv[0X5];end;end;else if Hv>=0X6 then do if Hv==0X7 then local im=(Vv[0X2]);local wm=(Vv[4]-1)*0X32;local dm=(Yz[im]);for OQ=0x1,Vv[5]do do(dm)[wm+OQ]=Yz[im+OQ];end;end;else do Yz[Vv[2]]=Vv[6];end;end;end;else if Hv~=5 then Yz[0X00002]=false;do Vv=bc[Mz];end;do Mz=Mz+0X01;end;lz[Vv[0x06]]=Yz[0X02];do Vv=bc[Mz];end;Mz=Mz+0X0001;Mz=Vv[5];else do Yz[1]={E({},0X1,0X1)};end;Vv=bc[Mz];local Sx=(0X2);Mz=Mz+0X1;(Yz)[0X2]=lz[Vv[0X6]];Vv=bc[Mz];Mz=Mz+1;local lx,ox=Yz[0x00002],0X3;do Yz[Sx+1]=lx;end;(Yz)[Sx]=lx[Vv[1]];do Vv=bc[Mz];end;Mz=Mz+0X00001;Yz[0x4]=Vv[0X6];Mz=Mz+0X0001;Sx=0X2;Yz[Sx]=Yz[Sx](Yz[Sx+0X00001],Yz[Sx+2]);Iz=Sx;Mz=Mz+1;Mz=Mz+0X1;Vv=bc[Mz];Mz=Mz+1;(Yz)[3]=lz[Vv[0X6]];do Mz=Mz+1;end;Mz=Mz+0X1;do Vv=bc[Mz];end;Mz=Mz+1;do Sx=3;end;lx=Yz[0X003];Yz[Sx+0X0001]=lx;do(Yz)[Sx]=lx[Vv[1]];end;Vv=bc[Mz];do Mz=Mz+1;end;local Xx=(1-1)*50;do Yz[0X5]=Vv[0X00006];end;Mz=Mz+0X001;Sx=3;local mx=(0X0);if ox~=0X00 then Iz=Sx+ox-1;end;local Wx,px=nil,nil;do if ox~=0X001 then Wx,px=q3(Yz[Sx](E(Yz,Sx+1,Iz)));else Wx,px=q3(Yz[Sx]());end;end;if mx~=1 then if mx~=0X0 then Wx=Sx+mx-0X2;Iz=Wx+0X0001;else Wx=Wx+Sx-0X00001;Iz=Wx;end;local Xc=(0X0);for Lb=Sx,Wx do Xc=Xc+1;Yz[Lb]=px[Xc];end;else do Iz=Sx-0X1;end;end;Mz=Mz+0X0001;do Mz=Mz+1;end;Mz=Mz+0X1;Sx=0x001;local bx=(Yz[Sx]);do for ES=0X1,Iz-Sx do(bx)[Xx+ES]=Yz[Sx+ES];end;end;Vv=bc[Mz];Mz=Mz+1;(Yz)[2]=lz[Vv[6]];Vv=bc[Mz];Mz=Mz+0X1;do Yz[0X00003]=Vv[0x6];end;do Vv=bc[Mz];end;do Mz=Mz+1;end;Yz[4]=Vv[6];Mz=Mz+0X00001;Sx=2;Yz[Sx](Yz[Sx+0x001],Yz[Sx+0x0002]);Iz=Sx-1;Vv=bc[Mz];Mz=Mz+0X0001;do Yz[2]=Yz[1][Vv[1]];end;do Vv=bc[Mz];end;Mz=Mz+0X1;do if not Yz[0X2]then do Mz=Vv[0X5];end;end;end;end;end;end;else if Hv<12 then if not(Hv>=0XA)then do if Hv~=0X9 then if not(not Yz[Vv[0X2]])then else Mz=Vv[0X5];end;else(Yz)[0x0000]=lz[Vv[0X00006]];do Vv=bc[Mz];end;Mz=Mz+0X1;(Yz)[0]=Yz[0][Vv[0X001]];Vv=bc[Mz];Mz=Mz+0x1;if not(not Yz[0])then else Mz=Vv[0X5];end;end;end;else if Hv~=0Xb then do Yz[3]=Yz[1][Vv[0X1]];end;do Vv=bc[Mz];end;Mz=Mz+0X00001;Yz[0X3]=Yz[0X3][Vv[0X1]];Vv=bc[Mz];Mz=Mz+0x01;if Yz[0x3]==Vv[1]then do Mz=Vv[2];end;end;else(Yz)[1]=lz[Vv[6]];do Mz=Mz+1;end;Mz=Mz+1;Vv=bc[Mz];Mz=Mz+0X1;Yz[0x001]=Yz[0x1][Vv[0x1]];Vv=bc[Mz];Mz=Mz+1;Yz[0x001]=Yz[0X01][Vv[0X1]];Vv=bc[Mz];Mz=Mz+1;if not(Yz[0X00001]<Vv[1])then do Mz=Vv[0x2];end;end;end;end;else if Hv<0X00e then do if Hv==13 then do Mz=Vv[0x05];end;else Yz[0X00000]=lz[Vv[0X006]];do Mz=Mz+0X1;end;do Mz=Mz+1;end;Mz=Mz+1;do Iz=0X0;end;Yz[Iz]=Yz[Iz]();Mz=Mz+0X1;Mz=Mz+0X1;do Vv=bc[Mz];end;Mz=Mz+0X1;if Yz[0]<Vv[1]then Mz=Vv[0X2];end;end;end;else if Hv==0XF then(Yz)[2]=true;Vv=bc[Mz];Mz=Mz+0X1;lz[Vv[6]]=Yz[0X002];Vv=bc[Mz];Mz=Mz+1;do Yz[0X2]=lz[Vv[0X06]];end;local tE=(2);Mz=Mz+0X0001;Mz=Mz+1;Vv=bc[Mz];Mz=Mz+1;(Yz)[3]=Vv[6];Mz=Mz+1;(Yz)[tE]=Yz[tE](Yz[tE+1]);do Iz=tE;end;do Mz=Mz+0X1;end;Mz=Mz+1;Vv=bc[Mz];Mz=Mz+1;do if not(not Yz[0x2])then else Mz=Vv[5];end;end;else local KH=(2);local EH=(jc[0]);(Yz)[0X2]=EH[1][EH[0X2]];do Vv=bc[Mz];end;Mz=Mz+1;local IH=Yz[0X2];Yz[KH+1]=IH;Yz[KH]=IH[Vv[0X001]];Mz=Mz+0X1;KH=2;Yz[KH](Yz[KH+0X1]);Iz=KH-0X01;Mz=Mz+0x1;do repeat local MD,hD=Lc,(Yz);if not(#MD>0)then else local Rn={};for j9,J9 in M,MD do for By,Ky in M,J9 do if Ky[1]==hD and Ky[2]>=1 then local V4=Ky[0X00002];do if not Rn[V4]then do(Rn)[V4]={hD[V4]};end;end;end;Ky[0x00001]=Rn[V4];(Ky)[0X2]=1;end;end;end;end;until true;end;Vv=bc[Mz];do Mz=Mz+0X0001;end;do Mz=Vv[0X5];end;end;end;end;end;else if not(Hv<0X18)then if Hv>=0X0001C then if Hv>=30 then if not(Hv<0X0001f)then if Hv==0X20 then do Yz[Vv[2]]=true;end;else(Yz)[Vv[2]]=T(Yz[Vv[0X0005]],Yz[Vv[0X04]]);end;else Yz[0x0000]=lz[Vv[6]];Mz=Mz+1;do Mz=Mz+1;end;Vv=bc[Mz];Mz=Mz+1;Yz[0X0]=Yz[0X00][Vv[1]];Mz=Mz+0X1;do Mz=Mz+0X1;end;Vv=bc[Mz];Mz=Mz+1;(Yz)[1]=Vv[6];local fa=0X0;Mz=Mz+0X1;do(Yz)[fa]=Yz[fa](Yz[fa+0X0001]);end;Iz=fa;do Mz=Mz+1;end;do Mz=Mz+0x00001;end;do Vv=bc[Mz];end;Mz=Mz+0x01;if not(not Yz[0])then else Mz=Vv[0X05];end;end;else if Hv==0x1D then local ky=jc[0];(Yz)[0X1]=ky[1][ky[2]];do Mz=Mz+0X1;end;Mz=Mz+1;local Uy=(1);Vv=bc[Mz];Mz=Mz+0X1;local Sy=(Yz[1]);do Yz[Uy+1]=Sy;end;do(Yz)[Uy]=Sy[Vv[1]];end;do Mz=Mz+1;end;Uy=0X1;(Yz)[Uy]=Yz[Uy](Yz[Uy+0X0001]);Iz=Uy;Mz=Mz+0X01;Mz=Mz+0X01;Vv=bc[Mz];Mz=Mz+0x1;if not(not Yz[1])then else Mz=Vv[0X5];end;else if not(Yz[Vv[0x00005]]<=Yz[Vv[4]])then Mz=Vv[0X2];end;end;end;else do if not(Hv<26)then do if Hv==27 then(Yz)[0]=lz[Vv[6]];Mz=Mz+0X0001;Mz=Mz+0X1;do Vv=bc[Mz];end;Mz=Mz+0x01;local ur=(0);Yz[1]=Vv[0x6];do Vv=bc[Mz];end;Mz=Mz+1;(Yz)[0X2]=Vv[6];Mz=Mz+1;(Yz)[ur]=Yz[ur](Yz[ur+0X1],Yz[ur+2]);Iz=ur;do Mz=Mz+0X1;end;do Mz=Mz+0X1;end;do Vv=bc[Mz];end;Mz=Mz+0X0001;do if not Yz[0]then Mz=Vv[0X5];end;end;else Yz[0x0]=lz[Vv[6]];Mz=Mz+1;Mz=Mz+0X1;Vv=bc[Mz];do Mz=Mz+0X1;end;Yz[0]=Yz[0][Vv[1]];Vv=bc[Mz];Mz=Mz+1;if not Yz[0X0]then do Mz=Vv[5];end;end;end;end;else if Hv~=0x000019 then do Yz[Vv[0X2]]=lz[Vv[6]];end;else do repeat local hA,yA=Lc,(Yz);if#hA>0 then local UB={};for iQ,PQ in M,hA do do for Ca,Na in M,PQ do do if not(Na[1]==yA and Na[2]>=0X0000)then else local NI=Na[2];if not UB[NI]then do(UB)[NI]={yA[NI]};end;end;do(Na)[0X1]=UB[NI];end;do(Na)[2]=0X0001;end;end;end;end;end;end;end;until true;end;local FI=(Vv[2]);do return false,FI,FI+Vv[5]-0x2;end;end;end;end;end;else if not(Hv>=20)then if not(Hv<18)then if Hv~=0X13 then local rj,kj=0x1,Yz[0X0];(Yz)[rj+0X01]=kj;do Yz[rj]=kj[Vv[1]];end;do Vv=bc[Mz];end;do Mz=Mz+0X1;end;(Yz)[3]=Vv[0X00006];Mz=Mz+1;do rj=0X1;end;(Yz)[rj]=Yz[rj](Yz[rj+1],Yz[rj+0X002]);Iz=rj;do Vv=bc[Mz];end;Mz=Mz+1;if not(not Yz[1])then else Mz=Vv[5];end;else for mZ=Vv[0X00002],Vv[0X5]do Yz[mZ]=nil;end;end;else do if Hv==17 then else local es=(Yz[Vv[0X5]]/Yz[Vv[4]]);do Yz[Vv[2]]=es-es%0X01;end;end;end;end;else if not(Hv>=22)then if Hv==0X15 then(Yz)[1]=lz[Vv[6]];local i9=0X001;Vv=bc[Mz];Mz=Mz+0x1;do(Yz)[1]=Yz[0X1][Vv[0x1]];end;Mz=Mz+1;Mz=Mz+1;do Vv=bc[Mz];end;do Mz=Mz+1;end;local Q9=(Yz[0X1]);do Yz[i9+1]=Q9;end;do Yz[i9]=Q9[Vv[0X1]];end;Vv=bc[Mz];Mz=Mz+1;do(Yz)[3]=Vv[0x6];end;Mz=Mz+1;do i9=0X01;end;Yz[i9]=Yz[i9](Yz[i9+1],Yz[i9+2]);Iz=i9;Vv=bc[Mz];Mz=Mz+0x1;do if Yz[0X1]then do Mz=Vv[0X0005];end;end;end;else(Yz)[2]=Yz[1][Vv[0X1]];Vv=bc[Mz];do Mz=Mz+1;end;Yz[2]=Yz[0X02][Vv[1]];do Vv=bc[Mz];end;Mz=Mz+1;if Yz[0X2]==Vv[1]then Mz=Vv[0x02];end;end;else if Hv==0X0017 then Yz[Vv[2]]=Yz[Vv[5]][Vv[0x0001]];else Yz[Vv[0X2]]={E({},0X1,Vv[5])};end;end;end;end;end;end;end;end);if not(Az)then if V(Fz)~="s\116\114\105ng"then(q)(Fz,0);else if not(r(Fz,'\097\116\116\101\109p\116\032to\032\121ie\108\100\032across m\101t\097me\116ho\100\047C\037-c\097\108l \098\111unda\114y'))then else return coroutine.yield();end;if r(Fz,"^.-:%d+: ")then q("Luraph Script:"..(Qc[Mz-0x1]or"(internal)")..': '..u(Fz),0);else q(Fz,0X0);end;end;else do if Fz then do if jz~=0X1 then return Yz[Tz](E(Yz,Tz+0X1,Iz));else return Yz[Tz]();end;end;elseif Tz then return E(Yz,Tz,jz);end;end;end;end;else do ic=function(...)local ad=({});local Ad=(0X00001);local sd=(k and k()or _ENV);local md,Md={[1]=ad,[2]=Vc},0X0;local ld,td=q3(...);ld=ld-1;for Ys=0X000,ld do if ac>Ys then ad[Ys]=td[Ys+1];else break;end;end;local Td=(sd==H and fc or sd);do if not nc then td=nil;elseif not(Ac)then else ad[ac]={n=ld>=ac and ld-ac+1 or 0x0,E(td,ac+1,ld+0x01)};end;end;if Td==sd then else do if s then(s)(ic,Td);else do _ENV=Td;end;end;end;end;local yd,Dd,Kd,vd=c(function()while true do local xy=bc[Ad];local My=(xy[0X3]);do Ad=Ad+0x0001;end;if My>=0XC then if My<18 then if My<15 then if My>=0x00D then if My~=14 then if ad[xy[5]]~=ad[xy[0x004]]then Ad=xy[0x002];end;else if ad[xy[0X5]]<ad[xy[4]]then Ad=xy[2];end;end;else do(ad)[0x0000]=Td[xy[6]];end;local z0=0X00;xy=bc[Ad];Ad=Ad+0X1;do(ad)[0X0]=ad[0x0][xy[1]];end;Ad=Ad+1;do Ad=Ad+1;end;xy=bc[Ad];Ad=Ad+1;do ad[0X01]=xy[0X6];end;Ad=Ad+0X1;(ad)[z0]=ad[z0](ad[z0+1]);Md=z0;xy=bc[Ad];Ad=Ad+0X1;if not(not ad[0])then else Ad=xy[5];end;end;else if My<0X10 then(ad[xy[2]])[ad[xy[5]]]=ad[xy[4]];else if My==0X11 then ad[xy[2]]=xy[6];else(ad)[0X000]=Td[xy[6]];do Ad=Ad+1;end;Ad=Ad+0X1;do Ad=Ad+0X001;end;do ad[0X0]=#ad[0];end;xy=bc[Ad];Ad=Ad+0X001;if not(not(xy[6]<ad[0X0]))then else do Ad=xy[0X2];end;end;end;end;end;else if not(My>=0x15)then do if My<0x000013 then ad[0]=Td[xy[6]];Ad=Ad+0X1;Ad=Ad+0X1;xy=bc[Ad];Ad=Ad+0X0001;(ad)[0]=ad[0][xy[1]];Ad=Ad+1;Ad=Ad+0X1;xy=bc[Ad];do Ad=Ad+1;end;if not(not ad[0])then else Ad=xy[0X005];end;else if My==0X0014 then local rQ=jc[0];do(ad)[0]=rQ[0X1][rQ[0x2]];end;xy=bc[Ad];local tQ=0X0000;Ad=Ad+1;local SQ=ad[0X0000];ad[tQ+0X1]=SQ;ad[tQ]=SQ[xy[1]];Ad=Ad+1;do tQ=0;end;(ad[tQ])(ad[tQ+1]);do Md=tQ-1;end;do xy=bc[Ad];end;Ad=Ad+0X0001;Ad=xy[5];else do ad[xy[0X02]]={E({},1,xy[5])};end;end;end;end;else if My<0X17 then if My==0x16 then Ad=xy[5];else ad[0X00]=Td[xy[0x6]];Ad=Ad+0X1;Ad=Ad+0X001;do xy=bc[Ad];end;Ad=Ad+0X1;local IP=(0x00000);local NP=ad[0X0000];(ad)[IP+1]=NP;do(ad)[IP]=NP[xy[1]];end;do xy=bc[Ad];end;Ad=Ad+1;(ad)[2]=xy[0x6];Ad=Ad+1;IP=0X000;do ad[IP]=ad[IP](ad[IP+0x01],ad[IP+0X2]);end;do Md=IP;end;Ad=Ad+0X00001;Ad=Ad+1;xy=bc[Ad];Ad=Ad+0X00001;if not(not ad[0X0])then else do Ad=xy[0X005];end;end;end;else if My==24 then do(ad)[1]=Td[xy[0X06]];end;do Ad=Ad+0X001;end;Ad=Ad+0X1;xy=bc[Ad];Ad=Ad+0X1;do(ad)[1]=ad[1][xy[1]];end;xy=bc[Ad];Ad=Ad+1;ad[2]=Td[xy[0X6]];do Ad=Ad+1;end;local cc=0X01;Ad=Ad+1;xy=bc[Ad];Ad=Ad+1;(ad)[0X03]=xy[0X6];Ad=Ad+1;(ad[cc])(ad[cc+1],ad[cc+2]);Md=cc-1;xy=bc[Ad];Ad=Ad+1;Ad=xy[0X5];else local zc=(jc[0x0]);ad[0x0]=zc[1][zc[2]];xy=bc[Ad];local Wc=0X0;do Ad=Ad+1;end;local Ic=(ad[0X00]);do ad[Wc+0X1]=Ic;end;do ad[Wc]=Ic[xy[1]];end;Ad=Ad+0X0001;do Wc=0X00000;end;do ad[Wc]=ad[Wc](ad[Wc+0x1]);end;Md=Wc;xy=bc[Ad];do Ad=Ad+1;end;if not ad[0]then Ad=xy[0X0005];end;end;end;end;end;else if My<6 then if not(My>=0X0003)then if My>=1 then do if My==2 then(ad)[0]=Td[xy[0X6]];Ad=Ad+0x1;Ad=Ad+0X1;xy=bc[Ad];do Ad=Ad+1;end;if not(not ad[0])then else Ad=xy[5];end;else ad[xy[0X2]]=Td[xy[0X0006]];end;end;else do for cI=xy[2],xy[5]do do(ad)[cI]=nil;end;end;end;end;else if My<0x4 then local JH=(jc[0]);ad[0X0]=JH[0X001][JH[2]];Ad=Ad+1;Ad=Ad+1;local hH=(0X0);xy=bc[Ad];Ad=Ad+0X01;local xH=(ad[0X0]);do(ad)[hH+0X0001]=xH;end;(ad)[hH]=xH[xy[0X1]];Ad=Ad+0x0001;hH=0X00000;ad[hH](ad[hH+0X00001]);do Md=hH-0X1;end;Ad=Ad+1;do Ad=Ad+0X1;end;Ad=Ad+0X1;repeat local m2,Z2=Lc,(ad);if#m2>0 then local Vo=({});for Ve,fe in M,m2 do for nW,RW in M,fe do do if RW[1]==Z2 and RW[2]>=0 then local q7=RW[0X2];if not Vo[q7]then Vo[q7]={Z2[q7]};end;(RW)[0x1]=Vo[q7];do RW[0X2]=1;end;end;end;end;end;end;until true;return;else if My==0X5 then local JB=(xy[0x0002]);local GB,vB=ad[JB]();if not(GB)then else for Fy=1,xy[0X4]do(ad)[JB+Fy]=vB[Fy];end;Ad=xy[0X05];end;else(ad)[xy[2]]=ad[xy[5]]%ad[xy[4]];end;end;end;else if My>=9 then if My>=10 then if My~=0XB then(ad)[0]=Td[xy[0x006]];Ad=Ad+1;Ad=Ad+1;xy=bc[Ad];Ad=Ad+0x0001;(ad)[0X00000]=ad[0][xy[1]];do Ad=Ad+1;end;Ad=Ad+1;do xy=bc[Ad];end;Ad=Ad+1;do if not ad[0X000]then Ad=xy[5];end;end;else end;else do ad[xy[2]]=Q(ad[xy[0X5]]);end;end;else if My<7 then local P1=(Uc[xy[5]]);local W1,s1=P1[0X005],(nil);local l1=(#W1);if l1>0X00 then s1={};do for rg=0X00001,l1 do local Hg=(W1[rg]);do if Hg[1]~=0X0 then(s1)[rg-1]=jc[Hg[2]];else s1[rg-1]={ad,Hg[2]};end;end;end;end;(S)(Lc,s1);end;do ad[xy[2]]=e3(P1,s1,Td);end;else if My~=0X00008 then local lv=jc[0];(ad)[0x1]=lv[1][lv[0x02]];Ad=Ad+0X01;local Zv=(1);Ad=Ad+1;xy=bc[Ad];Ad=Ad+1;local Mv=ad[1];do ad[Zv+1]=Mv;end;ad[Zv]=Mv[xy[1]];Ad=Ad+1;Zv=0X01;ad[Zv](ad[Zv+0X001]);do Md=Zv-0x0001;end;do Ad=Ad+0X0001;end;do Ad=Ad+1;end;do xy=bc[Ad];end;do Ad=Ad+0X1;end;(ad)[0X1]=Td[xy[6]];xy=bc[Ad];Ad=Ad+1;ad[2]=ad[0x0][xy[0x001]];Ad=Ad+0x01;do Ad=Ad+1;end;Ad=Ad+0X1;ad[3]=true;xy=bc[Ad];local ev=Uc[xy[0x005]];Ad=Ad+1;local wv,Ev=nil,(ev[5]);local Kv=#Ev;do if not(Kv>0)then else wv={};do for Fl=0X01,Kv do local pl=(Ev[Fl]);do if pl[0X01]~=0X0 then do(wv)[Fl-0X00001]=jc[pl[2]];end;else(wv)[Fl-0x01]={ad,pl[2]};end;end;end;end;S(Lc,wv);end;end;(ad)[4]=e3(ev,wv,Td);Ad=Ad+1;(ad)[5]=true;Ad=Ad+0x00001;Zv=0X00001;Md=Zv+0x5-0X1;(ad[Zv])(E(ad,Zv+1,Md));Md=Zv-0X1;do Ad=Ad+0X1;end;Ad=Ad+0x01;xy=bc[Ad];Ad=Ad+1;Ad=xy[5];else ad[0X00]=Td[xy[0X6]];local CK=(0);Ad=Ad+0X00001;do Ad=Ad+1;end;xy=bc[Ad];Ad=Ad+1;ad[0X0]=ad[0][xy[0x1]];do Ad=Ad+1;end;Ad=Ad+0X1;xy=bc[Ad];Ad=Ad+1;(ad)[1]=Td[xy[0X6]];Ad=Ad+1;Ad=Ad+1;do xy=bc[Ad];end;local oK=Uc[xy[0x005]];local lK=(oK[5]);do Ad=Ad+0X00001;end;local bK,qK=nil,#lK;if not(qK>0)then else bK={};for Hk=1,qK do local Nk=(lK[Hk]);do if Nk[0X1]~=0 then bK[Hk-1]=jc[Nk[2]];else bK[Hk-0x00001]={ad,Nk[0x2]};end;end;end;(S)(Lc,bK);end;(ad)[2]=e3(oK,bK,Td);Ad=Ad+0x0001;(ad[CK])(ad[CK+0X0001],ad[CK+0x02]);Md=CK-1;Ad=Ad+0X01;Ad=Ad+0X1;do xy=bc[Ad];end;Ad=Ad+1;ad[0X00]=Td[xy[6]];Ad=Ad+0x01;Ad=Ad+0X1;xy=bc[Ad];Ad=Ad+1;do ad[0X000]=ad[0X00][xy[0X1]];end;xy=bc[Ad];Ad=Ad+0X00001;ad[0X00001]=ad[0][xy[0X1]];Ad=Ad+1;Ad=Ad+1;xy=bc[Ad];Ad=Ad+1;if not(not ad[0x1])then else Ad=xy[5];end;end;end;end;end;end;end;end);if yd then if Dd then if vd~=1 then do return ad[Kd](E(ad,Kd+0X1,Md));end;else return ad[Kd]();end;elseif not(Kd)then else return E(ad,Kd,vd);end;else if V(Dd)~="s\116r\105n\103"then(q)(Dd,0X000);else if not(r(Dd,'\097\116tem\112\116\032\116\111 y\105\101\108\100 a\099ros\115\032\109e\116am\101\116\104\111\100/C\037-cal\108\032b\111\117ndary'))then else do return coroutine.yield();end;end;do if r(Dd,"^.-:%d+: ")then q("\076\117\114\097\112h\032\083\099rip\116:"..(Qc[Ad-1]or'\040\105\110\116e\114na\108\041').."\058\032"..u(Dd),0);else q(Dd,0X00000);end;end;end;end;end;end;end;end;else if not(Sc>=131)then if Sc==0X000082 then ic=function(...)local Yt=0x00001;local vt=({});local Mt=(k and k()or _ENV);local It={[1]=vt,[2]=Vc};local st,rt=q3(...);local Wt=0;st=st-0x1;local Pt=((Mt==H and fc or Mt));for kI=0,st do if not(ac>kI)then break;else do(vt)[kI]=rt[kI+1];end;end;end;if not nc then do rt=nil;end;elseif Ac then(vt)[ac]={n=st>=ac and st-ac+1 or 0x0,E(rt,ac+0X001,st+0X00001)};end;do if Pt==Mt then else if not(s)then _ENV=Pt;else(s)(ic,Pt);end;end;end;local mt,Zt,Et,ot=c(function()while true do local Ba=bc[Yt];local la=(Ba[0X03]);Yt=Yt+0X001;do if not(la<0Xb)then if not(la>=0X10)then do if not(la<13)then do if not(la>=0Xe)then do repeat local zT,LT=Lc,vt;if not(#zT>0)then else local cO={};for FI,BI in M,zT do do for mE,vE in M,BI do do if vE[0x01]==LT and vE[2]>=0x0 then local BU=vE[2];if not cO[BU]then cO[BU]={LT[BU]};end;(vE)[1]=cO[BU];vE[0X2]=1;end;end;end;end;end;end;until true;end;return;else if la==15 then local Yz=(Uc[Ba[5]]);local tz,lz=Yz[0X5],nil;local Jz=(#tz);if not(Jz>0X0000)then else lz={};for jj=0X1,Jz do local Yj=(tz[jj]);if Yj[0X1]~=0 then lz[jj-1]=jc[Yj[0x2]];else(lz)[jj-1]={vt,Yj[2]};end;end;S(Lc,lz);end;vt[Ba[0x00002]]=e3(Yz,lz,Pt);else Yt=Ba[5];end;end;end;else if la~=12 then local zS,ES=4,(vt[3]);(vt)[zS+1]=ES;vt[zS]=ES[Ba[0X01]];Yt=Yt+1;zS=4;vt[zS](vt[zS+1]);Wt=zS-0X0001;Yt=Yt+1;Yt=Yt+1;Ba=bc[Yt];Yt=Yt+1;Yt=Ba[0X05];else vt[1]=Pt[Ba[6]];Ba=bc[Yt];local to=(0X00001);Yt=Yt+1;vt[1]=vt[0X0001][Ba[0X1]];local Oo=(nil);do Yt=Yt+0X1;end;Yt=Yt+1;Ba=bc[Yt];Yt=Yt+0x01;local Mo=vt[1];do vt[to+0X1]=Mo;end;do(vt)[to]=Mo[Ba[0X1]];end;do Ba=bc[Yt];end;Yt=Yt+0X1;local io=Uc[Ba[0X05]];local xo=io[5];local Do=(#xo);do if Do>0 then do Oo={};end;for pC=0x001,Do do local QC=(xo[pC]);do if QC[0X1]==0X0 then do Oo[pC-0X1]={vt,QC[2]};end;else(Oo)[pC-0x1]=jc[QC[0X0002]];end;end;end;S(Lc,Oo);end;end;do(vt)[0X00003]=e3(io,Oo,Pt);end;Yt=Yt+1;to=1;vt[to](vt[to+1],vt[to+2]);do Wt=to-0X1;end;do Ba=bc[Yt];end;Yt=Yt+1;do Yt=Ba[5];end;end;end;end;else if la>=19 then do if la<0x0014 then vt[Ba[0x2]]=vt[Ba[0X5]]~=vt[Ba[0X4]];else do if la~=21 then(vt)[Ba[2]]={E({},1,Ba[5])};else local GQ=Ba[0x2];local RQ,uQ,sQ=vt[GQ]();do if not(RQ)then else(vt)[GQ+0X1]=uQ;vt[GQ+2]=sQ;Yt=Ba[5];end;end;end;end;end;end;else if la<0X11 then else do if la~=18 then(vt)[Ba[2]]=Ba[6];else if not(vt[Ba[0X5]]<vt[Ba[4]])then else do Yt=Ba[2];end;end;end;end;end;end;end;else if la>=0X5 then do if la>=0x8 then if not(la>=9)then for Lw=Ba[2],Ba[5]do do vt[Lw]=nil;end;end;else if la~=10 then vt[Ba[2]]=vt[Ba[0X005]]>=vt[Ba[0X0004]];else(vt)[1]=Pt[Ba[6]];Yt=Yt+0X1;do Yt=Yt+1;end;Ba=bc[Yt];Yt=Yt+0X001;vt[2]=Pt[Ba[0X06]];Ba=bc[Yt];local vO=2;Yt=Yt+0x001;do vt[0X3]=Pt[Ba[0x6]];end;Yt=Yt+0X0001;Yt=Yt+1;Ba=bc[Yt];Yt=Yt+1;(vt)[3]=vt[0X3][Ba[0X1]];Yt=Yt+1;local nO=2;local aO=(0);do if vO==0X0 then else Wt=nO+vO-1;end;end;local wO,TO=nil,nil;if vO~=0X1 then do wO,TO=q3(vt[nO](E(vt,nO+1,Wt)));end;else do wO,TO=q3(vt[nO]());end;end;if aO==1 then Wt=nO-1;else if aO==0X0 then do wO=wO+nO-0X01;end;Wt=wO;else wO=nO+aO-0X0002;Wt=wO+1;end;local qZ=(0);do for mI=nO,wO do do qZ=qZ+1;end;(vt)[mI]=TO[qZ];end;end;end;Yt=Yt+0X001;do Yt=Yt+0X001;end;Yt=Yt+0X1;nO=0X00001;vO=0;aO=0X04;do if vO==0 then else do Wt=nO+vO-0X00001;end;end;end;do wO,TO=nil;end;if vO==0X001 then wO,TO=q3(vt[nO]());else do wO,TO=q3(vt[nO](E(vt,nO+0X0001,Wt)));end;end;if aO~=1 then if aO~=0 then do wO=nO+aO-2;end;do Wt=wO+1;end;else wO=wO+nO-0X01;Wt=wO;end;local WV=0X00;for iu=nO,wO do do WV=WV+0X1;end;do(vt)[iu]=TO[WV];end;end;else do Wt=nO-1;end;end;Yt=Yt+1;do Yt=Yt+0X00001;end;Ba=bc[Yt];Yt=Yt+0x01;nO=0X1;local HO=(P(function(...)(C)();do for gE,UE in...do(C)(true,gE,UE);end;end;end));(HO)(vt[nO],vt[nO+0x1],vt[nO+0x2]);Wt=nO;do(vt)[nO]=HO;end;Yt=Ba[0X5];end;end;else if not(la<0X6)then if la==0x0007 then It[Ba[5]]=vt[Ba[2]];else vt[Ba[0X2]]=vt[Ba[5]]%vt[Ba[4]];end;else vt[0X1]=Pt[Ba[0X6]];do Yt=Yt+0x01;end;local Q9=(0X00001);Yt=Yt+0x1;Ba=bc[Yt];Yt=Yt+0X001;local S9=(vt[0X1]);vt[Q9+0X1]=S9;vt[Q9]=S9[Ba[0x1]];Ba=bc[Yt];do Yt=Yt+0X1;end;vt[3]=Ba[6];Yt=Yt+0X1;do Q9=1;end;(vt)[Q9]=vt[Q9](vt[Q9+1],vt[Q9+2]);Wt=Q9;Yt=Yt+1;Yt=Yt+0X1;Ba=bc[Yt];Yt=Yt+1;Q9=1;S9=vt[0x1];vt[Q9+0x00001]=S9;do vt[Q9]=S9[Ba[0x001]];end;Ba=bc[Yt];Yt=Yt+1;vt[3]=Pt[Ba[0X6]];do Ba=bc[Yt];end;Yt=Yt+0X0001;(vt)[0X03]=vt[0x3][Ba[1]];Ba=bc[Yt];do Yt=Yt+0X00001;end;vt[0x4]=Ba[0X0006];Ba=bc[Yt];do Yt=Yt+0X0001;end;(vt)[5]=Ba[6];Yt=Yt+1;Q9=0x003;vt[Q9]=vt[Q9](vt[Q9+1],vt[Q9+0x2]);Wt=Q9;do Yt=Yt+0X1;end;do Yt=Yt+0x001;end;Ba=bc[Yt];Yt=Yt+0x001;(vt)[4]=Pt[Ba[0X06]];do Yt=Yt+0x01;end;Yt=Yt+0X001;do Ba=bc[Yt];end;Yt=Yt+0X1;(vt)[0X4]=vt[4][Ba[0X001]];Ba=bc[Yt];Yt=Yt+1;(vt)[0X4]=vt[0X04][Ba[0X1]];Yt=Yt+1;Q9=1;Wt=Q9+4-1;vt[Q9](E(vt,Q9+0X1,Wt));Wt=Q9-1;Yt=Yt+1;Yt=Yt+0x1;Ba=bc[Yt];Yt=Yt+0x1;(vt)[0X1]=Pt[Ba[0x006]];Ba=bc[Yt];Yt=Yt+0X001;do vt[2]=Ba[6];end;Yt=Yt+1;Q9=0X1;(vt[Q9])(vt[Q9+0X1]);Wt=Q9-1;Ba=bc[Yt];Yt=Yt+1;vt[1]=Pt[Ba[6]];Ba=bc[Yt];Yt=Yt+0X1;do Q9=0X1;end;S9=vt[0X1];(vt)[Q9+0X1]=S9;(vt)[Q9]=S9[Ba[1]];Ba=bc[Yt];Yt=Yt+0X1;vt[3]=Ba[6];Yt=Yt+0x001;do Q9=1;end;vt[Q9]=vt[Q9](vt[Q9+1],vt[Q9+0X002]);do Wt=Q9;end;Yt=Yt+0X00001;Yt=Yt+1;do Ba=bc[Yt];end;Yt=Yt+0X01;do Q9=0X1;end;S9=vt[0x0001];(vt)[Q9+0X00001]=S9;do(vt)[Q9]=S9[Ba[0X001]];end;do Ba=bc[Yt];end;Yt=Yt+0X01;do(vt)[0X3]=Pt[Ba[6]];end;Ba=bc[Yt];do Yt=Yt+0x1;end;vt[3]=vt[3][Ba[1]];do Yt=Yt+1;end;Yt=Yt+0x1;do Ba=bc[Yt];end;Yt=Yt+0X1;do(vt)[0X4]=Ba[0X6];end;Ba=bc[Yt];Yt=Yt+1;do vt[0X5]=Ba[6];end;Yt=Yt+0X001;do Q9=3;end;vt[Q9]=vt[Q9](vt[Q9+0x001],vt[Q9+2]);do Wt=Q9;end;do Ba=bc[Yt];end;Yt=Yt+0X00001;vt[4]=Pt[Ba[0x6]];Yt=Yt+0X0001;Yt=Yt+1;Ba=bc[Yt];Yt=Yt+0X1;(vt)[0x0004]=vt[0X4][Ba[0X00001]];Yt=Yt+1;do Yt=Yt+0X1;end;do Ba=bc[Yt];end;do Yt=Yt+1;end;vt[0X4]=vt[4][Ba[1]];Yt=Yt+1;do Q9=0X00001;end;Wt=Q9+4-1;(vt[Q9])(E(vt,Q9+0x1,Wt));do Wt=Q9-0X001;end;do Ba=bc[Yt];end;Yt=Yt+0X0001;do Yt=Ba[5];end;end;end;end;else do if not(la<2)then do if not(la>=3)then if not(not vt[Ba[2]])then else Yt=Ba[0X5];end;else if la~=0X04 then(vt)[0X0001]=Pt[Ba[0X6]];Ba=bc[Yt];Yt=Yt+1;do(vt)[2]=Ba[6];end;Yt=Yt+0X01;local az=1;vt[az]=vt[az](vt[az+0x1]);Wt=az;Yt=Yt+0X1;do Yt=Yt+1;end;do Ba=bc[Yt];end;Yt=Yt+1;if not(not vt[0x1])then else Yt=Ba[5];end;else vt[Ba[2]]=Pt[Ba[6]];end;end;end;else do if la~=0X1 then do if vt[Ba[2]]then Yt=Ba[5];end;end;else vt[Ba[2]]=Ba[6];end;end;end;end;end;end;end;end;end);if not(mt)then if V(Zt)=="st\114\105n\103"then if r(Zt,'a\116\116e\109pt\032\116o\032\121i\101\108d\032\097\099r\111ss me\116\097m\101\116h\111\100/C\037-\099all\032\098oun\100\097ry')then return coroutine.yield();end;if r(Zt,"^.\045\058\037d+\058\032")then q("Luraph Script:"..(Qc[Yt-0X00001]or"(i\110\116\101r\110a\108\041")..": "..u(Zt),0X000);else(q)(Zt,0X0);end;else(q)(Zt,0);end;else if Zt then if ot~=1 then return vt[Et](E(vt,Et+1,Wt));else return vt[Et]();end;elseif not(Et)then else return E(vt,Et,ot);end;end;end;else do ic=function(...)local cV,rV=0X1,{};local gV=((k and k()or _ENV));local CV=0x0;local OV={[2]=Vc,[1]=rV};local DV,RV=q3(...);DV=DV-1;local nV=(gV==H and fc or gV);for hm=0x0,DV do if ac>hm then rV[hm]=RV[hm+0X1];else break;end;end;if not nc then RV=nil;elseif Ac then(rV)[ac]={n=DV>=ac and DV-ac+1 or 0,E(RV,ac+0X1,DV+1)};end;if nV==gV then else do if s then s(ic,nV);else _ENV=nV;end;end;end;local AV,JV,hV,UV=c(function()while true do local xV=(bc[cV]);local GV=(xV[0X03]);do cV=cV+0X01;end;if GV>=0x0a then if not(GV<15)then if not(GV<0X000012)then do if GV>=19 then if GV==0X0014 then for HQ=xV[2],xV[0X5]do(rV)[HQ]=nil;end;else repeat local QX,cX=Lc,rV;if#QX>0X0 then local fY={};for ZP,tP in M,QX do for P0,i0 in M,tP do if i0[1]==cX and i0[0X2]>=0X0 then local O_=(i0[0X2]);if not(not fY[O_])then else do fY[O_]={cX[O_]};end;end;i0[1]=fY[O_];do(i0)[0x2]=0X1;end;end;end;end;end;until true;return;end;else do rV[xV[2]]=not rV[xV[5]];end;end;end;else if not(GV<0x10)then if GV==0X000011 then(rV)[xV[0X2]]=rV[xV[5]][rV[xV[0X0004]]];else(rV)[xV[2]]=rV[xV[0X5]]>=rV[xV[0X4]];end;else rV[0X00]=nV[xV[6]];do cV=cV+0x1;end;CV=0X00000;(rV)[CV]=rV[CV]();cV=cV+0X00001;do(rV)[0X00]=not rV[0];end;end;end;else do if not(GV>=12)then if GV~=0XB then repeat local yk,Ik,ak=Lc,rV,(xV[2]);if#yk>0 then local aw=({});for dJ,OJ in M,yk do for k2,G2 in M,OJ do if G2[0X1]==Ik and G2[0x2]>=ak then local tI=(G2[2]);do if not(not aw[tI])then else(aw)[tI]={Ik[tI]};end;end;G2[1]=aw[tI];do G2[0X2]=1;end;end;end;end;end;until true;else local my=(Uc[xV[0X5]]);local Gy=(my[0X5]);local hy,Hy=#Gy,nil;if hy>0 then do Hy={};end;for pz=0X001,hy do local hz=Gy[pz];if hz[1]~=0 then(Hy)[pz-1]=jc[hz[2]];else do(Hy)[pz-1]={rV,hz[0X2]};end;end;end;S(Lc,Hy);end;do rV[xV[0X0002]]=e3(my,Hy,nV);end;end;else if GV<0x000D then do if rV[xV[0X2]]then do cV=xV[0X5];end;end;end;else if GV~=0XE then do rV[xV[0X2]]=rV[xV[5]]<=rV[xV[4]];end;else if not(not rV[xV[2]])then else cV=xV[5];end;end;end;end;end;end;else if GV<5 then if not(GV>=0X2)then if GV~=0x1 then(rV)[xV[0X02]]={E({},0X00001,xV[5])};else rV[xV[2]]=xV[6];end;else if GV<3 then(rV)[xV[0X2]]=nV[xV[6]];else do if GV~=4 then else local t5,s5=xV[2],(rV[xV[0x5]]);(rV)[t5+1]=s5;rV[t5]=s5[xV[0X001]];end;end;end;end;else if GV>=0x7 then do if not(GV<0X00008)then if GV==0X9 then repeat local cd,ad=Lc,rV;if not(#cd>0)then else local Ta=({});for BX,oX in M,cd do for qw,Dw in M,oX do if not(Dw[0X1]==ad and Dw[2]>=0)then else local iy=(Dw[0X2]);do if not Ta[iy]then do Ta[iy]={ad[iy]};end;end;end;do(Dw)[1]=Ta[iy];end;(Dw)[0x02]=0X1;end;end;end;end;until true;local gS=(xV[0X00002]);do return false,gS,gS;end;else cV=xV[0x5];end;else rV[0X0]=nV[xV[6]];do xV=bc[cV];end;do cV=cV+1;end;do(rV)[0]=rV[0][xV[1]];end;do cV=cV+0X1;end;cV=cV+1;xV=bc[cV];cV=cV+1;do cV=xV[0X05];end;end;end;else if GV==0X00006 then(rV)[xV[0X2]]=Q(rV[xV[5]]);else local On=(jc[0]);(rV)[0x0]=On[0X001][On[0X02]];local an=rV[0X0];xV=bc[cV];cV=cV+1;local Tn=0;rV[Tn+0X1]=an;rV[Tn]=an[xV[1]];do cV=cV+1;end;Tn=0;rV[Tn]=rV[Tn](rV[Tn+1]);do CV=Tn;end;cV=cV+1;do cV=cV+1;end;xV=bc[cV];cV=cV+0x1;if not rV[0]then cV=xV[5];end;end;end;end;end;end;end);if AV then do if JV then if UV==0X001 then return rV[hV]();else return rV[hV](E(rV,hV+0X1,CV));end;elseif not(hV)then else return E(rV,hV,UV);end;end;else do if V(JV)=='st\114\105\110g'then if not(r(JV,"at\116empt\032\116o\032\121i\101\108d \097\099\114o\115s m\101\116\097m\101t\104\111d\047\067\037\045ca\108\108\032bo\117\110\100ar\121"))then else return coroutine.yield();end;if r(JV,"^.-:%d+: ")then q("\076u\114\097\112h\032\083c\114\105\112\116:"..(Qc[cV-0X0001]or"(internal)").."\058 "..u(JV),0);else q(JV,0);end;else q(JV,0x0);end;end;end;end;end;end;else do if Sc~=132 then ic=function(...)local n1,Z1,a1=1,0X0,{};local G1={[2]=Vc,[1]=a1};local t1=(k and k()or _ENV);local J1=(t1==H and fc or t1);local c1,F1=q3(...);c1=c1-0x0001;for ri=0,c1 do if not(ac>ri)then break;else a1[ri]=F1[ri+1];end;end;if not nc then F1=nil;elseif Ac then(a1)[ac]={n=c1>=ac and c1-ac+0X1 or 0,E(F1,ac+1,c1+1)};end;if J1==t1 then else if s then(s)(ic,J1);else do _ENV=J1;end;end;end;local K1,y1,q1,l1=c(function()while true do local IK=(bc[n1]);local bK=(IK[3]);n1=n1+0X1;do if not(bK>=9)then if not(bK<4)then do if bK<0X6 then if bK==5 then if not(not a1[IK[2]])then else n1=IK[0X5];end;else if not(a1[IK[5]]<=a1[IK[4]])then else n1=IK[2];end;end;else if bK>=0x7 then do if bK==8 then(a1)[IK[0X2]]=true;else n1=IK[0X5];end;end;else do(a1)[IK[0X2]]=IK[0X6];end;end;end;end;else if bK>=2 then if bK~=0X0003 then else(a1)[IK[0X2]]=J1[IK[6]];end;else if bK~=0X1 then local sg=Uc[IK[5]];local ig,Ug=sg[0x5],(nil);local zg=#ig;if not(zg>0)then else Ug={};for Vi=0X1,zg do local wi=ig[Vi];do if wi[0X01]==0 then Ug[Vi-0X001]={a1,wi[0x2]};else Ug[Vi-1]=jc[wi[2]];end;end;end;(S)(Lc,Ug);end;a1[IK[2]]=e3(sg,Ug,J1);else do repeat local S7,I7=Lc,(a1);if not(#S7>0X0)then else local LP=({});for fC,zC in M,S7 do do for Gv,Tv in M,zC do if not(Tv[0X1]==I7 and Tv[2]>=0x0)then else local fm=Tv[0X2];if not LP[fm]then(LP)[fm]={I7[fm]};end;(Tv)[1]=LP[fm];(Tv)[0X2]=1;end;end;end;end;end;until true;end;return;end;end;end;else if not(bK>=0XE)then if bK<11 then if bK==10 then(a1)[0x00]=J1[IK[6]];n1=n1+1;do n1=n1+1;end;IK=bc[n1];n1=n1+1;(a1)[0X00000]=a1[0][IK[0X001]];n1=n1+1;n1=n1+0X1;do n1=n1+1;end;(a1)[0X0]=not a1[0];IK=bc[n1];n1=n1+1;if not a1[0]then n1=IK[5];end;else do a1[0]=J1[IK[0x0006]];end;n1=n1+0x0001;Z1=0;(a1)[Z1]=a1[Z1]();n1=n1+1;n1=n1+0X1;n1=n1+0X1;a1[0X00000]=not a1[0X0];do IK=bc[n1];end;n1=n1+0X1;n1=IK[5];end;else if not(bK>=0Xc)then for jx=IK[2],IK[5]do(a1)[jx]=nil;end;else if bK~=0Xd then local p4=IK[2];local w4,W4=a1[p4],(a1[p4+1]);local u4=(a1[p4+0X2]);do a1[p4]=P(function()for ah=w4,W4,u4 do C(true,ah);end;end);end;n1=IK[0X05];else(a1)[IK[0x2]]=o(a1[IK[5]],a1[IK[0X4]]);end;end;end;else do if bK>=0x010 then do if bK>=0X11 then if bK~=18 then local SZ=(IK[5]);local CZ=IK[2];do Z1=CZ+SZ-1;end;repeat local AI,yI=Lc,a1;if#AI>0 then local EM={};do for Sl,Kl in M,AI do for mk,Qk in M,Kl do do if not(Qk[0X0001]==yI and Qk[2]>=0X0000)then else local mX=(Qk[0X02]);if not(not EM[mX])then else(EM)[mX]={yI[mX]};end;Qk[0X001]=EM[mX];Qk[0X2]=1;end;end;end;end;end;end;until true;return true,CZ,SZ;else a1[0]=J1[IK[0X00006]];n1=n1+0X01;n1=n1+0x00001;IK=bc[n1];n1=n1+0X1;(a1)[0X0]=a1[0X0][IK[0X1]];end;else do repeat local xY,AY=Lc,a1;if not(#xY>0x00)then else local wb=({});for x5,v5 in M,xY do for rV,SV in M,v5 do if SV[1]==AY and SV[0X2]>=0X0 then local ul=SV[0X2];do if not(not wb[ul])then else(wb)[ul]={AY[ul]};end;end;SV[1]=wb[ul];do(SV)[0X002]=1;end;end;end;end;end;until true;end;local Uk=IK[2];do return false,Uk,Uk;end;end;end;else do if bK==0x0F then do(a1)[IK[2]]=a1[IK[5]]%a1[IK[4]];end;else(a1)[IK[0X2]]={E({},1,IK[5])};end;end;end;end;end;end;end;end;end);if K1 then do if y1 then if l1~=0X1 then do return a1[q1](E(a1,q1+1,Z1));end;else return a1[q1]();end;elseif not(q1)then else return E(a1,q1,l1);end;end;else if V(y1)=="string"then if r(y1,'a\116\116\101m\112t to y\105\101ld\032\097c\114\111\115\115\032met\097\109et\104o\100\047C%-cal\108 bo\117\110d\097ry')then return coroutine.yield();end;do if not(r(y1,"^.-:%d+: "))then q(y1,0);else(q)("L\117r\097ph \083\099r\105\112\116\058"..(Qc[n1-1]or"(internal)").."\058 "..u(y1),0);end;end;else(q)(y1,0X0);end;end;end;else ic=function(...)local hc=(1);local Bc,lc={},0X0000;local Dc={[1]=Bc,[2]=Vc};local Fc=(k and k()or _ENV);local Pc,Mc=q3(...);Pc=Pc-1;local uc=(Fc==H and fc or Fc);do for BE=0X0,Pc do do if ac>BE then Bc[BE]=Mc[BE+1];else break;end;end;end;end;if not nc then do Mc=nil;end;elseif Ac then Bc[ac]={n=Pc>=ac and Pc-ac+1 or 0,E(Mc,ac+0x0001,Pc+0X01)};end;if uc~=Fc then if s then(s)(ic,uc);else _ENV=uc;end;end;local qc,yc,kc,wc=c(function()while true do local gi=(bc[hc]);local xi=gi[0x00003];do hc=hc+0X1;end;if not(xi>=0x09)then if not(xi<4)then if xi<6 then if xi==5 then local DQ=gi[0X2];local CQ,pQ=Bc[DQ],(Bc[DQ+1]);local sQ=(Bc[DQ+0X2]);Bc[DQ]=P(function()for Dq=CQ,pQ,sQ do(C)(true,Dq);end;end);hc=gi[5];else do repeat local oo,Go=Lc,(Bc);if#oo>0 then local sc={};for CW,lW in M,oo do for sm,Zm in M,lW do do if Zm[0X1]==Go and Zm[0X02]>=0 then local HN=(Zm[2]);if not sc[HN]then do sc[HN]={Go[HN]};end;end;do(Zm)[0x1]=sc[HN];end;do Zm[0X02]=0X01;end;end;end;end;end;end;until true;end;do return;end;end;else if not(xi<0x007)then if xi~=8 then uc[gi[6]]=Bc[gi[0X02]];else do(Bc)[gi[0X2]]=gi[0X00006];end;end;else local rk=(Uc[gi[0X0005]]);local ik,jk=rk[5],nil;local ok=#ik;do if not(ok>0)then else jk={};for US=1,ok do local zS=ik[US];if zS[0x1]~=0 then(jk)[US-1]=jc[zS[2]];else(jk)[US-0X1]={Bc,zS[2]};end;end;(S)(Lc,jk);end;end;(Bc)[gi[2]]=e3(rk,jk,uc);end;end;else do if not(xi>=2)then if xi==0X00001 then do Bc[gi[2]]=v(Bc[gi[5]],Bc[gi[4]]);end;else Bc[gi[2]]=Bc[gi[5]]-Bc[gi[0X4]];end;else if xi~=0X3 then hc=gi[0X5];else do(Bc)[gi[0x2]]=Bc[gi[0X5]]*Bc[gi[4]];end;end;end;end;end;else if xi>=0X000D then if xi<15 then if xi==14 then(Bc[0X4])[gi[6]]=Bc[5];do gi=bc[hc];end;do hc=hc+0X00001;end;Bc[0X4][gi[0X6]]=gi[1];gi=bc[hc];hc=hc+1;do Bc[5]=uc[gi[0X006]];end;gi=bc[hc];hc=hc+0X01;do(Bc)[0X00005]=Bc[0x05][gi[0x1]];end;hc=hc+1;hc=hc+0X1;gi=bc[hc];hc=hc+1;Bc[6]=gi[6];gi=bc[hc];hc=hc+1;(Bc)[0X0007]=gi[6];do gi=bc[hc];end;do hc=hc+0X1;end;do(Bc)[0X8]=gi[6];end;hc=hc+0X1;local D0=(5);lc=D0+4-1;(Bc)[D0]=Bc[D0](E(Bc,D0+1,lc));lc=D0;gi=bc[hc];hc=hc+1;Bc[0x4][gi[0x006]]=Bc[5];hc=hc+1;D0=0X0000;lc=D0+5-1;(Bc)[D0]=Bc[D0](E(Bc,D0+1,lc));lc=D0;hc=hc+1;local S0=(nil);hc=hc+1;gi=bc[hc];do hc=hc+1;end;Bc[0x0001]=uc[gi[0X6]];do gi=bc[hc];end;do hc=hc+0x1;end;D0=1;local U0=(Bc[0X1]);(Bc)[D0+0x0001]=U0;(Bc)[D0]=U0[gi[1]];hc=hc+1;D0=1;(Bc)[D0]=Bc[D0](Bc[D0+0X1]);do lc=D0;end;hc=hc+1;hc=hc+1;do gi=bc[hc];end;hc=hc+0X1;(Bc)[0X1]=Bc[1][gi[0X1]];gi=bc[hc];hc=hc+0X1;do D0=0X00001;end;do U0=Bc[0X1];end;(Bc)[D0+1]=U0;(Bc)[D0]=U0[gi[0X01]];gi=bc[hc];do hc=hc+1;end;local i0=Uc[gi[5]];local j0=(i0[5]);local K0=(#j0);if not(K0>0)then else S0={};for rD=0X1,K0 do local PD=j0[rD];do if PD[0X1]~=0X0000 then(S0)[rD-1]=jc[PD[0X2]];else S0[rD-1]={Bc,PD[2]};end;end;end;(S)(Lc,S0);end;Bc[0X3]=e3(i0,S0,uc);hc=hc+0X1;D0=1;(Bc[D0])(Bc[D0+1],Bc[D0+2]);lc=D0-0X1;do hc=hc+0x00001;end;repeat local Pt,yt=Lc,(Bc);do if#Pt>0 then local o_={};for he,Xe in M,Pt do for fi,Pi in M,Xe do if not(Pi[1]==yt and Pi[0X2]>=0X00000)then else local Pv=(Pi[2]);if not o_[Pv]then o_[Pv]={yt[Pv]};end;Pi[0X00001]=o_[Pv];(Pi)[0X2]=0X001;end;end;end;end;end;until true;do gi=bc[hc];end;hc=hc+1;do hc=gi[0X5];end;else(Bc)[gi[2]]={E({},0x1,gi[5])};end;else if xi<16 then local mC=(Bc[gi[0X5]]/Bc[gi[4]]);(Bc)[gi[0X2]]=mC-mC%1;else if xi~=17 then do(Bc)[gi[2]]=uc[gi[0x00006]];end;else(Bc)[0]=uc[gi[0X6]];do hc=hc+0X00001;end;hc=hc+1;gi=bc[hc];hc=hc+1;Bc[0X1]=gi[0X6];gi=bc[hc];hc=hc+0X1;Bc[2]=gi[0X6];gi=bc[hc];hc=hc+1;Bc[3]=uc[gi[0x00006]];local G_=(3);gi=bc[hc];do hc=hc+0X1;end;local b_=Bc[3];(Bc)[G_+1]=b_;do Bc[G_]=b_[gi[0x1]];end;hc=hc+1;G_=3;(Bc)[G_]=Bc[G_](Bc[G_+1]);do lc=G_;end;hc=hc+1;Bc[0X00004]={};gi=bc[hc];hc=hc+0x1;do(Bc[0X4])[gi[0X00006]]=gi[0X1];end;gi=bc[hc];do hc=hc+1;end;Bc[4][gi[6]]=gi[0X01];gi=bc[hc];hc=hc+0x01;Bc[5]=uc[gi[0X6]];gi=bc[hc];hc=hc+1;Bc[0x5]=Bc[5][gi[0X1]];hc=hc+1;hc=hc+0X001;gi=bc[hc];do hc=hc+1;end;if not(Bc[5])then else hc=gi[0X5];end;end;end;end;else do if xi>=11 then if xi~=12 then if not(not Bc[gi[2]])then else hc=gi[5];end;else do if Bc[gi[5]]==Bc[gi[4]]then hc=gi[0X2];end;end;end;else if xi==0X00a then else for Lr=gi[0X02],gi[0X5]do(Bc)[Lr]=nil;end;end;end;end;end;end;end;end);do if not(qc)then if V(yc)~="string"then(q)(yc,0x0);else if not(r(yc,"atte\109p\116 \116\111 yi\101l\100 \097\099ros\115 \109et\097\109ethod\047C\037-\099a\108\108\032\098o\117\110dary"))then else return coroutine.yield();end;if not(r(yc,'\094.\045\058%d+\058\032'))then(q)(yc,0);else q('\076ura\112\104 S\099\114i\112\116:'..(Qc[hc-1]or"\040i\110t\101\114\110\097l\041")..": "..u(yc),0X0);end;end;else if yc then do if wc~=0X0001 then return Bc[kc](E(Bc,kc+1,lc));else return Bc[kc]();end;end;elseif not(kc)then else return E(Bc,kc,wc);end;end;end;end;end;end;end;end;end;else do if Sc<149 then if Sc<0x91 then if not(Sc>=143)then if Sc==142 then ic=function(...)local wM,QM=0x1,({});local IM=(k and k()or _ENV);local DM=({[1]=QM,[2]=Vc});local cM,WM=q3(...);cM=cM-1;for R9=0,cM do if not(ac>R9)then break;else QM[R9]=WM[R9+0X1];end;end;local qM=(IM==H and fc or IM);if not nc then do WM=nil;end;elseif Ac then(QM)[ac]={n=cM>=ac and cM-ac+0X01 or 0X0,E(WM,ac+0X1,cM+1)};end;if qM~=IM then do if not(s)then _ENV=qM;else(s)(ic,qM);end;end;end;local uM=(0X0);do while true do local IC=bc[wM];wM=wM+1;local mC=IC[0X3];return(function(p,v,...)_C("AbandonQuest");end)(QM,jc,...);end;end;end;else ic=function(...)local hC,VC=0X1,{};local FC=((k and k()or _ENV));local aC=({[1]=VC,[2]=Vc});local eC,CC=q3(...);eC=eC-0X001;local TC=((FC==H and fc or FC));local UC=0X0;for Db=0,eC do if not(ac>Db)then break;else VC[Db]=CC[Db+0x0001];end;end;if not nc then CC=nil;elseif not(Ac)then else VC[ac]={n=eC>=ac and eC-ac+0x01 or 0X000,E(CC,ac+1,eC+1)};end;do if TC==FC then else if not(s)then _ENV=TC;else s(ic,TC);end;end;end;local JC,WC,IC,mC=c(function()while true do local OB=(bc[hC]);local EB=(OB[0X00003]);do hC=hC+1;end;if EB<11 then if not(EB>=0X005)then do if not(EB<0X2)then if EB>=0x0003 then if EB~=0X004 then(VC)[0X0000]=TC[OB[0X0006]];hC=hC+0X1;local o_=(0X000);hC=hC+0X0001;hC=hC+0X00001;do UC=0;end;(VC)[UC]=VC[UC]();OB=bc[hC];do hC=hC+1;end;VC[0x0]=VC[0X0][OB[1]];OB=bc[hC];do hC=hC+1;end;VC[0X0]=VC[0X0][OB[1]];OB=bc[hC];hC=hC+0X0001;(TC)[OB[0x0006]]=VC[0X0];hC=hC+1;VC[0]=true;OB=bc[hC];hC=hC+0x1;(TC)[OB[0X6]]=VC[0];hC=hC+1;(VC)[0X0]=true;OB=bc[hC];hC=hC+1;TC[OB[6]]=VC[0X0];OB=bc[hC];do hC=hC+0X00001;end;VC[0]=TC[OB[6]];do OB=bc[hC];end;hC=hC+0X01;local L_=VC[0];do(VC)[o_+1]=L_;end;VC[o_]=L_[OB[0X1]];do OB=bc[hC];end;hC=hC+0x00001;VC[2]=OB[6];OB=bc[hC];local k_=Uc[OB[0X5]];do hC=hC+1;end;local d_=(k_[0X5]);local N_=(nil);local f_=#d_;if f_>0 then N_={};for hm=1,f_ do local Km=(d_[hm]);if Km[1]==0X0 then do(N_)[hm-0X1]={VC,Km[0X2]};end;else N_[hm-1]=jc[Km[2]];end;end;S(Lc,N_);end;VC[0X3]=e3(k_,N_,TC);hC=hC+0X0001;o_=0;UC=o_+4-1;VC[o_](E(VC,o_+0X1,UC));UC=o_-1;OB=bc[hC];do hC=hC+0X01;end;VC[0]=TC[OB[6]];hC=hC+0X0001;do hC=hC+1;end;do OB=bc[hC];end;hC=hC+1;VC[0]=VC[0X0][OB[0X00001]];hC=hC+0x001;hC=hC+1;OB=bc[hC];do hC=hC+1;end;VC[0]=VC[0X0][OB[0X1]];hC=hC+1;hC=hC+0X00001;OB=bc[hC];hC=hC+1;o_=0;L_=VC[0];(VC)[o_+1]=L_;(VC)[o_]=L_[OB[0x01]];do OB=bc[hC];end;hC=hC+1;k_=Uc[OB[0X5]];N_=nil;d_=k_[0X5];do f_=#d_;end;if f_>0 then N_={};for NW=0X1,f_ do local TW=d_[NW];if TW[0X1]==0X0 then(N_)[NW-1]={VC,TW[0X2]};else N_[NW-1]=jc[TW[2]];end;end;(S)(Lc,N_);end;(VC)[2]=e3(k_,N_,TC);do hC=hC+0x1;end;o_=0X00000;VC[o_](VC[o_+1],VC[o_+0X002]);UC=o_-1;OB=bc[hC];do hC=hC+0x00001;end;hC=OB[0X5];else repeat local Zg,Bg=Lc,(VC);if#Zg>0X0 then local rd=({});for yC,AC in M,Zg do for ey,jy in M,AC do if not(jy[1]==Bg and jy[0x002]>=0)then else local mL=(jy[0X2]);if not rd[mL]then do rd[mL]={Bg[mL]};end;end;do(jy)[1]=rd[mL];end;jy[0X2]=1;end;end;end;end;until true;return;end;else do hC=OB[5];end;end;else if EB~=0x1 then(VC)[0]=TC[OB[6]];hC=hC+1;hC=hC+1;do OB=bc[hC];end;do hC=hC+0X1;end;(VC)[0]=VC[0X0][OB[1]];OB=bc[hC];do hC=hC+0X001;end;do VC[1]=TC[OB[0X06]];end;hC=hC+1;hC=hC+1;OB=bc[hC];hC=hC+1;(VC)[0X1]=VC[1][OB[0X1]];hC=hC+1;hC=hC+0X1;do OB=bc[hC];end;hC=hC+0X1;do(VC)[0x1]=VC[1][OB[0X1]];end;OB=bc[hC];do hC=hC+0x00001;end;if not(not(VC[0X0]<VC[1]))then else hC=OB[2];end;else local EA,nA=OB[0X02],OB[0X5];UC=EA+nA-1;repeat local A9,v9=Lc,VC;if#A9>0 then local MG=({});do for qN,uN in M,A9 do for xI,II in M,uN do if II[1]==v9 and II[2]>=0X0 then local j_=(II[0X2]);if not MG[j_]then(MG)[j_]={v9[j_]};end;II[0X1]=MG[j_];(II)[0x00002]=1;end;end;end;end;end;until true;return true,EA,nA;end;end;end;else do if not(EB<8)then do if EB>=9 then if EB~=10 then for eK=OB[0X2],OB[5]do do VC[eK]=nil;end;end;else(VC)[OB[0X2]]=OB[6];end;else if VC[OB[2]]then do hC=OB[5];end;end;end;end;else if EB>=6 then do if EB~=7 then(VC)[0]=TC[OB[6]];hC=hC+1;local pA=(0x0);hC=hC+0X0001;OB=bc[hC];local qA=(nil);hC=hC+0X1;local aA=Uc[OB[5]];local vA=aA[5];local bA=(#vA);if bA>0 then qA={};for NM=1,bA do local TM=(vA[NM]);do if TM[1]==0 then do(qA)[NM-1]={VC,TM[0X2]};end;else(qA)[NM-0X1]=jc[TM[0x00002]];end;end;end;S(Lc,qA);end;do(VC)[0x1]=e3(aA,qA,TC);end;do hC=hC+0X1;end;(VC[pA])(VC[pA+1]);UC=pA-1;hC=hC+1;do hC=hC+1;end;OB=bc[hC];hC=hC+1;do hC=OB[5];end;else do(VC)[OB[2]]=TC[OB[6]];end;end;end;else VC[OB[0X0002]]={E({},0X0001,OB[5])};end;end;end;end;else do if not(EB<17)then if not(EB<20)then if not(EB>=21)then(VC)[0x0]=TC[OB[6]];hC=hC+1;hC=hC+0X00001;OB=bc[hC];hC=hC+0X1;(VC)[0X00000]=VC[0X0][OB[1]];do OB=bc[hC];end;hC=hC+1;do VC[0]=VC[0X0][OB[1]];end;do OB=bc[hC];end;hC=hC+0X0001;(VC)[1]=TC[OB[0X006]];OB=bc[hC];hC=hC+1;(VC)[0x00001]=VC[0X1][OB[0X1]];hC=hC+1;hC=hC+1;OB=bc[hC];hC=hC+0x1;if not(VC[0X1])then else hC=OB[5];end;else if EB==22 then(VC)[0x000]=TC[OB[0x6]];hC=hC+1;hC=hC+1;OB=bc[hC];hC=hC+1;local R2=0;(VC)[1]=OB[0X6];hC=hC+0X01;(VC)[R2]=VC[R2](VC[R2+1]);UC=R2;OB=bc[hC];hC=hC+0X01;if VC[0]then hC=OB[5];end;else(VC)[OB[2]]=-VC[OB[0X5]];end;end;else if EB<18 then if not(not(VC[OB[5]]<=VC[OB[0X04]]))then else do hC=OB[2];end;end;else if EB~=19 then if not(not VC[OB[2]])then else hC=OB[0X05];end;else local n9=OB[0X2];local N9=VC[OB[0x5]];(VC)[n9+1]=N9;VC[n9]=N9[OB[1]];end;end;end;else if EB<0XE then if EB>=12 then do if EB~=0XD then local R6=(Uc[OB[0X5]]);local r6=nil;local Z6=(R6[5]);local X6=#Z6;if X6>0 then do r6={};end;for Vr=0x001,X6 do local Jr=(Z6[Vr]);do if Jr[1]==0 then r6[Vr-1]={VC,Jr[2]};else r6[Vr-1]=jc[Jr[0X2]];end;end;end;S(Lc,r6);end;do VC[OB[0X00002]]=e3(R6,r6,TC);end;else end;end;else do(VC)[0]=TC[OB[6]];end;hC=hC+0X1;hC=hC+0X1;OB=bc[hC];hC=hC+0X001;do(VC)[0]=VC[0X0][OB[0X1]];end;hC=hC+0X1;hC=hC+1;do OB=bc[hC];end;hC=hC+0x1;if not(not VC[0])then else hC=OB[5];end;end;else if not(EB<0X0F)then if EB~=16 then local Pz=OB[2];local Wz,xz=VC[Pz]();if Wz then hC=OB[0x05];VC[Pz+3]=xz;end;else VC[OB[2]]=T(VC[OB[5]],VC[OB[4]]);end;else do VC[0]=TC[OB[0X06]];end;local FD=0X0000;hC=hC+0X1;hC=hC+0X01;OB=bc[hC];hC=hC+1;VC[1]=OB[6];do hC=hC+0X00001;end;VC[FD]=VC[FD](VC[FD+1]);UC=FD;hC=hC+0x1;do hC=hC+0X1;end;OB=bc[hC];hC=hC+1;if not VC[0X00]then hC=OB[5];end;end;end;end;end;end;end;end);if JC then if WC then if mC~=1 then do return VC[IC](E(VC,IC+0X0001,UC));end;else return VC[IC]();end;elseif IC then do return E(VC,IC,mC);end;end;else if V(WC)~='st\114\105\110g'then q(WC,0X0);else do if r(WC,"att\101m\112\116\032\116o\032yiel\100\032a\099\114o\115\115 m\101tam\101th\111d\047\067%-\099all \098o\117\110dary")then return coroutine.yield();end;end;if r(WC,"^.-:%d+: ")then q("Luraph Script:"..(Qc[hC-1]or"(inte\114\110\097\108\041")..": "..u(WC),0);else q(WC,0X0);end;end;end;end;end;else if Sc==144 then do ic=function(...)local DX,jX,zX=0X00,{},0x0001;local fX=(k and k()or _ENV);local AX=({[2]=Vc,[1]=jX});local WX,HX=q3(...);do WX=WX-1;end;do for ZM=0,WX do do if ac>ZM then(jX)[ZM]=HX[ZM+1];else break;end;end;end;end;local RX=(fX==H and fc or fX);if not nc then HX=nil;elseif Ac then jX[ac]={n=WX>=ac and WX-ac+1 or 0X00,E(HX,ac+1,WX+1)};end;if RX~=fX then if not(s)then _ENV=RX;else s(ic,RX);end;end;local XX,OX,qX,mX=c(function()while true do local tM=bc[zX];local pM=tM[3];zX=zX+0X1;if not(pM>=17)then if pM<8 then if pM<4 then if not(pM<2)then do if pM~=0x003 then local Vh=(tM[0X002]);local Zh,Rh=jX[Vh]();if not(Zh)then else for z1=1,tM[0x4]do jX[Vh+z1]=Rh[z1];end;do zX=tM[0X5];end;end;else do jX[tM[0X2]][jX[tM[5]]]=jX[tM[0X00004]];end;end;end;else do if pM~=0x1 then jX[tM[0X02]]=J(jX[tM[0X5]],jX[tM[4]]);else(jX)[0x9]=jX[7][tM[0X01]];do zX=zX+1;end;do zX=zX+0X0001;end;tM=bc[zX];do zX=zX+0X1;end;jX[0X00009]=jX[9][tM[0X01]];tM=bc[zX];do zX=zX+0X1;end;if not jX[0X09]then zX=tM[0X5];end;end;end;end;else do if not(pM<6)then if pM==7 then do if not jX[tM[0X2]]then zX=tM[5];end;end;else(jX)[0]=RX[tM[6]];zX=zX+0x1;DX=0;jX[DX]=jX[DX]();do tM=bc[zX];end;zX=zX+0x1;if not(jX[0x0])then else zX=tM[5];end;end;else if pM~=0X5 then jX[0X00]=RX[tM[6]];local QM=(2);tM=bc[zX];zX=zX+0X1;(jX)[1]=RX[tM[0X06]];zX=zX+0X1;zX=zX+1;tM=bc[zX];zX=zX+1;jX[0X1]=jX[0X1][tM[1]];zX=zX+0X1;local UM,lM=0X0,(4);if QM==0X0 then else DX=UM+QM-0X1;end;local IM,HM=nil,(nil);if QM==1 then IM,HM=q3(jX[UM]());else IM,HM=q3(jX[UM](E(jX,UM+1,DX)));end;if lM==1 then DX=UM-1;else do if lM~=0X00 then IM=UM+lM-2;do DX=IM+1;end;else do IM=IM+UM-0X1;end;DX=IM;end;end;local gJ=(0);for XZ=UM,IM do gJ=gJ+1;jX[XZ]=HM[gJ];end;end;do zX=zX+0X1;end;zX=zX+0X1;tM=bc[zX];zX=zX+0X1;UM=0;local fM=(P(function(...)C();for Gq,Bq in...do C(true,Gq,Bq);end;end));fM(jX[UM],jX[UM+1],jX[UM+2]);do DX=UM;end;(jX)[UM]=fM;zX=tM[5];else(jX)[tM[0X2]]=-jX[tM[5]];end;end;end;end;else do if not(pM<12)then do if not(pM>=0X0e)then if pM==13 then jX[tM[2]]=tM[6];else do jX[tM[2]]={E({},1,tM[0X05])};end;end;else do if not(pM>=0xf)then jX[0XB]=jX[7][tM[0x1]];tM=bc[zX];do zX=zX+0X1;end;do(jX)[11]=jX[11][tM[0X1]];end;zX=zX+1;zX=zX+0x1;tM=bc[zX];zX=zX+1;(jX)[12]=jX[0x7][tM[1]];tM=bc[zX];zX=zX+0X00001;(jX)[12]=jX[12][tM[1]];zX=zX+0X00001;zX=zX+1;do tM=bc[zX];end;zX=zX+1;if jX[12]then zX=tM[5];end;else if pM==16 then(jX)[tM[2]]=AX[tM[5]];else jX[0]=RX[tM[6]];zX=zX+0x01;zX=zX+1;tM=bc[zX];zX=zX+1;jX[0]=jX[0X0][tM[1]];tM=bc[zX];zX=zX+1;do if not jX[0]then zX=tM[0X00005];end;end;end;end;end;end;end;else if not(pM>=0XA)then if pM==9 then do(jX)[0]=RX[tM[0X06]];end;tM=bc[zX];local Ga=0X0;zX=zX+1;(jX)[0X0000]=jX[0][tM[1]];do zX=zX+1;end;do zX=zX+1;end;tM=bc[zX];zX=zX+1;(jX)[1]=tM[0x6];zX=zX+0X001;jX[Ga]=jX[Ga](jX[Ga+0X001]);do DX=Ga;end;tM=bc[zX];do zX=zX+1;end;do if not jX[0X0]then do zX=tM[0x5];end;end;end;else do(jX)[tM[0X0002]]=tM[6];end;end;else do if pM==0x0b then jX[8]=true;do zX=zX+1;end;(jX)[0X4]=jX[0X8];tM=bc[zX];zX=zX+0X1;zX=tM[5];else jX[3]=RX[tM[6]];do zX=zX+0X1;end;zX=zX+0X1;zX=zX+0X1;(jX)[3]=jX[3][jX[0X00001]];zX=zX+0x0001;zX=zX+0X1;tM=bc[zX];do zX=zX+0X01;end;if not(not jX[0X3])then else do zX=tM[5];end;end;end;end;end;end;end;end;else do if pM>=0X1a then if not(pM<0X1E)then if pM<32 then if pM~=31 then do if not(not(jX[tM[0x5]]<=jX[tM[0X4]]))then else do zX=tM[2];end;end;end;else(jX)[0X9]=jX[7][tM[0X1]];do zX=zX+1;end;zX=zX+0x1;tM=bc[zX];local gt=10;zX=zX+1;(jX)[9]=jX[0X0009][tM[1]];zX=zX+1;zX=zX+0X1;tM=bc[zX];zX=zX+1;do jX[0Xa]=RX[tM[0x006]];end;do zX=zX+0X1;end;zX=zX+0X1;tM=bc[zX];do zX=zX+0x1;end;do(jX)[0x00B]=RX[tM[6]];end;zX=zX+0X00001;zX=zX+1;tM=bc[zX];zX=zX+1;(jX)[0xb]=jX[11][tM[0X1]];zX=zX+1;zX=zX+1;zX=zX+1;(jX)[gt]=jX[gt](jX[gt+0X1]);DX=gt;do tM=bc[zX];end;do zX=zX+1;end;if not(jX[0X000a])then else zX=tM[0x5];end;end;else do if pM<33 then do if not(jX[tM[0X2]])then else zX=tM[0x5];end;end;else do if pM==34 then local Hp,Jp=jc[0X0],(0);jX[0]=Hp[1][Hp[0X2]];zX=zX+1;zX=zX+0x001;tM=bc[zX];zX=zX+1;local Kp=(jX[0x000]);(jX)[Jp+0X1]=Kp;(jX)[Jp]=Kp[tM[1]];zX=zX+0X1;Jp=0;(jX)[Jp]=jX[Jp](jX[Jp+0X1]);DX=Jp;zX=zX+0x1;zX=zX+1;tM=bc[zX];zX=zX+1;if not(not jX[0])then else do zX=tM[5];end;end;else jX[4]=false;tM=bc[zX];zX=zX+1;local lU=(5);(jX)[0X0005]=RX[tM[0X6]];zX=zX+0X001;zX=zX+1;tM=bc[zX];zX=zX+1;jX[0X6]=RX[tM[6]];zX=zX+1;local WU=(0X2);if WU~=0 then DX=lU+WU-0x1;end;local RU,oU=nil,nil;local vU=(4);if WU==0x00001 then RU,oU=q3(jX[lU]());else RU,oU=q3(jX[lU](E(jX,lU+0X1,DX)));end;do if vU~=0X1 then if vU==0 then RU=RU+lU-0x0001;DX=RU;else do RU=lU+vU-0X2;end;DX=RU+0X1;end;local I8=(0);do for tn=lU,RU do do I8=I8+1;end;jX[tn]=oU[I8];end;end;else DX=lU-1;end;end;do zX=zX+0x1;end;zX=zX+1;tM=bc[zX];do zX=zX+1;end;lU=5;local DU=P(function(...)(C)();for QQ,pQ in...do(C)(true,QQ,pQ);end;end);(DU)(jX[lU],jX[lU+0X00001],jX[lU+2]);DX=lU;jX[lU]=DU;zX=tM[5];end;end;end;end;end;else if not(pM<0X1C)then if pM~=0X1d then for ig=tM[0X002],tM[5]do do(jX)[ig]=nil;end;end;else(jX)[5]=RX[tM[0X0006]];do tM=bc[zX];end;local PR,oR=5,Uc[tM[5]];local yR=(oR[0X5]);zX=zX+0X001;local TR,uR=nil,(#yR);if uR>0 then TR={};for u0=0X001,uR do local q0=yR[u0];if q0[1]~=0 then TR[u0-1]=jc[q0[2]];else TR[u0-0X01]={jX,q0[0X02]};end;end;(S)(Lc,TR);end;jX[0X6]=e3(oR,TR,RX);do zX=zX+0X01;end;(jX[PR])(jX[PR+1]);DX=PR-1;zX=zX+1;repeat local RM,HM=Lc,jX;if#RM>0x0000 then local Gh={};for ud,md in M,RM do do for Z1,A1 in M,md do if not(A1[0X00001]==HM and A1[0X02]>=0)then else local OF=A1[2];if not Gh[OF]then(Gh)[OF]={HM[OF]};end;(A1)[0X001]=Gh[OF];do(A1)[2]=0X01;end;end;end;end;end;end;until true;tM=bc[zX];zX=zX+1;zX=tM[5];end;else if pM~=27 then do(jX)[tM[0X2]]=RX[tM[6]];end;else zX=tM[5];end;end;end;else do if not(pM<0x15)then do if pM<0x17 then if pM~=22 then jX[tM[2]]=Q(jX[tM[5]]);else do repeat local pY,oY,CY=Lc,jX,tM[0X2];if#pY>0 then local LE={};for k1,Y1 in M,pY do for fr,Nr in M,Y1 do do if Nr[0X001]==oY and Nr[2]>=CY then local nQ=Nr[0X2];if not LE[nQ]then do(LE)[nQ]={oY[nQ]};end;end;Nr[1]=LE[nQ];Nr[2]=1;end;end;end;end;end;until true;end;end;else do if not(pM<24)then do if pM~=25 then else if jX[tM[5]]<=jX[tM[4]]then zX=tM[2];end;end;end;else jX[0X008]=jX[7][tM[0X0001]];tM=bc[zX];zX=zX+0X0001;jX[8]=jX[8][tM[1]];do zX=zX+1;end;zX=zX+1;tM=bc[zX];zX=zX+1;if jX[8]==jX[0x1]then else zX=tM[0X2];end;end;end;end;end;else do if not(pM<0x13)then do if pM~=20 then do repeat local Cd,hd=Lc,jX;if#Cd>0x0 then local Jd={};for aJ,FJ in M,Cd do do for Va,Za in M,FJ do if not(Za[1]==hd and Za[2]>=0)then else local Tp=Za[0X2];do if not(not Jd[Tp])then else Jd[Tp]={hd[Tp]};end;end;Za[1]=Jd[Tp];(Za)[2]=1;end;end;end;end;end;until true;end;do return;end;else local vh=Uc[tM[0X00005]];local Ih,Vh=vh[0x00005],nil;local Nh=(#Ih);if not(Nh>0)then else Vh={};do for bf=0X00001,Nh do local xf=(Ih[bf]);do if xf[1]==0X0 then do Vh[bf-0X01]={jX,xf[2]};end;else(Vh)[bf-1]=jc[xf[2]];end;end;end;end;(S)(Lc,Vh);end;jX[tM[2]]=e3(vh,Vh,RX);end;end;else if pM==0X000012 then do jX[tM[0X2]]=jX[tM[5]]*jX[tM[4]];end;else local Tc=tM[0X0002];local wc,Dc,hc=jX[Tc]();do if not(wc)then else jX[Tc+1]=Dc;(jX)[Tc+0X2]=hc;do zX=tM[5];end;end;end;end;end;end;end;end;end;end;end;end;end);if not(XX)then do if V(OX)~='\115\116\114\105ng'then q(OX,0);else if not(r(OX,'\097ttem\112\116 \116o\032\121\105e\108\100 a\099r\111s\115 m\101\116a\109e\116h\111d\047\067%-\099\097ll\032bo\117\110d\097ry'))then else return coroutine.yield();end;do if not(r(OX,'^\046\045:\037d\043\058 '))then(q)(OX,0X0);else(q)("Luraph Script:"..(Qc[zX-0X0001]or"(\105nt\101\114\110\097l\041")..": "..u(OX),0);end;end;end;end;else if OX then if mX==0x1 then return jX[qX]();else return jX[qX](E(jX,qX+0X1,DX));end;elseif qX then return E(jX,qX,mX);end;end;end;end;else do ic=function(...)local zX=(1);local TX={};local fX=((k and k()or _ENV));local nX=((fX==H and fc or fX));local SX=({[2]=Vc,[1]=TX});local eX,NX=q3(...);eX=eX-1;local XX=0X0000;do for uO=0,eX do if ac>uO then TX[uO]=NX[uO+0X00001];else do break;end;end;end;end;if not nc then NX=nil;elseif Ac then do(TX)[ac]={n=eX>=ac and eX-ac+1 or 0X00,E(NX,ac+0X1,eX+1)};end;end;if nX~=fX then if s then(s)(ic,nX);else _ENV=nX;end;end;local cX,HX,wX,pX=c(function()while true do local dK=bc[zX];local hK=(dK[3]);zX=zX+0X0001;if not(hK>=8)then if not(hK<0X4)then do if hK<6 then if hK==5 then TX[dK[0x2]]={E({},1,dK[0X0005])};else do repeat local yN,aN,pN=Lc,TX,dK[0X0002];do if#yN>0 then local B5=({});for oz,Ez in M,yN do for us,Ps in M,Ez do if Ps[0x001]==aN and Ps[2]>=pN then local HL=(Ps[2]);do if not(not B5[HL])then else do B5[HL]={aN[HL]};end;end;end;(Ps)[1]=B5[HL];(Ps)[0X2]=1;end;end;end;end;end;until true;end;end;else if hK~=0X7 then(TX)[dK[0x2]]=true;else do for nZ=dK[0X2],dK[5]do(TX)[nZ]=nil;end;end;end;end;end;else do if not(hK<2)then if hK==0X0003 then TX[dK[0X2]]=TX[dK[5]]*TX[dK[0X4]];else(TX)[dK[2]]=TX[dK[5]]~=TX[dK[0X4]];end;else if hK~=0X01 then do TX[dK[0X2]]=-TX[dK[5]];end;else end;end;end;end;else if hK>=0XC then if not(hK>=14)then if hK~=0XD then zX=dK[0x5];else if not(TX[dK[0x0002]])then else zX=dK[0X00005];end;end;else if not(hK>=15)then(TX)[dK[0x2]]=#TX[dK[0X5]];else if hK~=0X10 then TX[dK[0X0002]]=dK[6];else if TX[dK[0X00005]]~=TX[dK[0X4]]then do zX=dK[0x2];end;end;end;end;end;else if not(hK>=0XA)then if hK~=9 then TX[dK[0X2]]=nX[dK[0X006]];else TX[0]=nX[dK[0x06]];zX=zX+0X1;local yo=(TX[0X00]);do zX=zX+1;end;dK=bc[zX];zX=zX+0X1;local ro=0x0;do(TX)[ro+1]=yo;end;TX[ro]=yo[dK[0X1]];do dK=bc[zX];end;do zX=zX+1;end;(TX)[0X2]=dK[0x6];zX=zX+0X1;ro=0;(TX)[ro]=TX[ro](TX[ro+0x01],TX[ro+0X0002]);XX=ro;zX=zX+0X1;zX=zX+1;dK=bc[zX];zX=zX+1;do TX[0X1]=nX[dK[6]];end;zX=zX+0x00001;zX=zX+1;dK=bc[zX];zX=zX+1;(TX)[0X0001]=TX[0X1][dK[0X1]];zX=zX+0x01;zX=zX+0X1;dK=bc[zX];local Go=Uc[dK[0X05]];do zX=zX+1;end;local qo,no=Go[5],(nil);local Vo=(#qo);do if Vo>0X0 then do no={};end;for mo=1,Vo do local xo=qo[mo];if xo[0X1]==0x0000 then(no)[mo-0X01]={TX,xo[0X00002]};else(no)[mo-1]=jc[xo[2]];end;end;(S)(Lc,no);end;end;do TX[0x2]=e3(Go,no,nX);end;do zX=zX+1;end;do ro=0x1;end;(TX[ro])(TX[ro+1]);XX=ro-0X1;zX=zX+1;repeat local Hy,Jy=Lc,(TX);do if#Hy>0 then local RP={};do for dd,ld in M,Hy do for Bo,io in M,ld do if not(io[1]==Jy and io[2]>=0X00)then else local m2=(io[0X0002]);if not RP[m2]then RP[m2]={Jy[m2]};end;io[0X1]=RP[m2];io[2]=1;end;end;end;end;end;end;until true;return;end;else do if hK==11 then(TX)[dK[2]]=o(TX[dK[5]],TX[dK[0X004]]);else local G1=Uc[dK[0x5]];local Y1=(G1[5]);local P1=#Y1;local Q1=(nil);if not(P1>0)then else do Q1={};end;for hi=1,P1 do local Li=Y1[hi];do if Li[0X1]==0 then Q1[hi-0X00001]={TX,Li[2]};else(Q1)[hi-1]=jc[Li[2]];end;end;end;(S)(Lc,Q1);end;(TX)[dK[0x2]]=e3(G1,Q1,nX);end;end;end;end;end;end;end);if cX then if HX then if pX~=1 then return TX[wX](E(TX,wX+0X1,XX));else return TX[wX]();end;elseif not(wX)then else do return E(TX,wX,pX);end;end;else do if V(HX)~="\115\116\114i\110g"then(q)(HX,0x00);else if not(r(HX,'\097tt\101\109pt t\111 yield a\099r\111\115\115\032met\097metho\100\047C%\045\099\097\108\108\032\098\111\117\110d\097\114y'))then else do return coroutine.yield();end;end;if not(r(HX,'^\046-:\037\100\043\058\032'))then q(HX,0x0);else q("Luraph Script:"..(Qc[zX-0X1]or"(internal)")..": "..u(HX),0);end;end;end;end;end;end;end;end;else if Sc<0X93 then if Sc==0X0092 then ic=function(...)local wb,Db=0X00,{};local Nb=((k and k()or _ENV));local Mb,bb=q3(...);local Qb={[2]=Vc,[1]=Db};Mb=Mb-0X1;for R1=0,Mb do if ac>R1 then do(Db)[R1]=bb[R1+1];end;else break;end;end;local yb=((Nb==H and fc or Nb));local jb=0X1;do if not nc then bb=nil;elseif not(Ac)then else(Db)[ac]={n=Mb>=ac and Mb-ac+1 or 0,E(bb,ac+0x1,Mb+0X1)};end;end;if yb==Nb then else if s then(s)(ic,yb);else _ENV=yb;end;end;local pb,lb,Tb,tb=c(function()while true do local mQ=bc[jb];local FQ=(mQ[0X0003]);do jb=jb+1;end;do if not(FQ>=15)then if not(FQ>=0X7)then if not(FQ<3)then do if not(FQ<0x00005)then if FQ~=0X6 then(Db)[0]=yb[mQ[0X6]];do mQ=bc[jb];end;jb=jb+0X1;Db[1]=yb[mQ[0X00006]];mQ=bc[jb];jb=jb+1;(Db)[2]=mQ[6];do mQ=bc[jb];end;do jb=jb+1;end;Db[3]=mQ[6];jb=jb+0X1;local K_=0x0;wb=K_+4-1;Db[K_](E(Db,K_+1,wb));wb=K_-1;jb=jb+1;jb=jb+0X1;mQ=bc[jb];jb=jb+1;jb=mQ[5];else local Vn=Uc[mQ[5]];local Xn,on=Vn[5],nil;local Gn=(#Xn);if Gn>0 then on={};for Tz=0X00001,Gn do local wz=(Xn[Tz]);if wz[0X1]~=0 then on[Tz-0x1]=jc[wz[2]];else on[Tz-0X01]={Db,wz[0X2]};end;end;S(Lc,on);end;(Db)[mQ[2]]=e3(Vn,on,yb);end;else if FQ==4 then do for pZ=mQ[2],mQ[5]do Db[pZ]=nil;end;end;else do(yb)[mQ[0X0006]]=Db[mQ[2]];end;end;end;end;else if not(FQ>=1)then Db[0X0]=yb[mQ[6]];mQ=bc[jb];jb=jb+1;(Db)[0]=Db[0X000][mQ[1]];do mQ=bc[jb];end;do jb=jb+1;end;Db[0X000]=Db[0][mQ[0x01]];jb=jb+1;jb=jb+1;mQ=bc[jb];do jb=jb+0x1;end;Db[0]=Db[0X0][mQ[1]];mQ=bc[jb];jb=jb+0X1;if Db[0]then jb=mQ[5];end;else if FQ==0X002 then(Db)[mQ[0X2]]=mQ[0X6];else if Db[mQ[5]]==Db[mQ[0X0004]]then jb=mQ[0X2];end;end;end;end;else do if not(FQ<0Xb)then if FQ<13 then if FQ==12 then Db[0x0]=yb[mQ[6]];mQ=bc[jb];do jb=jb+0X1;end;local eG=0;(Db)[0x1]=mQ[0X6];jb=jb+1;(Db)[eG]=Db[eG](Db[eG+0X1]);wb=eG;jb=jb+0X1;jb=jb+0x001;mQ=bc[jb];jb=jb+0X1;if not Db[0x0]then jb=mQ[5];end;else(Db)[0]=yb[mQ[0x6]];mQ=bc[jb];local E4=nil;jb=jb+1;local O4=(Uc[mQ[5]]);local G4=(O4[0X05]);local D4=(#G4);if not(D4>0)then else E4={};for iu=0X1,D4 do local zu=(G4[iu]);if zu[1]==0x00 then(E4)[iu-1]={Db,zu[0X2]};else do(E4)[iu-0X1]=jc[zu[0X2]];end;end;end;(S)(Lc,E4);end;local N4=0X0;Db[0X01]=e3(O4,E4,yb);jb=jb+1;Db[N4](Db[N4+1]);local A4=(jc[0]);wb=N4-1;jb=jb+0X1;Db[0x0]=A4[0X01][A4[2]];mQ=bc[jb];jb=jb+1;N4=0X0;local b4=Db[0];Db[N4+1]=b4;Db[N4]=b4[mQ[0X001]];jb=jb+0X1;do N4=0x0;end;Db[N4](Db[N4+1]);wb=N4-1;do mQ=bc[jb];end;do jb=jb+0x001;end;do jb=mQ[0x0005];end;end;else do if FQ~=0X00E then local mw=mQ[0X2];local Tw=(Db[mQ[5]]);(Db)[mw+0X00001]=Tw;(Db)[mw]=Tw[mQ[0x1]];else(Db)[0X0]=yb[mQ[0X6]];mQ=bc[jb];jb=jb+1;(Db)[0]=Db[0x0][mQ[0X1]];mQ=bc[jb];jb=jb+0x1;Db[0X00]=Db[0X0][mQ[1]];mQ=bc[jb];jb=jb+1;(Db)[0]=Db[0X0][mQ[0X00001]];jb=jb+0X1;jb=jb+0x01;mQ=bc[jb];jb=jb+1;if Db[0]then jb=mQ[5];end;end;end;end;else if not(FQ>=9)then do if FQ~=8 then(Db)[0X000]=yb[mQ[6]];mQ=bc[jb];jb=jb+0X001;Db[0]=Db[0x0][mQ[1]];mQ=bc[jb];jb=jb+1;do Db[0]=Db[0][mQ[0X1]];end;jb=jb+1;jb=jb+0X1;mQ=bc[jb];jb=jb+1;(Db)[0x0]=Db[0X000][mQ[0X0001]];do jb=jb+1;end;jb=jb+0X1;mQ=bc[jb];jb=jb+1;if not(Db[0X0]<mQ[1])then jb=mQ[0X2];end;else end;end;else if FQ==0Xa then(Db)[mQ[2]]={E({},0x0001,mQ[5])};else Db[0]=yb[mQ[0X006]];jb=jb+1;jb=jb+1;mQ=bc[jb];jb=jb+1;Db[0x0]=Db[0][mQ[1]];jb=jb+1;jb=jb+1;mQ=bc[jb];jb=jb+1;do if not Db[0]then jb=mQ[0x5];end;end;end;end;end;end;end;else if not(FQ>=0X17)then do if FQ<0X00013 then if FQ<17 then if FQ==0X10 then local eb=(mQ[0X5]);local kb=(Db[eb]);do for A0=eb+1,mQ[4]do kb=kb..Db[A0];end;end;(Db)[mQ[0X2]]=kb;else do Db[0X0]=yb[mQ[6]];end;jb=jb+0x1;jb=jb+1;mQ=bc[jb];local rQ=0X0;jb=jb+1;(Db)[1]=mQ[6];jb=jb+1;(Db[rQ])(Db[rQ+1]);do wb=rQ-0X0001;end;jb=jb+1;jb=jb+1;mQ=bc[jb];jb=jb+1;do Db[0]=mQ[0X6];end;mQ=bc[jb];jb=jb+1;yb[mQ[0X06]]=Db[0x0];do mQ=bc[jb];end;jb=jb+1;jb=mQ[5];end;else do if FQ~=0X12 then if not(Db[mQ[5]]<Db[mQ[0X4]])then else jb=mQ[0X2];end;else Db[mQ[2]]=J(Db[mQ[5]],Db[mQ[4]]);end;end;end;else if FQ>=21 then if FQ~=0X00016 then repeat local Tj,Lj=Lc,Db;if#Tj>0x0 then local sA={};for uI,OI in M,Tj do for Xz,kz in M,OI do if not(kz[0X1]==Lj and kz[2]>=0)then else local tS=(kz[2]);do if not(not sA[tS])then else(sA)[tS]={Lj[tS]};end;end;kz[0X00001]=sA[tS];kz[2]=1;end;end;end;end;until true;return;else(Db)[0X0]=yb[mQ[6]];jb=jb+1;jb=jb+1;mQ=bc[jb];jb=jb+1;Db[1]=yb[mQ[0x6]];jb=jb+1;jb=jb+0X1;mQ=bc[jb];jb=jb+1;Db[0X00002]=mQ[0X6];mQ=bc[jb];jb=jb+0X0001;(Db)[0x0003]=mQ[6];jb=jb+0X1;local CG=(0);wb=CG+0X4-0X1;(Db[CG])(E(Db,CG+1,wb));wb=CG-0X0001;mQ=bc[jb];do jb=jb+1;end;jb=mQ[0X5];end;else if FQ==0X14 then Db[mQ[0x2]]=yb[mQ[0X6]];else Db[0]=yb[mQ[0X6]];do mQ=bc[jb];end;do jb=jb+1;end;(Db)[0]=Db[0X0][mQ[0X0001]];jb=jb+0x1;jb=jb+1;mQ=bc[jb];jb=jb+0X1;do(Db)[0x00000]=Db[0x0][mQ[1]];end;mQ=bc[jb];jb=jb+1;do Db[0]=Db[0X00][mQ[0X01]];end;mQ=bc[jb];jb=jb+1;if not(Db[0]<mQ[1])then do jb=mQ[0x2];end;end;end;end;end;end;else if not(FQ<27)then if FQ>=0X1D then if FQ~=0X001e then repeat local fd,Dd,pd=Lc,Db,mQ[2];if not(#fd>0)then else local tr={};for M8,K8 in M,fd do for xd,ud in M,K8 do if ud[1]==Dd and ud[0X2]>=pd then local tK=ud[2];if not tr[tK]then(tr)[tK]={Dd[tK]};end;(ud)[1]=tr[tK];(ud)[2]=0x0001;end;end;end;end;until true;else local ZM,FM=jc[0x0],(0X0);Db[0X0]=ZM[0X1][ZM[2]];jb=jb+1;do jb=jb+1;end;do mQ=bc[jb];end;jb=jb+0X1;local mM=Db[0X00];(Db)[FM+0X00001]=mM;(Db)[FM]=mM[mQ[0x00001]];jb=jb+0X0001;FM=0X0;Db[FM](Db[FM+0X001]);wb=FM-0X0001;jb=jb+0X0001;do repeat local qn,Mn=Lc,Db;do if#qn>0x000 then local VV={};do for gk,mk in M,qn do for qA,LA in M,mk do if not(LA[1]==Mn and LA[2]>=0x000)then else local E6=(LA[0X02]);if not VV[E6]then VV[E6]={Mn[E6]};end;(LA)[0X1]=VV[E6];(LA)[2]=1;end;end;end;end;end;end;until true;end;return;end;else if FQ==28 then(Db)[0X0]=yb[mQ[6]];jb=jb+1;jb=jb+1;mQ=bc[jb];jb=jb+1;do(Db)[0X1]=mQ[6];end;local ke=0X000;jb=jb+1;(Db[ke])(Db[ke+0X1]);wb=ke-0X00001;mQ=bc[jb];do jb=jb+0X001;end;Db[0]=mQ[0X6];mQ=bc[jb];do jb=jb+1;end;yb[mQ[6]]=Db[0X0];mQ=bc[jb];jb=jb+1;jb=mQ[0X5];else(Db)[0X00000]=nil;do mQ=bc[jb];end;jb=jb+0X001;(yb)[mQ[6]]=Db[0];do jb=jb+1;end;local gc=jc[0];do(Db)[0x0]=gc[1][gc[2]];end;jb=jb+1;jb=jb+0x00001;mQ=bc[jb];jb=jb+0X1;local sc,Xc=Db[0],0X0;Db[Xc+0x001]=sc;Db[Xc]=sc[mQ[0X01]];do jb=jb+1;end;Xc=0;Db[Xc]=Db[Xc](Db[Xc+0X001]);wb=Xc;do mQ=bc[jb];end;do jb=jb+0X1;end;if Db[0X000]then jb=mQ[0X5];end;end;end;else if not(FQ>=0X19)then if FQ~=24 then(Db)[0]=yb[mQ[6]];local ah=(0);do jb=jb+0x1;end;jb=jb+1;do mQ=bc[jb];end;do jb=jb+1;end;do(Db)[1]=mQ[0X06];end;jb=jb+1;(Db)[ah]=Db[ah](Db[ah+1]);wb=ah;jb=jb+0X0001;jb=jb+1;do mQ=bc[jb];end;jb=jb+0x00001;if Db[0]then jb=mQ[0X5];end;else jb=mQ[5];end;else do if FQ==26 then Db[0X0]=yb[mQ[6]];local gd=0x0;mQ=bc[jb];jb=jb+0X001;(Db)[1]=mQ[0X6];jb=jb+1;Db[gd]=Db[gd](Db[gd+1]);wb=gd;mQ=bc[jb];jb=jb+1;if not Db[0X00000]then jb=mQ[0x00005];end;else do(Db)[0X0]=yb[mQ[6]];end;mQ=bc[jb];jb=jb+0X0001;local NC=(0);(Db)[0X0]=Db[0X00000][mQ[0X001]];mQ=bc[jb];jb=jb+0X1;(Db)[1]=mQ[0x06];jb=jb+1;Db[NC]=Db[NC](Db[NC+1]);wb=NC;mQ=bc[jb];jb=jb+1;if not Db[0]then do jb=mQ[5];end;end;end;end;end;end;end;end;end;end;end);if not(pb)then if V(lb)=='\115\116\114in\103'then if not(r(lb,'\097\116\116\101\109p\116 \116\111\032\121i\101\108d \097c\114os\115 \109\101\116am\101t\104\111\100/C%-c\097\108l \098oun\100\097ry'))then else return coroutine.yield();end;if r(lb,"^.-:%d+: ")then q('Lura\112h\032Sc\114\105p\116:'..(Qc[jb-0X1]or"(internal)")..":\032"..u(lb),0X00);else(q)(lb,0);end;else(q)(lb,0X000);end;else if lb then if tb~=0X00001 then return Db[Tb](E(Db,Tb+0X1,wb));else return Db[Tb]();end;elseif Tb then return E(Db,Tb,tb);end;end;end;else ic=function(...)local ao=1;local Po={};local Qo=((k and k()or _ENV));local vo=(Qo==H and fc or Qo);local to,Co=q3(...);local Go=({[2]=Vc,[1]=Po});to=to-1;for VQ=0x0,to do if ac>VQ then Po[VQ]=Co[VQ+0x1];else break;end;end;local co=(0);do if not nc then Co=nil;elseif Ac then do(Po)[ac]={n=to>=ac and to-ac+1 or 0x0,E(Co,ac+1,to+1)};end;end;end;do if vo~=Qo then if s then s(ic,vo);else _ENV=vo;end;end;end;local Io,qo,ro,Ao=c(function()while true do local m_=(bc[ao]);local C_=m_[3];do ao=ao+1;end;if C_>=10 then do if not(C_>=15)then do if C_<0XC then if C_~=11 then do for J_=m_[2],m_[5]do(Po)[J_]=nil;end;end;else Po[m_[2]]=not Po[m_[0X00005]];end;else if C_>=0xD then if C_~=14 then(Po)[m_[0X02]]=Po[m_[0X5]]/Po[m_[4]];else end;else local Kd=(m_[0X002]);local ud,xd=Po[Kd]();if ud then ao=m_[5];do(Po)[Kd+0X0003]=xd;end;end;end;end;end;else if not(C_<0X11)then if C_<0X0012 then(Po)[0X00]=vo[m_[0X00006]];m_=bc[ao];do ao=ao+0X1;end;(Po)[0x0]=Po[0X0000][m_[1]];do ao=ao+1;end;ao=ao+1;ao=ao+0X1;(Po)[0X0]=not Po[0X00];m_=bc[ao];do ao=ao+0X00001;end;ao=m_[0X5];else if C_==19 then do Po[0x0]=vo[m_[0X6]];end;do ao=ao+1;end;co=0x00;(Po)[co]=Po[co]();m_=bc[ao];ao=ao+0X00001;ao=m_[5];else do ao=m_[0X5];end;end;end;else if C_~=0X010 then local li=Uc[m_[5]];local Yi,Ji=li[0x5],(nil);local Xi=(#Yi);if not(Xi>0)then else Ji={};for Qa=0X1,Xi do local Ea=Yi[Qa];do if Ea[0X0001]==0 then do(Ji)[Qa-1]={Po,Ea[0X2]};end;else Ji[Qa-0x01]=jc[Ea[2]];end;end;end;S(Lc,Ji);end;do Po[m_[0X00002]]=e3(li,Ji,vo);end;else do(Po)[m_[2]]=m_[0x6];end;end;end;end;end;else if not(C_<0X5)then if C_>=0X7 then if C_>=8 then do if C_==0x9 then(Po)[m_[2]]={E({},0X0001,m_[5])};else local ax,dx=m_[2],Po[m_[0X5]];Po[ax+0x0001]=dx;do Po[ax]=dx[m_[1]];end;end;end;else Po[0X00]=vo[m_[0X0006]];ao=ao+0X1;ao=ao+0x01;do m_=bc[ao];end;ao=ao+0X01;if not(Po[0X0000])then else ao=m_[0X05];end;end;else if C_~=6 then local oP=jc[0];(Po)[0]=oP[0x1][oP[0x002]];m_=bc[ao];ao=ao+0X001;local EP,UP=Po[0],0;Po[UP+1]=EP;(Po)[UP]=EP[m_[1]];ao=ao+1;UP=0;do Po[UP]=Po[UP](Po[UP+1]);end;co=UP;ao=ao+1;do ao=ao+1;end;do m_=bc[ao];end;do ao=ao+1;end;do if not(not Po[0X0])then else ao=m_[0X00005];end;end;else do Po[m_[0x2]]=vo[m_[0x6]];end;end;end;else if not(C_<2)then if not(C_<0X3)then do if C_~=0X4 then local RQ=m_[2];local iQ,KQ=Po[RQ]();do if not(iQ)then else for lq=1,m_[4]do(Po)[RQ+lq]=KQ[lq];end;ao=m_[5];end;end;else repeat local uK,OK=Lc,(Po);if#uK>0X0 then local hY={};do for im,wm in M,uK do for Kp,op in M,wm do if not(op[1]==OK and op[2]>=0X0)then else local fZ=(op[0X00002]);do if not(not hY[fZ])then else do hY[fZ]={OK[fZ]};end;end;end;(op)[0X1]=hY[fZ];do op[0x2]=0X1;end;end;end;end;end;end;until true;local G_=m_[0X2];do return false,G_,G_;end;end;end;else do repeat local Ld,nd=Lc,(Po);if not(#Ld>0)then else local yr=({});for GV,AV in M,Ld do for cb,yb in M,AV do do if not(yb[0X1]==nd and yb[2]>=0X000)then else local mS=(yb[2]);do if not yr[mS]then(yr)[mS]={nd[mS]};end;end;do(yb)[1]=yr[mS];end;do(yb)[2]=1;end;end;end;end;end;end;until true;end;do return;end;end;else if C_==0X1 then do if Po[m_[2]]then do ao=m_[5];end;end;end;else Po[m_[2]]=Po[m_[5]]+Po[m_[0x4]];end;end;end;end;end;end);if not(Io)then if V(qo)~="s\116\114in\103"then(q)(qo,0X0);else if not(r(qo,'\097t\116e\109p\116\032to\032yi\101l\100\032a\099\114\111\115\115 m\101\116am\101\116\104od/\067\037\045\099\097\108\108 b\111\117ndary'))then else do return coroutine.yield();end;end;if not(r(qo,"^.-:%d+: "))then q(qo,0X000);else q("\076\117ra\112h \083\099r\105\112t\058"..(Qc[ao-0X1]or"(in\116e\114\110\097l)").."\058\032"..u(qo),0);end;end;else if qo then do if Ao~=1 then return Po[ro](E(Po,ro+0X1,co));else return Po[ro]();end;end;elseif not(ro)then else return E(Po,ro,Ao);end;end;end;end;else if Sc~=148 then ic=function(...)local Pv=({});local Wv=(1);local Tv=({[2]=Vc,[1]=Pv});local Mv=(k and k()or _ENV);local Kv,Rv=0,((Mv==H and fc or Mv));local Lv,Iv=q3(...);Lv=Lv-1;for Dw=0x0,Lv do do if ac>Dw then do(Pv)[Dw]=Iv[Dw+1];end;else do break;end;end;end;end;if not nc then Iv=nil;elseif Ac then Pv[ac]={n=Lv>=ac and Lv-ac+0x1 or 0,E(Iv,ac+1,Lv+1)};end;if Rv==Mv then else do if s then s(ic,Rv);else _ENV=Rv;end;end;end;local Ev,hv,iv,lv=c(function()while true do local v1=bc[Wv];local C1=(v1[0X0003]);Wv=Wv+0X1;if not(C1>=0X000B)then if not(C1<5)then do if not(C1>=0X0008)then if not(C1<0x06)then do if C1==7 then if not(Pv[v1[5]]<Pv[v1[0X4]])then Wv=v1[0X00002];end;else do(Pv)[0X007]=Pv[0x00006][v1[1]];end;do v1=bc[Wv];end;local fI=0X7;do Wv=Wv+1;end;local OI=Pv[7];(Pv)[fI+0x1]=OI;Pv[fI]=OI[v1[1]];Wv=Wv+1;fI=7;Pv[fI]=Pv[fI](Pv[fI+0X01]);do Kv=fI;end;Wv=Wv+1;do Wv=Wv+1;end;v1=bc[Wv];Wv=Wv+1;do fI=0X7;end;OI=Pv[0x7];(Pv)[fI+0X01]=OI;(Pv)[fI]=OI[v1[1]];v1=bc[Wv];Wv=Wv+1;do Pv[0X9]=v1[6];end;do Wv=Wv+1;end;do fI=7;end;do Pv[fI]=Pv[fI](Pv[fI+0X00001],Pv[fI+0x00002]);end;do Kv=fI;end;Wv=Wv+0X1;Wv=Wv+0X1;v1=bc[Wv];do Wv=Wv+1;end;if not Pv[0X7]then Wv=v1[5];end;end;end;else do Pv[0X00006]=Pv[0X0][Pv[5]];end;do v1=bc[Wv];end;local FO=0x7;Wv=Wv+0X00001;Pv[7]=Pv[6][v1[1]];Wv=Wv+1;Wv=Wv+0X1;do v1=bc[Wv];end;do Wv=Wv+1;end;local XO=Pv[0X07];do(Pv)[FO+1]=XO;end;do Pv[FO]=XO[v1[1]];end;Wv=Wv+0X1;FO=7;do Pv[FO]=Pv[FO](Pv[FO+1]);end;Kv=FO;v1=bc[Wv];Wv=Wv+1;FO=0X7;do XO=Pv[0X0007];end;(Pv)[FO+0X1]=XO;do Pv[FO]=XO[v1[1]];end;v1=bc[Wv];Wv=Wv+0X001;(Pv)[0X00009]=v1[0X6];Wv=Wv+1;FO=7;(Pv)[FO]=Pv[FO](Pv[FO+1],Pv[FO+0X2]);Kv=FO;v1=bc[Wv];Wv=Wv+1;if not Pv[0X7]then Wv=v1[0X5];end;end;else if C1>=9 then do if C1==0XA then do Pv[v1[0X00002]]=v1[0x006];end;else local Pk=Uc[v1[0X005]];local Mk=(nil);local Ik=Pk[5];local Kk=(#Ik);if not(Kk>0)then else Mk={};for lX=0x1,Kk do local QX=Ik[lX];if QX[0x1]~=0X0000 then(Mk)[lX-0X1]=jc[QX[0X2]];else(Mk)[lX-0X001]={Pv,QX[0X2]};end;end;S(Lc,Mk);end;do Pv[v1[0X02]]=e3(Pk,Mk,Rv);end;end;end;else repeat local sY,ZY=Lc,(Pv);if not(#sY>0X0)then else local oX={};do for Ex,nx in M,sY do for oN,pN in M,nx do do if not(pN[0X001]==ZY and pN[2]>=0)then else local Ik=pN[0X2];if not oX[Ik]then(oX)[Ik]={ZY[Ik]};end;pN[0X00001]=oX[Ik];pN[0x2]=1;end;end;end;end;end;end;until true;local cS=v1[2];return false,cS,cS+v1[0x5]-0X2;end;end;end;else if C1<0x2 then if C1==1 then(Pv)[v1[2]]=w(Pv[v1[0X5]],Pv[v1[4]]);else Pv[2]=v1[6];do Wv=Wv+0x1;end;Pv[3]=#Pv[1];v1=bc[Wv];Wv=Wv+0X01;Pv[4]=v1[0X0006];do v1=bc[Wv];end;Wv=Wv+1;local o4=(0X2);local r4=(Pv[o4]);local R4=(Pv[o4+1]);local x4=Pv[o4+0x002];Pv[o4]=P(function()for af=r4,R4,x4 do(C)(true,af);end;end);do Wv=v1[5];end;end;else if not(C1>=0X3)then Pv[0x0]=Rv[v1[6]];Wv=Wv+0X1;Wv=Wv+0X1;v1=bc[Wv];local y7=(0);Wv=Wv+1;Pv[0x00]=Pv[0X0][v1[0X1]];do v1=bc[Wv];end;do Wv=Wv+1;end;local G7=(Pv[0]);Pv[y7+1]=G7;(Pv)[y7]=G7[v1[1]];do Wv=Wv+1;end;y7=0x0;do Pv[y7]=Pv[y7](Pv[y7+1]);end;Kv=y7;Wv=Wv+1;local N7=2;do Wv=Wv+1;end;v1=bc[Wv];Wv=Wv+1;do(Pv)[0X1]=Rv[v1[6]];end;v1=bc[Wv];do Wv=Wv+1;end;do(Pv)[1]=Pv[0X001][v1[1]];end;Wv=Wv+0X0001;do Wv=Wv+0X0001;end;v1=bc[Wv];Wv=Wv+0X1;y7=1;G7=Pv[1];(Pv)[y7+1]=G7;do Pv[y7]=G7[v1[0X1]];end;Wv=Wv+1;y7=0X1;do Pv[y7]=Pv[y7](Pv[y7+1]);end;Kv=y7;Wv=Wv+0X1;Wv=Wv+0X1;v1=bc[Wv];Wv=Wv+1;do(Pv)[2]=v1[0x00006];end;Wv=Wv+0X01;Pv[0X03]=#Pv[0];v1=bc[Wv];Wv=Wv+0X01;(Pv)[4]=v1[6];do v1=bc[Wv];end;Wv=Wv+1;y7=Pv[N7];local R7,M7=Pv[N7+1],(Pv[N7+0X2]);do Pv[N7]=P(function()do for NO=y7,R7,M7 do C(true,NO);end;end;end);end;Wv=v1[5];else if C1~=0X4 then Pv[v1[0X00002]]=Rv[v1[6]];else local kb=v1[2];local hb=(Pv[v1[0X5]]);Pv[kb+0X1]=hb;do Pv[kb]=hb[v1[1]];end;end;end;end;end;else if not(C1>=0X10)then if not(C1<0XD)then if C1<0X00e then for cZ=v1[2],v1[0X00005]do Pv[cZ]=nil;end;else do if C1~=0X0000f then do repeat local s2,D2=Lc,Pv;if#s2>0 then local uU=({});for mM,iM in M,s2 do for hy,My in M,iM do if My[1]==D2 and My[2]>=0x000 then local VI=(My[0X002]);if not uU[VI]then uU[VI]={D2[VI]};end;do(My)[0X00001]=uU[VI];end;do(My)[0X00002]=0X01;end;end;end;end;end;until true;end;local h5=v1[2];return false,h5,h5;else local gR=(v1[2]);local RR,pR=Pv[gR]();if RR then do Wv=v1[5];end;do(Pv)[gR+0X3]=pR;end;end;end;end;end;else if C1~=0X0C then else Pv[v1[0X2]]=Pv[v1[0x5]]>=Pv[v1[4]];end;end;else if not(C1>=19)then do if C1<0X11 then do Wv=v1[0X0005];end;else if C1~=0x12 then Pv[v1[0X02]]=Pv[v1[0X5]][Pv[v1[0X04]]];else(Pv)[6]=Pv[0x1][Pv[5]];v1=bc[Wv];local cN=(Pv[0x6]);Wv=Wv+0X1;local yN=0x007;do(Pv)[yN+0x1]=cN;end;(Pv)[yN]=cN[v1[0X00001]];do v1=bc[Wv];end;Wv=Wv+0X1;Pv[0X09]=v1[0X6];Wv=Wv+1;yN=7;(Pv)[yN]=Pv[yN](Pv[yN+0X00001],Pv[yN+0X2]);Kv=yN;v1=bc[Wv];do Wv=Wv+1;end;do if not Pv[0X00007]then Wv=v1[0X0005];end;end;end;end;end;else do if not(C1>=0x00014)then Pv[v1[2]]={E({},0X01,v1[0x5])};else if C1==21 then repeat local NG,AG=Lc,Pv;do if not(#NG>0X0)then else local Eu=({});for uj,Wj in M,NG do for ys,Rs in M,Wj do if Rs[1]==AG and Rs[2]>=0x0 then local AS=(Rs[0x02]);if not(not Eu[AS])then else(Eu)[AS]={AG[AS]};end;(Rs)[1]=Eu[AS];Rs[0x0002]=0x1;end;end;end;end;end;until true;return;else(Pv)[v1[0X2]]=true;end;end;end;end;end;end;end;end);if Ev then if hv then if lv~=1 then do return Pv[iv](E(Pv,iv+1,Kv));end;else return Pv[iv]();end;elseif not(iv)then else return E(Pv,iv,lv);end;else if V(hv)~="string"then q(hv,0);else do if not(r(hv,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(r(hv,"^.-:%d+: "))then q(hv,0x0);else(q)("Luraph Script:"..(Qc[Wv-1]or'\040int\101\114\110al)')..": "..u(hv),0);end;end;end;end;else ic=function(...)local gY=0;local RY,HY=1,{};local cY=(k and k()or _ENV);local nY={[2]=Vc,[1]=HY};local FY=(cY==H and fc or cY);local sY,dY=q3(...);sY=sY-1;do for ve=0,sY do if not(ac>ve)then break;else do HY[ve]=dY[ve+0X1];end;end;end;end;do if not nc then dY=nil;elseif Ac then(HY)[ac]={n=sY>=ac and sY-ac+0X00001 or 0,E(dY,ac+0X1,sY+0x1)};end;end;if FY==cY then else if not(s)then _ENV=FY;else s(ic,FY);end;end;local fY,QY,zY,BY=c(function()do while true do local Nc=bc[RY];local Ic=Nc[3];RY=RY+0x0001;if not(Ic>=0X00D)then if Ic<6 then if not(Ic>=0X3)then if not(Ic<0X1)then if Ic~=0X2 then do repeat local kL,AL=Lc,HY;if#kL>0 then local zn={};for i5,D5 in M,kL do for eg,fg in M,D5 do if fg[0X00001]==AL and fg[2]>=0X0 then local NF=fg[2];if not zn[NF]then zn[NF]={AL[NF]};end;(fg)[1]=zn[NF];(fg)[0X2]=1;end;end;end;end;until true;end;do return;end;else for C5=Nc[2],Nc[0X5]do(HY)[C5]=nil;end;end;else(HY)[Nc[2]]=HY[Nc[5]]<HY[Nc[4]];end;else if not(Ic>=0x4)then do(HY)[0X4]=FY[Nc[6]];end;RY=RY+1;gY=4;(HY)[gY]=HY[gY]();do Nc=bc[RY];end;RY=RY+0X0001;RY=Nc[5];else do if Ic==5 then local Dz=(Uc[Nc[0X5]]);local Lz=Dz[0x005];local qz=(nil);local oz=(#Lz);if oz>0X0000 then qz={};for RL=0X1,oz do local ZL=Lz[RL];if ZL[0X1]~=0X0 then qz[RL-0X0001]=jc[ZL[0X2]];else do(qz)[RL-1]={HY,ZL[2]};end;end;end;(S)(Lc,qz);end;HY[Nc[0x02]]=e3(Dz,qz,FY);else(HY)[Nc[2]]=Nc[6];end;end;end;end;else if not(Ic<9)then if not(Ic>=0Xb)then if Ic==10 then(HY)[0x1]=FY[Nc[6]];do Nc=bc[RY];end;RY=RY+1;(HY)[0X1]=HY[0X0001][Nc[0X1]];Nc=bc[RY];RY=RY+1;do if not HY[0X1]then do RY=Nc[5];end;end;end;else(HY)[Nc[2]]={E({},0X1,Nc[0X5])};end;else if Ic~=12 then do(HY)[Nc[2]]=FY[Nc[6]];end;else do HY[1]=FY[Nc[0x0006]];end;RY=RY+1;RY=RY+1;Nc=bc[RY];RY=RY+0x001;HY[1]=HY[0x1][Nc[1]];RY=RY+0X1;do RY=RY+0X1;end;do Nc=bc[RY];end;RY=RY+1;HY[0x00001]=HY[0X1][Nc[1]];do Nc=bc[RY];end;RY=RY+1;RY=Nc[5];end;end;else if Ic<0X07 then if not HY[Nc[2]]then RY=Nc[0x0005];end;else do if Ic~=8 then if not(HY[Nc[0X5]]<=HY[Nc[4]])then else RY=Nc[0X00002];end;else HY[Nc[0X02]]=o(HY[Nc[0x5]],HY[Nc[0X4]]);end;end;end;end;end;else if not(Ic<0x013)then if Ic>=0X016 then do if not(Ic<0x18)then if Ic==0X000019 then do HY[Nc[2]][HY[Nc[5]]]=HY[Nc[4]];end;else HY[Nc[2]]=HY[Nc[0X5]]<=HY[Nc[0X4]];end;else if Ic==23 then do HY[1]=FY[Nc[6]];end;RY=RY+0X1;do RY=RY+1;end;do Nc=bc[RY];end;RY=RY+0X1;HY[1]=HY[1][Nc[1]];RY=RY+0x0001;RY=RY+0x00001;Nc=bc[RY];RY=RY+0x001;(HY)[0X00002]=FY[Nc[0X06]];RY=RY+1;do RY=RY+0X1;end;do Nc=bc[RY];end;RY=RY+0X1;(HY)[2]=HY[2][Nc[0X1]];Nc=bc[RY];RY=RY+1;HY[3]=FY[Nc[0X00006]];RY=RY+1;RY=RY+1;RY=RY+0X00001;HY[4]=HY[0];Nc=bc[RY];RY=RY+1;if not(not HY[4])then else RY=Nc[5];end;else repeat local Sl,bl=Lc,HY;if not(#Sl>0)then else local Bo={};for V5,b5 in M,Sl do for MJ,tJ in M,b5 do if tJ[0x1]==bl and tJ[0x2]>=0X0 then local RE=tJ[2];do if not Bo[RE]then Bo[RE]={bl[RE]};end;end;tJ[0X0001]=Bo[RE];(tJ)[2]=0X00001;end;end;end;end;until true;local gb=Nc[2];return false,gb,gb;end;end;end;else if Ic>=0X000014 then if Ic==21 then else RY=Nc[0X5];end;else HY[Nc[0X2]]=HY[Nc[0X5]]>HY[Nc[0X4]];end;end;else if not(Ic>=16)then if Ic>=14 then if Ic~=15 then local vY=1;gY=vY+4-1;(HY)[vY]=HY[vY](E(HY,vY+1,gY));gY=vY;RY=RY+1;RY=RY+1;do Nc=bc[RY];end;do RY=RY+0X1;end;do RY=Nc[5];end;else if HY[Nc[2]]then RY=Nc[5];end;end;else HY[1]=FY[Nc[6]];RY=RY+0X1;RY=RY+0X00001;RY=RY+1;do gY=1;end;do HY[gY]=HY[gY]();end;do Nc=bc[RY];end;RY=RY+1;RY=Nc[0x0005];end;else if not(Ic<0X11)then if Ic==0X0012 then local wv=(Nc[2]);local Lv=P(function(...)(C)();for Ij,gj,yj,ij,Lj,Xj,Cj,Fj,Sj,hj in...do C(true,{Ij,gj,yj,ij,Lj,Xj,Cj,Fj,Sj,hj});end;end);(Lv)(HY[wv],HY[wv+1],HY[wv+2]);do gY=wv;end;do HY[wv]=Lv;end;RY=Nc[0X5];else(HY)[Nc[2]]=HY[Nc[5]];end;else HY[0x0004]=FY[Nc[6]];RY=RY+0X1;do RY=RY+1;end;do Nc=bc[RY];end;RY=RY+1;(HY)[0X4]=HY[4][Nc[1]];Nc=bc[RY];RY=RY+1;(HY)[4]=HY[0x4][Nc[0X1]];Nc=bc[RY];do RY=RY+0X01;end;RY=Nc[5];end;end;end;end;end;end;end);if not(fY)then if V(QY)=="string"then if not(r(QY,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(r(QY,"^.-:%d+: "))then(q)(QY,0);else q("Lur\097\112h \083\099\114\105\112t\058"..(Qc[RY-0x01]or"\040i\110t\101\114n\097l\041").."\058 "..u(QY),0X00000);end;else(q)(QY,0);end;else if QY then if BY~=1 then return HY[zY](E(HY,zY+0X00001,gY));else return HY[zY]();end;elseif not(zY)then else return E(HY,zY,BY);end;end;end;end;end;end;else if Sc>=153 then do if not(Sc<0X9B)then if Sc==0X9C then ic=function(...)local XG=(1);local oG=({});local WG=0X00000;local FG=({[1]=oG,[2]=Vc});local GG=(k and k()or _ENV);local AG=(GG==H and fc or GG);local SG,hG=q3(...);SG=SG-1;for nC=0,SG do if ac>nC then do(oG)[nC]=hG[nC+0X1];end;else break;end;end;if not nc then hG=nil;elseif Ac then oG[ac]={n=SG>=ac and SG-ac+0X001 or 0X00,E(hG,ac+1,SG+0X00001)};end;if AG~=GG then do if not(s)then _ENV=AG;else(s)(ic,AG);end;end;end;local TG,uG,PG,mG=c(function()while true do local A0=bc[XG];local M0=(A0[0X03]);do XG=XG+0X1;end;if M0<8 then if not(M0<4)then do if not(M0<0X006)then if M0~=0X7 then(oG)[A0[2]]=AG[A0[6]];else local vO,cO=A0[0x2],oG[A0[5]];oG[vO+0x00001]=cO;do(oG)[vO]=cO[A0[1]];end;end;else do if M0==0X00005 then for LM=A0[0X02],A0[5]do do oG[LM]=nil;end;end;else(oG)[A0[2]]=oG[A0[5]]-oG[A0[4]];end;end;end;end;else if not(M0>=0x2)then do if M0==1 then(oG)[A0[0X002]]=A0[6];else if oG[A0[5]]<=oG[A0[0x4]]then XG=A0[0X2];end;end;end;else if M0~=3 then do if not(oG[A0[5]]<=oG[A0[4]])then XG=A0[2];end;end;else(oG)[A0[2]]={E({},0X1,A0[0x0005])};end;end;end;else if not(M0<12)then if not(M0<14)then do if M0>=0Xf then do if M0==0X10 then do oG[A0[0X2]]=oG[A0[0x5]]~=oG[A0[4]];end;else local F6=(Uc[A0[5]]);local l6,t6=F6[0X05],nil;local v6=#l6;if not(v6>0x00)then else t6={};for op=1,v6 do local bp=(l6[op]);if bp[0x1]==0 then(t6)[op-1]={oG,bp[0X2]};else do(t6)[op-0x1]=jc[bp[0x2]];end;end;end;S(Lc,t6);end;(oG)[A0[2]]=e3(F6,t6,AG);end;end;else if oG[A0[0X2]]then do XG=A0[5];end;end;end;end;else if M0==13 then local lI=(A0[0x5]);local nI=A0[2];if lI==0 then else WG=nI+lI-0x1;end;local JI,OI,UI=A0[0X0004],nil,(nil);if lI==1 then OI,UI=q3(oG[nI]());else OI,UI=q3(oG[nI](E(oG,nI+0X01,WG)));end;if JI==0x001 then WG=nI-0X00001;else if JI==0 then OI=OI+nI-0x1;WG=OI;else OI=nI+JI-2;WG=OI+0X1;end;local z2=0x0;do for NA=nI,OI do do z2=z2+0x1;end;do oG[NA]=UI[z2];end;end;end;end;else(oG)[0X0]={};local HK=nil;A0=bc[XG];XG=XG+0X0001;(AG)[A0[6]]=oG[0];A0=bc[XG];do XG=XG+1;end;(oG)[0]=AG[A0[0x00006]];XG=XG+1;(oG)[1]={};XG=XG+0X001;oG[0X2]={};do A0=bc[XG];end;XG=XG+0X01;local KK=(Uc[A0[5]]);local CK=(KK[5]);local XK=#CK;if XK>0X0 then HK={};do for dr=1,XK do local Ir=CK[dr];if Ir[0X1]~=0X000 then(HK)[dr-0X0001]=jc[Ir[2]];else HK[dr-1]={oG,Ir[0x02]};end;end;end;S(Lc,HK);end;do(oG)[3]=e3(KK,HK,AG);end;A0=bc[XG];XG=XG+0X00001;local pK=(0);(oG[2])[A0[6]]=oG[0X00003];A0=bc[XG];do XG=XG+1;end;KK=Uc[A0[5]];HK=nil;do CK=KK[5];end;XK=#CK;if not(XK>0x000)then else HK={};for UQ=1,XK do local QQ=(CK[UQ]);if QQ[0X1]==0X0 then(HK)[UQ-1]={oG,QQ[0x00002]};else HK[UQ-1]=jc[QQ[0x02]];end;end;(S)(Lc,HK);end;do oG[0X0003]=e3(KK,HK,AG);end;A0=bc[XG];XG=XG+0X1;oG[0X0002][A0[6]]=oG[3];XG=XG+1;do(oG)[pK]=oG[pK](oG[pK+0x00001],oG[pK+0x2]);end;WG=pK;do XG=XG+0X1;end;do XG=XG+0x1;end;A0=bc[XG];XG=XG+0x1;(AG)[A0[0X06]]=oG[0x00];A0=bc[XG];XG=XG+1;(oG)[0]=AG[A0[0x6]];XG=XG+0X1;XG=XG+0X1;A0=bc[XG];XG=XG+1;KK=Uc[A0[0X5]];HK=nil;CK=KK[5];XK=#CK;do if XK>0 then HK={};for PD=0X001,XK do local eD=(CK[PD]);if eD[1]==0 then HK[PD-0X00001]={oG,eD[0X00002]};else HK[PD-0X1]=jc[eD[0X2]];end;end;(S)(Lc,HK);end;end;oG[1]=e3(KK,HK,AG);A0=bc[XG];XG=XG+0X1;oG[0][A0[0X006]]=oG[0X01];A0=bc[XG];XG=XG+0x1;(oG)[0]=AG[A0[0X6]];A0=bc[XG];XG=XG+0x1;do KK=Uc[A0[5]];end;HK=nil;CK=KK[5];XK=#CK;if XK>0 then HK={};do for Z9=0X1,XK do local y9=(CK[Z9]);if y9[0x1]==0x0000 then do(HK)[Z9-1]={oG,y9[2]};end;else(HK)[Z9-1]=jc[y9[0x2]];end;end;end;(S)(Lc,HK);end;do oG[1]=e3(KK,HK,AG);end;A0=bc[XG];XG=XG+0x00001;oG[0x0000][A0[0X6]]=oG[0X01];A0=bc[XG];do XG=XG+0X00001;end;oG[0X0]=AG[A0[0X00006]];XG=XG+0X01;XG=XG+1;A0=bc[XG];XG=XG+1;do KK=Uc[A0[5]];end;do HK=nil;end;do CK=KK[5];end;XK=#CK;if XK>0 then HK={};for bC=1,XK do local KC=(CK[bC]);if KC[1]==0 then do(HK)[bC-1]={oG,KC[0X2]};end;else HK[bC-1]=jc[KC[2]];end;end;S(Lc,HK);end;do oG[0x01]=e3(KK,HK,AG);end;do A0=bc[XG];end;XG=XG+0X1;oG[0X00000][A0[0x6]]=oG[1];A0=bc[XG];XG=XG+0X01;do(oG)[0]=AG[A0[6]];end;XG=XG+1;XG=XG+0X1;A0=bc[XG];XG=XG+0X1;KK=Uc[A0[5]];HK=nil;CK=KK[0X5];do XK=#CK;end;do if not(XK>0X00)then else HK={};for u6=1,XK do local c6=CK[u6];if c6[1]~=0x0 then(HK)[u6-1]=jc[c6[2]];else HK[u6-1]={oG,c6[0X2]};end;end;(S)(Lc,HK);end;end;oG[0x1]=e3(KK,HK,AG);A0=bc[XG];XG=XG+1;oG[0][A0[0X0006]]=oG[1];do A0=bc[XG];end;XG=XG+0X1;oG[0]=AG[A0[6]];A0=bc[XG];do XG=XG+1;end;do KK=Uc[A0[5]];end;HK=nil;CK=KK[0X5];XK=#CK;if XK>0 then HK={};for Hk=0X00001,XK do local ok=(CK[Hk]);if ok[0x1]==0X000 then HK[Hk-1]={oG,ok[0X2]};else(HK)[Hk-0x1]=jc[ok[2]];end;end;(S)(Lc,HK);end;(oG)[1]=e3(KK,HK,AG);A0=bc[XG];XG=XG+0x1;(oG[0X0])[A0[0X6]]=oG[0X1];A0=bc[XG];XG=XG+0X1;(oG)[0]=AG[A0[6]];A0=bc[XG];XG=XG+1;do KK=Uc[A0[5]];end;HK=nil;do CK=KK[5];end;do XK=#CK;end;if not(XK>0X0)then else do HK={};end;do for Im=1,XK do local Cm=(CK[Im]);if Cm[1]==0X0 then HK[Im-0x0001]={oG,Cm[2]};else(HK)[Im-0X1]=jc[Cm[2]];end;end;end;(S)(Lc,HK);end;oG[1]=e3(KK,HK,AG);A0=bc[XG];XG=XG+0x01;(oG[0x0])[A0[0X6]]=oG[1];A0=bc[XG];XG=XG+0X1;do oG[0]=AG[A0[6]];end;XG=XG+1;XG=XG+0X01;do A0=bc[XG];end;XG=XG+0x1;KK=Uc[A0[0X5]];HK=nil;do CK=KK[0x5];end;XK=#CK;if not(XK>0)then else HK={};for Bc=0X001,XK do local kc=CK[Bc];do if kc[1]==0X00000 then HK[Bc-0X00001]={oG,kc[2]};else HK[Bc-0X1]=jc[kc[2]];end;end;end;(S)(Lc,HK);end;(oG)[0X1]=e3(KK,HK,AG);do A0=bc[XG];end;do XG=XG+1;end;(oG[0])[A0[0X06]]=oG[0X1];A0=bc[XG];do XG=XG+0X1;end;oG[0X0000]=AG[A0[0X6]];A0=bc[XG];XG=XG+1;KK=Uc[A0[0X5]];do HK=nil;end;do CK=KK[5];end;XK=#CK;if not(XK>0)then else HK={};for I5=0X00001,XK do local t5=(CK[I5]);if t5[1]==0 then do HK[I5-1]={oG,t5[0X2]};end;else HK[I5-0x0001]=jc[t5[0X0002]];end;end;(S)(Lc,HK);end;do(oG)[1]=e3(KK,HK,AG);end;A0=bc[XG];XG=XG+1;(oG[0])[A0[0X6]]=oG[0X1];A0=bc[XG];XG=XG+0X1;do oG[0]=AG[A0[0X6]];end;A0=bc[XG];XG=XG+1;KK=Uc[A0[5]];do HK=nil;end;CK=KK[0x00005];XK=#CK;do if XK>0 then do HK={};end;for yu=0x01,XK do local Uu=(CK[yu]);if Uu[1]==0 then HK[yu-0X1]={oG,Uu[2]};else(HK)[yu-0X00001]=jc[Uu[0x2]];end;end;S(Lc,HK);end;end;(oG)[0X1]=e3(KK,HK,AG);A0=bc[XG];do XG=XG+1;end;(oG[0])[A0[0x00006]]=oG[0X00001];A0=bc[XG];do XG=XG+0x1;end;do(oG)[0]=AG[A0[0X00006]];end;XG=XG+1;XG=XG+1;A0=bc[XG];XG=XG+1;KK=Uc[A0[5]];HK=nil;CK=KK[5];XK=#CK;if not(XK>0X0000)then else HK={};for q1=0X01,XK do local E1=CK[q1];if E1[1]==0 then(HK)[q1-1]={oG,E1[2]};else HK[q1-1]=jc[E1[2]];end;end;(S)(Lc,HK);end;(oG)[0x0001]=e3(KK,HK,AG);A0=bc[XG];XG=XG+1;(oG[0])[A0[0X6]]=oG[0X0001];A0=bc[XG];XG=XG+0X1;oG[0]=AG[A0[0X00006]];XG=XG+0X1;XG=XG+1;A0=bc[XG];XG=XG+1;KK=Uc[A0[5]];HK=nil;CK=KK[0x0005];do XK=#CK;end;if not(XK>0X0000)then else HK={};for It=1,XK do local jt=(CK[It]);if jt[0x01]~=0 then(HK)[It-0X00001]=jc[jt[2]];else(HK)[It-0x0001]={oG,jt[0X00002]};end;end;(S)(Lc,HK);end;oG[1]=e3(KK,HK,AG);do A0=bc[XG];end;XG=XG+0X1;(oG[0X000])[A0[0X6]]=oG[0X1];A0=bc[XG];XG=XG+0X01;oG[0]=AG[A0[0x6]];do A0=bc[XG];end;XG=XG+1;do KK=Uc[A0[5]];end;HK=nil;CK=KK[5];do XK=#CK;end;do if XK>0 then HK={};do for xJ=0X1,XK do local yJ=(CK[xJ]);if yJ[0X001]==0 then HK[xJ-1]={oG,yJ[2]};else(HK)[xJ-1]=jc[yJ[0x002]];end;end;end;(S)(Lc,HK);end;end;oG[0X1]=e3(KK,HK,AG);A0=bc[XG];XG=XG+0X1;oG[0][A0[6]]=oG[0x1];A0=bc[XG];XG=XG+0X1;oG[0X0]=AG[A0[6]];do A0=bc[XG];end;do XG=XG+1;end;KK=Uc[A0[0x05]];do HK=nil;end;CK=KK[0X5];XK=#CK;do if XK>0 then HK={};for Lz=1,XK do local Sz=(CK[Lz]);if Sz[1]~=0X00 then(HK)[Lz-1]=jc[Sz[0X02]];else HK[Lz-1]={oG,Sz[2]};end;end;S(Lc,HK);end;end;(oG)[0x1]=e3(KK,HK,AG);A0=bc[XG];XG=XG+1;oG[0x0][A0[0X06]]=oG[0X1];A0=bc[XG];XG=XG+0X1;do oG[0]=AG[A0[0x6]];end;do XG=XG+1;end;XG=XG+0X0001;A0=bc[XG];XG=XG+0X00001;KK=Uc[A0[5]];do HK=nil;end;CK=KK[5];XK=#CK;if not(XK>0x0)then else HK={};do for k8=1,XK do local i8=(CK[k8]);if i8[0X1]~=0X00 then(HK)[k8-1]=jc[i8[2]];else HK[k8-0x1]={oG,i8[0X02]};end;end;end;S(Lc,HK);end;(oG)[1]=e3(KK,HK,AG);do A0=bc[XG];end;do XG=XG+1;end;do oG[0x0][A0[0X006]]=oG[0X1];end;A0=bc[XG];XG=XG+1;(oG)[0X00000]=AG[A0[0X6]];do XG=XG+0X1;end;XG=XG+0x1;A0=bc[XG];XG=XG+1;do KK=Uc[A0[0X005]];end;HK=nil;CK=KK[0X00005];XK=#CK;if not(XK>0X0000)then else HK={};for ex=0x1,XK do local lx=CK[ex];do if lx[0X00001]==0 then do HK[ex-1]={oG,lx[2]};end;else(HK)[ex-1]=jc[lx[0X2]];end;end;end;(S)(Lc,HK);end;do oG[1]=e3(KK,HK,AG);end;A0=bc[XG];XG=XG+0x001;(oG[0])[A0[0x006]]=oG[0x01];A0=bc[XG];XG=XG+1;oG[0]=AG[A0[0X0006]];A0=bc[XG];XG=XG+1;KK=Uc[A0[0X005]];HK=nil;do CK=KK[5];end;do XK=#CK;end;do if XK>0X0 then HK={};for D6=0X01,XK do local W6=(CK[D6]);if W6[1]~=0X00000 then HK[D6-1]=jc[W6[0X2]];else HK[D6-1]={oG,W6[0X2]};end;end;(S)(Lc,HK);end;end;(oG)[1]=e3(KK,HK,AG);A0=bc[XG];do XG=XG+0X0001;end;(oG[0x0])[A0[0X6]]=oG[1];do A0=bc[XG];end;XG=XG+0X1;(oG)[0X0]=AG[A0[0X6]];A0=bc[XG];XG=XG+0x0001;do KK=Uc[A0[5]];end;do HK=nil;end;CK=KK[0X5];XK=#CK;do if not(XK>0X000)then else do HK={};end;for nh=0X00001,XK do local ih=CK[nh];if ih[0X1]~=0 then(HK)[nh-1]=jc[ih[0X2]];else HK[nh-0X1]={oG,ih[0X2]};end;end;S(Lc,HK);end;end;do(oG)[1]=e3(KK,HK,AG);end;A0=bc[XG];XG=XG+0X1;(oG[0X0])[A0[0X6]]=oG[1];do A0=bc[XG];end;XG=XG+0X1;do(oG)[0]=AG[A0[0X6]];end;A0=bc[XG];do XG=XG+1;end;do KK=Uc[A0[5]];end;HK=nil;do CK=KK[5];end;XK=#CK;if XK>0X0 then HK={};for u_=1,XK do local K_=(CK[u_]);if K_[0X1]==0 then HK[u_-0X1]={oG,K_[2]};else HK[u_-0X1]=jc[K_[0X2]];end;end;(S)(Lc,HK);end;oG[0X1]=e3(KK,HK,AG);A0=bc[XG];XG=XG+0x00001;(oG[0X0000])[A0[6]]=oG[0x01];A0=bc[XG];XG=XG+1;oG[0x0]=AG[A0[0x6]];A0=bc[XG];XG=XG+1;KK=Uc[A0[0X5]];HK=nil;CK=KK[5];do XK=#CK;end;do if not(XK>0)then else HK={};for M7=1,XK do local v7=(CK[M7]);if v7[1]~=0x0 then(HK)[M7-1]=jc[v7[2]];else HK[M7-0X00001]={oG,v7[0X0002]};end;end;(S)(Lc,HK);end;end;(oG)[1]=e3(KK,HK,AG);A0=bc[XG];XG=XG+1;oG[0][A0[6]]=oG[0X1];A0=bc[XG];XG=XG+1;(oG)[0]=AG[A0[6]];do XG=XG+0x1;end;do XG=XG+1;end;A0=bc[XG];XG=XG+1;do KK=Uc[A0[5]];end;do HK=nil;end;CK=KK[5];XK=#CK;do if XK>0X00 then HK={};do for qY=0X001,XK do local zY=CK[qY];if zY[1]==0 then(HK)[qY-0X1]={oG,zY[0X00002]};else HK[qY-1]=jc[zY[0X2]];end;end;end;(S)(Lc,HK);end;end;(oG)[1]=e3(KK,HK,AG);A0=bc[XG];do XG=XG+1;end;oG[0][A0[0X6]]=oG[1];A0=bc[XG];XG=XG+0X0001;oG[0]=AG[A0[0X6]];do A0=bc[XG];end;XG=XG+1;KK=Uc[A0[0X5]];HK=nil;CK=KK[0X5];XK=#CK;if XK>0x0 then do HK={};end;for P0=1,XK do local C0=(CK[P0]);do if C0[1]~=0 then do HK[P0-0x01]=jc[C0[2]];end;else HK[P0-1]={oG,C0[0X00002]};end;end;end;(S)(Lc,HK);end;oG[1]=e3(KK,HK,AG);A0=bc[XG];do XG=XG+1;end;(oG[0X000])[A0[0X6]]=oG[0X1];A0=bc[XG];XG=XG+0X01;do(oG)[0]=AG[A0[6]];end;XG=XG+1;XG=XG+1;A0=bc[XG];XG=XG+1;KK=Uc[A0[5]];HK=nil;do CK=KK[0X5];end;XK=#CK;if XK>0X0000 then HK={};for zE=1,XK do local rE=CK[zE];if rE[1]~=0 then do(HK)[zE-0X1]=jc[rE[0X02]];end;else(HK)[zE-0x1]={oG,rE[0X2]};end;end;S(Lc,HK);end;oG[1]=e3(KK,HK,AG);A0=bc[XG];XG=XG+0X1;(oG[0])[A0[6]]=oG[1];do A0=bc[XG];end;XG=XG+0X1;do oG[0]=AG[A0[0X6]];end;XG=XG+0X001;XG=XG+0x0001;A0=bc[XG];do XG=XG+0X001;end;KK=Uc[A0[0x5]];do HK=nil;end;CK=KK[0X5];XK=#CK;if XK>0X000 then HK={};do for aq=1,XK do local Pq=(CK[aq]);do if Pq[0X0001]==0 then HK[aq-0X1]={oG,Pq[2]};else HK[aq-1]=jc[Pq[0X2]];end;end;end;end;(S)(Lc,HK);end;(oG)[0X1]=e3(KK,HK,AG);do A0=bc[XG];end;XG=XG+1;oG[0X0][A0[6]]=oG[1];A0=bc[XG];XG=XG+0X00001;(oG)[0x0]=AG[A0[6]];A0=bc[XG];XG=XG+1;do KK=Uc[A0[5]];end;HK=nil;CK=KK[0X05];XK=#CK;if not(XK>0X0)then else do HK={};end;for UH=1,XK do local vH=CK[UH];do if vH[1]~=0 then(HK)[UH-0X01]=jc[vH[2]];else HK[UH-0x01]={oG,vH[0X002]};end;end;end;(S)(Lc,HK);end;do oG[1]=e3(KK,HK,AG);end;do A0=bc[XG];end;XG=XG+0X1;oG[0X00000][A0[0X6]]=oG[1];A0=bc[XG];XG=XG+0X1;oG[0]=AG[A0[6]];A0=bc[XG];XG=XG+1;do KK=Uc[A0[0X5]];end;HK=nil;CK=KK[0x5];do XK=#CK;end;if XK>0X0 then HK={};for CL=1,XK do local iL=(CK[CL]);do if iL[1]~=0 then(HK)[CL-1]=jc[iL[2]];else(HK)[CL-1]={oG,iL[2]};end;end;end;S(Lc,HK);end;oG[1]=e3(KK,HK,AG);do A0=bc[XG];end;XG=XG+1;do(oG[0X0000])[A0[0x6]]=oG[0X00001];end;A0=bc[XG];XG=XG+0X1;do oG[0x0]=AG[A0[0X0006]];end;A0=bc[XG];XG=XG+0x1;KK=Uc[A0[0X005]];HK=nil;CK=KK[0X5];XK=#CK;if XK>0X0 then do HK={};end;do for wc=0X1,XK do local vc=(CK[wc]);if vc[0x1]==0 then HK[wc-1]={oG,vc[0X2]};else do HK[wc-0x1]=jc[vc[2]];end;end;end;end;S(Lc,HK);end;(oG)[0x1]=e3(KK,HK,AG);do A0=bc[XG];end;do XG=XG+0X1;end;oG[0X000][A0[0X0006]]=oG[0x1];do A0=bc[XG];end;XG=XG+1;(oG)[0x0]=AG[A0[6]];A0=bc[XG];do XG=XG+0X00001;end;KK=Uc[A0[0X0005]];do HK=nil;end;CK=KK[0X0005];do XK=#CK;end;do if XK>0 then HK={};for ik=0X001,XK do local Yk=CK[ik];if Yk[0X01]==0X0000 then do(HK)[ik-1]={oG,Yk[2]};end;else(HK)[ik-0x1]=jc[Yk[2]];end;end;(S)(Lc,HK);end;end;(oG)[0X1]=e3(KK,HK,AG);do A0=bc[XG];end;XG=XG+0X1;(oG[0X00000])[A0[6]]=oG[1];A0=bc[XG];XG=XG+0X00001;(oG)[0]=AG[A0[0X6]];A0=bc[XG];XG=XG+1;do KK=Uc[A0[5]];end;do HK=nil;end;CK=KK[5];XK=#CK;if XK>0X0 then HK={};for Hi=1,XK do local vi=(CK[Hi]);do if vi[1]==0 then HK[Hi-0X1]={oG,vi[0X00002]};else HK[Hi-1]=jc[vi[0X002]];end;end;end;(S)(Lc,HK);end;(oG)[0x1]=e3(KK,HK,AG);A0=bc[XG];XG=XG+0X1;do oG[0][A0[0X6]]=oG[1];end;do A0=bc[XG];end;XG=XG+1;do(oG)[0]=AG[A0[0x6]];end;do XG=XG+1;end;XG=XG+0X01;A0=bc[XG];XG=XG+0X1;KK=Uc[A0[5]];HK=nil;CK=KK[0X00005];XK=#CK;if not(XK>0X0)then else do HK={};end;do for X5=0x1,XK do local M5=(CK[X5]);do if M5[1]==0X0 then do(HK)[X5-1]={oG,M5[0X2]};end;else(HK)[X5-1]=jc[M5[0X2]];end;end;end;end;(S)(Lc,HK);end;(oG)[0X1]=e3(KK,HK,AG);A0=bc[XG];do XG=XG+0X1;end;oG[0][A0[0x00006]]=oG[0X0001];A0=bc[XG];XG=XG+1;(oG)[0]=AG[A0[6]];XG=XG+0X1;do XG=XG+1;end;A0=bc[XG];XG=XG+0X1;KK=Uc[A0[5]];HK=nil;CK=KK[0x00005];XK=#CK;if not(XK>0)then else do HK={};end;for Il=0X1,XK do local xl=(CK[Il]);if xl[0X1]==0 then HK[Il-0X1]={oG,xl[2]};else do HK[Il-0x0001]=jc[xl[0X2]];end;end;end;S(Lc,HK);end;(oG)[0x0001]=e3(KK,HK,AG);A0=bc[XG];XG=XG+0x1;do(oG[0X000])[A0[6]]=oG[1];end;A0=bc[XG];do XG=XG+0x01;end;(oG)[0]=AG[A0[6]];do A0=bc[XG];end;XG=XG+0X1;KK=Uc[A0[5]];HK=nil;CK=KK[0x5];do XK=#CK;end;if XK>0 then HK={};for Gd=1,XK do local ld=CK[Gd];if ld[0X1]==0X000 then(HK)[Gd-0x001]={oG,ld[0X2]};else HK[Gd-1]=jc[ld[2]];end;end;(S)(Lc,HK);end;(oG)[0X00001]=e3(KK,HK,AG);A0=bc[XG];XG=XG+0X1;(oG[0])[A0[6]]=oG[0x1];A0=bc[XG];XG=XG+1;(oG)[0]=AG[A0[6]];A0=bc[XG];XG=XG+0x1;do KK=Uc[A0[0X5]];end;HK=nil;CK=KK[0X5];XK=#CK;do if XK>0 then do HK={};end;for Rw=1,XK do local zw=(CK[Rw]);if zw[1]==0x0000 then do(HK)[Rw-1]={oG,zw[2]};end;else HK[Rw-1]=jc[zw[2]];end;end;S(Lc,HK);end;end;oG[0X001]=e3(KK,HK,AG);A0=bc[XG];XG=XG+1;(oG[0])[A0[0x00006]]=oG[1];A0=bc[XG];XG=XG+0X1;(oG)[0X0]=AG[A0[6]];A0=bc[XG];do XG=XG+1;end;do KK=Uc[A0[0X5]];end;HK=nil;CK=KK[0X0005];XK=#CK;do if XK>0 then HK={};for sK=0X1,XK do local oK=(CK[sK]);if oK[1]~=0x0000 then do HK[sK-1]=jc[oK[2]];end;else HK[sK-0x1]={oG,oK[0X2]};end;end;S(Lc,HK);end;end;(oG)[0X1]=e3(KK,HK,AG);A0=bc[XG];XG=XG+0X1;(oG[0X00000])[A0[0X6]]=oG[1];A0=bc[XG];XG=XG+0x1;(oG)[0x00]=AG[A0[6]];XG=XG+0x0001;XG=XG+1;do A0=bc[XG];end;do XG=XG+1;end;KK=Uc[A0[5]];do HK=nil;end;CK=KK[0X5];do XK=#CK;end;if not(XK>0X00000)then else do HK={};end;for F0=1,XK do local R0=CK[F0];do if R0[1]==0X0 then HK[F0-1]={oG,R0[2]};else HK[F0-1]=jc[R0[0X2]];end;end;end;S(Lc,HK);end;(oG)[0x0001]=e3(KK,HK,AG);do A0=bc[XG];end;XG=XG+0X1;(oG[0X0])[A0[6]]=oG[1];A0=bc[XG];do XG=XG+0X1;end;do oG[0]=AG[A0[6]];end;do A0=bc[XG];end;XG=XG+1;KK=Uc[A0[0x00005]];do HK=nil;end;CK=KK[0X5];XK=#CK;if not(XK>0)then else do HK={};end;for mw=1,XK do local Uw=CK[mw];do if Uw[1]~=0X0 then(HK)[mw-0x1]=jc[Uw[2]];else do(HK)[mw-1]={oG,Uw[0X2]};end;end;end;end;(S)(Lc,HK);end;(oG)[0X1]=e3(KK,HK,AG);do A0=bc[XG];end;do XG=XG+1;end;oG[0][A0[6]]=oG[1];A0=bc[XG];XG=XG+1;(oG)[0]=AG[A0[6]];XG=XG+0X1;XG=XG+1;A0=bc[XG];XG=XG+0X001;do KK=Uc[A0[0X5]];end;HK=nil;CK=KK[0X5];do XK=#CK;end;if XK>0 then HK={};for rU=1,XK do local sU=(CK[rU]);do if sU[1]==0 then do HK[rU-1]={oG,sU[0x2]};end;else(HK)[rU-1]=jc[sU[0X00002]];end;end;end;S(Lc,HK);end;oG[1]=e3(KK,HK,AG);A0=bc[XG];XG=XG+0x001;(oG[0X0000])[A0[0X6]]=oG[0X0001];do XG=XG+0x01;end;repeat local XZ,vZ=Lc,oG;if not(#XZ>0X0)then else local Mc={};for yu,Du in M,XZ do for Bh,Ph in M,Du do if Ph[1]==vZ and Ph[0x2]>=0X0 then local EK=(Ph[2]);do if not(not Mc[EK])then else do Mc[EK]={vZ[EK]};end;end;end;do Ph[0X1]=Mc[EK];end;(Ph)[2]=0X0001;end;end;end;end;until true;return;end;end;else if not(M0<0x0000A)then if M0~=11 then do XG=A0[0X5];end;else(oG)[A0[2]]=T(oG[A0[5]],oG[A0[4]]);end;else if M0~=9 then do oG[A0[2]]=FG[A0[5]];end;else end;end;end;end;end;end);do if not(TG)then do if V(uG)=="string"then if not(r(uG,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if r(uG,'\094.-:%\100+\058 ')then(q)("Luraph Script:"..(Qc[XG-1]or"(internal)")..": "..u(uG),0X000);else q(uG,0X0000);end;else(q)(uG,0X0);end;end;else if uG then do if mG~=0X0001 then return oG[PG](E(oG,PG+1,WG));else do return oG[PG]();end;end;end;elseif PG then return E(oG,PG,mG);end;end;end;end;else do ic=function(...)local f9=(0);local e9=1;local C9={};local L9=({[2]=Vc,[1]=C9});local W9=(k and k()or _ENV);local o9=(W9==H and fc or W9);local q9,V9=q3(...);q9=q9-0X1;for Rq=0,q9 do if not(ac>Rq)then break;else do C9[Rq]=V9[Rq+0X1];end;end;end;if not nc then V9=nil;elseif Ac then C9[ac]={n=q9>=ac and q9-ac+1 or 0,E(V9,ac+1,q9+0x00001)};end;if o9==W9 then else if s then s(ic,o9);else _ENV=o9;end;end;local k9,h9,l9,v9=c(function()do while true do local Yc=bc[e9];local dc=(Yc[0X003]);e9=e9+1;if not(dc<0X18)then if dc>=0X24 then do if dc<42 then if dc>=39 then if not(dc<0X000028)then if dc==0X029 then do if C9[Yc[0x5]]==Yc[1]then do e9=Yc[0X2];end;end;end;else C9[4]=o9[Yc[0X6]];e9=e9+0X0001;e9=e9+1;Yc=bc[e9];e9=e9+0X00001;C9[0X00005]=Yc[0X6];e9=e9+1;C9[0X6]=true;do e9=e9+1;end;local Km=0x4;C9[Km]=C9[Km](C9[Km+0x1],C9[Km+0X02]);f9=Km;do Yc=bc[e9];end;do e9=e9+1;end;if C9[0x0004]then e9=Yc[0x5];end;end;else if not(not C9[Yc[2]])then else e9=Yc[0X5];end;end;else if not(dc>=37)then(C9)[2]=true;e9=e9+1;(C9)[0X0003]=nil;do Yc=bc[e9];end;do e9=e9+1;end;(C9)[0X4]=o9[Yc[6]];e9=e9+0X001;do e9=e9+1;end;Yc=bc[e9];e9=e9+0X0001;(C9)[4]=C9[4][Yc[1]];Yc=bc[e9];do e9=e9+1;end;do if C9[4]then e9=Yc[0X5];end;end;else if dc==38 then(C9)[5]=o9[Yc[0X6]];Yc=bc[e9];e9=e9+1;local Sk=0X5;(C9)[6]=Yc[6];e9=e9+0X01;do C9[Sk]=C9[Sk](C9[Sk+0X00001]);end;f9=Sk;e9=e9+1;e9=e9+0X1;Yc=bc[e9];e9=e9+0X1;if C9[5]~=Yc[1]then do e9=Yc[0X2];end;end;else local HK=Yc[2];local bK,DK=C9[HK],(Yc[0X4]-0x1)*0X00032;do for we=1,Yc[0X05]do(bK)[DK+we]=C9[HK+we];end;end;end;end;end;else if dc<45 then if dc>=0X2B then if dc==44 then C9[4]=true;do e9=e9+1;end;C9[0X2]=C9[4];Yc=bc[e9];e9=e9+1;(C9)[0x4]=Yc[0X06];do e9=e9+0x0001;end;do C9[0x3]=C9[4];end;do Yc=bc[e9];end;e9=e9+0X1;e9=Yc[0x00005];else C9[Yc[2]]=C9[Yc[0X5]]/C9[Yc[4]];end;else(C9)[2]=o9[Yc[6]];do e9=e9+1;end;e9=e9+1;Yc=bc[e9];do e9=e9+0X001;end;(C9)[0X02]=C9[0x002][Yc[1]];Yc=bc[e9];e9=e9+1;if not(C9[2])then else e9=Yc[5];end;end;else if dc<0X0002F then do if dc==46 then e9=Yc[0X00005];else do(C9)[Yc[0x0002]]=C9[Yc[0X5]][C9[Yc[4]]];end;end;end;else if dc==48 then C9[Yc[2]]=C9[Yc[0X5]]>=C9[Yc[4]];else C9[2]=o9[Yc[0X6]];e9=e9+0X01;e9=e9+0X00001;e9=e9+0X1;f9=2;C9[f9]();do f9=f9-0X1;end;do Yc=bc[e9];end;e9=e9+0X1;(C9)[2]=o9[Yc[0X00006]];Yc=bc[e9];e9=e9+0X00001;C9[2][Yc[6]]=Yc[0X00001];e9=e9+0X01;repeat local Oy,Jy=Lc,C9;if not(#Oy>0X000)then else local gr=({});do for id,Wd in M,Oy do for H6,d6 in M,Wd do if not(d6[0X1]==Jy and d6[0X2]>=0x0)then else local ea=d6[2];if not gr[ea]then(gr)[ea]={Jy[ea]};end;d6[0X0001]=gr[ea];d6[0X2]=1;end;end;end;end;end;until true;return;end;end;end;end;end;else if dc>=0x001e then if not(dc<33)then do if not(dc>=0x22)then(C9)[0]=Yc[0X006];do Yc=bc[e9];end;e9=e9+0X01;do(o9)[Yc[0x6]]=C9[0];end;Yc=bc[e9];e9=e9+1;(C9)[0]=o9[Yc[0X6]];do e9=e9+1;end;e9=e9+1;Yc=bc[e9];local SH=(0);do e9=e9+1;end;(C9)[1]=o9[Yc[0x6]];do e9=e9+1;end;e9=e9+1;local AH=(0X3);do Yc=bc[e9];end;e9=e9+0X1;do C9[2]=Yc[6];end;e9=e9+0x1;(C9)[3]=true;do e9=e9+1;end;local XH=(4);do if XH==0x0 then else f9=SH+XH-1;end;end;local zH,EH=nil,nil;if XH==1 then zH,EH=q3(C9[SH]());else zH,EH=q3(C9[SH](E(C9,SH+1,f9)));end;if AH~=1 then if AH==0X0 then zH=zH+SH-1;f9=zH;else zH=SH+AH-2;f9=zH+0X1;end;local Q1=0;for Ay=SH,zH do Q1=Q1+1;(C9)[Ay]=EH[Q1];end;else do f9=SH-0X1;end;end;Yc=bc[e9];e9=e9+1;if C9[1]==Yc[1]then e9=Yc[0x2];end;else if dc==35 then local NH=Uc[Yc[0x00005]];local xH=(NH[5]);local hH=(nil);local vH=(#xH);if not(vH>0X0)then else hH={};for uP=0x1,vH do local XP=(xH[uP]);do if XP[0x01]~=0 then do hH[uP-1]=jc[XP[2]];end;else do(hH)[uP-1]={C9,XP[2]};end;end;end;end;S(Lc,hH);end;C9[Yc[2]]=e3(NH,hH,o9);else for RW=Yc[2],Yc[0X5]do C9[RW]=nil;end;end;end;end;else do if dc<0X1f then(C9)[0X2]=o9[Yc[6]];do Yc=bc[e9];end;e9=e9+1;C9[0X00002]=C9[2][Yc[1]];do Yc=bc[e9];end;e9=e9+1;do if C9[2]then do e9=Yc[0X005];end;end;end;else if dc~=0X20 then do if not(Yc[0X6]<=C9[Yc[0X4]])then e9=Yc[2];end;end;else do C9[0x4]=true;end;do Yc=bc[e9];end;e9=e9+1;do o9[Yc[0X06]]=C9[4];end;do Yc=bc[e9];end;e9=e9+1;e9=Yc[5];end;end;end;end;else do if not(dc>=27)then if dc<0X19 then else do if dc==26 then(C9)[4]=o9[Yc[6]];Yc=bc[e9];e9=e9+1;do C9[0X5]=Yc[0X6];end;do Yc=bc[e9];end;e9=e9+1;C9[0X06]=Yc[6];do Yc=bc[e9];end;e9=e9+1;local mR=4;C9[0x7]=Yc[6];Yc=bc[e9];do e9=e9+0X1;end;(C9)[8]=Yc[6];e9=e9+0x1;do f9=mR+0X5-1;end;C9[mR](E(C9,mR+0X01,f9));f9=mR-0X1;e9=e9+1;e9=e9+1;do Yc=bc[e9];end;e9=e9+0x1;C9[4]=o9[Yc[0X06]];do e9=e9+1;end;e9=e9+1;Yc=bc[e9];e9=e9+1;(C9)[4]=C9[0x04]+Yc[0X01];do Yc=bc[e9];end;e9=e9+0x1;(o9)[Yc[0X06]]=C9[4];Yc=bc[e9];do e9=e9+0x01;end;e9=Yc[5];else repeat local RQ,vQ=Lc,(C9);if#RQ>0x000 then local Z5=({});for F0,e0 in M,RQ do for C1,o1 in M,e0 do do if o1[1]==vQ and o1[2]>=0X0 then local ho=o1[2];if not Z5[ho]then Z5[ho]={vQ[ho]};end;(o1)[1]=Z5[ho];(o1)[0X2]=1;end;end;end;end;end;until true;return;end;end;end;else if dc>=28 then if dc~=29 then(C9)[0X6]=o9[Yc[6]];do Yc=bc[e9];end;e9=e9+0X00001;do(C9)[6]=C9[0X0006][Yc[1]];end;Yc=bc[e9];e9=e9+0X1;if not(C9[0X6])then else e9=Yc[0X5];end;else C9[0X2]=o9[Yc[0X06]];do e9=e9+1;end;e9=e9+0x00001;do Yc=bc[e9];end;e9=e9+1;(C9)[0X002]=C9[2][Yc[0X1]];Yc=bc[e9];e9=e9+1;if not(C9[2])then else do e9=Yc[5];end;end;end;else do C9[2]=o9[Yc[0X6]];end;Yc=bc[e9];e9=e9+1;do(C9)[2]=C9[0X2][Yc[1]];end;do e9=e9+1;end;e9=e9+0x1;do Yc=bc[e9];end;do e9=e9+1;end;if C9[0X2]then e9=Yc[0X00005];end;end;end;end;end;end;else if not(dc<0X000c)then if dc<0X12 then do if not(dc>=0XF)then if dc>=13 then if dc==0Xe then(C9)[Yc[0X2]]=C9[Yc[5]]-C9[Yc[4]];else(C9)[0x2]=o9[Yc[6]];Yc=bc[e9];e9=e9+0X00001;C9[2]=C9[0X002][Yc[1]];e9=e9+0x1;e9=e9+0x1;Yc=bc[e9];e9=e9+1;if not(C9[0x2])then else e9=Yc[0X5];end;end;else if not(Yc[0X00006]<C9[Yc[4]])then e9=Yc[0X00002];end;end;else if dc>=0X10 then if dc~=17 then(C9)[Yc[2]]=Yc[6];else local EE=(Yc[0X002]);local pE,jE=C9[EE]();if pE then do for eE=1,Yc[0X4]do(C9)[EE+eE]=jE[eE];end;end;e9=Yc[5];end;end;else do C9[Yc[0x2]]=C9[Yc[0X5]];end;end;end;end;else if not(dc<0x015)then if dc>=22 then if dc==0X0017 then do(C9)[2]=o9[Yc[6]];end;e9=e9+0X1;e9=e9+0X01;do Yc=bc[e9];end;do e9=e9+0X0001;end;(C9)[0X00002]=C9[2][Yc[1]];e9=e9+0X001;e9=e9+0x1;Yc=bc[e9];e9=e9+0X1;if C9[2]then e9=Yc[5];end;else C9[5]=o9[Yc[6]];do e9=e9+1;end;e9=e9+1;e9=e9+1;f9=5;C9[f9]=C9[f9]();Yc=bc[e9];e9=e9+0X001;if not(C9[0x0005])then else do e9=Yc[5];end;end;end;else C9[0X4]=false;do Yc=bc[e9];end;do e9=e9+0x1;end;do o9[Yc[0X6]]=C9[0X4];end;Yc=bc[e9];e9=e9+1;C9[0x4]=o9[Yc[6]];e9=e9+1;do e9=e9+0x1;end;Yc=bc[e9];e9=e9+1;if not(not C9[4])then else e9=Yc[5];end;end;else if dc>=19 then do if dc~=20 then do(C9)[0x002]=o9[Yc[0x00006]];end;Yc=bc[e9];e9=e9+1;do(C9)[2]=C9[2][Yc[1]];end;Yc=bc[e9];e9=e9+1;if not C9[0X2]then e9=Yc[5];end;else C9[2]=o9[Yc[6]];e9=e9+1;e9=e9+1;Yc=bc[e9];do e9=e9+0X1;end;C9[0X2]=C9[2][Yc[0X00001]];Yc=bc[e9];e9=e9+0X1;if not(not C9[2])then else do e9=Yc[5];end;end;end;end;else do if C9[Yc[0X2]]then e9=Yc[0x005];end;end;end;end;end;else if not(dc<6)then do if dc<0X00009 then if not(dc<7)then if dc~=0X8 then do C9[Yc[0X2]]={E({},1,Yc[0X5])};end;else C9[0X00004]=o9[Yc[0x6]];Yc=bc[e9];e9=e9+0X1;do C9[0X5]=Yc[0X6];end;do e9=e9+0X1;end;local pQ=4;(C9[pQ])(C9[pQ+1]);do f9=pQ-0X1;end;e9=e9+0X1;e9=e9+0x1;Yc=bc[e9];e9=e9+0X1;C9[0x4]=o9[Yc[6]];Yc=bc[e9];e9=e9+0X1;(C9[0x04])[Yc[6]]=Yc[1];Yc=bc[e9];e9=e9+0X1;C9[0X4]=o9[Yc[0X006]];e9=e9+1;do e9=e9+0X1;end;e9=e9+1;f9=4;C9[f9]();f9=f9-0X00001;Yc=bc[e9];e9=e9+0X1;C9[0X4]=o9[Yc[6]];e9=e9+0X1;e9=e9+0X1;do Yc=bc[e9];end;e9=e9+1;do(C9)[0X5]=o9[Yc[6]];end;e9=e9+1;pQ=0X4;(C9[pQ])(C9[pQ+0x001]);do f9=pQ-0x1;end;do Yc=bc[e9];end;e9=e9+1;e9=Yc[5];end;else C9[0X006]=o9[Yc[6]];local Sy=0X6;e9=e9+0x00001;e9=e9+1;Yc=bc[e9];e9=e9+0X001;do(C9)[0X7]=Yc[6];end;e9=e9+0X1;(C9)[0X8]=true;do e9=e9+0X1;end;C9[Sy]=C9[Sy](C9[Sy+1],C9[Sy+0x2]);f9=Sy;local Ny=C9[6];e9=e9+0X1;do e9=e9+0X1;end;Yc=bc[e9];e9=e9+0X001;Sy=0X6;(C9)[Sy+1]=Ny;C9[Sy]=Ny[Yc[0X0001]];Yc=bc[e9];e9=e9+1;(C9)[0x08]=Yc[0X006];e9=e9+1;Sy=0X6;(C9)[Sy]=C9[Sy](C9[Sy+0x1],C9[Sy+2]);do f9=Sy;end;do Yc=bc[e9];end;e9=e9+1;do C9[6]=C9[6][Yc[1]];end;e9=e9+1;e9=e9+0X01;Yc=bc[e9];do e9=e9+1;end;do e9=Yc[0X00005];end;end;else if not(dc>=0Xa)then if C9[Yc[5]]==Yc[0x1]then else do e9=Yc[0X0002];end;end;else if dc==11 then(C9)[4]=o9[Yc[6]];do Yc=bc[e9];end;do e9=e9+0X1;end;do(C9)[0X00005]=o9[Yc[0X06]];end;e9=e9+0x001;e9=e9+1;local Y8=(3);do Yc=bc[e9];end;do e9=e9+0x1;end;(C9)[0X6]=Yc[6];local B8=4;do Yc=bc[e9];end;e9=e9+0X1;(C9)[0X7]=Yc[0X6];Yc=bc[e9];e9=e9+0x1;C9[8]=Yc[6];e9=e9+0X1;local r8=5;do if r8==0 then else f9=B8+r8-1;end;end;local o8,f8=nil,nil;if r8~=1 then o8,f8=q3(C9[B8](E(C9,B8+1,f9)));else o8,f8=q3(C9[B8]());end;do if Y8==0x01 then f9=B8-0x00001;else do if Y8==0x000 then o8=o8+B8-1;f9=o8;else o8=B8+Y8-0X2;f9=o8+0X001;end;end;local r7=0X0;do for Gr=B8,o8 do r7=r7+0X1;do(C9)[Gr]=f8[r7];end;end;end;end;end;e9=e9+0X1;e9=e9+1;e9=e9+1;(C9)[3]=C9[5];e9=e9+0X1;C9[2]=C9[0X04];Yc=bc[e9];e9=e9+1;e9=Yc[5];else C9[4]=o9[Yc[0X006]];do e9=e9+0x1;end;e9=e9+1;Yc=bc[e9];local XP=(0X4);e9=e9+0X01;C9[0X5]=Yc[0X6];Yc=bc[e9];e9=e9+0X1;C9[0X6]=Yc[0X6];e9=e9+0x1;(C9[XP])(C9[XP+1],C9[XP+0x2]);f9=XP-0X1;e9=e9+0X1;e9=e9+1;Yc=bc[e9];e9=e9+0X1;do(C9)[4]=o9[Yc[0x0006]];end;e9=e9+1;e9=e9+1;Yc=bc[e9];e9=e9+0x001;do(C9)[5]=Yc[0X00006];end;e9=e9+1;XP=4;C9[XP]=C9[XP](C9[XP+0X1]);do f9=XP;end;e9=e9+1;do e9=e9+0X0001;end;Yc=bc[e9];e9=e9+0X1;if C9[0X004]==Yc[1]then e9=Yc[2];end;end;end;end;end;else if not(dc<0X3)then if dc>=4 then if dc~=5 then do(C9)[2]=o9[Yc[0X006]];end;e9=e9+0X01;e9=e9+0X1;Yc=bc[e9];e9=e9+0X1;C9[0X02]=C9[2][Yc[0X1]];do e9=e9+0X1;end;e9=e9+0X1;Yc=bc[e9];e9=e9+1;if not(C9[0X0002])then else do e9=Yc[5];end;end;else C9[4]=o9[Yc[6]];e9=e9+0X1;e9=e9+0X01;Yc=bc[e9];e9=e9+1;(C9[0x4])[Yc[6]]=Yc[1];do Yc=bc[e9];end;e9=e9+0X1;C9[0x0004]=o9[Yc[0X6]];Yc=bc[e9];do e9=e9+0X00001;end;C9[0X0004]=C9[4][Yc[1]];e9=e9+1;e9=e9+0x1;Yc=bc[e9];do e9=e9+0X01;end;do(C9)[0X4]=C9[0X04][Yc[0X1]];end;do Yc=bc[e9];end;e9=e9+0x1;C9[4]=C9[0X04][Yc[1]];e9=e9+1;e9=e9+1;Yc=bc[e9];e9=e9+0X00001;if not(not(Yc[0X0006]<=C9[4]))then else e9=Yc[0X2];end;end;else do(C9)[2]=o9[Yc[6]];end;Yc=bc[e9];do e9=e9+0X1;end;C9[2]=C9[0X2][Yc[1]];Yc=bc[e9];do e9=e9+1;end;do if not(C9[2])then else e9=Yc[0X0005];end;end;end;else if dc>=0X1 then if dc==2 then do C9[Yc[0x2]]=o9[Yc[0X0006]];end;else do C9[0x2]=o9[Yc[6]];end;e9=e9+1;e9=e9+1;Yc=bc[e9];do e9=e9+0X1;end;do(C9)[0X3]=Yc[0x006];end;local L0=(0x0002);e9=e9+0X1;do(C9)[L0]=C9[L0](C9[L0+0X1]);end;do f9=L0;end;do e9=e9+1;end;e9=e9+0x1;Yc=bc[e9];e9=e9+0x01;do if not(not C9[0X00002])then else e9=Yc[0X005];end;end;end;else C9[0x4]=o9[Yc[0X6]];e9=e9+1;do e9=e9+0X1;end;e9=e9+0X1;(C9)[0x5]=C9[3];e9=e9+1;local Sh=0x4;C9[Sh]=C9[Sh](C9[Sh+1]);f9=Sh;Yc=bc[e9];e9=e9+1;if C9[4]==Yc[1]then else e9=Yc[0x2];end;end;end;end;end;end;end;end;end);do if not(k9)then if V(h9)~="string"then(q)(h9,0);else if not(r(h9,'\097\116\116\101\109p\116 to\032\121iel\100\032\097\099ros\115\032\109etam\101t\104o\100\047C\037\045\099\097l\108\032\098ou\110da\114\121'))then else return coroutine.yield();end;if r(h9,'^\046-\058%d\043: ')then q("Luraph Script:"..(Qc[e9-0x1]or"(\105nterna\108\041")..'\058 '..u(h9),0);else(q)(h9,0x0000);end;end;else if h9 then if v9~=1 then return C9[l9](E(C9,l9+1,f9));else return C9[l9]();end;elseif not(l9)then else return E(C9,l9,v9);end;end;end;end;end;end;else if Sc~=0X9A then ic=function(...)local JY=(0);local IY={};local dY=(k and k()or _ENV);local sY=({[1]=IY,[2]=Vc});local mY,hY=q3(...);mY=mY-1;local qY=1;for mI=0X0,mY do if ac>mI then do IY[mI]=hY[mI+1];end;else break;end;end;local DY=(dY==H and fc or dY);if not nc then hY=nil;elseif Ac then IY[ac]={n=mY>=ac and mY-ac+0x1 or 0,E(hY,ac+0X1,mY+1)};end;if DY~=dY then if not(s)then do _ENV=DY;end;else s(ic,DY);end;end;local QY,yY,AY,fY=c(function()while true do local Jf=bc[qY];local Yf=Jf[3];qY=qY+0X01;if not(Yf>=6)then if not(Yf<0X3)then do if not(Yf<0X4)then if Yf==5 then IY[Jf[0X2]]=DY[Jf[6]];else local W5=Uc[Jf[0X5]];local i5=(W5[5]);local y5=(nil);local g5=(#i5);do if not(g5>0X0)then else y5={};do for KY=0X1,g5 do local TY=(i5[KY]);if TY[1]==0x0 then y5[KY-0x0001]={IY,TY[2]};else do y5[KY-1]=jc[TY[0X2]];end;end;end;end;(S)(Lc,y5);end;end;(IY)[Jf[0x002]]=e3(W5,y5,DY);end;else local lZ=(Jf[0X2]);local OZ=(Jf[4]-1)*0X32;local jZ=(IY[lZ]);for aB=0x0001,Jf[0x5]do jZ[OZ+aB]=IY[lZ+aB];end;end;end;else if not(Yf>=1)then IY[Jf[0x02]]={E({},0x001,Jf[0X05])};else if Yf~=0X002 then local ig=(Jf[2]);local cg,Vg=IY[ig]();do if not(cg)then else do qY=Jf[5];end;IY[ig+0X0003]=Vg;end;end;else repeat local Pb,Ab=Lc,IY;if not(#Pb>0)then else local Qq=({});do for Kb,kb in M,Pb do do for O6,b6 in M,kb do if not(b6[0x00001]==Ab and b6[2]>=0x0)then else local uw=b6[0x02];if not(not Qq[uw])then else do(Qq)[uw]={Ab[uw]};end;end;(b6)[0X1]=Qq[uw];(b6)[0x2]=0X1;end;end;end;end;end;end;until true;local ft=(Jf[2]);return false,ft,ft+Jf[0x005]-2;end;end;end;else if not(Yf>=0X9)then if Yf<0X7 then else if Yf~=0X8 then for Cf=Jf[0X2],Jf[5]do IY[Cf]=nil;end;else(IY)[0]=DY[Jf[6]];local D2=0X0000;do qY=qY+1;end;qY=qY+1;Jf=bc[qY];qY=qY+0X1;local L2=(IY[0x0]);(IY)[D2+1]=L2;(IY)[D2]=L2[Jf[1]];Jf=bc[qY];qY=qY+0X1;(IY)[2]=Jf[6];qY=qY+0x1;D2=0X0;(IY)[D2]=IY[D2](IY[D2+0X1],IY[D2+0X02]);JY=D2;qY=qY+1;do qY=qY+1;end;Jf=bc[qY];qY=qY+1;(IY)[1]=DY[Jf[6]];Jf=bc[qY];do qY=qY+1;end;do(IY)[0X1]=IY[1][Jf[0X1]];end;do qY=qY+1;end;qY=qY+1;Jf=bc[qY];local Z2=(Uc[Jf[5]]);qY=qY+0X01;local t2=nil;local f2=(Z2[5]);local F2=#f2;if F2>0 then t2={};do for pY=0x001,F2 do local UY=(f2[pY]);if UY[1]~=0 then t2[pY-0X1]=jc[UY[2]];else t2[pY-1]={IY,UY[2]};end;end;end;S(Lc,t2);end;IY[2]=e3(Z2,t2,DY);qY=qY+0x1;do D2=0x1;end;IY[D2](IY[D2+1]);do JY=D2-1;end;qY=qY+0X01;qY=qY+1;do qY=qY+1;end;repeat local XJ,HJ=Lc,(IY);if not(#XJ>0X0)then else local ks={};for OB,FB in M,XJ do for j1,s1 in M,FB do if s1[0X1]==HJ and s1[0x2]>=0X00000 then local O4=(s1[0X2]);if not(not ks[O4])then else do ks[O4]={HJ[O4]};end;end;(s1)[1]=ks[O4];do s1[0x2]=0x1;end;end;end;end;end;until true;do return;end;end;end;else if not(Yf>=0XB)then if Yf==0xa then IY[Jf[0x2]]=J(IY[Jf[0X5]],IY[Jf[4]]);else(IY)[Jf[2]]=Jf[6];end;else if Yf~=12 then local Sw=(Jf[0X02]);for iO=Sw,Sw+(Jf[0X00005]-1)do IY[iO]=hY[ac+(iO-Sw)+0X1];end;else do qY=Jf[5];end;end;end;end;end;end;end);if not(QY)then if V(yY)=="\115t\114\105ng"then if r(yY,"\097t\116e\109p\116 to \121i\101ld\032\097c\114\111\115s \109etame\116ho\100/\067\037\045c\097ll\032\098\111u\110\100a\114y")then return coroutine.yield();end;if not(r(yY,"^.-:%d+: "))then q(yY,0X0);else(q)("\076\117\114\097p\104 \083\099\114ip\116:"..(Qc[qY-0x00001]or"(internal)")..':\032'..u(yY),0X0000);end;else q(yY,0);end;else if yY then if fY==0X1 then return IY[AY]();else return IY[AY](E(IY,AY+1,JY));end;elseif not(AY)then else return E(IY,AY,fY);end;end;end;else ic=function(...)local J4,N4=0X1,{};local H4=((k and k()or _ENV));local E4=(H4==H and fc or H4);local A4,Z4=q3(...);local z4={[2]=Vc,[1]=N4};A4=A4-0X001;for nn=0,A4 do do if not(ac>nn)then break;else N4[nn]=Z4[nn+0x00001];end;end;end;local m4=0;if not nc then Z4=nil;elseif not(Ac)then else(N4)[ac]={n=A4>=ac and A4-ac+1 or 0,E(Z4,ac+0X0001,A4+1)};end;if E4~=H4 then if s then s(ic,E4);else do _ENV=E4;end;end;end;local e4,x4,Y4,F4=c(function()while true do local RG=bc[J4];local NG=(RG[0X3]);J4=J4+1;if NG<11 then do if NG>=5 then do if NG>=0x8 then if NG<9 then do if N4[RG[2]]then J4=RG[0X5];end;end;else if NG~=10 then N4[RG[0X002]]=E4[RG[0X0006]];else N4[1]=E4[RG[6]];RG=bc[J4];J4=J4+0X01;(N4)[0X2]=E4[RG[6]];RG=bc[J4];J4=J4+0X0001;(N4)[0x002]=N4[0X2][RG[1]];local ql=(1);J4=J4+0X0001;N4[ql]=N4[ql](N4[ql+0x1]);m4=ql;J4=J4+1;J4=J4+0x001;RG=bc[J4];J4=J4+1;if not(N4[0X1])then else J4=RG[0X05];end;end;end;else do if not(NG>=0X6)then(N4)[0]=E4[RG[0X6]];J4=J4+1;do J4=J4+0X0001;end;RG=bc[J4];J4=J4+0X1;(N4)[0]=N4[0X00][RG[0x1]];J4=J4+0X1;J4=J4+0X01;RG=bc[J4];J4=J4+1;N4[0X0]=N4[0X00][RG[0X01]];do RG=bc[J4];end;J4=J4+0X1;(N4)[1]=E4[RG[6]];do RG=bc[J4];end;J4=J4+0x1;(N4)[1]=N4[1][RG[1]];J4=J4+0X1;J4=J4+0X1;RG=bc[J4];J4=J4+0X1;if not(N4[0X00]<N4[0X00001])then J4=RG[2];end;else if NG==0X07 then do for w4=RG[2],RG[0X5]do(N4)[w4]=nil;end;end;else if not(N4[RG[0X0005]]<=N4[RG[4]])then J4=RG[0x2];end;end;end;end;end;end;else do if NG<0x2 then do if NG==0X1 then local cA=(jc[0]);N4[0]=cA[0X1][cA[0X2]];do RG=bc[J4];end;local NA=0x0;J4=J4+1;local kA=(N4[0X0]);(N4)[NA+1]=kA;(N4)[NA]=kA[RG[0X001]];J4=J4+1;NA=0;N4[NA](N4[NA+1]);m4=NA-0X1;J4=J4+0X0001;J4=J4+0X1;do J4=J4+0X00001;end;repeat local KL,YL=Lc,(N4);if#KL>0 then local pd={};do for Qt,xt in M,KL do for rh,Th in M,xt do if not(Th[0X1]==YL and Th[2]>=0X0)then else local Yb=(Th[2]);if not(not pd[Yb])then else do pd[Yb]={YL[Yb]};end;end;(Th)[1]=pd[Yb];Th[2]=1;end;end;end;end;end;until true;return;else E4[RG[0X6]]=N4[RG[0X2]];end;end;else if not(NG>=0x003)then N4[RG[0X2]]=o(N4[RG[5]],N4[RG[0X00004]]);else do if NG==0X4 then N4[RG[0X002]]=N4[RG[5]]>N4[RG[4]];else do N4[RG[2]]=N4[RG[5]]+N4[RG[4]];end;end;end;end;end;end;end;end;else if not(NG<0X11)then if NG<20 then do if NG>=18 then if NG~=19 then(N4)[RG[2]]=N4[RG[5]]-N4[RG[0X4]];else J4=RG[5];end;else(N4)[0]=E4[RG[0X06]];J4=J4+1;local GE=0;J4=J4+0X00001;RG=bc[J4];do J4=J4+1;end;(N4)[1]=RG[0X6];J4=J4+1;(N4)[GE]=N4[GE](N4[GE+1]);do m4=GE;end;J4=J4+1;J4=J4+0X1;RG=bc[J4];do J4=J4+0X1;end;if not(not N4[0])then else J4=RG[0X5];end;end;end;else do if NG>=21 then if NG==22 then repeat local fO,bO=Lc,(N4);if not(#fO>0X00000)then else local H8=({});do for pB,xB in M,fO do for W0,j0 in M,xB do if not(j0[0X1]==bO and j0[2]>=0x0)then else local QI=j0[2];if not(not H8[QI])then else do(H8)[QI]={bO[QI]};end;end;do(j0)[1]=H8[QI];end;(j0)[2]=0X00001;end;end;end;end;end;until true;return;else local gz=Uc[RG[0X0005]];local iz=nil;local pz=gz[0X5];local Jz=(#pz);if Jz>0x0 then iz={};for GP=0x1,Jz do local MP=(pz[GP]);if MP[0x1]==0X0 then do(iz)[GP-0X0001]={N4,MP[2]};end;else(iz)[GP-1]=jc[MP[0X2]];end;end;(S)(Lc,iz);end;(N4)[RG[2]]=e3(gz,iz,E4);end;else local oW=(jc[0X0]);N4[0]=oW[0x001][oW[2]];local VW=N4[0];RG=bc[J4];J4=J4+1;local aW=(0X000);N4[aW+0X1]=VW;(N4)[aW]=VW[RG[1]];do J4=J4+1;end;aW=0;(N4[aW])(N4[aW+1]);m4=aW-0X1;RG=bc[J4];J4=J4+0X1;do J4=RG[5];end;end;end;end;else if not(NG>=0x000E)then if NG>=12 then if NG~=0xd then(N4)[RG[0X2]]=RG[0X0006];else(N4)[RG[0x2]]={E({},1,RG[0X5])};end;else N4[0X002]=E4[RG[0X006]];J4=J4+1;J4=J4+0X1;do RG=bc[J4];end;J4=J4+0X1;(N4)[0x2]=N4[2][RG[1]];J4=J4+1;do J4=J4+0X1;end;RG=bc[J4];J4=J4+0X1;if not(not N4[0x2])then else J4=RG[0X5];end;end;else if NG<0X00f then do N4[0]=E4[RG[0X6]];end;J4=J4+0X1;J4=J4+1;do RG=bc[J4];end;J4=J4+0X1;N4[0]=N4[0][RG[0X001]];do RG=bc[J4];end;do J4=J4+0X00001;end;if not N4[0]then do J4=RG[5];end;end;else do if NG~=16 then else do(N4)[0]=E4[RG[0X6]];end;J4=J4+0x1;J4=J4+0X1;RG=bc[J4];local DL=Uc[RG[0X5]];local pL=DL[5];J4=J4+0x01;local VL=nil;local PL=(0);local EL=(#pL);if not(EL>0)then else VL={};do for kt=1,EL do local ct=pL[kt];if ct[1]~=0X0 then do(VL)[kt-0X1]=jc[ct[2]];end;else(VL)[kt-0X001]={N4,ct[2]};end;end;end;S(Lc,VL);end;(N4)[1]=e3(DL,VL,E4);J4=J4+1;(N4[PL])(N4[PL+1]);m4=PL-0x01;RG=bc[J4];do J4=J4+1;end;J4=RG[0X0005];end;end;end;end;end;end;end;end);if not(e4)then if V(x4)=='\115tri\110\103'then if not(r(x4,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if r(x4,"^.-:%d+: ")then(q)("Luraph Script:"..(Qc[J4-1]or"(internal)")..": "..u(x4),0);else(q)(x4,0);end;end;else q(x4,0);end;else if x4 then if F4==0x001 then return N4[Y4]();else do return N4[Y4](E(N4,Y4+0X1,m4));end;end;elseif not(Y4)then else return E(N4,Y4,F4);end;end;end;end;end;end;else if not(Sc<151)then if Sc~=0X0098 then ic=function(...)local PY,mY=1,({});local OY=({[2]=Vc,[1]=mY});local yY=((k and k()or _ENV));local gY,WY=q3(...);do gY=gY-0X1;end;do for vx=0X0,gY do do if ac>vx then mY[vx]=WY[vx+1];else break;end;end;end;end;local JY=(yY==H and fc or yY);local LY=(0);do if not nc then WY=nil;elseif not(Ac)then else mY[ac]={n=gY>=ac and gY-ac+0X1 or 0X0000,E(WY,ac+1,gY+0X1)};end;end;if JY==yY then else if not(s)then _ENV=JY;else(s)(ic,JY);end;end;local VY,RY,SY,DY=c(function()while true do local pf=(bc[PY]);local Mf=pf[3];PY=PY+0X1;if not(Mf>=14)then if Mf>=7 then if Mf<0Xa then if Mf>=0x8 then if Mf==0X9 then local FY=(Uc[pf[0x05]]);local bY=FY[5];local HY=(nil);local MY=(#bY);if not(MY>0)then else HY={};for Dy=0X1,MY do local By=(bY[Dy]);do if By[1]==0 then HY[Dy-0X1]={mY,By[2]};else(HY)[Dy-1]=jc[By[0X2]];end;end;end;S(Lc,HY);end;mY[pf[0X0002]]=e3(FY,HY,JY);else(mY)[pf[2]]=J(mY[pf[5]],mY[pf[4]]);end;else mY[pf[2]]=JY[pf[0X06]];end;else do if not(Mf>=0Xc)then if Mf~=11 then do mY[pf[0X2]]=OY[pf[0x5]];end;else for ZI=pf[2],pf[5]do mY[ZI]=nil;end;end;else if Mf~=0xD then do(mY)[0X02]=JY[pf[0X006]];end;PY=PY+0X01;PY=PY+1;PY=PY+0X00001;mY[2]=mY[2][mY[0X001]];PY=PY+1;do PY=PY+1;end;do pf=bc[PY];end;PY=PY+0X001;PY=pf[0X0005];else repeat local nr,Nr=Lc,(mY);do if not(#nr>0x00000)then else local kG=({});for mz,Cz in M,nr do for P9,V9 in M,Cz do if V9[0x01]==Nr and V9[0X002]>=0X00 then local YG=(V9[2]);if not(not kG[YG])then else kG[YG]={Nr[YG]};end;V9[0X001]=kG[YG];(V9)[0x02]=1;end;end;end;end;end;until true;return;end;end;end;end;else if not(Mf<0X3)then if Mf<5 then if Mf~=0X4 then do(mY)[0x2]=JY[pf[6]];end;PY=PY+1;do PY=PY+0X1;end;do pf=bc[PY];end;PY=PY+0X1;if mY[0X2]then do PY=pf[0X0005];end;end;else(mY)[pf[2]]=mY[pf[0X5]];end;else if Mf==0x6 then do mY[0X2]=JY[pf[0X0006]];end;do PY=PY+0X1;end;PY=PY+0X1;do pf=bc[PY];end;PY=PY+0x0001;if not(not mY[0X2])then else PY=pf[0x5];end;else repeat local ez,Iz=Lc,(mY);if not(#ez>0)then else local bO=({});do for UJ,BJ in M,ez do do for GY,fY in M,BJ do do if not(fY[1]==Iz and fY[0X00002]>=0)then else local TV=(fY[0X2]);if not bO[TV]then(bO)[TV]={Iz[TV]};end;(fY)[0X001]=bO[TV];do fY[2]=1;end;end;end;end;end;end;end;end;until true;return false,pf[2],LY;end;end;else if not(Mf>=0X1)then do mY[2]=JY[pf[6]];end;PY=PY+1;PY=PY+1;do pf=bc[PY];end;PY=PY+1;if not mY[0X2]then do PY=pf[5];end;end;else do if Mf==0X2 then if mY[pf[5]]==pf[1]then else do PY=pf[2];end;end;else local ax=jc[pf[5]];mY[pf[0X002]]=ax[1][ax[2]];end;end;end;end;end;else if not(Mf>=21)then if not(Mf<0x11)then if not(Mf>=19)then if Mf~=18 then if mY[pf[0X005]]~=pf[0X1]then else do PY=pf[0X2];end;end;else do mY[pf[2]]=mY[pf[5]]%mY[pf[4]];end;end;else if Mf~=0x000014 then mY[pf[2]]=pf[6];else if mY[pf[5]]~=mY[pf[4]]then else do PY=pf[0X2];end;end;end;end;else if Mf>=0xF then if Mf~=16 then mY[pf[2]]=pf[0x6];else(mY)[0X2]=JY[pf[0X0006]];do PY=PY+1;end;PY=PY+1;pf=bc[PY];PY=PY+1;if mY[0X0]~=mY[2]then do PY=pf[0x2];end;end;end;else local Ll=jc[1];(mY)[0x00002]=Ll[1][Ll[0x002]];PY=PY+1;local Wl=2;do mY[0x3]=mY[0X0];end;PY=PY+0X1;do mY[0X4]=mY[0X1];end;PY=PY+1;local Fl=3;LY=Wl+Fl-1;repeat local mf,lf=Lc,(mY);if not(#mf>0)then else local Pw=({});do for ks,us in M,mf do for S1,s1 in M,us do if not(s1[1]==lf and s1[0x2]>=0x0)then else local K9=(s1[0X002]);if not Pw[K9]then Pw[K9]={lf[K9]};end;(s1)[1]=Pw[K9];(s1)[2]=1;end;end;end;end;end;until true;do return true,Wl,Fl;end;end;end;else do if Mf>=0x19 then if Mf<27 then if Mf~=26 then mY[0x002]=JY[pf[6]];do PY=PY+0X1;end;PY=PY+1;pf=bc[PY];PY=PY+1;(mY)[0x2]=mY[2][pf[0x1]];PY=PY+0x1;do PY=PY+0X01;end;pf=bc[PY];PY=PY+0x1;if mY[2]then do PY=pf[5];end;end;else mY[pf[0x0002]]={E({},1,pf[0X05])};end;else if Mf==28 then if not(not mY[pf[2]])then else PY=pf[0X005];end;else if mY[pf[5]]==mY[pf[0X4]]then else do PY=pf[2];end;end;end;end;else do if Mf<23 then if Mf~=0X16 then do PY=pf[0X5];end;else local m2=mY[pf[5]];local O2=pf[2];mY[O2+1]=m2;mY[O2]=m2[pf[1]];end;else if Mf==0X18 then else repeat local vp,Up=Lc,(mY);if#vp>0 then local II=({});for TI,yI in M,vp do for EW,NW in M,yI do if not(NW[0x0001]==Up and NW[2]>=0)then else local qJ=NW[0X2];if not II[qJ]then II[qJ]={Up[qJ]};end;NW[0X1]=II[qJ];NW[0X2]=0X001;end;end;end;end;until true;local Hx=(pf[0x00002]);do return false,Hx,Hx;end;end;end;end;end;end;end;end;end;end);if VY then if RY then if DY~=0X1 then return mY[SY](E(mY,SY+1,LY));else return mY[SY]();end;elseif SY then return E(mY,SY,DY);end;else do if V(RY)~='s\116ri\110\103'then(q)(RY,0X00000);else do if not(r(RY,"a\116temp\116\032t\111 \121i\101\108\100 \097\099\114\111\115s\032\109\101tam\101th\111d\047\067%-\099\097\108l\032bo\117\110d\097r\121"))then else return coroutine.yield();end;end;if r(RY,"^.-:%\100\043\058\032")then q('\076\117r\097\112h\032\083c\114\105\112\116\058'..(Qc[PY-1]or"(internal)")..": "..u(RY),0);else q(RY,0);end;end;end;end;end;else do ic=function(...)local bz=(0X00000);local jz,Tz=1,{};local Yz={[1]=Tz,[2]=Vc};local mz=(k and k()or _ENV);local Rz,zz=q3(...);local hz=(mz==H and fc or mz);Rz=Rz-1;do for YE=0,Rz do if ac>YE then(Tz)[YE]=zz[YE+1];else break;end;end;end;if not nc then zz=nil;elseif not(Ac)then else do Tz[ac]={n=Rz>=ac and Rz-ac+1 or 0,E(zz,ac+0x1,Rz+1)};end;end;if hz==mz then else if not(s)then do _ENV=hz;end;else(s)(ic,hz);end;end;local Pz,nz,oz,ez=c(function()do while true do local Hk=(bc[jz]);local wk=(Hk[0X00003]);jz=jz+1;do if not(wk<0xd)then if wk>=0X13 then do if not(wk>=0X16)then do if not(wk<0x0014)then if wk==0X15 then local CA=Uc[Hk[5]];local jA=(CA[5]);local GA=nil;local FA=(#jA);if not(FA>0)then else GA={};do for cM=1,FA do local WM=jA[cM];if WM[1]~=0 then GA[cM-0X001]=jc[WM[0X002]];else do(GA)[cM-1]={Tz,WM[2]};end;end;end;end;S(Lc,GA);end;do(Tz)[Hk[2]]=e3(CA,GA,hz);end;else end;else do if Tz[Hk[2]]then jz=Hk[5];end;end;end;end;else if not(wk<24)then if wk==0X000019 then local d7=Hk[2];local S7=Tz[d7];local U7=(Hk[4]-1)*50;for wQ=0x1,Hk[5]do S7[U7+wQ]=Tz[d7+wQ];end;else if Tz[Hk[0X5]]==Tz[Hk[0X004]]then jz=Hk[0x2];end;end;else if wk~=0X17 then do repeat local CZ,IZ=Lc,(Tz);if#CZ>0x0 then local Jh={};for aZ,VZ in M,CZ do do for cZ,eZ in M,VZ do do if not(eZ[0X1]==IZ and eZ[0X2]>=0)then else local d1=eZ[2];if not(not Jh[d1])then else Jh[d1]={IZ[d1]};end;eZ[0X1]=Jh[d1];do(eZ)[0x2]=0X00001;end;end;end;end;end;end;end;until true;end;return;else(Tz)[0x9]=nil;Hk=bc[jz];jz=jz+0x1;(hz)[Hk[6]]=Tz[9];jz=jz+0X01;(Tz)[0x00009]=false;Hk=bc[jz];jz=jz+0X1;do(hz)[Hk[6]]=Tz[9];end;jz=jz+1;do Tz[9]=false;end;Hk=bc[jz];jz=jz+0X1;(hz)[Hk[0X6]]=Tz[9];jz=jz+1;do Tz[0X9]=false;end;Hk=bc[jz];jz=jz+1;(hz)[Hk[6]]=Tz[9];Hk=bc[jz];jz=jz+1;if not(not Tz[0x00001])then else jz=Hk[0X00005];end;end;end;end;end;else if not(wk>=0X00010)then do if wk<14 then(Tz)[0X09]=hz[Hk[6]];local GT=0X009;Hk=bc[jz];jz=jz+0x01;do(Tz)[0XA]=Hk[6];end;do jz=jz+0x1;end;(Tz)[11]=Tz[8];jz=jz+1;Tz[GT](Tz[GT+0X00001],Tz[GT+2]);bz=GT-1;jz=jz+0X1;do jz=jz+0X1;end;do Hk=bc[jz];end;jz=jz+1;jz=Hk[0X5];else if wk==15 then(Tz)[Hk[2]]=Tz[Hk[0x05]][Tz[Hk[4]]];else Tz[Hk[0X002]]=w(Tz[Hk[0X5]],Tz[Hk[0X4]]);end;end;end;else if not(wk>=0X11)then do Tz[Hk[2]]=T(Tz[Hk[5]],Tz[Hk[0X4]]);end;else do if wk~=0X12 then Tz[Hk[0x2]]={E({},0X1,Hk[0X0005])};else Tz[Hk[2]]=Tz[Hk[0X5]];end;end;end;end;end;else if not(wk<0X006)then if not(wk<0x00009)then if wk<11 then do if wk~=0Xa then do if not(Tz[Hk[0X5]]<Tz[Hk[0x4]])then else jz=Hk[0x2];end;end;else for Zy=Hk[2],Hk[0X05]do Tz[Zy]=nil;end;end;end;else if wk==12 then(Tz)[Hk[2]]=-Tz[Hk[0X5]];else(Tz)[Hk[2]]={};end;end;else if wk>=7 then do if wk==8 then(Tz)[7]={};do Hk=bc[jz];end;jz=jz+1;(Tz[7])[Hk[0X00006]]=Hk[1];Hk=bc[jz];jz=jz+1;jz=Hk[5];else(Tz)[0x7]=Tz[0X7][Hk[1]];jz=jz+0X001;jz=jz+0X1;jz=jz+0X1;(Tz)[6]=Tz[0x06][Tz[0X7]];local p9=(nil);Hk=bc[jz];jz=jz+1;do(hz)[Hk[0X6]]=Tz[6];end;local W9=7;Hk=bc[jz];jz=jz+1;Tz[0X6]=Tz[0][Hk[1]];Hk=bc[jz];do jz=jz+1;end;(Tz)[7]=hz[Hk[0X0006]];jz=jz+0X001;do jz=jz+0x00001;end;do Hk=bc[jz];end;jz=jz+0X01;local T9,I9=3,(Uc[Hk[0X005]]);local n9=I9[0X5];local O9=#n9;do if not(O9>0X0000)then else p9={};do for pB=1,O9 do local EB=(n9[pB]);if EB[0X0001]~=0x0000 then(p9)[pB-1]=jc[EB[2]];else p9[pB-0X1]={Tz,EB[0X2]};end;end;end;S(Lc,p9);end;end;do Tz[0x08]=e3(I9,p9,hz);end;jz=jz+1;local t9=2;if t9~=0 then bz=W9+t9-1;end;local x9,b9=nil,nil;if t9==0X01 then x9,b9=q3(Tz[W9]());else x9,b9=q3(Tz[W9](E(Tz,W9+1,bz)));end;do if T9==1 then bz=W9-1;else if T9~=0 then x9=W9+T9-0X2;bz=x9+0X01;else x9=x9+W9-0X1;bz=x9;end;local qe=0;for SD=W9,x9 do do qe=qe+0X1;end;Tz[SD]=b9[qe];end;end;end;jz=jz+0X1;jz=jz+1;Hk=bc[jz];jz=jz+0x1;if Tz[0x7]then do jz=Hk[5];end;end;end;end;else(Tz)[Hk[0X00002]]=Hk[0X6];end;end;else if not(wk<3)then if not(wk<4)then if wk~=5 then(Tz)[Hk[0X02]]=Tz[Hk[0X5]]-Tz[Hk[0X00004]];else Tz[0x0006]=hz[Hk[6]];do Hk=bc[jz];end;jz=jz+0X1;(Tz)[0x6]=Tz[6][Hk[1]];do jz=jz+1;end;jz=jz+1;Hk=bc[jz];jz=jz+1;if not(not Tz[6])then else jz=Hk[0X5];end;end;else jz=Hk[0X5];end;else do if not(wk>=0X0001)then(Tz)[Hk[0X2]]=hz[Hk[0X06]];else do if wk~=0X02 then local Ov,Xv=9,Tz[0X1];(Tz)[Ov+1]=Xv;Tz[Ov]=Xv[Hk[1]];jz=jz+1;Ov=0X0009;(Tz[Ov])(Tz[Ov+1]);do bz=Ov-1;end;Hk=bc[jz];jz=jz+1;do jz=Hk[0x5];end;else do(Tz)[6]=hz[Hk[6]];end;jz=jz+1;(Tz)[0X007]=Tz[0X0001];Hk=bc[jz];jz=jz+0X1;do if not(Tz[7])then else jz=Hk[0x0005];end;end;end;end;end;end;end;end;end;end;end;end;end);do if Pz then if nz then if ez==1 then return Tz[oz]();else return Tz[oz](E(Tz,oz+1,bz));end;elseif not(oz)then else return E(Tz,oz,ez);end;else if V(nz)=='\115t\114i\110g'then if r(nz,"att\101mpt\032to \121\105\101ld\032a\099\114\111\115\115 m\101\116a\109\101\116h\111d\047\067\037-ca\108\108\032bo\117n\100\097\114y")then do return coroutine.yield();end;end;if r(nz,"^\046\045\058%\100+\058 ")then q('L\117rap\104 Sc\114ipt\058'..(Qc[jz-0X1]or"(internal)")..":\032"..u(nz),0);else q(nz,0);end;else q(nz,0);end;end;end;end;end;end;else if Sc~=150 then ic=function(...)local RJ=(0x0);local MJ=1;local rJ=({});local PJ=({[2]=Vc,[1]=rJ});local zJ=((k and k()or _ENV));local VJ,aJ=q3(...);VJ=VJ-1;local hJ=((zJ==H and fc or zJ));for kc=0x0,VJ do if ac>kc then do(rJ)[kc]=aJ[kc+0x1];end;else do break;end;end;end;if not nc then aJ=nil;elseif Ac then(rJ)[ac]={n=VJ>=ac and VJ-ac+1 or 0X00,E(aJ,ac+0X00001,VJ+1)};end;do if hJ~=zJ then if s then(s)(ic,hJ);else _ENV=hJ;end;end;end;local qJ,IJ,eJ,JJ=c(function()while true do local f8=(bc[MJ]);local r8=(f8[3]);MJ=MJ+1;do if not(r8>=0XD)then if r8<0X6 then if not(r8>=3)then if not(r8>=0X0001)then(rJ)[0x00000]=hJ[f8[0X6]];do MJ=MJ+0x001;end;RJ=0;(rJ)[RJ]=rJ[RJ]();MJ=MJ+1;MJ=MJ+0X00001;f8=bc[MJ];MJ=MJ+1;if rJ[0]then MJ=f8[5];end;else if r8~=2 then rJ[f8[0x00002]]=rJ[f8[0X5]]<rJ[f8[0X00004]];else rJ[f8[0X2]]=f8[6];end;end;else if r8>=0X4 then if r8~=0x005 then rJ[0X0]=hJ[f8[6]];local I_=0;f8=bc[MJ];MJ=MJ+1;rJ[1]=f8[0X6];MJ=MJ+0x1;rJ[I_]=rJ[I_](rJ[I_+1]);do RJ=I_;end;f8=bc[MJ];MJ=MJ+0X1;if not rJ[0X000]then MJ=f8[0X0005];end;else rJ[f8[2]]=hJ[f8[6]];end;else rJ[f8[0X2]]=rJ[f8[0x0005]]<=rJ[f8[0x4]];end;end;else if r8<9 then do if not(r8>=0X7)then local i0=(jc[0X0]);rJ[0]=i0[1][i0[2]];local z0=0;MJ=MJ+0X1;MJ=MJ+1;f8=bc[MJ];do MJ=MJ+1;end;local m0=rJ[0];(rJ)[z0+0X00001]=m0;(rJ)[z0]=m0[f8[1]];do MJ=MJ+1;end;do z0=0X0;end;rJ[z0]=rJ[z0](rJ[z0+0x0001]);RJ=z0;MJ=MJ+1;MJ=MJ+0x1;f8=bc[MJ];MJ=MJ+0x1;if not rJ[0]then do MJ=f8[5];end;end;else if r8==0X8 then repeat local dc,wc=Lc,rJ;if not(#dc>0)then else local QZ=({});for gI,NI in M,dc do for Sf,ff in M,NI do if ff[1]==wc and ff[0X02]>=0 then local jx=(ff[2]);if not(not QZ[jx])then else do QZ[jx]={wc[jx]};end;end;(ff)[1]=QZ[jx];(ff)[0X02]=0X1;end;end;end;end;until true;return;else do rJ[0X0]=hJ[f8[0X00006]];end;local CA=(0);f8=bc[MJ];MJ=MJ+1;rJ[0]=rJ[0X00][f8[0X1]];f8=bc[MJ];MJ=MJ+0X1;(rJ)[1]=f8[6];MJ=MJ+1;rJ[CA]=rJ[CA](rJ[CA+1]);RJ=CA;MJ=MJ+1;MJ=MJ+1;f8=bc[MJ];MJ=MJ+1;if not(not rJ[0X0])then else MJ=f8[0X0005];end;end;end;end;else if not(r8>=0xB)then if r8~=0x0000A then(rJ)[f8[2]]=rJ[f8[5]]>rJ[f8[0X004]];else rJ[0X0]=hJ[f8[0X0006]];MJ=MJ+0X0001;MJ=MJ+0X0001;do f8=bc[MJ];end;local HM=(Uc[f8[5]]);do MJ=MJ+1;end;local VM=(nil);local tM=(HM[0X005]);local LM=#tM;do if LM>0X0 then VM={};for zT=0x01,LM do local oT=(tM[zT]);if oT[1]==0 then VM[zT-1]={rJ,oT[0X2]};else VM[zT-0x1]=jc[oT[0X002]];end;end;S(Lc,VM);end;end;do rJ[1]=e3(HM,VM,hJ);end;local zM=0X0000;do MJ=MJ+0X1;end;(rJ[zM])(rJ[zM+0X001]);do RJ=zM-0X01;end;f8=bc[MJ];do MJ=MJ+1;end;rJ[0X0]=hJ[f8[0X6]];MJ=MJ+0X0001;do MJ=MJ+1;end;f8=bc[MJ];MJ=MJ+0X1;rJ[1]=f8[0X06];MJ=MJ+0X1;zM=0x0;(rJ)[zM]=rJ[zM](rJ[zM+0x00001]);do RJ=zM;end;MJ=MJ+1;MJ=MJ+1;f8=bc[MJ];MJ=MJ+1;if not rJ[0]then MJ=f8[5];end;end;else if r8==0xC then(rJ)[0X0]=hJ[f8[6]];do MJ=MJ+1;end;do MJ=MJ+0X1;end;f8=bc[MJ];do MJ=MJ+1;end;if not(rJ[0X0000])then else MJ=f8[5];end;else(rJ)[0X0]=hJ[f8[6]];do f8=bc[MJ];end;MJ=MJ+1;rJ[0X00000]=rJ[0x000][f8[0X0001]];f8=bc[MJ];MJ=MJ+1;if not rJ[0X0]then MJ=f8[5];end;end;end;end;end;else if r8<0X14 then if r8<0X10 then do if r8<0X0e then MJ=f8[0X00005];else if r8==15 then do rJ[0]=hJ[f8[6]];end;do MJ=MJ+0X0001;end;do MJ=MJ+0X0001;end;MJ=MJ+1;RJ=0X0000;(rJ)[RJ]=rJ[RJ]();f8=bc[MJ];do MJ=MJ+1;end;if rJ[0]<f8[1]then MJ=f8[0X2];end;else rJ[f8[0X002]]=f8[0X6];end;end;end;else if not(r8>=0X12)then if r8~=0x0011 then local Af=Uc[f8[0x00005]];local mf=Af[5];local ef,uf=#mf,nil;if not(ef>0X0)then else do uf={};end;for Ds=1,ef do local ps=mf[Ds];if ps[0X01]~=0 then uf[Ds-0X1]=jc[ps[0X2]];else uf[Ds-1]={rJ,ps[0X0002]};end;end;(S)(Lc,uf);end;(rJ)[f8[0x2]]=e3(Af,uf,hJ);else end;else if r8==19 then rJ[0]=hJ[f8[0X6]];do f8=bc[MJ];end;MJ=MJ+0X1;rJ[0x0]=rJ[0][f8[1]];MJ=MJ+1;MJ=MJ+1;f8=bc[MJ];do MJ=MJ+1;end;if not(not rJ[0])then else MJ=f8[5];end;else do rJ[f8[0X2]]=rJ[f8[5]]==rJ[f8[0X04]];end;end;end;end;else if r8<23 then if not(r8<21)then if r8~=0X016 then do rJ[f8[2]]=rJ[f8[5]]*rJ[f8[0X4]];end;else local Ss=f8[0X0002];for A9=Ss,Ss+(f8[0X5]-1)do rJ[A9]=aJ[ac+(A9-Ss)+1];end;end;else rJ[f8[0x2]]=v(rJ[f8[5]],rJ[f8[4]]);end;else do if r8<0x19 then if r8~=0X18 then for AU=f8[2],f8[0X5]do do(rJ)[AU]=nil;end;end;else(rJ)[f8[0x02]]={E({},0x1,f8[0X5])};end;else if r8~=26 then rJ[1]=hJ[f8[0X06]];MJ=MJ+1;MJ=MJ+0X1;f8=bc[MJ];MJ=MJ+1;if not(not rJ[0X1])then else do MJ=f8[0X005];end;end;else local CS,mS=f8[0X2],(f8[0X04]-1)*0x00032;local jS=rJ[CS];do for Jy=0X1,f8[0x5]do(jS)[mS+Jy]=rJ[CS+Jy];end;end;end;end;end;end;end;end;end;end;end);do if qJ then if IJ then if JJ~=1 then return rJ[eJ](E(rJ,eJ+0X1,RJ));else return rJ[eJ]();end;elseif not(eJ)then else do return E(rJ,eJ,JJ);end;end;else if V(IJ)~="string"then q(IJ,0X00);else if not(r(IJ,'\097t\116empt\032\116\111 y\105\101l\100 a\099ros\115 \109\101t\097m\101t\104o\100/C%-c\097l\108\032\098\111\117ndar\121'))then else return coroutine.yield();end;if r(IJ,"\094\046\045:%\100+\058\032")then q('\076u\114a\112h \083cr\105pt:'..(Qc[MJ-1]or"(internal)")..": "..u(IJ),0X0000);else q(IJ,0);end;end;end;end;end;else ic=function(...)local rG,qG=1,({});local tG=((k and k()or _ENV));local YG=0;local PG,uG=q3(...);local QG=((tG==H and fc or tG));local aG={[1]=qG,[2]=Vc};do PG=PG-0X1;end;for a8=0X0000,PG do if not(ac>a8)then do break;end;else do qG[a8]=uG[a8+0X1];end;end;end;if not nc then do uG=nil;end;elseif not(Ac)then else qG[ac]={n=PG>=ac and PG-ac+0X1 or 0X0,E(uG,ac+1,PG+0x1)};end;if QG~=tG then if not(s)then _ENV=QG;else(s)(ic,QG);end;end;local AG,OG,kG,iG=c(function()while true do local aZ=(bc[rG]);local EZ=(aZ[0X3]);rG=rG+0X1;if not(EZ>=0X0b)then do if EZ<5 then do if EZ<0X2 then if EZ~=0X1 then local Ci=6;local zi=qG[0X5];do(qG)[Ci+0x1]=zi;end;qG[Ci]=zi[aZ[0X1]];do rG=rG+1;end;do Ci=0x006;end;(qG[Ci])(qG[Ci+1]);do YG=Ci-1;end;aZ=bc[rG];rG=rG+1;rG=aZ[0X5];else qG[0X3]=qG[0][qG[0x1]];do rG=rG+0X0001;end;rG=rG+0X001;aZ=bc[rG];rG=rG+0X001;do if not(not qG[3])then else rG=aZ[0x0005];end;end;end;else do if EZ>=0x3 then if EZ~=0X4 then do repeat local rh,oh=Lc,qG;if not(#rh>0)then else local vj={};for Ud,pd in M,rh do for Mk,fk in M,pd do if fk[1]==oh and fk[0X02]>=0X0000 then local fF=fk[0X02];if not(not vj[fF])then else(vj)[fF]={oh[fF]};end;fk[0X1]=vj[fF];(fk)[2]=1;end;end;end;end;until true;end;local Cy=aZ[2];return false,Cy,Cy+aZ[0X5]-0X2;else qG[aZ[0x002]]={E({},0x1,aZ[0X005])};end;else if qG[aZ[0x00005]]~=qG[aZ[4]]then else rG=aZ[0X0002];end;end;end;end;end;else if EZ>=0X8 then if not(EZ>=0x9)then qG[aZ[0X2]]=v(qG[aZ[5]],qG[aZ[0X4]]);else if EZ==0X000A then do(qG)[aZ[2]]=w(qG[aZ[0X5]],qG[aZ[4]]);end;else end;end;else do if not(EZ>=0X006)then rG=aZ[0X0005];else do if EZ==7 then do(qG)[aZ[2]]=aZ[6];end;else qG[0X3]=QG[aZ[6]];do aZ=bc[rG];end;rG=rG+1;do(qG)[0x4]=QG[aZ[6]];end;rG=rG+0X00001;rG=rG+1;aZ=bc[rG];rG=rG+1;do qG[5]=qG[0x0][aZ[1]];end;do rG=rG+1;end;local HG=(0X004);rG=rG+1;local BG=0;rG=rG+0X1;local SG=2;do if SG==0 then else YG=HG+SG-0x00001;end;end;local fG,zG=nil,nil;do if SG~=1 then fG,zG=q3(qG[HG](E(qG,HG+0X1,YG)));else fG,zG=q3(qG[HG]());end;end;if BG~=1 then if BG==0 then fG=fG+HG-0X1;YG=fG;else fG=HG+BG-2;do YG=fG+1;end;end;local gx=0X00000;for l9=HG,fG do gx=gx+0X001;qG[l9]=zG[gx];end;else YG=HG-0x01;end;rG=rG+0X1;rG=rG+1;rG=rG+0X1;HG=3;SG=0X00;BG=4;do if SG~=0X0000 then do YG=HG+SG-0X01;end;end;end;fG,zG=nil;do if SG==1 then fG,zG=q3(qG[HG]());else fG,zG=q3(qG[HG](E(qG,HG+0x0001,YG)));end;end;if BG==1 then YG=HG-1;else if BG==0x000 then fG=fG+HG-1;YG=fG;else do fG=HG+BG-0X02;end;YG=fG+1;end;local tL=(0x0);do for dG=HG,fG do tL=tL+0X00001;qG[dG]=zG[tL];end;end;end;aZ=bc[rG];rG=rG+0X00001;do HG=3;end;local jG=P(function(...)C();for Z8,X8 in...do(C)(true,Z8,X8);end;end);(jG)(qG[HG],qG[HG+1],qG[HG+2]);YG=HG;(qG)[HG]=jG;rG=aZ[0X5];end;end;end;end;end;end;end;else if EZ<0X10 then do if EZ<13 then if EZ==12 then local W6=aZ[0x2];local Z6,r6,v6=qG[W6]();if Z6 then qG[W6+0x1]=r6;qG[W6+0X2]=v6;rG=aZ[5];end;else(qG)[aZ[2]]=-qG[aZ[5]];end;else do if not(EZ<14)then do if EZ~=15 then local FI,NI=6,qG[0x00005];(qG)[FI+1]=NI;(qG)[FI]=NI[aZ[0x1]];rG=rG+0X01;FI=6;qG[FI](qG[FI+1]);YG=FI-0x00001;aZ=bc[rG];do rG=rG+1;end;do rG=aZ[5];end;else do(qG)[aZ[2]]=QG[aZ[0X6]];end;end;end;else for M7=aZ[2],aZ[0X5]do qG[M7]=nil;end;end;end;end;end;else if EZ<0x000013 then if EZ<0X000011 then local Xh=Uc[aZ[0x0005]];local Oh=(nil);local jh=(Xh[5]);local Fh=#jh;if not(Fh>0)then else Oh={};for To=1,Fh do local Ro=jh[To];if Ro[1]==0 then Oh[To-1]={qG,Ro[0X2]};else Oh[To-1]=jc[Ro[2]];end;end;(S)(Lc,Oh);end;do qG[aZ[0X02]]=e3(Xh,Oh,QG);end;else if EZ~=0X12 then repeat local Eg,Gg,Wg=Lc,qG,(aZ[0x0002]);if not(#Eg>0X00)then else local CL={};for LV,mV in M,Eg do for zK,LK in M,mV do if LK[1]==Gg and LK[2]>=Wg then local aS=(LK[2]);if not CL[aS]then(CL)[aS]={Gg[aS]};end;do LK[1]=CL[aS];end;(LK)[2]=1;end;end;end;end;until true;else qG[aZ[2]]=nil;end;end;else if EZ<20 then(qG)[0X3]=qG[0X002];rG=rG+1;do qG[0X0][qG[0X1]]=qG[3];end;aZ=bc[rG];rG=rG+1;qG[3]=QG[aZ[0X6]];aZ=bc[rG];local Se=(0x0000);rG=rG+1;local te=4;(qG)[0X0004]=QG[aZ[6]];aZ=bc[rG];rG=rG+0X00001;do qG[5]=qG[0X0][aZ[0X1]];end;rG=rG+1;local Ze=(2);if Ze~=0 then do YG=te+Ze-0X01;end;end;local Pe,Ie=nil,nil;if Ze~=0X0001 then Pe,Ie=q3(qG[te](E(qG,te+0X0001,YG)));else Pe,Ie=q3(qG[te]());end;if Se~=0x1 then if Se==0X000 then Pe=Pe+te-1;YG=Pe;else do Pe=te+Se-2;end;YG=Pe+1;end;local fg=0;do for Nk=te,Pe do do fg=fg+0x1;end;(qG)[Nk]=Ie[fg];end;end;else YG=te-0x00001;end;rG=rG+1;rG=rG+0X1;do rG=rG+0X1;end;te=3;Ze=0;Se=0X0004;if Ze~=0X0 then YG=te+Ze-1;end;Pe,Ie=nil;if Ze==0X1 then Pe,Ie=q3(qG[te]());else do Pe,Ie=q3(qG[te](E(qG,te+1,YG)));end;end;do if Se~=1 then if Se==0 then Pe=Pe+te-1;YG=Pe;else do Pe=te+Se-0x2;end;YG=Pe+0X01;end;local nh=(0X0);for Co=te,Pe do do nh=nh+0x00001;end;(qG)[Co]=Ie[nh];end;else YG=te-0x001;end;end;rG=rG+0X0001;rG=rG+1;do aZ=bc[rG];end;rG=rG+1;do te=0X00003;end;local ue=P(function(...)(C)();for xz,uz in...do C(true,xz,uz);end;end);ue(qG[te],qG[te+1],qG[te+2]);YG=te;do qG[te]=ue;end;do rG=aZ[5];end;else if EZ==0X015 then local o0=(aZ[0X2]);local A0=aZ[5];if A0==0 then else YG=o0+A0-0X00001;end;local i0,U0,P0=nil,nil,(aZ[4]);do if A0~=1 then i0,U0=q3(qG[o0](E(qG,o0+0X01,YG)));else i0,U0=q3(qG[o0]());end;end;do if P0~=0X1 then do if P0==0X000 then do i0=i0+o0-0x1;end;YG=i0;else i0=o0+P0-2;YG=i0+0x1;end;end;local Nd=(0X00);for bl=o0,i0 do Nd=Nd+1;(qG)[bl]=U0[Nd];end;else YG=o0-0X00001;end;end;else repeat local PA,VA=Lc,qG;if not(#PA>0)then else local vx={};for JA,xA in M,PA do for Tm,dm in M,xA do do if not(dm[1]==VA and dm[0X2]>=0X0)then else local xk=dm[2];if not vx[xk]then(vx)[xk]={VA[xk]};end;do dm[0X1]=vx[xk];end;dm[2]=1;end;end;end;end;end;until true;return;end;end;end;end;end;end;end);do if not(AG)then if V(OG)~="strin\103"then(q)(OG,0X00000);else if r(OG,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(OG,"^.-\058\037d\043: "))then(q)(OG,0x0);else q("Luraph Script:"..(Qc[rG-0X1]or"\040\105n\116\101\114\110al)")..': '..u(OG),0);end;end;else do if OG then do if iG~=1 then return qG[kG](E(qG,kG+1,YG));else return qG[kG]();end;end;elseif kG then return E(qG,kG,iG);end;end;end;end;end;end;end;end;end;end;end;end;end;else if Sc>=0xdD then if Sc>=237 then if Sc>=0X0000f5 then if Sc>=0X000f9 then if Sc<251 then if Sc==250 then ic=function(...)local yk=({});local jk=(1);local lk=(k and k()or _ENV);local sk,Lk=q3(...);local Ck={[1]=yk,[2]=Vc};sk=sk-1;do for Vn=0,sk do if not(ac>Vn)then break;else do yk[Vn]=Lk[Vn+1];end;end;end;end;local hk=(lk==H and fc or lk);if not nc then do Lk=nil;end;elseif Ac then(yk)[ac]={n=sk>=ac and sk-ac+1 or 0X0,E(Lk,ac+0X1,sk+1)};end;local Nk=0;if hk==lk then else if s then(s)(ic,hk);else do _ENV=hk;end;end;end;local ak,nk,pk,zk=c(function()while true do local qf=bc[jk];local of=qf[3];jk=jk+1;if not(of<0X7)then if not(of<11)then do if not(of>=13)then if of==0Xc then do(yk)[qf[2]]=hk[qf[6]];end;else local H7=qf[0X2];local P7,D7,j7=yk[H7],yk[H7+1],(yk[H7+0X2]);yk[H7]=P(function()for zq=P7,D7,j7 do(C)(true,zq);end;end);jk=qf[0X5];end;else if of~=0X0000e then(yk)[qf[0x2]]={E({},1,qf[0X0005])};else repeat local LY,BY=Lc,yk;if#LY>0 then local XB=({});for xl,ll in M,LY do for KK,ZK in M,ll do if not(ZK[1]==BY and ZK[0X2]>=0)then else local Y2=(ZK[0X2]);if not(not XB[Y2])then else(XB)[Y2]={BY[Y2]};end;(ZK)[1]=XB[Y2];do(ZK)[0x2]=1;end;end;end;end;end;until true;do return;end;end;end;end;else if of<0X0009 then if of==0X08 then else(yk)[qf[0X2]]=qf[6];end;else if of~=0X0000A then local cr=jc[0];yk[1]=cr[1][cr[2]];local Ur=1;do jk=jk+0X1;end;do jk=jk+1;end;do jk=jk+1;end;yk[0X00002]=yk[0];do jk=jk+1;end;yk[0X0001]=yk[Ur]..yk[Ur+0x1];jk=jk+1;cr=jc[0];cr[0X1][cr[2]]=yk[1];qf=bc[jk];jk=jk+0X1;jk=qf[0X5];else do yk[qf[0X2]]=yk[qf[0x0005]]%yk[qf[4]];end;end;end;end;else if of<3 then if of<0X1 then local E5=(Uc[qf[0X0005]]);local V5=(E5[5]);local b5=nil;local u5=(#V5);if u5>0 then b5={};for pS=0x1,u5 do local eS=(V5[pS]);if eS[0X1]~=0 then b5[pS-0x1]=jc[eS[2]];else do b5[pS-0X0001]={yk,eS[2]};end;end;end;(S)(Lc,b5);end;do yk[qf[2]]=e3(E5,b5,hk);end;else if of~=2 then jk=qf[5];else do(yk)[qf[2]]=qf[0X6];end;end;end;else if of<5 then if of==0X4 then(yk)[qf[0X2]]=yk[qf[5]]<yk[qf[4]];else(yk)[1]=hk[qf[0X0006]];jk=jk+1;local wo=0x001;jk=jk+0x1;jk=jk+1;yk[2]=yk[0X0];jk=jk+1;do yk[wo]=yk[wo](yk[wo+1]);end;do Nk=wo;end;do qf=bc[jk];end;jk=jk+1;if not(not yk[1])then else jk=qf[0x5];end;end;else do if of~=6 then(yk)[qf[2]]=yk[qf[0X005]]^yk[qf[0X04]];else do(yk)[qf[2]]=true;end;end;end;end;end;end;end;end);if ak then if nk then if zk==1 then do return yk[pk]();end;else return yk[pk](E(yk,pk+0x1,Nk));end;elseif pk then return E(yk,pk,zk);end;else if V(nk)~="s\116\114in\103"then(q)(nk,0x0);else if not(r(nk,'atte\109\112\116\032\116o\032y\105el\100 acr\111\115s m\101t\097\109\101thod/C%\045ca\108\108 \098o\117\110dar\121'))then else return coroutine.yield();end;if r(nk,'\094.-\058\037\100+\058\032')then q("Luraph Script:"..(Qc[jk-0X1]or"(internal)")..": "..u(nk),0X0);else q(nk,0);end;end;end;end;else ic=function(...)local S5,E5={},0X0001;local y5=0;local j5=({[2]=Vc,[1]=S5});local Q5=(k and k()or _ENV);local D5,K5=q3(...);local a5=(Q5==H and fc or Q5);D5=D5-1;for pm=0X00,D5 do if not(ac>pm)then do break;end;else(S5)[pm]=K5[pm+0X001];end;end;if not nc then do K5=nil;end;elseif Ac then do(S5)[ac]={n=D5>=ac and D5-ac+0x1 or 0x00,E(K5,ac+0x1,D5+1)};end;end;if a5==Q5 then else if s then(s)(ic,a5);else _ENV=a5;end;end;local d5,V5,R5,Z5=c(function()while true do local vj=bc[E5];local Mj=(vj[3]);E5=E5+1;if not(Mj>=10)then if Mj<0X5 then if not(Mj>=2)then if Mj~=0X1 then local qW=(jc[0]);S5[1]=qW[0X1][qW[2]];vj=bc[E5];do E5=E5+1;end;S5[1]=S5[1][vj[1]];E5=E5+0X1;do S5[2]=S5[0];end;E5=E5+0X0001;qW=jc[0X1];S5[0X03]=qW[1][qW[0X0002]];do E5=E5+1;end;E5=E5+1;E5=E5+1;local tW=(1);S5[tW](S5[tW+1],S5[tW+2]);y5=tW-0X1;vj=bc[E5];do E5=E5+0x00001;end;E5=vj[0X5];else for Rt=vj[0X02],vj[5]do do(S5)[Rt]=nil;end;end;end;else do if not(Mj>=0X00003)then do if S5[vj[5]]==S5[vj[0x4]]then E5=vj[2];end;end;else if Mj~=4 then local Z6=(vj[2]);local E6=P(function(...)C();for fb,Xb,Eb,bb,ab,Vb,db,Ab,eb,rb in...do C(true,{fb,Xb,Eb,bb,ab,Vb,db,Ab,eb,rb});end;end);(E6)(S5[Z6],S5[Z6+0x001],S5[Z6+0X2]);y5=Z6;S5[Z6]=E6;E5=vj[5];else end;end;end;end;else if Mj<7 then if Mj==0x6 then S5[1]=a5[vj[0X6]];vj=bc[E5];E5=E5+1;do(S5)[0x001]=S5[1][vj[0x01]];end;vj=bc[E5];do E5=E5+1;end;if not(not S5[0x001])then else E5=vj[5];end;else do repeat local OB,RB=Lc,S5;if#OB>0X0 then local LN=({});do for SC,cC in M,OB do for Eh,Qh in M,cC do do if Qh[1]==RB and Qh[0X2]>=0x000 then local xf=Qh[2];if not LN[xf]then(LN)[xf]={RB[xf]};end;(Qh)[0X1]=LN[xf];Qh[0x2]=1;end;end;end;end;end;end;until true;end;return;end;else if not(Mj>=0X8)then S5[vj[0x2]]={E({},1,vj[5])};else if Mj==9 then E5=vj[5];else do S5[0]=a5[vj[6]];end;do E5=E5+0X1;end;do E5=E5+1;end;vj=bc[E5];E5=E5+0X1;local Zu=(jc[0]);(S5)[1]=vj[6];E5=E5+0X1;local Wu=0;S5[Wu]=S5[Wu](S5[Wu+1]);y5=Wu;do E5=E5+0X1;end;E5=E5+1;do E5=E5+1;end;S5[0x1]=Zu[0X00001][Zu[2]];vj=bc[E5];do E5=E5+1;end;do S5[0X001]=S5[1][vj[0X01]];end;E5=E5+1;S5[2]=S5[0x0000];do E5=E5+1;end;Wu=0X1;do(S5)[Wu]=S5[Wu](S5[Wu+1]);end;y5=Wu;vj=bc[E5];E5=E5+0X001;if not S5[1]then E5=vj[5];end;end;end;end;end;else if Mj<0x0000F then if Mj<12 then do if Mj~=0xB then do S5[vj[0X2]]=v(S5[vj[0X5]],S5[vj[0X4]]);end;else(S5)[vj[2]]=vj[6];end;end;else if Mj<0X00d then S5[vj[2]]=a5[vj[0X6]];else if Mj~=0X0e then local LA=(Uc[vj[5]]);local GA=LA[5];local VA,fA=#GA,(nil);if VA>0 then fA={};do for dg=0x1,VA do local yg=(GA[dg]);if yg[0X00001]==0x0 then fA[dg-0X1]={S5,yg[2]};else do fA[dg-1]=jc[yg[0x2]];end;end;end;end;S(Lc,fA);end;do S5[vj[2]]=e3(LA,fA,a5);end;else(S5)[vj[2]]=S5[vj[0x05]][S5[vj[0X004]]];end;end;end;else if Mj<0X11 then if Mj==16 then(S5)[vj[2]]=S5[vj[0X5]]*S5[vj[0X00004]];else(S5)[vj[0X2]]=Q(S5[vj[0X5]]);end;else if Mj>=18 then if Mj==0X13 then local N4,A4=vj[2],S5[vj[0X05]];S5[N4+1]=A4;S5[N4]=A4[vj[0X1]];else if S5[vj[5]]<=S5[vj[4]]then E5=vj[0X2];end;end;else S5[vj[0X2]]=S5[vj[5]]/S5[vj[4]];end;end;end;end;end;end);do if not(d5)then do if V(V5)=='\115\116\114\105\110g'then if not(r(V5,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(V5,'^\046-\058\037d+:\032'))then(q)(V5,0);else(q)("Luraph Script:"..(Qc[E5-1]or'(i\110t\101\114n\097\108\041')..":\032"..u(V5),0);end;else(q)(V5,0X000);end;end;else if V5 then do if Z5==1 then return S5[R5]();else return S5[R5](E(S5,R5+1,y5));end;end;elseif R5 then do return E(S5,R5,Z5);end;end;end;end;end;end;else if Sc==252 then ic=function(...)local qu,wu={},0;local Iu=1;local Bu=({[2]=Vc,[1]=qu});local Fu=(k and k()or _ENV);local yu,Ju=q3(...);do yu=yu-1;end;for Gm=0X00,yu do if not(ac>Gm)then do break;end;else(qu)[Gm]=Ju[Gm+0x1];end;end;local Ou=((Fu==H and fc or Fu));if not nc then do Ju=nil;end;elseif not(Ac)then else(qu)[ac]={n=yu>=ac and yu-ac+0x001 or 0,E(Ju,ac+1,yu+0x1)};end;if Ou~=Fu then if s then s(ic,Ou);else _ENV=Ou;end;end;local vu,pu,Pu,tu=c(function()do while true do local rI=(bc[Iu]);local yI=rI[3];Iu=Iu+1;if not(yI<12)then if yI>=18 then if yI<21 then if not(yI>=0X0013)then qu[1]=Ou[rI[0X00006]];Iu=Iu+1;do Iu=Iu+1;end;rI=bc[Iu];do Iu=Iu+1;end;(qu)[2]=Ou[rI[6]];rI=bc[Iu];local Ii=(1);do Iu=Iu+1;end;qu[2]=qu[2][rI[0x1]];Iu=Iu+0X01;Iu=Iu+1;do rI=bc[Iu];end;do Iu=Iu+0X1;end;qu[0x2]=qu[0X02][rI[0x1]];Iu=Iu+1;Iu=Iu+1;rI=bc[Iu];Iu=Iu+0X1;(qu)[0x3]=Ou[rI[0X6]];rI=bc[Iu];Iu=Iu+1;qu[3]=qu[0X3][rI[0X1]];rI=bc[Iu];Iu=Iu+0X1;qu[3]=qu[0X3][rI[0X01]];Iu=Iu+1;Iu=Iu+0X1;do rI=bc[Iu];end;do Iu=Iu+0X1;end;qu[0X3]=qu[3][rI[0X001]];do Iu=Iu+1;end;Iu=Iu+1;rI=bc[Iu];Iu=Iu+1;qu[0X3]=qu[3][rI[0X1]];Iu=Iu+0X1;Iu=Iu+1;rI=bc[Iu];Iu=Iu+0x1;qu[4]=rI[6];Iu=Iu+1;wu=Ii+4-0x1;(qu[Ii])(E(qu,Ii+0X01,wu));wu=Ii-0X1;do rI=bc[Iu];end;Iu=Iu+0X1;qu[1]=Ou[rI[0X6]];Iu=Iu+1;Iu=Iu+1;rI=bc[Iu];Iu=Iu+0x01;qu[0X002]=Ou[rI[6]];rI=bc[Iu];Iu=Iu+0X1;do qu[2]=qu[2][rI[0x1]];end;do Iu=Iu+1;end;Iu=Iu+1;rI=bc[Iu];Iu=Iu+1;qu[0X0002]=qu[0X2][rI[0X1]];Iu=Iu+0X1;Iu=Iu+1;rI=bc[Iu];do Iu=Iu+0X1;end;(qu)[0X3]=Ou[rI[6]];Iu=Iu+1;Iu=Iu+1;rI=bc[Iu];Iu=Iu+1;(qu)[0X003]=qu[0X3][rI[1]];Iu=Iu+1;Iu=Iu+1;rI=bc[Iu];Iu=Iu+1;(qu)[3]=qu[0x3][rI[0X00001]];do rI=bc[Iu];end;Iu=Iu+1;(qu)[3]=qu[0X3][rI[0X1]];Iu=Iu+0x001;Iu=Iu+1;rI=bc[Iu];Iu=Iu+0x1;(qu)[0X00003]=qu[3][rI[0X1]];rI=bc[Iu];Iu=Iu+0X1;qu[4]=rI[0x6];Iu=Iu+1;Ii=1;wu=Ii+4-0X1;(qu[Ii])(E(qu,Ii+1,wu));wu=Ii-1;Iu=Iu+1;Iu=Iu+0X1;rI=bc[Iu];do Iu=Iu+1;end;Iu=rI[5];else if yI~=0X000014 then qu[0X2]=Ou[rI[6]];Iu=Iu+0X1;do Iu=Iu+1;end;rI=bc[Iu];do Iu=Iu+0X1;end;if qu[0X2]then do Iu=rI[5];end;end;else(qu)[1]=Ou[rI[6]];rI=bc[Iu];local M1=1;Iu=Iu+1;(qu)[2]=rI[0x00006];Iu=Iu+1;(qu)[M1]=qu[M1](qu[M1+1]);wu=M1;rI=bc[Iu];Iu=Iu+0X1;if not(not qu[0x00001])then else Iu=rI[5];end;end;end;else if yI>=23 then if yI==24 then qu[1]=Ou[rI[0x6]];Iu=Iu+1;Iu=Iu+1;rI=bc[Iu];Iu=Iu+0x01;(qu)[0X2]=rI[6];rI=bc[Iu];Iu=Iu+1;(qu)[0X3]=rI[0X6];rI=bc[Iu];local oR=1;Iu=Iu+0x1;qu[4]=rI[0X6];rI=bc[Iu];Iu=Iu+0X1;(qu)[5]=rI[6];Iu=Iu+0x1;wu=oR+0X05-1;(qu[oR])(E(qu,oR+0X1,wu));wu=oR-1;Iu=Iu+1;Iu=Iu+0x1;rI=bc[Iu];do Iu=Iu+0x0001;end;do Iu=rI[0X5];end;else do if not(qu[rI[2]])then else do Iu=rI[0X005];end;end;end;end;else if yI==0x16 then local E5=rI[0x2];local z5=rI[0X5];wu=E5+z5-0X1;do repeat local fb,Vb=Lc,(qu);if#fb>0 then local Vi={};for KR,ER in M,fb do for hR,nR in M,ER do if not(nR[0x00001]==Vb and nR[2]>=0X000)then else local kw=nR[0x2];if not(not Vi[kw])then else Vi[kw]={Vb[kw]};end;(nR)[0X1]=Vi[kw];nR[0x0002]=1;end;end;end;end;until true;end;return true,E5,z5;else local bm,km=Uc[rI[5]],nil;local mm=(bm[5]);local em=(#mm);if em>0 then km={};for O7=1,em do local z7=mm[O7];do if z7[0X1]~=0 then do(km)[O7-0X1]=jc[z7[2]];end;else(km)[O7-1]={qu,z7[0X2]};end;end;end;S(Lc,km);end;(qu)[rI[0X02]]=e3(bm,km,Ou);end;end;end;else if not(yI>=15)then if not(yI<0X0D)then if yI==0XE then(qu)[rI[0x2]]=w(qu[rI[5]],qu[rI[4]]);else if qu[rI[0x5]]==qu[rI[0X4]]then Iu=rI[2];end;end;else do(qu)[0x00000]=Ou[rI[0X6]];end;do Iu=Iu+1;end;local x5=jc[0];do Iu=Iu+0X00001;end;rI=bc[Iu];Iu=Iu+1;do qu[1]=rI[0X6];end;local T5=0X0;Iu=Iu+0X1;do qu[T5]=qu[T5](qu[T5+1]);end;wu=T5;Iu=Iu+1;do(qu)[0X1]=x5[0X00001][x5[2]];end;do rI=bc[Iu];end;do Iu=Iu+0x00001;end;do(qu)[0X1]=qu[0X1][rI[0x01]];end;do Iu=Iu+1;end;Iu=Iu+0x01;Iu=Iu+1;(qu)[2]=qu[0X00];Iu=Iu+0X1;T5=1;(qu)[T5]=qu[T5](qu[T5+0X01]);wu=T5;rI=bc[Iu];Iu=Iu+0x01;if not qu[1]then Iu=rI[5];end;end;else if yI<16 then qu[0X1]=Ou[rI[0X0006]];do Iu=Iu+1;end;Iu=Iu+0X0001;rI=bc[Iu];Iu=Iu+0X1;if qu[1]==rI[1]then else Iu=rI[2];end;else do if yI~=17 then local p2,d2=rI[0X00002],qu[rI[0x5]];qu[p2+1]=d2;(qu)[p2]=d2[rI[1]];else do qu[0x00000]=Ou[rI[6]];end;Iu=Iu+0X01;Iu=Iu+0x1;Iu=Iu+0X1;do wu=0;end;do(qu)[wu]=qu[wu]();end;rI=bc[Iu];Iu=Iu+1;(qu)[0X00001]=Ou[rI[0X6]];Iu=Iu+1;do(qu)[0X0]=qu[0]-qu[1];end;rI=bc[Iu];Iu=Iu+1;if not(rI[6]<qu[0])then else Iu=rI[2];end;end;end;end;end;end;else if not(yI<0X6)then do if not(yI>=9)then if yI>=0X7 then if yI==8 then if not(not qu[rI[2]])then else Iu=rI[5];end;else for HB=rI[0x00002],rI[5]do do(qu)[HB]=nil;end;end;end;else end;else if yI>=0xa then do if yI~=0xb then do(qu)[rI[2]]={E({},0X1,rI[0X05])};end;else local Gy=(jc[0]);(qu)[0X1]=Gy[0X1][Gy[2]];Iu=Iu+1;do Iu=Iu+1;end;rI=bc[Iu];Iu=Iu+0X0001;qu[1]=qu[0X1][rI[0X1]];Iu=Iu+0X1;Iu=Iu+0X1;local qy=0x1;do Iu=Iu+1;end;(qu)[2]=qu[0X000];Iu=Iu+1;do Gy=jc[0X1];end;(qu)[3]=Gy[0X1][Gy[2]];do Iu=Iu+1;end;do Iu=Iu+1;end;Iu=Iu+1;qu[qy](qu[qy+1],qu[qy+0X02]);wu=qy-1;do rI=bc[Iu];end;Iu=Iu+1;do Iu=rI[0X5];end;end;end;else qu[rI[0X2]]=rI[6];end;end;end;else if not(yI>=3)then if yI>=0X1 then if yI~=2 then do Bu[rI[5]]=qu[rI[2]];end;else(qu)[rI[2]]=qu[rI[5]]+qu[rI[4]];end;else repeat local dJ,UJ=Lc,qu;do if not(#dJ>0)then else local Gj=({});for Cq,mq in M,dJ do for Lw,Aw in M,mq do if Aw[1]==UJ and Aw[0X2]>=0X00 then local RI=(Aw[2]);do if not(not Gj[RI])then else Gj[RI]={UJ[RI]};end;end;Aw[0x01]=Gj[RI];(Aw)[2]=0x1;end;end;end;end;end;until true;return;end;else if not(yI<0X4)then if yI==5 then(qu)[rI[2]]=qu[rI[0X5]]-qu[rI[4]];else qu[rI[2]]=Ou[rI[6]];end;else Iu=rI[0x5];end;end;end;end;end;end;end);do if not(vu)then if V(pu)=="\115\116\114in\103"then if not(r(pu,'\097t\116e\109\112\116 \116o\032yi\101\108d a\099\114\111\115\115 \109\101\116am\101th\111d\047\067%-\099al\108\032\098o\117n\100a\114\121'))then else return coroutine.yield();end;if r(pu,'\094.-\058\037\100+: ')then(q)("Luraph Script:"..(Qc[Iu-1]or"(internal)").."\058\032"..u(pu),0X0);else(q)(pu,0);end;else q(pu,0X00000);end;else if pu then if tu==1 then return qu[Pu]();else return qu[Pu](E(qu,Pu+0x0001,wu));end;elseif not(Pu)then else return E(qu,Pu,tu);end;end;end;end;else ic=function(...)local bI,CI=1,{};local qI=((k and k()or _ENV));local dI=(qI==H and fc or qI);local NI=({[2]=Vc,[1]=CI});local yI,UI=q3(...);yI=yI-0x1;local KI=0;for as=0x0,yI do do if not(ac>as)then break;else CI[as]=UI[as+0x1];end;end;end;if not nc then UI=nil;elseif not(Ac)then else CI[ac]={n=yI>=ac and yI-ac+0X01 or 0,E(UI,ac+1,yI+1)};end;if dI~=qI then if s then(s)(ic,dI);else do _ENV=dI;end;end;end;local JI,EI,nI,oI=c(function()while true do local H5=bc[bI];local m5=H5[3];do bI=bI+0X1;end;do if not(m5<0X7)then do if not(m5>=10)then if m5<0X8 then do(CI)[H5[0X002]]=CI[H5[0x005]]<=CI[H5[4]];end;else if m5~=0X9 then CI[H5[0X2]]={E({},0X001,H5[0x5])};else(CI)[H5[2]]=H5[0X06];end;end;else if m5>=0Xc then do if m5~=0Xd then repeat local Fh,mh=Lc,CI;if#Fh>0x0 then local w5={};for sA,cA in M,Fh do for B6,O6 in M,cA do if not(O6[1]==mh and O6[2]>=0)then else local a9=(O6[0X0002]);if not w5[a9]then do(w5)[a9]={mh[a9]};end;end;do O6[0X1]=w5[a9];end;O6[2]=0X1;end;end;end;end;until true;local r0=(H5[0X02]);return false,r0,r0+H5[5]-2;else local ch=H5[2];local sh=CI[ch];local Ph=((H5[4]-1)*0X00032);for kW=1,H5[0X5]do sh[Ph+kW]=CI[ch+kW];end;end;end;else if m5~=11 then CI[H5[0X2]]=CI[H5[0X0005]]<CI[H5[4]];else bI=H5[0X5];end;end;end;end;else if not(m5<3)then do if m5>=5 then if m5~=6 then local hr=nil;local ir=Uc[H5[0x5]];local sr=(ir[5]);local Ar=#sr;if Ar>0X000 then hr={};do for IE=0X1,Ar do local bE=sr[IE];if bE[0X1]==0 then(hr)[IE-1]={CI,bE[2]};else do hr[IE-0X1]=jc[bE[0X2]];end;end;end;end;(S)(Lc,hr);end;CI[H5[0X002]]=e3(ir,hr,dI);else end;else if m5==0x4 then do(CI)[0X0]=dI[H5[0x6]];end;H5=bc[bI];local WU=(0X001);bI=bI+0X1;(CI)[1]=dI[H5[6]];H5=bc[bI];bI=bI+0X00001;(CI)[0X2]=H5[0X06];do bI=bI+1;end;(CI)[0X3]=true;do bI=bI+1;end;(CI)[WU]=CI[WU](CI[WU+1],CI[WU+0X2]);KI=WU;bI=bI+1;do bI=bI+1;end;H5=bc[bI];bI=bI+0X1;CI[1]=CI[1][H5[1]];bI=bI+1;bI=bI+1;H5=bc[bI];bI=bI+1;do CI[0X1]=CI[1][H5[1]];end;bI=bI+0x1;bI=bI+1;do H5=bc[bI];end;bI=bI+1;(CI[0X0])[H5[6]]=CI[1];bI=bI+1;repeat local tz,Az=Lc,(CI);if not(#tz>0x00)then else local PV=({});do for CY,aY in M,tz do do for CL,cL in M,aY do if not(cL[0X1]==Az and cL[2]>=0)then else local kq=cL[0X002];if not(not PV[kq])then else do(PV)[kq]={Az[kq]};end;end;(cL)[0X1]=PV[kq];(cL)[2]=0X1;end;end;end;end;end;end;until true;do return;end;else CI[H5[2]]=CI[H5[5]]~=CI[H5[4]];end;end;end;else do if m5<1 then for H_=H5[2],H5[5]do(CI)[H_]=nil;end;else do if m5~=0X00002 then do(CI)[H5[2]]=CI[H5[5]]%CI[H5[0x04]];end;else(CI)[H5[0X2]]=dI[H5[0X6]];end;end;end;end;end;end;end;end;end);if not(JI)then if V(EI)~='\115t\114\105ng'then(q)(EI,0X000);else if not(r(EI,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(EI,"^.-:%d+: "))then q(EI,0);else(q)("Luraph Script:"..(Qc[bI-0X0001]or"(internal)")..": "..u(EI),0x0);end;end;else if EI then if oI~=0x1 then return CI[nI](E(CI,nI+0X0001,KI));else do return CI[nI]();end;end;elseif not(nI)then else return E(CI,nI,oI);end;end;end;end;end;else if not(Sc<247)then if Sc==248 then ic=function(...)local RY,UY=0,{};local lY=(0X1);local wY={[2]=Vc,[1]=UY};local HY=(k and k()or _ENV);local kY=(HY==H and fc or HY);local VY,tY=q3(...);do VY=VY-1;end;do for gy=0x0,VY do if ac>gy then do UY[gy]=tY[gy+0X1];end;else break;end;end;end;if not nc then tY=nil;elseif Ac then do UY[ac]={n=VY>=ac and VY-ac+1 or 0,E(tY,ac+1,VY+1)};end;end;if kY==HY then else if not(s)then _ENV=kY;else(s)(ic,kY);end;end;local dY,KY,JY,IY=c(function()while true do local SY=(bc[lY]);local xY=(SY[0X00003]);do lY=lY+0X0001;end;if not(xY>=0X7)then if xY<3 then do if not(xY<0X01)then if xY~=0x2 then(UY)[SY[0X002]]=kY[SY[0x6]];else end;else(UY)[SY[2]]=UY[SY[5]]%UY[SY[0X004]];end;end;else if not(xY>=5)then if xY~=4 then do(UY)[0]=kY[SY[0X6]];end;local BM=nil;local kM=0;do lY=lY+0X0001;end;lY=lY+1;SY=bc[lY];lY=lY+0X0001;do UY[0X00]=UY[0x0][SY[1]];end;SY=bc[lY];lY=lY+1;local YM=Uc[SY[5]];local cM=YM[0X5];local WM=#cM;do if WM>0x0000 then do BM={};end;for ZA=0X1,WM do local EA=cM[ZA];if EA[0x1]~=0X0 then BM[ZA-0X001]=jc[EA[2]];else BM[ZA-0X1]={UY,EA[2]};end;end;(S)(Lc,BM);end;end;do(UY)[0X0001]=e3(YM,BM,kY);end;do lY=lY+0X1;end;UY[kM](UY[kM+0X00001]);RY=kM-0X1;lY=lY+0X01;repeat local Zx,jx=Lc,UY;if not(#Zx>0X0000)then else local Cy=({});for aS,QS in M,Zx do for it,lt in M,QS do if not(lt[0X1]==jx and lt[0X0002]>=0X0000)then else local mW=lt[0X2];if not Cy[mW]then do(Cy)[mW]={jx[mW]};end;end;(lt)[1]=Cy[mW];lt[0X2]=0x1;end;end;end;end;until true;return;else if not(UY[SY[5]]<=UY[SY[4]])then lY=SY[2];end;end;else if xY~=6 then(UY)[SY[0x2]]={E({},0X00001,SY[0X00005])};else UY[SY[0X00002]]=SY[0x6];end;end;end;else if not(xY>=10)then if xY>=0X8 then do if xY~=0X9 then lY=SY[5];else UY[SY[0X2]]=UY[SY[0x05]][UY[SY[0X4]]];end;end;else do for ub=SY[2],SY[0X5]do UY[ub]=nil;end;end;end;else if not(xY>=12)then if xY~=0x000B then local my=SY[2];local Ny,yy=SY[0x005],SY[4];if Ny==0x0 then else RY=my+Ny-0x1;end;local hy,fy=nil,nil;if Ny==1 then do hy,fy=q3(UY[my]());end;else hy,fy=q3(UY[my](E(UY,my+0x1,RY)));end;if yy~=1 then do if yy==0 then do hy=hy+my-0x001;end;RY=hy;else hy=my+yy-0X2;do RY=hy+0X1;end;end;end;local Pt=0;do for H5=my,hy do Pt=Pt+1;(UY)[H5]=fy[Pt];end;end;else RY=my-0X01;end;else do UY[SY[0x2]][UY[SY[5]]]=UY[SY[0X4]];end;end;else if xY~=0X0d then(UY)[SY[0X02]]=UY[SY[0X5]]<=UY[SY[4]];else local R8=nil;local j8=Uc[SY[5]];local r8=j8[0X0005];local W8=(#r8);do if W8>0 then R8={};for iG=0x1,W8 do local RG=(r8[iG]);if RG[1]~=0 then R8[iG-1]=jc[RG[2]];else(R8)[iG-1]={UY,RG[0X002]};end;end;S(Lc,R8);end;end;do(UY)[SY[0X02]]=e3(j8,R8,kY);end;end;end;end;end;end;end);do if not(dY)then if V(KY)~="\115t\114\105ng"then q(KY,0);else if not(r(KY,'a\116te\109p\116\032\116\111\032\121i\101\108d \097cr\111\115\115 meta\109\101\116\104od/\067%\045\099\097\108l\032b\111\117\110\100ar\121'))then else return coroutine.yield();end;if not(r(KY,"^.-:%d\043\058\032"))then(q)(KY,0);else(q)("L\117\114\097ph\032\083\099\114i\112\116\058"..(Qc[lY-0X1]or"(internal)")..":\032"..u(KY),0);end;end;else do if KY then if IY~=1 then return UY[JY](E(UY,JY+1,RY));else return UY[JY]();end;elseif not(JY)then else return E(UY,JY,IY);end;end;end;end;end;else ic=function(...)local BB,FB=0X00001,({});local oB=((k and k()or _ENV));local QB,IB=q3(...);local eB,HB={[1]=FB,[2]=Vc},((oB==H and fc or oB));QB=QB-0X001;for PR=0,QB do if not(ac>PR)then break;else FB[PR]=IB[PR+0X001];end;end;do if not nc then IB=nil;elseif Ac then(FB)[ac]={n=QB>=ac and QB-ac+1 or 0,E(IB,ac+1,QB+0X00001)};end;end;local tB=0;if HB==oB then else if not(s)then _ENV=HB;else s(ic,HB);end;end;local RB,aB,uB,pB=c(function()do while true do local Cl=bc[BB];local rl=(Cl[0X0003]);do BB=BB+0X1;end;if rl>=0x11 then do if not(rl>=26)then if not(rl>=21)then do if rl>=0X000013 then if rl==20 then(FB)[0X0]=HB[Cl[6]];BB=BB+1;do BB=BB+1;end;Cl=bc[BB];BB=BB+0X001;(FB)[0]=FB[0X0000][Cl[1]];Cl=bc[BB];BB=BB+0X1;FB[0X00000]=FB[0][Cl[0X0001]];Cl=bc[BB];BB=BB+0X1;(FB)[0]=FB[0][Cl[1]];do Cl=bc[BB];end;BB=BB+1;FB[0]=FB[0x0][Cl[0x1]];BB=BB+1;BB=BB+1;do Cl=bc[BB];end;BB=BB+0X1;(FB)[0X0]=FB[0X0000][Cl[1]];BB=BB+0X1;do BB=BB+1;end;Cl=bc[BB];BB=BB+1;do(FB)[0x0001]=HB[Cl[0x6]];end;BB=BB+1;do BB=BB+0X1;end;Cl=bc[BB];BB=BB+0X1;if not(not(FB[0X0]<FB[1]))then else BB=Cl[0x2];end;else do(FB)[0]=HB[Cl[6]];end;do Cl=bc[BB];end;BB=BB+1;(FB)[0]=FB[0][Cl[0X1]];do BB=BB+0X01;end;BB=BB+1;do Cl=bc[BB];end;BB=BB+0x1;FB[0]=FB[0x00][Cl[1]];do Cl=bc[BB];end;BB=BB+0X01;FB[0]=FB[0][Cl[0x00001]];BB=BB+0X1;BB=BB+1;do Cl=bc[BB];end;do BB=BB+1;end;do(FB)[0x0]=FB[0][Cl[1]];end;Cl=bc[BB];do BB=BB+1;end;do FB[0x0]=FB[0X000][Cl[0X1]];end;Cl=bc[BB];BB=BB+0x01;(FB)[0X0001]=HB[Cl[0x6]];BB=BB+0X1;BB=BB+1;do Cl=bc[BB];end;do BB=BB+0X0001;end;if not(not(FB[0X0]<FB[1]))then else BB=Cl[2];end;end;else if rl==0X12 then FB[0X0]=HB[Cl[6]];BB=BB+1;BB=BB+1;Cl=bc[BB];BB=BB+0X1;(FB)[1]=Cl[0X6];Cl=bc[BB];BB=BB+1;(FB)[0x2]=HB[Cl[0X6]];local Oh=(0);BB=BB+1;BB=BB+0X1;Cl=bc[BB];BB=BB+1;(FB)[2]=FB[0X00002][Cl[1]];BB=BB+0X001;BB=BB+1;Cl=bc[BB];BB=BB+0X1;(FB)[2]=FB[2][Cl[1]];Cl=bc[BB];BB=BB+0x001;do(FB)[2]=FB[0X2][Cl[1]];end;BB=BB+1;BB=BB+1;do BB=BB+1;end;FB[Oh](FB[Oh+0X01],FB[Oh+2]);do tB=Oh-0X1;end;Cl=bc[BB];BB=BB+0X1;BB=Cl[0X5];else(FB)[0X0]=HB[Cl[6]];BB=BB+0X1;BB=BB+1;do Cl=bc[BB];end;local VK=(0X00000);BB=BB+0X1;do(FB)[1]=Cl[0X6];end;Cl=bc[BB];do BB=BB+1;end;FB[2]=HB[Cl[0X6]];Cl=bc[BB];BB=BB+0x1;(FB)[0X2]=FB[0x2][Cl[1]];Cl=bc[BB];BB=BB+0X1;(FB)[0x2]=FB[0x2][Cl[1]];BB=BB+0X01;do BB=BB+1;end;do Cl=bc[BB];end;do BB=BB+0X1;end;(FB)[0X2]=FB[0x2][Cl[0x1]];BB=BB+1;BB=BB+0X001;BB=BB+1;(FB[VK])(FB[VK+1],FB[VK+0X0002]);tB=VK-1;BB=BB+1;BB=BB+1;Cl=bc[BB];do BB=BB+1;end;BB=Cl[0X5];end;end;end;else if not(rl<0X17)then if rl<24 then do FB[Cl[2]]=Q(FB[Cl[0X5]]);end;else if rl==25 then do(FB)[Cl[2]]=-FB[Cl[5]];end;else(FB)[0]=HB[Cl[0X006]];BB=BB+0X1;BB=BB+0X1;Cl=bc[BB];BB=BB+1;(FB)[0]=FB[0][Cl[1]];do BB=BB+1;end;BB=BB+0X00001;Cl=bc[BB];BB=BB+1;if not FB[0X0]then do BB=Cl[5];end;end;end;end;else do if rl==22 then for A8=Cl[0x0002],Cl[5]do FB[A8]=nil;end;else FB[0]=HB[Cl[6]];do Cl=bc[BB];end;BB=BB+1;do(FB)[0]=FB[0X00][Cl[0X1]];end;Cl=bc[BB];do BB=BB+1;end;if not FB[0]then do BB=Cl[5];end;end;end;end;end;end;else if rl>=30 then do if not(rl<0X020)then if not(rl<33)then if rl~=0X22 then local rE=Uc[Cl[0x5]];local FE,kE=rE[0X005],nil;local iE=#FE;if iE>0X0 then kE={};for Pc=1,iE do local vc=FE[Pc];do if vc[1]~=0 then do kE[Pc-0X0001]=jc[vc[0X2]];end;else kE[Pc-1]={FB,vc[0X2]};end;end;end;(S)(Lc,kE);end;FB[Cl[0x00002]]=e3(rE,kE,HB);else FB[Cl[0X02]]=Cl[0X6];end;else do(FB)[0x000]=HB[Cl[6]];end;BB=BB+1;local FO=0;do BB=BB+0X1;end;Cl=bc[BB];do BB=BB+0x1;end;FB[0X0001]=Cl[6];do Cl=bc[BB];end;BB=BB+1;FB[0X002]=HB[Cl[6]];Cl=bc[BB];do BB=BB+0x1;end;do FB[2]=FB[2][Cl[1]];end;Cl=bc[BB];BB=BB+0X1;(FB)[0X2]=FB[0x2][Cl[1]];do BB=BB+1;end;BB=BB+1;do Cl=bc[BB];end;BB=BB+1;do(FB)[2]=FB[0X2][Cl[0X1]];end;BB=BB+1;BB=BB+1;do BB=BB+1;end;FB[FO](FB[FO+0x1],FB[FO+2]);do tB=FO-0X001;end;BB=BB+1;do BB=BB+0X1;end;do Cl=bc[BB];end;BB=BB+0x001;BB=Cl[5];end;else if rl~=31 then local oY=(Cl[5]);local AY=Cl[2];if oY==0X0 then else do tB=AY+oY-0X0001;end;end;local aY,EY,GY=nil,nil,Cl[0X04];do if oY~=0X001 then aY,EY=q3(FB[AY](E(FB,AY+1,tB)));else do aY,EY=q3(FB[AY]());end;end;end;do if GY==0X1 then tB=AY-0X1;else do if GY==0 then aY=aY+AY-0X1;tB=aY;else do aY=AY+GY-0X02;end;do tB=aY+0X1;end;end;end;local fr=(0);do for V_=AY,aY do fr=fr+1;do(FB)[V_]=EY[fr];end;end;end;end;end;else FB[0]=HB[Cl[0X006]];BB=BB+1;BB=BB+0X1;do Cl=bc[BB];end;BB=BB+1;FB[0]=FB[0X0][Cl[0X0001]];do BB=BB+1;end;do BB=BB+0X00001;end;Cl=bc[BB];BB=BB+0X1;if not FB[0X0]then do BB=Cl[0X5];end;end;end;end;end;else if rl<0x1C then if rl==0X1B then FB[Cl[2]]=FB[Cl[0X5]];else(FB)[0]=HB[Cl[6]];BB=BB+0X1;BB=BB+0x0001;Cl=bc[BB];BB=BB+0X1;(FB)[0]=FB[0X0][Cl[0X1]];BB=BB+0X01;BB=BB+0X001;Cl=bc[BB];BB=BB+1;if not(not FB[0X0])then else BB=Cl[5];end;end;else if rl~=0X1D then BB=Cl[5];else FB[Cl[2]]=HB[Cl[6]];end;end;end;end;end;else do if rl<0x008 then do if rl>=4 then do if rl>=6 then if rl==0x7 then FB[0X0]=HB[Cl[6]];Cl=bc[BB];do BB=BB+0x00001;end;(FB)[0X0000]=FB[0x000][Cl[1]];Cl=bc[BB];do BB=BB+1;end;if not FB[0]then BB=Cl[0X05];end;else repeat local n7,b7=Lc,(FB);if#n7>0X0 then local wk=({});for xc,dc in M,n7 do for bS,aS in M,dc do if aS[1]==b7 and aS[0X2]>=0X0 then local rm=(aS[0X02]);if not(not wk[rm])then else do(wk)[rm]={b7[rm]};end;end;(aS)[0x1]=wk[rm];(aS)[2]=0X00001;end;end;end;end;until true;return;end;else do if rl~=0X00005 then FB[0x0]=HB[Cl[0X00006]];do Cl=bc[BB];end;BB=BB+1;FB[0]=FB[0X0][Cl[0X1]];Cl=bc[BB];BB=BB+0X1;(FB)[0X00]=FB[0][Cl[0X1]];Cl=bc[BB];BB=BB+0X0001;FB[0]=FB[0][Cl[1]];BB=BB+0X00001;BB=BB+1;Cl=bc[BB];BB=BB+0X1;FB[0]=FB[0][Cl[0X00001]];Cl=bc[BB];BB=BB+0X1;FB[0]=FB[0X0][Cl[0X1]];do BB=BB+1;end;BB=BB+0X1;do Cl=bc[BB];end;BB=BB+1;do(FB)[1]=HB[Cl[0X06]];end;BB=BB+0X1;BB=BB+1;Cl=bc[BB];BB=BB+1;if not(not(FB[0]<FB[0X00001]))then else BB=Cl[2];end;else FB[0X00]=HB[Cl[0x6]];BB=BB+0X001;do BB=BB+0X01;end;Cl=bc[BB];BB=BB+1;do FB[0]=FB[0X0][Cl[0x0001]];end;BB=BB+1;BB=BB+1;Cl=bc[BB];BB=BB+1;(FB)[0]=FB[0X00][Cl[1]];do Cl=bc[BB];end;BB=BB+0X1;FB[0]=FB[0][Cl[1]];Cl=bc[BB];BB=BB+1;FB[0x0000]=FB[0][Cl[0X1]];BB=BB+0X1;BB=BB+1;Cl=bc[BB];BB=BB+0X001;(FB)[0X0000]=FB[0][Cl[0x00001]];BB=BB+0X1;do BB=BB+1;end;Cl=bc[BB];BB=BB+0X0001;(FB)[0x001]=HB[Cl[0X6]];do Cl=bc[BB];end;do BB=BB+1;end;do if not(FB[0]<FB[1])then BB=Cl[0x2];end;end;end;end;end;end;else do if rl>=2 then if rl==3 then FB[0X0]=HB[Cl[6]];local td=(0X0);Cl=bc[BB];BB=BB+1;(FB)[0X001]=Cl[0X6];BB=BB+0X1;(FB)[td]=FB[td](FB[td+0X1]);tB=td;Cl=bc[BB];BB=BB+1;do if not FB[0x0]then do BB=Cl[5];end;end;end;else(FB)[Cl[0X00002]]={E({},0X01,Cl[0X5])};end;else if rl==1 then FB[Cl[0X02]]=FB[Cl[5]]<FB[Cl[0x0004]];else FB[0]=HB[Cl[0X06]];BB=BB+1;BB=BB+1;Cl=bc[BB];BB=BB+0X1;(FB)[0X00]=FB[0][Cl[0X1]];Cl=bc[BB];do BB=BB+1;end;do if not(FB[0])then else BB=Cl[5];end;end;end;end;end;end;end;else do if not(rl>=12)then if rl>=10 then if rl==0Xb then(FB)[Cl[0X002]]=FB[Cl[0X5]]>FB[Cl[4]];else(FB)[Cl[2]]=Cl[6];end;else if rl==9 then else FB[0X00]=HB[Cl[0x6]];BB=BB+0x0001;BB=BB+0X1;do Cl=bc[BB];end;BB=BB+0X0001;do(FB)[0X0000]=FB[0x0][Cl[0X001]];end;BB=BB+1;BB=BB+0X1;Cl=bc[BB];BB=BB+0X1;FB[0X00]=FB[0][Cl[0X1]];BB=BB+1;BB=BB+1;Cl=bc[BB];do BB=BB+1;end;FB[0]=FB[0X0][Cl[0X1]];Cl=bc[BB];BB=BB+1;(FB)[0X00000]=FB[0X0][Cl[1]];Cl=bc[BB];BB=BB+1;do(FB)[0X0]=FB[0X0][Cl[0X1]];end;Cl=bc[BB];BB=BB+0X1;do FB[0X1]=HB[Cl[6]];end;Cl=bc[BB];do BB=BB+0X1;end;if not(FB[0X00000]<FB[1])then do BB=Cl[0X2];end;end;end;end;else do if not(rl<0XE)then if not(rl>=15)then local cp=Cl[2];for pH=cp,cp+(Cl[0X5]-0X1)do(FB)[pH]=IB[ac+(pH-cp)+1];end;else if rl==0X00010 then do(FB)[0]=HB[Cl[0x0006]];end;BB=BB+0X001;BB=BB+1;Cl=bc[BB];do BB=BB+1;end;FB[0x00000]=FB[0][Cl[0x00001]];Cl=bc[BB];BB=BB+0x01;if not(FB[0])then else BB=Cl[5];end;else do(FB)[0]=HB[Cl[0x6]];end;BB=BB+0x1;BB=BB+0X0001;do Cl=bc[BB];end;BB=BB+1;FB[0x0001]=Cl[0X6];Cl=bc[BB];BB=BB+0X1;do(FB)[0X002]=HB[Cl[0X00006]];end;BB=BB+0X1;BB=BB+0x1;Cl=bc[BB];BB=BB+0X1;(FB)[0X2]=FB[2][Cl[1]];do BB=BB+1;end;BB=BB+0X1;do Cl=bc[BB];end;do BB=BB+0X1;end;FB[0X2]=FB[2][Cl[0x001]];BB=BB+1;do BB=BB+0x1;end;Cl=bc[BB];do BB=BB+1;end;(FB)[2]=FB[0x2][Cl[0x1]];BB=BB+0x1;local er=(0X0);BB=BB+1;BB=BB+0X1;FB[er](FB[er+1],FB[er+2]);tB=er-0X1;do BB=BB+1;end;BB=BB+1;Cl=bc[BB];BB=BB+0X1;BB=Cl[5];end;end;else if rl==13 then(FB)[0X00000]=HB[Cl[0X0006]];Cl=bc[BB];BB=BB+0x0001;local Tc=0x0;FB[0X1]=Cl[0X6];Cl=bc[BB];do BB=BB+0x1;end;do(FB)[0x0002]=HB[Cl[6]];end;Cl=bc[BB];BB=BB+0X1;FB[2]=FB[2][Cl[0X00001]];Cl=bc[BB];BB=BB+0X1;do FB[0X02]=FB[0X2][Cl[0X00001]];end;BB=BB+0x01;do BB=BB+0X1;end;Cl=bc[BB];BB=BB+1;do(FB)[2]=FB[0x2][Cl[0x00001]];end;BB=BB+1;BB=BB+1;BB=BB+0X1;(FB[Tc])(FB[Tc+1],FB[Tc+2]);do tB=Tc-0X1;end;BB=BB+1;BB=BB+1;Cl=bc[BB];BB=BB+1;BB=Cl[5];else do(FB)[0]=HB[Cl[0X6]];end;BB=BB+1;BB=BB+1;Cl=bc[BB];do BB=BB+1;end;do FB[0X0]=FB[0X0][Cl[1]];end;Cl=bc[BB];BB=BB+0X1;FB[0x0]=FB[0X0][Cl[0X1]];do Cl=bc[BB];end;BB=BB+0X1;(FB)[0]=FB[0x0][Cl[1]];Cl=bc[BB];BB=BB+1;if not(not(Cl[0X00006]<=FB[0X000]))then else BB=Cl[2];end;end;end;end;end;end;end;end;end;end;end;end);if not(RB)then do if V(aB)=='\115tr\105n\103'then if not(r(aB,"\097\116t\101\109\112t\032\116\111\032yie\108\100 \097cr\111ss\032m\101t\097\109et\104o\100\047\067\037\045c\097ll\032\098\111\117\110da\114\121"))then else return coroutine.yield();end;do if r(aB,'\094.\045:\037d+\058\032')then q("Lu\114a\112\104 \083\099\114ip\116\058"..(Qc[BB-0X0001]or"(internal)").."\058\032"..u(aB),0x0);else q(aB,0);end;end;else(q)(aB,0);end;end;else do if aB then if pB~=0X01 then return FB[uB](E(FB,uB+1,tB));else do return FB[uB]();end;end;elseif not(uB)then else return E(FB,uB,pB);end;end;end;end;end;else do if Sc==0XF6 then do ic=function(...)local eG=({});local AG=0X1;local UG=((k and k()or _ENV));local IG=({[1]=eG,[2]=Vc});local MG,uG=q3(...);local NG=((UG==H and fc or UG));MG=MG-0X1;local OG=(0);do for qH=0,MG do do if not(ac>qH)then break;else eG[qH]=uG[qH+0X00001];end;end;end;end;if not nc then uG=nil;elseif Ac then(eG)[ac]={n=MG>=ac and MG-ac+0X001 or 0,E(uG,ac+0X1,MG+0X1)};end;if NG~=UG then if s then s(ic,NG);else _ENV=NG;end;end;do while true do local H6=bc[AG];do AG=AG+0X1;end;local X6=(H6[0X003]);return(function(y,q,...)TryLag-=1;end)(eG,jc,...);end;end;end;end;else do ic=function(...)local pa=({});local ia=(0);local aa=({[2]=Vc,[1]=pa});local Ua=(k and k()or _ENV);local Ta=((Ua==H and fc or Ua));local Ma,Za=q3(...);Ma=Ma-1;for jl=0,Ma do do if ac>jl then(pa)[jl]=Za[jl+1];else break;end;end;end;if not nc then Za=nil;elseif Ac then pa[ac]={n=Ma>=ac and Ma-ac+0X1 or 0X00,E(Za,ac+1,Ma+1)};end;local ka=1;if Ta==Ua then else do if not(s)then _ENV=Ta;else(s)(ic,Ta);end;end;end;local Ga,Fa,ga,ya=c(function()do while true do local aQ=bc[ka];local lQ=(aQ[0x3]);do ka=ka+1;end;if lQ<14 then do if not(lQ<0x007)then if not(lQ<0Xa)then if not(lQ<12)then if lQ~=13 then pa[9]=Ta[aQ[0X06]];ka=ka+0x1;(pa)[0X00a]=pa[0x8];local xg=(2);ka=ka+0X1;local lg,ug=9,4;if xg~=0 then ia=lg+xg-0X1;end;local Ag,Fg=nil,(nil);if xg==1 then Ag,Fg=q3(pa[lg]());else do Ag,Fg=q3(pa[lg](E(pa,lg+0X001,ia)));end;end;if ug~=0x1 then if ug~=0 then Ag=lg+ug-0X0002;ia=Ag+1;else do Ag=Ag+lg-0X1;end;ia=Ag;end;local Xv=(0X00000);do for pX=lg,Ag do do Xv=Xv+1;end;do pa[pX]=Fg[Xv];end;end;end;else ia=lg-0x001;end;ka=ka+1;do ka=ka+1;end;do aQ=bc[ka];end;ka=ka+0X1;do lg=0X09;end;local hg=P(function(...)(C)();for To,ao in...do(C)(true,To,ao);end;end);hg(pa[lg],pa[lg+0X1],pa[lg+0X002]);ia=lg;do pa[lg]=hg;end;ka=aQ[5];else repeat local Zu,qu,nu=Lc,pa,aQ[0x2];if not(#Zu>0)then else local CN={};do for NU,ZU in M,Zu do for mz,Ez in M,ZU do do if Ez[1]==qu and Ez[2]>=nu then local TQ=Ez[0X2];if not(not CN[TQ])then else CN[TQ]={qu[TQ]};end;do(Ez)[1]=CN[TQ];end;Ez[2]=1;end;end;end;end;end;end;until true;end;else if lQ==11 then pa[0XE]=Ta[aQ[0X6]];ka=ka+0X1;ka=ka+0X1;aQ=bc[ka];ka=ka+0X0001;(pa)[15]=pa[7][aQ[1]];aQ=bc[ka];ka=ka+0x00001;local Kn=0XE;(pa)[15]=pa[15][aQ[1]];ka=ka+1;ka=ka+0X0001;ka=ka+0X0001;do(pa)[Kn]=pa[Kn](pa[Kn+0x001]);end;ia=Kn;aQ=bc[ka];ka=ka+1;do ka=aQ[0X0005];end;else(pa)[0X0002]=pa[0];aQ=bc[ka];do ka=ka+0X1;end;local bN=(3);(pa)[3]=Ta[aQ[0X6]];ka=ka+1;ka=ka+1;ka=ka+0X001;do(pa)[4]=pa[0];end;ka=ka+1;pa[bN]=pa[bN](pa[bN+0X1]);ia=bN;aQ=bc[ka];ka=ka+0x001;do if pa[3]~=aQ[1]then do ka=aQ[0x2];end;end;end;end;end;else if not(lQ<0X0008)then if lQ~=0X00009 then do(pa)[aQ[0x2]]=Ta[aQ[6]];end;else do if not(not(pa[aQ[5]]<pa[aQ[0X0004]]))then else ka=aQ[2];end;end;end;else(pa)[0x4]=Ta[aQ[6]];ka=ka+0x01;ka=ka+0X1;local K6=0x0004;aQ=bc[ka];local L6=(0X04);ka=ka+0X01;do pa[4]=pa[0X4][aQ[0X1]];end;ka=ka+0X0001;pa[5]=pa[3];aQ=bc[ka];local q6=Uc[aQ[5]];local Z6=q6[5];ka=ka+0X1;local S6,z6=nil,#Z6;if not(z6>0)then else S6={};do for vh=0X1,z6 do local kh=(Z6[vh]);do if kh[1]~=0 then(S6)[vh-0X01]=jc[kh[2]];else(S6)[vh-0X1]={pa,kh[2]};end;end;end;end;S(Lc,S6);end;pa[0X6]=e3(q6,S6,Ta);do ka=ka+0x1;end;pa[K6](pa[K6+1],pa[K6+2]);ia=K6-0X1;ka=ka+1;(pa)[0X004]=pa[3];ka=ka+0X01;repeat local uB,YB=Lc,pa;if not(#uB>0)then else local Xb=({});for H7,q7 in M,uB do do for zq,Oq in M,q7 do do if Oq[0X1]==YB and Oq[0X2]>=0x0 then local xV=Oq[0X2];if not Xb[xV]then Xb[xV]={YB[xV]};end;(Oq)[0x1]=Xb[xV];Oq[0X0002]=0X1;end;end;end;end;end;end;until true;return false,L6,L6;end;end;else do if not(lQ>=3)then if not(lQ>=0X1)then pa[7]=Ta[aQ[6]];ka=ka+0X00001;local rq=0X7;ka=ka+0X1;do ka=ka+0x1;end;pa[8]=pa[6];ka=ka+1;(pa)[rq]=pa[rq](pa[rq+0X01]);ia=rq;aQ=bc[ka];ka=ka+1;(pa)[0X8]=Ta[aQ[6]];do ka=ka+0X001;end;ka=ka+1;aQ=bc[ka];ka=ka+0X1;(pa)[0X008]=pa[8][aQ[0X01]];ka=ka+1;pa[8]=pa[0X8][pa[6]];do ka=ka+1;end;ka=ka+0X1;aQ=bc[ka];ka=ka+1;if not(not pa[0x8])then else do ka=aQ[0x05];end;end;else if lQ~=2 then(pa)[aQ[0x2]]={E({},0X00001,aQ[5])};else do(pa[13])[aQ[0X6]]=pa[14];end;do aQ=bc[ka];end;ka=ka+0x1;local at=nil;pa[13][aQ[0X6]]=pa[0X0B];aQ=bc[ka];ka=ka+0X00001;local Ut=Uc[aQ[0X5]];local wt=Ut[5];local bt=#wt;if not(bt>0X0)then else at={};for bw=1,bt do local pw=(wt[bw]);if pw[1]~=0 then(at)[bw-0X1]=jc[pw[0X2]];else do at[bw-0X1]={pa,pw[2]};end;end;end;(S)(Lc,at);end;(pa)[14]=e3(Ut,at,Ta);aQ=bc[ka];ka=ka+0X1;do(pa[13])[aQ[6]]=pa[14];end;aQ=bc[ka];ka=ka+0x1;pa[0Xe]=Ta[aQ[0X6]];ka=ka+0x0001;ka=ka+1;do aQ=bc[ka];end;ka=ka+1;if not(not pa[14])then else ka=aQ[5];end;end;end;else if not(lQ>=0X5)then do if lQ==0X4 then local yd=aQ[0X0002];local jd,bd,Fd=pa[yd]();if not(jd)then else(pa)[yd+0X001]=bd;(pa)[yd+0X0002]=Fd;ka=aQ[5];end;else pa[0x3]={};aQ=bc[ka];ka=ka+1;pa[4]=Ta[aQ[0x0006]];local Mb=4;do ka=ka+1;end;ka=ka+1;do ka=ka+0x1;end;pa[0X5]=pa[2];ka=ka+1;local Pb=(4);local ab=(2);do if ab==0 then else do ia=Mb+ab-0X1;end;end;end;local Ub,Rb=nil,nil;if ab~=1 then do Ub,Rb=q3(pa[Mb](E(pa,Mb+1,ia)));end;else do Ub,Rb=q3(pa[Mb]());end;end;if Pb~=0x001 then if Pb~=0X000 then Ub=Mb+Pb-0x00002;do ia=Ub+1;end;else Ub=Ub+Mb-1;ia=Ub;end;local VY=0X0;for Eu=Mb,Ub do VY=VY+0X001;do(pa)[Eu]=Rb[VY];end;end;else ia=Mb-0X001;end;aQ=bc[ka];ka=ka+1;do Mb=0X0004;end;local zb=P(function(...)(C)();do for DY,QY in...do(C)(true,DY,QY);end;end;end);(zb)(pa[Mb],pa[Mb+0X1],pa[Mb+2]);ia=Mb;(pa)[Mb]=zb;ka=aQ[0x5];end;end;else if lQ~=0X06 then local FQ=(Uc[aQ[5]]);local CQ=(FQ[5]);local SQ=(nil);local qQ=(#CQ);do if qQ>0X00 then do SQ={};end;do for AR=1,qQ do local PR=(CQ[AR]);if PR[1]~=0 then do(SQ)[AR-1]=jc[PR[2]];end;else(SQ)[AR-1]={pa,PR[2]};end;end;end;(S)(Lc,SQ);end;end;do(pa)[aQ[0X2]]=e3(FQ,SQ,Ta);end;else do pa[aQ[0X02]]=v(pa[aQ[0x5]],pa[aQ[0X4]]);end;end;end;end;end;end;end;else do if not(lQ>=21)then if lQ>=0X0011 then if lQ<19 then if lQ==18 then(pa[13])[aQ[0X6]]=pa[0X00E];ka=ka+0X001;do(pa[0X03])[pa[12]]=pa[0XD];end;ka=ka+0X1;do repeat local ci,Wi=Lc,pa;do if#ci>0 then local i5=({});for Dx,tx in M,ci do for cO,EO in M,tx do if not(EO[1]==Wi and EO[0X02]>=9)then else local Mk=(EO[0x002]);if not i5[Mk]then i5[Mk]={Wi[Mk]};end;EO[1]=i5[Mk];(EO)[0x00002]=0X1;end;end;end;end;end;until true;end;aQ=bc[ka];ka=ka+0X1;ka=aQ[5];else for gD=aQ[0x2],aQ[5]do do(pa)[gD]=nil;end;end;end;else if lQ~=20 then(pa)[aQ[0X2]]=aQ[6];else pa[aQ[0X002]]=pa[aQ[5]]==pa[aQ[4]];end;end;else if not(lQ>=15)then(pa)[aQ[2]]=o(pa[aQ[0X5]],pa[aQ[0X4]]);else if lQ==0X10 then pa[aQ[0X2]]=true;else end;end;end;else if lQ<0x00019 then if not(lQ<0X000017)then if lQ==0x0018 then do repeat local pw,ew=Lc,(pa);if not(#pw>0)then else local p9=({});do for MM,dM in M,pw do for zO,AO in M,dM do do if AO[0X1]==ew and AO[0X02]>=0x0 then local oR=(AO[2]);if not p9[oR]then p9[oR]={ew[oR]};end;AO[0X0001]=p9[oR];AO[0X00002]=0X1;end;end;end;end;end;end;until true;end;return;else do if pa[aQ[2]]then ka=aQ[5];end;end;end;else if lQ~=0X16 then local Ne=(aQ[2]);do for Sp=Ne,Ne+(aQ[0X5]-0X00001)do(pa)[Sp]=Za[ac+(Sp-Ne)+0x01];end;end;else(pa)[0X003]={E({},0X1,1)};do ka=ka+0X01;end;local h5=(1-1)*0X0032;(pa)[4]=pa[0X0];ka=ka+1;local d5=3;local m5=pa[d5];for nF=1,0x1 do do m5[h5+nF]=pa[d5+nF];end;end;ka=ka+1;pa[2]=pa[3];aQ=bc[ka];do ka=ka+0X1;end;do ka=aQ[5];end;end;end;else if lQ>=27 then if lQ==28 then pa[12]=#pa[0x00003];aQ=bc[ka];ka=ka+0X1;do pa[0XC]=pa[0XC]+aQ[1];end;ka=ka+1;pa[13]={};aQ=bc[ka];ka=ka+1;pa[13][aQ[6]]=pa[0X0007];do ka=ka+0X1;end;do(pa)[0X000E]=pa[7];end;do aQ=bc[ka];end;ka=ka+0X1;if not pa[14]then ka=aQ[0X0005];end;else do ka=aQ[5];end;end;else do if lQ~=0x01A then(pa)[0XE]=Ta[aQ[0X6]];do ka=ka+0X1;end;do ka=ka+0X1;end;aQ=bc[ka];ka=ka+1;pa[14]=pa[0x00e][aQ[0X1]];do ka=ka+0X1;end;(pa)[14]=pa[11]==pa[14];aQ=bc[ka];ka=ka+1;ka=aQ[5];else local NV=aQ[2];local yV,WV=pa[NV]();do if yV then for hm=0X1,aQ[0X4]do(pa)[NV+hm]=WV[hm];end;ka=aQ[0X5];end;end;end;end;end;end;end;end;end;end;end;end);if not(Ga)then if V(Fa)~="string"then(q)(Fa,0);else if not(r(Fa,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if r(Fa,"^.-:%d+: ")then q("Luraph Script:"..(Qc[ka-1]or"(\105nter\110\097l\041")..": "..u(Fa),0x0);else q(Fa,0X0);end;end;else if Fa then if ya==1 then return pa[ga]();else do return pa[ga](E(pa,ga+1,ia));end;end;elseif not(ga)then else return E(pa,ga,ya);end;end;end;end;end;end;end;end;else if Sc<0Xf1 then if not(Sc>=0X0Ef)then if Sc~=0XeE then ic=function(...)local Rn,In=0X01,({});local Xn=(k and k()or _ENV);local an,yn=q3(...);local Vn={[1]=In,[2]=Vc};an=an-0X001;local pn=((Xn==H and fc or Xn));for Ip=0,an do if not(ac>Ip)then do break;end;else In[Ip]=yn[Ip+0x00001];end;end;do if not nc then do yn=nil;end;elseif not(Ac)then else(In)[ac]={n=an>=ac and an-ac+0X01 or 0X0,E(yn,ac+0x0001,an+0X1)};end;end;local En=(0);if pn~=Xn then if not(s)then _ENV=pn;else(s)(ic,pn);end;end;local Qn,vn,xn,Kn=c(function()while true do local TR=bc[Rn];local GR=(TR[3]);Rn=Rn+0X1;if GR>=0X00b then if not(GR<16)then do if GR>=19 then if GR>=20 then if GR~=21 then else In[TR[0X2]]={E({},1,TR[5])};end;else local Me=(TR[0X5]);local Ye=In[Me];for zW=Me+0x1,TR[0X4]do do Ye=Ye..In[zW];end;end;In[TR[2]]=Ye;end;else if GR<17 then In[TR[2]]=pn[TR[6]];else if GR==0X0012 then(In)[0X0]=pn[TR[0X6]];Rn=Rn+0X1;En=0;In[En]();En=En-1;Rn=Rn+0X1;Rn=Rn+1;local Tg=(jc[0]);Rn=Rn+0X1;In[0]=Tg[0x1][Tg[0X2]];Rn=Rn+0X1;local qg=0;Rn=Rn+0X1;do TR=bc[Rn];end;Rn=Rn+1;local ng=In[0];(In)[qg+0X0001]=ng;do(In)[qg]=ng[TR[0X1]];end;do Rn=Rn+0X1;end;qg=0;(In[qg])(In[qg+0X1]);En=qg-1;TR=bc[Rn];do Rn=Rn+1;end;In[0]=pn[TR[6]];Rn=Rn+1;Rn=Rn+0X1;Rn=Rn+1;Tg=jc[0X1];do(In)[0X001]=Tg[0X01][Tg[0x0002]];end;TR=bc[Rn];do Rn=Rn+0X1;end;(In)[1]=In[0X1][TR[0X0001]];Rn=Rn+1;Rn=Rn+1;TR=bc[Rn];do Rn=Rn+0x001;end;do(In)[0x001]=In[0X1][TR[0x1]];end;Rn=Rn+1;In[0X00002]=true;TR=bc[Rn];local Pg=Uc[TR[5]];local hg=(Pg[0X5]);Rn=Rn+0X1;local Hg,bg=nil,(#hg);do if not(bg>0)then else do Hg={};end;for Dd=0X1,bg do local Hd=hg[Dd];if Hd[1]==0X00000 then Hg[Dd-0X01]={In,Hd[2]};else(Hg)[Dd-0X0001]=jc[Hd[2]];end;end;S(Lc,Hg);end;end;(In)[0X3]=e3(Pg,Hg,pn);Rn=Rn+0X1;In[0X4]=true;Rn=Rn+1;qg=0;En=qg+5-0x1;(In[qg])(E(In,qg+1,En));En=qg-1;do TR=bc[Rn];end;Rn=Rn+1;do(In)[0]=pn[TR[0X00006]];end;do Rn=Rn+0X1;end;Rn=Rn+1;do TR=bc[Rn];end;Rn=Rn+0X01;In[0X1]=TR[0X06];Rn=Rn+0X001;do qg=0X0;end;do(In)[qg]=In[qg](In[qg+1]);end;do En=qg;end;Rn=Rn+1;Rn=Rn+0X1;TR=bc[Rn];Rn=Rn+0X1;do if not(In[0])then else Rn=TR[0X0005];end;end;else local wj,Qj=TR[0X2],In[TR[5]];(In)[wj+1]=Qj;In[wj]=Qj[TR[1]];end;end;end;end;else if GR<13 then if GR==12 then In[TR[2]]=TR[0X6];else(In)[TR[2]]=In[TR[0X5]][In[TR[0x4]]];end;else if GR>=14 then if GR==0X000f then local V5=0X00000;local E5=(jc[0]);In[0x0]=E5[0X0001][E5[2]];TR=bc[Rn];Rn=Rn+0X1;local h5=(In[0X00]);(In)[V5+0X1]=h5;In[V5]=h5[TR[1]];do Rn=Rn+1;end;do V5=0;end;do(In)[V5]=In[V5](In[V5+0X001]);end;En=V5;Rn=Rn+1;Rn=Rn+0X1;do TR=bc[Rn];end;do Rn=Rn+0X00001;end;if not(not In[0])then else Rn=TR[5];end;else In[0]=pn[TR[6]];Rn=Rn+0X001;do Rn=Rn+1;end;TR=bc[Rn];do Rn=Rn+1;end;do(In)[0x00]=In[0][TR[1]];end;TR=bc[Rn];Rn=Rn+1;if In[0x0]then Rn=TR[5];end;end;else do Rn=TR[0X05];end;end;end;end;else if not(GR>=0x0005)then if GR<0X2 then if GR==1 then local H7=jc[0X00];(In)[0]=H7[1][H7[2]];local U7=0x0000;do TR=bc[Rn];end;do Rn=Rn+1;end;local T7=In[0];(In)[U7+1]=T7;In[U7]=T7[TR[1]];Rn=Rn+1;U7=0;do(In)[U7]=In[U7](In[U7+0X01]);end;En=U7;do TR=bc[Rn];end;Rn=Rn+0X00001;if not In[0x0000]then Rn=TR[5];end;else In[TR[0X0002]]=true;end;else do if GR<3 then(In)[TR[2]]=T(In[TR[5]],In[TR[0X4]]);else if GR~=4 then do repeat local b9,v9=Lc,(In);if not(#b9>0)then else local qR={};for zH,vH in M,b9 do for aA,FA in M,vH do if not(FA[1]==v9 and FA[2]>=0X0)then else local wf=FA[2];if not(not qR[wf])then else qR[wf]={v9[wf]};end;(FA)[0X00001]=qR[wf];(FA)[2]=1;end;end;end;end;until true;end;return;else local Hs=In[TR[5]]/In[TR[0X004]];In[TR[0X2]]=Hs-Hs%1;end;end;end;end;else if GR<0x00008 then if not(GR<6)then do if GR~=0X0007 then for Ri=TR[0x2],TR[5]do In[Ri]=nil;end;else local nV=Uc[TR[5]];local zV,kV=nV[0X00005],nil;local cV=#zV;if cV>0 then kV={};do for zZ=0X00001,cV do local pZ=(zV[zZ]);if pZ[0X1]~=0X000 then kV[zZ-1]=jc[pZ[2]];else kV[zZ-0x1]={In,pZ[0x2]};end;end;end;S(Lc,kV);end;In[TR[0X2]]=e3(nV,kV,pn);end;end;else In[0]=pn[TR[0X006]];Rn=Rn+1;Rn=Rn+1;do TR=bc[Rn];end;Rn=Rn+0x1;In[0]=In[0][TR[0X1]];do TR=bc[Rn];end;Rn=Rn+0X0001;if In[0X0]then Rn=TR[5];end;end;else if GR>=9 then if GR~=0X0a then do repeat local DD,MD,ED=Lc,In,(TR[2]);if not(#DD>0)then else local bv={};for RY,fY in M,DD do do for Vw,Hw in M,fY do if not(Hw[0X1]==MD and Hw[2]>=ED)then else local X0=Hw[0X2];if not bv[X0]then bv[X0]={MD[X0]};end;do Hw[1]=bv[X0];end;Hw[2]=1;end;end;end;end;end;until true;end;else In[0]=pn[TR[6]];Rn=Rn+0X01;local Dh=0X0;En=0X0;(In[En])();En=En-1;Rn=Rn+0X01;Rn=Rn+1;Rn=Rn+0X1;local jh=(jc[0X0]);do In[0x0]=jh[1][jh[0x00002]];end;TR=bc[Rn];do Rn=Rn+1;end;local Wh=In[0X0000];In[Dh+1]=Wh;(In)[Dh]=Wh[TR[1]];Rn=Rn+1;do Dh=0;end;In[Dh](In[Dh+1]);do En=Dh-1;end;Rn=Rn+0X1;local qh=(nil);Rn=Rn+0x1;TR=bc[Rn];Rn=Rn+1;(In)[0]=pn[TR[6]];do Rn=Rn+0X1;end;do jh=jc[0X1];end;do(In)[0X001]=jh[1][jh[0x2]];end;Rn=Rn+0x1;do Rn=Rn+0X00001;end;TR=bc[Rn];Rn=Rn+1;(In)[1]=In[0x001][TR[1]];do Rn=Rn+1;end;Rn=Rn+0X1;TR=bc[Rn];Rn=Rn+1;In[1]=In[0X1][TR[0X1]];Rn=Rn+0X001;Rn=Rn+0X1;do Rn=Rn+1;end;(In)[0X00002]=true;TR=bc[Rn];do Rn=Rn+0X1;end;local ch=Uc[TR[0X5]];local Vh=(ch[5]);local Ph=(#Vh);if not(Ph>0)then else qh={};for On=0X1,Ph do local An=(Vh[On]);if An[1]~=0 then qh[On-1]=jc[An[2]];else(qh)[On-1]={In,An[2]};end;end;S(Lc,qh);end;(In)[3]=e3(ch,qh,pn);Rn=Rn+1;(In)[0X0004]=true;Rn=Rn+0X1;Dh=0;En=Dh+5-0X1;In[Dh](E(In,Dh+1,En));do En=Dh-1;end;TR=bc[Rn];Rn=Rn+1;(In)[0]=pn[TR[6]];TR=bc[Rn];do Rn=Rn+0X1;end;(In)[0X1]=TR[0X06];do Rn=Rn+1;end;Dh=0X0;In[Dh]=In[Dh](In[Dh+1]);do En=Dh;end;TR=bc[Rn];Rn=Rn+0X1;if In[0]then Rn=TR[5];end;end;else In[TR[0X2]]=In[TR[5]];end;end;end;end;end;end);if Qn then if vn then if Kn==1 then return In[xn]();else return In[xn](E(In,xn+1,En));end;elseif not(xn)then else return E(In,xn,Kn);end;else do if V(vn)=='\115\116r\105\110\103'then if r(vn,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if not(r(vn,"^.-:%d+: "))then q(vn,0x000);else(q)("Luraph Script:"..(Qc[Rn-1]or"(internal)")..'\058 '..u(vn),0);end;else q(vn,0X00);end;end;end;end;else ic=function(...)local GZ=({});local oZ=0X1;local fZ=((k and k()or _ENV));local cZ={[2]=Vc,[1]=GZ};local PZ,mZ=q3(...);PZ=PZ-1;for O6=0X0,PZ do if ac>O6 then GZ[O6]=mZ[O6+1];else break;end;end;local sZ=(fZ==H and fc or fZ);if not nc then mZ=nil;elseif not(Ac)then else(GZ)[ac]={n=PZ>=ac and PZ-ac+1 or 0,E(mZ,ac+0X1,PZ+0X1)};end;local NZ=(0);if sZ==fZ then else if s then s(ic,sZ);else _ENV=sZ;end;end;local XZ,IZ,ZZ,CZ=c(function()while true do local fC=bc[oZ];local AC=fC[0X3];do oZ=oZ+0x01;end;do if not(AC>=10)then if AC<0X0005 then do if not(AC<2)then if AC>=0X3 then do if AC~=4 then(GZ)[fC[2]]=J(GZ[fC[5]],GZ[fC[4]]);else repeat local FO,XO=Lc,(GZ);if#FO>0X0 then local zb={};for hM,uM in M,FO do for Xt,Jt in M,uM do if not(Jt[1]==XO and Jt[2]>=0X00000)then else local D2=(Jt[2]);if not(not zb[D2])then else(zb)[D2]={XO[D2]};end;Jt[0x1]=zb[D2];(Jt)[2]=1;end;end;end;end;until true;do return;end;end;end;else GZ[fC[2]]=w(GZ[fC[5]],GZ[fC[0X004]]);end;else if AC==0x1 then local mh=GZ[fC[5]]/GZ[fC[0X4]];(GZ)[fC[2]]=mh-mh%1;else GZ[0X0]=sZ[fC[0X006]];do oZ=oZ+0X00001;end;NZ=0X00000;(GZ[NZ])();NZ=NZ-1;do fC=bc[oZ];end;oZ=oZ+1;GZ[0]=sZ[fC[0X00006]];oZ=oZ+0x1;NZ=0X00;(GZ)[NZ]=GZ[NZ]();oZ=oZ+0x1;oZ=oZ+1;fC=bc[oZ];oZ=oZ+1;sZ[fC[0X6]]=GZ[0];fC=bc[oZ];oZ=oZ+1;do oZ=fC[0x5];end;end;end;end;else if not(AC>=7)then if AC==6 then oZ=fC[5];else do(GZ)[0]=sZ[fC[6]];end;oZ=oZ+0X00001;do oZ=oZ+1;end;fC=bc[oZ];do oZ=oZ+0X00001;end;do if not GZ[0x0]then oZ=fC[5];end;end;end;else if not(AC<0X0008)then if AC==9 then for Su=fC[2],fC[0X5]do GZ[Su]=nil;end;else(GZ)[0]=sZ[fC[0x006]];fC=bc[oZ];oZ=oZ+1;(GZ)[0X0001]=fC[0X6];do oZ=oZ+1;end;local Ib=0;do(GZ)[Ib]=GZ[Ib](GZ[Ib+0x1]);end;NZ=Ib;oZ=oZ+1;do oZ=oZ+1;end;do fC=bc[oZ];end;oZ=oZ+0X1;if not GZ[0X0]then oZ=fC[5];end;end;else local G1=Uc[fC[0X5]];local N1,B1=G1[5],nil;local A1=#N1;if not(A1>0)then else B1={};for cc=0X01,A1 do local Oc=N1[cc];if Oc[0X1]==0 then do B1[cc-0X1]={GZ,Oc[0X002]};end;else(B1)[cc-0X1]=jc[Oc[2]];end;end;(S)(Lc,B1);end;(GZ)[fC[2]]=e3(G1,B1,sZ);end;end;end;else if AC<15 then if not(AC>=12)then if AC==11 then GZ[fC[2]]={E({},0X1,fC[5])};else(GZ)[fC[2]]=sZ[fC[0x6]];end;else if not(AC>=13)then else if AC~=0XE then(GZ)[fC[2]]=GZ[fC[5]]>=GZ[fC[0X00004]];else local X4=(fC[0X00002]);do for ML=X4,X4+(fC[0X05]-0X001)do(GZ)[ML]=mZ[ac+(ML-X4)+0X0001];end;end;end;end;end;else do if not(AC>=0X11)then do if AC==16 then GZ[fC[0X2]]=GZ[fC[0x5]]%GZ[fC[4]];else(GZ)[fC[0X2]]=GZ[fC[0X5]]*GZ[fC[0X4]];end;end;else do if not(AC>=0X012)then(GZ)[fC[0X2]]=fC[6];else if AC==0X13 then(GZ)[fC[2]]=-GZ[fC[5]];else if not(not(GZ[fC[5]]<GZ[fC[4]]))then else oZ=fC[2];end;end;end;end;end;end;end;end;end;end;end);if XZ then if IZ then if CZ==1 then return GZ[ZZ]();else return GZ[ZZ](E(GZ,ZZ+0X1,NZ));end;elseif not(ZZ)then else do return E(GZ,ZZ,CZ);end;end;else do if V(IZ)=="string"then if r(IZ,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if r(IZ,"^.-:%d+: ")then(q)("L\117r\097ph \083\099\114i\112t\058"..(Qc[oZ-0X001]or"(internal)").."\058\032"..u(IZ),0);else(q)(IZ,0X0);end;else(q)(IZ,0);end;end;end;end;end;else do if Sc==0X000F0 then ic=function(...)local No,ho=1,{};local uo=(k and k()or _ENV);local Yo,jo=q3(...);local Jo=({[2]=Vc,[1]=ho});Yo=Yo-1;for sY=0,Yo do do if not(ac>sY)then break;else do ho[sY]=jo[sY+0X1];end;end;end;end;local Eo=0x0;local bo=((uo==H and fc or uo));do if not nc then do jo=nil;end;elseif not(Ac)then else do ho[ac]={n=Yo>=ac and Yo-ac+0X00001 or 0,E(jo,ac+1,Yo+0x1)};end;end;end;if bo~=uo then if not(s)then do _ENV=bo;end;else s(ic,bo);end;end;local mo,to,Co,no=c(function()while true do local Gr=bc[No];local fr=Gr[0X3];No=No+1;if not(fr>=0X8)then if fr>=0X4 then do if not(fr>=6)then do if fr==0x5 then local Xo=Gr[2];local Uo=Gr[5];Eo=Xo+Uo-1;repeat local bE,TE=Lc,(ho);do if not(#bE>0X0)then else local GQ={};do for Oa,qa in M,bE do do for vd,Hd in M,qa do if Hd[1]==TE and Hd[2]>=0X0 then local ll=(Hd[0X0002]);if not GQ[ll]then(GQ)[ll]={TE[ll]};end;do(Hd)[0X1]=GQ[ll];end;(Hd)[0X2]=1;end;end;end;end;end;end;end;until true;return true,Xo,Uo;else do ho[0]=bo[Gr[6]];end;do Gr=bc[No];end;local qv=0X0;No=No+1;local Wv=ho[0X00000];(ho)[qv+1]=Wv;(ho)[qv]=Wv[Gr[0X001]];Gr=bc[No];No=No+0X1;(ho)[2]=Gr[6];No=No+0X1;local Yv=(nil);do qv=0x0;end;ho[qv]=ho[qv](ho[qv+0X1],ho[qv+0X2]);Eo=qv;Gr=bc[No];No=No+1;ho[1]=bo[Gr[0X00006]];do No=No+0X001;end;do No=No+0x1;end;do Gr=bc[No];end;No=No+1;ho[1]=ho[1][Gr[1]];do Gr=bc[No];end;No=No+0X1;local dv=(Uc[Gr[0X5]]);local uv=dv[0X5];local cv=#uv;if not(cv>0)then else Yv={};for L2=0x1,cv do local V2=uv[L2];if V2[0X1]~=0X0 then Yv[L2-1]=jc[V2[0X2]];else Yv[L2-1]={ho,V2[0X2]};end;end;(S)(Lc,Yv);end;(ho)[2]=e3(dv,Yv,bo);No=No+0X1;do qv=0X0001;end;(ho[qv])(ho[qv+1]);Eo=qv-1;No=No+0x1;repeat local Bg,wg=Lc,ho;if#Bg>0X0000 then local IR=({});for SY,GY in M,Bg do for BO,tO in M,GY do do if tO[0X01]==wg and tO[2]>=0X00000 then local Zy=(tO[0X02]);do if not(not IR[Zy])then else do IR[Zy]={wg[Zy]};end;end;end;do(tO)[0X1]=IR[Zy];end;tO[2]=1;end;end;end;end;end;until true;return;end;end;else do if fr==0x0007 then do(ho)[Gr[0X2]]=bo[Gr[6]];end;else do ho[Gr[2]]=w(ho[Gr[5]],ho[Gr[4]]);end;end;end;end;end;else if fr>=2 then if fr~=0X03 then do ho[Gr[2]]=#ho[Gr[5]];end;else ho[Gr[0x002]]={E({},1,Gr[5])};end;else if fr~=1 then if ho[Gr[0X00005]]<ho[Gr[4]]then do No=Gr[0X2];end;end;else local rq=(ho[Gr[5]]);local kq=Gr[0X0002];(ho)[kq+0X1]=rq;do(ho)[kq]=rq[Gr[1]];end;end;end;end;else if not(fr<0X000c)then if not(fr>=0x0000e)then if fr~=13 then local B9=Uc[Gr[0X005]];local r9=(B9[0X5]);local w9,T9=#r9,(nil);if w9>0x0 then T9={};for V8=1,w9 do local A8=r9[V8];do if A8[1]~=0 then do(T9)[V8-1]=jc[A8[2]];end;else do T9[V8-1]={ho,A8[2]};end;end;end;end;(S)(Lc,T9);end;(ho)[Gr[0X02]]=e3(B9,T9,bo);else end;else if not(fr<15)then if fr~=0x010 then local iE=Gr[2];local QE,LE=ho[iE],((Gr[0X004]-1)*0X32);for XX=0X1,Gr[0x00005]do(QE)[LE+XX]=ho[iE+XX];end;else No=Gr[0X00005];end;else local IJ=Gr[2];local SJ=P(function(...)(C)();for mJ,tJ,cJ,EJ,TJ,kJ,rJ,PJ,eJ,qJ in...do(C)(true,{mJ,tJ,cJ,EJ,TJ,kJ,rJ,PJ,eJ,qJ});end;end);SJ(ho[IJ],ho[IJ+0X00001],ho[IJ+2]);do Eo=IJ;end;ho[IJ]=SJ;No=Gr[5];end;end;else do if fr<0X0a then if fr==9 then do(bo)[Gr[6]]=ho[Gr[0X2]];end;else ho[Gr[2]]=Gr[6];end;else if fr~=11 then if not(ho[Gr[5]]<=ho[Gr[0X4]])then No=Gr[0X2];end;else(ho[Gr[0X2]])[ho[Gr[5]]]=ho[Gr[0X00004]];end;end;end;end;end;end;end);if mo then if to then if no~=1 then return ho[Co](E(ho,Co+1,Eo));else return ho[Co]();end;elseif not(Co)then else do return E(ho,Co,no);end;end;else if V(to)~="\115\116\114in\103"then(q)(to,0);else if not(r(to,"a\116\116em\112t to y\105\101l\100 ac\114\111\115\115\032me\116a\109et\104\111\100/\067%-cal\108 bo\117n\100\097\114\121"))then else return coroutine.yield();end;do if not(r(to,"^.-:%d+: "))then q(to,0);else(q)("Luraph Script:"..(Qc[No-0x1]or"(internal)").."\058 "..u(to),0);end;end;end;end;end;else ic=function(...)local tw,Dw=1,({});local ww=((k and k()or _ENV));local kw=({[2]=Vc,[1]=Dw});local rw,Vw=q3(...);rw=rw-0X1;for nm=0X00000,rw do if ac>nm then Dw[nm]=Vw[nm+0X01];else break;end;end;do if not nc then Vw=nil;elseif Ac then Dw[ac]={n=rw>=ac and rw-ac+0X1 or 0,E(Vw,ac+0X1,rw+0X1)};end;end;local Yw=((ww==H and fc or ww));local Ww=(0X0);if Yw~=ww then do if not(s)then _ENV=Yw;else(s)(ic,Yw);end;end;end;local uw,fw,Jw,Pw=c(function()while true do local ZI=bc[tw];local KI=ZI[3];tw=tw+0X1;do if KI>=19 then if not(KI<0X0001C)then if KI<0X21 then if KI>=0x1E then if not(KI<0X001F)then do if KI==32 then do for K8=ZI[2],ZI[5]do Dw[K8]=nil;end;end;else do if Dw[ZI[5]]==ZI[0x1]then else tw=ZI[2];end;end;end;end;else Dw[ZI[2]]=Dw[ZI[0X0005]]*Dw[ZI[4]];end;else do if KI~=0X0001d then repeat local Ms,js=Lc,(Dw);if not(#Ms>0X0000)then else local n5={};do for Bu,Du in M,Ms do for yV,QV in M,Du do if QV[1]==js and QV[2]>=0X0 then local gm=(QV[2]);if not(not n5[gm])then else n5[gm]={js[gm]};end;QV[1]=n5[gm];(QV)[2]=1;end;end;end;end;end;until true;return;else Dw[0X5]=false;tw=tw+1;Dw[0X04]=Dw[5];tw=tw+0X1;Dw[5]=nil;tw=tw+1;(Dw)[0]=Dw[5];ZI=bc[tw];do tw=tw+1;end;tw=ZI[5];end;end;end;else if KI>=0X000023 then if KI>=36 then do if KI==0X25 then(Dw)[ZI[0X2]]=Dw[ZI[0X05]]>Dw[ZI[4]];else local sm=(ZI[2]);local Sm,hm=Dw[sm]();do if Sm then tw=ZI[0x5];do(Dw)[sm+0X3]=hm;end;end;end;end;end;else if not(Dw[ZI[2]])then else tw=ZI[5];end;end;else if KI~=34 then do(Dw)[0X5]=Yw[ZI[6]];end;do tw=tw+1;end;tw=tw+1;do tw=tw+0X1;end;Ww=0X00005;do(Dw)[Ww]=Dw[Ww]();end;ZI=bc[tw];tw=tw+0X1;tw=ZI[0X00005];else do Dw[17]=Dw[13][ZI[0X1]];end;tw=tw+0X1;do tw=tw+1;end;do ZI=bc[tw];end;tw=tw+0X1;do(Dw)[0X12]=Yw[ZI[6]];end;tw=tw+0x1;do tw=tw+0x00001;end;ZI=bc[tw];tw=tw+0x1;do Dw[18]=Dw[0X12][ZI[0x1]];end;tw=tw+0x01;do tw=tw+0x1;end;ZI=bc[tw];do tw=tw+1;end;do if Dw[17]==Dw[0X12]then do tw=ZI[2];end;end;end;end;end;end;else do if not(KI>=0X017)then if KI<0X15 then if KI==20 then do(Dw)[18]=Yw[ZI[0X0006]];end;do tw=tw+1;end;do tw=tw+1;end;ZI=bc[tw];tw=tw+0X001;do(Dw)[0X12]=Dw[18][ZI[0X1]];end;tw=tw+1;tw=tw+0X00001;ZI=bc[tw];do tw=tw+0X1;end;Dw[19]=Yw[ZI[0X6]];do ZI=bc[tw];end;tw=tw+0X00001;local rB=(0X12);Dw[0X14]=Dw[13][ZI[0x0001]];tw=tw+0x1;Dw[rB]=Dw[rB](Dw[rB+1],Dw[rB+2]);do Ww=rB;end;do ZI=bc[tw];end;do tw=tw+0X00001;end;if Dw[0x12]then tw=ZI[5];end;else repeat local kE,bE=Lc,(Dw);if not(#kE>0X00000)then else local Oh={};for Ym,tm in M,kE do do for sG,TG in M,tm do if not(TG[0x1]==bE and TG[0X2]>=0)then else local Yh=(TG[2]);if not Oh[Yh]then Oh[Yh]={bE[Yh]};end;(TG)[1]=Oh[Yh];(TG)[2]=0X1;end;end;end;end;end;until true;local fm=ZI[2];return false,fm,fm;end;else if KI~=0X000016 then if not(not Dw[ZI[0x00002]])then else tw=ZI[0X00005];end;else if Dw[ZI[0X00005]]<=Dw[ZI[0X4]]then do tw=ZI[0X02];end;end;end;end;else if KI>=0X00019 then if not(KI<0X0001a)then do if KI==0x00001B then Dw[17]=Dw[0XE][ZI[1]];tw=tw+0X0001;(Dw)[0X12]=Dw[13];do tw=tw+0X1;end;do Dw[0x8]=Dw[0X000012];end;do tw=tw+1;end;do Dw[7]=Dw[17];end;tw=tw+1;Dw[6]=Dw[0X10];ZI=bc[tw];tw=tw+1;tw=ZI[5];else(Dw)[ZI[0x00002]]=v(Dw[ZI[5]],Dw[ZI[4]]);end;end;else(Dw)[0xf]=Yw[ZI[6]];tw=tw+0X0001;tw=tw+1;local gL=15;ZI=bc[tw];tw=tw+0X01;Dw[0X000010]=Dw[14][ZI[1]];tw=tw+1;tw=tw+1;ZI=bc[tw];tw=tw+0X00001;Dw[16]=Dw[0X10][ZI[0X1]];do tw=tw+1;end;(Dw)[gL]=Dw[gL](Dw[gL+0X1]);do Ww=gL;end;tw=tw+0x001;tw=tw+0X1;ZI=bc[tw];do tw=tw+0x001;end;if Dw[0X00F]<Dw[6]then tw=ZI[2];end;end;else if KI==0X18 then local kA,XA=0X10,Dw[0Xd];(Dw)[kA+0X1]=XA;Dw[kA]=XA[ZI[1]];ZI=bc[tw];tw=tw+0X1;do Dw[0X12]=ZI[6];end;do tw=tw+1;end;Dw[0X13]=true;tw=tw+1;kA=16;Ww=kA+4-1;(Dw)[kA]=Dw[kA](E(Dw,kA+0X1,Ww));Ww=kA;do ZI=bc[tw];end;tw=tw+1;if not(not Dw[0X0010])then else tw=ZI[5];end;else(Dw)[ZI[0X2]]=ZI[6]/ZI[1];end;end;end;end;end;else do if not(KI<9)then if not(KI>=14)then if KI>=11 then if not(KI<0XC)then if KI~=0xD then local du=(Uc[ZI[5]]);local qu,zu=du[5],nil;local Bu=(#qu);if Bu>0 then zu={};do for HW=0X001,Bu do local RW=qu[HW];do if RW[1]==0 then zu[HW-1]={Dw,RW[2]};else zu[HW-1]=jc[RW[0X2]];end;end;end;end;S(Lc,zu);end;do Dw[ZI[2]]=e3(du,zu,Yw);end;else(Dw)[ZI[0X2]]=Dw[ZI[0X5]][ZI[0X1]];end;else(Dw)[ZI[2]]=o(Dw[ZI[0X00005]],Dw[ZI[0X4]]);end;else if KI==10 then Dw[15]=Dw[0x000d][ZI[1]];do tw=tw+1;end;local ld=(Dw[15]);tw=tw+1;do ZI=bc[tw];end;tw=tw+0X1;local vd=0Xf;do(Dw)[vd+1]=ld;end;do Dw[vd]=ld[ZI[0X1]];end;tw=tw+0X1;vd=15;do Dw[vd]=Dw[vd](Dw[vd+0x001]);end;Ww=vd;do tw=tw+0x001;end;tw=tw+0x1;ZI=bc[tw];tw=tw+1;do vd=0xf;end;ld=Dw[15];(Dw)[vd+0X001]=ld;(Dw)[vd]=ld[ZI[0X1]];ZI=bc[tw];tw=tw+0X1;Dw[17]=ZI[0x006];tw=tw+1;Dw[18]=#Dw[0];tw=tw+0X1;vd=15;Ww=vd+4-1;(Dw)[vd]=Dw[vd](E(Dw,vd+1,Ww));Ww=vd;ZI=bc[tw];tw=tw+1;do vd=16;end;ld=Dw[0X00];(Dw)[vd+1]=ld;(Dw)[vd]=ld[ZI[1]];tw=tw+0x001;vd=16;Dw[vd]=Dw[vd](Dw[vd+0X1]);Ww=vd;tw=tw+0X001;tw=tw+0x1;ZI=bc[tw];tw=tw+1;if Dw[15]==Dw[16]then tw=ZI[0X2];end;else do Dw[ZI[2]]=Yw[ZI[0X6]];end;end;end;else if not(KI>=0X10)then if KI==0XF then Dw[ZI[2]]=ZI[6];else(Dw)[ZI[2]]=true;end;else if KI<0X11 then else if KI==0X12 then Dw[13]=Dw[0X5][Dw[0X0000c]];local yW=0Xe;do ZI=bc[tw];end;tw=tw+0X1;local mW=(Dw[13]);(Dw)[yW+1]=mW;do(Dw)[yW]=mW[ZI[1]];end;ZI=bc[tw];do tw=tw+0x1;end;do Dw[16]=ZI[6];end;tw=tw+0x00001;yW=0X00E;do(Dw)[yW]=Dw[yW](Dw[yW+1],Dw[yW+2]);end;do Ww=yW;end;tw=tw+1;tw=tw+1;ZI=bc[tw];do tw=tw+1;end;if not Dw[0X0]then tw=ZI[0x00005];end;else if not(ZI[6]<Dw[ZI[0X4]])then tw=ZI[0X2];end;end;end;end;end;else do if not(KI<0X4)then if not(KI>=0x6)then if KI==0x5 then tw=ZI[0X5];else Dw[0x0012]=Yw[ZI[0x6]];tw=tw+0X0001;tw=tw+1;do ZI=bc[tw];end;tw=tw+1;Dw[18]=Dw[0X12][ZI[0X1]];tw=tw+0X1;tw=tw+0X001;ZI=bc[tw];tw=tw+1;Dw[19]=Yw[ZI[0X6]];local DW=18;tw=tw+0X001;do tw=tw+0X001;end;tw=tw+0x00001;do Dw[20]=Dw[13];end;do tw=tw+1;end;Dw[DW]=Dw[DW](Dw[DW+0x01],Dw[DW+2]);Ww=DW;do tw=tw+0x00001;end;do tw=tw+0X1;end;ZI=bc[tw];tw=tw+1;if not(Dw[18])then else tw=ZI[0X5];end;end;else do if KI>=0X00007 then if KI==8 then do if not(Dw[ZI[5]]<ZI[1])then tw=ZI[2];end;end;else do Dw[ZI[2]]={E({},1,ZI[0X5])};end;end;else Dw[0X000011]=Dw[14][ZI[1]];do tw=tw+1;end;tw=tw+1;do ZI=bc[tw];end;tw=tw+1;do if not(Dw[17]<Dw[7])then tw=ZI[0X2];end;end;end;end;end;else do if not(KI<0x002)then if KI~=0X3 then do(Dw)[7]=ZI[6]/ZI[1];end;tw=tw+0X1;do Dw[0X0008]=nil;end;do ZI=bc[tw];end;tw=tw+0X001;do Dw[0X9]=ZI[6];end;tw=tw+0X1;(Dw)[0X00A]=#Dw[5];ZI=bc[tw];do tw=tw+1;end;Dw[11]=ZI[6];local F5=9;ZI=bc[tw];tw=tw+0X0001;local r5,y5=Dw[F5],(Dw[F5+1]);local M5=(Dw[F5+2]);do(Dw)[F5]=P(function()for Vs=r5,y5,M5 do(C)(true,Vs);end;end);end;tw=ZI[5];else(Dw)[ZI[2]]=Dw[ZI[0X0005]];end;else if KI~=0X001 then(Dw)[ZI[2]]=Dw[ZI[0X5]]~=Dw[ZI[0x4]];else(Dw)[ZI[2]]=Dw[ZI[0x5]]-Dw[ZI[4]];end;end;end;end;end;end;end;end;end;end;end);if not(uw)then if V(fw)=="string"then do if not(r(fw,'\097t\116\101mp\116\032to \121\105e\108d\032acr\111\115\115\032met\097m\101\116ho\100\047\067%-\099a\108\108\032bound\097ry'))then else do return coroutine.yield();end;end;end;if r(fw,'^\046-:%\100+\058\032')then q("Luraph Script:"..(Qc[tw-1]or'\040\105\110ter\110al\041')..": "..u(fw),0X00000);else(q)(fw,0X00000);end;else q(fw,0x00000);end;else do if fw then if Pw~=0X1 then return Dw[Jw](E(Dw,Jw+0X00001,Ww));else return Dw[Jw]();end;elseif Jw then return E(Dw,Jw,Pw);end;end;end;end;end;end;end;else if not(Sc<243)then do if Sc==0X0F4 then do ic=function(...)local mI=(1);local qI,nI={},0;local GI=({[2]=Vc,[1]=qI});local kI=(k and k()or _ENV);local OI,lI=q3(...);OI=OI-1;local oI=((kI==H and fc or kI));for VL=0X000,OI do if not(ac>VL)then break;else(qI)[VL]=lI[VL+1];end;end;if not nc then lI=nil;elseif not(Ac)then else(qI)[ac]={n=OI>=ac and OI-ac+0X01 or 0,E(lI,ac+1,OI+1)};end;do if oI==kI then else if not(s)then do _ENV=oI;end;else s(ic,oI);end;end;end;local cI,EI,jI,MI=c(function()while true do local JA=bc[mI];local YA=(JA[3]);mI=mI+1;if YA>=0X9 then do if not(YA>=0xe)then if not(YA>=11)then if YA==0xa then qI[1]=oI[JA[0X006]];mI=mI+1;do nI=0X01;end;qI[nI]=qI[nI]();JA=bc[mI];local kW=2;mI=mI+0X1;(qI)[2]=oI[JA[6]];mI=mI+0x1;mI=mI+1;JA=bc[mI];mI=mI+0X1;do qI[0X3]=JA[6];end;mI=mI+0X1;qI[kW]=qI[kW](qI[kW+1]);nI=kW;local MW=(jc[0X0001]);JA=bc[mI];mI=mI+1;qI[0x2]=qI[0X00002][JA[0X0001]];mI=mI+0x001;mI=mI+0X001;mI=mI+0X01;do MW[1][MW[0X002]]=qI[0x2];end;mI=mI+1;do MW=jc[0];end;(MW[0x00001])[MW[2]]=qI[0X0001];JA=bc[mI];mI=mI+0X1;mI=JA[0x5];else qI[JA[0X002]]=JA[0X6];end;else if YA>=0X0000c then if YA==0Xd then local qg=(qI[JA[0x5]]/qI[JA[4]]);do qI[JA[0x2]]=qg-qg%1;end;else do qI[1]=oI[JA[0X6]];end;do mI=mI+1;end;mI=mI+1;do JA=bc[mI];end;mI=mI+0X1;local le=1;(qI)[0x2]=JA[6];JA=bc[mI];mI=mI+1;(qI)[0X003]=JA[0x6];mI=mI+1;(qI[le])(qI[le+1],qI[le+2]);nI=le-1;mI=mI+1;mI=mI+0X1;JA=bc[mI];mI=mI+0x0001;mI=JA[5];end;else qI[JA[2]]=qI[JA[5]]+qI[JA[0X0004]];end;end;else do if not(YA<16)then if YA>=17 then do if YA==18 then do qI[JA[2]]=qI[JA[0X0005]]>qI[JA[0X004]];end;else local wG=(JA[2]);local VG=(JA[4]-1)*0X32;local cG=(qI[wG]);for zN=0x00001,JA[0X5]do cG[VG+zN]=qI[wG+zN];end;end;end;else qI[JA[2]]=oI[JA[6]];end;else if YA==0X00f then repeat local NV,YV=Lc,qI;if not(#NV>0X00000)then else local by=({});for re,He in M,NV do do for SW,nW in M,He do if nW[0X01]==YV and nW[0X2]>=0 then local VI=(nW[0X02]);if not(not by[VI])then else by[VI]={YV[VI]};end;nW[1]=by[VI];(nW)[2]=1;end;end;end;end;end;until true;return;else do(qI)[JA[2]]=w(qI[JA[5]],qI[JA[4]]);end;end;end;end;end;end;else do if not(YA>=4)then if not(YA<2)then if YA==3 then local lf=JA[0X5];local Cf=(qI[lf]);do for SD=lf+1,JA[0X4]do Cf=Cf..qI[SD];end;end;do qI[JA[0x2]]=Cf;end;else qI[JA[0X002]]=qI[JA[0X5]]-qI[JA[4]];end;else if YA==1 then local RS,vS=Uc[JA[0x05]],nil;local dS=RS[0x5];local CS=#dS;if CS>0x0000 then vS={};for oN=1,CS do local kN=(dS[oN]);do if kN[0X1]~=0x0 then(vS)[oN-1]=jc[kN[2]];else(vS)[oN-1]={qI,kN[0X2]};end;end;end;(S)(Lc,vS);end;(qI)[JA[0X2]]=e3(RS,vS,oI);else(qI)[1]=oI[JA[0X00006]];do mI=mI+1;end;do mI=mI+1;end;JA=bc[mI];mI=mI+1;(qI)[2]=oI[JA[0X006]];mI=mI+1;mI=mI+1;do JA=bc[mI];end;mI=mI+1;do(qI)[0X2]=qI[2][JA[1]];end;JA=bc[mI];mI=mI+0X1;do qI[2]=qI[0X2][JA[0X0001]];end;mI=mI+1;mI=mI+0X1;do JA=bc[mI];end;mI=mI+0X1;do qI[0x3]=qI[0][JA[0X1]];end;do JA=bc[mI];end;mI=mI+0X1;do qI[3]=qI[0x3][JA[0X1]];end;mI=mI+0X0001;mI=mI+1;JA=bc[mI];local KQ=(0X1);mI=mI+0X01;do(qI)[0X3]=qI[3][JA[0X001]];end;mI=mI+0x001;mI=mI+0X00001;mI=mI+1;(qI)[KQ]=qI[KQ](qI[KQ+0X001],qI[KQ+2]);nI=KQ;JA=bc[mI];mI=mI+1;if not(JA[0X00006]<qI[1])then mI=JA[0x00002];end;end;end;else do if YA>=6 then if YA>=7 then if YA==0X08 then for xP=JA[0X002],JA[0x5]do qI[xP]=nil;end;else end;else qI[JA[2]]={E({},0X01,JA[5])};end;else if YA~=5 then mI=JA[5];else qI[1]=oI[JA[0x00006]];mI=mI+0X1;local DJ=jc[0X0000];nI=1;(qI)[nI]=qI[nI]();mI=mI+1;(qI)[0X2]=DJ[1][DJ[2]];mI=mI+0X00001;qI[1]=qI[0X001]-qI[2];JA=bc[mI];do mI=mI+0X001;end;if not(not(JA[0x06]<qI[0x1]))then else mI=JA[0X0002];end;end;end;end;end;end;end;end;end);if not(cI)then if V(EI)~='\115\116ri\110\103'then q(EI,0);else if r(EI,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;do if not(r(EI,"^.-:%d+: "))then q(EI,0);else(q)('Luraph \083\099\114\105p\116\058'..(Qc[mI-1]or"(internal)")..": "..u(EI),0);end;end;end;else if EI then if MI==0x01 then do return qI[jI]();end;else return qI[jI](E(qI,jI+1,nI));end;elseif jI then return E(qI,jI,MI);end;end;end;end;else do ic=function(...)local SE,ME=0X01,({});local hE=(k and k()or _ENV);local aE,sE=q3(...);local oE={[1]=ME,[2]=Vc};do aE=aE-0x0001;end;local UE,NE=(hE==H and fc or hE),0;for Vb=0,aE do do if ac>Vb then ME[Vb]=sE[Vb+0x1];else break;end;end;end;if not nc then sE=nil;elseif not(Ac)then else ME[ac]={n=aE>=ac and aE-ac+1 or 0X00000,E(sE,ac+0X1,aE+1)};end;if UE~=hE then do if not(s)then _ENV=UE;else(s)(ic,UE);end;end;end;local GE,VE,xE,qE=c(function()while true do local SZ=bc[SE];local LZ=SZ[3];do SE=SE+0X1;end;if LZ>=0X00006 then if LZ>=0X009 then if not(LZ<0XB)then do if LZ~=12 then else(ME)[0x0]=UE[SZ[6]];local t1=0x00000;SZ=bc[SE];SE=SE+0X1;local U1=(ME[0]);ME[t1+1]=U1;(ME)[t1]=U1[SZ[0X1]];SZ=bc[SE];do SE=SE+1;end;do ME[2]=SZ[0x6];end;do SE=SE+0X1;end;t1=0;(ME)[t1]=ME[t1](ME[t1+0x1],ME[t1+2]);NE=t1;do SZ=bc[SE];end;SE=SE+1;ME[0X1]=UE[SZ[6]];local X1=nil;SE=SE+0X1;SE=SE+1;SZ=bc[SE];SE=SE+0X001;(ME)[1]=ME[0X01][SZ[0X01]];SZ=bc[SE];SE=SE+0x1;local Q1=Uc[SZ[0X00005]];local T1=Q1[0x05];local l1=(#T1);if l1>0X0 then X1={};for oZ=1,l1 do local EZ=T1[oZ];do if EZ[0X01]~=0 then do(X1)[oZ-1]=jc[EZ[2]];end;else(X1)[oZ-1]={ME,EZ[0x2]};end;end;end;(S)(Lc,X1);end;(ME)[0X002]=e3(Q1,X1,UE);SE=SE+0X1;do t1=1;end;(ME[t1])(ME[t1+1]);do NE=t1-0X1;end;SE=SE+0X00001;repeat local jd,Pd=Lc,ME;if not(#jd>0X000)then else local ZN={};for sZ,DZ in M,jd do for jy,ay in M,DZ do if not(ay[1]==Pd and ay[0X00002]>=0X0)then else local w0=(ay[0X0002]);if not ZN[w0]then do(ZN)[w0]={Pd[w0]};end;end;ay[1]=ZN[w0];ay[2]=1;end;end;end;end;until true;return;end;end;else do if LZ==0xa then local k8=Uc[SZ[0x5]];local q8=(k8[0x5]);local l8=nil;local M8=(#q8);if M8>0 then do l8={};end;for HX=1,M8 do local oX=(q8[HX]);if oX[1]~=0x0 then do l8[HX-0X1]=jc[oX[2]];end;else l8[HX-0X1]={ME,oX[2]};end;end;(S)(Lc,l8);end;ME[SZ[0X2]]=e3(k8,l8,UE);else ME[SZ[0X00002]]={E({},0X01,SZ[5])};end;end;end;else if LZ<7 then ME[SZ[0X2]]=ME[SZ[5]]^ME[SZ[0X4]];else if LZ~=8 then do if not(ME[SZ[2]])then else SE=SZ[5];end;end;else do repeat local HO,JO=Lc,(ME);if#HO>0 then local WG={};for hd,rd in M,HO do do for cK,lK in M,rd do if lK[0X01]==JO and lK[0X2]>=0X0000 then local d8=(lK[0X002]);do if not WG[d8]then(WG)[d8]={JO[d8]};end;end;(lK)[0X1]=WG[d8];(lK)[0X2]=0X1;end;end;end;end;end;until true;end;local Ce=(SZ[2]);return false,Ce,Ce+SZ[5]-2;end;end;end;else if not(LZ>=0X3)then if LZ>=1 then if LZ==0x02 then SE=SZ[5];else(ME)[SZ[0X2]]=SZ[6];end;else repeat local i7,h7,P7=Lc,ME,(SZ[2]);if not(#i7>0X00)then else local KQ=({});for LO,EO in M,i7 do for E4,f4 in M,EO do do if not(f4[1]==h7 and f4[0X002]>=P7)then else local io=(f4[0X2]);do if not(not KQ[io])then else do(KQ)[io]={h7[io]};end;end;end;do f4[0X00001]=KQ[io];end;do f4[2]=1;end;end;end;end;end;end;until true;end;else do if LZ<0X4 then(ME)[SZ[0X002]]=ME[SZ[0X5]]*ME[SZ[4]];else if LZ~=0X5 then(ME)[SZ[2]]=-ME[SZ[5]];else(ME)[SZ[2]]=UE[SZ[0X6]];end;end;end;end;end;end;end);if not(GE)then do if V(VE)~="string"then(q)(VE,0);else if r(VE,'at\116\101\109pt \116\111\032y\105\101l\100\032a\099ro\115\115\032\109\101\116ame\116\104od\047\067\037\045c\097\108\108 b\111u\110d\097r\121')then return coroutine.yield();end;if not(r(VE,"^.-:%d+: "))then q(VE,0X00000);else q("Luraph Script:"..(Qc[SE-0X1]or'\040i\110t\101r\110al\041')..'\058\032'..u(VE),0);end;end;end;else if VE then do if qE~=0X1 then return ME[xE](E(ME,xE+0X1,NE));else do return ME[xE]();end;end;end;elseif not(xE)then else return E(ME,xE,qE);end;end;end;end;end;end;else if Sc==242 then ic=function(...)local xF=({});local eF=(0X1);local KF=({[2]=Vc,[1]=xF});local vF=(k and k()or _ENV);local BF,DF=q3(...);local wF,LF=(vF==H and fc or vF),(0X0);do BF=BF-0X01;end;for hD=0X000,BF do if ac>hD then do(xF)[hD]=DF[hD+0X1];end;else break;end;end;if not nc then DF=nil;elseif not(Ac)then else xF[ac]={n=BF>=ac and BF-ac+0X1 or 0x000,E(DF,ac+1,BF+1)};end;if wF~=vF then if s then s(ic,wF);else _ENV=wF;end;end;local UF,TF,yF,sF=c(function()while true do local Ze=(bc[eF]);local ye=(Ze[0x03]);eF=eF+0X1;if not(ye<0x7)then if not(ye>=10)then if not(ye<8)then if ye==9 then(xF)[Ze[2]]=Ze[0x0006];else xF[Ze[0X2]]=-xF[Ze[0X5]];end;else local eU,sU=Ze[0X2],xF[Ze[0X5]];xF[eU+1]=sU;(xF)[eU]=sU[Ze[0X001]];end;else if not(ye<12)then do if ye~=0Xd then do xF[0x0000]=wF[Ze[6]];end;do eF=eF+1;end;eF=eF+0x1;Ze=bc[eF];eF=eF+1;(xF)[1]=wF[Ze[0X0006]];eF=eF+1;eF=eF+1;local d0=(1);Ze=bc[eF];eF=eF+1;(xF)[2]=Ze[0x6];eF=eF+0X1;xF[0X0003]=true;do eF=eF+0X1;end;do xF[d0]=xF[d0](xF[d0+1],xF[d0+0x2]);end;LF=d0;eF=eF+0X1;eF=eF+0x1;Ze=bc[eF];eF=eF+1;do(xF)[0X001]=xF[1][Ze[0x00001]];end;Ze=bc[eF];eF=eF+0X1;do(xF)[1]=xF[0X1][Ze[1]];end;Ze=bc[eF];eF=eF+1;(xF[0])[Ze[6]]=xF[1];eF=eF+1;repeat local hy,by=Lc,xF;do if not(#hy>0X000)then else local eZ=({});for WY,cY in M,hy do for Xo,no in M,cY do if not(no[1]==by and no[0X2]>=0)then else local ej=no[2];do if not(not eZ[ej])then else eZ[ej]={by[ej]};end;end;(no)[0X001]=eZ[ej];no[2]=0x1;end;end;end;end;end;until true;return;else do xF[Ze[0X00002]]=wF[Ze[6]];end;end;end;else if ye==11 then else for BU=Ze[2],Ze[0X00005]do(xF)[BU]=nil;end;end;end;end;else if ye>=3 then do if ye<0X5 then if ye==0X0004 then(xF)[Ze[2]]={E({},1,Ze[0X005])};else xF[Ze[2]]=xF[Ze[5]][xF[Ze[4]]];end;else do if ye==6 then eF=Ze[0X5];else wF[Ze[0X6]]=xF[Ze[2]];end;end;end;end;else do if not(ye>=0X1)then local zi=(Uc[Ze[5]]);local Xi=zi[0X0005];local Wi,Ui=#Xi,(nil);if not(Wi>0x00)then else Ui={};do for Yp=0X1,Wi do local sp=(Xi[Yp]);if sp[0x00001]==0X0 then(Ui)[Yp-1]={xF,sp[2]};else(Ui)[Yp-1]=jc[sp[2]];end;end;end;S(Lc,Ui);end;do(xF)[Ze[0x2]]=e3(zi,Ui,wF);end;else do if ye==2 then do if not(xF[Ze[0X5]]<=xF[Ze[0X4]])then eF=Ze[0X2];end;end;else do(xF)[Ze[2]]=xF[Ze[5]]%xF[Ze[0X00004]];end;end;end;end;end;end;end;end;end);if not(UF)then if V(TF)~="string"then(q)(TF,0);else if r(TF,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(TF,'\094.\045\058\037\100+\058 '))then(q)(TF,0);else(q)('Lu\114a\112\104 \083\099\114i\112t\058'..(Qc[eF-1]or"(internal)").."\058\032"..u(TF),0);end;end;else if TF then do if sF~=1 then return xF[yF](E(xF,yF+1,LF));else return xF[yF]();end;end;elseif not(yF)then else return E(xF,yF,sF);end;end;end;else ic=function(...)local k4,F4=0x1,{};local L4=({[1]=F4,[2]=Vc});local i4=(k and k()or _ENV);local T4,N4=q3(...);T4=T4-1;do for QS=0X000,T4 do if ac>QS then F4[QS]=N4[QS+1];else break;end;end;end;local d4,P4=0,((i4==H and fc or i4));if not nc then N4=nil;elseif not(Ac)then else F4[ac]={n=T4>=ac and T4-ac+0X01 or 0,E(N4,ac+0X01,T4+1)};end;do if P4==i4 then else if s then(s)(ic,P4);else do _ENV=P4;end;end;end;end;local S4,I4,t4,M4=c(function()while true do local G4=bc[k4];local U4=G4[3];k4=k4+0x1;do if U4>=0X0012 then if not(U4>=27)then if U4<0x00016 then if not(U4<0X14)then if U4~=21 then if not(F4[G4[0X5]]<=F4[G4[4]])then k4=G4[0X2];end;else repeat local EX,kX=Lc,(F4);do if not(#EX>0)then else local oY={};for e2,F2 in M,EX do do for IO,gO in M,F2 do if gO[0X1]==kX and gO[2]>=0X0 then local hu=gO[2];if not(not oY[hu])then else oY[hu]={kX[hu]};end;gO[1]=oY[hu];do gO[2]=1;end;end;end;end;end;end;end;until true;return;end;else if U4==19 then if not(not F4[G4[0X00002]])then else k4=G4[0X005];end;else(F4)[0Xd]=F4[0Xa][G4[1]];do G4=bc[k4];end;k4=k4+1;local iW,jW=F4[0xD],13;(F4)[jW+0x1]=iW;(F4)[jW]=iW[G4[1]];k4=k4+1;jW=0X000d;do F4[jW]=F4[jW](F4[jW+1]);end;d4=jW;do k4=k4+1;end;k4=k4+0X1;G4=bc[k4];do k4=k4+0x00001;end;jW=0X00d;iW=F4[0xD];F4[jW+0x1]=iW;F4[jW]=iW[G4[1]];do G4=bc[k4];end;do k4=k4+1;end;do(F4)[0Xf]=G4[0x0006];end;do k4=k4+1;end;do jW=0XD;end;(F4)[jW]=F4[jW](F4[jW+1],F4[jW+2]);d4=jW;k4=k4+1;k4=k4+1;G4=bc[k4];k4=k4+0X01;if F4[13]then k4=G4[0x00005];end;end;end;else do if U4>=24 then if U4>=0X19 then if U4==0X1a then local RL,fL=11,F4[0Xa];do(F4)[RL+1]=fL;end;do F4[RL]=fL[G4[1]];end;G4=bc[k4];k4=k4+0X1;F4[13]=G4[0X6];do k4=k4+1;end;RL=11;F4[RL]=F4[RL](F4[RL+0X1],F4[RL+0X2]);do d4=RL;end;G4=bc[k4];do k4=k4+0X1;end;if not(not F4[11])then else do k4=G4[0X0005];end;end;else F4[G4[2]]=G4[6];end;else F4[0x0000C]=P4[G4[6]];G4=bc[k4];local a9=(0XC);k4=k4+1;F4[0XD]=F4[0XA][G4[0X1]];do k4=k4+0x0001;end;k4=k4+1;k4=k4+1;F4[a9]=F4[a9](F4[a9+1]);do d4=a9;end;k4=k4+1;k4=k4+0X00001;G4=bc[k4];k4=k4+1;(F4)[13]=P4[G4[6]];G4=bc[k4];k4=k4+0X0001;F4[14]=F4[0x00000][G4[0X1]];k4=k4+1;k4=k4+1;k4=k4+1;a9=13;do(F4)[a9]=F4[a9](F4[a9+0X0001]);end;do d4=a9;end;do k4=k4+1;end;k4=k4+0X001;G4=bc[k4];k4=k4+0X1;do(F4)[0x0D]=F4[13]+G4[0X00001];end;G4=bc[k4];k4=k4+1;do if not(not(F4[0Xc]<F4[13]))then else k4=G4[0x02];end;end;end;else if U4~=23 then F4[G4[0X02]]=F4[G4[5]][F4[G4[0X4]]];else(F4)[G4[2]]=F4[G4[5]]*F4[G4[4]];end;end;end;end;else if not(U4<32)then do if not(U4>=0X000022)then if U4~=33 then local ys,Cs=11,F4[10];F4[ys+1]=Cs;F4[ys]=Cs[G4[1]];G4=bc[k4];k4=k4+0X001;(F4)[13]=G4[6];k4=k4+1;ys=11;(F4)[ys]=F4[ys](F4[ys+1],F4[ys+0X02]);d4=ys;G4=bc[k4];do k4=k4+0x1;end;if F4[0XB]then k4=G4[5];end;else local vy=G4[0X002];local iy,jy=F4[vy]();if not(iy)then else k4=G4[5];(F4)[vy+3]=jy;end;end;else do if not(U4>=0X23)then(F4)[13]=F4[3]+G4[0X1];k4=k4+0X1;(F4)[0x3]=F4[0XD];do G4=bc[k4];end;do k4=k4+0X0001;end;k4=G4[5];else if U4~=0X24 then(F4)[2]=F4[0X5];k4=k4+1;F4[0X5]=F4[0X1];do G4=bc[k4];end;k4=k4+1;if not(F4[5])then else k4=G4[0X00005];end;else do if not(F4[G4[5]]<F4[G4[4]])then k4=G4[2];end;end;end;end;end;end;end;else do if U4>=0X1D then do if not(U4>=30)then do F4[G4[0X2]]=G4[6]/G4[1];end;else do if U4==0X1F then(F4)[1]=F4[0x00005];G4=bc[k4];k4=k4+1;do F4[0X5]=P4[G4[0X6]];end;do k4=k4+1;end;k4=k4+0X01;do G4=bc[k4];end;local sZ=5;do k4=k4+0x1;end;F4[0X0005]=F4[0x5][G4[0X1]];G4=bc[k4];k4=k4+1;local zZ=(F4[0X5]);do F4[sZ+1]=zZ;end;do(F4)[sZ]=zZ[G4[0x01]];end;k4=k4+0x1;sZ=0X5;(F4)[sZ]=F4[sZ](F4[sZ+1]);d4=sZ;k4=k4+1;do k4=k4+0X01;end;G4=bc[k4];k4=k4+0X1;(F4)[0X6]=G4[0X0006];local jZ=(6);do k4=k4+0X1;end;(F4)[0X7]=#F4[0X5];do G4=bc[k4];end;do k4=k4+0X001;end;F4[0X08]=G4[6];G4=bc[k4];k4=k4+0X1;sZ=F4[jZ];local oZ=(F4[jZ+1]);local YZ=(F4[jZ+0X0002]);(F4)[jZ]=P(function()for zc=sZ,oZ,YZ do(C)(true,zc);end;end);k4=G4[5];else(F4)[G4[0X002]]=not F4[G4[0X5]];end;end;end;end;else if U4==28 then do k4=G4[0x5];end;else end;end;end;end;end;else do if U4<9 then if U4>=0X4 then if U4>=6 then if U4<0X7 then(F4)[13]=F4[0X4]+G4[0X1];k4=k4+0X0001;(F4)[0X4]=F4[13];do G4=bc[k4];end;k4=k4+1;k4=G4[5];else if U4==0x8 then for nW=G4[0X2],G4[0X0005]do(F4)[nW]=nil;end;else F4[G4[0X02]]=F4[G4[0X05]];end;end;else if U4==5 then do(F4)[G4[0X002]]={E({},0x001,G4[5])};end;else(F4)[G4[2]]=F4[G4[5]]<=F4[G4[4]];end;end;else if not(U4>=2)then do if U4~=1 then do if F4[G4[0X2]]then k4=G4[0x00005];end;end;else do(F4)[G4[2]]=P4[G4[0X0006]];end;end;end;else do if U4~=0X3 then(F4)[0X000C]=P4[G4[0X6]];local vf=(12);k4=k4+1;do k4=k4+1;end;G4=bc[k4];k4=k4+1;(F4)[0Xd]=F4[0X0000A][G4[0X01]];do k4=k4+0X1;end;k4=k4+1;k4=k4+0X1;do(F4)[vf]=F4[vf](F4[vf+0X1]);end;d4=vf;k4=k4+0X1;k4=k4+0x0001;G4=bc[k4];do k4=k4+0X0001;end;if not(not F4[12])then else do k4=G4[0x0005];end;end;else do F4[3]=G4[6];end;do G4=bc[k4];end;k4=k4+0X1;F4[0X4]=G4[0X6];k4=k4+1;F4[5]=F4[2];G4=bc[k4];k4=k4+0X1;if F4[0X00005]then k4=G4[5];end;end;end;end;end;else if U4>=13 then if not(U4>=0X00f)then do if U4==0X0E then if F4[G4[0X05]]==F4[G4[0x004]]then k4=G4[2];end;else do(F4)[12]=P4[G4[0X0006]];end;G4=bc[k4];do k4=k4+0X01;end;(F4)[13]=F4[10][G4[0X1]];do k4=k4+1;end;k4=k4+1;G4=bc[k4];do k4=k4+1;end;(F4)[0Xd]=F4[0XD][G4[1]];k4=k4+1;local Bk=12;do(F4)[Bk]=F4[Bk](F4[Bk+1]);end;d4=Bk;G4=bc[k4];do k4=k4+0x1;end;if not(F4[12]<=G4[0X1])then k4=G4[0x2];end;end;end;else if not(U4>=0X010)then local RC=Uc[G4[0x05]];local sC=(RC[0X5]);local mC,tC=#sC,(nil);if mC>0 then tC={};for kj=1,mC do local Gj=(sC[kj]);if Gj[1]==0 then do(tC)[kj-1]={F4,Gj[0x2]};end;else tC[kj-0X1]=jc[Gj[2]];end;end;S(Lc,tC);end;F4[G4[2]]=e3(RC,tC,P4);else if U4~=0X0011 then(F4)[0Xc]=F4[0X0][G4[1]];G4=bc[k4];k4=k4+0X1;F4[12]=F4[12][G4[0X1]];G4=bc[k4];k4=k4+0X001;F4[0XD]=F4[0Xa][G4[0X1]];do k4=k4+1;end;k4=k4+1;k4=k4+0X1;F4[0XE]=F4[0XC];do G4=bc[k4];end;do k4=k4+1;end;do(F4[0X000D])[G4[0X6]]=F4[14];end;G4=bc[k4];local Jc=0Xd;k4=k4+0X1;F4[0XD]=F4[10][G4[0X001]];k4=k4+0X0001;k4=k4+1;G4=bc[k4];k4=k4+1;(F4[13])[G4[6]]=G4[1];G4=bc[k4];k4=k4+0x1;(F4)[0X0d]=F4[10][G4[0X1]];G4=bc[k4];k4=k4+0X001;(F4[13])[G4[6]]=G4[1];G4=bc[k4];k4=k4+0x01;(F4)[13]=F4[0X0000a][G4[0X00001]];do k4=k4+0X001;end;do k4=k4+0X1;end;G4=bc[k4];k4=k4+1;do(F4[0XD])[G4[6]]=G4[0X1];end;G4=bc[k4];do k4=k4+0X1;end;(F4)[0XD]=F4[10][G4[1]];k4=k4+1;k4=k4+0x1;G4=bc[k4];k4=k4+1;(F4[13])[G4[0X6]]=G4[1];G4=bc[k4];do k4=k4+0X1;end;(F4)[0xD]=F4[10][G4[1]];G4=bc[k4];do k4=k4+1;end;local yc=F4[0Xd];F4[Jc+1]=yc;(F4)[Jc]=yc[G4[0x00001]];G4=bc[k4];k4=k4+0X1;(F4)[15]=G4[6];do k4=k4+1;end;Jc=13;F4[Jc](F4[Jc+0X1],F4[Jc+0X0002]);d4=Jc-1;do k4=k4+1;end;k4=k4+1;G4=bc[k4];k4=k4+1;(F4)[13]=F4[0Xa][G4[1]];do k4=k4+0X1;end;k4=k4+1;G4=bc[k4];do k4=k4+1;end;(F4[13])[G4[6]]=G4[0X00001];G4=bc[k4];k4=k4+0X00001;if not F4[0X00B]then k4=G4[0X05];end;else F4[G4[2]]=F4[G4[5]]~=F4[G4[4]];end;end;end;else if U4>=0x0000b then if U4~=0X000c then F4[G4[2]]=G4[0X06];else(P4)[G4[6]]=F4[G4[0X00002]];end;else if U4~=10 then F4[11]=F4[0Xa][G4[1]];k4=k4+0x1;k4=k4+1;G4=bc[k4];k4=k4+0X1;F4[0XB]=F4[11][G4[0X1]];do k4=k4+0X1;end;k4=k4+0X1;G4=bc[k4];k4=k4+0x1;if not(not(G4[0X0006]<F4[0xB]))then else do k4=G4[2];end;end;else(F4)[11]=F4[0Xa][G4[1]];G4=bc[k4];k4=k4+0X00001;do F4[12]=F4[0X0][G4[1]];end;k4=k4+0X1;do k4=k4+1;end;k4=k4+1;(F4)[0Xb]=F4[0X0000B]==F4[12];do G4=bc[k4];end;do k4=k4+0x1;end;k4=G4[5];end;end;end;end;end;end;end;end;end);do if not(S4)then do if V(I4)=="string"then do if r(I4,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if r(I4,"^.-:%d+: ")then(q)("\076u\114ap\104\032S\099\114ipt:"..(Qc[k4-0x1]or"(internal)")..": "..u(I4),0X0);else(q)(I4,0x0);end;else q(I4,0X0000);end;end;else if I4 then if M4~=0X1 then return F4[t4](E(F4,t4+0X00001,d4));else return F4[t4]();end;elseif t4 then do return E(F4,t4,M4);end;end;end;end;end;end;end;end;end;else if not(Sc<229)then if not(Sc>=0xE9)then if Sc>=0Xe7 then if Sc==232 then do ic=function(...)local CW={};local xW=0X1;local ZW=0;local BW=(k and k()or _ENV);local XW=({[1]=CW,[2]=Vc});local VW,SW=q3(...);VW=VW-0X1;for wE=0X00,VW do if ac>wE then do(CW)[wE]=SW[wE+1];end;else do break;end;end;end;local JW=((BW==H and fc or BW));if not nc then SW=nil;elseif not(Ac)then else(CW)[ac]={n=VW>=ac and VW-ac+1 or 0x0,E(SW,ac+0X1,VW+1)};end;if JW==BW then else if s then(s)(ic,JW);else do _ENV=JW;end;end;end;local tW,aW,DW,mW=c(function()while true do local tJ=bc[xW];local OJ=(tJ[0X03]);xW=xW+0x1;if OJ>=0X7 then if not(OJ<10)then if not(OJ>=12)then if OJ~=11 then repeat local WH,LH=Lc,CW;if#WH>0 then local Ki={};for Vr,lr in M,WH do for IL,YL in M,lr do if not(YL[1]==LH and YL[2]>=0x0)then else local Ah=YL[2];if not(not Ki[Ah])then else(Ki)[Ah]={LH[Ah]};end;YL[0X1]=Ki[Ah];(YL)[0x2]=0X1;end;end;end;end;until true;do return;end;else do CW[tJ[0X00002]]=CW[tJ[0x5]]%CW[tJ[4]];end;end;else do if OJ~=0XD then xW=tJ[5];else do(CW)[tJ[2]]=CW[tJ[5]]*CW[tJ[0X4]];end;end;end;end;else if not(OJ>=0X008)then(CW)[tJ[2]]=tJ[0X6];else do if OJ==9 then CW[tJ[0X2]]=CW[tJ[0X5]]~=CW[tJ[4]];else do(CW)[tJ[0X2]]={E({},0X1,tJ[0X5])};end;end;end;end;end;else do if not(OJ>=0X3)then do if not(OJ>=1)then else if OJ~=2 then(CW)[0X00001]=tJ[6];do xW=xW+0X1;end;local qZ=1;CW[2]=CW[0x0];tJ=bc[xW];xW=xW+0X1;CW[3]=tJ[0X6];xW=xW+0x1;local zZ=(CW[qZ]);for hu=qZ+1,0X3 do zZ=zZ..CW[hu];end;CW[1]=zZ;local RZ=0x001;do xW=xW+0x1;end;repeat local zd,Vd=Lc,CW;if not(#zd>0X000)then else local PK=({});for zD,jD in M,zd do do for G9,Q9 in M,jD do if Q9[0X1]==Vd and Q9[0X02]>=0X0 then local RS=(Q9[0X2]);if not PK[RS]then do PK[RS]={Vd[RS]};end;end;(Q9)[0X00001]=PK[RS];Q9[2]=1;end;end;end;end;end;until true;return false,RZ,RZ;else local A9=tJ[0X05];local T9=(CW[A9]);for mF=A9+1,tJ[4]do T9=T9..CW[mF];end;(CW)[tJ[2]]=T9;end;end;end;else if OJ>=0X5 then do if OJ==0x006 then JW[tJ[6]]=CW[tJ[2]];else local WJ,FJ=Uc[tJ[0X0005]],(nil);local CJ=(WJ[5]);local RJ=#CJ;if RJ>0 then do FJ={};end;for Rb=0X1,RJ do local cb=(CJ[Rb]);if cb[1]~=0x0000 then do(FJ)[Rb-1]=jc[cb[2]];end;else FJ[Rb-0X001]={CW,cb[0X2]};end;end;(S)(Lc,FJ);end;CW[tJ[0X2]]=e3(WJ,FJ,JW);end;end;else if OJ~=0X4 then(CW)[tJ[2]]=CW[tJ[5]][CW[tJ[4]]];else(CW)[tJ[2]]=JW[tJ[0x0006]];end;end;end;end;end;end;end);if tW then do if aW then if mW==0x01 then return CW[DW]();else return CW[DW](E(CW,DW+0X1,ZW));end;elseif DW then return E(CW,DW,mW);end;end;else if V(aW)~='s\116r\105\110\103'then q(aW,0);else if not(r(aW,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if r(aW,'^\046\045\058%d+:\032')then(q)("Luraph Script:"..(Qc[xW-0X1]or"\040\105nt\101rnal\041").."\058\032"..u(aW),0X000);else q(aW,0);end;end;end;end;end;else do ic=function(...)local IM=(0X1);local tM=({});local kM=(k and k()or _ENV);local AM=0X0;local LM,CM=q3(...);local OM=({[1]=tM,[2]=Vc});do LM=LM-1;end;local qM=(kM==H and fc or kM);do for sE=0,LM do if ac>sE then tM[sE]=CM[sE+0x1];else do break;end;end;end;end;if not nc then CM=nil;elseif not(Ac)then else(tM)[ac]={n=LM>=ac and LM-ac+1 or 0X0,E(CM,ac+0X1,LM+1)};end;do if qM==kM then else do if not(s)then _ENV=qM;else s(ic,qM);end;end;end;end;local NM,SM,lM,uM=c(function()while true do local Qq=bc[IM];local lq=Qq[3];IM=IM+1;if lq>=0x0D then if not(lq>=0x13)then if lq<0x0010 then if not(lq>=0Xe)then tM[Qq[0x02]]={E({},0X1,Qq[5])};else do if lq==0XF then(tM)[0X0002]=qM[Qq[6]];IM=IM+1;do IM=IM+1;end;Qq=bc[IM];IM=IM+1;tM[2]=tM[0X02][Qq[1]];do IM=IM+0X1;end;IM=IM+1;do Qq=bc[IM];end;IM=IM+0x1;do if not tM[0X0002]then IM=Qq[5];end;end;else local CX=(jc[2]);(tM)[1]=CX[1][CX[2]];IM=IM+1;IM=IM+1;Qq=bc[IM];IM=IM+1;(tM)[1]=tM[1][Qq[0x0001]];Qq=bc[IM];IM=IM+0X0001;if tM[1]<Qq[0X1]then IM=Qq[0x2];end;end;end;end;else if not(lq<17)then do if lq~=0X012 then(tM)[0]=qM[Qq[0X6]];Qq=bc[IM];IM=IM+1;tM[0x0000]=tM[0][Qq[1]];do IM=IM+1;end;local cE=(0);do IM=IM+0x1;end;Qq=bc[IM];IM=IM+0X1;local pE=(tM[0X0]);tM[cE+1]=pE;tM[cE]=pE[Qq[0X0001]];Qq=bc[IM];IM=IM+0X1;tM[0X2]=Qq[0X6];IM=IM+0x1;cE=0X00000;(tM)[cE]=tM[cE](tM[cE+1],tM[cE+0x02]);AM=cE;Qq=bc[IM];do IM=IM+0x1;end;if not(not tM[0X0])then else do IM=Qq[0X5];end;end;else local x4=jc[1];tM[2]=x4[0X1][x4[0x00002]];IM=IM+1;IM=IM+1;local W4=(0X002);Qq=bc[IM];IM=IM+0X0001;local t4=tM[2];(tM)[W4+1]=t4;tM[W4]=t4[Qq[0X1]];IM=IM+1;W4=2;do(tM)[W4]=tM[W4](tM[W4+0X01]);end;do AM=W4;end;do IM=IM+1;end;do IM=IM+0x1;end;Qq=bc[IM];IM=IM+1;if not(tM[0X0002])then else do IM=Qq[5];end;end;end;end;else tM[0X02]=qM[Qq[6]];do Qq=bc[IM];end;local JO=(2);do IM=IM+0X1;end;tM[0x3]=Qq[6];IM=IM+1;(tM)[JO]=tM[JO](tM[JO+1]);AM=JO;do Qq=bc[IM];end;IM=IM+1;if tM[0X00002]then do IM=Qq[0X5];end;end;end;end;else if not(lq<22)then if not(lq>=0X18)then if lq==0x17 then local YF=jc[2];(tM)[0X1]=YF[1][YF[0X0002]];IM=IM+1;do IM=IM+0x1;end;do Qq=bc[IM];end;IM=IM+1;(tM)[0X1]=tM[1][Qq[1]];Qq=bc[IM];IM=IM+1;(tM)[1]=tM[1][Qq[1]];Qq=bc[IM];IM=IM+1;do qM[Qq[0X06]]=tM[0X1];end;do IM=IM+1;end;YF=jc[2];tM[0X001]=YF[0X01][YF[2]];do IM=IM+0X1;end;IM=IM+1;Qq=bc[IM];IM=IM+1;tM[1][Qq[6]]=Qq[0x1];IM=IM+1;YF=jc[2];do(tM)[1]=YF[0X1][YF[0X02]];end;do Qq=bc[IM];end;IM=IM+0X1;tM[1][Qq[0X0006]]=Qq[0X00001];IM=IM+0X001;YF=jc[2];do(tM)[1]=YF[1][YF[0X2]];end;IM=IM+0X001;IM=IM+0X001;Qq=bc[IM];IM=IM+0X1;do tM[1][Qq[6]]=Qq[0X01];end;IM=IM+1;local EF=(0X1);YF=jc[0x2];tM[1]=YF[1][YF[0X002]];Qq=bc[IM];IM=IM+0x1;local hF=(tM[1]);tM[EF+1]=hF;tM[EF]=hF[Qq[0X1]];Qq=bc[IM];do IM=IM+1;end;tM[3]=Qq[6];IM=IM+0x1;do EF=0X00001;end;tM[EF](tM[EF+1],tM[EF+2]);AM=EF-1;IM=IM+0X1;IM=IM+0x1;IM=IM+1;YF=jc[0X2];(tM)[0x1]=YF[0X1][YF[0X2]];Qq=bc[IM];IM=IM+0X1;tM[0X00001]=tM[1][Qq[1]];Qq=bc[IM];IM=IM+1;tM[0x1][Qq[6]]=Qq[1];Qq=bc[IM];IM=IM+0X1;(tM)[1]=qM[Qq[6]];do IM=IM+1;end;IM=IM+0x1;Qq=bc[IM];IM=IM+0X01;tM[1]=tM[1][Qq[1]];IM=IM+0X1;IM=IM+0X00001;Qq=bc[IM];IM=IM+1;(tM)[0x00001]=tM[1][Qq[1]];IM=IM+0x1;IM=IM+0X1;do Qq=bc[IM];end;IM=IM+1;do EF=1;end;do hF=tM[0X01];end;do(tM)[EF+0X001]=hF;end;tM[EF]=hF[Qq[1]];Qq=bc[IM];IM=IM+0X1;do tM[3]=Qq[6];end;IM=IM+1;do EF=0x1;end;tM[EF](tM[EF+1],tM[EF+0X00002]);AM=EF-0x1;IM=IM+1;IM=IM+1;Qq=bc[IM];IM=IM+1;(tM)[1]=qM[Qq[0X6]];Qq=bc[IM];IM=IM+0x1;(tM)[1]=tM[0X0001][Qq[1]];IM=IM+0x1;IM=IM+1;do Qq=bc[IM];end;do IM=IM+0x0001;end;tM[2]=Qq[0X0006];IM=IM+0X1;EF=1;tM[EF](tM[EF+1]);do AM=EF-0x00001;end;IM=IM+1;YF=jc[0];tM[1]=YF[1][YF[0X2]];IM=IM+0x1;IM=IM+0x001;Qq=bc[IM];IM=IM+0x1;if not tM[1]then IM=Qq[0X05];end;else(tM)[Qq[0X00002]]=qM[Qq[6]];end;else if lq==0X19 then for qc=Qq[2],Qq[5]do(tM)[qc]=nil;end;else(tM)[1]=qM[Qq[0X6]];IM=IM+0x001;IM=IM+0X1;do Qq=bc[IM];end;do IM=IM+0X1;end;tM[2]=Qq[0x06];IM=IM+1;local Eh=0x1;(tM[Eh])(tM[Eh+1]);AM=Eh-1;do Qq=bc[IM];end;do IM=IM+1;end;(tM)[0X1]=qM[Qq[0X006]];do IM=IM+0X1;end;IM=IM+0X1;do Qq=bc[IM];end;do IM=IM+0x1;end;tM[0X02]=Qq[6];IM=IM+0X0001;Eh=1;tM[Eh](tM[Eh+0x1]);do AM=Eh-0X001;end;IM=IM+1;IM=IM+1;Qq=bc[IM];do IM=IM+0X001;end;do IM=Qq[0X00005];end;end;end;else do if not(lq<0x014)then do if lq~=0X15 then tM[Qq[2]]=tM[Qq[5]]>=tM[Qq[4]];else local AY=jc[Qq[5]];do tM[Qq[0X2]]=AY[0x001][AY[0x2]];end;end;end;else end;end;end;end;else if lq>=0x0006 then if lq<9 then if not(lq<0X7)then if lq~=8 then do IM=Qq[0X5];end;else(tM)[Qq[0X2]]=Qq[0X006];end;else repeat local WY,nY=Lc,(tM);if#WY>0 then local RW={};for Mu,au in M,WY do for Iz,Hz in M,au do do if Hz[1]==nY and Hz[2]>=0 then local VF=Hz[0X2];if not(not RW[VF])then else(RW)[VF]={nY[VF]};end;do(Hz)[0X1]=RW[VF];end;Hz[2]=0X1;end;end;end;end;end;until true;return;end;else if lq>=0X0000b then if lq~=12 then(tM)[3]=tM[0][Qq[1]];do IM=IM+1;end;do IM=IM+0X1;end;Qq=bc[IM];IM=IM+0X0001;if tM[3]==Qq[0x01]then else IM=Qq[0X00002];end;else(tM)[Qq[0X2]]=T(tM[Qq[5]],tM[Qq[4]]);end;else do if lq~=0X00A then do(tM)[0x2]=tM[0][Qq[1]];end;IM=IM+1;do IM=IM+1;end;do Qq=bc[IM];end;IM=IM+1;(tM)[2]=tM[2][Qq[0X001]];Qq=bc[IM];IM=IM+1;if Qq[6]<=tM[0X2]then IM=Qq[2];end;else if not tM[Qq[0X2]]then do IM=Qq[5];end;end;end;end;end;end;else if lq<3 then if lq>=0X00001 then if lq~=2 then local AU=(jc[0x2]);(tM)[0X00]=AU[0X1][AU[0X2]];Qq=bc[IM];do IM=IM+1;end;tM[0x00000]=tM[0][Qq[1]];IM=IM+0X0001;AU=jc[0X2];(tM)[0x00001]=AU[1][AU[2]];Qq=bc[IM];IM=IM+0X001;tM[0x00001]=tM[1][Qq[0x1]];Qq=bc[IM];do IM=IM+0x1;end;(tM)[1]=tM[1][Qq[0X00001]];Qq=bc[IM];IM=IM+0x001;(tM[0X00000])[Qq[0x6]]=tM[0X00001];Qq=bc[IM];IM=IM+1;IM=Qq[5];else(tM)[4]=tM[0X0][Qq[0x1]];Qq=bc[IM];do IM=IM+0x0001;end;do(tM)[0x4]=tM[0X04][Qq[0X00001]];end;do Qq=bc[IM];end;do IM=IM+0x001;end;do if not(not(Qq[6]<=tM[0X4]))then else IM=Qq[2];end;end;end;else local rL=jc[0];(tM)[0X0]=rL[0x001][rL[2]];Qq=bc[IM];IM=IM+1;qM[Qq[0X6]]=tM[0];do IM=IM+0X1;end;rL=jc[0X00001];local JL=(0);do(tM)[0]=rL[1][rL[2]];end;do IM=IM+1;end;do IM=IM+1;end;Qq=bc[IM];IM=IM+1;local DL=tM[0];do(tM)[JL+0X1]=DL;end;(tM)[JL]=DL[Qq[1]];IM=IM+0X1;JL=0X0;(tM[JL])(tM[JL+1]);AM=JL-1;IM=IM+0X0001;do(tM)[0X00000]=true;end;Qq=bc[IM];IM=IM+0X1;qM[Qq[6]]=tM[0X0];Qq=bc[IM];IM=IM+0X1;(tM)[0X0]=qM[Qq[6]];IM=IM+0x1;IM=IM+1;IM=IM+0X01;rL=jc[2];do tM[0X1]=rL[1][rL[2]];end;do Qq=bc[IM];end;IM=IM+1;(tM)[0x1]=tM[0X00001][Qq[0X001]];do IM=IM+0X1;end;IM=IM+1;Qq=bc[IM];IM=IM+1;tM[0X00001]=tM[1][Qq[1]];do IM=IM+0X00001;end;IM=IM+1;Qq=bc[IM];IM=IM+0X1;tM[2]=qM[Qq[0x6]];Qq=bc[IM];IM=IM+0X1;tM[0x0002]=tM[2][Qq[0X1]];Qq=bc[IM];IM=IM+0x01;(tM)[0x3]=qM[Qq[6]];do Qq=bc[IM];end;do IM=IM+0X0001;end;(tM)[3]=tM[3][Qq[1]];IM=IM+0X1;IM=IM+1;do Qq=bc[IM];end;IM=IM+1;do tM[4]=Qq[6];end;do Qq=bc[IM];end;IM=IM+0X00001;tM[5]=Qq[0x00006];IM=IM+0x00001;JL=0X3;do tM[JL]=tM[JL](tM[JL+0X0001],tM[JL+2]);end;AM=JL;IM=IM+0x001;IM=IM+1;Qq=bc[IM];IM=IM+0X1;tM[3]=tM[0X3]/Qq[1];Qq=bc[IM];do IM=IM+1;end;(tM)[4]=Qq[0X6];Qq=bc[IM];IM=IM+0X1;local gL=nil;do(tM)[5]=qM[Qq[6]];end;Qq=bc[IM];IM=IM+1;(tM)[5]=tM[5][Qq[0X1]];Qq=bc[IM];IM=IM+1;(tM)[0X00006]=Qq[6];Qq=bc[IM];IM=IM+0X1;do tM[0x00007]=Qq[0X6];end;IM=IM+0X01;JL=0X05;tM[JL]=tM[JL](tM[JL+0x01],tM[JL+0x2]);AM=JL;IM=IM+0X01;do IM=IM+1;end;Qq=bc[IM];IM=IM+1;(tM)[0X00005]=tM[5]/Qq[0X1];IM=IM+1;JL=2;AM=JL+4-0X01;tM[JL]=tM[JL](E(tM,JL+1,AM));AM=JL;IM=IM+1;tM[1]=tM[1]+tM[0x00002];IM=IM+1;tM[0X2]=true;Qq=bc[IM];IM=IM+1;local FL=(Uc[Qq[0X5]]);local TL=(FL[5]);local yL=#TL;if not(yL>0)then else gL={};for dB=0X001,yL do local qB=(TL[dB]);do if qB[0x001]~=0 then gL[dB-1]=jc[qB[0X00002]];else gL[dB-1]={tM,qB[0X2]};end;end;end;S(Lc,gL);end;(tM)[3]=e3(FL,gL,qM);IM=IM+0X001;JL=0;AM=JL+4-0x1;tM[JL](E(tM,JL+0x1,AM));AM=JL-1;local AL=0X2;IM=IM+0x0001;IM=IM+1;do Qq=bc[IM];end;do IM=IM+1;end;tM[0X0]=qM[Qq[0X6]];IM=IM+1;IM=IM+1;IM=IM+1;AM=0;(tM[AM])();AM=AM-1;IM=IM+0X1;IM=IM+0X001;Qq=bc[IM];do IM=IM+1;end;do tM[0X0]=qM[Qq[6]];end;IM=IM+0X1;do IM=IM+1;end;Qq=bc[IM];IM=IM+1;do tM[0X1]=qM[Qq[6]];end;Qq=bc[IM];IM=IM+0X1;(tM)[2]=qM[Qq[6]];do IM=IM+0X1;end;IM=IM+1;Qq=bc[IM];IM=IM+1;(tM)[2]=tM[2][Qq[0x1]];IM=IM+0X1;do JL=1;end;local BL=(0);if AL==0X0 then else AM=JL+AL-0x1;end;local mL,tL=nil,(nil);if AL==0X1 then mL,tL=q3(tM[JL]());else do mL,tL=q3(tM[JL](E(tM,JL+1,AM)));end;end;do if BL==1 then do AM=JL-1;end;else if BL==0x0 then mL=mL+JL-0X1;AM=mL;else mL=JL+BL-2;AM=mL+1;end;local np=(0x000);do for jz=JL,mL do np=np+1;(tM)[jz]=tL[np];end;end;end;end;do IM=IM+1;end;IM=IM+1;IM=IM+0X1;do JL=0;end;(tM[JL])(E(tM,JL+0X1,AM));AM=JL-0x1;do Qq=bc[IM];end;IM=IM+1;tM[0x0]=qM[Qq[0x6]];IM=IM+0X1;IM=IM+1;IM=IM+1;rL=jc[0X002];(tM)[0X1]=rL[0X1][rL[2]];Qq=bc[IM];IM=IM+0X0001;tM[0X01]=tM[1][Qq[1]];do IM=IM+1;end;JL=0x000;(tM)[JL]=tM[JL](tM[JL+1]);AM=JL;do Qq=bc[IM];end;IM=IM+1;if not(not tM[0])then else do IM=Qq[5];end;end;end;else if not(lq<0x004)then if lq==5 then local SH=(Uc[Qq[0x05]]);local QH=(SH[0x0005]);local yH=(nil);local iH=#QH;if iH>0X0000 then yH={};for US=1,iH do local dS=(QH[US]);if dS[0X00001]==0X0 then(yH)[US-1]={tM,dS[2]};else do(yH)[US-1]=jc[dS[2]];end;end;end;(S)(Lc,yH);end;(tM)[Qq[2]]=e3(SH,yH,qM);else local PQ=Qq[0X0002];local RQ,DQ=tM[PQ],((Qq[4]-0X1)*0X32);for hv=0X1,Qq[5]do do(RQ)[DQ+hv]=tM[PQ+hv];end;end;end;else tM[1]=tM[0x0][Qq[1]];IM=IM+0x00001;IM=IM+0X1;Qq=bc[IM];IM=IM+1;if tM[0X1]~=Qq[0X1]then do IM=Qq[0X2];end;end;end;end;end;end;end;end);if not(NM)then do if V(SM)~="string"then q(SM,0);else if not(r(SM,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(r(SM,'\094.-\058\037\100+\058 '))then(q)(SM,0);else q("Luraph Script:"..(Qc[IM-0X1]or"\040\105\110\116\101r\110\097l)")..'\058 '..u(SM),0);end;end;end;else do if SM then do if uM==0X001 then return tM[lM]();else return tM[lM](E(tM,lM+0X1,AM));end;end;elseif not(lM)then else do return E(tM,lM,uM);end;end;end;end;end;end;end;else if Sc~=230 then do ic=function(...)local JV=({});local MV=1;local RV=({[1]=JV,[2]=Vc});local KV=(k and k()or _ENV);local vV=(KV==H and fc or KV);local CV,mV=q3(...);CV=CV-1;local SV=(0);do for MO=0X0,CV do if ac>MO then JV[MO]=mV[MO+0X1];else break;end;end;end;do if not nc then mV=nil;elseif not(Ac)then else(JV)[ac]={n=CV>=ac and CV-ac+1 or 0,E(mV,ac+0X1,CV+0X1)};end;end;if vV==KV then else do if not(s)then do _ENV=vV;end;else(s)(ic,vV);end;end;end;local YV,UV,BV,yV=c(function()do while true do local vU=bc[MV];local aU=(vU[0X0003]);MV=MV+0x1;if not(aU<11)then if not(aU>=0X10)then if not(aU>=13)then if aU==0xc then repeat local aL,VL=Lc,(JV);do if#aL>0x0 then local Fd={};for WI,OI in M,aL do for qL,oL in M,OI do if oL[0X00001]==VL and oL[0X02]>=0x0 then local G2=(oL[0X002]);if not Fd[G2]then(Fd)[G2]={VL[G2]};end;oL[1]=Fd[G2];(oL)[0X002]=0X00001;end;end;end;end;end;until true;do return;end;else if not(JV[vU[2]])then else MV=vU[0x5];end;end;else do if not(aU<14)then if aU==15 then do JV[vU[0X002]]=JV[vU[5]]%JV[vU[4]];end;else do vV[vU[6]]=JV[vU[0X2]];end;end;else local r7=(jc[vU[0x5]]);do JV[vU[0X2]]=r7[0X1][r7[0X2]];end;end;end;end;else if not(aU>=19)then if aU<0x11 then local Jf=Uc[vU[5]];local Mf,hf=Jf[5],(nil);local cf=#Mf;if cf>0 then do hf={};end;do for we=0X1,cf do local Je=(Mf[we]);if Je[0X1]==0X0 then do(hf)[we-0X1]={JV,Je[2]};end;else(hf)[we-0x1]=jc[Je[0X2]];end;end;end;S(Lc,hf);end;(JV)[vU[0X002]]=e3(Jf,hf,vV);else if aU==18 then if JV[vU[5]]==JV[vU[4]]then else do MV=vU[2];end;end;else end;end;else if not(aU>=0X0014)then local VO=vU[0X2];for QJ=VO,VO+(vU[0X5]-1)do(JV)[QJ]=mV[ac+(QJ-VO)+0x1];end;else do if aU~=21 then if JV[vU[0X05]]~=JV[vU[0X0004]]then else do MV=vU[0x2];end;end;else local ww=(vU[0X00004]);local xw,Kw=vU[2],(vU[5]);do if Kw==0X00 then else do SV=xw+Kw-0x00001;end;end;end;local Vw,bw=nil,(nil);if Kw==1 then do Vw,bw=q3(JV[xw]());end;else do Vw,bw=q3(JV[xw](E(JV,xw+1,SV)));end;end;if ww~=0X01 then if ww==0 then do Vw=Vw+xw-1;end;SV=Vw;else Vw=xw+ww-0X2;SV=Vw+1;end;local ip=(0);for wH=xw,Vw do do ip=ip+1;end;(JV)[wH]=bw[ip];end;else SV=xw-1;end;end;end;end;end;end;else if not(aU<0X0005)then do if not(aU<0X8)then if not(aU<9)then if aU==10 then local HR=(JV[vU[5]]/JV[vU[0X4]]);do(JV)[vU[0X002]]=HR-HR%0x1;end;else if not(not(JV[vU[5]]<JV[vU[4]]))then else do MV=vU[0X00002];end;end;end;else(JV)[vU[0X2]]=JV[vU[5]]>JV[vU[0X4]];end;else do if not(aU<0x006)then do if aU~=7 then do MV=vU[5];end;else do(JV)[vU[0x2]]=vV[vU[6]];end;end;end;else local yT=(jc[0X02]);do(JV)[3]=yT[1][yT[2]];end;MV=MV+1;do(JV)[0X4]=JV[0];end;MV=MV+0x001;do(JV)[5]=JV[0X1];end;MV=MV+0x1;local ET=(CV-ac);local FT=6;do if ET<0 then ET=-0X1;end;end;for CT=FT,FT+ET do(JV)[CT]=mV[ac+(CT-FT)+0x00001];end;SV=FT+ET;MV=MV+0X00001;do repeat local dV,jV=Lc,(JV);if#dV>0 then local Nu={};for D4,e4 in M,dV do for tc,zc in M,e4 do if zc[1]==jV and zc[0X2]>=0X00 then local tT=zc[2];if not Nu[tT]then(Nu)[tT]={jV[tT]};end;do(zc)[1]=Nu[tT];end;(zc)[2]=0x00001;end;end;end;end;until true;end;return true,3,0;end;end;end;end;else if not(aU>=0X0002)then do if aU==0x1 then(JV)[vU[0X2]]=JV[vU[0X5]]<=JV[vU[0x004]];else(JV)[vU[2]]=not JV[vU[0X05]];end;end;else if aU>=3 then if aU==4 then(JV)[vU[2]]=vU[6];else do(JV)[vU[2]]={E({},0X1,vU[5])};end;end;else repeat local F9,P9=Lc,(JV);if not(#F9>0)then else local oo=({});for v2,g2 in M,F9 do for iK,mK in M,g2 do if not(mK[1]==P9 and mK[0X2]>=0)then else local JH=(mK[2]);do if not(not oo[JH])then else oo[JH]={P9[JH]};end;end;mK[0X00001]=oo[JH];do mK[0X2]=1;end;end;end;end;end;until true;return false,vU[0X00002],SV;end;end;end;end;end;end;end);if YV then if UV then do if yV==0X1 then return JV[BV]();else return JV[BV](E(JV,BV+1,SV));end;end;elseif not(BV)then else do return E(JV,BV,yV);end;end;else if V(UV)~="string"then q(UV,0x000);else if not(r(UV,'a\116\116em\112t to\032y\105\101\108d\032a\099r\111s\115\032me\116\097\109e\116h\111\100\047\067\037-\099\097\108\108\032bo\117\110d\097r\121'))then else return coroutine.yield();end;if not(r(UV,"\094.\045\058%\100+: "))then(q)(UV,0);else q('L\117r\097\112\104 \083\099\114\105\112t:'..(Qc[MV-0X1]or"(\105nte\114\110a\108)")..": "..u(UV),0X00);end;end;end;end;end;else do ic=function(...)local Bm,Km,im=0X1,0,({});local Pm=(k and k()or _ENV);local wm,am={[1]=im,[2]=Vc},((Pm==H and fc or Pm));local jm,hm=q3(...);jm=jm-1;for qV=0X0,jm do if not(ac>qV)then do break;end;else im[qV]=hm[qV+1];end;end;if not nc then hm=nil;elseif not(Ac)then else im[ac]={n=jm>=ac and jm-ac+1 or 0X0,E(hm,ac+1,jm+0X1)};end;if am~=Pm then if s then s(ic,am);else do _ENV=am;end;end;end;local om,tm,gm,Um=c(function()while true do local dF=(bc[Bm]);local JF=(dF[3]);do Bm=Bm+0x1;end;if not(JF<0X7)then do if not(JF>=0X0B)then if not(JF>=9)then if JF~=8 then im[dF[2]]=im[dF[0X5]]>=im[dF[4]];else im[dF[0x2]]=dF[0x6];end;else do if JF~=0X000a then local gx=Uc[dF[0X005]];local cx=gx[5];local Gx=(nil);local hx=#cx;do if not(hx>0x0)then else Gx={};for aq=0X01,hx do local Tq=cx[aq];do if Tq[1]==0X0 then(Gx)[aq-1]={im,Tq[2]};else(Gx)[aq-1]=jc[Tq[0X2]];end;end;end;S(Lc,Gx);end;end;im[dF[0X02]]=e3(gx,Gx,am);else Bm=dF[0X0005];end;end;end;else if not(JF>=0x000D)then if JF==12 then do repeat local cA,PA=Lc,(im);do if not(#cA>0)then else local NT={};do for Zb,Qb in M,cA do do for R9,J9 in M,Qb do if not(J9[0X001]==PA and J9[2]>=0X0000)then else local dG=(J9[0x002]);if not(not NT[dG])then else NT[dG]={PA[dG]};end;(J9)[0x1]=NT[dG];J9[2]=1;end;end;end;end;end;end;end;until true;end;return;else im[dF[0X2]]=#im[dF[0X5]];end;else if JF==14 then im[dF[2]]={E({},1,dF[0X5])};else end;end;end;end;else if not(JF<3)then if JF>=5 then do if JF~=0X6 then if not(im[dF[0X00005]]<=im[dF[0X4]])then else Bm=dF[0X002];end;else if im[dF[2]]then Bm=dF[0X5];end;end;end;else if JF==0X0004 then im[dF[2]]=am[dF[0X6]];else im[dF[0X2]]=Q(im[dF[5]]);end;end;else do if not(JF>=1)then(im)[dF[0x2]]=true;else do if JF~=2 then local CA=(dF[2]);do for L6=CA,CA+(dF[5]-0X1)do im[L6]=hm[ac+(L6-CA)+1];end;end;else do(im)[0]=am[dF[6]];end;Bm=Bm+0X1;Bm=Bm+0x1;do dF=bc[Bm];end;do Bm=Bm+1;end;(im)[0]=im[0][dF[0X1]];dF=bc[Bm];local zi=(Uc[dF[5]]);Bm=Bm+1;local Ai,Ui=nil,(zi[0X5]);local bi=#Ui;if bi>0X0 then Ai={};for nT=0X1,bi do local RT=Ui[nT];if RT[0X001]~=0x0 then Ai[nT-1]=jc[RT[2]];else do(Ai)[nT-0X1]={im,RT[2]};end;end;end;S(Lc,Ai);end;im[1]=e3(zi,Ai,am);local Xi=(0);Bm=Bm+1;(im[Xi])(im[Xi+0X1]);Km=Xi-1;Bm=Bm+0X1;repeat local RL,EL=Lc,(im);if#RL>0 then local L6={};for Zr,br in M,RL do for Yr,Kr in M,br do do if not(Kr[1]==EL and Kr[0X2]>=0)then else local gv=(Kr[0X02]);if not L6[gv]then do(L6)[gv]={EL[gv]};end;end;do Kr[1]=L6[gv];end;Kr[2]=0X1;end;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end;end);do if not(om)then if V(tm)~="string"then q(tm,0X0);else if r(tm,'\097\116t\101\109\112t\032\116\111\032\121ie\108d a\099ro\115\115\032met\097m\101\116\104o\100/C\037-c\097l\108 \098oun\100\097\114\121')then do return coroutine.yield();end;end;do if r(tm,'^\046-:\037\100+: ')then q('L\117\114a\112\104\032S\099\114\105\112t:'..(Qc[Bm-0x1]or'(\105nt\101r\110\097l)')..": "..u(tm),0);else q(tm,0x0);end;end;end;else do if tm then if Um==1 then return im[gm]();else return im[gm](E(im,gm+1,Km));end;elseif gm then return E(im,gm,Um);end;end;end;end;end;end;end;end;else if not(Sc>=235)then if Sc==234 then ic=function(...)local ZI,KI=1,{};local EI=(k and k()or _ENV);local FI=((EI==H and fc or EI));local RI,jI=q3(...);local eI=({[2]=Vc,[1]=KI});do RI=RI-0X1;end;local cI=(0);do for XF=0,RI do do if ac>XF then KI[XF]=jI[XF+1];else break;end;end;end;end;if not nc then jI=nil;elseif not(Ac)then else(KI)[ac]={n=RI>=ac and RI-ac+0X001 or 0,E(jI,ac+1,RI+1)};end;if FI==EI then else do if not(s)then _ENV=FI;else(s)(ic,FI);end;end;end;local LI,qI,dI,BI=c(function()while true do local wG=bc[ZI];local eG=(wG[3]);ZI=ZI+0X1;if not(eG>=19)then if not(eG>=9)then if not(eG<4)then do if eG<6 then if eG==0X0005 then KI[2]=FI[wG[0X6]];do ZI=ZI+0X0001;end;cI=2;(KI)[cI]=KI[cI]();ZI=ZI+0X1;do ZI=ZI+1;end;ZI=ZI+0x1;do KI[2]=KI[2]-KI[0X0];end;do wG=bc[ZI];end;ZI=ZI+1;if not(not(wG[6]<KI[2]))then else ZI=wG[0X002];end;else KI[11]=true;wG=bc[ZI];do ZI=ZI+1;end;(FI)[wG[0X6]]=KI[0X0000b];wG=bc[ZI];ZI=ZI+1;ZI=wG[5];end;else do if eG>=0X7 then do if eG==0X08 then do ZI=wG[5];end;else KI[2]=FI[wG[6]];local b1=(2);wG=bc[ZI];ZI=ZI+0X1;local f1=KI[2];(KI)[b1+0X1]=f1;(KI)[b1]=f1[wG[1]];ZI=ZI+0X0001;do b1=0x2;end;(KI[b1])(KI[b1+1]);cI=b1-1;do wG=bc[ZI];end;ZI=ZI+1;do ZI=wG[5];end;end;end;else if KI[wG[0X002]]then ZI=wG[0X5];end;end;end;end;end;else do if eG>=2 then if eG==0X3 then KI[wG[2]]=KI[wG[5]][wG[1]];else(KI)[0X3]=KI[0X0001][wG[1]];ZI=ZI+0X1;ZI=ZI+1;wG=bc[ZI];ZI=ZI+0X00001;do(KI)[4]=FI[wG[0X6]];end;do ZI=ZI+0x001;end;ZI=ZI+1;do wG=bc[ZI];end;ZI=ZI+0X01;KI[0X00004]=KI[0X4][wG[0X01]];do ZI=ZI+1;end;ZI=ZI+1;wG=bc[ZI];ZI=ZI+1;do if KI[3]==KI[0x4]then else ZI=wG[0X002];end;end;end;else if eG~=0X00001 then local kC,HC=Uc[wG[5]],nil;local gC=kC[0x5];local AC=(#gC);if AC>0X0 then do HC={};end;for Ie=1,AC do local he=gC[Ie];if he[1]~=0X0 then HC[Ie-0X00001]=jc[he[0X00002]];else do(HC)[Ie-1]={KI,he[2]};end;end;end;S(Lc,HC);end;KI[wG[2]]=e3(kC,HC,FI);else(FI)[wG[0X6]]=KI[wG[0X2]];end;end;end;end;else if not(eG>=0x00E)then do if eG>=0xB then if not(eG>=0X0C)then do(KI)[10]=FI[wG[6]];end;ZI=ZI+0x0001;ZI=ZI+0X0001;wG=bc[ZI];local z2=(0x00a);ZI=ZI+0x01;local C2=(KI[0xA]);do KI[z2+1]=C2;end;KI[z2]=C2[wG[0X01]];ZI=ZI+0X1;local Q2=13;(KI)[0xc]=KI[9];wG=bc[ZI];ZI=ZI+1;do(KI)[0xd]=wG[6];end;do wG=bc[ZI];end;ZI=ZI+0X0001;(KI)[14]=FI[wG[0X0006]];wG=bc[ZI];do ZI=ZI+1;end;KI[0X000E]=KI[14][wG[1]];ZI=ZI+0x0001;KI[13]=KI[Q2]..KI[Q2+1];ZI=ZI+1;z2=0X0000A;cI=z2+0X4-1;KI[z2]=KI[z2](E(KI,z2+1,cI));cI=z2;wG=bc[ZI];ZI=ZI+1;ZI=wG[0X0005];else if eG~=0XD then do KI[0x9]=FI[wG[0X6]];end;do ZI=ZI+1;end;ZI=ZI+1;wG=bc[ZI];ZI=ZI+1;KI[9]=KI[0X09][wG[0X1]];wG=bc[ZI];local o5=(0x9);ZI=ZI+0x0001;local M5=KI[9];KI[o5+1]=M5;KI[o5]=M5[wG[0x01]];ZI=ZI+1;(KI)[0XB]=KI[7];ZI=ZI+0X001;o5=0x9;KI[o5]=KI[o5](KI[o5+0x0001],KI[o5+2]);cI=o5;do ZI=ZI+1;end;ZI=ZI+1;ZI=ZI+0X1;do KI[10]=KI[9];end;wG=bc[ZI];do ZI=ZI+0X1;end;if not(not KI[10])then else ZI=wG[5];end;else do(KI)[wG[0X0002]]=KI[wG[5]]^KI[wG[4]];end;end;end;else do if eG~=0X000a then do(KI)[7]=KI[2][KI[6]];end;wG=bc[ZI];ZI=ZI+0X1;local M2,z2=KI[0X7],8;(KI)[z2+0x01]=M2;KI[z2]=M2[wG[1]];wG=bc[ZI];ZI=ZI+0X0001;do(KI)[10]=wG[0x6];end;do ZI=ZI+1;end;z2=8;(KI)[z2]=KI[z2](KI[z2+1],KI[z2+0X2]);cI=z2;ZI=ZI+0X01;ZI=ZI+0X1;wG=bc[ZI];ZI=ZI+0X1;if not KI[0X08]then do ZI=wG[5];end;end;else if not(not KI[wG[2]])then else ZI=wG[0x5];end;end;end;end;end;else do if eG>=0X00010 then if not(eG>=0X011)then repeat local rV,IV=Lc,KI;if not(#rV>0X0000)then else local gc={};for y4,r4 in M,rV do for Rr,pr in M,r4 do if not(pr[0X01]==IV and pr[2]>=0X00)then else local bk=(pr[2]);if not(not gc[bk])then else do gc[bk]={IV[bk]};end;end;do(pr)[1]=gc[bk];end;pr[0X2]=1;end;end;end;end;until true;local Ng=(wG[0X0002]);do return false,Ng,Ng+wG[5]-2;end;else if eG~=18 then(KI)[2]=FI[wG[0X00006]];wG=bc[ZI];do ZI=ZI+0X001;end;KI[3]=wG[6];ZI=ZI+0X00001;local J4=(2);(KI)[J4]=KI[J4](KI[J4+0X001]);do cI=J4;end;ZI=ZI+1;do ZI=ZI+1;end;wG=bc[ZI];ZI=ZI+1;if not(not KI[0X2])then else do ZI=wG[5];end;end;else(KI)[wG[2]]=FI[wG[6]];end;end;else if eG~=15 then(KI)[11]=FI[wG[0X6]];wG=bc[ZI];ZI=ZI+0X1;do(KI)[0x00c]=FI[wG[0X6]];end;do ZI=ZI+0X0001;end;do ZI=ZI+0X1;end;do ZI=ZI+0X001;end;KI[12]=#KI[12];wG=bc[ZI];ZI=ZI+1;(KI)[0x0C]=KI[0XC]+wG[1];ZI=ZI+0x1;KI[13]=KI[0X7];ZI=ZI+0X1;(KI[11])[KI[12]]=KI[13];wG=bc[ZI];ZI=ZI+1;(KI)[11]=FI[wG[0X0006]];wG=bc[ZI];ZI=ZI+1;if not(KI[11])then else ZI=wG[0x5];end;else if KI[wG[0x005]]==KI[wG[4]]then do ZI=wG[0X2];end;end;end;end;end;end;end;else if eG<0X1c then if not(eG<0x017)then if eG<0X00019 then if eG==24 then for Fc=wG[0X2],wG[5]do KI[Fc]=nil;end;else local dr=wG[0X2];local er,Tr=KI[dr]();if er then ZI=wG[0X5];KI[dr+3]=Tr;end;end;else if not(eG<26)then do if eG==0X1b then KI[wG[0x2]][KI[wG[5]]]=KI[wG[4]];else KI[0X0]=wG[0x00006];wG=bc[ZI];do ZI=ZI+1;end;KI[1]=FI[wG[6]];wG=bc[ZI];ZI=ZI+0x00001;KI[0X1]=KI[1][wG[0X0001]];wG=bc[ZI];do ZI=ZI+0X1;end;ZI=wG[5];end;end;else(KI)[wG[2]]=w(KI[wG[5]],KI[wG[4]]);end;end;else if not(eG>=0X15)then if eG==0X14 then KI[0X2]=false;wG=bc[ZI];ZI=ZI+0X01;(FI)[wG[6]]=KI[0X02];local R_=(0X2);ZI=ZI+0X01;do(KI)[0X2]={};end;wG=bc[ZI];ZI=ZI+0X1;FI[wG[6]]=KI[0X2];do wG=bc[ZI];end;ZI=ZI+0X0001;KI[0x2]=FI[wG[0X6]];wG=bc[ZI];ZI=ZI+1;local Q_=KI[2];(KI)[R_+0X01]=Q_;do(KI)[R_]=Q_[wG[0X01]];end;local Y_=0X0003;wG=bc[ZI];do ZI=ZI+1;end;KI[0X4]=wG[0X6];ZI=ZI+1;do R_=2;end;KI[R_]=KI[R_](KI[R_+1],KI[R_+2]);cI=R_;wG=bc[ZI];do ZI=ZI+0X00001;end;do KI[0x3]=wG[0X6];end;ZI=ZI+0X1;(KI)[4]=#KI[0X2];wG=bc[ZI];ZI=ZI+1;KI[5]=wG[6];wG=bc[ZI];ZI=ZI+1;R_=KI[Y_];local q_=(KI[Y_+1]);local d_=(KI[Y_+2]);(KI)[Y_]=P(function()for tT=R_,q_,d_ do(C)(true,tT);end;end);do ZI=wG[0X05];end;else end;else if eG==0X16 then if not(wG[6]<KI[wG[4]])then do ZI=wG[2];end;end;else local W4=2;KI[W4]=KI[W4](KI[W4+1],KI[W4+2]);cI=W4;ZI=ZI+0x01;ZI=ZI+1;wG=bc[ZI];ZI=ZI+0X01;FI[wG[6]]=KI[2];wG=bc[ZI];ZI=ZI+1;(KI)[0x2]=FI[wG[0X0006]];wG=bc[ZI];do ZI=ZI+0X00001;end;KI[2]=KI[0X2][wG[1]];ZI=ZI+1;ZI=ZI+0x01;wG=bc[ZI];do ZI=ZI+0X1;end;if KI[1]~=KI[2]then else do ZI=wG[2];end;end;end;end;end;else if eG<0X000021 then if eG>=0X00001e then if not(eG>=0X1F)then(KI)[3]=FI[wG[0X6]];wG=bc[ZI];local Dh=(0X3);do ZI=ZI+0X1;end;(KI)[4]=wG[6];do ZI=ZI+0x01;end;do(KI)[Dh]=KI[Dh](KI[Dh+1]);end;cI=Dh;ZI=ZI+0X1;ZI=ZI+1;wG=bc[ZI];ZI=ZI+0X1;FI[wG[6]]=KI[0x003];wG=bc[ZI];ZI=ZI+1;ZI=wG[0X5];else if eG~=32 then do(KI)[0XA]=KI[0X08][wG[1]];end;ZI=ZI+0X001;ZI=ZI+1;wG=bc[ZI];ZI=ZI+1;do if not KI[10]then ZI=wG[5];end;end;else do KI[2]=FI[wG[0x00006]];end;ZI=ZI+1;ZI=ZI+1;ZI=ZI+0x1;do(KI)[3]=KI[1];end;wG=bc[ZI];local U_=(0X02);do ZI=ZI+0x1;end;do(KI)[0X0004]=wG[0X6];end;do wG=bc[ZI];end;ZI=ZI+0X1;(KI)[5]=FI[wG[6]];wG=bc[ZI];do ZI=ZI+1;end;do(KI)[5]=KI[0x5][wG[0X001]];end;ZI=ZI+1;ZI=ZI+1;ZI=ZI+1;cI=U_+0X4-0X0001;KI[U_](E(KI,U_+1,cI));cI=U_-0x1;wG=bc[ZI];ZI=ZI+0X001;(KI)[2]=FI[wG[6]];wG=bc[ZI];ZI=ZI+0X0001;(KI)[2]=KI[2][wG[1]];ZI=ZI+0x1;ZI=ZI+0x00001;ZI=ZI+1;KI[1]=KI[0X2];wG=bc[ZI];ZI=ZI+1;do(KI)[0X02]=FI[wG[0X00006]];end;ZI=ZI+1;cI=0X2;do(KI)[cI]=KI[cI]();end;ZI=ZI+0X00001;ZI=ZI+1;ZI=ZI+1;(KI)[0x0]=KI[0x2];do wG=bc[ZI];end;ZI=ZI+0X1;ZI=wG[0x0005];end;end;else if eG==29 then do repeat local JK,zK=Lc,KI;do if#JK>0 then local NV={};for VN,oN in M,JK do for ir,mr in M,oN do if mr[1]==zK and mr[0X02]>=0 then local pT=(mr[2]);if not(not NV[pT])then else do(NV)[pT]={zK[pT]};end;end;do mr[0X001]=NV[pT];end;(mr)[0x2]=0X1;end;end;end;end;end;until true;end;do return;end;else KI[0xB]=FI[wG[0X00006]];wG=bc[ZI];local xl=(0XB);ZI=ZI+1;(KI)[12]=KI[0X8][wG[1]];ZI=ZI+1;ZI=ZI+1;wG=bc[ZI];do ZI=ZI+1;end;do KI[0X000C]=KI[12][wG[1]];end;ZI=ZI+1;(KI)[xl]=KI[xl](KI[xl+1]);do cI=xl;end;do ZI=ZI+0X01;end;ZI=ZI+0X1;wG=bc[ZI];ZI=ZI+1;if not(not(KI[11]<wG[1]))then else do ZI=wG[2];end;end;end;end;else if not(eG>=35)then if eG~=0X0022 then(KI)[wG[2]]=not KI[wG[5]];else(KI)[0X00002]=FI[wG[0X6]];ZI=ZI+0X00001;do ZI=ZI+0X001;end;ZI=ZI+0X1;KI[0X3]={E({},1,0X0001)};wG=bc[ZI];ZI=ZI+1;(KI)[0X00004]=FI[wG[6]];wG=bc[ZI];ZI=ZI+1;KI[0X004]=KI[0X4][wG[0X01]];local qA=0x03;do ZI=ZI+0X1;end;local oA=KI[qA];local YA=((0x001-0X1)*0X32);do for Nr=1,0X01 do do(oA)[YA+Nr]=KI[qA+Nr];end;end;end;wG=bc[ZI];ZI=ZI+1;do(KI)[0X004]=FI[wG[0X00006]];end;wG=bc[ZI];do ZI=ZI+0x1;end;do if not(not KI[0X4])then else ZI=wG[5];end;end;end;else if not(eG>=36)then(KI)[wG[2]]={E({},0X00001,wG[0X0005])};else if eG==37 then(KI)[wG[0x00002]]=v(KI[wG[0X05]],KI[wG[0X4]]);else KI[wG[0X2]]=wG[6];end;end;end;end;end;end;end;end);do if LI then if qI then if BI==1 then do return KI[dI]();end;else return KI[dI](E(KI,dI+1,cI));end;elseif not(dI)then else return E(KI,dI,BI);end;else if V(qI)~="string"then q(qI,0X0);else if not(r(qI,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(r(qI,"^.-:%d+: "))then(q)(qI,0);else q("Luraph Script:"..(Qc[ZI-0X1]or'(\105nter\110al)')..":\032"..u(qI),0X0000);end;end;end;end;end;end;else do ic=function(...)local Kv={};local Zv=(0X001);local pv=((k and k()or _ENV));local vv={[2]=Vc,[1]=Kv};local lv=(pv==H and fc or pv);local Pv,Ov=q3(...);Pv=Pv-1;for Wl=0x0,Pv do if ac>Wl then(Kv)[Wl]=Ov[Wl+1];else break;end;end;local Uv=(0X00);if not nc then do Ov=nil;end;elseif Ac then Kv[ac]={n=Pv>=ac and Pv-ac+0x001 or 0,E(Ov,ac+1,Pv+1)};end;if lv==pv then else do if not(s)then _ENV=lv;else(s)(ic,lv);end;end;end;local Hv,zv,jv,yv=c(function()while true do local dP=bc[Zv];local XP=(dP[3]);do Zv=Zv+1;end;if not(XP>=0X0B)then do if XP<0X5 then if not(XP<2)then if not(XP>=3)then local pc=(jc[1]);Kv[0X0000]=pc[1][pc[2]];local Tc=0;do dP=bc[Zv];end;Zv=Zv+0x1;local Nc=(Kv[0X0]);Kv[Tc+0X1]=Nc;(Kv)[Tc]=Nc[dP[1]];do Zv=Zv+1;end;Tc=0X00;Kv[Tc]=Kv[Tc](Kv[Tc+0X0001]);Uv=Tc;dP=bc[Zv];Zv=Zv+0x00001;do Zv=dP[5];end;else if XP==4 then local t4=Uc[dP[5]];local o4=(t4[0x05]);local T4,K4=#o4,nil;do if T4>0 then K4={};for AJ=0x01,T4 do local mJ=(o4[AJ]);if mJ[1]~=0 then(K4)[AJ-0X1]=jc[mJ[2]];else(K4)[AJ-1]={Kv,mJ[0x2]};end;end;(S)(Lc,K4);end;end;(Kv)[dP[2]]=e3(t4,K4,lv);else(Kv)[0]=lv[dP[0x6]];Zv=Zv+1;Zv=Zv+0X1;dP=bc[Zv];Zv=Zv+0X1;do Kv[0x00000]=Kv[0X0000][dP[0X00001]];end;Zv=Zv+1;Zv=Zv+1;Zv=Zv+1;Kv[0x0]=not Kv[0];dP=bc[Zv];Zv=Zv+1;Zv=dP[0X5];end;end;else if XP==1 then(Kv)[dP[2]]={E({},0X1,dP[5])};else Kv[dP[0x002]]=J(Kv[dP[0X00005]],Kv[dP[0X00004]]);end;end;else if XP<0X8 then if not(XP<6)then if XP==0X07 then Zv=dP[0X5];else local kc=dP[0X00002];local uc,xc=Kv[kc]();if uc then Zv=dP[0X5];(Kv)[kc+3]=xc;end;end;else(Kv)[dP[0X0002]]=Kv[dP[5]]<=Kv[dP[4]];end;else if XP>=0X09 then if XP==10 then repeat local Yd,Nd=Lc,(Kv);if not(#Yd>0X0)then else local ym={};do for VK,KK in M,Yd do for AY,dY in M,KK do if not(dY[0x001]==Nd and dY[0x00002]>=0)then else local Fh=(dY[0X2]);do if not(not ym[Fh])then else do ym[Fh]={Nd[Fh]};end;end;end;dY[0X1]=ym[Fh];dY[0X2]=0X00001;end;end;end;end;end;until true;local Yr=(dP[2]);do return false,Yr,Yr;end;else(vv)[dP[0X00005]]=Kv[dP[0X2]];end;else if not Kv[dP[2]]then Zv=dP[5];end;end;end;end;end;else if XP>=17 then if XP<0x000014 then if not(XP<18)then do if XP~=19 then if Kv[dP[0X5]]==Kv[dP[4]]then else Zv=dP[2];end;else Kv[dP[0X02]]=lv[dP[0X6]];end;end;else local UO=(jc[0x00000]);Kv[0]=UO[0X1][UO[2]];Zv=Zv+1;Kv[0X0]=not Kv[0X00];dP=bc[Zv];do Zv=Zv+0X001;end;if Kv[0X00]then Zv=dP[0X5];end;end;else if XP<21 then Kv[dP[2]]=dP[6];else do if XP==0X0016 then Kv[dP[0X2]]=Kv[dP[5]]>Kv[dP[0X4]];else do if Kv[dP[2]]then do Zv=dP[5];end;end;end;end;end;end;end;else if XP>=14 then if not(XP>=15)then repeat local bS,OS=Lc,Kv;do if not(#bS>0x00000)then else local h6=({});for dv,xv in M,bS do do for Ws,Ms in M,xv do if Ms[1]==OS and Ms[0x2]>=0 then local nO=Ms[0X002];if not(not h6[nO])then else h6[nO]={OS[nO]};end;(Ms)[1]=h6[nO];do(Ms)[0X2]=1;end;end;end;end;end;end;end;until true;return;else do if XP~=16 then do Kv[dP[0X2]]=Kv[dP[0X5]]>=Kv[dP[0X4]];end;else local rK=(jc[0]);do(Kv)[0X0000]=rK[1][rK[0X2]];end;do Zv=Zv+1;end;do Zv=Zv+1;end;dP=bc[Zv];Zv=Zv+1;Kv[0]=Kv[0X0][dP[0X1]];Zv=Zv+0X1;Zv=Zv+0x1;dP=bc[Zv];Zv=Zv+0X1;do(Kv)[0]=Kv[0x0]<dP[0X1];end;dP=bc[Zv];Zv=Zv+1;Zv=dP[5];end;end;end;else do if XP<12 then(Kv)[dP[2]]=-Kv[dP[0X0005]];else do if XP~=0X000D then else(Kv)[dP[2]]=not Kv[dP[0x5]];end;end;end;end;end;end;end;end;end);do if not(Hv)then if V(zv)=="string"then if r(zv,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if r(zv,"^.\045:\037\100\043\058 ")then q("Luraph Script:"..(Qc[Zv-0X1]or"(i\110tern\097\108\041")..'\058 '..u(zv),0X0);else q(zv,0);end;end;else(q)(zv,0);end;else if zv then if yv==0X00001 then do return Kv[jv]();end;else return Kv[jv](E(Kv,jv+1,Uv));end;elseif jv then do return E(Kv,jv,yv);end;end;end;end;end;end;end;else if Sc==0Xec then ic=function(...)local eS={};local HS=0X1;local RS=(k and k()or _ENV);local xS=(RS==H and fc or RS);local mS=0X0;local iS,US=q3(...);local SS={[1]=eS,[2]=Vc};iS=iS-1;for n_=0x0,iS do if not(ac>n_)then break;else(eS)[n_]=US[n_+1];end;end;if not nc then US=nil;elseif not(Ac)then else eS[ac]={n=iS>=ac and iS-ac+1 or 0X0,E(US,ac+0x001,iS+0x1)};end;if xS~=RS then if not(s)then _ENV=xS;else(s)(ic,xS);end;end;local dS,DS,OS,ES=c(function()while true do local yP=bc[HS];local aP=yP[3];do HS=HS+0X001;end;if not(aP>=0X000a)then do if aP<0X5 then do if not(aP<2)then if not(aP<0x3)then if aP==0x4 then else do if not(not eS[yP[0X2]])then else HS=yP[0X5];end;end;end;else eS[yP[2]]=true;end;else do if aP~=1 then do repeat local Au,iu=Lc,eS;if#Au>0X0 then local NU={};for Fi,oi in M,Au do for pP,rP in M,oi do do if rP[0x1]==iu and rP[2]>=0 then local dP=(rP[2]);if not(not NU[dP])then else(NU)[dP]={iu[dP]};end;rP[1]=NU[dP];rP[0X02]=0x00001;end;end;end;end;end;until true;end;local js=(yP[0x2]);return false,js,js;else local La=(jc[0X000]);(eS)[0X000]=La[0x1][La[0X002]];HS=HS+1;do HS=HS+0X001;end;yP=bc[HS];HS=HS+0X1;do if not(not eS[0X0])then else HS=yP[0X5];end;end;end;end;end;end;else do if aP<0X7 then if aP~=0X6 then local IJ=(Uc[yP[0X5]]);local yJ,KJ=IJ[5],nil;local sJ=(#yJ);if not(sJ>0x0)then else KJ={};for xB=0X1,sJ do local hB=yJ[xB];if hB[0X1]~=0 then KJ[xB-0X00001]=jc[hB[2]];else KJ[xB-0X1]={eS,hB[2]};end;end;(S)(Lc,KJ);end;(eS)[yP[2]]=e3(IJ,KJ,xS);else local yc=yP[0X2];local Zc=yP[0X005];if Zc~=0 then mS=yc+Zc-1;end;local Wc,zc,Nc=nil,nil,yP[4];do if Zc~=0X01 then do Wc,zc=q3(eS[yc](E(eS,yc+1,mS)));end;else do Wc,zc=q3(eS[yc]());end;end;end;do if Nc~=0X0001 then if Nc==0X0 then do Wc=Wc+yc-0X01;end;mS=Wc;else Wc=yc+Nc-2;mS=Wc+0X1;end;local XN=(0x0);for Kd=yc,Wc do do XN=XN+1;end;eS[Kd]=zc[XN];end;else mS=yc-1;end;end;end;else if aP<8 then local ks=(yP[0X2]);local ns,Es=eS[ks]();if ns then HS=yP[0X5];eS[ks+3]=Es;end;else if aP~=0x00009 then for rW=yP[2],yP[5]do eS[rW]=nil;end;else HS=yP[0x5];end;end;end;end;end;end;else if aP>=15 then if aP>=0X11 then if not(aP>=18)then(eS)[0X0000]=xS[yP[6]];HS=HS+0X1;do HS=HS+1;end;yP=bc[HS];HS=HS+0X01;eS[0]=eS[0X0][yP[0X1]];yP=bc[HS];HS=HS+1;do HS=yP[5];end;else if aP~=0X000013 then do(eS)[0X0]=xS[yP[6]];end;HS=HS+0x1;HS=HS+1;yP=bc[HS];HS=HS+1;local bi=0;eS[1]=yP[0X06];HS=HS+0x1;(eS)[bi]=eS[bi](eS[bi+1]);mS=bi;HS=HS+1;HS=HS+0X1;do HS=HS+0X00001;end;(eS)[0X000]=not eS[0X0];yP=bc[HS];HS=HS+1;HS=yP[5];else do repeat local UH,uH=Lc,(eS);if not(#UH>0)then else local OG=({});for Vd,bd in M,UH do for iA,UA in M,bd do if not(UA[1]==uH and UA[2]>=0)then else local Bm=(UA[2]);do if not OG[Bm]then(OG)[Bm]={uH[Bm]};end;end;UA[1]=OG[Bm];UA[2]=0X1;end;end;end;end;until true;end;return;end;end;else if aP==0x10 then local c8=(jc[1]);eS[0]=c8[0x0001][c8[2]];HS=HS+1;do HS=HS+1;end;yP=bc[HS];HS=HS+1;do HS=yP[5];end;else(eS)[yP[0x00002]]=eS[yP[5]]+eS[yP[0X4]];end;end;else if aP<12 then do if aP==0X00b then eS[yP[0X2]]={E({},0X0001,yP[0X5])};else do(eS)[yP[0X002]]=yP[0X006];end;end;end;else do if aP>=13 then do if aP==0Xe then local ML=jc[0X0001];(eS)[0]=ML[0X1][ML[0X2]];HS=HS+0X1;HS=HS+0x1;yP=bc[HS];HS=HS+1;do(eS)[0X0]=eS[0][yP[1]];end;yP=bc[HS];HS=HS+0X1;do eS[0]=eS[0]>yP[1];end;do yP=bc[HS];end;HS=HS+1;HS=yP[0X5];else(eS)[yP[2]]=xS[yP[0X6]];end;end;else local mN=jc[2];do eS[0X00]=mN[0X1][mN[0X2]];end;local NN=(0X000);yP=bc[HS];HS=HS+0X0001;local wN=(eS[0]);eS[NN+0X0001]=wN;eS[NN]=wN[yP[1]];do HS=HS+0X01;end;do NN=0;end;eS[NN]=eS[NN](eS[NN+1]);mS=NN;do yP=bc[HS];end;HS=HS+0X001;HS=yP[5];end;end;end;end;end;end;end);do if not(dS)then if V(DS)=="string"then if r(DS,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if r(DS,"^.-:%d+: ")then q("Luraph Script:"..(Qc[HS-0X1]or'(int\101\114\110\097l)')..": "..u(DS),0X0);else q(DS,0X0);end;else(q)(DS,0x000);end;else if DS then if ES==1 then do return eS[OS]();end;else do return eS[OS](E(eS,OS+1,mS));end;end;elseif not(OS)then else return E(eS,OS,ES);end;end;end;end;else ic=function(...)local JQ={};local GQ=0x1;local iQ=((k and k()or _ENV));local yQ={[2]=Vc,[1]=JQ};local TQ=(iQ==H and fc or iQ);local kQ,jQ=q3(...);kQ=kQ-0X1;local UQ=0X000;for lH=0X00000,kQ do if not(ac>lH)then break;else(JQ)[lH]=jQ[lH+1];end;end;if not nc then jQ=nil;elseif not(Ac)then else(JQ)[ac]={n=kQ>=ac and kQ-ac+1 or 0X0,E(jQ,ac+1,kQ+1)};end;if TQ~=iQ then if not(s)then _ENV=TQ;else s(ic,TQ);end;end;local RQ,tQ,PQ,qQ=c(function()do while true do local j7=bc[GQ];local U7=(j7[3]);GQ=GQ+0X1;do if U7<0Xc then if U7<0x6 then if not(U7<0X3)then if not(U7<4)then if U7==5 then local eg=(Uc[j7[0X00005]]);local gg=eg[5];local Zg,Xg=#gg,nil;if not(Zg>0)then else Xg={};for b8=1,Zg do local P8=(gg[b8]);do if P8[1]~=0 then Xg[b8-0X001]=jc[P8[2]];else(Xg)[b8-1]={JQ,P8[2]};end;end;end;S(Lc,Xg);end;JQ[j7[2]]=e3(eg,Xg,TQ);else do GQ=j7[0X5];end;end;else JQ[j7[0x2]]=not JQ[j7[0X5]];end;else if not(U7>=1)then local e2=jc[1];do JQ[1]=e2[0X1][e2[2]];end;j7=bc[GQ];GQ=GQ+1;do(JQ)[2]=TQ[j7[0X6]];end;do GQ=GQ+0x0001;end;(JQ)[1]=JQ[1]==JQ[2];do j7=bc[GQ];end;GQ=GQ+1;if not JQ[0X00001]then GQ=j7[5];end;else if U7~=0X02 then if JQ[j7[0X5]]<JQ[j7[4]]then do GQ=j7[2];end;end;else local an=jc[2];do JQ[0X01]=an[0X1][an[0X2]];end;GQ=GQ+0X1;do UQ=1;end;(JQ)[UQ]=JQ[UQ]();j7=bc[GQ];GQ=GQ+0X00001;GQ=j7[5];end;end;end;else do if not(U7<0X9)then do if not(U7<0Xa)then if U7==11 then JQ[1]=TQ[j7[6]];GQ=GQ+0X00001;do GQ=GQ+0X1;end;j7=bc[GQ];GQ=GQ+1;(JQ)[1]=JQ[0X1][j7[1]];j7=bc[GQ];GQ=GQ+1;(JQ)[0X1]=JQ[1][j7[0X01]];do j7=bc[GQ];end;do GQ=GQ+1;end;JQ[0x001]=JQ[1]>j7[1];do j7=bc[GQ];end;do GQ=GQ+1;end;GQ=j7[0X00005];else JQ[j7[2]]=TQ[j7[0X6]];end;else(JQ)[0X1]=TQ[j7[6]];GQ=GQ+1;GQ=GQ+0X1;local KP=(1);do j7=bc[GQ];end;GQ=GQ+0X1;local eP=(JQ[1]);JQ[KP+0x1]=eP;(JQ)[KP]=eP[j7[1]];do j7=bc[GQ];end;GQ=GQ+0X00001;(JQ)[3]=j7[6];GQ=GQ+0x00001;do KP=0X00001;end;JQ[KP]=JQ[KP](JQ[KP+0X1],JQ[KP+2]);do UQ=KP;end;do GQ=GQ+0X0001;end;GQ=GQ+1;do j7=bc[GQ];end;GQ=GQ+1;GQ=j7[0X5];end;end;else if U7<7 then repeat local ib,bb=Lc,(JQ);if not(#ib>0)then else local pe=({});do for V1,X1 in M,ib do for xl,Ql in M,X1 do if Ql[1]==bb and Ql[0X02]>=0 then local y7=Ql[2];if not pe[y7]then do(pe)[y7]={bb[y7]};end;end;(Ql)[1]=pe[y7];(Ql)[0X2]=0x001;end;end;end;end;end;until true;local gl=j7[0X2];return false,gl,gl;else do if U7~=8 then JQ[j7[2]]=v(JQ[j7[5]],JQ[j7[4]]);else JQ[0]=TQ[j7[0X6]];GQ=GQ+0X0001;GQ=GQ+1;j7=bc[GQ];GQ=GQ+0X01;(JQ)[1]=TQ[j7[0X6]];j7=bc[GQ];do GQ=GQ+0x1;end;do(JQ)[1]=JQ[0X1][j7[0X01]];end;j7=bc[GQ];GQ=GQ+1;JQ[0X01]=JQ[1][j7[1]];GQ=GQ+0X1;GQ=GQ+0X1;j7=bc[GQ];do GQ=GQ+1;end;do TQ[j7[6]]=JQ[0X1];end;do j7=bc[GQ];end;GQ=GQ+0X1;do JQ[1]=JQ[0X0000][j7[1]];end;local lt=(jc[0x0]);GQ=GQ+1;GQ=GQ+1;do GQ=GQ+1;end;JQ[2]=lt[0x001][lt[2]];GQ=GQ+0X1;GQ=GQ+1;j7=bc[GQ];do GQ=GQ+0X00001;end;(JQ)[0X2]=JQ[0X02][j7[1]];GQ=GQ+1;GQ=GQ+0X1;do GQ=GQ+0X1;end;JQ[0X1]=JQ[1]-JQ[0X2];j7=bc[GQ];GQ=GQ+0X00001;JQ[0X1]=JQ[1][j7[1]];j7=bc[GQ];GQ=GQ+0x001;(JQ)[0X2]=TQ[j7[0X6]];GQ=GQ+1;GQ=GQ+0X1;do j7=bc[GQ];end;GQ=GQ+0X1;JQ[0X2]=JQ[2][j7[0X1]];GQ=GQ+0X00001;lt=jc[0];do JQ[0X3]=lt[1][lt[2]];end;j7=bc[GQ];do GQ=GQ+1;end;(JQ)[0X3]=JQ[0X003][j7[1]];do GQ=GQ+0X1;end;do JQ[2]=JQ[0X2]-JQ[0X3];end;do j7=bc[GQ];end;GQ=GQ+1;do JQ[2]=JQ[0X2][j7[0x1]];end;GQ=GQ+0X1;do GQ=GQ+0X1;end;do j7=bc[GQ];end;GQ=GQ+0x1;JQ[2]=JQ[2]+j7[0X01];j7=bc[GQ];do GQ=GQ+0X0001;end;do if not(JQ[0X2]<JQ[0X1])then do GQ=j7[2];end;end;end;end;end;end;end;end;end;else if U7>=0X12 then if U7>=21 then do if U7<23 then if U7~=22 then if not JQ[j7[0X2]]then do GQ=j7[0x5];end;end;else local yX=(jc[1]);JQ[1]=yX[0X1][yX[0X0002]];j7=bc[GQ];do GQ=GQ+0X1;end;JQ[1]=JQ[1][j7[1]];GQ=GQ+0X01;GQ=GQ+0X00001;do j7=bc[GQ];end;GQ=GQ+1;JQ[0X2]=TQ[j7[6]];do GQ=GQ+0X0001;end;GQ=GQ+0X01;j7=bc[GQ];GQ=GQ+0x1;(JQ)[0x2]=JQ[0X0002][j7[0X1]];j7=bc[GQ];GQ=GQ+0x1;JQ[0X2]=JQ[2][j7[0X001]];GQ=GQ+0X1;GQ=GQ+1;GQ=GQ+0X1;JQ[1]=JQ[1]~=JQ[2];j7=bc[GQ];do GQ=GQ+0x1;end;GQ=j7[0X5];end;else do if U7==0x00018 then do repeat local Ei,fi=Lc,(JQ);do if#Ei>0X0 then local is=({});do for pV,zV in M,Ei do for Oy,Ny in M,zV do do if not(Ny[1]==fi and Ny[0X2]>=0X0)then else local Ss=(Ny[0X2]);if not is[Ss]then is[Ss]={fi[Ss]};end;(Ny)[1]=is[Ss];do(Ny)[2]=0x1;end;end;end;end;end;end;end;end;until true;end;return;else if not(JQ[j7[5]]<=JQ[j7[0X4]])then else do GQ=j7[2];end;end;end;end;end;end;else if U7>=19 then do if U7~=0X14 then JQ[j7[2]]=false;else JQ[j7[2]]={E({},0X01,j7[5])};end;end;else(JQ)[j7[0x2]]=JQ[j7[0x5]];end;end;else if not(U7<0xf)then if not(U7>=0X10)then(JQ)[1]=TQ[j7[0x00006]];GQ=GQ+1;(JQ)[1]=not JQ[1];j7=bc[GQ];GQ=GQ+0X1;GQ=j7[0X05];else if U7~=0X0011 then do JQ[j7[0X00002]]=j7[0X00006];end;else end;end;else do if not(U7>=13)then do for Dl=j7[2],j7[0X0005]do(JQ)[Dl]=nil;end;end;else if U7~=0XE then if JQ[j7[0X5]]~=JQ[j7[0X4]]then GQ=j7[0x2];end;else local Y9=jc[1];(JQ)[0X0001]=Y9[0X0001][Y9[0X00002]];do j7=bc[GQ];end;GQ=GQ+0X1;JQ[1]=JQ[1][j7[0X00001]];GQ=GQ+0X01;GQ=GQ+0x1;do j7=bc[GQ];end;do GQ=GQ+0X1;end;(JQ)[0x0002]=TQ[j7[0X6]];GQ=GQ+0X0001;do GQ=GQ+1;end;j7=bc[GQ];GQ=GQ+1;do(JQ)[2]=JQ[2][j7[1]];end;j7=bc[GQ];GQ=GQ+1;do(JQ)[0x02]=JQ[0X2][j7[1]];end;GQ=GQ+0X001;GQ=GQ+0X1;GQ=GQ+0X1;do(JQ)[0x0001]=JQ[1]~=JQ[2];end;j7=bc[GQ];GQ=GQ+0X1;GQ=j7[0X005];end;end;end;end;end;end;end;end;end;end);if RQ then if tQ then if qQ~=0X00001 then return JQ[PQ](E(JQ,PQ+1,UQ));else return JQ[PQ]();end;elseif PQ then do return E(JQ,PQ,qQ);end;end;else if V(tQ)=="string"then if not(r(tQ,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(r(tQ,"^.-:%d+: "))then(q)(tQ,0);else q("Luraph Script:"..(Qc[GQ-1]or'\040\105nt\101\114\110\097l)').."\058\032"..u(tQ),0X0);end;end;else q(tQ,0);end;end;end;end;end;end;else if not(Sc>=0X0e1)then if not(Sc>=223)then if Sc~=0xDe then ic=function(...)local k4=(1);local u4={};local J4=(k and k()or _ENV);local S4,H4=q3(...);local j4=({[2]=Vc,[1]=u4});do S4=S4-0x1;end;local y4=(0);local r4=((J4==H and fc or J4));for yL=0X0,S4 do do if not(ac>yL)then break;else u4[yL]=H4[yL+0X1];end;end;end;do if not nc then H4=nil;elseif Ac then u4[ac]={n=S4>=ac and S4-ac+1 or 0,E(H4,ac+1,S4+0x01)};end;end;if r4~=J4 then do if not(s)then _ENV=r4;else s(ic,r4);end;end;end;local l4,L4,D4,g4=c(function()while true do local sl=bc[k4];local Kl=(sl[0x3]);k4=k4+0x1;if Kl>=0X9 then do if not(Kl<13)then do if Kl<15 then do if Kl~=14 then local VU=(sl[2]);for tl=VU,VU+(sl[0x5]-1)do(u4)[tl]=H4[ac+(tl-VU)+1];end;else local K0=Uc[sl[5]];local U0=K0[5];local q0=nil;local b0=(#U0);if not(b0>0X00)then else q0={};for Ri=1,b0 do local Ai=(U0[Ri]);if Ai[1]==0 then q0[Ri-1]={u4,Ai[0x2]};else(q0)[Ri-1]=jc[Ai[0X2]];end;end;(S)(Lc,q0);end;(u4)[sl[2]]=e3(K0,q0,r4);end;end;else do if Kl>=0x10 then if Kl==0X0011 then else u4[sl[2]]=u4[sl[0X5]]~=u4[sl[4]];end;else u4[sl[2]]=u4[sl[5]]*u4[sl[0x04]];end;end;end;end;else if Kl<0Xb then if Kl~=0X0A then local Oq=(sl[0x00002]);local Mq=(P(function(...)C();for GG,JG,kG,pG,ZG,UG,mG,IG,sG,PG in...do(C)(true,{GG,JG,kG,pG,ZG,UG,mG,IG,sG,PG});end;end));(Mq)(u4[Oq],u4[Oq+1],u4[Oq+0X2]);y4=Oq;u4[Oq]=Mq;k4=sl[0X5];else u4[sl[0X2]]=u4[sl[5]]%u4[sl[4]];end;else if Kl==0X00C then do u4[0]=r4[sl[0X6]];end;do k4=k4+1;end;k4=k4+0x00001;local Rn=0;do sl=bc[k4];end;k4=k4+1;local An=u4[0X0];(u4)[Rn+0X00001]=An;(u4)[Rn]=An[sl[1]];do sl=bc[k4];end;k4=k4+0X1;do u4[2]=sl[6];end;k4=k4+1;Rn=0;do u4[Rn]=u4[Rn](u4[Rn+0X1],u4[Rn+0x2]);end;y4=Rn;sl=bc[k4];k4=k4+0X1;(u4)[0X0001]=r4[sl[6]];k4=k4+1;k4=k4+0x1;sl=bc[k4];k4=k4+1;(u4)[1]=u4[0X1][sl[1]];do sl=bc[k4];end;local vn=(Uc[sl[0x05]]);k4=k4+1;local hn=vn[0X00005];local dn=nil;local Pn=(#hn);if not(Pn>0)then else dn={};for WZ=1,Pn do local SZ=hn[WZ];if SZ[0X1]~=0X000 then do(dn)[WZ-0x001]=jc[SZ[2]];end;else dn[WZ-1]={u4,SZ[2]};end;end;S(Lc,dn);end;(u4)[0X2]=e3(vn,dn,r4);k4=k4+0x1;Rn=1;u4[Rn](u4[Rn+1]);y4=Rn-0X1;do k4=k4+0X0001;end;do k4=k4+1;end;do k4=k4+1;end;repeat local lF,TF=Lc,u4;if not(#lF>0)then else local Yb={};do for Ir,Yr in M,lF do do for SB,dB in M,Yr do if not(dB[1]==TF and dB[2]>=0)then else local eN=dB[0X2];if not(not Yb[eN])then else(Yb)[eN]={TF[eN]};end;(dB)[0X0001]=Yb[eN];(dB)[2]=0x1;end;end;end;end;end;end;until true;return;else(u4)[sl[2]]=u4[sl[0x005]]<=u4[sl[0X0004]];end;end;end;end;else if not(Kl<4)then if not(Kl<0X6)then if Kl<7 then for UD=sl[2],sl[5]do(u4)[UD]=nil;end;else if Kl~=0X8 then do u4[sl[0X002]]=r4[sl[0X6]];end;else k4=sl[5];end;end;else do if Kl~=5 then(u4)[sl[2]]=sl[0X6];else local c1=(sl[2]);local D1,U1=u4[c1]();do if D1 then do for Q9=1,sl[0X00004]do u4[c1+Q9]=U1[Q9];end;end;k4=sl[0X5];end;end;end;end;end;else if not(Kl<0X2)then do if Kl~=3 then u4[sl[0X2]]={E({},0x1,sl[5])};else(u4)[sl[2]]=u4[sl[0X5]];end;end;else do if Kl~=0X1 then u4[sl[0X2]]=T(u4[sl[0X5]],u4[sl[0X4]]);else local be=(sl[0X0002]);local Me=u4[be];local Ze=(u4[be+0X2]);local Se=u4[be+1];(u4)[be]=P(function()for Kp=Me,Se,Ze do C(true,Kp);end;end);k4=sl[0x5];end;end;end;end;end;end;end);do if not(l4)then if V(L4)~='\115\116r\105\110\103'then q(L4,0);else do if r(L4,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(r(L4,"^.-:%d+: "))then(q)(L4,0);else(q)("Luraph Script:"..(Qc[k4-1]or"\040i\110\116\101\114\110\097l\041")..": "..u(L4),0X00000);end;end;else if L4 then if g4~=1 then return u4[D4](E(u4,D4+0X01,y4));else do return u4[D4]();end;end;elseif D4 then return E(u4,D4,g4);end;end;end;end;else ic=function(...)local Jl={};local fl=1;local Hl=((k and k()or _ENV));local Dl={[2]=Vc,[1]=Jl};local Rl=(0);local pl,xl=q3(...);do pl=pl-1;end;for Nv=0X000,pl do if not(ac>Nv)then do break;end;else do Jl[Nv]=xl[Nv+1];end;end;end;local Fl=(Hl==H and fc or Hl);if not nc then do xl=nil;end;elseif Ac then Jl[ac]={n=pl>=ac and pl-ac+1 or 0X0,E(xl,ac+1,pl+1)};end;do if Fl~=Hl then do if not(s)then _ENV=Fl;else(s)(ic,Fl);end;end;end;end;local Sl,Kl,ol,Vl=c(function()while true do local lw=bc[fl];local rw=lw[3];fl=fl+1;if not(rw>=0X001B)then if rw>=13 then if rw<0X00014 then do if rw>=0X10 then if not(rw<18)then if rw~=0X13 then do(Fl)[lw[6]]=Jl[0X003];end;do lw=bc[fl];end;fl=fl+0x01;do Jl[0X3]=Fl[lw[0X6]];end;do lw=bc[fl];end;fl=fl+0X0001;if not(Jl[0X003])then else fl=lw[5];end;else(Jl)[4]=Fl[lw[0X00006]];fl=fl+1;fl=fl+0X001;lw=bc[fl];fl=fl+1;do Jl[4]=Jl[4][lw[1]];end;fl=fl+0x1;do fl=fl+1;end;do lw=bc[fl];end;fl=fl+0X1;do if not(Jl[0X00004])then else fl=lw[0X5];end;end;end;else if rw~=17 then(Jl)[3]=Fl[lw[6]];fl=fl+0X0001;do fl=fl+0X0001;end;do lw=bc[fl];end;fl=fl+0X1;Jl[3]=Jl[3][lw[0X1]];lw=bc[fl];fl=fl+0x1;if not(Jl[3])then else fl=lw[5];end;else(Jl)[0X4]=Fl[lw[6]];lw=bc[fl];fl=fl+0X1;Jl[0x004]=Jl[4][lw[1]];do fl=fl+0x0001;end;fl=fl+0X001;lw=bc[fl];fl=fl+1;if Jl[0X00004]then do fl=lw[5];end;end;end;end;else if rw>=14 then if rw==0xF then do(Jl)[lw[2]]=lw[6];end;else do(Jl)[0X003]=Fl[lw[0X6]];end;lw=bc[fl];fl=fl+0x1;Jl[0X003]=Jl[0X3][lw[0x1]];fl=fl+0X1;fl=fl+1;lw=bc[fl];fl=fl+1;do(Jl)[0X00003]=Jl[0x03][lw[1]];end;fl=fl+1;fl=fl+0X1;lw=bc[fl];fl=fl+0X1;if not(lw[6]<=Jl[3])then else fl=lw[2];end;end;else Jl[2]=Fl[lw[0X6]];do fl=fl+0x001;end;fl=fl+0x1;fl=fl+1;Rl=2;(Jl[Rl])();do Rl=Rl-0x1;end;lw=bc[fl];do fl=fl+0X1;end;Jl[0X0002]=Fl[lw[0X6]];lw=bc[fl];fl=fl+1;Jl[0X2][lw[0X00006]]=lw[0x1];do lw=bc[fl];end;do fl=fl+1;end;Jl[0X2]=Fl[lw[0X0006]];fl=fl+0x1;fl=fl+1;lw=bc[fl];fl=fl+0X1;Jl[0X2][lw[6]]=lw[0X1];fl=fl+1;do repeat local nX,ZX=Lc,Jl;if not(#nX>0)then else local MO=({});for mB,MB in M,nX do do for JU,EU in M,MB do if not(EU[1]==ZX and EU[2]>=0)then else local rd=EU[0x0002];do if not(not MO[rd])then else(MO)[rd]={ZX[rd]};end;end;(EU)[0X1]=MO[rd];(EU)[0X002]=1;end;end;end;end;end;until true;end;return;end;end;end;else do if rw>=23 then if rw<25 then do if rw~=24 then do Jl[0x4]=Fl[lw[0X06]];end;fl=fl+0X0001;fl=fl+1;do lw=bc[fl];end;fl=fl+1;Jl[4]=Jl[4][lw[1]];lw=bc[fl];fl=fl+0X1;if not(Jl[0x004])then else fl=lw[0X00005];end;else do(Jl)[0x04]=Fl[lw[6]];end;fl=fl+1;do fl=fl+1;end;lw=bc[fl];fl=fl+0x01;do(Jl)[0X004]=Jl[4][lw[1]];end;lw=bc[fl];fl=fl+1;if Jl[0X004]then fl=lw[5];end;end;end;else if rw==0x1a then do Jl[3]=Fl[lw[6]];end;lw=bc[fl];fl=fl+0X1;local P5=(Uc[lw[5]]);local F5,h5=P5[5],nil;local L5,Z5=#F5,0X3;do if not(L5>0X0)then else h5={};for lF=1,L5 do local HF=F5[lF];if HF[0X1]~=0 then do(h5)[lF-1]=jc[HF[0x02]];end;else(h5)[lF-1]={Jl,HF[0X2]};end;end;S(Lc,h5);end;end;(Jl)[0X0004]=e3(P5,h5,Fl);do fl=fl+0X01;end;(Jl[Z5])(Jl[Z5+0X1]);Rl=Z5-0x1;lw=bc[fl];fl=fl+1;do fl=lw[0X5];end;else local kU=(lw[5]);local EU=(Jl[kU]);for kX=kU+1,lw[0X4]do do EU=EU..Jl[kX];end;end;(Jl)[lw[2]]=EU;end;end;else if rw>=0X15 then if rw~=22 then Jl[0]=Fl[lw[0X6]];fl=fl+0X00001;fl=fl+1;local Gd=(0X3);lw=bc[fl];do fl=fl+1;end;Jl[1]=Fl[lw[6]];lw=bc[fl];fl=fl+1;(Jl)[2]=lw[0X6];do fl=fl+1;end;Jl[3]=true;local nd=0;fl=fl+0X1;local Pd=0X4;if Pd==0 then else Rl=nd+Pd-0X1;end;local Qd,ud=nil,nil;do if Pd==0x1 then do Qd,ud=q3(Jl[nd]());end;else Qd,ud=q3(Jl[nd](E(Jl,nd+0X1,Rl)));end;end;if Gd==0X00001 then Rl=nd-1;else do if Gd==0X0 then Qd=Qd+nd-0X1;do Rl=Qd;end;else Qd=nd+Gd-0x2;do Rl=Qd+0x001;end;end;end;local co=0X00000;for Wg=nd,Qd do co=co+0X1;do Jl[Wg]=ud[co];end;end;end;do lw=bc[fl];end;fl=fl+1;if Jl[1]~=lw[0X1]then else fl=lw[0X2];end;else do if Jl[lw[0X005]]~=lw[0X0001]then fl=lw[2];end;end;end;else end;end;end;end;else if rw>=6 then if not(rw<0X9)then if rw>=0Xb then do if rw~=0XC then(Jl)[3]=Fl[lw[0x6]];do lw=bc[fl];end;fl=fl+1;Jl[0x004]=lw[6];local tg=3;fl=fl+1;(Jl)[tg]=Jl[tg](Jl[tg+0X1]);Rl=tg;lw=bc[fl];fl=fl+0x00001;if not(not Jl[3])then else fl=lw[5];end;else Jl[4]=Fl[lw[6]];lw=bc[fl];fl=fl+1;Jl[0X4]=Jl[4][lw[0x1]];fl=fl+1;fl=fl+0X1;lw=bc[fl];fl=fl+0X001;if Jl[4]then fl=lw[0X005];end;end;end;else if rw~=10 then do(Jl)[4]=Fl[lw[6]];end;fl=fl+1;do fl=fl+1;end;lw=bc[fl];fl=fl+1;(Jl)[0X4]=Jl[4][lw[1]];do lw=bc[fl];end;do fl=fl+1;end;if not Jl[0X4]then do fl=lw[0X5];end;end;else(Jl)[lw[0X02]]=Jl[lw[0X05]]-Jl[lw[4]];end;end;else if rw<0X7 then repeat local Vb,Rb=Lc,(Jl);do if#Vb>0 then local lr={};for Pu,Ju in M,Vb do for L9,H9 in M,Ju do if H9[0X1]==Rb and H9[2]>=0X0000 then local on=H9[2];do if not(not lr[on])then else do(lr)[on]={Rb[on]};end;end;end;H9[1]=lr[on];(H9)[2]=0x001;end;end;end;end;end;until true;return;else if rw==8 then do(Jl)[3]=Fl[lw[0X0006]];end;fl=fl+0X00001;do fl=fl+1;end;lw=bc[fl];do fl=fl+0X01;end;do if not(Jl[3])then else fl=lw[0x5];end;end;else do(Jl)[4]=Fl[lw[6]];end;fl=fl+1;fl=fl+1;lw=bc[fl];do fl=fl+0X00001;end;Jl[4]=Jl[4][lw[1]];do lw=bc[fl];end;do fl=fl+1;end;(Jl)[4]=Jl[0X4][lw[1]];do fl=fl+0X1;end;fl=fl+0X01;lw=bc[fl];do fl=fl+0X001;end;if not(not(lw[6]<Jl[0X0004]))then else fl=lw[2];end;end;end;end;else if not(rw<0x003)then if not(rw>=0x004)then(Jl)[4]=Fl[lw[6]];lw=bc[fl];do fl=fl+0x0001;end;(Jl)[5]=lw[0X6];local rj=(4);fl=fl+1;Jl[rj](Jl[rj+0X1]);Rl=rj-1;lw=bc[fl];fl=fl+1;fl=lw[0X5];else if rw~=5 then do Jl[3]=Fl[lw[0X6]];end;local Kx=(3);fl=fl+0x01;fl=fl+1;lw=bc[fl];fl=fl+1;do Jl[0X4]=lw[0x6];end;do fl=fl+0x00001;end;do Jl[Kx]=Jl[Kx](Jl[Kx+1]);end;Rl=Kx;do fl=fl+0x00001;end;fl=fl+1;lw=bc[fl];fl=fl+0X1;(Jl)[4]=Fl[lw[0x6]];do lw=bc[fl];end;fl=fl+1;Jl[0X4]=Jl[4][lw[0X001]];do lw=bc[fl];end;fl=fl+1;(Jl)[4]=Jl[0x4][lw[0x1]];do lw=bc[fl];end;fl=fl+1;if not(not(lw[0x0006]<Jl[0X4]))then else fl=lw[0X0002];end;else repeat local pw,jw,Yw=Lc,Jl,lw[0X2];if not(#pw>0)then else local Ms=({});for gm,Bm in M,pw do do for jn,tn in M,Bm do if not(tn[1]==jw and tn[0X2]>=Yw)then else local Ph=(tn[0x2]);do if not(not Ms[Ph])then else Ms[Ph]={jw[Ph]};end;end;(tn)[0X1]=Ms[Ph];do tn[2]=1;end;end;end;end;end;end;until true;end;end;else if rw>=0X1 then if rw==0x002 then if not(not Jl[lw[2]])then else fl=lw[5];end;else do(Jl)[lw[2]]=Jl[lw[0X5]]==lw[0x1];end;end;else do(Jl)[0X3]=Fl[lw[0X6]];end;local HR=0X03;fl=fl+0x1;fl=fl+0X1;lw=bc[fl];fl=fl+0X1;(Jl)[0X4]=lw[0X006];fl=fl+0x1;Jl[0X05]=true;fl=fl+0x1;Jl[HR]=Jl[HR](Jl[HR+1],Jl[HR+2]);Rl=HR;fl=fl+0X1;(Jl)[2]=Jl[3];lw=bc[fl];fl=fl+0X1;(Jl)[3]=Jl[2]==lw[1];lw=bc[fl];fl=fl+1;if not(Jl[0X3])then else fl=lw[5];end;end;end;end;end;else if not(rw<0X28)then if rw>=0X2f then if not(rw<0X32)then if rw>=52 then if rw~=53 then Jl[4]=Jl[0X00003][lw[0X1]];lw=bc[fl];fl=fl+1;Jl[0x5]=Fl[lw[6]];do fl=fl+0X0001;end;Rl=5;(Jl)[Rl]=Jl[Rl]();local Bw=(6);do lw=bc[fl];end;fl=fl+0X1;do Jl[6]=Fl[lw[0X6]];end;lw=bc[fl];local Lw=(Uc[lw[5]]);do fl=fl+0X1;end;local mw,qw=Lw[5],(nil);local dw=#mw;if not(dw>0X0)then else do qw={};end;for Lv=1,dw do local Zv=mw[Lv];if Zv[1]~=0x0 then(qw)[Lv-0x0001]=jc[Zv[0X00002]];else do(qw)[Lv-0x1]={Jl,Zv[2]};end;end;end;(S)(Lc,qw);end;(Jl)[0X00007]=e3(Lw,qw,Fl);fl=fl+1;Jl[Bw](Jl[Bw+1]);Rl=Bw-0X1;do fl=fl+0x001;end;fl=fl+1;fl=fl+1;Jl[6]=nil;lw=bc[fl];fl=fl+1;(Fl)[lw[6]]=Jl[0X6];do fl=fl+0X0001;end;local tw=(jc[0X000]);Jl[6]=tw[1][tw[0X2]];lw=bc[fl];fl=fl+0x0001;Bw=0X06;local Ew=(Jl[6]);Jl[Bw+0X001]=Ew;Jl[Bw]=Ew[lw[0X1]];fl=fl+1;Bw=6;(Jl[Bw])(Jl[Bw+1]);do Rl=Bw-0X1;end;fl=fl+1;fl=fl+1;lw=bc[fl];fl=fl+0X001;do Jl[6]=Fl[lw[0X6]];end;do lw=bc[fl];end;fl=fl+1;(Jl)[7]=lw[0X6];do fl=fl+1;end;Bw=6;do Jl[Bw]=Jl[Bw](Jl[Bw+1]);end;Rl=Bw;lw=bc[fl];fl=fl+0X1;if not Jl[0X00006]then fl=lw[5];end;else do Jl[0X0006]=Fl[lw[0X006]];end;do lw=bc[fl];end;fl=fl+0x1;Jl[7]=lw[6];fl=fl+0x1;(Jl)[8]=true;local HC=0X06;fl=fl+1;Jl[HC]=Jl[HC](Jl[HC+0X00001],Jl[HC+2]);do Rl=HC;end;fl=fl+0X1;do fl=fl+0X1;end;fl=fl+0X00001;(Jl)[2]=Jl[6];lw=bc[fl];do fl=fl+0X1;end;fl=lw[0X00005];end;else if rw~=0x33 then(Jl)[4]=Fl[lw[0X006]];do lw=bc[fl];end;local n8=4;fl=fl+1;(Jl)[5]=lw[0X06];do fl=fl+1;end;Jl[n8](Jl[n8+1]);Rl=n8-1;lw=bc[fl];fl=fl+0X1;fl=lw[0X5];else(Jl)[0X5]=Fl[lw[0X6]];fl=fl+1;do fl=fl+1;end;lw=bc[fl];fl=fl+1;Jl[5]=Jl[0X00005][lw[1]];lw=bc[fl];fl=fl+0X1;if not(not Jl[0x5])then else fl=lw[0x5];end;end;end;else if rw<48 then Jl[0X2]=Jl[0x01];lw=bc[fl];do fl=fl+0X1;end;Jl[3]=Jl[1]==lw[1];lw=bc[fl];fl=fl+1;do if Jl[0X003]then fl=lw[5];end;end;else if rw==49 then local uZ,RZ=Uc[lw[0X00005]],nil;local GZ=(uZ[0X005]);local UZ=(#GZ);if not(UZ>0X0000)then else RZ={};for xx=1,UZ do local Dx=GZ[xx];if Dx[1]==0 then RZ[xx-1]={Jl,Dx[2]};else RZ[xx-0X001]=jc[Dx[2]];end;end;(S)(Lc,RZ);end;(Jl)[lw[2]]=e3(uZ,RZ,Fl);else Jl[0X6]=false;lw=bc[fl];fl=fl+1;(Fl)[lw[6]]=Jl[6];fl=fl+1;repeat local pd,Ld=Lc,(Jl);if#pd>0x0000 then local yC={};for Ki,Pi in M,pd do for Tb,cb in M,Pi do do if cb[0X001]==Ld and cb[0X2]>=0X4 then local q6=cb[2];do if not(not yC[q6])then else do(yC)[q6]={Ld[q6]};end;end;end;cb[0X1]=yC[q6];(cb)[0X002]=0X01;end;end;end;end;end;until true;lw=bc[fl];fl=fl+1;do fl=lw[0x5];end;end;end;end;else if rw<43 then do if rw>=0X0029 then if rw~=42 then local tX,bX=lw[2],lw[0X5];Rl=tX+bX-1;repeat local HW,NW=Lc,Jl;if#HW>0 then local bj=({});do for wc,zc in M,HW do for Wn,cn in M,zc do if not(cn[1]==NW and cn[0X2]>=0)then else local nL=(cn[2]);if not(not bj[nL])then else(bj)[nL]={NW[nL]};end;(cn)[0X1]=bj[nL];(cn)[2]=0x1;end;end;end;end;end;until true;return true,tX,bX;else(Jl)[5]=Fl[lw[0X6]];lw=bc[fl];fl=fl+0X1;(Jl)[0X5]=Jl[0X5][lw[0X01]];lw=bc[fl];fl=fl+1;do if Jl[5]then fl=lw[0X5];end;end;end;else do Jl[0X3]=Fl[lw[0x6]];end;lw=bc[fl];fl=fl+0x1;(Jl)[0x00003]=Jl[0x3][lw[1]];lw=bc[fl];fl=fl+1;if not Jl[3]then fl=lw[0X5];end;end;end;else do if not(rw<0X2d)then if rw==0X02e then Jl[3]=Fl[lw[0X6]];lw=bc[fl];fl=fl+0X0001;do(Jl)[3]=Jl[0X00003][lw[1]];end;fl=fl+1;do fl=fl+0X1;end;lw=bc[fl];do fl=fl+1;end;do if not Jl[0X3]then do fl=lw[0x5];end;end;end;else do if not(Jl[lw[2]])then else fl=lw[0X5];end;end;end;else if rw~=0X2C then Jl[0X3]=Fl[lw[6]];fl=fl+1;do fl=fl+0X1;end;lw=bc[fl];do fl=fl+0X1;end;if not(not Jl[3])then else fl=lw[5];end;else fl=lw[0X5];end;end;end;end;end;else do if not(rw>=33)then do if rw<30 then if rw<0x001C then Fl[lw[6]]=Jl[3];fl=fl+0x1;local Ij,xj=jc[0],3;Jl[0X3]=Ij[1][Ij[2]];lw=bc[fl];do fl=fl+1;end;local Cj=Jl[3];do(Jl)[xj+1]=Cj;end;Jl[xj]=Cj[lw[1]];fl=fl+1;do xj=3;end;(Jl)[xj]=Jl[xj](Jl[xj+0X1]);Rl=xj;fl=fl+1;fl=fl+1;lw=bc[fl];fl=fl+0X1;if not(not Jl[0X3])then else fl=lw[5];end;else if rw~=29 then Jl[3]=Fl[lw[0X6]];do lw=bc[fl];end;do fl=fl+0X1;end;do(Jl)[3]=Jl[3][lw[1]];end;lw=bc[fl];fl=fl+1;if not(Jl[3])then else do fl=lw[0X0005];end;end;else if not(not(Jl[lw[0x5]]<=Jl[lw[4]]))then else fl=lw[2];end;end;end;else if rw<0X1F then Jl[lw[2]]=Fl[lw[0X6]];else if rw==0x020 then do for at=lw[2],lw[5]do do(Jl)[at]=nil;end;end;end;else do(Jl)[5]=Fl[lw[6]];end;fl=fl+0x00001;fl=fl+1;lw=bc[fl];fl=fl+1;if not Jl[5]then do fl=lw[0x5];end;end;end;end;end;end;else if not(rw>=36)then if not(rw<0X022)then if rw~=35 then do(Jl)[0X4]=Fl[lw[0X6]];end;fl=fl+0X01;fl=fl+0X01;do lw=bc[fl];end;do fl=fl+1;end;(Jl)[4]=Jl[0X00004][lw[1]];fl=fl+0X001;fl=fl+0X01;lw=bc[fl];fl=fl+1;if not(not Jl[0X4])then else fl=lw[5];end;else Jl[lw[2]]={E({},1,lw[5])};end;else Jl[4]=Fl[lw[0X6]];fl=fl+1;fl=fl+1;lw=bc[fl];fl=fl+0X1;do(Jl)[4]=Jl[4][lw[1]];end;fl=fl+0X1;fl=fl+0X1;lw=bc[fl];fl=fl+1;if Jl[4]then fl=lw[0X5];end;end;else if not(rw>=0X000026)then if rw==37 then do if Jl[lw[0x5]]~=lw[0x001]then else fl=lw[2];end;end;else do Jl[4]=Fl[lw[0X00006]];end;fl=fl+1;fl=fl+0x001;lw=bc[fl];fl=fl+1;if Jl[4]then fl=lw[0x5];end;end;else do if rw~=39 then local XN=(lw[0X2]);local pN,cN=Jl[XN]();if pN then do fl=lw[5];end;do(Jl)[XN+0x3]=cN;end;end;else local zA=(Jl[3]);local kA=(4);do Jl[kA+0X1]=zA;end;(Jl)[kA]=zA[lw[1]];lw=bc[fl];do fl=fl+1;end;(Jl)[0X6]=lw[6];fl=fl+0X001;do kA=4;end;(Jl)[kA]=Jl[kA](Jl[kA+0X00001],Jl[kA+0X2]);Rl=kA;lw=bc[fl];do fl=fl+1;end;if not(not Jl[4])then else do fl=lw[0x0005];end;end;end;end;end;end;end;end;end;end;end;end);if Sl then if Kl then if Vl==0X1 then return Jl[ol]();else return Jl[ol](E(Jl,ol+0X1,Rl));end;elseif ol then return E(Jl,ol,Vl);end;else if V(Kl)=='s\116ri\110\103'then if r(Kl,"\097\116tem\112t\032\116\111 \121i\101\108\100 \097c\114\111\115s \109\101t\097me\116\104\111\100\047C\037\045\099al\108\032\098\111\117\110d\097\114y")then return coroutine.yield();end;if r(Kl,'\094\046\045:\037d+: ')then q("Luraph Script:"..(Qc[fl-1]or"(i\110\116\101r\110\097\108\041")..': '..u(Kl),0);else q(Kl,0);end;else q(Kl,0);end;end;end;end;else do if Sc~=0Xe0 then ic=function(...)local e4=(1);local q4,S4={},0x0;local s4=((k and k()or _ENV));local h4,f4=q3(...);local C4={[1]=q4,[2]=Vc};h4=h4-1;for WK=0X0000,h4 do do if not(ac>WK)then break;else do q4[WK]=f4[WK+1];end;end;end;end;local V4=((s4==H and fc or s4));if not nc then do f4=nil;end;elseif not(Ac)then else q4[ac]={n=h4>=ac and h4-ac+0X01 or 0x0,E(f4,ac+0x1,h4+1)};end;if V4~=s4 then do if not(s)then _ENV=V4;else s(ic,V4);end;end;end;local Y4,o4,n4,L4=c(function()do while true do local JX=(bc[e4]);local TX=JX[3];e4=e4+0X001;if TX>=0X9 then if TX>=0X00e then if TX<0X10 then if TX==0XF then local ft=(JX[0x05]);local Qt=(q4[ft]);for DV=ft+0X0001,JX[0X004]do Qt=Qt..q4[DV];end;(q4)[JX[2]]=Qt;else q4[JX[2]]=JX[6];end;else do if TX>=17 then if TX==18 then(q4)[JX[0X2]]=q4[JX[5]][q4[JX[4]]];else e4=JX[0X5];end;else end;end;end;else if TX>=0XB then do if TX>=12 then if TX~=13 then(q4)[JX[0x2]]={E({},1,JX[0X005])};else local Ch=(JX[0X2]);local Mh,bh,Fh=q4[Ch]();do if Mh then do(q4)[Ch+1]=bh;end;do(q4)[Ch+2]=Fh;end;e4=JX[5];end;end;end;else repeat local EW,cW=Lc,q4;if#EW>0 then local Gr=({});do for Kg,Rg in M,EW do for x5,Y5 in M,Rg do if Y5[1]==cW and Y5[0X2]>=0X0 then local Ki=Y5[2];if not Gr[Ki]then Gr[Ki]={cW[Ki]};end;(Y5)[0x0001]=Gr[Ki];Y5[0x2]=1;end;end;end;end;end;until true;local z0=(JX[2]);return false,z0,z0;end;end;else if TX==0XA then(q4)[0X6]=q4[5][JX[1]];JX=bc[e4];do e4=e4+0X00001;end;q4[0X7]=q4[0X000][JX[1]];e4=e4+0x1;e4=e4+1;JX=bc[e4];e4=e4+1;q4[0X007]=q4[0X7][JX[0X001]];do e4=e4+0x001;end;do e4=e4+1;end;e4=e4+1;q4[6]=q4[0X6]-q4[7];JX=bc[e4];e4=e4+0X1;do q4[6]=q4[0X6][JX[1]];end;e4=e4+0X01;e4=e4+0X1;JX=bc[e4];do e4=e4+0x001;end;do if not(not(q4[0x6]<q4[1]))then else e4=JX[2];end;end;else for az=JX[0X2],JX[5]do q4[az]=nil;end;end;end;end;else if not(TX<4)then if TX>=0X6 then do if TX<7 then(q4)[JX[2]]=V4[JX[0X6]];else if TX==0x00008 then repeat local Jl,ul,kl=Lc,q4,JX[0x00002];if#Jl>0 then local wU=({});do for PN,YN in M,Jl do for jk,Ck in M,YN do do if Ck[1]==ul and Ck[2]>=kl then local l0=(Ck[2]);do if not(not wU[l0])then else wU[l0]={ul[l0]};end;end;Ck[0X00001]=wU[l0];do(Ck)[2]=1;end;end;end;end;end;end;end;until true;else q4[JX[2]]=q4[JX[5]];end;end;end;else if TX==0x05 then local xP=Uc[JX[5]];local AP=nil;local iP=xP[0x0005];local GP=(#iP);do if GP>0 then AP={};for QP=0X001,GP do local WP=iP[QP];if WP[0X01]==0 then AP[QP-1]={q4,WP[2]};else AP[QP-0x1]=jc[WP[2]];end;end;(S)(Lc,AP);end;end;(q4)[JX[2]]=e3(xP,AP,V4);else(V4)[JX[0x6]]=q4[JX[0X0002]];end;end;else if not(TX<2)then if TX==0X3 then(q4)[0X0007]=q4[6];e4=e4+0X1;(q4)[8]=q4[0X05];do e4=e4+1;end;(q4)[0X2]=q4[0X8];e4=e4+1;(q4)[1]=q4[0X7];do JX=bc[e4];end;e4=e4+1;e4=JX[0X0005];else do(q4)[0x1]=JX[6]/JX[1];end;e4=e4+0X0001;(q4)[2]=nil;JX=bc[e4];e4=e4+0X1;local Xx=2;do(q4)[3]=V4[JX[6]];end;do e4=e4+1;end;do e4=e4+1;end;JX=bc[e4];do e4=e4+1;end;(q4)[4]=V4[JX[0X6]];e4=e4+1;local kx=0x00004;e4=e4+0X01;JX=bc[e4];do e4=e4+1;end;(q4)[0X4]=q4[0X0004][JX[1]];JX=bc[e4];e4=e4+1;do(q4)[0X04]=q4[0x04][JX[1]];end;JX=bc[e4];e4=e4+0X1;local lx=q4[4];do q4[kx+0X1]=lx;end;q4[kx]=lx[JX[0X1]];e4=e4+1;kx=4;local Cx=(0);if Xx~=0 then S4=kx+Xx-1;end;local rx,sx=nil,(nil);if Xx~=1 then rx,sx=q3(q4[kx](E(q4,kx+0x1,S4)));else rx,sx=q3(q4[kx]());end;if Cx==1 then do S4=kx-0x1;end;else if Cx~=0X0 then do rx=kx+Cx-2;end;S4=rx+0X1;else rx=rx+kx-0x1;S4=rx;end;local M7=0;for Cp=kx,rx do M7=M7+0x0001;q4[Cp]=sx[M7];end;end;do e4=e4+1;end;do e4=e4+1;end;do e4=e4+1;end;kx=3;Xx=0X0;Cx=4;if Xx==0X0 then else S4=kx+Xx-1;end;rx,sx=nil;if Xx==0X01 then do rx,sx=q3(q4[kx]());end;else rx,sx=q3(q4[kx](E(q4,kx+1,S4)));end;if Cx==0x001 then do S4=kx-1;end;else if Cx==0x0 then do rx=rx+kx-1;end;S4=rx;else do rx=kx+Cx-0X2;end;do S4=rx+1;end;end;local YS=0X0;do for Zj=kx,rx do YS=YS+1;(q4)[Zj]=sx[YS];end;end;end;e4=e4+0X001;e4=e4+1;JX=bc[e4];e4=e4+0X1;do kx=3;end;local Nx=(P(function(...)C();for If,uf in...do(C)(true,If,uf);end;end));(Nx)(q4[kx],q4[kx+0X1],q4[kx+0X02]);S4=kx;q4[kx]=Nx;e4=JX[5];end;else if TX==0x1 then do repeat local O7,J7=Lc,(q4);if#O7>0X0 then local o8=({});for M4,O4 in M,O7 do for af,Kf in M,O4 do if not(Kf[0X01]==J7 and Kf[0X2]>=0)then else local pZ=(Kf[0X02]);do if not(not o8[pZ])then else o8[pZ]={J7[pZ]};end;end;Kf[1]=o8[pZ];do Kf[2]=0X01;end;end;end;end;end;until true;end;return;else do if not(q4[JX[5]]<q4[JX[4]])then else e4=JX[0X2];end;end;end;end;end;end;end;end;end);if not(Y4)then if V(o4)=="string"then do if r(o4,'att\101m\112t to y\105\101l\100\032a\099r\111ss \109\101\116ameth\111\100\047\067\037\045\099\097ll\032boundary')then return coroutine.yield();end;end;do if r(o4,"^.\045:\037\100+\058 ")then(q)('\076\117\114aph\032\083\099ri\112t:'..(Qc[e4-1]or"(internal)")..": "..u(o4),0X0);else(q)(o4,0);end;end;else(q)(o4,0X0);end;else if o4 then if L4==1 then return q4[n4]();else return q4[n4](E(q4,n4+1,S4));end;elseif not(n4)then else return E(q4,n4,L4);end;end;end;else ic=function(...)local nL={};local uL=(0X1);local qL={[1]=nL,[2]=Vc};local hL=(0x0000);local vL=((k and k()or _ENV));local mL,jL=q3(...);local OL=((vL==H and fc or vL));mL=mL-0X1;for Ki=0x000,mL do if not(ac>Ki)then do break;end;else(nL)[Ki]=jL[Ki+0X1];end;end;if not nc then do jL=nil;end;elseif not(Ac)then else(nL)[ac]={n=mL>=ac and mL-ac+0X1 or 0,E(jL,ac+0x001,mL+1)};end;if OL~=vL then if not(s)then _ENV=OL;else s(ic,OL);end;end;local cL,RL,wL,PL=c(function()while true do local t0=(bc[uL]);local i0=t0[3];do uL=uL+0X01;end;if i0<0X00007 then if i0>=3 then do if i0>=0X5 then if i0==6 then do uL=t0[0X5];end;else repeat local rx,Ex=Lc,(nL);if#rx>0X0 then local Zx=({});for yG,YG in M,rx do for Dy,ey in M,YG do if not(ey[0X00001]==Ex and ey[0x2]>=0)then else local GX=(ey[2]);do if not Zx[GX]then Zx[GX]={Ex[GX]};end;end;ey[0X1]=Zx[GX];ey[2]=0X1;end;end;end;end;until true;return;end;else if i0==4 then nL[t0[0X0002]]=nL[t0[0x05]]-nL[t0[4]];else(nL)[t0[0X02]]=nL[t0[0X00005]]~=nL[t0[4]];end;end;end;else if not(i0>=1)then nL[0X0]=OL[t0[6]];uL=uL+0x1;do hL=0x0;end;nL[hL]=nL[hL]();do t0=bc[uL];end;uL=uL+1;if not(nL[0x0])then else uL=t0[0x5];end;else if i0~=0x02 then else do nL[t0[0X002]]=v(nL[t0[0X5]],nL[t0[4]]);end;end;end;end;else if i0>=11 then if i0>=13 then if i0==14 then nL[t0[2]]=t0[0X006];else local Vz=(Uc[t0[5]]);local ez=(nil);local yz=(Vz[0x05]);local Lz=(#yz);if not(Lz>0X00)then else do ez={};end;do for lw=1,Lz do local Mw=(yz[lw]);do if Mw[0X1]==0 then ez[lw-0X1]={nL,Mw[0X2]};else ez[lw-0x01]=jc[Mw[2]];end;end;end;end;S(Lc,ez);end;do nL[t0[0X00002]]=e3(Vz,ez,OL);end;end;else do if i0==12 then for Wq=t0[0X002],t0[0X5]do do nL[Wq]=nil;end;end;else nL[t0[0X002]]=-nL[t0[5]];end;end;end;else if i0>=0X9 then if i0~=10 then(nL)[t0[2]]={E({},1,t0[0X5])};else(nL)[0x00]=OL[t0[6]];local Dv=(0X0000);do t0=bc[uL];end;do uL=uL+1;end;(nL)[1]=t0[0X00006];uL=uL+0X1;nL[Dv](nL[Dv+0x1]);hL=Dv-0X01;uL=uL+1;do uL=uL+1;end;do t0=bc[uL];end;uL=uL+1;do uL=t0[0X00005];end;end;else do if i0~=8 then nL[t0[0X2]]=not nL[t0[0X5]];else nL[t0[0x0002]]=OL[t0[6]];end;end;end;end;end;end;end);do if not(cL)then if V(RL)=='\115t\114\105\110\103'then do if r(RL,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;end;if r(RL,"\094.\045:%\100+\058 ")then(q)("Luraph Script:"..(Qc[uL-0x1]or'(inter\110\097l\041')..": "..u(RL),0x0);else q(RL,0);end;else q(RL,0);end;else if RL then if PL==0X01 then return nL[wL]();else do return nL[wL](E(nL,wL+0x1,hL));end;end;elseif not(wL)then else return E(nL,wL,PL);end;end;end;end;end;end;end;else do if not(Sc>=227)then do if Sc~=226 then ic=function(...)local sZ=({});local MZ=1;local PZ=(k and k()or _ENV);local IZ,cZ=q3(...);local tZ,DZ,YZ=0x0,(PZ==H and fc or PZ),({[2]=Vc,[1]=sZ});do IZ=IZ-1;end;for wD=0x0,IZ do if not(ac>wD)then break;else sZ[wD]=cZ[wD+0X001];end;end;if not nc then cZ=nil;elseif Ac then sZ[ac]={n=IZ>=ac and IZ-ac+0x1 or 0,E(cZ,ac+1,IZ+0X1)};end;if DZ~=PZ then if s then s(ic,DZ);else _ENV=DZ;end;end;while true do local lM=bc[MZ];local MM=(lM[3]);MZ=MZ+1;do return(function(E,U,...)local l=E[0];if not l then return;end;local A="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";return table.concat(CustomCrypt((l:gsub(".",function(I)local S,J="",I:byte();for V=8,1,-1 do S=S..(J%2^V-J%2^(V-1)>0 and"1"or"0");end;return S;end).."0000"):gsub("%d%d%d?%d?%d?%d?",function(v)if(#v<6)then return"";end;local J=0;for h=1,6 do J=J+(v:sub(h,h)=="1"and 2^(6-h)or 0);end;return A:sub(J+1,J+1);end)..({"","==","="})[#l%3+1]),"!");end)(sZ,jc,...);end;end;end;else do ic=function(...)local uZ=({});local BZ=1;local hZ=((k and k()or _ENV));local pZ={[2]=Vc,[1]=uZ};local TZ=0;local MZ,LZ=q3(...);do MZ=MZ-0x01;end;local rZ=(hZ==H and fc or hZ);for zj=0x0,MZ do do if not(ac>zj)then break;else uZ[zj]=LZ[zj+0X01];end;end;end;do if not nc then do LZ=nil;end;elseif not(Ac)then else(uZ)[ac]={n=MZ>=ac and MZ-ac+1 or 0x0000,E(LZ,ac+0X1,MZ+0x1)};end;end;if rZ==hZ then else do if s then(s)(ic,rZ);else _ENV=rZ;end;end;end;local ZZ,YZ,zZ,AZ=c(function()while true do local pb=(bc[BZ]);local Rb=(pb[0X3]);BZ=BZ+1;if Rb<9 then if not(Rb>=0x4)then if Rb>=2 then if Rb==3 then uZ[pb[2]]=pb[6];else(uZ)[pb[0X02]]=rZ[pb[6]];end;else if Rb~=1 then uZ[pb[2]]=o(uZ[pb[5]],uZ[pb[4]]);else(uZ)[pb[0x002]]=uZ[pb[0X5]]*uZ[pb[0X4]];end;end;else do if Rb<0x6 then if Rb~=0X05 then do uZ[pb[0X002]]=uZ[pb[5]]<=uZ[pb[4]];end;else if not uZ[pb[2]]then do BZ=pb[5];end;end;end;else if Rb>=0X7 then do if Rb~=8 then else(uZ)[pb[2]]=uZ[pb[0X0005]]+uZ[pb[4]];end;end;else local eZ=pb[0X2];local GZ=(P(function(...)(C)();for i_,P_,G_,R_,C_,h_,k_,M_,L_,U_ in...do C(true,{i_,P_,G_,R_,C_,h_,k_,M_,L_,U_});end;end));GZ(uZ[eZ],uZ[eZ+0X01],uZ[eZ+2]);TZ=eZ;do uZ[eZ]=GZ;end;BZ=pb[5];end;end;end;end;else if not(Rb>=0X00D)then do if not(Rb>=11)then do if Rb~=10 then BZ=pb[5];else if uZ[pb[0X02]]then BZ=pb[5];end;end;end;else if Rb==12 then repeat local T1,j1=Lc,(uZ);if#T1>0 then local dg={};do for Xa,Ya in M,T1 do do for Pu,qu in M,Ya do do if qu[0X01]==j1 and qu[2]>=0X0000 then local pJ=qu[0x2];do if not(not dg[pJ])then else do dg[pJ]={j1[pJ]};end;end;end;(qu)[1]=dg[pJ];(qu)[2]=0x00001;end;end;end;end;end;end;end;until true;return;else uZ[pb[2]]={E({},1,pb[0x05])};end;end;end;else if not(Rb>=0X00F)then if Rb~=14 then for zY=pb[2],pb[0X5]do uZ[zY]=nil;end;else local dS=Uc[pb[0X5]];local lS=(dS[5]);local gS=nil;local mS=(#lS);do if not(mS>0)then else gS={};for Dc=1,mS do local Oc=lS[Dc];if Oc[0X0001]~=0 then do gS[Dc-1]=jc[Oc[0X0002]];end;else do gS[Dc-0X1]={uZ,Oc[0x0002]};end;end;end;S(Lc,gS);end;end;uZ[pb[2]]=e3(dS,gS,rZ);end;else do if Rb>=0X10 then if Rb==17 then uZ[0]=rZ[pb[6]];BZ=BZ+0x00001;BZ=BZ+0X01;local Cv=1;do pb=bc[BZ];end;BZ=BZ+1;(uZ)[0x1]=rZ[pb[0X06]];pb=bc[BZ];do BZ=BZ+0x1;end;uZ[0X1]=uZ[0X01][pb[0x1]];pb=bc[BZ];BZ=BZ+1;uZ[0X2]=pb[6];pb=bc[BZ];BZ=BZ+1;do uZ[0X00003]=pb[6];end;BZ=BZ+0X0001;(uZ)[Cv]=uZ[Cv](uZ[Cv+0X00001],uZ[Cv+2]);TZ=Cv;do pb=bc[BZ];end;do BZ=BZ+1;end;uZ[1]=uZ[0X1]/pb[0x1];do BZ=BZ+1;end;do Cv=0x0;end;uZ[Cv](uZ[Cv+0x1]);TZ=Cv-0X01;BZ=BZ+1;BZ=BZ+1;do pb=bc[BZ];end;BZ=BZ+0x1;BZ=pb[0x5];else(uZ)[pb[0x2]]=uZ[pb[0X05]]>uZ[pb[4]];end;else(uZ)[0]=rZ[pb[0X6]];BZ=BZ+1;local nJ=jc[0];BZ=BZ+1;local dJ=0X00000;BZ=BZ+0X0001;uZ[1]=nJ[0X0001][nJ[0x2]];pb=bc[BZ];BZ=BZ+0x1;(uZ)[1]=uZ[0x0001][pb[1]];BZ=BZ+1;(uZ)[dJ]=uZ[dJ](uZ[dJ+1]);do TZ=dJ;end;do BZ=BZ+0X1;end;BZ=BZ+1;pb=bc[BZ];BZ=BZ+1;do if uZ[0]then BZ=pb[0X5];end;end;end;end;end;end;end;end;end);if not(ZZ)then do if V(YZ)=="string"then do if r(YZ,'\097\116t\101mp\116 \116o yiel\100 \097\099\114\111\115\115\032m\101t\097met\104o\100\047\067\037-\099all\032\098\111und\097\114y')then do return coroutine.yield();end;end;end;do if r(YZ,'^\046\045\058\037d+: ')then(q)("Luraph Script:"..(Qc[BZ-0x00001]or"(internal)")..": "..u(YZ),0x0);else(q)(YZ,0);end;end;else q(YZ,0);end;end;else if YZ then if AZ~=0x1 then return uZ[zZ](E(uZ,zZ+1,TZ));else do return uZ[zZ]();end;end;elseif not(zZ)then else return E(uZ,zZ,AZ);end;end;end;end;end;end;else if Sc==0X000e4 then ic=function(...)local W0=(1);local z0={};local G0=(k and k()or _ENV);local t0=({[2]=Vc,[1]=z0});local d0,B0=q3(...);d0=d0-0X0001;do for hg=0,d0 do if not(ac>hg)then do break;end;else z0[hg]=B0[hg+1];end;end;end;if not nc then B0=nil;elseif Ac then(z0)[ac]={n=d0>=ac and d0-ac+1 or 0x0,E(B0,ac+1,d0+0x1)};end;local O0=(0);local C0=(G0==H and fc or G0);if C0==G0 then else do if not(s)then _ENV=C0;else s(ic,C0);end;end;end;local k0,N0,o0,V0=c(function()while true do local r1=bc[W0];local z1=r1[3];W0=W0+1;if z1>=0X8 then if not(z1>=12)then if z1>=0X00a then if z1==0xB then(z0)[0X0]=C0[r1[6]];W0=W0+1;W0=W0+1;W0=W0+0X1;z0[0x0]=not z0[0X0];r1=bc[W0];W0=W0+1;if z0[0X000]then do W0=r1[0X5];end;end;else(z0)[r1[0X002]]={E({},1,r1[0X5])};end;else if z1~=9 then do(z0)[r1[0x02]]=C0[r1[0X06]];end;else z0[r1[0X2]]=z0[r1[0x5]]+z0[r1[0x4]];end;end;else do if not(z1<14)then if not(z1>=0xF)then repeat local dn,un=Lc,(z0);do if not(#dn>0)then else local eO=({});do for r_,w_ in M,dn do for f5,a5 in M,w_ do if not(a5[1]==un and a5[2]>=0)then else local Jo=a5[0X2];if not(not eO[Jo])then else do(eO)[Jo]={un[Jo]};end;end;a5[0X00001]=eO[Jo];(a5)[0X0002]=0X001;end;end;end;end;end;end;until true;local Dq=(r1[0X002]);return false,Dq,Dq;else if z1==0X10 then(z0)[r1[0X2]]=z0[r1[0X5]]%z0[r1[4]];else end;end;else if z1~=0X00d then z0[0X0]=C0[r1[6]];local r8=(0);r1=bc[W0];W0=W0+1;z0[0]=z0[0][r1[0X01]];do r1=bc[W0];end;W0=W0+0X0001;do(z0)[0]=z0[0X0][r1[1]];end;do W0=W0+1;end;W0=W0+1;r1=bc[W0];W0=W0+0X1;(z0)[0]=z0[0X0][r1[1]];do r1=bc[W0];end;W0=W0+0X01;local L8=(z0[0]);z0[r8+0X1]=L8;z0[r8]=L8[r1[1]];local D8=jc[0X00];W0=W0+1;z0[2]=D8[1][D8[0x00002]];W0=W0+1;r8=0X000;(z0[r8])(z0[r8+0X1],z0[r8+0x2]);O0=r8-0X1;W0=W0+0X01;W0=W0+1;W0=W0+0X0001;D8=jc[1];z0[0]=D8[1][D8[0X2]];W0=W0+0X01;O0=0X0000;do z0[O0]=z0[O0]();end;r1=bc[W0];W0=W0+1;if not(not z0[0])then else W0=r1[0X0005];end;else local yo=(r1[0X00002]);local To,go=z0[yo]();do if To then W0=r1[0X5];do z0[yo+0X00003]=go;end;end;end;end;end;end;end;else if not(z1>=0X4)then do if z1<0x2 then if z1==1 then for Mf=r1[0x00002],r1[5]do(z0)[Mf]=nil;end;else(z0)[r1[2]]=T(z0[r1[5]],z0[r1[4]]);end;else if z1~=0x3 then if z0[r1[5]]==z0[r1[4]]then W0=r1[2];end;else local Nq=(jc[0]);z0[0]=Nq[1][Nq[0x2]];r1=bc[W0];W0=W0+0X00001;do(z0)[1]=C0[r1[0X6]];end;do r1=bc[W0];end;W0=W0+0X1;z0[1]=z0[1][r1[1]];do W0=W0+1;end;W0=W0+0x1;W0=W0+1;z0[0x0000]=z0[0]~=z0[0X01];r1=bc[W0];W0=W0+1;do W0=r1[0X00005];end;end;end;end;else if not(z1>=0X06)then do if z1==0X5 then repeat local HF,wF=Lc,(z0);do if#HF>0 then local av={};for da,Ba in M,HF do for mx,jx in M,Ba do if not(jx[0X1]==wF and jx[2]>=0)then else local ai=jx[0x2];if not(not av[ai])then else(av)[ai]={wF[ai]};end;jx[0X001]=av[ai];jx[2]=1;end;end;end;end;end;until true;do return;end;else local IZ=(nil);local sZ=Uc[r1[0X5]];local AZ=sZ[0X5];local pZ=(#AZ);if pZ>0 then IZ={};for bf=0x1,pZ do local lf=(AZ[bf]);if lf[1]~=0 then IZ[bf-0x001]=jc[lf[2]];else IZ[bf-0X1]={z0,lf[0X00002]};end;end;(S)(Lc,IZ);end;do z0[r1[2]]=e3(sZ,IZ,C0);end;end;end;else if z1~=0X00007 then z0[r1[2]]=r1[6];else do W0=r1[5];end;end;end;end;end;end;end);if k0 then if N0 then if V0~=1 then do return z0[o0](E(z0,o0+0X001,O0));end;else return z0[o0]();end;elseif o0 then return E(z0,o0,V0);end;else if V(N0)~="string"then q(N0,0x0);else if not(r(N0,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(N0,"^.-\058\037\100+: "))then(q)(N0,0x0);else q('\076\117\114\097ph\032Scr\105pt\058'..(Qc[W0-0X001]or'\040\105\110\116\101rn\097\108\041')..'\058\032'..u(N0),0X00000);end;end;end;end;else ic=function(...)local NM,wM=0,{};local VM=(k and k()or _ENV);local tM={[1]=wM,[2]=Vc};local EM=0x1;local FM,gM=q3(...);local kM=((VM==H and fc or VM));do FM=FM-0X1;end;for Nj=0X000,FM do if not(ac>Nj)then do break;end;else wM[Nj]=gM[Nj+1];end;end;if not nc then gM=nil;elseif Ac then(wM)[ac]={n=FM>=ac and FM-ac+1 or 0X00,E(gM,ac+0x1,FM+0X1)};end;if kM==VM then else do if not(s)then _ENV=kM;else s(ic,kM);end;end;end;local vM,QM,bM,oM=c(function()while true do local tR=(bc[EM]);local FR=tR[0X3];EM=EM+0X1;if FR>=0X0000c then if FR<0X12 then if FR>=15 then if FR<16 then(wM)[tR[2]]=w(wM[tR[0x05]],wM[tR[0X04]]);else if FR==0X000011 then do(wM)[tR[2]]=not wM[tR[5]];end;else do(wM)[0]=kM[tR[6]];end;EM=EM+0X1;local qs=0x0;EM=EM+1;tR=bc[EM];do EM=EM+1;end;do(wM)[1]=tR[0x6];end;EM=EM+1;wM[qs]=wM[qs](wM[qs+0X1]);do NM=qs;end;EM=EM+1;do EM=EM+1;end;tR=bc[EM];EM=EM+1;do if not(not wM[0])then else EM=tR[0X005];end;end;end;end;else if not(FR>=13)then repeat local Im,im=Lc,wM;if not(#Im>0X00)then else local UX=({});for aR,AR in M,Im do for jJ,WJ in M,AR do if not(WJ[0x1]==im and WJ[0X2]>=0)then else local qs=(WJ[0X02]);if not UX[qs]then do(UX)[qs]={im[qs]};end;end;WJ[1]=UX[qs];(WJ)[0X2]=0X1;end;end;end;end;until true;return;else if FR==14 then wM[0]=kM[tR[0X6]];do tR=bc[EM];end;EM=EM+0X1;wM[0X1]=kM[tR[6]];EM=EM+1;local BP=(1);EM=EM+1;tR=bc[EM];EM=EM+1;local EP=(wM[1]);do wM[BP+1]=EP;end;wM[BP]=EP[tR[1]];tR=bc[EM];EM=EM+1;(wM)[3]=tR[6];EM=EM+1;do(wM)[0X4]=true;end;EM=EM+0X1;BP=0x1;NM=BP+0X4-0X1;do wM[BP]=wM[BP](E(wM,BP+0X00001,NM));end;do NM=BP;end;do tR=bc[EM];end;EM=EM+0X1;wM[0X001]=wM[1][tR[0x1]];EM=EM+1;do EM=EM+1;end;tR=bc[EM];do EM=EM+0X01;end;wM[0x1]=wM[1][tR[1]];do EM=EM+1;end;BP=0;(wM[BP])(wM[BP+0X1]);NM=BP-0X1;tR=bc[EM];EM=EM+0X1;wM[0X00]=kM[tR[6]];tR=bc[EM];EM=EM+0X001;(wM)[0X01]=tR[0x6];EM=EM+0x0001;BP=0X0;(wM[BP])(wM[BP+1]);NM=BP-1;do tR=bc[EM];end;EM=EM+1;do(wM)[0]=kM[tR[6]];end;EM=EM+0X1;EM=EM+0X1;do tR=bc[EM];end;EM=EM+0X00001;wM[0X0]=wM[0x0][tR[0x1]];tR=bc[EM];EM=EM+1;do if not(not wM[0X0])then else EM=tR[5];end;end;else(wM)[0X0000]=kM[tR[0X00006]];tR=bc[EM];do EM=EM+0X1;end;(wM)[0]=wM[0][tR[1]];tR=bc[EM];EM=EM+0X1;if not(not wM[0])then else EM=tR[0X5];end;end;end;end;else if not(FR<21)then if FR>=0X16 then if FR==0x17 then do(wM)[tR[2]]=tR[6];end;else if wM[tR[0X2]]then do EM=tR[0x5];end;end;end;else do wM[tR[2]]=kM[tR[6]];end;end;else if not(FR>=0X13)then wM[0]=kM[tR[0X006]];do EM=EM+1;end;EM=EM+1;tR=bc[EM];EM=EM+1;wM[0]=wM[0][tR[0X00001]];EM=EM+1;EM=EM+1;tR=bc[EM];EM=EM+1;if not wM[0X00000]then do EM=tR[0X5];end;end;else if FR==0X14 then wM[tR[2]]=-wM[tR[5]];else do wM[0X000]=kM[tR[6]];end;EM=EM+1;EM=EM+1;tR=bc[EM];local Qq=(0X000);EM=EM+0x1;(wM)[0X0]=wM[0][tR[1]];EM=EM+1;EM=EM+1;tR=bc[EM];EM=EM+1;local Hq=(wM[0x00000]);do(wM)[Qq+1]=Hq;end;(wM)[Qq]=Hq[tR[1]];tR=bc[EM];EM=EM+1;do(wM)[0X002]=tR[6];end;EM=EM+1;Qq=0;wM[Qq]=wM[Qq](wM[Qq+1],wM[Qq+2]);do NM=Qq;end;do tR=bc[EM];end;EM=EM+1;if not wM[0X0]then EM=tR[0X5];end;end;end;end;end;else if FR>=0X6 then if FR<0x9 then do if not(FR>=0X7)then else if FR==0X00008 then wM[0X00]=kM[tR[6]];EM=EM+0X1;EM=EM+1;tR=bc[EM];local dh=(0);EM=EM+0X01;(wM)[0]=wM[0x0][tR[1]];tR=bc[EM];EM=EM+0X001;local Nh=(wM[0x00]);(wM)[dh+0x0001]=Nh;wM[dh]=Nh[tR[1]];tR=bc[EM];do EM=EM+0X001;end;wM[0X2]=tR[0x00006];EM=EM+0X1;dh=0;(wM)[dh]=wM[dh](wM[dh+0X1],wM[dh+0X2]);do NM=dh;end;do EM=EM+0X001;end;EM=EM+0X0001;tR=bc[EM];EM=EM+0X1;do if not wM[0]then do EM=tR[0X5];end;end;end;else local MO=(Uc[tR[0X5]]);local aO,OO=MO[0X5],nil;local KO=#aO;if not(KO>0X0)then else OO={};do for d2=0x1,KO do local O2=(aO[d2]);do if O2[1]~=0X0 then OO[d2-0X1]=jc[O2[2]];else OO[d2-0x1]={wM,O2[2]};end;end;end;end;(S)(Lc,OO);end;wM[tR[2]]=e3(MO,OO,kM);end;end;end;else if not(FR<10)then if FR==0X0b then wM[0]=kM[tR[6]];do EM=EM+0x0001;end;EM=EM+1;tR=bc[EM];do EM=EM+0x001;end;local ly=(0X0);do wM[1]=tR[6];end;tR=bc[EM];EM=EM+0x1;(wM)[0X02]=tR[6];EM=EM+0X1;(wM)[ly]=wM[ly](wM[ly+1],wM[ly+2]);NM=ly;EM=EM+1;do EM=EM+1;end;tR=bc[EM];EM=EM+1;do if not(not(tR[6]<=wM[0X0]))then else EM=tR[2];end;end;else do(wM)[tR[0x2]]={E({},1,tR[5])};end;end;else local Gu,Uu,ou=tR[2],tR[0X5],tR[0x4];if Uu==0X0 then else do NM=Gu+Uu-0x00001;end;end;local tu,ru=nil,(nil);if Uu~=0x0001 then tu,ru=q3(wM[Gu](E(wM,Gu+1,NM)));else do tu,ru=q3(wM[Gu]());end;end;if ou==1 then NM=Gu-0x00001;else do if ou~=0X0 then tu=Gu+ou-0X2;NM=tu+1;else tu=tu+Gu-0x1;NM=tu;end;end;local Kx=(0);for bd=Gu,tu do do Kx=Kx+0X1;end;(wM)[bd]=ru[Kx];end;end;end;end;else if FR<3 then if FR>=0x01 then if FR==0X2 then do(wM)[tR[2]]=wM[tR[5]]/wM[tR[0x4]];end;else repeat local t8,h8,N8=Lc,wM,tR[2];do if#t8>0X0 then local i2=({});for xy,Yy in M,t8 do do for RG,nG in M,Yy do if not(nG[1]==h8 and nG[2]>=N8)then else local MU=(nG[2]);if not i2[MU]then do i2[MU]={h8[MU]};end;end;(nG)[0x1]=i2[MU];nG[0x02]=0X1;end;end;end;end;end;end;until true;end;else do for Ik=tR[2],tR[0X00005]do(wM)[Ik]=nil;end;end;end;else if FR<0X4 then local e6,C6=tR[0X2],(wM[tR[5]]);do wM[e6+0X1]=C6;end;wM[e6]=C6[tR[1]];else if FR==5 then(wM)[0]=kM[tR[6]];tR=bc[EM];EM=EM+0X1;(wM)[0]=wM[0X0][tR[0X1]];do tR=bc[EM];end;EM=EM+0X1;(wM)[1]=tR[0X6];local Pg=(0X0);EM=EM+0X1;(wM)[Pg]=wM[Pg](wM[Pg+1]);NM=Pg;tR=bc[EM];EM=EM+1;if not(not wM[0X0000])then else EM=tR[5];end;else do EM=tR[5];end;end;end;end;end;end;end;end);if not(vM)then if V(QM)=="string"then do if r(QM,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(r(QM,'\094.-\058\037\100\043: '))then(q)(QM,0);else(q)("\076u\114\097\112\104\032\083cr\105pt\058"..(Qc[EM-0x001]or"(internal)")..": "..u(QM),0X00);end;else(q)(QM,0);end;else do if QM then do if oM~=1 then return wM[bM](E(wM,bM+0x1,NM));else return wM[bM]();end;end;elseif bM then do return E(wM,bM,oM);end;end;end;end;end;end;end;end;end;end;end;else if Sc<0xcD then if Sc<0xC5 then if not(Sc>=193)then do if Sc>=0Xbf then do if Sc~=0XC0 then ic=function(...)local WS={};local XS=(0);local gS=(k and k()or _ENV);local YS,DS=q3(...);local jS={[1]=WS,[2]=Vc};do YS=YS-0X0001;end;for tZ=0X0,YS do if not(ac>tZ)then break;else WS[tZ]=DS[tZ+0x1];end;end;local dS=(gS==H and fc or gS);if not nc then DS=nil;elseif not(Ac)then else do WS[ac]={n=YS>=ac and YS-ac+0X1 or 0X0,E(DS,ac+1,YS+0x00001)};end;end;local FS=(1);do if dS==gS then else if not(s)then _ENV=dS;else(s)(ic,dS);end;end;end;local bS,ZS,nS,RS=c(function()while true do local dr=bc[FS];local tr=dr[0X3];FS=FS+1;do if not(tr<8)then if not(tr>=12)then if tr>=0XA then if tr==0XB then(WS)[dr[2]]=o(WS[dr[0X5]],WS[dr[0X04]]);else do WS[dr[0X2]]=dS[dr[6]];end;end;else if tr==0x9 then jS[dr[0X5]]=WS[dr[0x2]];else FS=dr[5];end;end;else if not(tr<0x0e)then if tr==0X000F then do repeat local eN,MN=Lc,WS;if#eN>0X0 then local rW=({});for Fz,Az in M,eN do for Rj,Mj in M,Az do if not(Mj[0X1]==MN and Mj[0x2]>=0)then else local P9=(Mj[2]);if not(not rW[P9])then else rW[P9]={MN[P9]};end;Mj[0x1]=rW[P9];do Mj[0X2]=1;end;end;end;end;end;until true;end;do return;end;else do for wg=dr[2],dr[0X05]do WS[wg]=nil;end;end;end;else if tr==13 then else local TG=(WS[dr[5]]);local vG=dr[2];(WS)[vG+1]=TG;(WS)[vG]=TG[dr[1]];end;end;end;else if tr>=0x4 then if not(tr<0x00006)then if tr~=7 then repeat local wo,lo,Xo=Lc,WS,dr[2];if not(#wo>0X0)then else local hr=({});do for fv,ov in M,wo do for Lj,Jj in M,ov do if Jj[1]==lo and Jj[2]>=Xo then local aW=(Jj[2]);if not hr[aW]then(hr)[aW]={lo[aW]};end;Jj[0X1]=hr[aW];(Jj)[0X00002]=0X0001;end;end;end;end;end;until true;else WS[dr[0X00002]]={E({},1,dr[0x5])};end;else if tr==0X005 then(WS)[dr[0X2]]=WS[dr[5]]~=WS[dr[4]];else local j7,W7=Uc[dr[0X5]],nil;local y7=(j7[5]);local f7=#y7;if f7>0 then W7={};do for a2=1,f7 do local s2=y7[a2];if s2[1]==0 then W7[a2-0x0001]={WS,s2[2]};else W7[a2-1]=jc[s2[0X2]];end;end;end;(S)(Lc,W7);end;WS[dr[0x00002]]=e3(j7,W7,dS);end;end;else if not(tr<2)then if tr==3 then WS[0X0]=dS[dr[6]];FS=FS+0x1;FS=FS+0x001;dr=bc[FS];do FS=FS+1;end;(WS)[0]=WS[0X0][dr[0X1]];dr=bc[FS];FS=FS+1;if not(not WS[0])then else FS=dr[5];end;else repeat local CX,BX=Lc,(WS);if not(#CX>0)then else local c0=({});for CA,rA in M,CX do for p5,s5 in M,rA do do if s5[0X0001]==BX and s5[0X002]>=0 then local yF=s5[2];if not(not c0[yF])then else(c0)[yF]={BX[yF]};end;do(s5)[0X1]=c0[yF];end;(s5)[0x2]=1;end;end;end;end;end;until true;local qF=(dr[2]);return false,qF,qF;end;else if tr==0X00001 then local eN=(jc[0X00]);do(WS)[0X0]=eN[1][eN[2]];end;do FS=FS+1;end;FS=FS+1;dr=bc[FS];local lN=WS[0];FS=FS+0X1;local SN=0;(WS)[SN+0x001]=lN;(WS)[SN]=lN[dr[1]];FS=FS+0X1;do SN=0;end;WS[SN]=WS[SN](WS[SN+1]);XS=SN;FS=FS+0x1;do FS=FS+1;end;dr=bc[FS];FS=FS+0X1;FS=dr[0X05];else WS[dr[0X2]]=dr[0X6];end;end;end;end;end;end;end);if bS then if ZS then do if RS~=0X1 then return WS[nS](E(WS,nS+0X00001,XS));else return WS[nS]();end;end;elseif not(nS)then else return E(WS,nS,RS);end;else if V(ZS)=="string"then do if r(ZS,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if r(ZS,"^.-\058%d+\058\032")then(q)('Lu\114\097\112\104\032\083c\114i\112\116:'..(Qc[FS-1]or"(internal)")..': '..u(ZS),0x0);else q(ZS,0);end;else q(ZS,0);end;end;end;else do ic=function(...)local m2=(0x0001);local T2={};local e2=((k and k()or _ENV));local d2,g2=q3(...);local y2,M2={[2]=Vc,[1]=T2},(0);local P2=(e2==H and fc or e2);do d2=d2-1;end;for kA=0X00000,d2 do if not(ac>kA)then break;else T2[kA]=g2[kA+0X1];end;end;if not nc then do g2=nil;end;elseif Ac then do(T2)[ac]={n=d2>=ac and d2-ac+1 or 0,E(g2,ac+0x1,d2+1)};end;end;if P2~=e2 then if not(s)then _ENV=P2;else(s)(ic,P2);end;end;local O2,n2,c2,C2=c(function()do while true do local vF=bc[m2];local sF=vF[3];m2=m2+1;if not(sF>=6)then do if not(sF>=0x0003)then if sF>=1 then if sF~=2 then local wu=Uc[vF[0x05]];local Yu,bu=wu[0X5],nil;local Qu=#Yu;if not(Qu>0)then else bu={};for jy=0x1,Qu do local Zy=(Yu[jy]);if Zy[0x1]==0 then bu[jy-0X00001]={T2,Zy[2]};else bu[jy-1]=jc[Zy[0X02]];end;end;S(Lc,bu);end;T2[vF[0X2]]=e3(wu,bu,P2);else T2[vF[2]]=T2[vF[5]]<T2[vF[0X4]];end;else(T2)[vF[0X2]]=vF[0x6];end;else if not(sF<0x4)then if sF==0X5 then else T2[vF[2]]={E({},0X001,vF[5])};end;else T2[vF[0X02]]=T2[vF[5]]>T2[vF[4]];end;end;end;else if not(sF>=9)then do if sF<7 then do T2[0X0]=P2[vF[6]];end;m2=m2+1;do m2=m2+0X0001;end;do vF=bc[m2];end;m2=m2+1;T2[0]=T2[0X0][vF[0X01]];do m2=m2+1;end;do m2=m2+0X1;end;vF=bc[m2];local KF=0;do m2=m2+0X1;end;local AF=nil;local kF=Uc[vF[5]];local oF=(kF[5]);local tF=(#oF);do if tF>0x000 then do AF={};end;for H4=1,tF do local V4=oF[H4];if V4[0X1]==0 then AF[H4-1]={T2,V4[2]};else AF[H4-0x1]=jc[V4[0x02]];end;end;(S)(Lc,AF);end;end;(T2)[0X1]=e3(kF,AF,P2);m2=m2+1;T2[KF](T2[KF+0X1]);M2=KF-1;m2=m2+0X01;do repeat local Dy,Iy=Lc,(T2);if#Dy>0x0 then local am=({});for i6,B6 in M,Dy do for uq,Cq in M,B6 do if not(Cq[1]==Iy and Cq[0X00002]>=0X0)then else local j4=Cq[0X2];if not am[j4]then am[j4]={Iy[j4]};end;Cq[0X1]=am[j4];do(Cq)[0X02]=0X1;end;end;end;end;end;until true;end;return;else if sF==8 then T2[vF[2]]=P2[vF[0X6]];else do m2=vF[0X05];end;end;end;end;else if sF<0Xa then(T2)[vF[0X2]]=#T2[vF[5]];else if sF~=0xB then(y2)[vF[5]]=T2[vF[0X2]];else local Gh=(vF[2]);local Ah,Hh,Lh=T2[Gh],T2[Gh+0X1],T2[Gh+2];(T2)[Gh]=P(function()do for xf=Ah,Hh,Lh do(C)(true,xf);end;end;end);m2=vF[5];end;end;end;end;end;end;end);do if O2 then if n2 then if C2~=0X00001 then return T2[c2](E(T2,c2+1,M2));else return T2[c2]();end;elseif not(c2)then else return E(T2,c2,C2);end;else if V(n2)~="string"then q(n2,0x0);else if not(r(n2,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if r(n2,"^.-:%d+: ")then q('Lu\114a\112\104\032Scr\105p\116\058'..(Qc[m2-0X1]or"(internal)")..": "..u(n2),0);else q(n2,0);end;end;end;end;end;end;end;end;else if Sc~=0Xbe then do ic=function(...)local wL={};local AL=0X00001;local DL=(k and k()or _ENV);local yL=({[2]=Vc,[1]=wL});local PL,TL=q3(...);local OL=0;PL=PL-1;local XL=((DL==H and fc or DL));do for vZ=0,PL do if ac>vZ then do wL[vZ]=TL[vZ+0X1];end;else do break;end;end;end;end;do if not nc then TL=nil;elseif Ac then do(wL)[ac]={n=PL>=ac and PL-ac+1 or 0X0,E(TL,ac+1,PL+0X1)};end;end;end;if XL==DL then else if s then s(ic,XL);else do _ENV=XL;end;end;end;local IL,mL,oL,CL=c(function()do while true do local Kx=(bc[AL]);local Ix=(Kx[0X03]);AL=AL+1;if not(Ix<7)then do if not(Ix>=11)then if not(Ix<9)then if Ix~=0XA then do wL[Kx[2]]=yL[Kx[0X5]];end;else(wL)[Kx[2]]=XL[Kx[6]];end;else if Ix~=8 then for nX=Kx[2],Kx[5]do do wL[nX]=nil;end;end;else wL[Kx[2]]={E({},1,Kx[5])};end;end;else do if not(Ix<0X0D)then if Ix~=0XE then local Yv=(Uc[Kx[0X00005]]);local Xv=Yv[0X0005];local Av=nil;local tv=(#Xv);if tv>0 then Av={};do for kC=0X1,tv do local XC=(Xv[kC]);if XC[0X00001]==0 then Av[kC-1]={wL,XC[0X002]};else(Av)[kC-0X01]=jc[XC[0X002]];end;end;end;S(Lc,Av);end;wL[Kx[2]]=e3(Yv,Av,XL);else do wL[Kx[2]]=wL[Kx[0x005]]>wL[Kx[4]];end;end;else do if Ix~=0XC then wL[Kx[0X2]]=Kx[6];else end;end;end;end;end;end;else do if not(Ix>=3)then do if Ix>=0X01 then if Ix==2 then AL=Kx[5];else do if wL[Kx[0X5]]<=wL[Kx[4]]then do AL=Kx[0X2];end;end;end;end;else local Oi=Kx[5];local Xi=wL[Oi];for IR=Oi+0X1,Kx[4]do do Xi=Xi..wL[IR];end;end;do wL[Kx[2]]=Xi;end;end;end;else if Ix<0X5 then if Ix==0X4 then wL[Kx[2]]=o(wL[Kx[5]],wL[Kx[0X00004]]);else local FT=(wL[Kx[0X5]]/wL[Kx[0X4]]);(wL)[Kx[0x2]]=FT-FT%0X0001;end;else if Ix~=0x6 then wL[Kx[2]]=wL[Kx[0X05]]<=wL[Kx[0X4]];else(wL)[1]=XL[Kx[6]];local Mm=wL[1];Kx=bc[AL];AL=AL+0x01;local vm=(0X001);do wL[vm+1]=Mm;end;(wL)[vm]=Mm[Kx[1]];Kx=bc[AL];AL=AL+1;wL[0X3]=Kx[0X6];AL=AL+0X1;vm=0x01;do wL[vm]=wL[vm](wL[vm+0X001],wL[vm+0X02]);end;OL=vm;do AL=AL+0X1;end;AL=AL+0X1;Kx=bc[AL];AL=AL+1;(wL)[1]=wL[0X0001][Kx[1]];do Kx=bc[AL];end;AL=AL+1;wL[0X1]=wL[1][Kx[1]];AL=AL+0X1;AL=AL+0x001;Kx=bc[AL];do AL=AL+1;end;vm=0X1;Mm=wL[0X1];(wL)[vm+1]=Mm;(wL)[vm]=Mm[Kx[1]];AL=AL+0X01;(wL)[0X3]=wL[0x000];AL=AL+1;vm=0X1;wL[vm](wL[vm+1],wL[vm+2]);OL=vm-0X01;do AL=AL+1;end;repeat local Wf,Of=Lc,(wL);if#Wf>0X000 then local dM=({});for hY,JY in M,Wf do for EX,YX in M,JY do if YX[1]==Of and YX[2]>=0X000 then local uK=(YX[0X002]);do if not(not dM[uK])then else dM[uK]={Of[uK]};end;end;YX[0X001]=dM[uK];YX[0X2]=1;end;end;end;end;until true;return;end;end;end;end;end;end;end;end);if IL then if mL then if CL==0X1 then return wL[oL]();else do return wL[oL](E(wL,oL+1,OL));end;end;elseif oL then return E(wL,oL,CL);end;else if V(mL)~="string"then q(mL,0);else if r(mL,"\097tte\109\112\116 to\032\121\105e\108d a\099r\111ss\032m\101\116am\101tho\100\047\067\037\045c\097\108\108\032b\111u\110d\097\114\121")then do return coroutine.yield();end;end;if not(r(mL,'\094.-:%d+:\032'))then(q)(mL,0X0000);else(q)("Luraph Script:"..(Qc[AL-0x01]or"(inte\114\110\097\108)")..": "..u(mL),0x0);end;end;end;end;end;else ic=function(...)local WG=(1);local VG=({});local EG=(k and k()or _ENV);local kG=(0);local XG=({[2]=Vc,[1]=VG});local AG,IG=q3(...);AG=AG-0X1;for cQ=0X0,AG do if ac>cQ then VG[cQ]=IG[cQ+0x001];else break;end;end;local jG=((EG==H and fc or EG));if not nc then do IG=nil;end;elseif not(Ac)then else(VG)[ac]={n=AG>=ac and AG-ac+1 or 0X000,E(IG,ac+1,AG+0X1)};end;if jG==EG then else if s then s(ic,jG);else _ENV=jG;end;end;local nG,QG,NG,ZG=c(function()while true do local px=bc[WG];local Bx=(px[0x3]);WG=WG+0X1;if not(Bx>=24)then do if Bx>=0XC then if Bx>=18 then do if not(Bx<21)then if Bx<22 then local wW=px[0X00005];local UW=(VG[wW]);for ik=wW+0x0001,px[4]do UW=UW..VG[ik];end;do(VG)[px[2]]=UW;end;else if Bx==23 then do VG[0X003]=jG[px[0x6]];end;px=bc[WG];local XS=VG[0X3];WG=WG+1;local qS=(0X3);do(VG)[qS+1]=XS;end;(VG)[qS]=XS[px[1]];px=bc[WG];WG=WG+1;(VG)[5]=px[6];WG=WG+0X1;qS=0x3;VG[qS]=VG[qS](VG[qS+0X1],VG[qS+0x002]);kG=qS;do WG=WG+1;end;WG=WG+0X1;px=bc[WG];WG=WG+0X1;if not VG[3]then do WG=px[0X5];end;end;else do(VG)[0]=jG[px[0X6]];end;px=bc[WG];WG=WG+0X1;VG[0X0]=VG[0][px[1]];px=bc[WG];WG=WG+0x1;(VG)[0]=VG[0][px[1]];px=bc[WG];WG=WG+0X00001;do VG[1]=px[0x6];end;end;end;else if Bx>=19 then if Bx~=0x14 then VG[3]=jG[px[0X6]];WG=WG+0X1;WG=WG+1;do px=bc[WG];end;WG=WG+0X1;(VG)[0X3]=VG[3][px[0X1]];do WG=WG+1;end;WG=WG+0X1;px=bc[WG];WG=WG+0x01;do if not(VG[0x03])then else WG=px[5];end;end;else VG[0x00003]=jG[px[0X6]];px=bc[WG];WG=WG+1;(VG)[4]=px[6];px=bc[WG];WG=WG+0X0001;VG[5]=px[0x6];do WG=WG+1;end;local c8=(3);VG[c8](VG[c8+1],VG[c8+0X2]);kG=c8-0x0001;do px=bc[WG];end;do WG=WG+1;end;do WG=px[0X5];end;end;else VG[3]=jG[px[0X6]];WG=WG+1;WG=WG+0X001;px=bc[WG];do WG=WG+0X1;end;(VG)[3]=VG[3][px[1]];WG=WG+0X01;WG=WG+1;px=bc[WG];WG=WG+1;do(VG)[3]=VG[3][px[0x1]];end;WG=WG+0x1;WG=WG+0X01;px=bc[WG];do WG=WG+1;end;if not(not(px[0X006]<VG[3]))then else WG=px[2];end;end;end;end;else if not(Bx<15)then do if Bx>=16 then do if Bx~=17 then(VG)[3]=jG[px[6]];px=bc[WG];WG=WG+1;(VG)[0X3]=VG[3][px[1]];do px=bc[WG];end;do WG=WG+0x01;end;do if VG[3]then WG=px[0X0005];end;end;else end;end;else if not VG[px[0X2]]then do WG=px[5];end;end;end;end;else if Bx<0XD then do(VG)[3]=jG[px[6]];end;WG=WG+1;WG=WG+0x0001;px=bc[WG];WG=WG+0x01;(VG)[3]=VG[3][px[1]];do WG=WG+1;end;do WG=WG+1;end;px=bc[WG];WG=WG+1;if not(VG[3])then else WG=px[0x5];end;else do if Bx~=14 then(VG)[0X0002]=jG[px[6]];WG=WG+0x1;do WG=WG+1;end;do px=bc[WG];end;WG=WG+0X1;do VG[0X2]=VG[2][px[1]];end;px=bc[WG];WG=WG+1;if not(VG[0x2])then else WG=px[5];end;else local FK=(px[2]);local jK,BK,fK=VG[FK]();do if jK then(VG)[FK+0X0001]=BK;(VG)[FK+0X2]=fK;WG=px[5];end;end;end;end;end;end;end;else if not(Bx<6)then if not(Bx>=0X9)then if Bx<7 then do(VG)[0X3]=jG[px[6]];end;px=bc[WG];WG=WG+1;VG[0X00003]=VG[3][px[0X1]];px=bc[WG];local dc=0X0005;WG=WG+1;do VG[4]=jG[px[6]];end;px=bc[WG];WG=WG+0X1;do(VG)[5]=jG[px[0x6]];end;local tc=0X0;WG=WG+1;VG[0X006]=VG[2];WG=WG+0x00001;local Fc=0X00002;do if Fc~=0x0 then kG=dc+Fc-0x00001;end;end;local Gc,Ec=nil,nil;do if Fc==1 then do Gc,Ec=q3(VG[dc]());end;else Gc,Ec=q3(VG[dc](E(VG,dc+0X1,kG)));end;end;do if tc~=1 then if tc==0X0 then do Gc=Gc+dc-1;end;kG=Gc;else Gc=dc+tc-0X2;kG=Gc+1;end;local Zg=0;for IC=dc,Gc do Zg=Zg+1;VG[IC]=Ec[Zg];end;else do kG=dc-1;end;end;end;WG=WG+1;WG=WG+0x1;WG=WG+0X1;dc=0X3;(VG)[dc]=VG[dc](E(VG,dc+0X1,kG));do kG=dc;end;WG=WG+0X001;WG=WG+0X1;px=bc[WG];WG=WG+1;if not(not VG[0X3])then else WG=px[0X5];end;else if Bx==0X008 then do(VG)[0X002]=jG[px[6]];end;px=bc[WG];WG=WG+0X1;do VG[0X2]=VG[2][px[1]];end;px=bc[WG];WG=WG+1;local Qr,wr=VG[2],(2);VG[wr+1]=Qr;(VG)[wr]=Qr[px[1]];px=bc[WG];WG=WG+0X01;(VG)[4]=px[6];WG=WG+0X1;wr=0X2;VG[wr]=VG[wr](VG[wr+1],VG[wr+2]);kG=wr;do WG=WG+1;end;WG=WG+1;do px=bc[WG];end;WG=WG+0X1;if not VG[2]then WG=px[5];end;else VG[0X03]=jG[px[0X006]];WG=WG+0x1;do WG=WG+0x1;end;px=bc[WG];WG=WG+1;(VG)[0X0003]=VG[3][px[1]];WG=WG+1;WG=WG+0X1;px=bc[WG];WG=WG+1;do if not(VG[3])then else WG=px[0X5];end;end;end;end;else if not(Bx<0X000A)then do if Bx~=0xb then VG[0X2]=px[6];WG=WG+0X001;(VG)[1]=VG[0X002];px=bc[WG];WG=WG+0x01;WG=px[0x05];else local Xv,ov=Uc[px[0X5]],nil;local nv=Xv[5];local kv=(#nv);if kv>0X00000 then do ov={};end;do for qR=0x1,kv do local TR=nv[qR];if TR[1]==0 then(ov)[qR-1]={VG,TR[0x0002]};else ov[qR-0X00001]=jc[TR[0X2]];end;end;end;(S)(Lc,ov);end;VG[px[0X02]]=e3(Xv,ov,jG);end;end;else VG[2]=jG[px[0x6]];WG=WG+1;do kG=2;end;VG[kG]=VG[kG]();do px=bc[WG];end;WG=WG+0X1;do if not VG[2]then WG=px[0X5];end;end;end;end;else if Bx<0X003 then do if not(Bx<1)then if Bx==0X2 then VG[0X003]=jG[px[6]];px=bc[WG];local M4=(0x003);WG=WG+0x1;VG[4]=px[0x6];px=bc[WG];WG=WG+1;VG[5]=px[6];WG=WG+1;VG[M4](VG[M4+1],VG[M4+0x2]);kG=M4-0X01;px=bc[WG];do WG=WG+0x1;end;WG=px[0x5];else(VG)[px[2]]=jG[px[6]];end;else do WG=px[0x5];end;end;end;else if not(Bx>=4)then local zm=(px[2]);local Vm=(px[5]);if Vm==0 then else do kG=zm+Vm-1;end;end;local cm=(px[0X4]);local Hm,Am=nil,nil;if Vm~=0x0001 then do Hm,Am=q3(VG[zm](E(VG,zm+1,kG)));end;else Hm,Am=q3(VG[zm]());end;do if cm~=1 then if cm==0x0 then do Hm=Hm+zm-0x001;end;kG=Hm;else Hm=zm+cm-2;kG=Hm+1;end;local l6=0x0000;for x6=zm,Hm do do l6=l6+0X1;end;VG[x6]=Am[l6];end;else kG=zm-1;end;end;else if Bx~=0X5 then(VG)[3]=jG[px[0X00006]];WG=WG+1;WG=WG+1;do px=bc[WG];end;WG=WG+1;do VG[3]=VG[3][px[1]];end;WG=WG+0X00001;WG=WG+0X0001;do px=bc[WG];end;WG=WG+0X1;if VG[0x3]then WG=px[5];end;else(VG)[2]={};px=bc[WG];WG=WG+1;(jG)[px[0X6]]=VG[0X2];px=bc[WG];WG=WG+0X1;VG[0X00002]=jG[px[6]];do WG=WG+0X1;end;do WG=WG+1;end;px=bc[WG];do WG=WG+0X00001;end;do if not VG[2]then WG=px[5];end;end;end;end;end;end;end;end;else if Bx>=0X24 then if Bx<0x0002a then if Bx>=0X027 then do if Bx>=0X0028 then if Bx~=0X29 then repeat local Ai,Oi=Lc,VG;if#Ai>0 then local Hs=({});for Oh,uh in M,Ai do for R8,e8 in M,uh do do if e8[1]==Oi and e8[2]>=0X0 then local SS=e8[0X0002];if not(not Hs[SS])then else Hs[SS]={Oi[SS]};end;do(e8)[0X01]=Hs[SS];end;(e8)[0X2]=0X001;end;end;end;end;end;until true;return;else VG[2]=VG[0x1];px=bc[WG];WG=WG+1;do(VG)[0X1]=VG[0X002]+px[1];end;px=bc[WG];WG=WG+1;WG=px[5];end;else if not(not(px[6]<VG[px[0X4]]))then else WG=px[2];end;end;end;else if Bx<0X25 then do for pp=px[0X2],px[5]do(VG)[pp]=nil;end;end;else do if Bx==38 then do(VG)[3]=jG[px[6]];end;px=bc[WG];WG=WG+1;VG[3]=VG[3][px[1]];px=bc[WG];do WG=WG+1;end;if VG[3]then WG=px[0X0005];end;else do if not(VG[px[0X05]]<VG[px[0x4]])then WG=px[2];end;end;end;end;end;end;else if Bx>=0X2D then if not(Bx<0X2E)then if Bx==47 then do VG[px[0X02]]=px[0X6];end;else(VG)[0X0002]=jG[px[6]];do px=bc[WG];end;WG=WG+0X1;(VG)[2]=VG[2][px[1]];px=bc[WG];do WG=WG+1;end;VG[2]=VG[0X002][px[1]];px=bc[WG];WG=WG+0X001;do if VG[0X0]==VG[0x2]then else WG=px[0X0002];end;end;end;else do jG[px[6]]=VG[px[0X0002]];end;end;else if Bx>=43 then if Bx==44 then(VG)[0X03]=jG[px[6]];px=bc[WG];WG=WG+1;(VG)[0X3]=VG[0X03][px[1]];px=bc[WG];WG=WG+0X0001;if not(not VG[0X3])then else do WG=px[5];end;end;else VG[0X3]=jG[px[6]];WG=WG+1;WG=WG+0x1;px=bc[WG];WG=WG+1;do VG[0X003]=VG[0X0003][px[0x01]];end;px=bc[WG];do WG=WG+0X1;end;do if VG[0X3]then do WG=px[5];end;end;end;end;else VG[px[2]]={E({},1,px[5])};end;end;end;else if not(Bx>=30)then if Bx<27 then do if not(Bx<0X19)then if Bx~=26 then(VG)[0X3]=jG[px[6]];WG=WG+1;WG=WG+0x0001;px=bc[WG];do WG=WG+0X1;end;(VG)[3]=VG[3][px[1]];WG=WG+1;WG=WG+1;do px=bc[WG];end;WG=WG+1;if VG[3]then do WG=px[0x0005];end;end;else(VG)[2]=jG[px[0X6]];local a6=(0X2);WG=WG+1;WG=WG+0x1;px=bc[WG];do WG=WG+1;end;do(VG)[0X02]=VG[0X2][px[0x001]];end;px=bc[WG];do WG=WG+1;end;do(VG)[0x3]=px[6];end;do WG=WG+0X001;end;VG[a6]=VG[a6](VG[a6+1]);do kG=a6;end;px=bc[WG];WG=WG+0X1;if not VG[0X2]then WG=px[5];end;end;else do(VG)[0X2]=jG[px[0X00006]];end;WG=WG+1;WG=WG+1;px=bc[WG];do WG=WG+1;end;VG[3]=px[0X006];WG=WG+0X001;local iZ=(0X2);VG[iZ](VG[iZ+1]);kG=iZ-1;px=bc[WG];do WG=WG+1;end;WG=px[5];end;end;else if not(Bx<0X1C)then if Bx==0X1d then(VG)[0x5]=jG[px[0X0006]];local yj=(0X5);do px=bc[WG];end;do WG=WG+0X1;end;VG[5]=VG[0X5][px[1]];px=bc[WG];WG=WG+0X00001;VG[6]=jG[px[0X06]];WG=WG+0x001;VG[7]=VG[0X4];WG=WG+0X1;VG[yj](VG[yj+0x1],VG[yj+0X02]);do kG=yj-0x1;end;WG=WG+0X1;WG=WG+1;do px=bc[WG];end;WG=WG+0X1;WG=px[5];else VG[0x002]=px[0X6];do WG=WG+0x01;end;VG[1]=VG[0x2];px=bc[WG];WG=WG+0X1;(VG)[0x002]=jG[px[0X6]];px=bc[WG];do WG=WG+1;end;do(VG)[2]=VG[0X2][px[1]];end;WG=WG+0X01;do WG=WG+0X00001;end;do px=bc[WG];end;WG=WG+0X1;(VG)[0X002]=VG[2][px[1]];WG=WG+0X1;(VG)[0]=VG[0X00002];px=bc[WG];WG=WG+0X0001;WG=px[0X5];end;else do(VG[px[2]])[VG[px[5]]]=VG[px[0X4]];end;end;end;else if Bx<0x21 then if Bx<31 then(VG)[0x3]=jG[px[6]];do px=bc[WG];end;WG=WG+0X1;VG[0X3]=VG[0X3][px[0X1]];px=bc[WG];WG=WG+1;if VG[0X3]then do WG=px[0X00005];end;end;else do if Bx~=0X20 then VG[2]=jG[px[0X6]];px=bc[WG];WG=WG+0X00001;do(VG)[0x0002]=VG[2][px[0X1]];end;do px=bc[WG];end;do WG=WG+0X0001;end;(VG)[0X02]=VG[2][px[0X01]];do px=bc[WG];end;WG=WG+0x1;(VG)[2]=VG[2][px[0x00001]];do px=bc[WG];end;WG=WG+0X1;do(VG)[0X3]=jG[px[0X6]];end;px=bc[WG];WG=WG+0X01;(VG)[3]=VG[3][px[1]];WG=WG+1;WG=WG+0x1;px=bc[WG];WG=WG+1;if not VG[3]then WG=px[0X5];end;else VG[2]=jG[px[0x6]];do WG=WG+0X0001;end;local lz=(0x03);WG=WG+1;do px=bc[WG];end;do WG=WG+0X1;end;VG[3]=jG[px[0X6]];local yz=(2);WG=WG+1;WG=WG+1;px=bc[WG];WG=WG+0X1;local dz=(VG[0x3]);(VG)[lz+1]=dz;(VG)[lz]=dz[px[1]];do WG=WG+0X1;end;lz=3;local Jz=0;if yz~=0X00 then kG=lz+yz-1;end;local jz,nz=nil,nil;if yz~=0X00001 then jz,nz=q3(VG[lz](E(VG,lz+0X00001,kG)));else jz,nz=q3(VG[lz]());end;if Jz==0X1 then kG=lz-1;else do if Jz==0X000 then do jz=jz+lz-1;end;kG=jz;else jz=lz+Jz-0X00002;do kG=jz+0X00001;end;end;end;local z9=(0);for mW=lz,jz do do z9=z9+1;end;do(VG)[mW]=nz[z9];end;end;end;WG=WG+0x00001;WG=WG+0X1;WG=WG+1;do lz=2;end;yz=0;Jz=0X00004;if yz==0X0 then else kG=lz+yz-0x01;end;jz,nz=nil;if yz==0X1 then jz,nz=q3(VG[lz]());else jz,nz=q3(VG[lz](E(VG,lz+0X1,kG)));end;if Jz==1 then kG=lz-1;else do if Jz~=0x0 then jz=lz+Jz-2;kG=jz+1;else jz=jz+lz-1;do kG=jz;end;end;end;local kP=0;for oE=lz,jz do kP=kP+1;VG[oE]=nz[kP];end;end;WG=WG+1;do WG=WG+1;end;px=bc[WG];WG=WG+1;lz=0X2;local Hz=(P(function(...)(C)();for hR,YR in...do C(true,hR,YR);end;end));Hz(VG[lz],VG[lz+1],VG[lz+0X02]);kG=lz;VG[lz]=Hz;do WG=px[0x5];end;end;end;end;else do if Bx>=0X22 then if Bx~=0x023 then do if VG[px[0x5]]==px[1]then do WG=px[2];end;end;end;else local dM,CM=5,(VG[0X0004]);(VG)[dM+0X0001]=CM;do VG[dM]=CM[px[1]];end;do px=bc[WG];end;do WG=WG+0X1;end;(VG)[7]=px[0X006];WG=WG+0x001;dM=5;VG[dM]=VG[dM](VG[dM+0X01],VG[dM+2]);kG=dM;px=bc[WG];do WG=WG+0X1;end;if not(not VG[5])then else WG=px[5];end;end;else do(VG)[0X3]=jG[px[0X6]];end;WG=WG+0x1;WG=WG+1;px=bc[WG];WG=WG+0x1;VG[3]=VG[0X003][px[0X00001]];px=bc[WG];WG=WG+0X001;if not(VG[0x3])then else WG=px[5];end;end;end;end;end;end;end;end;end);do if nG then if QG then do if ZG==0X001 then do return VG[NG]();end;else return VG[NG](E(VG,NG+0X00001,kG));end;end;elseif not(NG)then else return E(VG,NG,ZG);end;else if V(QG)=="string"then if not(r(QG,'atte\109\112\116\032to \121ield\032\097cr\111\115s\032\109\101ta\109et\104\111d/C\037\045ca\108\108\032\098o\117n\100\097r\121'))then else return coroutine.yield();end;do if not(r(QG,'\094\046\045:\037\100+:\032'))then(q)(QG,0x0);else(q)('Lu\114\097\112h\032Sc\114ip\116\058'..(Qc[WG-0X00001]or"(internal)")..': '..u(QG),0x00);end;end;else q(QG,0x0);end;end;end;end;end;end;end;else if not(Sc>=195)then if Sc==194 then ic=function(...)local N9={};local D9=(0X1);local m9=((k and k()or _ENV));local A9={[1]=N9,[2]=Vc};local V9,B9=q3(...);do V9=V9-1;end;for hx=0X0,V9 do do if ac>hx then do(N9)[hx]=B9[hx+1];end;else do break;end;end;end;end;local g9=(0);local F9=((m9==H and fc or m9));if not nc then B9=nil;elseif Ac then N9[ac]={n=V9>=ac and V9-ac+0x1 or 0,E(B9,ac+1,V9+0X1)};end;if F9~=m9 then if s then(s)(ic,F9);else _ENV=F9;end;end;local X9,o9,v9,W9=c(function()while true do local lG=bc[D9];local hG=(lG[3]);do D9=D9+1;end;if not(hG>=10)then do if hG>=0X05 then if hG<0X007 then do if hG~=6 then N9[lG[0X2]]=v(N9[lG[0X5]],N9[lG[0X04]]);else local pK=(jc[0]);N9[0X1]=pK[0X1][pK[2]];local qK=0X1;D9=D9+0X1;D9=D9+0X001;do lG=bc[D9];end;D9=D9+0X1;N9[0X001]=N9[1][lG[0x1]];D9=D9+1;N9[0x2]=N9[0X0];D9=D9+1;pK=jc[1];N9[3]=pK[1][pK[2]];D9=D9+0x1;D9=D9+0X001;do D9=D9+0X0001;end;N9[qK](N9[qK+0X1],N9[qK+2]);do g9=qK-0X00001;end;D9=D9+0x1;D9=D9+1;lG=bc[D9];D9=D9+0x1;D9=lG[0x005];end;end;else if not(hG>=0x008)then do(N9)[lG[2]]=lG[6];end;else if hG~=0X9 then for vR=lG[2],lG[0X0005]do(N9)[vR]=nil;end;else if N9[lG[0X5]]<=N9[lG[4]]then D9=lG[2];end;end;end;end;else if hG<2 then do if hG~=1 then N9[0]=F9[lG[0X6]];local Q7=(0);do lG=bc[D9];end;D9=D9+0X1;(N9)[1]=lG[0X06];D9=D9+0X1;do N9[Q7]=N9[Q7](N9[Q7+0X001]);end;local Z7=jc[0];do g9=Q7;end;do D9=D9+0X01;end;(N9)[1]=Z7[0x1][Z7[2]];lG=bc[D9];D9=D9+0X1;(N9)[1]=N9[1][lG[0X001]];D9=D9+1;N9[2]=N9[0X0];D9=D9+1;do Q7=0x1;end;(N9)[Q7]=N9[Q7](N9[Q7+0X1]);g9=Q7;do lG=bc[D9];end;D9=D9+0X001;if not N9[1]then D9=lG[0X00005];end;else do repeat local bM,FM,LM=Lc,N9,lG[0x2];if#bM>0 then local eN=({});for pI,xI in M,bM do for uG,KG in M,xI do if KG[0x0001]==FM and KG[2]>=LM then local UA=(KG[0x2]);do if not(not eN[UA])then else do(eN)[UA]={FM[UA]};end;end;end;KG[1]=eN[UA];KG[0X002]=1;end;end;end;end;until true;end;end;end;else if not(hG<3)then if hG==4 then do(N9)[lG[0X2]]=-N9[lG[0X00005]];end;else N9[lG[0X00002]]=F9[lG[6]];end;else D9=lG[5];end;end;end;end;else if hG>=15 then if not(hG<0X0012)then do if not(hG>=0x13)then local oy=lG[0X2];for Rx=oy,oy+(lG[0X5]-1)do N9[Rx]=B9[ac+(Rx-oy)+0x1];end;else do if hG==20 then repeat local ZY,pY=Lc,(N9);if#ZY>0 then local Q7={};for XK,UK in M,ZY do for eo,Zo in M,UK do if Zo[0x01]==pY and Zo[0x2]>=0 then local Bc=Zo[0X00002];if not(not Q7[Bc])then else Q7[Bc]={pY[Bc]};end;(Zo)[0X1]=Q7[Bc];do(Zo)[2]=1;end;end;end;end;end;until true;return;else local mk=nil;local Yk=(Uc[lG[0X05]]);local Sk=(Yk[0X00005]);local Ek=#Sk;if not(Ek>0X0000)then else mk={};for OT=0x1,Ek do local sT=(Sk[OT]);if sT[0x1]==0X0 then(mk)[OT-0X1]={N9,sT[0X2]};else do mk[OT-1]=jc[sT[2]];end;end;end;(S)(Lc,mk);end;(N9)[lG[2]]=e3(Yk,mk,F9);end;end;end;end;else if not(hG<16)then if hG~=0X11 then else N9[lG[2]]=T(N9[lG[5]],N9[lG[0X4]]);end;else N9[lG[2]]={E({},0X01,lG[0x5])};end;end;else if not(hG<12)then if not(hG>=13)then local Pm=lG[2];local xm,rm=N9[Pm],((lG[4]-0x1)*0x00032);do for nf=1,lG[5]do xm[rm+nf]=N9[Pm+nf];end;end;else if hG~=14 then(N9[lG[0X0002]])[N9[lG[0x5]]]=N9[lG[4]];else do N9[lG[0X2]]=true;end;end;end;else if hG==0Xb then if not(not N9[lG[2]])then else D9=lG[0X5];end;else(N9)[0X001]=F9[lG[6]];lG=bc[D9];D9=D9+0X1;(N9)[2]=lG[6];do D9=D9+1;end;local t8=(0X1);(N9[t8])(N9[t8+0X1]);g9=t8-0X01;D9=D9+1;D9=D9+0x1;do lG=bc[D9];end;D9=D9+1;D9=lG[5];end;end;end;end;end;end);do if not(X9)then if V(o9)=="string"then if r(o9,'\097\116te\109pt\032\116\111 \121i\101\108d\032\097\099r\111ss\032me\116ame\116\104\111\100\047\067\037\045\099\097\108l \098ou\110\100\097ry')then return coroutine.yield();end;if r(o9,'^\046-\058\037\100\043\058 ')then q("Luraph Script:"..(Qc[D9-1]or"(\105n\116e\114n\097\108\041")..": "..u(o9),0X0000);else(q)(o9,0);end;else q(o9,0X00000);end;else if o9 then do if W9~=0X1 then return N9[v9](E(N9,v9+0X0001,g9));else do return N9[v9]();end;end;end;elseif not(v9)then else return E(N9,v9,W9);end;end;end;end;else ic=function(...)local hJ=1;local qJ={};local gJ=(k and k()or _ENV);local dJ,zJ=q3(...);do dJ=dJ-0X01;end;local GJ=((gJ==H and fc or gJ));local JJ,PJ={[2]=Vc,[1]=qJ},0;for os=0X0,dJ do if not(ac>os)then do break;end;else do(qJ)[os]=zJ[os+1];end;end;end;if not nc then zJ=nil;elseif not(Ac)then else(qJ)[ac]={n=dJ>=ac and dJ-ac+0X01 or 0,E(zJ,ac+1,dJ+0X001)};end;if GJ~=gJ then do if not(s)then do _ENV=GJ;end;else(s)(ic,GJ);end;end;end;local EJ,kJ,ZJ,KJ=c(function()while true do local cC=(bc[hJ]);local IC=(cC[3]);hJ=hJ+1;if IC<12 then if IC>=6 then if not(IC>=0X9)then if not(IC>=0x7)then local VI=(Uc[cC[0X5]]);local rI=(VI[5]);local xI=(#rI);local ZI=nil;if xI>0 then ZI={};for a_=1,xI do local i_=rI[a_];if i_[1]~=0X0 then ZI[a_-1]=jc[i_[0x2]];else do ZI[a_-0X1]={qJ,i_[2]};end;end;end;(S)(Lc,ZI);end;do qJ[cC[2]]=e3(VI,ZI,GJ);end;else if IC==8 then do qJ[cC[2]]=cC[6];end;else do qJ[2]=true;end;cC=bc[hJ];do hJ=hJ+0X001;end;do(GJ)[cC[6]]=qJ[2];end;cC=bc[hJ];hJ=hJ+1;(qJ)[0x2]=GJ[cC[0X6]];do cC=bc[hJ];end;hJ=hJ+0X1;(qJ)[0X3]=GJ[cC[6]];do cC=bc[hJ];end;do hJ=hJ+1;end;(qJ)[3]=qJ[0x3][cC[1]];cC=bc[hJ];hJ=hJ+0X0001;qJ[4]=GJ[cC[6]];cC=bc[hJ];hJ=hJ+1;qJ[4]=qJ[4][cC[1]];hJ=hJ+0X1;hJ=hJ+0X001;cC=bc[hJ];do hJ=hJ+1;end;qJ[0X04]=qJ[0x004][cC[0X00001]];hJ=hJ+1;hJ=hJ+1;cC=bc[hJ];hJ=hJ+0X0001;do(qJ)[5]=GJ[cC[0X00006]];end;do hJ=hJ+0X001;end;hJ=hJ+1;cC=bc[hJ];hJ=hJ+0x1;qJ[5]=qJ[5][cC[1]];hJ=hJ+1;hJ=hJ+0X1;cC=bc[hJ];hJ=hJ+1;(qJ)[6]=GJ[cC[0X6]];hJ=hJ+0x001;do hJ=hJ+0X1;end;cC=bc[hJ];hJ=hJ+1;qJ[0X6]=qJ[0X6][cC[0X1]];cC=bc[hJ];do hJ=hJ+0x00001;end;local RM=6;do(qJ)[0x7]=cC[0x6];end;cC=bc[hJ];hJ=hJ+1;(qJ)[8]=cC[0x6];do hJ=hJ+1;end;qJ[RM]=qJ[RM](qJ[RM+1],qJ[RM+0X2]);PJ=RM;cC=bc[hJ];hJ=hJ+0x001;qJ[6]=qJ[0X6]/cC[1];cC=bc[hJ];hJ=hJ+1;(qJ)[7]=cC[0x6];cC=bc[hJ];hJ=hJ+1;qJ[8]=cC[6];hJ=hJ+1;RM=5;PJ=RM+4-1;qJ[RM]=qJ[RM](E(qJ,RM+0X00001,PJ));PJ=RM;do hJ=hJ+1;end;do hJ=hJ+0X1;end;do hJ=hJ+1;end;do qJ[0X004]=qJ[0X4]+qJ[5];end;cC=bc[hJ];do hJ=hJ+0X1;end;qJ[5]=GJ[cC[0X6]];hJ=hJ+1;hJ=hJ+1;do cC=bc[hJ];end;do hJ=hJ+1;end;qJ[0x5]=qJ[0X05][cC[0X1]];hJ=hJ+1;hJ=hJ+0X01;cC=bc[hJ];do hJ=hJ+0x00001;end;qJ[5]=qJ[0X0005][cC[0X0001]];hJ=hJ+0x01;hJ=hJ+1;do hJ=hJ+1;end;RM=0X3;(qJ)[RM]=qJ[RM](qJ[RM+1],qJ[RM+0x00002]);PJ=RM;local lM=nil;hJ=hJ+1;hJ=hJ+1;hJ=hJ+0X01;(qJ)[4]=true;do cC=bc[hJ];end;hJ=hJ+0X1;local VM=(Uc[cC[0x5]]);local pM=VM[5];local zM=(#pM);if zM>0 then lM={};for iZ=0X00001,zM do local rZ=(pM[iZ]);if rZ[1]==0X00000 then do(lM)[iZ-1]={qJ,rZ[0x2]};end;else(lM)[iZ-1]=jc[rZ[0X002]];end;end;S(Lc,lM);end;qJ[0X5]=e3(VM,lM,GJ);do hJ=hJ+1;end;do(qJ)[6]=nil;end;hJ=hJ+0X1;do(qJ)[7]=true;end;hJ=hJ+0x1;do RM=2;end;do PJ=RM+0x06-1;end;qJ[RM](E(qJ,RM+0X01,PJ));PJ=RM-1;cC=bc[hJ];hJ=hJ+1;qJ[0X02]=GJ[cC[6]];local fM=(qJ[2]);do hJ=hJ+0X1;end;do hJ=hJ+1;end;cC=bc[hJ];do hJ=hJ+1;end;RM=0x2;do(qJ)[RM+1]=fM;end;do(qJ)[RM]=fM[cC[0X1]];end;cC=bc[hJ];hJ=hJ+1;(qJ)[0X4]=GJ[cC[0X6]];do cC=bc[hJ];end;hJ=hJ+0X1;do qJ[4]=qJ[0X4][cC[0X1]];end;do cC=bc[hJ];end;hJ=hJ+1;qJ[4]=qJ[4][cC[0X1]];hJ=hJ+0X00001;do RM=0X02;end;(qJ[RM])(qJ[RM+0X1],qJ[RM+0X2]);PJ=RM-1;do hJ=hJ+1;end;hJ=hJ+1;cC=bc[hJ];do hJ=hJ+0X001;end;qJ[2]=GJ[cC[6]];cC=bc[hJ];hJ=hJ+0X0001;qJ[2][cC[6]]=cC[0x001];cC=bc[hJ];hJ=hJ+0X1;do(qJ)[0X0002]=GJ[cC[6]];end;do hJ=hJ+1;end;do PJ=0X2;end;do(qJ)[PJ]=qJ[PJ]();end;hJ=hJ+0X1;hJ=hJ+1;hJ=hJ+1;qJ[0x02]=qJ[0X2]-qJ[0X00001];cC=bc[hJ];hJ=hJ+0X1;do if not(cC[6]<qJ[2])then hJ=cC[0X2];end;end;end;end;else if IC>=0xA then if IC==11 then local No=cC[0x2];local po,Io=qJ[No]();if not(po)then else do for rI=1,cC[4]do(qJ)[No+rI]=Io[rI];end;end;do hJ=cC[5];end;end;else qJ[cC[0X2]]=cC[6];end;else do qJ[2]=GJ[cC[0X6]];end;cC=bc[hJ];hJ=hJ+0X001;qJ[3]=GJ[cC[0x6]];local rk=0;cC=bc[hJ];hJ=hJ+1;do(qJ)[0x00004]=GJ[cC[6]];end;do hJ=hJ+1;end;hJ=hJ+0X1;cC=bc[hJ];do hJ=hJ+1;end;do qJ[4]=qJ[4][cC[0X0001]];end;hJ=hJ+1;local hk=3;local jk=0X2;do if jk==0 then else PJ=hk+jk-0x1;end;end;local Ek,Xk=nil,nil;if jk==1 then Ek,Xk=q3(qJ[hk]());else do Ek,Xk=q3(qJ[hk](E(qJ,hk+0X00001,PJ)));end;end;do if rk==0X01 then PJ=hk-0x1;else if rk==0 then Ek=Ek+hk-1;PJ=Ek;else Ek=hk+rk-0x2;PJ=Ek+1;end;local FG=(0X0);do for Ro=hk,Ek do FG=FG+1;do(qJ)[Ro]=Xk[FG];end;end;end;end;end;hJ=hJ+0X1;hk=2;(qJ[hk])(E(qJ,hk+0X1,PJ));PJ=hk-0X01;do hJ=hJ+0X0001;end;hJ=hJ+0X1;cC=bc[hJ];hJ=hJ+1;qJ[0X02]=GJ[cC[0X6]];hJ=hJ+0X1;hJ=hJ+1;hJ=hJ+1;PJ=0X2;qJ[PJ]();PJ=PJ-1;cC=bc[hJ];hJ=hJ+0X00001;(qJ)[2]=GJ[cC[6]];do cC=bc[hJ];end;hJ=hJ+1;qJ[2]=qJ[2][cC[1]];do cC=bc[hJ];end;do hJ=hJ+1;end;qJ[0X2]=qJ[0x2][cC[1]];cC=bc[hJ];hJ=hJ+1;do hk=2;end;local Fk=qJ[0x2];do(qJ)[hk+1]=Fk;end;qJ[hk]=Fk[cC[1]];cC=bc[hJ];hJ=hJ+1;do qJ[4]=cC[6];end;hJ=hJ+1;do hk=0X2;end;qJ[hk](qJ[hk+1],qJ[hk+2]);do PJ=hk-0X01;end;hJ=hJ+0X1;do hJ=hJ+1;end;do cC=bc[hJ];end;hJ=hJ+1;do qJ[0X2]=GJ[cC[6]];end;hJ=hJ+1;hJ=hJ+0X1;cC=bc[hJ];hJ=hJ+1;qJ[0X2]=qJ[0X2][cC[0X1]];do hJ=hJ+0X1;end;hJ=hJ+0X0001;cC=bc[hJ];do hJ=hJ+0x00001;end;(qJ)[3]=cC[0X6];hJ=hJ+0X01;hk=0X002;qJ[hk](qJ[hk+1]);PJ=hk-1;cC=bc[hJ];hJ=hJ+0X00001;(qJ)[2]=GJ[cC[0X06]];do hJ=hJ+1;end;do hJ=hJ+1;end;cC=bc[hJ];hJ=hJ+0X00001;(qJ)[0X2]=qJ[0x2][cC[0X001]];hJ=hJ+1;hJ=hJ+1;cC=bc[hJ];hJ=hJ+0X1;(qJ)[2]=qJ[2][cC[0X00001]];hJ=hJ+1;hJ=hJ+1;do cC=bc[hJ];end;do hJ=hJ+1;end;if qJ[2]<cC[0X001]then hJ=cC[2];end;end;end;else if not(IC>=3)then if not(IC<0X00001)then do if IC~=0X2 then do(qJ)[cC[0x0002]]=-qJ[cC[0X0005]];end;else qJ[3]=GJ[cC[0X6]];hJ=hJ+0X01;do hJ=hJ+1;end;cC=bc[hJ];do hJ=hJ+0x1;end;do qJ[3]=qJ[0X3][cC[0x1]];end;cC=bc[hJ];hJ=hJ+1;if not qJ[3]then do hJ=cC[0X5];end;end;end;end;else qJ[3]=GJ[cC[0X6]];cC=bc[hJ];hJ=hJ+1;(qJ)[0x3]=qJ[3][cC[1]];do cC=bc[hJ];end;do hJ=hJ+0X1;end;(qJ)[3]=qJ[0X3][cC[1]];hJ=hJ+1;hJ=hJ+1;cC=bc[hJ];hJ=hJ+1;if qJ[0x3]<=cC[1]then hJ=cC[2];end;end;else if IC>=0X4 then if IC~=5 then(qJ)[2]=GJ[cC[6]];hJ=hJ+1;PJ=0X2;qJ[PJ]=qJ[PJ]();hJ=hJ+0X001;do hJ=hJ+0X00001;end;hJ=hJ+1;qJ[0x01]=qJ[0x00002];cC=bc[hJ];hJ=hJ+0X00001;qJ[0X2]=GJ[cC[0X6]];hJ=hJ+1;do hJ=hJ+1;end;do hJ=hJ+0X00001;end;do PJ=0x00002;end;qJ[PJ]();do PJ=PJ-0X1;end;hJ=hJ+0X001;hJ=hJ+1;cC=bc[hJ];hJ=hJ+1;hJ=cC[5];else qJ[0]=GJ[cC[0X006]];hJ=hJ+0X001;hJ=hJ+1;cC=bc[hJ];hJ=hJ+0X1;qJ[0X0]=qJ[0X0][cC[1]];cC=bc[hJ];hJ=hJ+1;(qJ)[0X0]=qJ[0][cC[1]];cC=bc[hJ];hJ=hJ+0X1;do qJ[0]=qJ[0][cC[0X1]];end;hJ=hJ+1;hJ=hJ+0X1;cC=bc[hJ];hJ=hJ+0X1;do qJ[0X001]=cC[6];end;cC=bc[hJ];do hJ=hJ+0X1;end;hJ=cC[5];end;else qJ[cC[0X02]]=qJ[cC[0X00005]]-qJ[cC[4]];end;end;end;else do if IC<0X12 then if IC<0XF then if not(IC<13)then if IC==14 then for Df=cC[0X2],cC[0X00005]do do qJ[Df]=nil;end;end;else(qJ)[0X4]=GJ[cC[6]];hJ=hJ+1;hJ=hJ+1;do hJ=hJ+1;end;PJ=0X4;(qJ)[PJ]=qJ[PJ]();do hJ=hJ+1;end;do hJ=hJ+1;end;cC=bc[hJ];hJ=hJ+1;if not qJ[4]then do hJ=cC[0X05];end;end;end;else hJ=cC[0X5];end;else if not(IC>=16)then else if IC==17 then(qJ)[2]=qJ[0X00000][cC[1]];hJ=hJ+1;do hJ=hJ+1;end;cC=bc[hJ];do hJ=hJ+0X00001;end;qJ[0X2][cC[0X6]]=cC[1];do cC=bc[hJ];end;do hJ=hJ+0X1;end;qJ[2]=qJ[0][cC[0X01]];cC=bc[hJ];local pr=2;hJ=hJ+1;(qJ[0x2])[cC[0X6]]=cC[0X1];cC=bc[hJ];hJ=hJ+1;(qJ)[2]=GJ[cC[6]];hJ=hJ+0X00001;hJ=hJ+1;cC=bc[hJ];hJ=hJ+0X1;qJ[0X3]=cC[6];do hJ=hJ+0X1;end;(qJ[pr])(qJ[pr+1]);PJ=pr-0X1;do cC=bc[hJ];end;hJ=hJ+1;hJ=cC[5];else local aP=cC[2];do for hZ=aP,aP+(cC[5]-1)do qJ[hZ]=zJ[ac+(hZ-aP)+0X00001];end;end;end;end;end;else if IC<0X15 then if not(IC<0X13)then if IC==20 then qJ[2]=qJ[0x0000][cC[1]];do cC=bc[hJ];end;hJ=hJ+0x1;(qJ)[0X2]=qJ[0X00002][cC[0X0001]];hJ=hJ+1;hJ=hJ+0x1;cC=bc[hJ];hJ=hJ+0X1;if not qJ[2]then do hJ=cC[0X5];end;end;else do if qJ[cC[5]]~=qJ[cC[0x004]]then hJ=cC[2];end;end;end;else(qJ)[cC[2]]={E({},0X1,cC[5])};end;else if IC>=0X16 then if IC==0X17 then repeat local ut,at=Lc,(qJ);if not(#ut>0x00)then else local ag=({});for vu,hu in M,ut do for VJ,OJ in M,hu do if not(OJ[0X00001]==at and OJ[2]>=0)then else local rG=OJ[0X2];if not ag[rG]then ag[rG]={at[rG]};end;do OJ[1]=ag[rG];end;(OJ)[0x2]=0X01;end;end;end;end;until true;return;else(qJ)[cC[0X0002]]=GJ[cC[0X6]];end;else do(qJ)[0X0004]=GJ[cC[0x6]];end;hJ=hJ+1;do PJ=4;end;qJ[PJ]=qJ[PJ]();cC=bc[hJ];hJ=hJ+1;do if qJ[4]then hJ=cC[0X005];end;end;end;end;end;end;end;end;end);if EJ then if kJ then if KJ~=1 then return qJ[ZJ](E(qJ,ZJ+1,PJ));else return qJ[ZJ]();end;elseif not(ZJ)then else return E(qJ,ZJ,KJ);end;else if V(kJ)~="string"then(q)(kJ,0);else if r(kJ,'at\116\101mp\116\032\116\111\032\121\105e\108\100\032acr\111s\115 m\101tam\101\116\104o\100\047\067%\045call \098\111u\110d\097r\121')then return coroutine.yield();end;do if r(kJ,"^.-:%d+: ")then(q)("\076\117\114ap\104 \083\099\114\105pt\058"..(Qc[hJ-1]or"(\105\110\116\101rn\097\108\041")..": "..u(kJ),0X000);else q(kJ,0x0);end;end;end;end;end;end;else if Sc==196 then ic=function(...)local sz=0X1;local pz=0;local gz={};local rz=((k and k()or _ENV));local ez={[2]=Vc,[1]=gz};local iz=(rz==H and fc or rz);local Vz,yz=q3(...);Vz=Vz-1;for NC=0x00000,Vz do if not(ac>NC)then break;else gz[NC]=yz[NC+1];end;end;if not nc then yz=nil;elseif Ac then gz[ac]={n=Vz>=ac and Vz-ac+0x01 or 0,E(yz,ac+1,Vz+1)};end;if iz==rz then else if s then(s)(ic,iz);else _ENV=iz;end;end;local Tz,nz,Pz,zz=c(function()while true do local db=(bc[sz]);local Sb=db[3];sz=sz+0X1;if Sb>=10 then if Sb<0XF then if Sb<12 then if Sb==11 then local W1=(Uc[db[5]]);local a1=W1[0X005];local h1=(#a1);local Y1=nil;do if h1>0X0 then Y1={};for xn=1,h1 do local kn=(a1[xn]);do if kn[1]~=0x0000 then do(Y1)[xn-0X1]=jc[kn[2]];end;else Y1[xn-1]={gz,kn[0X2]};end;end;end;S(Lc,Y1);end;end;do gz[db[0X02]]=e3(W1,Y1,iz);end;else local xV=db[2];do pz=xV+db[0X5]-1;end;gz[xV]=gz[xV](E(gz,xV+0X1,pz));pz=xV;end;else do if not(Sb>=13)then do repeat local uC,HC=Lc,(gz);if#uC>0 then local L1=({});for uE,CE in M,uC do for Cv,Ov in M,CE do if Ov[1]==HC and Ov[0X002]>=0X0 then local A9=(Ov[0X002]);if not(not L1[A9])then else(L1)[A9]={HC[A9]};end;Ov[0X01]=L1[A9];(Ov)[2]=0X0001;end;end;end;end;until true;end;return;else if Sb~=0Xe then do(gz)[db[0x2]]=db[6];end;else do repeat local EN,XN,RN=Lc,gz,db[2];if#EN>0X00000 then local ot={};do for Fy,Py in M,EN do for fO,dO in M,Py do do if dO[1]==XN and dO[2]>=RN then local hR=(dO[2]);do if not(not ot[hR])then else ot[hR]={XN[hR]};end;end;dO[0X1]=ot[hR];(dO)[0x0002]=1;end;end;end;end;end;end;until true;end;end;end;end;end;else if Sb<0x0011 then if Sb~=16 then(gz)[0]=iz[db[0X6]];sz=sz+0X001;sz=sz+0X1;sz=sz+0X001;do pz=0X0;end;do(gz)[pz]=gz[pz]();end;sz=sz+0X1;sz=sz+0X1;sz=sz+0X01;do gz[0]=not gz[0X00000];end;db=bc[sz];sz=sz+1;sz=db[5];else gz[0X0]=iz[db[6]];do db=bc[sz];end;local AN=(0X000);sz=sz+0X01;local WN=(gz[0X00]);do(gz)[AN+1]=WN;end;gz[AN]=WN[db[0X1]];sz=sz+1;AN=0;gz[AN]=gz[AN](gz[AN+1]);pz=AN;sz=sz+0X1;sz=sz+0X00001;do db=bc[sz];end;sz=sz+0X1;do sz=db[5];end;end;else do if Sb>=18 then if Sb~=0X13 then(gz)[db[2]]=iz[db[6]];else if not gz[db[0X0002]]then sz=db[5];end;end;else do repeat local BR,jR=Lc,(gz);if not(#BR>0)then else local RC={};do for Ak,pk in M,BR do for Qk,jk in M,pk do if jk[1]==jR and jk[2]>=0x0 then local K6=jk[2];if not RC[K6]then(RC)[K6]={jR[K6]};end;do jk[0X1]=RC[K6];end;jk[2]=1;end;end;end;end;end;until true;end;local Mt=(db[2]);return false,Mt,Mt;end;end;end;end;else if Sb<0x5 then if Sb>=2 then if not(Sb>=3)then gz[db[2]]=ez[db[0X5]];else do if Sb~=4 then gz[0x0]=iz[db[6]];db=bc[sz];do sz=sz+0X1;end;do(gz)[0]=gz[0X0][db[0X1]];end;sz=sz+0X00001;sz=sz+0X00001;do db=bc[sz];end;sz=sz+0X00001;do if not(not gz[0])then else sz=db[5];end;end;else do(gz)[db[2]]={E({},1,db[5])};end;end;end;end;else if Sb==0X1 then(gz[db[2]])[gz[db[5]]]=gz[db[0x0004]];else if gz[db[0x5]]<=gz[db[0X4]]then sz=db[2];end;end;end;else if not(Sb<7)then if not(Sb<8)then if Sb~=9 then else do for HA=db[2],db[0X005]do(gz)[HA]=nil;end;end;end;else(gz)[db[2]]=o(gz[db[0X5]],gz[db[0x004]]);end;else if Sb==6 then sz=db[5];else(gz)[db[2]]=#gz[db[5]];end;end;end;end;end;end);do if Tz then if nz then do if zz==1 then do return gz[Pz]();end;else return gz[Pz](E(gz,Pz+0X0001,pz));end;end;elseif Pz then do return E(gz,Pz,zz);end;end;else if V(nz)~="string"then(q)(nz,0X00000);else do if not(r(nz,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;do if not(r(nz,"^.-:%d+: "))then(q)(nz,0X0);else(q)("Luraph Script:"..(Qc[sz-0X1]or"(internal)")..": "..u(nz),0);end;end;end;end;end;end;else ic=function(...)local aa,fa=1,{};local qa=((k and k()or _ENV));local Pa,Wa=(qa==H and fc or qa),{[2]=Vc,[1]=fa};local Ha,ja=q3(...);Ha=Ha-0x1;local Xa=0X0;for Qb=0X0,Ha do if ac>Qb then do(fa)[Qb]=ja[Qb+0X00001];end;else break;end;end;do if not nc then ja=nil;elseif not(Ac)then else do fa[ac]={n=Ha>=ac and Ha-ac+1 or 0,E(ja,ac+0X0001,Ha+1)};end;end;end;if Pa~=qa then if s then(s)(ic,Pa);else _ENV=Pa;end;end;local Na,Aa,pa,Da=c(function()while true do local Xo=(bc[aa]);local Lo=(Xo[3]);do aa=aa+0X00001;end;if Lo>=0X0000a then if Lo<15 then do if Lo<0X000C then if Lo~=0X0b then do(fa)[Xo[2]]=Xo[6];end;else fa[2]=Pa[Xo[6]];aa=aa+1;local kx=0x2;aa=aa+1;aa=aa+0x1;do fa[3]=fa[1];end;Xo=bc[aa];do aa=aa+0X001;end;(fa)[4]=Xo[0X6];aa=aa+0X1;fa[kx](fa[kx+0X001],fa[kx+0X2]);do Xa=kx-0X1;end;Xo=bc[aa];aa=aa+0X0001;do aa=Xo[0X00005];end;end;else do if Lo>=0Xd then if Lo~=0X000e then local P2,o2=Uc[Xo[0x0005]],(nil);local W2=(P2[5]);local k2=#W2;if not(k2>0X0)then else do o2={};end;for Fb=1,k2 do local lb=W2[Fb];if lb[0X001]==0 then o2[Fb-0x01]={fa,lb[2]};else(o2)[Fb-1]=jc[lb[0x2]];end;end;S(Lc,o2);end;(fa)[Xo[0X2]]=e3(P2,o2,Pa);else(fa)[Xo[0x002]]={E({},1,Xo[5])};end;else local x0=jc[0];fa[0x0]=x0[0x1][x0[0X0002]];aa=aa+1;do aa=aa+1;end;Xo=bc[aa];local A0=0x00;do aa=aa+0X0001;end;local C0=(fa[0X00]);(fa)[A0+1]=C0;(fa)[A0]=C0[Xo[0X0001]];aa=aa+1;A0=0;(fa)[A0]=fa[A0](fa[A0+0X1]);Xa=A0;Xo=bc[aa];aa=aa+0X00001;if not(not fa[0x00000])then else do aa=Xo[5];end;end;end;end;end;end;else do if Lo>=0X12 then if Lo<19 then do fa[0X0]=Pa[Xo[0x6]];end;do Xo=bc[aa];end;local cM=Uc[Xo[0X0005]];aa=aa+1;local DM,fM,hM=0X003,0X00000,nil;local jM=(cM[5]);local pM=#jM;do if pM>0 then do hM={};end;for Zq=0X01,pM do local kq=(jM[Zq]);if kq[1]==0 then(hM)[Zq-0X1]={fa,kq[2]};else do hM[Zq-0x1]=jc[kq[0X2]];end;end;end;(S)(Lc,hM);end;end;do fa[0X001]=e3(cM,hM,Pa);end;aa=aa+0x1;local gM=0x02;if gM==0x0 then else do Xa=fM+gM-0X1;end;end;local QM,dM=nil,(nil);if gM==0X00001 then do QM,dM=q3(fa[fM]());end;else QM,dM=q3(fa[fM](E(fa,fM+0X1,Xa)));end;if DM~=0X1 then if DM==0 then QM=QM+fM-1;Xa=QM;else QM=fM+DM-0x2;do Xa=QM+1;end;end;local Mz=(0X0);for Af=fM,QM do Mz=Mz+0X1;(fa)[Af]=dM[Mz];end;else do Xa=fM-0x1;end;end;Xo=bc[aa];aa=aa+1;if not(fa[0X0])then else do aa=Xo[0X5];end;end;else if Lo==20 then fa[Xo[0x2]]=fa[Xo[5]]*fa[Xo[0X4]];else end;end;else if not(Lo<0X010)then if Lo==0x00011 then(fa)[Xo[0X2]]=not fa[Xo[0X5]];else(fa)[0X0]=Pa[Xo[0X6]];Xo=bc[aa];do aa=aa+1;end;do(fa)[0X0]=fa[0][Xo[0X0001]];end;Xo=bc[aa];do aa=aa+1;end;if not(not fa[0X0])then else aa=Xo[5];end;end;else(fa)[0X0]=false;Xo=bc[aa];aa=aa+1;Pa[Xo[0X6]]=fa[0];do aa=aa+1;end;repeat local Xr,dr=Lc,(fa);if#Xr>0X0 then local A2={};for BK,XK in M,Xr do do for FB,WB in M,XK do if not(WB[0x1]==dr and WB[0x2]>=0X0)then else local zx=(WB[0X02]);if not A2[zx]then A2[zx]={dr[zx]};end;(WB)[0X1]=A2[zx];(WB)[2]=1;end;end;end;end;end;until true;return;end;end;end;end;else do if Lo<0X00005 then if Lo>=0x2 then if Lo<0X3 then fa[0]=Pa[Xo[6]];Xo=bc[aa];aa=aa+1;fa[0x0000]=fa[0][Xo[0X001]];aa=aa+0X1;do aa=aa+1;end;Xo=bc[aa];aa=aa+0X1;if fa[0]then aa=Xo[0X5];end;else if Lo~=4 then(fa)[0]=true;Xo=bc[aa];aa=aa+0X1;(Pa)[Xo[0X6]]=fa[0X0];Xo=bc[aa];aa=aa+0X0001;aa=Xo[0X00005];else(fa)[Xo[0X2]]=v(fa[Xo[0x5]],fa[Xo[0x4]]);end;end;else if Lo==0X1 then do fa[Xo[0x2]]=Pa[Xo[6]];end;else do for v1=Xo[0x2],Xo[5]do fa[v1]=nil;end;end;end;end;else do if Lo>=0x7 then if not(Lo>=8)then do(fa)[0x00000]=Pa[Xo[0X6]];end;aa=aa+1;aa=aa+1;do Xo=bc[aa];end;do aa=aa+0X001;end;(fa)[0]=fa[0X00000][Xo[0X1]];aa=aa+1;local Ek=0X0;aa=aa+0X001;Xo=bc[aa];do aa=aa+0X00001;end;do(fa)[1]=Xo[6];end;aa=aa+1;do(fa)[Ek]=fa[Ek](fa[Ek+0X1]);end;Xa=Ek;do aa=aa+1;end;do aa=aa+1;end;do Xo=bc[aa];end;aa=aa+1;if not fa[0]then do aa=Xo[5];end;end;else if Lo~=9 then aa=Xo[0X5];else fa[0X000]=Pa[Xo[0X6]];do aa=aa+0X1;end;Xa=0X0;fa[Xa]=fa[Xa]();aa=aa+1;aa=aa+0x0001;Xo=bc[aa];aa=aa+1;if fa[0]then aa=Xo[5];end;end;end;else do if Lo~=6 then fa[Xo[2]]=Xo[0X6];else fa[Xo[2]]=fa[Xo[5]][fa[Xo[4]]];end;end;end;end;end;end;end;end;end);do if not(Na)then if V(Aa)~="string"then q(Aa,0);else if not(r(Aa,'attem\112t \116o \121i\101\108d a\099ross metam\101\116\104\111\100/C%-\099a\108\108\032\098ou\110d\097ry'))then else return coroutine.yield();end;if r(Aa,"\094\046\045\058\037d+\058 ")then(q)("Lurap\104\032S\099ript:"..(Qc[aa-1]or"(internal)")..": "..u(Aa),0);else q(Aa,0);end;end;else if Aa then do if Da~=0X1 then return fa[pa](E(fa,pa+1,Xa));else return fa[pa]();end;end;elseif not(pa)then else return E(fa,pa,Da);end;end;end;end;end;end;end;else if Sc<0Xc9 then if not(Sc<199)then if Sc==0X000c8 then ic=function(...)local qD,ND=0X0001,({});local nD={[1]=ND,[2]=Vc};local HD=((k and k()or _ENV));local tD=(0X0);local eD,WD=q3(...);eD=eD-1;for ef=0,eD do if not(ac>ef)then break;else(ND)[ef]=WD[ef+1];end;end;local CD=((HD==H and fc or HD));if not nc then WD=nil;elseif not(Ac)then else(ND)[ac]={n=eD>=ac and eD-ac+1 or 0,E(WD,ac+0X01,eD+0X1)};end;if CD==HD then else do if s then(s)(ic,CD);else _ENV=CD;end;end;end;local fD,cD,DD,lD=c(function()while true do local fX=bc[qD];local jX=fX[3];qD=qD+0X1;if not(jX>=15)then if not(jX<0x0007)then if not(jX<0x000b)then if jX<13 then if jX~=0XC then ND[0]=CD[fX[6]];qD=qD+1;qD=qD+1;fX=bc[qD];do qD=qD+0x1;end;(ND)[1]=fX[0X0006];fX=bc[qD];qD=qD+1;(ND)[0X002]=fX[6];local VK=(0);qD=qD+1;ND[VK](ND[VK+1],ND[VK+2]);do tD=VK-0X1;end;qD=qD+1;qD=qD+1;fX=bc[qD];qD=qD+1;ND[0]=CD[fX[6]];do qD=qD+1;end;qD=qD+1;do qD=qD+1;end;tD=0;(ND[tD])();tD=tD-1;fX=bc[qD];qD=qD+1;do(ND)[0]=CD[fX[6]];end;qD=qD+1;qD=qD+1;do fX=bc[qD];end;qD=qD+1;ND[0X0]=ND[0][fX[0X0001]];qD=qD+1;qD=qD+0X01;fX=bc[qD];qD=qD+0x1;local yK=ND[0];do VK=0X0;end;ND[VK+0X1]=yK;do(ND)[VK]=yK[fX[0X00001]];end;fX=bc[qD];qD=qD+1;(ND)[2]=fX[0X6];do qD=qD+1;end;VK=0;(ND)[VK]=ND[VK](ND[VK+1],ND[VK+0X2]);tD=VK;qD=qD+1;qD=qD+1;fX=bc[qD];do qD=qD+1;end;if not(ND[0])then else qD=fX[0X5];end;else do qD=fX[0X5];end;end;else if jX~=14 then repeat local tJ,FJ=Lc,(ND);if#tJ>0X00000 then local FH=({});for hm,um in M,tJ do for T6,X6 in M,um do if X6[1]==FJ and X6[0X0002]>=0X000 then local Xv=X6[0X2];do if not(not FH[Xv])then else FH[Xv]={FJ[Xv]};end;end;do X6[0X0001]=FH[Xv];end;do(X6)[0X2]=0X1;end;end;end;end;end;until true;return;else do ND[0]=CD[fX[6]];end;qD=qD+0X00001;qD=qD+0X1;fX=bc[qD];local z6=0X00000;qD=qD+0X1;(ND)[0X1]=fX[6];fX=bc[qD];qD=qD+1;ND[0X2]=fX[0X006];qD=qD+1;(ND[z6])(ND[z6+0x001],ND[z6+0X002]);tD=z6-1;qD=qD+1;qD=qD+0X001;fX=bc[qD];qD=qD+0X00001;ND[0]=CD[fX[0X6]];do qD=qD+1;end;tD=0;ND[tD]();tD=tD-0X01;qD=qD+0X01;qD=qD+1;fX=bc[qD];qD=qD+0X001;ND[0]=CD[fX[6]];fX=bc[qD];qD=qD+0x01;do ND[0]=ND[0][fX[0X01]];end;fX=bc[qD];qD=qD+1;do z6=0;end;local J6=(ND[0x00000]);(ND)[z6+1]=J6;do ND[z6]=J6[fX[1]];end;do fX=bc[qD];end;qD=qD+0x00001;ND[0X00002]=fX[6];qD=qD+1;z6=0;do(ND)[z6]=ND[z6](ND[z6+0X001],ND[z6+0x2]);end;tD=z6;do qD=qD+0X1;end;do qD=qD+0X1;end;do fX=bc[qD];end;qD=qD+1;if not ND[0X0000]then do qD=fX[0X005];end;end;end;end;else if not(jX>=9)then if jX==0X0008 then ND[fX[2]]=fX[6];else do if ND[fX[5]]~=ND[fX[4]]then else qD=fX[2];end;end;end;else do if jX~=10 then local eV=Uc[fX[0X0005]];local OV,lV=eV[0X0005],(nil);local YV=(#OV);if YV>0X0 then lV={};do for YF=0X1,YV do local EF=(OV[YF]);if EF[0X1]==0X0 then lV[YF-0X1]={ND,EF[2]};else(lV)[YF-0X001]=jc[EF[2]];end;end;end;(S)(Lc,lV);end;(ND)[fX[2]]=e3(eV,lV,CD);else repeat local F0,j0=Lc,ND;if#F0>0X00 then local H8=({});for fK,EK in M,F0 do for F9,y9 in M,EK do if not(y9[1]==j0 and y9[2]>=0)then else local tk=y9[2];if not(not H8[tk])then else(H8)[tk]={j0[tk]};end;(y9)[0x1]=H8[tk];do(y9)[2]=1;end;end;end;end;end;until true;local qT=fX[2];return false,qT,qT+fX[5]-2;end;end;end;end;else if jX<0X00003 then if not(jX<1)then if jX==2 then local Yy=jc[0X0];(ND)[0x00000]=Yy[0X1][Yy[0X2]];qD=qD+1;qD=qD+0X1;fX=bc[qD];qD=qD+1;ND[0]=ND[0][fX[1]];do qD=qD+0x1;end;qD=qD+1;fX=bc[qD];do qD=qD+1;end;if ND[0]then do qD=fX[5];end;end;else if ND[fX[0X5]]<=ND[fX[0X00004]]then qD=fX[2];end;end;else local bl=(jc[0X0]);ND[0]=bl[0X1][bl[0X2]];qD=qD+0X1;qD=qD+0X001;fX=bc[qD];qD=qD+0x00001;do(ND)[0]=ND[0][fX[1]];end;qD=qD+0x1;qD=qD+0x1;fX=bc[qD];qD=qD+1;do if ND[0]then qD=fX[0X5];end;end;end;else do if jX>=5 then if jX~=6 then ND[fX[2]]=ND[fX[0X5]]*ND[fX[4]];else do ND[0]=CD[fX[0X6]];end;local MS=(0X0);qD=qD+1;qD=qD+1;fX=bc[qD];do qD=qD+1;end;(ND)[1]=fX[6];do qD=qD+0X1;end;do(ND)[MS]=ND[MS](ND[MS+1]);end;do tD=MS;end;do qD=qD+1;end;qD=qD+1;do fX=bc[qD];end;qD=qD+1;ND[0x0000]=ND[0X0000][fX[1]];do qD=qD+1;end;qD=qD+1;fX=bc[qD];qD=qD+0X00001;do if not(ND[0X0])then else qD=fX[0X5];end;end;end;else do if jX==0X4 then ND[fX[0X02]]={E({},0x0001,fX[0x05])};else local mb=jc[0];ND[0X0]=mb[1][mb[0X2]];fX=bc[qD];do qD=qD+1;end;(ND)[0x00000]=ND[0X0][fX[1]];qD=qD+1;qD=qD+0X001;do fX=bc[qD];end;qD=qD+0X1;if not(not ND[0])then else qD=fX[0X5];end;end;end;end;end;end;end;else do if jX>=0X17 then do if not(jX<0X0001B)then if not(jX>=0X1d)then do if jX~=0X0001c then ND[0X0000]=CD[fX[6]];do fX=bc[qD];end;local Qb=0;qD=qD+1;ND[0X00001]=fX[6];qD=qD+0X1;(ND[Qb])(ND[Qb+0X1]);do tD=Qb-0X1;end;qD=qD+0X1;qD=qD+0X00001;do fX=bc[qD];end;qD=qD+1;do ND[0X0]=CD[fX[0X6]];end;qD=qD+1;qD=qD+0X1;qD=qD+0X1;tD=0x0;(ND[tD])();tD=tD-0X1;qD=qD+0X1;qD=qD+1;do fX=bc[qD];end;qD=qD+0X00001;qD=fX[0X5];else end;end;else do if jX~=30 then local me=fX[2];local Ye=((fX[4]-1)*0X00032);local ye=(ND[me]);for Yw=0X001,fX[5]do(ye)[Ye+Yw]=ND[me+Yw];end;else local JG=jc[0X1];ND[1]=JG[1][JG[0X00002]];fX=bc[qD];qD=qD+0x1;(ND)[0x1]=ND[1][fX[1]];local nG=0X1;qD=qD+1;ND[2]=ND[0];qD=qD+1;do JG=jc[2];end;(ND)[3]=JG[0X1][JG[2]];qD=qD+0X1;ND[nG](ND[nG+0X1],ND[nG+0X2]);tD=nG-0X0001;fX=bc[qD];do qD=qD+1;end;qD=fX[0X5];end;end;end;else if not(jX>=0X0019)then if jX~=0X18 then do(ND)[fX[2]]=J(ND[fX[5]],ND[fX[4]]);end;else for lx=fX[0X00002],fX[0X5]do(ND)[lx]=nil;end;end;else if jX==26 then(ND)[0X0]=CD[fX[0X6]];fX=bc[qD];do qD=qD+1;end;local l9=0X0;(ND)[1]=fX[6];qD=qD+1;ND[l9](ND[l9+1]);tD=l9-0X1;do qD=qD+1;end;qD=qD+0x01;fX=bc[qD];do qD=qD+0X1;end;qD=fX[0X5];else ND[fX[0X2]]=CD[fX[0X6]];end;end;end;end;else do if jX<19 then do if not(jX>=0X11)then do if jX~=16 then local uR=jc[0];ND[0X0]=uR[1][uR[2]];fX=bc[qD];do qD=qD+0X1;end;ND[0]=ND[0][fX[1]];do fX=bc[qD];end;qD=qD+0X00001;if not(ND[0X0000])then else qD=fX[0x5];end;else(ND)[fX[0X2]]=#ND[fX[0X05]];end;end;else if jX==18 then ND[0X0]=CD[fX[6]];fX=bc[qD];qD=qD+1;do(ND)[1]=fX[0X006];end;local MG=(jc[0X1]);qD=qD+1;local BG=0;(ND)[BG]=ND[BG](ND[BG+0x001]);tD=BG;qD=qD+0X001;do qD=qD+1;end;qD=qD+1;(ND)[1]=MG[0x1][MG[2]];qD=qD+1;qD=qD+0X1;do fX=bc[qD];end;qD=qD+0X1;ND[0x001]=ND[1][fX[0X1]];qD=qD+0X00001;qD=qD+0X1;qD=qD+0x1;do(ND)[2]=ND[0X00];end;do qD=qD+1;end;do BG=1;end;ND[BG]=ND[BG](ND[BG+0X001]);tD=BG;qD=qD+1;qD=qD+1;fX=bc[qD];qD=qD+1;if not ND[1]then qD=fX[5];end;else ND[0X0000]=CD[fX[0x6]];local j0=0x0;qD=qD+1;qD=qD+0X0001;do fX=bc[qD];end;qD=qD+1;(ND)[0X00001]=fX[6];do qD=qD+1;end;(ND[j0])(ND[j0+1]);tD=j0-1;do qD=qD+1;end;qD=qD+1;fX=bc[qD];qD=qD+0X1;qD=fX[0X5];end;end;end;else if not(jX<21)then if jX~=22 then(ND)[0]=CD[fX[0X006]];fX=bc[qD];qD=qD+0x001;local Cc=0;do(ND)[0X1]=fX[6];end;fX=bc[qD];qD=qD+1;do(ND)[0X2]=fX[6];end;do qD=qD+1;end;(ND[Cc])(ND[Cc+1],ND[Cc+2]);do tD=Cc-1;end;do fX=bc[qD];end;qD=qD+0X1;do ND[0]=CD[fX[6]];end;qD=qD+0x1;tD=0x000;ND[tD]();do tD=tD-0X1;end;do fX=bc[qD];end;qD=qD+0X0001;ND[0X0]=CD[fX[0X6]];fX=bc[qD];do qD=qD+1;end;(ND)[0x00000]=ND[0][fX[0X1]];local Nc=(ND[0X0000]);fX=bc[qD];do qD=qD+0X1;end;Cc=0X00;ND[Cc+1]=Nc;ND[Cc]=Nc[fX[0X001]];fX=bc[qD];qD=qD+0X1;do ND[2]=fX[0x6];end;do qD=qD+1;end;Cc=0;ND[Cc]=ND[Cc](ND[Cc+0X1],ND[Cc+0x02]);tD=Cc;do qD=qD+0x0001;end;qD=qD+0x1;do fX=bc[qD];end;qD=qD+0x0001;do if not ND[0]then qD=fX[0X5];end;end;else ND[0]=CD[fX[0x006]];fX=bc[qD];qD=qD+0X0001;(ND)[0X1]=fX[6];qD=qD+0X1;local S4=(0);ND[S4]=ND[S4](ND[S4+0x1]);do tD=S4;end;fX=bc[qD];qD=qD+1;do(ND)[0X000]=ND[0X0000][fX[1]];end;fX=bc[qD];qD=qD+1;if not ND[0X0]then qD=fX[5];end;end;else if jX==20 then ND[0]=CD[fX[6]];qD=qD+0X1;do qD=qD+0x1;end;fX=bc[qD];do qD=qD+1;end;ND[0]=ND[0][fX[1]];do qD=qD+0X1;end;qD=qD+1;fX=bc[qD];qD=qD+0X1;do if not ND[0X00000]then do qD=fX[0X05];end;end;end;else repeat local mV,gV,fV=Lc,ND,fX[0x0002];if#mV>0X00000 then local n4={};for Qq,Eq in M,mV do for V2,h2 in M,Eq do if h2[0x1]==gV and h2[2]>=fV then local U8=(h2[2]);if not(not n4[U8])then else n4[U8]={gV[U8]};end;h2[1]=n4[U8];(h2)[0X2]=1;end;end;end;end;until true;end;end;end;end;end;end;end;end;end);if fD then if cD then if lD==0x1 then return ND[DD]();else return ND[DD](E(ND,DD+1,tD));end;elseif not(DD)then else return E(ND,DD,lD);end;else if V(cD)~='st\114i\110g'then(q)(cD,0x0);else do if not(r(cD,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(r(cD,'^\046\045:%\100\043\058\032'))then q(cD,0);else q("Luraph Script:"..(Qc[qD-0X1]or"(\105n\116\101rn\097l\041")..": "..u(cD),0);end;end;end;end;else ic=function(...)local Uy,ly=0,({});local yy=((k and k()or _ENV));local by={[1]=ly,[2]=Vc};local hy,xy=q3(...);hy=hy-1;for as=0,hy do if ac>as then ly[as]=xy[as+1];else break;end;end;local Iy=((yy==H and fc or yy));if not nc then xy=nil;elseif Ac then(ly)[ac]={n=hy>=ac and hy-ac+1 or 0X0,E(xy,ac+1,hy+1)};end;local ty=1;if Iy==yy then else if not(s)then _ENV=Iy;else s(ic,Iy);end;end;local cy,Ay,iy,dy=c(function()do while true do local xs=bc[ty];local ys=(xs[3]);do ty=ty+1;end;do if ys<0X000F then if ys>=7 then if not(ys<0X0000B)then if ys>=0XD then do if ys~=0XE then if ly[xs[0x5]]~=xs[1]then ty=xs[0x2];end;else for dj=xs[0X2],xs[5]do(ly)[dj]=nil;end;end;end;else if ys~=12 then ty=xs[0X0005];else(ly)[xs[2]]=ly[xs[0X0005]]*ly[xs[0X4]];end;end;else do if ys>=9 then if ys~=0XA then ly[4]=Iy[xs[6]];ty=ty+0x1;ty=ty+0X0001;ty=ty+0X1;Uy=0X4;local wl=(0X4);(ly[Uy])();Uy=Uy-1;ty=ty+1;local Fl=(jc[0]);ty=ty+1;ty=ty+0X1;(ly)[4]=false;do xs=bc[ty];end;ty=ty+0x1;Iy[xs[6]]=ly[4];ty=ty+1;(ly)[4]=Fl[0X001][Fl[2]];do xs=bc[ty];end;ty=ty+1;local ml=(ly[4]);(ly)[wl+1]=ml;(ly)[wl]=ml[xs[0X1]];ty=ty+1;do wl=0X004;end;(ly[wl])(ly[wl+0X1]);do Uy=wl-1;end;do ty=ty+0x1;end;ty=ty+0X00001;xs=bc[ty];do ty=ty+1;end;do(ly)[4]=Iy[xs[0X00006]];end;ty=ty+1;ty=ty+1;xs=bc[ty];do ty=ty+0x1;end;ly[0X0005]=ly[0X00001][xs[0x1]];xs=bc[ty];ty=ty+0X1;(ly)[0X5]=ly[5][xs[1]];ty=ty+1;ty=ty+1;xs=bc[ty];ty=ty+0X0001;ly[0x6]=Iy[xs[0X6]];xs=bc[ty];ty=ty+0X001;(ly)[6]=ly[0X06][xs[1]];xs=bc[ty];do ty=ty+1;end;do(ly)[0x007]=Iy[xs[6]];end;xs=bc[ty];ty=ty+0X1;(ly)[7]=ly[7][xs[1]];xs=bc[ty];do ty=ty+0X1;end;ly[0X8]=xs[0X6];do xs=bc[ty];end;do ty=ty+0X001;end;do(ly)[9]=xs[0X6];end;ty=ty+0X00001;do wl=0X00007;end;(ly)[wl]=ly[wl](ly[wl+0X0001],ly[wl+0X02]);Uy=wl;ty=ty+1;ty=ty+1;xs=bc[ty];ty=ty+0x0001;(ly)[0X7]=ly[0X7]+xs[1];xs=bc[ty];ty=ty+0X1;do ly[0X8]=xs[0X6];end;xs=bc[ty];local kl=nil;ty=ty+1;do ly[0X9]=Iy[xs[0X06]];end;do ty=ty+1;end;ty=ty+1;xs=bc[ty];do ty=ty+1;end;(ly)[0X9]=ly[0X9][xs[1]];do xs=bc[ty];end;ty=ty+1;(ly)[10]=xs[6];xs=bc[ty];ty=ty+0X00001;(ly)[0XB]=xs[6];ty=ty+1;wl=0X9;ly[wl]=ly[wl](ly[wl+0X1],ly[wl+2]);Uy=wl;ty=ty+1;ty=ty+1;xs=bc[ty];ty=ty+1;(ly)[9]=ly[0X9]+xs[0x0001];ty=ty+1;wl=0x6;Uy=wl+0X4-0X1;ly[wl]=ly[wl](E(ly,wl+1,Uy));do Uy=wl;end;ty=ty+1;ty=ty+0X001;ty=ty+1;ly[5]=ly[5]*ly[6];ty=ty+1;ly[0X0006]=true;xs=bc[ty];do ty=ty+1;end;local Zl=Uc[xs[0X5]];local Rl=Zl[5];local tl=#Rl;if not(tl>0)then else kl={};for td=0X0001,tl do local Zd=(Rl[td]);if Zd[1]~=0x0 then do(kl)[td-0X1]=jc[Zd[0X00002]];end;else kl[td-0x1]={ly,Zd[2]};end;end;S(Lc,kl);end;ly[0X7]=e3(Zl,kl,Iy);ty=ty+0X1;do wl=4;end;do Uy=wl+4-1;end;ly[wl](E(ly,wl+1,Uy));do Uy=wl-1;end;ty=ty+1;ty=ty+0X01;xs=bc[ty];ty=ty+1;(ly)[4]=ly[0X1][xs[0x001]];ty=ty+1;ty=ty+1;xs=bc[ty];ty=ty+0x1;(ly)[4]=ly[0X4][xs[0X1]];ty=ty+0X0001;ty=ty+0X1;xs=bc[ty];ty=ty+0x1;(Iy)[xs[6]]=ly[0X4];xs=bc[ty];ty=ty+0X001;(ly[0X00001])[xs[0X06]]=xs[1];xs=bc[ty];ty=ty+0X001;do ly[0X01][xs[0X6]]=xs[0X1];end;xs=bc[ty];ty=ty+0X1;(ly[0X1])[xs[0X00006]]=xs[1];xs=bc[ty];ty=ty+0X0001;wl=0X4;ml=ly[0X1];(ly)[wl+0x0001]=ml;(ly)[wl]=ml[xs[1]];do xs=bc[ty];end;do ty=ty+0X00001;end;(ly)[0X6]=xs[6];do ty=ty+0X01;end;wl=0X0004;(ly[wl])(ly[wl+0X001],ly[wl+2]);do Uy=wl-1;end;do xs=bc[ty];end;do ty=ty+1;end;do(ly)[0X004]=ly[0X1][xs[1]];end;xs=bc[ty];ty=ty+0x1;ly[0X4][xs[6]]=xs[1];xs=bc[ty];ty=ty+0X1;do(ly)[4]=Iy[xs[0X00006]];end;ty=ty+1;do ty=ty+1;end;do ty=ty+1;end;do(ly)[5]=ly[0];end;do ty=ty+1;end;wl=4;ly[wl](ly[wl+0X1]);do Uy=wl-1;end;xs=bc[ty];ty=ty+0X001;ly[4]=Iy[xs[6]];ty=ty+1;do ty=ty+0X1;end;xs=bc[ty];do ty=ty+0X1;end;do(ly)[0X0004]=ly[4][xs[1]];end;ty=ty+0X00001;ty=ty+0X1;xs=bc[ty];ty=ty+0X001;(ly)[0X4]=ly[4][xs[1]];do xs=bc[ty];end;do ty=ty+0X00001;end;wl=4;ml=ly[4];do ly[wl+0X1]=ml;end;(ly)[wl]=ml[xs[0X0001]];xs=bc[ty];ty=ty+1;(ly)[0X00006]=xs[0X006];do ty=ty+1;end;do wl=4;end;ly[wl](ly[wl+1],ly[wl+2]);Uy=wl-0X1;xs=bc[ty];ty=ty+0X0001;ly[0X4]=Iy[xs[6]];xs=bc[ty];ty=ty+0X1;ly[4]=ly[4][xs[1]];do xs=bc[ty];end;ty=ty+1;(ly)[5]=xs[6];ty=ty+1;wl=4;(ly[wl])(ly[wl+0X0001]);Uy=wl-1;xs=bc[ty];ty=ty+0X00001;(ly)[0X04]=Iy[xs[0X0006]];ty=ty+0X00001;ty=ty+0x01;do xs=bc[ty];end;do ty=ty+0X01;end;if ly[4]then ty=xs[5];end;else(ly)[4]=nil;do xs=bc[ty];end;ty=ty+1;do(Iy)[xs[6]]=ly[0x04];end;xs=bc[ty];ty=ty+0x1;ty=xs[5];end;else if ys==8 then if not(not(ly[xs[5]]<ly[xs[0X00004]]))then else ty=xs[0X2];end;else(ly)[xs[0X002]]=ly[xs[5]]%ly[xs[0x4]];end;end;end;end;else do if ys<0X00003 then if ys>=1 then if ys~=2 then if ly[xs[0x5]]<xs[0x1]then ty=xs[2];end;else local K6,q6=jc[0],(1);(ly)[1]=K6[1][K6[2]];ty=ty+1;ty=ty+0X1;xs=bc[ty];ty=ty+0X1;local L6=ly[0x1];(ly)[q6+1]=L6;(ly)[q6]=L6[xs[0X01]];ty=ty+1;q6=0X001;(ly[q6])(ly[q6+1]);Uy=q6-0X1;ty=ty+0X1;ty=ty+0X00001;do xs=bc[ty];end;ty=ty+1;ty=xs[0x5];end;else local CW=(ly[0X0]);local MW=(1);(ly)[MW+1]=CW;ly[MW]=CW[xs[0x1]];do xs=bc[ty];end;ty=ty+0X1;ly[3]=xs[0X6];ty=ty+0X1;MW=1;do ly[MW]=ly[MW](ly[MW+1],ly[MW+2]);end;Uy=MW;xs=bc[ty];do ty=ty+1;end;if not(not ly[1])then else ty=xs[0X5];end;end;else if ys>=5 then if ys==6 then ly[0X0005]=Iy[xs[0X0006]];xs=bc[ty];ty=ty+1;ly[5]=ly[0x5][xs[1]];ty=ty+1;ty=ty+0X01;xs=bc[ty];ty=ty+0X1;if not ly[5]then do ty=xs[0X5];end;end;else ly[xs[0X2]]={E({},0x001,xs[0X05])};end;else do if ys~=4 then do ly[xs[2]]=xs[6];end;else end;end;end;end;end;end;else if ys<23 then if not(ys<19)then if not(ys<21)then if ys==22 then(ly)[xs[0x2]]=ly[xs[0X5]][xs[1]];else do(ly)[0X0]=Iy[xs[0X6]];end;xs=bc[ty];ty=ty+0X1;do(ly)[0X00]=ly[0X0][xs[0X0001]];end;do xs=bc[ty];end;ty=ty+0X1;if not ly[0]then do ty=xs[0x05];end;end;end;else if ys==0X14 then if not(not ly[xs[2]])then else ty=xs[0X5];end;else ly[1]=ly[0X0][xs[0x1]];xs=bc[ty];do ty=ty+0X001;end;ly[2]=Iy[xs[6]];local IS=jc[0x0];ty=ty+1;ty=ty+1;ty=ty+0x1;do Uy=0x002;end;(ly)[Uy]=ly[Uy]();xs=bc[ty];ty=ty+1;ly[3]=xs[6];ty=ty+0X001;local TS=(4);ly[0X4]=IS[0x1][IS[2]];ty=ty+0X01;do ty=ty+0x1;end;xs=bc[ty];ty=ty+0X001;local DS=(ly[0X4]);do(ly)[TS+0X1]=DS;end;(ly)[TS]=DS[xs[0X1]];ty=ty+1;TS=0X0004;ly[TS](ly[TS+0X01]);Uy=TS-0X00001;ty=ty+1;do ty=ty+1;end;xs=bc[ty];ty=ty+0X001;ty=xs[5];end;end;else if ys>=0X0011 then if ys~=18 then local en=jc[0];(ly)[0X5]=en[0x01][en[2]];xs=bc[ty];local rn=(5);ty=ty+1;local Mn=ly[0X5];(ly)[rn+1]=Mn;ly[rn]=Mn[xs[1]];ty=ty+0X1;do rn=5;end;do ly[rn]=ly[rn](ly[rn+0X1]);end;do Uy=rn;end;do ty=ty+0x1;end;ty=ty+1;do xs=bc[ty];end;do ty=ty+1;end;if not(ly[0X5])then else do ty=xs[5];end;end;else local z6=Uc[xs[5]];local h6=(nil);local K6=z6[5];local q6=(#K6);if not(q6>0)then else do h6={};end;for X5=0x1,q6 do local a5=K6[X5];if a5[1]==0X0 then(h6)[X5-1]={ly,a5[2]};else h6[X5-1]=jc[a5[0X00002]];end;end;S(Lc,h6);end;(ly)[xs[2]]=e3(z6,h6,Iy);end;else do if ys~=16 then ly[xs[0X2]]=by[xs[5]];else(ly)[0]=Iy[xs[0X6]];do ty=ty+1;end;do ty=ty+1;end;ty=ty+1;Uy=0X0;ly[Uy]=ly[Uy]();xs=bc[ty];ty=ty+1;if ly[0]then ty=xs[5];end;end;end;end;end;else if not(ys>=0x1B)then if not(ys>=25)then if ys~=0X000018 then ly[xs[2]]=Iy[xs[6]];else local J2,E2=jc[0],0;ly[0]=J2[0X1][J2[2]];ty=ty+0x01;ty=ty+0X1;xs=bc[ty];ty=ty+0X1;local p2=ly[0];ly[E2+0X1]=p2;ly[E2]=p2[xs[1]];ty=ty+1;E2=0;(ly)[E2]=ly[E2](ly[E2+0X001]);do Uy=E2;end;ty=ty+1;ty=ty+1;xs=bc[ty];ty=ty+1;if not(not ly[0])then else ty=xs[0X05];end;end;else if ys~=26 then(ly)[0X0]=Iy[xs[6]];ty=ty+0x001;Uy=0X00000;(ly)[Uy]=ly[Uy]();do ty=ty+1;end;ty=ty+1;xs=bc[ty];ty=ty+0X1;ly[0X1]=Iy[xs[6]];do ty=ty+0x001;end;do ty=ty+0X1;end;do ty=ty+0X1;end;do ly[0]=ly[0X0]-ly[1];end;xs=bc[ty];ty=ty+1;do if xs[6]<ly[0X0]then do ty=xs[2];end;end;end;else ly[xs[2]]=ly[xs[5]]==ly[xs[4]];end;end;else if ys>=0X1d then if ys==0X1E then if ly[xs[0X2]]then do ty=xs[5];end;end;else repeat local ag,pg=Lc,ly;if#ag>0 then local ah={};for pS,PS in M,ag do for eC,XC in M,PS do do if XC[1]==pg and XC[2]>=0 then local uK=XC[0X2];do if not ah[uK]then do(ah)[uK]={pg[uK]};end;end;end;(XC)[0X001]=ah[uK];(XC)[2]=1;end;end;end;end;end;until true;do return;end;end;else do if ys~=0X00001c then ly[0]=Iy[xs[0x0006]];local pN=0X2;ty=ty+0X00001;ty=ty+0X1;ty=ty+0X1;ly[1]=nil;xs=bc[ty];ty=ty+1;(ly)[0X2]=Iy[xs[6]];ty=ty+0x1;ty=ty+1;xs=bc[ty];do ty=ty+0X1;end;ly[2]=ly[2][xs[1]];do ty=ty+1;end;do ty=ty+1;end;xs=bc[ty];do ty=ty+1;end;local cN=ly[0X02];ly[pN+1]=cN;do ly[pN]=cN[xs[1]];end;ty=ty+0X001;pN=2;(ly)[pN]=ly[pN](ly[pN+0X00001]);Uy=pN;xs=bc[ty];ty=ty+0X0001;do(ly)[0x3]=Iy[xs[0X006]];end;do ty=ty+1;end;ty=ty+1;ty=ty+0X001;pN=0;Uy=pN+0X04-0X001;ly[pN]=ly[pN](E(ly,pN+0X01,Uy));do Uy=pN;end;do ty=ty+0X00001;end;ty=ty+1;xs=bc[ty];ty=ty+0X1;if not(not ly[0X0])then else ty=xs[0X5];end;else local FE,oE=0X5,(ly[0X000]);ly[FE+1]=oE;ly[FE]=oE[xs[1]];do xs=bc[ty];end;ty=ty+0X1;(ly)[0X07]=xs[0X00006];ty=ty+1;(ly)[0X8]=true;do ty=ty+1;end;FE=5;do Uy=FE+4-1;end;ly[FE]=ly[FE](E(ly,FE+1,Uy));Uy=FE;xs=bc[ty];ty=ty+0x1;do if not ly[0X0005]then ty=xs[5];end;end;end;end;end;end;end;end;end;end;end;end);if cy then if Ay then if dy==0x1 then return ly[iy]();else return ly[iy](E(ly,iy+0X1,Uy));end;elseif iy then return E(ly,iy,dy);end;else if V(Ay)=='\115\116ring'then if not(r(Ay,"\097\116\116empt t\111 yi\101ld\032a\099r\111\115\115\032\109\101\116\097m\101th\111\100/C%-c\097\108\108 \098o\117n\100\097ry"))then else return coroutine.yield();end;if not(r(Ay,"^.-:%d+: "))then q(Ay,0);else q('L\117r\097\112h S\099\114ipt:'..(Qc[ty-1]or"\040\105n\116\101\114\110al)")..": "..u(Ay),0X00000);end;else q(Ay,0);end;end;end;end;else if Sc==198 then ic=function(...)local ZH={};local IH=(1);local VH=((k and k()or _ENV));local jH=((VH==H and fc or VH));local AH={[1]=ZH,[2]=Vc};local DH,bH=q3(...);DH=DH-1;for Xo=0,DH do do if not(ac>Xo)then break;else(ZH)[Xo]=bH[Xo+1];end;end;end;if not nc then bH=nil;elseif not(Ac)then else ZH[ac]={n=DH>=ac and DH-ac+0X1 or 0,E(bH,ac+1,DH+1)};end;local cH=(0);if jH==VH then else if s then s(ic,jH);else do _ENV=jH;end;end;end;local rH,dH,fH,BH=c(function()do while true do local AZ=bc[IH];local mZ=AZ[3];IH=IH+0X1;if mZ<0x7 then if not(mZ>=3)then if not(mZ<0X00001)then if mZ~=2 then IH=AZ[0X5];else ZH[AZ[0X2]]=T(ZH[AZ[0X5]],ZH[AZ[0x4]]);end;else for l6=AZ[2],AZ[5]do do ZH[l6]=nil;end;end;end;else if not(mZ<5)then if mZ==0X006 then ZH[1]=jH[AZ[0X6]];IH=IH+0X1;IH=IH+1;AZ=bc[IH];IH=IH+1;do ZH[0x0002]=AZ[0X6];end;AZ=bc[IH];local CS=(3);IH=IH+1;ZH[3]=jH[AZ[0X6]];AZ=bc[IH];local jS=0X0;IH=IH+1;(ZH)[3]=ZH[0X3][AZ[1]];IH=IH+1;IH=IH+1;AZ=bc[IH];IH=IH+1;(ZH)[4]=AZ[6];AZ=bc[IH];do IH=IH+1;end;(ZH)[0X00005]=AZ[0X06];AZ=bc[IH];IH=IH+1;do(ZH)[0X6]=AZ[6];end;do IH=IH+1;end;local WS=0X4;do if WS~=0 then cH=CS+WS-1;end;end;local gS,MS=nil,(nil);if WS==1 then gS,MS=q3(ZH[CS]());else gS,MS=q3(ZH[CS](E(ZH,CS+1,cH)));end;if jS~=1 then if jS~=0 then gS=CS+jS-2;cH=gS+0X1;else gS=gS+CS-1;do cH=gS;end;end;local hG=0;for P8=CS,gS do hG=hG+0x1;(ZH)[P8]=MS[hG];end;else do cH=CS-0X1;end;end;IH=IH+0x001;CS=0X00001;(ZH[CS])(E(ZH,CS+1,cH));cH=CS-1;do IH=IH+0X0001;end;IH=IH+0X01;else ZH[AZ[0X00002]]=ZH[AZ[5]]>=ZH[AZ[4]];end;else do if mZ==4 then if not(not ZH[AZ[0X0002]])then else IH=AZ[0X5];end;else ZH[AZ[0X02]]={E({},1,AZ[5])};end;end;end;end;else if mZ<11 then do if not(mZ<0X0009)then if mZ==10 then repeat local bo,ao=Lc,(ZH);if#bo>0X0 then local G9={};do for oX,DX in M,bo do for XP,mP in M,DX do if not(mP[1]==ao and mP[0x2]>=0)then else local SS=(mP[2]);if not(not G9[SS])then else(G9)[SS]={ao[SS]};end;mP[1]=G9[SS];mP[2]=0X1;end;end;end;end;end;until true;do return;end;else do(ZH)[AZ[2]]=AZ[0X6];end;end;else if mZ==8 then do(ZH)[0X1]=jH[AZ[6]];end;IH=IH+0X1;IH=IH+0X1;AZ=bc[IH];do IH=IH+1;end;do ZH[2]=jH[AZ[0X0006]];end;AZ=bc[IH];do IH=IH+1;end;(ZH)[2]=ZH[2][AZ[0X001]];do AZ=bc[IH];end;IH=IH+1;do(ZH)[0X2]=ZH[0X02][AZ[0X01]];end;do IH=IH+0X1;end;IH=IH+1;local yj=0X1;do AZ=bc[IH];end;IH=IH+0X001;ZH[0x03]=jH[AZ[6]];AZ=bc[IH];IH=IH+0X1;(ZH)[3]=ZH[0x03][AZ[1]];do AZ=bc[IH];end;IH=IH+1;do(ZH)[0X003]=ZH[3][AZ[0x0001]];end;IH=IH+1;do IH=IH+0X1;end;IH=IH+0X01;(ZH)[yj]=ZH[yj](ZH[yj+1],ZH[yj+2]);cH=yj;IH=IH+0X01;IH=IH+1;do AZ=bc[IH];end;do IH=IH+1;end;do if not(AZ[6]<ZH[1])then IH=AZ[0x2];end;end;else local tO=nil;local VO=(Uc[AZ[5]]);local kO=(VO[0X00005]);local GO=#kO;if GO>0 then tO={};for NX=0X1,GO do local OX=(kO[NX]);if OX[0x1]==0X0 then do tO[NX-1]={ZH,OX[0X2]};end;else(tO)[NX-0X1]=jc[OX[0X2]];end;end;S(Lc,tO);end;do(ZH)[AZ[2]]=e3(VO,tO,jH);end;end;end;end;else if not(mZ>=0X000d)then if mZ~=0XC then ZH[AZ[0X2]]=jH[AZ[0x6]];else do ZH[AZ[2]]=true;end;end;else do if mZ==14 then(ZH)[AZ[2]]=ZH[AZ[0X5]]<=ZH[AZ[4]];else end;end;end;end;end;end;end;end);if rH then if dH then if BH~=1 then return ZH[fH](E(ZH,fH+0x1,cH));else do return ZH[fH]();end;end;elseif fH then do return E(ZH,fH,BH);end;end;else if V(dH)=="s\116r\105ng"then if not(r(dH,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(r(dH,"^.-:%d+: "))then q(dH,0x0);else(q)('Lur\097p\104\032Sc\114\105\112\116\058'..(Qc[IH-1]or'\040in\116\101\114n\097l)')..": "..u(dH),0x00000);end;else(q)(dH,0);end;end;end;else ic=function(...)local V1,R1=0X01,{};local u1,e1={[2]=Vc,[1]=R1},(0X0);local y1=((k and k()or _ENV));local s1=(y1==H and fc or y1);local v1,k1=q3(...);v1=v1-0X01;for x5=0,v1 do if ac>x5 then(R1)[x5]=k1[x5+1];else break;end;end;if not nc then k1=nil;elseif not(Ac)then else do(R1)[ac]={n=v1>=ac and v1-ac+0X1 or 0X00000,E(k1,ac+1,v1+0X1)};end;end;if s1~=y1 then if s then s(ic,s1);else _ENV=s1;end;end;local w1,l1,i1,Q1=c(function()do while true do local nF=(bc[V1]);local sF=(nF[3]);do V1=V1+1;end;if sF>=7 then if sF<0x0A then if not(sF<0X8)then if sF~=0X0009 then repeat local Jk,Ik,uk=Lc,R1,nF[0x002];do if not(#Jk>0)then else local Uw=({});for jV,XV in M,Jk do for KK,jK in M,XV do if not(jK[1]==Ik and jK[0X02]>=uk)then else local gJ=jK[2];if not Uw[gJ]then do(Uw)[gJ]={Ik[gJ]};end;end;jK[1]=Uw[gJ];(jK)[2]=1;end;end;end;end;end;until true;else local kR=((nF[4]-1)*50);local ER=nF[2];local AR=(R1[ER]);for jv=1,nF[0X5]do AR[kR+jv]=R1[ER+jv];end;end;else do V1=nF[0X5];end;end;else if not(sF>=0x0c)then if sF~=0X00B then local t1=Uc[nF[0X00005]];local j1=(t1[5]);local F1=nil;local c1=#j1;if c1>0 then do F1={};end;do for f2=1,c1 do local t2=j1[f2];if t2[1]==0 then F1[f2-1]={R1,t2[0X2]};else F1[f2-1]=jc[t2[0X2]];end;end;end;(S)(Lc,F1);end;R1[nF[0X2]]=e3(t1,F1,s1);else local rR,gR=nF[0x2],(nF[0x5]);e1=rR+gR-0X1;do repeat local xo,Ro=Lc,R1;if#xo>0X0 then local TW=({});for O6,e6 in M,xo do do for kE,ZE in M,e6 do do if ZE[0X0001]==Ro and ZE[0x2]>=0 then local Ep=(ZE[2]);if not TW[Ep]then(TW)[Ep]={Ro[Ep]};end;ZE[0X01]=TW[Ep];do ZE[2]=1;end;end;end;end;end;end;end;until true;end;return true,rR,gR;end;else if sF==0XD then else(R1)[0]=s1[nF[6]];local jD=R1[0x0000];do nF=bc[V1];end;do V1=V1+0X00001;end;local dD=(0X0);(R1)[dD+1]=jD;R1[dD]=jD[nF[0X1]];do nF=bc[V1];end;do V1=V1+1;end;(R1)[2]=nF[6];nF=bc[V1];V1=V1+0X1;do R1[0X3]=s1[nF[0x00006]];end;nF=bc[V1];do V1=V1+1;end;do R1[3]=R1[0X3][nF[1]];end;V1=V1+0x1;V1=V1+1;nF=bc[V1];V1=V1+0X00001;(R1)[4]=s1[nF[6]];nF=bc[V1];V1=V1+1;R1[4]=R1[0X00004][nF[0x1]];nF=bc[V1];V1=V1+0X00001;R1[4]=R1[4][nF[0x01]];V1=V1+1;V1=V1+1;V1=V1+1;do dD=3;end;do R1[dD]=R1[dD](R1[dD+0x01]);end;e1=dD;local zD=(2);V1=V1+1;(R1)[2]=R1[zD]..R1[zD+0X1];V1=V1+0X01;dD=0x0;R1[dD](R1[dD+1],R1[dD+0x2]);e1=dD-0X1;do V1=V1+0X1;end;do repeat local V_,P_=Lc,(R1);if#V_>0X0 then local ZX=({});for pt,Mt in M,V_ do for ZC,hC in M,Mt do if hC[1]==P_ and hC[0x2]>=0X0 then local At=hC[0x0002];if not(not ZX[At])then else ZX[At]={P_[At]};end;do hC[0X1]=ZX[At];end;hC[2]=1;end;end;end;end;until true;end;return;end;end;end;else if not(sF>=0X3)then if not(sF<1)then if sF==2 then R1[nF[0X2]]=T(R1[nF[0x05]],R1[nF[4]]);else(R1)[nF[2]]=s1[nF[6]];end;else R1[nF[2]]=nF[0X0006];end;else do if sF>=5 then if sF~=0x6 then(R1)[nF[2]]=R1[nF[0x5]]>=R1[nF[0x00004]];else do(R1)[nF[0X002]]=R1[nF[5]]~=R1[nF[0X4]];end;end;else if sF~=4 then R1[nF[0X2]]={E({},0X0001,nF[5])};else local Mn=(nF[5]);local jn=R1[Mn];for LO=Mn+0x001,nF[0x4]do jn=jn..R1[LO];end;(R1)[nF[2]]=jn;end;end;end;end;end;end;end;end);if not(w1)then if V(l1)~="string"then q(l1,0X0);else if r(l1,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(l1,"^\046-\058%\100\043:\032"))then q(l1,0);else q('Lu\114a\112\104 \083\099r\105pt:'..(Qc[V1-1]or'\040int\101\114\110a\108\041')..": "..u(l1),0x0);end;end;else do if l1 then if Q1~=1 then return R1[i1](E(R1,i1+0X01,e1));else return R1[i1]();end;elseif i1 then return E(R1,i1,Q1);end;end;end;end;end;end;else if not(Sc>=203)then if Sc==202 then ic=function(...)local Po=(0X1);local Ro,xo={},0;local jo=((k and k()or _ENV));local ao,Do=q3(...);local zo,Lo=(jo==H and fc or jo),({[1]=Ro,[2]=Vc});do ao=ao-1;end;for Pn=0X000,ao do if not(ac>Pn)then break;else Ro[Pn]=Do[Pn+1];end;end;do if not nc then Do=nil;elseif not(Ac)then else(Ro)[ac]={n=ao>=ac and ao-ac+0X1 or 0,E(Do,ac+1,ao+1)};end;end;if zo==jo then else if s then s(ic,zo);else _ENV=zo;end;end;do while true do local CB=(bc[Po]);local XB=CB[3];Po=Po+0x1;return(function(o,E,...)local P,p=o[0],o[1];_C("StartQuest",P,p);end)(Ro,jc,...);end;end;end;else ic=function(...)local LH=(1);local NH={};local RH=((k and k()or _ENV));local SH={[1]=NH,[2]=Vc};local yH,vH=q3(...);local kH=(0);do yH=yH-0X01;end;local nH=((RH==H and fc or RH));for B9=0x000,yH do if ac>B9 then do(NH)[B9]=vH[B9+0X1];end;else do break;end;end;end;do if not nc then vH=nil;elseif not(Ac)then else(NH)[ac]={n=yH>=ac and yH-ac+0X01 or 0,E(vH,ac+1,yH+1)};end;end;do if nH==RH then else if not(s)then _ENV=nH;else s(ic,nH);end;end;end;local hH,MH,VH,tH=c(function()do while true do local pG=bc[LH];local hG=(pG[3]);do LH=LH+1;end;if hG<0X8 then if hG<0X00004 then if not(hG>=0x2)then if hG==0X001 then NH[0X0]=nH[pG[6]];local Gq=NH[0];pG=bc[LH];LH=LH+0X001;local eq=0x0;(NH)[eq+1]=Gq;NH[eq]=Gq[pG[0x001]];pG=bc[LH];LH=LH+0X1;NH[2]=pG[6];do LH=LH+0X01;end;eq=0X0;(NH)[eq]=NH[eq](NH[eq+1],NH[eq+2]);local nq=(nil);kH=eq;do LH=LH+1;end;LH=LH+1;pG=bc[LH];LH=LH+1;NH[0X1]=nH[pG[0X6]];pG=bc[LH];LH=LH+0X1;(NH)[0X0001]=NH[0X01][pG[1]];pG=bc[LH];LH=LH+0X1;local tq=(Uc[pG[5]]);local Cq=(tq[0x00005]);local Rq=#Cq;if not(Rq>0)then else do nq={};end;do for V0=1,Rq do local W0=Cq[V0];if W0[1]==0X00000 then do(nq)[V0-1]={NH,W0[0X2]};end;else do(nq)[V0-1]=jc[W0[2]];end;end;end;end;S(Lc,nq);end;(NH)[0x2]=e3(tq,nq,nH);LH=LH+0X1;eq=1;(NH[eq])(NH[eq+1]);kH=eq-0x01;LH=LH+1;LH=LH+1;do LH=LH+0X0001;end;repeat local xL,lL=Lc,NH;do if#xL>0 then local Tl=({});do for pf,Wf in M,xL do for b4,O4 in M,Wf do if O4[1]==lL and O4[0x0002]>=0 then local kk=O4[2];if not Tl[kk]then do Tl[kk]={lL[kk]};end;end;O4[1]=Tl[kk];do(O4)[0X2]=1;end;end;end;end;end;end;end;until true;return;else NH[pG[2]]=nH[pG[0X6]];end;else do if hG==3 then LH=pG[5];else repeat local ma,ga=Lc,NH;do if not(#ma>0X00)then else local Co=({});do for j4,P4 in M,ma do for oj,Dj in M,P4 do if not(Dj[0X1]==ga and Dj[0x2]>=0)then else local rt=(Dj[2]);if not(not Co[rt])then else do Co[rt]={ga[rt]};end;end;Dj[0X1]=Co[rt];do Dj[0X2]=0X1;end;end;end;end;end;end;end;until true;return;end;end;end;else if hG>=0X006 then if hG==7 then if not(NH[pG[0X02]])then else do LH=pG[5];end;end;else NH[pG[2]]=J(NH[pG[5]],NH[pG[4]]);end;else if hG==0x05 then(NH)[pG[0X0002]]=NH[pG[0x5]]<=NH[pG[0X4]];else local oC=(Uc[pG[0X5]]);local CC=(oC[0X00005]);local AC=(nil);local RC=(#CC);if RC>0X0 then do AC={};end;for sZ=1,RC do local cZ=(CC[sZ]);if cZ[0x1]==0 then do AC[sZ-0x001]={NH,cZ[2]};end;else(AC)[sZ-1]=jc[cZ[0X0002]];end;end;(S)(Lc,AC);end;NH[pG[0X00002]]=e3(oC,AC,nH);end;end;end;else if not(hG<12)then do if hG<14 then if hG==0XD then for GF=pG[0X2],pG[5]do(NH)[GF]=nil;end;else(NH)[pG[2]]=NH[pG[5]]/NH[pG[4]];end;else do if not(hG<0XF)then if hG==16 then NH[pG[0X2]]={E({},1,pG[0x5])};else end;else local qL=pG[2];for r_=qL,qL+(pG[0x5]-1)do do NH[r_]=vH[ac+(r_-qL)+1];end;end;end;end;end;end;else if not(hG>=10)then do if hG~=0X9 then NH[pG[2]]=SH[pG[0X5]];else NH[pG[0X0002]]=-NH[pG[5]];end;end;else do if hG==11 then NH[pG[2]]=pG[6];else if NH[pG[5]]<=NH[pG[0X4]]then LH=pG[0X2];end;end;end;end;end;end;end;end;end);if hH then if MH then if tH==0X1 then return NH[VH]();else return NH[VH](E(NH,VH+0X1,kH));end;elseif not(VH)then else do return E(NH,VH,tH);end;end;else if V(MH)~="string"then q(MH,0x000);else if r(MH,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(MH,"^.-:%d+: "))then q(MH,0);else(q)('Lu\114\097ph \083c\114\105p\116\058'..(Qc[LH-1]or'\040i\110\116er\110\097l\041').."\058\032"..u(MH),0);end;end;end;end;end;else do if Sc~=204 then ic=function(...)local Vo=({});local Jo=1;local eo=(k and k()or _ENV);local Ko,Do=q3(...);local vo,Yo={[2]=Vc,[1]=Vo},(eo==H and fc or eo);local Io=0;do Ko=Ko-1;end;for qH=0X000,Ko do if ac>qH then Vo[qH]=Do[qH+0X00001];else break;end;end;if not nc then Do=nil;elseif not(Ac)then else Vo[ac]={n=Ko>=ac and Ko-ac+0x1 or 0X00000,E(Do,ac+0x1,Ko+0X01)};end;if Yo~=eo then if not(s)then do _ENV=Yo;end;else s(ic,Yo);end;end;while true do local wj=(bc[Jo]);local lj=(wj[0X3]);do Jo=Jo+1;end;return(function(U,E,...)local J=Client.Backpack:GetChildren();local j=Client.Character:GetChildren();for g=1,#J do local u=J[g];if u.Name:lower():find("microchip")then return true;end;end;for L=1,#j do local C=j[L];if C:IsA("Tool")and C.Name:lower():find("microchip")then return true;end;end;end)(Vo,jc,...);end;end;else ic=function(...)local UK,bK=0X00001,{};local tK=({[2]=Vc,[1]=bK});local XK=(k and k()or _ENV);local rK=(0);local DK=(XK==H and fc or XK);local BK,LK=q3(...);BK=BK-0X1;for sp=0,BK do do if not(ac>sp)then break;else(bK)[sp]=LK[sp+1];end;end;end;do if not nc then do LK=nil;end;elseif Ac then bK[ac]={n=BK>=ac and BK-ac+1 or 0X0,E(LK,ac+1,BK+1)};end;end;if DK==XK then else if not(s)then _ENV=DK;else s(ic,DK);end;end;local uK,eK,lK,yK=c(function()do while true do local Pp=(bc[UK]);local Gp=(Pp[3]);do UK=UK+1;end;if Gp<15 then if Gp<0X7 then if Gp>=0X03 then if Gp<5 then if Gp==4 then(bK)[0]=DK[Pp[0X6]];UK=UK+1;UK=UK+1;Pp=bc[UK];do UK=UK+0X0001;end;bK[0]=bK[0X00000][Pp[0X0001]];Pp=bc[UK];UK=UK+1;if not(bK[0x0])then else do UK=Pp[5];end;end;else(bK)[0x0]=DK[Pp[0X6]];UK=UK+0X01;do UK=UK+0x1;end;do Pp=bc[UK];end;do UK=UK+0x00001;end;bK[0]=bK[0x0][Pp[0x1]];local E4=0;UK=UK+0x1;UK=UK+1;do Pp=bc[UK];end;do UK=UK+1;end;(bK)[0]=bK[0][Pp[0X1]];do Pp=bc[UK];end;do UK=UK+1;end;local A4=(bK[0X0000]);(bK)[E4+0x1]=A4;bK[E4]=A4[Pp[0X1]];UK=UK+0X1;E4=0;(bK)[E4]=bK[E4](bK[E4+0x1]);rK=E4;do Pp=bc[UK];end;UK=UK+1;if not bK[0]then UK=Pp[5];end;end;else if Gp~=6 then(bK)[0X00000]=DK[Pp[0X6]];UK=UK+0x1;do UK=UK+1;end;local RO=(0X000);Pp=bc[UK];UK=UK+1;do bK[0]=bK[0x0][Pp[1]];end;Pp=bc[UK];UK=UK+0X00001;(bK[0])[Pp[0x6]]=Pp[1];Pp=bc[UK];do UK=UK+1;end;(bK)[0X0000]=DK[Pp[6]];Pp=bc[UK];UK=UK+0x1;bK[0]=bK[0][Pp[1]];Pp=bc[UK];UK=UK+0x1;local iO=(bK[0]);bK[RO+1]=iO;do bK[RO]=iO[Pp[0X00001]];end;Pp=bc[UK];local mO=(2);UK=UK+1;(bK)[0X2]=Pp[0X00006];UK=UK+0X01;do RO=0;end;(bK[RO])(bK[RO+1],bK[RO+2]);rK=RO-1;UK=UK+1;UK=UK+0X1;Pp=bc[UK];do UK=UK+1;end;(bK)[0X0]=DK[Pp[0x6]];Pp=bc[UK];UK=UK+1;(bK)[0X00001]=DK[Pp[6]];UK=UK+1;RO=0;local GO=4;if mO==0X0 then else rK=RO+mO-1;end;local xO,hO=nil,(nil);if mO~=1 then xO,hO=q3(bK[RO](E(bK,RO+1,rK)));else xO,hO=q3(bK[RO]());end;do if GO~=1 then if GO==0 then xO=xO+RO-0x01;rK=xO;else xO=RO+GO-0X0002;do rK=xO+0X1;end;end;local wa=0X0000;for xa=RO,xO do wa=wa+0x0001;do(bK)[xa]=hO[wa];end;end;else rK=RO-0X1;end;end;UK=UK+0X1;UK=UK+1;Pp=bc[UK];do UK=UK+1;end;RO=0X00;local IO=P(function(...)(C)();for ax,cx in...do C(true,ax,cx);end;end);IO(bK[RO],bK[RO+0X0001],bK[RO+2]);rK=RO;do bK[RO]=IO;end;UK=Pp[0x5];else bK[Pp[2]]=DK[Pp[6]];end;end;else do if Gp<0x1 then(bK)[0]={};Pp=bc[UK];UK=UK+0X1;do DK[Pp[6]]=bK[0X0];end;Pp=bc[UK];UK=UK+0X001;UK=Pp[5];else if Gp==2 then do(bK)[0X000]=DK[Pp[6]];end;do UK=UK+0X001;end;UK=UK+1;do Pp=bc[UK];end;UK=UK+1;bK[0]=bK[0][Pp[0x0001]];UK=UK+0X1;UK=UK+1;Pp=bc[UK];do UK=UK+0X1;end;if bK[0]then do UK=Pp[5];end;end;else do for Ba=Pp[2],Pp[5]do bK[Ba]=nil;end;end;end;end;end;end;else do if not(Gp<11)then if not(Gp<0x00d)then do if Gp==0XE then if not bK[Pp[2]]then UK=Pp[0x5];end;else(bK)[0X0]=DK[Pp[6]];do Pp=bc[UK];end;UK=UK+1;bK[0]=bK[0x0000][Pp[0x0001]];do UK=UK+1;end;UK=UK+0X1;Pp=bc[UK];UK=UK+1;if not bK[0X0000]then UK=Pp[5];end;end;end;else do if Gp==0X0000c then tK[Pp[5]]=bK[Pp[0x2]];else do(bK)[4]=DK[Pp[6]];end;local YZ=bK[4];Pp=bc[UK];do UK=UK+1;end;local GZ=(0x4);(bK)[GZ+0x1]=YZ;bK[GZ]=YZ[Pp[0x0001]];Pp=bc[UK];UK=UK+1;bK[0X6]=Pp[6];UK=UK+0x1;GZ=4;do bK[GZ]=bK[GZ](bK[GZ+1],bK[GZ+0X2]);end;rK=GZ;UK=UK+1;UK=UK+0X1;Pp=bc[UK];UK=UK+1;if not bK[0x4]then UK=Pp[5];end;end;end;end;else if Gp<9 then if Gp==8 then(bK)[0X0004]=DK[Pp[6]];UK=UK+0X01;UK=UK+1;UK=UK+1;(bK)[0X4]=#bK[4];Pp=bc[UK];do UK=UK+0X1;end;if not(Pp[6]<bK[4])then UK=Pp[0X02];end;else repeat local kX,OX=Lc,bK;if not(#kX>0X0)then else local sc=({});for jh,ph in M,kX do do for GI,rI in M,ph do if not(rI[1]==OX and rI[0X2]>=0X00)then else local rn=(rI[2]);if not sc[rn]then do sc[rn]={OX[rn]};end;end;do(rI)[1]=sc[rn];end;rI[0X2]=1;end;end;end;end;end;until true;do return;end;end;else do if Gp~=0Xa then UK=Pp[0X5];else(bK)[0X0000]=DK[Pp[6]];UK=UK+0X1;UK=UK+1;do Pp=bc[UK];end;do UK=UK+1;end;if not bK[0]then do UK=Pp[0x5];end;end;end;end;end;end;end;end;else if not(Gp<0X17)then if Gp<27 then if not(Gp<0X000019)then if Gp~=0X01a then local XX=Uc[Pp[0X5]];local mX,GX=XX[5],(nil);local LX=#mX;if not(LX>0)then else do GX={};end;do for J8=1,LX do local B8=(mX[J8]);if B8[0X001]~=0 then(GX)[J8-0X1]=jc[B8[0x2]];else(GX)[J8-0x00001]={bK,B8[2]};end;end;end;S(Lc,GX);end;bK[Pp[2]]=e3(XX,GX,DK);else end;else if Gp~=0X18 then do bK[Pp[2]]=w(bK[Pp[5]],bK[Pp[4]]);end;else local Dx=(Pp[0X2]);local ax,Ox,Jx=bK[Dx]();if ax then(bK)[Dx+0X1]=Ox;bK[Dx+2]=Jx;UK=Pp[0x5];end;end;end;else if not(Gp<29)then if Gp==30 then(bK)[Pp[2]]=bK[Pp[0X00005]]+bK[Pp[0X4]];else(bK)[2]=DK[Pp[6]];do Pp=bc[UK];end;UK=UK+0X01;bK[0X00002]=bK[2][Pp[1]];UK=UK+0X00001;UK=UK+1;do Pp=bc[UK];end;UK=UK+0X1;(bK)[0X03]=DK[Pp[6]];UK=UK+1;do UK=UK+1;end;Pp=bc[UK];UK=UK+0X01;bK[0X3]=bK[3][Pp[1]];UK=UK+0X1;UK=UK+1;Pp=bc[UK];UK=UK+0x1;do bK[0X3]=bK[0X003][Pp[0x0001]];end;UK=UK+0X1;UK=UK+0x001;Pp=bc[UK];UK=UK+1;if bK[2]~=bK[3]then else do UK=Pp[2];end;end;end;else if Gp==28 then bK[0X000]=DK[Pp[6]];UK=UK+1;UK=UK+1;Pp=bc[UK];UK=UK+0X1;if not(bK[0])then else UK=Pp[0X5];end;else(bK)[Pp[2]]={E({},1,Pp[5])};end;end;end;else if Gp>=19 then if not(Gp>=21)then do if Gp==0X14 then local Ta=(Pp[2]);local ya,qa=bK[Ta]();do if not(ya)then else for Q0=0x1,Pp[0X4]do(bK)[Ta+Q0]=qa[Q0];end;UK=Pp[0x00005];end;end;else(bK)[Pp[0x0002]]=Pp[6];end;end;else do if Gp~=0X00016 then bK[Pp[0X2]][Pp[0x06]]=Pp[1];else(bK)[Pp[0X2]]=bK[Pp[5]]==bK[Pp[4]];end;end;end;else if not(Gp<0X011)then if Gp==18 then(bK)[0]=DK[Pp[0X00006]];UK=UK+1;UK=UK+1;Pp=bc[UK];UK=UK+1;do if bK[0x000]then UK=Pp[5];end;end;else do(DK)[Pp[0X006]]=bK[Pp[0x002]];end;end;else if Gp==0X000010 then(bK)[0x0]=DK[Pp[0X06]];do UK=UK+1;end;UK=UK+1;Pp=bc[UK];UK=UK+0X1;do bK[0]=bK[0][Pp[0x1]];end;Pp=bc[UK];UK=UK+0X1;bK[1]=DK[Pp[6]];Pp=bc[UK];UK=UK+1;(bK)[1]=bK[0X1][Pp[1]];UK=UK+1;UK=UK+1;Pp=bc[UK];UK=UK+1;(bK)[1]=bK[1][Pp[0X1]];do UK=UK+1;end;UK=UK+0X1;Pp=bc[UK];UK=UK+1;if bK[0]~=bK[0X0001]then else UK=Pp[0X2];end;else bK[0x0004]=DK[Pp[0x6]];UK=UK+1;do UK=UK+0X1;end;Pp=bc[UK];UK=UK+1;if not(not bK[0X0004])then else UK=Pp[5];end;end;end;end;end;end;end;end;end);if not(uK)then if V(eK)~="string"then(q)(eK,0);else do if not(r(eK,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(r(eK,"^.-:%d+: "))then(q)(eK,0X000);else q("Luraph Script:"..(Qc[UK-1]or"\040\105nte\114n\097l)")..':\032'..u(eK),0);end;end;else if eK then if yK==1 then do return bK[lK]();end;else return bK[lK](E(bK,lK+0X001,rK));end;elseif not(lK)then else return E(bK,lK,yK);end;end;end;end;end;end;end;end;else if not(Sc<0Xd5)then if Sc<217 then if not(Sc<215)then if Sc==0X0D8 then ic=function(...)local Qa=(0);local Ya=(0X1);local Za={};local ba={[2]=Vc,[1]=Za};local oa=((k and k()or _ENV));local Ha,Ea=q3(...);local ta=((oa==H and fc or oa));Ha=Ha-1;for LW=0,Ha do if not(ac>LW)then break;else(Za)[LW]=Ea[LW+0X0001];end;end;do if not nc then Ea=nil;elseif not(Ac)then else Za[ac]={n=Ha>=ac and Ha-ac+1 or 0,E(Ea,ac+1,Ha+1)};end;end;do if ta==oa then else if s then(s)(ic,ta);else do _ENV=ta;end;end;end;end;local Pa,La,Ta,Ga=c(function()while true do local Ad=bc[Ya];local xd=(Ad[3]);do Ya=Ya+1;end;if xd>=0xC then if xd<18 then if not(xd<0xf)then if not(xd<0X010)then if xd==0x11 then local D2=jc[0];Za[8]=D2[1][D2[0x2]];Ya=Ya+0X1;do(Za)[0X00009]=Za[0X7];end;Ad=bc[Ya];do Ya=Ya+1;end;do Za[0X8][Ad[0X6]]=Za[0x9];end;do Ya=Ya+1;end;do D2=jc[0X0];end;Za[0X8]=D2[1][D2[2]];do Ya=Ya+1;end;do(Za)[0X0009]=Za[0X4];end;Ad=bc[Ya];Ya=Ya+1;Za[0X0008][Ad[6]]=Za[0X09];do Ad=bc[Ya];end;Ya=Ya+1;Ya=Ad[0X5];else local OJ=(Za[Ad[0x05]]);local zJ=Ad[2];(Za)[zJ+0x1]=OJ;(Za)[zJ]=OJ[Ad[0x1]];end;else local JT=Ad[0x2];local yT,DT=Za[JT]();if yT then Ya=Ad[5];do(Za)[JT+0X3]=DT;end;end;end;else if xd>=0XD then do if xd~=0XE then local CD,GD,XD=0X8,Za[0X7],jc[0X0];(Za)[CD+1]=GD;Za[CD]=GD[Ad[0X1]];Ya=Ya+0X1;Za[10]=XD[0x0001][XD[0x2]];Ad=bc[Ya];Ya=Ya+1;(Za)[10]=Za[0Xa][Ad[0X01]];Ya=Ya+1;CD=8;Za[CD]=Za[CD](Za[CD+0X1],Za[CD+2]);Qa=CD;do Ya=Ya+0X1;end;Ya=Ya+0X1;Ad=bc[Ya];Ya=Ya+1;if not(not Za[0X8])then else Ya=Ad[0x05];end;else(Za)[Ad[0X2]]=Ad[6];end;end;else Za[1]=ta[Ad[0X0006]];Ya=Ya+0X0001;Ya=Ya+0X1;do Ya=Ya+1;end;do Qa=1;end;do Za[Qa]=Za[Qa]();end;Ya=Ya+1;Ya=Ya+0X1;Ad=bc[Ya];Ya=Ya+0x1;do if not(Za[1])then else Ya=Ad[0x5];end;end;end;end;else if xd<0x15 then if not(xd>=0x13)then local Xv=jc[0];do(Za)[1]=Xv[1][Xv[2]];end;do Ya=Ya+0X1;end;Ya=Ya+1;do Ad=bc[Ya];end;do Ya=Ya+0x01;end;(Za)[1]=Za[1][Ad[0X1]];do Ad=bc[Ya];end;Ya=Ya+1;if not(Za[1])then else Ya=Ad[5];end;else if xd~=0X14 then Za[Ad[0X02]]=Ad[6];else(Za)[1]=Ad[6];Ad=bc[Ya];Ya=Ya+0x1;Za[2]=Ad[6];Ad=bc[Ya];Ya=Ya+0X01;local u5=(0X00001);Za[0X3]=Ad[6];do Ad=bc[Ya];end;Ya=Ya+0x1;local e5,J5=Za[u5+0x1],(Za[u5+0X002]);local o5=(Za[u5]);(Za)[u5]=P(function()for D1=o5,e5,J5 do C(true,D1);end;end);Ya=Ad[0X5];end;end;else if not(xd<23)then if xd~=24 then(Za)[Ad[0X2]]={E({},0X001,Ad[5])};else for VT=Ad[0X2],Ad[5]do Za[VT]=nil;end;end;else if xd~=22 then Za[Ad[2]]=o(Za[Ad[5]],Za[Ad[4]]);else end;end;end;end;else do if not(xd<6)then if not(xd>=0X9)then if not(xd>=0x7)then(Za)[5]=ta[Ad[6]];Ya=Ya+0X1;Ya=Ya+1;local Kf=jc[1];do Ya=Ya+0X1;end;Za[6]=Kf[1][Kf[2]];Ya=Ya+0X001;local df=(2);do Ya=Ya+1;end;local Ef=6;do Ad=bc[Ya];end;Ya=Ya+0X01;local Mf=Za[0X6];Za[Ef+1]=Mf;Za[Ef]=Mf[Ad[0X1]];Ya=Ya+0X1;do Ef=6;end;local ef=(0);if df==0 then else Qa=Ef+df-1;end;local nf,Lf=nil,(nil);if df==0x0001 then nf,Lf=q3(Za[Ef]());else nf,Lf=q3(Za[Ef](E(Za,Ef+0X1,Qa)));end;do if ef==1 then Qa=Ef-1;else do if ef~=0X0 then nf=Ef+ef-2;Qa=nf+1;else nf=nf+Ef-1;Qa=nf;end;end;local d7=(0X0);do for gX=Ef,nf do d7=d7+0X001;(Za)[gX]=Lf[d7];end;end;end;end;Ya=Ya+1;Ef=5;do df=0x0;end;ef=0X4;if df~=0X0 then do Qa=Ef+df-1;end;end;nf,Lf=nil;if df==1 then nf,Lf=q3(Za[Ef]());else nf,Lf=q3(Za[Ef](E(Za,Ef+0X0001,Qa)));end;if ef==1 then do Qa=Ef-1;end;else if ef~=0X0 then nf=Ef+ef-2;Qa=nf+1;else do nf=nf+Ef-0X1;end;Qa=nf;end;local LJ=0;for l0=Ef,nf do LJ=LJ+1;Za[l0]=Lf[LJ];end;end;Ad=bc[Ya];Ya=Ya+1;Ef=0X5;local Uf=P(function(...)C();for tU,jU in...do C(true,tU,jU);end;end);Uf(Za[Ef],Za[Ef+1],Za[Ef+2]);Qa=Ef;Za[Ef]=Uf;Ya=Ad[0X00005];else if xd==0X8 then local mB=(Ad[2]);local nB,QB,FB=Za[mB]();if not(nB)then else Za[mB+0X1]=QB;(Za)[mB+2]=FB;Ya=Ad[0X0005];end;else(Za)[0X8]=Za[0X7][Ad[0X001]];Ya=Ya+1;local qz=(8);Ya=Ya+1;Ad=bc[Ya];do Ya=Ya+0X1;end;local Kz=Za[0X00008];local wz=3;(Za)[qz+0X1]=Kz;do(Za)[qz]=Kz[Ad[0x1]];end;Ad=bc[Ya];do Ya=Ya+0X1;end;do Za[10]=Ad[6];end;Ad=bc[Ya];Ya=Ya+1;qz=10;Kz=Za[0XA];Za[qz+1]=Kz;(Za)[qz]=Kz[Ad[0X1]];Ya=Ya+0X1;Za[12]=Za[0X4];Ya=Ya+1;qz=10;local Nz=(0);if wz==0x0 then else Qa=qz+wz-1;end;local Lz,Gz=nil,nil;if wz~=1 then do Lz,Gz=q3(Za[qz](E(Za,qz+1,Qa)));end;else do Lz,Gz=q3(Za[qz]());end;end;if Nz~=0X1 then if Nz==0 then Lz=Lz+qz-1;do Qa=Lz;end;else Lz=qz+Nz-0X2;Qa=Lz+0X1;end;local Or=0X0;for HR=qz,Lz do Or=Or+1;do Za[HR]=Gz[Or];end;end;else do Qa=qz-0X1;end;end;Ya=Ya+1;do Ya=Ya+0x001;end;Ya=Ya+1;qz=8;Za[qz]=Za[qz](E(Za,qz+1,Qa));Qa=qz;Ad=bc[Ya];Ya=Ya+0X1;if not Za[0X008]then Ya=Ad[0X0005];end;end;end;else if xd>=0Xa then if xd~=11 then repeat local Ap,Hp=Lc,Za;if not(#Ap>0)then else local Fb=({});for yC,mC in M,Ap do for EL,xL in M,mC do if not(xL[0X01]==Hp and xL[2]>=0X00)then else local t4=xL[0X2];if not(not Fb[t4])then else do Fb[t4]={Hp[t4]};end;end;(xL)[1]=Fb[t4];(xL)[2]=1;end;end;end;end;until true;return;else local IG=jc[0X0000];do Za[1]=IG[1][IG[0x2]];end;Ya=Ya+0x001;do Ya=Ya+1;end;local MG=(1);do Ya=Ya+1;end;repeat local hf,ff=Lc,Za;do if not(#hf>0X00)then else local Gl=({});for qT,PT in M,hf do for S8,C8 in M,PT do do if C8[0x1]==ff and C8[0X2]>=0 then local II=(C8[0X2]);if not(not Gl[II])then else(Gl)[II]={ff[II]};end;C8[1]=Gl[II];C8[2]=0X01;end;end;end;end;end;end;until true;do return false,MG,MG;end;end;else Za[Ad[0x2]]=v(Za[Ad[0x5]],Za[Ad[0x04]]);end;end;else if not(xd<3)then if not(xd<0x004)then if xd~=5 then do(Za)[Ad[2]]=Za[Ad[5]]/Za[Ad[0X0004]];end;else(Za)[Ad[0x002]]=T(Za[Ad[5]],Za[Ad[0X4]]);end;else local Aq=Uc[Ad[0X0005]];local Hq=Aq[5];local Oq=nil;local fq=#Hq;if fq>0x000 then Oq={};for Qi=1,fq do local Hi=(Hq[Qi]);do if Hi[0x01]==0X00000 then(Oq)[Qi-1]={Za,Hi[0X2]};else Oq[Qi-1]=jc[Hi[0X02]];end;end;end;(S)(Lc,Oq);end;do Za[Ad[2]]=e3(Aq,Oq,ta);end;end;else do if xd<0X00001 then local tk=jc[0];Za[1]=tk[0X1][tk[0x2]];Ad=bc[Ya];Ya=Ya+1;Za[1][Ad[0x6]]=Ad[1];do Ad=bc[Ya];end;Ya=Ya+1;Ya=Ad[5];else if xd~=2 then Za[Ad[2]]=ta[Ad[6]];else do Ya=Ad[5];end;end;end;end;end;end;end;end;end;end);if Pa then if La then if Ga~=0x1 then return Za[Ta](E(Za,Ta+1,Qa));else return Za[Ta]();end;elseif not(Ta)then else return E(Za,Ta,Ga);end;else if V(La)~="string"then(q)(La,0);else if not(r(La,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;do if not(r(La,"^.-:%d+: "))then(q)(La,0x0);else(q)('\076ur\097\112\104 Scr\105pt\058'..(Qc[Ya-0X1]or'\040i\110\116ern\097l)')..'\058\032'..u(La),0x0);end;end;end;end;end;else ic=function(...)local Qp,rp={},0;local Fp=1;local Pp={[2]=Vc,[1]=Qp};local Ip=(k and k()or _ENV);local Rp=(Ip==H and fc or Ip);local pp,zp=q3(...);do pp=pp-1;end;for ay=0X0,pp do if not(ac>ay)then break;else Qp[ay]=zp[ay+1];end;end;if not nc then zp=nil;elseif not(Ac)then else do(Qp)[ac]={n=pp>=ac and pp-ac+1 or 0,E(zp,ac+1,pp+0X1)};end;end;if Rp~=Ip then do if s then(s)(ic,Rp);else _ENV=Rp;end;end;end;local Mp,Bp,xp,jp=c(function()while true do local BQ=(bc[Fp]);local HQ=(BQ[0x3]);Fp=Fp+0X0001;if HQ>=12 then if HQ<18 then if not(HQ<15)then if HQ>=16 then if HQ~=17 then Qp[BQ[2]]=not Qp[BQ[0X5]];else Qp[BQ[0X0002]]=BQ[6];end;else Qp[0]=Rp[BQ[6]];do Fp=Fp+0X1;end;Fp=Fp+1;BQ=bc[Fp];Fp=Fp+0X1;do(Qp)[0X0]=Qp[0][BQ[1]];end;do Fp=Fp+1;end;do Fp=Fp+0X1;end;do Fp=Fp+1;end;(Qp)[0X00000]=not Qp[0X0000];BQ=bc[Fp];Fp=Fp+0X1;Fp=BQ[0X00005];end;else if HQ<13 then do Qp[0x0000]=Rp[BQ[0x6]];end;Fp=Fp+1;Fp=Fp+0X1;local fF=(0);BQ=bc[Fp];local yF=(1);Fp=Fp+0x1;Qp[0X1]=Rp[BQ[6]];BQ=bc[Fp];Fp=Fp+0X1;(Qp)[0X002]=Rp[BQ[0X6]];BQ=bc[Fp];Fp=Fp+0X00001;do Qp[2]=Qp[2][BQ[0X1]];end;do Fp=Fp+1;end;local eF=2;if eF==0X0000 then else rp=yF+eF-1;end;local MF,OF=nil,nil;if eF~=0x00001 then do MF,OF=q3(Qp[yF](E(Qp,yF+1,rp)));end;else MF,OF=q3(Qp[yF]());end;if fF==1 then rp=yF-1;else do if fF~=0 then MF=yF+fF-2;rp=MF+0X1;else MF=MF+yF-1;rp=MF;end;end;local iM=(0);for wr=yF,MF do iM=iM+0x1;(Qp)[wr]=OF[iM];end;end;do Fp=Fp+1;end;Fp=Fp+0X1;Fp=Fp+0X1;yF=0;Qp[yF]=Qp[yF](E(Qp,yF+0X001,rp));rp=yF;do BQ=bc[Fp];end;Fp=Fp+1;Qp[0X00000]=Qp[0]~=BQ[0X1];BQ=bc[Fp];do Fp=Fp+1;end;Fp=BQ[5];else if HQ~=14 then(Qp)[BQ[2]]={E({},0X1,BQ[0X5])};else(Qp)[BQ[0x2]]=Qp[BQ[0X5]]>=Qp[BQ[4]];end;end;end;else if not(HQ>=21)then if HQ<19 then repeat local aE,DE=Lc,Qp;if not(#aE>0)then else local Bh={};for tg,Cg in M,aE do for JD,tD in M,Cg do do if tD[0X1]==DE and tD[0X2]>=0 then local tB=tD[0X002];if not Bh[tB]then Bh[tB]={DE[tB]};end;tD[1]=Bh[tB];tD[0X002]=1;end;end;end;end;end;until true;local Df=(BQ[2]);return false,Df,Df;else if HQ==20 then local Zp=(jc[0x0]);do Qp[0]=Zp[0X1][Zp[0x00002]];end;Fp=Fp+0X1;Fp=Fp+1;BQ=bc[Fp];Fp=Fp+0x1;(Qp)[0X0]=Qp[0X0][BQ[1]];do Fp=Fp+0X00001;end;Fp=Fp+0X1;do BQ=bc[Fp];end;Fp=Fp+1;Qp[0]=Qp[0X0]<BQ[0X001];BQ=bc[Fp];Fp=Fp+0X01;Fp=BQ[0x05];else(Qp)[BQ[0X2]]=Qp[BQ[5]]~=Qp[BQ[0X4]];end;end;else do if HQ>=22 then do if HQ~=0x17 then do if not Qp[BQ[2]]then Fp=BQ[5];end;end;else Qp[BQ[0X2]]=Qp[BQ[0x5]]/Qp[BQ[0x00004]];end;end;else for nC=BQ[2],BQ[5]do Qp[nC]=nil;end;end;end;end;end;else do if HQ>=0X6 then if not(HQ>=0x9)then if not(HQ>=7)then Fp=BQ[5];else do if HQ==0X00008 then local Pg,Ig=Uc[BQ[5]],(nil);local bg=Pg[5];local rg=(#bg);if not(rg>0x0)then else Ig={};for xF=0X0001,rg do local mF=(bg[xF]);if mF[0X001]==0x0 then(Ig)[xF-1]={Qp,mF[2]};else Ig[xF-1]=jc[mF[2]];end;end;S(Lc,Ig);end;Qp[BQ[0X2]]=e3(Pg,Ig,Rp);else local w_=(jc[0]);Qp[0X0]=w_[0X001][w_[0X00002]];Fp=Fp+1;do Qp[0]=not Qp[0X0];end;BQ=bc[Fp];Fp=Fp+1;if Qp[0]then Fp=BQ[0x005];end;end;end;end;else do if not(HQ>=0X0000A)then else if HQ==11 then(Qp)[BQ[2]]=Qp[BQ[0X5]]^Qp[BQ[4]];else if not(Qp[BQ[0X2]])then else Fp=BQ[0x5];end;end;end;end;end;else if HQ<3 then if not(HQ<1)then if HQ~=2 then repeat local rV,BV=Lc,Qp;if#rV>0 then local wB={};do for uu,au in M,rV do for ZB,yB in M,au do if not(yB[0x1]==BV and yB[2]>=0X0)then else local E6=(yB[0X02]);if not(not wB[E6])then else wB[E6]={BV[E6]};end;(yB)[0X1]=wB[E6];yB[0X2]=1;end;end;end;end;end;until true;return;else local fq=BQ[0x2];local Fq,Vq=Qp[fq+0X001],Qp[fq+2];local Iq=Qp[fq];(Qp)[fq]=P(function()do for Fl=Iq,Fq,Vq do C(true,Fl);end;end;end);Fp=BQ[5];end;else local Pt=(BQ[0X2]);local Jt=(Qp[BQ[0x5]]);do Qp[Pt+1]=Jt;end;(Qp)[Pt]=Jt[BQ[1]];end;else if not(HQ>=4)then(Qp)[BQ[0X2]]=Rp[BQ[0x006]];else if HQ~=0X5 then(Qp)[BQ[0X0002]]=Qp[BQ[0X0005]]%Qp[BQ[4]];else local B4=(jc[0X00001]);Qp[0X0]=B4[1][B4[2]];local T4=0x00;do Fp=Fp+0x1;end;Fp=Fp+1;BQ=bc[Fp];Fp=Fp+1;local U4=(Qp[0]);do(Qp)[T4+1]=U4;end;(Qp)[T4]=U4[BQ[1]];Fp=Fp+0x001;T4=0;(Qp)[T4]=Qp[T4](Qp[T4+0X0001]);rp=T4;Fp=Fp+1;do Fp=Fp+1;end;BQ=bc[Fp];Fp=Fp+0X1;do Fp=BQ[0x5];end;end;end;end;end;end;end;end;end);if not(Mp)then do if V(Bp)~="string"then(q)(Bp,0);else if not(r(Bp,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if r(Bp,"^.-:%d+: ")then q('\076u\114a\112h \083\099ript\058'..(Qc[Fp-1]or"(internal)")..": "..u(Bp),0);else q(Bp,0);end;end;end;else if Bp then if jp==0X1 then return Qp[xp]();else return Qp[xp](E(Qp,xp+1,rp));end;elseif not(xp)then else do return E(Qp,xp,jp);end;end;end;end;end;else if Sc~=214 then ic=function(...)local B4=({});local O4=1;local c4=((k and k()or _ENV));local P4=({[2]=Vc,[1]=B4});local p4,V4=q3(...);local R4=(c4==H and fc or c4);do p4=p4-0X1;end;local G4=(0x00);do for vt=0x0,p4 do if not(ac>vt)then break;else B4[vt]=V4[vt+0X0001];end;end;end;if not nc then do V4=nil;end;elseif not(Ac)then else B4[ac]={n=p4>=ac and p4-ac+1 or 0X0,E(V4,ac+1,p4+1)};end;do if R4~=c4 then if not(s)then _ENV=R4;else s(ic,R4);end;end;end;local A4,j4,Z4,S4=c(function()while true do local DY=bc[O4];local bY=(DY[3]);do O4=O4+0X1;end;if bY<0x0008 then if bY>=4 then if bY<0X00006 then if bY~=5 then O4=DY[0X00005];else do for VF=DY[2],DY[5]do(B4)[VF]=nil;end;end;end;else if bY~=0X00007 then do B4[DY[0X02]]=v(B4[DY[0x005]],B4[DY[0x4]]);end;else if not B4[DY[0X00002]]then do O4=DY[5];end;end;end;end;else if bY<0X002 then do if bY~=0X1 then B4[DY[2]]=B4[DY[5]]>=B4[DY[0X4]];else(B4)[DY[0X2]]=true;end;end;else if bY==3 then local Qf,qf=Uc[DY[0X5]],nil;local Nf=Qf[5];local yf=#Nf;do if not(yf>0x0)then else qf={};for Ye=0X0001,yf do local re=Nf[Ye];do if re[0X01]==0 then(qf)[Ye-1]={B4,re[2]};else do qf[Ye-0X00001]=jc[re[0X2]];end;end;end;end;(S)(Lc,qf);end;end;(B4)[DY[2]]=e3(Qf,qf,R4);else B4[DY[2]]=w(B4[DY[0X005]],B4[DY[4]]);end;end;end;else if not(bY>=0Xc)then do if bY>=0X000a then if bY==11 then do B4[DY[2]]=DY[6];end;else end;else do if bY==0X9 then local TD,gD=0X00001,(B4[0X0]);B4[TD+0X0001]=gD;(B4)[TD]=gD[DY[1]];DY=bc[O4];O4=O4+0X01;B4[3]=DY[0X6];DY=bc[O4];O4=O4+1;local cD,xD=nil,Uc[DY[0X5]];local tD=xD[5];local uD=(#tD);do if not(uD>0x0)then else cD={};for OU=0X1,uD do local EU=tD[OU];if EU[0X1]==0x00000 then do cD[OU-1]={B4,EU[2]};end;else cD[OU-0X00001]=jc[EU[2]];end;end;S(Lc,cD);end;end;do B4[0X004]=e3(xD,cD,R4);end;do O4=O4+0X0001;end;do TD=1;end;G4=TD+4-0X01;do B4[TD]=B4[TD](E(B4,TD+1,G4));end;do G4=TD;end;O4=O4+0X1;do B4[0]=B4[1];end;do DY=bc[O4];end;O4=O4+0x1;TD=0x001;gD=B4[0];do B4[TD+0X1]=gD;end;do(B4)[TD]=gD[DY[1]];end;DY=bc[O4];do O4=O4+1;end;B4[3]=DY[0X6];DY=bc[O4];do O4=O4+0X1;end;xD=Uc[DY[5]];cD=nil;do tD=xD[5];end;uD=#tD;if not(uD>0X0)then else cD={};for NA=1,uD do local YA=tD[NA];if YA[1]~=0 then cD[NA-1]=jc[YA[0X2]];else(cD)[NA-0X1]={B4,YA[2]};end;end;(S)(Lc,cD);end;B4[4]=e3(xD,cD,R4);do O4=O4+0x1;end;do TD=1;end;G4=TD+0x4-0X1;B4[TD]=B4[TD](E(B4,TD+0x1,G4));do G4=TD;end;O4=O4+0x1;do O4=O4+0X1;end;do O4=O4+1;end;B4[0x0]=B4[0X1];DY=bc[O4];O4=O4+0X00001;TD=0x1;do gD=B4[0];end;B4[TD+0x1]=gD;B4[TD]=gD[DY[1]];DY=bc[O4];O4=O4+0X00001;do B4[3]=DY[0X06];end;DY=bc[O4];O4=O4+0X1;xD=Uc[DY[0X5]];cD=nil;tD=xD[5];uD=#tD;if not(uD>0)then else do cD={};end;for qZ=0X1,uD do local xZ=(tD[qZ]);do if xZ[1]~=0X0 then(cD)[qZ-0X1]=jc[xZ[0X2]];else do(cD)[qZ-0X0001]={B4,xZ[0X2]};end;end;end;end;S(Lc,cD);end;do B4[4]=e3(xD,cD,R4);end;O4=O4+1;TD=1;G4=TD+0X4-1;(B4)[TD]=B4[TD](E(B4,TD+0X1,G4));G4=TD;O4=O4+0x1;O4=O4+0X1;O4=O4+1;do(B4)[0X0]=B4[1];end;DY=bc[O4];O4=O4+0x1;TD=0X1;gD=B4[0X0];(B4)[TD+0x1]=gD;do(B4)[TD]=gD[DY[0X01]];end;do DY=bc[O4];end;do O4=O4+1;end;do(B4)[0x3]=DY[0x06];end;DY=bc[O4];O4=O4+0X0001;xD=Uc[DY[5]];cD=nil;tD=xD[0x5];uD=#tD;do if not(uD>0)then else do cD={};end;for wf=0X1,uD do local Ff=tD[wf];if Ff[0x1]==0x0 then(cD)[wf-0X1]={B4,Ff[2]};else(cD)[wf-1]=jc[Ff[0X002]];end;end;S(Lc,cD);end;end;do B4[4]=e3(xD,cD,R4);end;O4=O4+1;TD=1;G4=TD+0X0004-1;(B4)[TD]=B4[TD](E(B4,TD+1,G4));G4=TD;O4=O4+1;O4=O4+0X1;O4=O4+0X01;B4[0]=B4[0X1];DY=bc[O4];O4=O4+1;do TD=0x1;end;gD=B4[0];B4[TD+1]=gD;do B4[TD]=gD[DY[1]];end;do DY=bc[O4];end;O4=O4+1;(B4)[0X3]=DY[0X6];DY=bc[O4];O4=O4+0X0001;xD=Uc[DY[0X5]];do cD=nil;end;tD=xD[5];uD=#tD;if not(uD>0)then else cD={};do for LB=0X1,uD do local NB=(tD[LB]);do if NB[1]~=0 then cD[LB-1]=jc[NB[2]];else(cD)[LB-1]={B4,NB[2]};end;end;end;end;S(Lc,cD);end;(B4)[0x4]=e3(xD,cD,R4);O4=O4+1;TD=0x1;do G4=TD+0X4-1;end;do(B4)[TD]=B4[TD](E(B4,TD+1,G4));end;G4=TD;O4=O4+1;O4=O4+1;O4=O4+1;(B4)[0]=B4[0X1];DY=bc[O4];O4=O4+1;TD=1;gD=B4[0];do B4[TD+0X1]=gD;end;do B4[TD]=gD[DY[1]];end;DY=bc[O4];do O4=O4+0X001;end;B4[3]=DY[0X06];do DY=bc[O4];end;O4=O4+0X001;xD=Uc[DY[5]];cD=nil;tD=xD[5];uD=#tD;if not(uD>0x0)then else cD={};do for IH=1,uD do local xH=(tD[IH]);if xH[1]==0 then do cD[IH-0x1]={B4,xH[0X2]};end;else do(cD)[IH-0X1]=jc[xH[0X0002]];end;end;end;end;(S)(Lc,cD);end;B4[4]=e3(xD,cD,R4);O4=O4+1;do TD=1;end;G4=TD+4-1;(B4)[TD]=B4[TD](E(B4,TD+1,G4));G4=TD;O4=O4+1;O4=O4+0X1;O4=O4+1;B4[0]=B4[1];do DY=bc[O4];end;O4=O4+0X00001;TD=1;gD=B4[0x00000];B4[TD+0X1]=gD;(B4)[TD]=gD[DY[0X0001]];DY=bc[O4];O4=O4+1;(B4)[3]=DY[6];DY=bc[O4];O4=O4+1;xD=Uc[DY[5]];cD=nil;tD=xD[5];uD=#tD;do if uD>0X0 then do cD={};end;for Jr=1,uD do local qr=tD[Jr];if qr[0x01]~=0 then cD[Jr-1]=jc[qr[0X02]];else do(cD)[Jr-1]={B4,qr[0X0002]};end;end;end;S(Lc,cD);end;end;B4[4]=e3(xD,cD,R4);do O4=O4+1;end;TD=1;G4=TD+0X4-1;B4[TD]=B4[TD](E(B4,TD+1,G4));G4=TD;O4=O4+1;do O4=O4+1;end;O4=O4+1;B4[0]=B4[1];DY=bc[O4];O4=O4+1;TD=0X01;do gD=B4[0];end;(B4)[TD+0X01]=gD;(B4)[TD]=gD[DY[0X1]];DY=bc[O4];O4=O4+1;local rD=1;(B4)[0X0003]=DY[0X6];do DY=bc[O4];end;O4=O4+1;do xD=Uc[DY[5]];end;do cD=nil;end;tD=xD[5];do uD=#tD;end;do if uD>0X0 then cD={};for iu=0X1,uD do local au=tD[iu];if au[0x01]==0X0 then do cD[iu-1]={B4,au[0x2]};end;else(cD)[iu-0X0001]=jc[au[0X2]];end;end;S(Lc,cD);end;end;(B4)[0X4]=e3(xD,cD,R4);O4=O4+1;TD=0X1;do G4=TD+0x4-0X1;end;do(B4)[TD]=B4[TD](E(B4,TD+0x001,G4));end;do G4=TD;end;O4=O4+0x1;B4[0x0]=B4[0X0001];DY=bc[O4];O4=O4+0X1;TD=0X00001;gD=B4[0];B4[TD+0X01]=gD;do B4[TD]=gD[DY[0x00001]];end;do DY=bc[O4];end;O4=O4+1;B4[0X00003]=DY[0X0006];DY=bc[O4];O4=O4+0X0001;xD=Uc[DY[5]];cD=nil;tD=xD[0x5];uD=#tD;if uD>0 then cD={};for ju=0x1,uD do local ru=(tD[ju]);if ru[1]~=0 then cD[ju-1]=jc[ru[2]];else cD[ju-0X0001]={B4,ru[2]};end;end;S(Lc,cD);end;B4[0X4]=e3(xD,cD,R4);do O4=O4+0X1;end;TD=1;G4=TD+0X4-0X001;B4[TD]=B4[TD](E(B4,TD+1,G4));G4=TD;O4=O4+0x001;O4=O4+0X001;O4=O4+0X1;B4[0]=B4[0X1];do DY=bc[O4];end;O4=O4+1;TD=1;gD=B4[0];B4[TD+0X01]=gD;B4[TD]=gD[DY[1]];DY=bc[O4];do O4=O4+1;end;(B4)[0X3]=DY[0X6];DY=bc[O4];do O4=O4+0x1;end;xD=Uc[DY[5]];cD=nil;do tD=xD[0X0005];end;uD=#tD;if not(uD>0)then else cD={};for Hz=1,uD do local Bz=tD[Hz];if Bz[0x0001]==0 then(cD)[Hz-0X1]={B4,Bz[0X2]};else cD[Hz-0x1]=jc[Bz[2]];end;end;S(Lc,cD);end;B4[0X4]=e3(xD,cD,R4);do O4=O4+1;end;TD=1;G4=TD+4-0X01;(B4)[TD]=B4[TD](E(B4,TD+0X1,G4));G4=TD;O4=O4+0x0001;O4=O4+1;do O4=O4+1;end;(B4)[0x0]=B4[0x0001];O4=O4+0X1;do B4[1]=B4[0X000];end;do O4=O4+1;end;do repeat local ja,aa=Lc,B4;if not(#ja>0)then else local Mk={};for sk,xk in M,ja do do for Ri,Hi in M,xk do if not(Hi[0X01]==aa and Hi[0X00002]>=0)then else local Pt=Hi[0x2];if not Mk[Pt]then Mk[Pt]={aa[Pt]};end;Hi[1]=Mk[Pt];(Hi)[2]=1;end;end;end;end;end;until true;end;return false,rD,rD;else repeat local rI,tI=Lc,B4;if not(#rI>0)then else local tG=({});for N4,q4 in M,rI do for pU,uU in M,q4 do if uU[0X1]==tI and uU[0X002]>=0 then local kL=uU[0x2];if not(not tG[kL])then else tG[kL]={tI[kL]};end;(uU)[0X001]=tG[kL];(uU)[2]=1;end;end;end;end;until true;return;end;end;end;end;else if not(bY>=0xE)then if bY~=0Xd then(B4)[DY[2]]={E({},1,DY[0x5])};else(B4)[DY[0X2]]=R4[DY[0X6]];end;else if bY==15 then B4[DY[0x02]]=DY[6];else if not(B4[DY[0X5]]<B4[DY[0X4]])then do O4=DY[0x2];end;end;end;end;end;end;end;end);if A4 then if j4 then do if S4==0X1 then return B4[Z4]();else return B4[Z4](E(B4,Z4+1,G4));end;end;elseif Z4 then return E(B4,Z4,S4);end;else if V(j4)~="s\116\114\105n\103"then(q)(j4,0);else do if not(r(j4,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;if r(j4,'\094\046-\058\037d+:\032')then q("Luraph Script:"..(Qc[O4-0X1]or"(internal)")..':\032'..u(j4),0X0000);else(q)(j4,0x0);end;end;end;end;else ic=function(...)local bs,Bs=0X1,({});local zs=(k and k()or _ENV);local ls,qs={[2]=Vc,[1]=Bs},((zs==H and fc or zs));local Qs,Ls=q3(...);Qs=Qs-1;do for Ch=0,Qs do if not(ac>Ch)then do break;end;else Bs[Ch]=Ls[Ch+0X001];end;end;end;local ys=(0x00000);do if not nc then Ls=nil;elseif Ac then do(Bs)[ac]={n=Qs>=ac and Qs-ac+0X1 or 0,E(Ls,ac+0X00001,Qs+0X1)};end;end;end;if qs==zs then else if s then s(ic,qs);else _ENV=qs;end;end;local as,Js,Fs,Vs=c(function()while true do local nb=bc[bs];local Gb=nb[0X3];bs=bs+0X1;do if Gb>=0x9 then if not(Gb<13)then do if Gb<0X0F then if Gb==14 then(Bs)[nb[2]]=Q(Bs[nb[5]]);else do Bs[nb[0X2]]=nb[6];end;end;else if Gb<16 then(Bs)[nb[0X02]]=Bs[nb[0X5]];else if Gb~=17 then(Bs)[nb[0x2]]=Bs[nb[0x00005]]+Bs[nb[0X4]];else end;end;end;end;else if not(Gb>=11)then if Gb==0X0A then Bs[0x0]=qs[nb[6]];do bs=bs+1;end;local EL=(0);bs=bs+0X1;do nb=bc[bs];end;bs=bs+0X1;local lL=(Bs[0X0]);Bs[EL+1]=lL;(Bs)[EL]=lL[nb[1]];nb=bc[bs];bs=bs+0X0001;(Bs)[2]=nb[0x6];bs=bs+1;do EL=0X0000;end;(Bs)[EL]=Bs[EL](Bs[EL+1],Bs[EL+2]);ys=EL;bs=bs+1;do(Bs)[1]={};end;nb=bc[bs];bs=bs+0X00001;do Bs[0X0002]=nb[6];end;nb=bc[bs];local HL=(Uc[nb[5]]);bs=bs+0X1;local ML=HL[5];local nL=(nil);local jL=(#ML);if not(jL>0)then else nL={};for NG=1,jL do local pG=ML[NG];if pG[1]==0 then(nL)[NG-0X1]={Bs,pG[2]};else nL[NG-1]=jc[pG[2]];end;end;S(Lc,nL);end;(Bs)[3]=e3(HL,nL,qs);nb=bc[bs];bs=bs+0X1;do Bs[0X004]=qs[nb[6]];end;bs=bs+1;bs=bs+0X0001;do nb=bc[bs];end;bs=bs+1;(Bs)[4]=Bs[0x4][nb[1]];nb=bc[bs];bs=bs+0X1;HL=Uc[nb[5]];do nL=nil;end;do ML=HL[0X05];end;do jL=#ML;end;do if jL>0X0 then nL={};for GF=0X0001,jL do local PF=ML[GF];do if PF[0X1]==0 then do nL[GF-0X1]={Bs,PF[2]};end;else(nL)[GF-1]=jc[PF[0X2]];end;end;end;(S)(Lc,nL);end;end;do Bs[5]=e3(HL,nL,qs);end;do bs=bs+1;end;EL=4;Bs[EL](Bs[EL+1]);do ys=EL-0x0001;end;bs=bs+1;bs=bs+1;bs=bs+1;do repeat local v1,q1=Lc,(Bs);if not(#v1>0)then else local Z8={};for R0,E0 in M,v1 do for OQ,LQ in M,E0 do if not(LQ[0X1]==q1 and LQ[0X0002]>=0X000)then else local vd=LQ[2];if not(not Z8[vd])then else(Z8)[vd]={q1[vd]};end;LQ[0x1]=Z8[vd];(LQ)[2]=0X1;end;end;end;end;until true;end;return;else repeat local Xu,ju=Lc,(Bs);if#Xu>0X0 then local i9={};for YD,hD in M,Xu do do for Fo,Ro in M,hD do if not(Ro[0x001]==ju and Ro[2]>=0)then else local Hm=Ro[0X00002];do if not i9[Hm]then i9[Hm]={ju[Hm]};end;end;Ro[1]=i9[Hm];Ro[0X2]=1;end;end;end;end;end;until true;return;end;else if Gb==12 then(ls)[nb[5]]=Bs[nb[2]];else Bs[nb[0X2]]=qs[nb[6]];end;end;end;else do if not(Gb<4)then if Gb>=0X006 then if Gb<0X7 then(Bs[nb[2]])[Bs[nb[0X5]]]=Bs[nb[4]];else if Gb==0x8 then do bs=nb[5];end;else(Bs)[nb[2]]={E({},1,nb[0X5])};end;end;else if Gb~=5 then(Bs)[0x00000]=qs[nb[6]];bs=bs+0X1;bs=bs+1;do nb=bc[bs];end;bs=bs+0X1;if not(Bs[0])then else bs=nb[5];end;else for lw=nb[2],nb[5]do(Bs)[lw]=nil;end;end;end;else if Gb>=2 then if Gb==3 then local q0=(nb[2]);local N0=P(function(...)(C)();do for f8,X8,E8,J8,V8,W8,C8,P8,v8,p8 in...do(C)(true,{f8,X8,E8,J8,V8,W8,C8,P8,v8,p8});end;end;end);(N0)(Bs[q0],Bs[q0+1],Bs[q0+2]);do ys=q0;end;do Bs[q0]=N0;end;bs=nb[0X0005];else Bs[nb[0x2]]=Bs[nb[5]]/Bs[nb[4]];end;else if Gb~=1 then Bs[nb[2]]=not Bs[nb[5]];else local vJ=(Uc[nb[5]]);local LJ=(vJ[5]);local NJ=(#LJ);local qJ=(nil);if NJ>0x000 then qJ={};for FH=1,NJ do local hH=LJ[FH];do if hH[0x1]~=0 then(qJ)[FH-1]=jc[hH[2]];else do(qJ)[FH-0X00001]={Bs,hH[2]};end;end;end;end;(S)(Lc,qJ);end;(Bs)[nb[0X002]]=e3(vJ,qJ,qs);end;end;end;end;end;end;end;end);if not(as)then if V(Js)=="string"then if not(r(Js,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(r(Js,'^\046-:%\100+\058\032'))then q(Js,0);else q("L\117\114\097\112h\032\083\099\114i\112\116\058"..(Qc[bs-1]or"(internal)")..": "..u(Js),0X00);end;else(q)(Js,0);end;else do if Js then if Vs==1 then return Bs[Fs]();else return Bs[Fs](E(Bs,Fs+0X1,ys));end;elseif Fs then return E(Bs,Fs,Vs);end;end;end;end;end;end;else if not(Sc>=219)then if Sc==218 then ic=function(...)local jP=(1);local zP,AP={},0;local lP={[1]=zP,[2]=Vc};local yP=(k and k()or _ENV);local OP,CP=q3(...);do OP=OP-1;end;local VP=((yP==H and fc or yP));do for xM=0,OP do if ac>xM then do(zP)[xM]=CP[xM+1];end;else break;end;end;end;if not nc then CP=nil;elseif not(Ac)then else zP[ac]={n=OP>=ac and OP-ac+0X1 or 0,E(CP,ac+0X01,OP+0X1)};end;do if VP~=yP then do if not(s)then _ENV=VP;else s(ic,VP);end;end;end;end;local nP,xP,tP,NP=c(function()while true do local jQ=bc[jP];local GQ=(jQ[0X0003]);jP=jP+1;do if not(GQ<9)then if not(GQ<13)then if not(GQ<15)then if GQ<0x010 then repeat local Em,hm,im=Lc,zP,(jQ[0X02]);if not(#Em>0)then else local RK=({});do for NH,aH in M,Em do for SY,CY in M,aH do if CY[1]==hm and CY[2]>=im then local OK=(CY[2]);do if not(not RK[OK])then else(RK)[OK]={hm[OK]};end;end;do(CY)[1]=RK[OK];end;CY[0X02]=0x1;end;end;end;end;end;until true;else do if GQ~=17 then do repeat local uF,YF=Lc,zP;do if#uF>0 then local kz={};do for nX,IX in M,uF do for WN,sN in M,IX do do if not(sN[1]==YF and sN[0X2]>=0)then else local Qa=sN[2];if not(not kz[Qa])then else(kz)[Qa]={YF[Qa]};end;(sN)[1]=kz[Qa];sN[0X02]=1;end;end;end;end;end;end;end;until true;end;return;else do zP[0X0000]=VP[jQ[0x06]];end;do jP=jP+1;end;jP=jP+0X0001;jQ=bc[jP];jP=jP+0X001;zP[0X00000]=zP[0X0][jQ[0X1]];end;end;end;else do if GQ==14 then zP[0]=VP[jQ[0x006]];jP=jP+0X1;jP=jP+0x001;jP=jP+1;do AP=0X0;end;zP[AP]=zP[AP]();do jP=jP+1;end;jP=jP+0X001;jP=jP+0X01;zP[0]=not zP[0];jQ=bc[jP];jP=jP+1;jP=jQ[0x00005];else do(zP)[jQ[0X2]]=VP[jQ[6]];end;end;end;end;else if GQ>=11 then if GQ==0Xc then repeat local C2,s2=Lc,zP;if not(#C2>0)then else local kz={};do for gL,SL in M,C2 do for xX,GX in M,SL do if GX[1]==s2 and GX[2]>=0 then local Ul=(GX[0X00002]);if not(not kz[Ul])then else kz[Ul]={s2[Ul]};end;GX[0X1]=kz[Ul];(GX)[2]=0x1;end;end;end;end;end;until true;local iY=(jQ[0x00002]);return false,iY,iY;else local Uq=(Uc[jQ[5]]);local yq=Uq[5];local Qq=nil;local rq=(#yq);if not(rq>0X0)then else Qq={};for XZ=0X00001,rq do local BZ=yq[XZ];if BZ[1]==0 then do Qq[XZ-0X1]={zP,BZ[2]};end;else(Qq)[XZ-0X1]=jc[BZ[0X0002]];end;end;(S)(Lc,Qq);end;(zP)[jQ[0x2]]=e3(Uq,Qq,VP);end;else if GQ~=0x00a then zP[jQ[2]]=jQ[6];else zP[jQ[0X2]]=zP[jQ[0X5]]~=zP[jQ[4]];end;end;end;else if not(GQ>=4)then do if GQ>=2 then do if GQ~=0x03 then(zP)[jQ[2]]={E({},1,jQ[0x5])};else do zP[0]=VP[jQ[6]];end;jQ=bc[jP];do jP=jP+1;end;zP[0]=zP[0X0000][jQ[1]];do jP=jP+1;end;do jP=jP+0X1;end;jP=jP+0X1;do zP[0x00]=not zP[0];end;jQ=bc[jP];do jP=jP+1;end;if not zP[0X0]then jP=jQ[0X5];end;end;end;else if GQ==0X1 then else local a6,p6=jQ[2],(zP[jQ[0X5]]);zP[a6+0x0001]=p6;(zP)[a6]=p6[jQ[0X001]];end;end;end;else if not(GQ>=0X6)then if GQ~=0X5 then(zP)[jQ[2]]=zP[jQ[5]]*zP[jQ[0X004]];else if not(not zP[jQ[2]])then else jP=jQ[0X5];end;end;else if not(GQ<0x007)then if GQ~=0X8 then for PJ=jQ[0X2],jQ[0X0005]do zP[PJ]=nil;end;else jP=jQ[5];end;else local nR=(jQ[0X2]);local zR=(jQ[0X4]-0X1)*50;local bR=(zP[nR]);for a_=1,jQ[0x5]do do(bR)[zR+a_]=zP[nR+a_];end;end;end;end;end;end;end;end;end);if not(nP)then if V(xP)~="string"then q(xP,0X0);else if not(r(xP,'\097t\116e\109p\116\032\116o\032\121\105eld \097\099\114o\115\115\032\109\101\116\097\109\101t\104od\047C\037-\099al\108 bo\117\110\100\097\114y'))then else return coroutine.yield();end;if r(xP,"^.-:%d+: ")then(q)("L\117\114\097ph Scr\105p\116:"..(Qc[jP-0X1]or'\040\105\110\116e\114\110\097l\041').."\058\032"..u(xP),0);else q(xP,0);end;end;else if xP then if NP==0X1 then return zP[tP]();else return zP[tP](E(zP,tP+1,AP));end;elseif not(tP)then else return E(zP,tP,NP);end;end;end;else do ic=function(...)local jW,tW=1,({});local LW=(k and k()or _ENV);local UW,SW=q3(...);local aW={[2]=Vc,[1]=tW};UW=UW-1;local lW=0x0;for Za=0,UW do if not(ac>Za)then break;else(tW)[Za]=SW[Za+1];end;end;local RW=(LW==H and fc or LW);if not nc then SW=nil;elseif Ac then do tW[ac]={n=UW>=ac and UW-ac+0X0001 or 0,E(SW,ac+1,UW+1)};end;end;if RW==LW then else if s then s(ic,RW);else _ENV=RW;end;end;local OW,JW,GW,xW=c(function()while true do local bT=bc[jW];local MT=(bT[3]);jW=jW+0x01;if not(MT<0Xa)then do if MT>=15 then if not(MT>=0X011)then do if MT==16 then else tW[bT[2]]=RW[bT[0X00006]];end;end;else if MT>=18 then do if MT~=19 then(tW)[0]=RW[bT[0X6]];bT=bc[jW];do jW=jW+0x0001;end;tW[0x0]=tW[0x0][bT[0X1]];bT=bc[jW];do jW=jW+0X001;end;tW[0]=tW[0X0][bT[0x01]];bT=bc[jW];jW=jW+1;tW[0X000]=tW[0][bT[0x01]];bT=bc[jW];jW=jW+0X0001;tW[0]=tW[0][bT[1]];do jW=jW+1;end;jW=jW+0x1;bT=bc[jW];jW=jW+1;tW[0]=tW[0X0000][bT[1]];bT=bc[jW];local kj=0;do jW=jW+1;end;do tW[0]=tW[0X0][bT[0X00001]];end;bT=bc[jW];jW=jW+0x00001;tW[0]=tW[0][bT[0X001]];do bT=bc[jW];end;do jW=jW+1;end;local bj=(tW[0]);tW[kj+0X001]=bj;do tW[kj]=bj[bT[1]];end;do bT=bc[jW];end;jW=jW+1;do(tW)[2]=RW[bT[6]];end;jW=jW+0X1;jW=jW+0X1;jW=jW+0X00001;kj=0x000;(tW)[kj]=tW[kj](tW[kj+1],tW[kj+0X2]);lW=kj;jW=jW+1;jW=jW+1;else if not(tW[bT[2]])then else jW=bT[0x00005];end;end;end;else do aW[bT[5]]=tW[bT[2]];end;end;end;else if not(MT<12)then do if MT<0XD then(tW)[0]=RW[bT[0X6]];bT=bc[jW];jW=jW+0X1;(tW)[0]=tW[0][bT[1]];local w0=0;bT=bc[jW];jW=jW+1;do(tW)[0X0]=tW[0x0][bT[0x1]];end;jW=jW+0X1;jW=jW+0X1;do bT=bc[jW];end;do jW=jW+1;end;(tW)[0]=tW[0X0][bT[1]];bT=bc[jW];do jW=jW+1;end;(tW)[0]=tW[0X0][bT[0X001]];do bT=bc[jW];end;jW=jW+0X01;tW[0]=tW[0][bT[1]];do bT=bc[jW];end;jW=jW+1;tW[0]=tW[0X0][bT[0X01]];bT=bc[jW];jW=jW+0X1;(tW)[0X00000]=tW[0X0][bT[0X1]];jW=jW+0X1;jW=jW+0X1;do bT=bc[jW];end;do jW=jW+0X1;end;local s0=tW[0];tW[w0+0X1]=s0;(tW)[w0]=s0[bT[1]];bT=bc[jW];jW=jW+0x01;(tW)[0x002]=RW[bT[0x6]];jW=jW+0X0001;w0=0;(tW)[w0]=tW[w0](tW[w0+0X1],tW[w0+2]);do lW=w0;end;jW=jW+0X1;do jW=jW+0X1;end;bT=bc[jW];jW=jW+1;if not(tW[0])then else jW=bT[5];end;else do if MT==0X0e then do tW[0]=RW[bT[6]];end;do jW=jW+1;end;jW=jW+1;bT=bc[jW];jW=jW+0X1;if not(not tW[0])then else do jW=bT[5];end;end;else do for VV=bT[0x2],bT[0X5]do tW[VV]=nil;end;end;end;end;end;end;else if MT==0Xb then local Qo=(Uc[bT[0X0005]]);local bo=(nil);local to=(Qo[5]);local Yo=#to;if Yo>0X0 then do bo={};end;for dq=0X0001,Yo do local Qq=(to[dq]);if Qq[0X01]==0 then bo[dq-1]={tW,Qq[0X2]};else do(bo)[dq-1]=jc[Qq[2]];end;end;end;S(Lc,bo);end;tW[bT[2]]=e3(Qo,bo,RW);else tW[bT[0X0002]]=tW[bT[0X0005]];end;end;end;end;else if MT<0X05 then if not(MT<2)then if MT>=0X03 then if MT==0x4 then(tW)[bT[0X2]]={E({},0X1,bT[5])};else local jb=(bT[0X5]);local Bb=tW[jb];do for YC=jb+0X1,bT[0x04]do Bb=Bb..tW[YC];end;end;do tW[bT[2]]=Bb;end;end;else do(tW)[bT[0x2]]=w(tW[bT[5]],tW[bT[4]]);end;end;else if MT~=0X1 then repeat local XM,oM=Lc,(tW);if not(#XM>0X0)then else local NR={};do for WO,hO in M,XM do for Xo,Oo in M,hO do if Oo[0X1]==oM and Oo[2]>=0X0 then local lG=(Oo[0X2]);if not(not NR[lG])then else(NR)[lG]={oM[lG]};end;(Oo)[0x01]=NR[lG];(Oo)[0X2]=1;end;end;end;end;end;until true;local Ht=(bT[0x2]);return false,Ht,Ht;else jW=bT[0x5];end;end;else if not(MT>=0x07)then do if MT==0X6 then do repeat local JX,FX=Lc,(tW);do if#JX>0 then local jf={};for S0,U0 in M,JX do for mU,IU in M,U0 do if not(IU[1]==FX and IU[2]>=0)then else local rH=IU[0x2];if not jf[rH]then jf[rH]={FX[rH]};end;IU[0X1]=jf[rH];IU[0X02]=1;end;end;end;end;end;until true;end;return;else tW[bT[0X02]]=bT[6];end;end;else if not(MT>=8)then if not(tW[bT[5]]<tW[bT[4]])then else jW=bT[0X00002];end;else do if MT~=0X9 then do(tW)[bT[2]]=J(tW[bT[5]],tW[bT[0X4]]);end;else local IG=(bT[0X2]);local QG,zG=tW[IG]();if not(QG)then else for da=0x1,bT[4]do(tW)[IG+da]=zG[da];end;do jW=bT[5];end;end;end;end;end;end;end;end;end;end);if OW then if JW then if xW==1 then return tW[GW]();else return tW[GW](E(tW,GW+1,lW));end;elseif not(GW)then else return E(tW,GW,xW);end;else if V(JW)=="string"then if not(r(JW,'\097\116tem\112\116\032to \121\105e\108\100 \097\099r\111s\115 m\101t\097me\116\104od/\067\037-\099\097\108\108 \098ounda\114\121'))then else return coroutine.yield();end;if r(JW,"\094\046-\058\037\100\043: ")then(q)("L\117r\097p\104 \083\099\114i\112\116:"..(Qc[jW-0X00001]or"(internal)")..'\058\032'..u(JW),0x00000);else(q)(JW,0);end;else q(JW,0);end;end;end;end;end;else do if Sc==0xdc then do ic=function(...)local vc=(0);local gc,zc=0x01,{};local pc={[1]=zc,[2]=Vc};local oc=(k and k()or _ENV);local uc,tc=q3(...);uc=uc-1;local cc=((oc==H and fc or oc));for xl=0X0,uc do if ac>xl then zc[xl]=tc[xl+1];else break;end;end;if not nc then tc=nil;elseif Ac then zc[ac]={n=uc>=ac and uc-ac+1 or 0X00000,E(tc,ac+0X1,uc+0X01)};end;if cc==oc then else if not(s)then do _ENV=cc;end;else(s)(ic,cc);end;end;local Tc,Fc,Ec,wc=c(function()while true do local K9=(bc[gc]);local A9=(K9[3]);do gc=gc+0X0001;end;if A9<0x00005 then if A9>=2 then if A9<0X3 then zc[K9[0X2]]={E({},1,K9[5])};else if A9==0x00004 then local LF=(Uc[K9[0X5]]);local cF,bF=LF[5],nil;local lF=#cF;do if not(lF>0)then else do bF={};end;for TU=0X1,lF do local iU=(cF[TU]);if iU[1]~=0x0000 then(bF)[TU-1]=jc[iU[2]];else bF[TU-1]={zc,iU[0X00002]};end;end;S(Lc,bF);end;end;zc[K9[0X2]]=e3(LF,bF,cc);else gc=K9[0X00005];end;end;else do if A9~=0X0001 then else for MY=K9[2],K9[5]do(zc)[MY]=nil;end;end;end;end;else if A9<0X7 then do if A9~=0X00006 then do zc[K9[0X2]]=zc[K9[0X0005]]>=zc[K9[0x0004]];end;else(zc)[K9[0X2]]=zc[K9[5]]*zc[K9[4]];end;end;else if not(A9>=0x08)then do zc[0x0]=cc[K9[6]];end;K9=bc[gc];gc=gc+1;zc[1]=cc[K9[6]];gc=gc+0x1;gc=gc+0X01;K9=bc[gc];do gc=gc+0X001;end;local fJ=0x1;do(zc)[2]=K9[6];end;gc=gc+1;(zc)[0X0003]=true;gc=gc+1;(zc)[fJ]=zc[fJ](zc[fJ+0x1],zc[fJ+0X00002]);do vc=fJ;end;K9=bc[gc];gc=gc+0x01;zc[0X1]=zc[0x1][K9[0x1]];K9=bc[gc];gc=gc+0X1;do zc[1]=zc[1][K9[0X00001]];end;gc=gc+1;gc=gc+0X1;K9=bc[gc];gc=gc+1;zc[0x0000][K9[0X6]]=zc[1];gc=gc+1;do repeat local yn,wn=Lc,zc;do if#yn>0X0 then local JI=({});do for JO,uO in M,yn do for Mb,Yb in M,uO do if not(Yb[1]==wn and Yb[2]>=0)then else local Lk=(Yb[0x2]);if not(not JI[Lk])then else do(JI)[Lk]={wn[Lk]};end;end;(Yb)[0X00001]=JI[Lk];Yb[0x02]=1;end;end;end;end;end;end;until true;end;return;else if A9~=0x9 then zc[K9[0X00002]]=K9[0X06];else(zc)[K9[2]]=cc[K9[0x00006]];end;end;end;end;end;end);if Tc then if Fc then do if wc~=1 then return zc[Ec](E(zc,Ec+0x00001,vc));else return zc[Ec]();end;end;elseif Ec then do return E(zc,Ec,wc);end;end;else do if V(Fc)~="string"then q(Fc,0X0);else do if r(Fc,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if r(Fc,"^.-:%d+: ")then q("Luraph Script:"..(Qc[gc-1]or"(internal)")..":\032"..u(Fc),0X0);else(q)(Fc,0X0);end;end;end;end;end;end;else ic=function(...)local o5=(1);local p5=({});local E5=((k and k()or _ENV));local D5,g5=q3(...);local B5={[2]=Vc,[1]=p5};local R5=((E5==H and fc or E5));D5=D5-0x1;for vE=0X0,D5 do if ac>vE then p5[vE]=g5[vE+1];else break;end;end;if not nc then g5=nil;elseif not(Ac)then else p5[ac]={n=D5>=ac and D5-ac+0X1 or 0,E(g5,ac+1,D5+1)};end;local O5=0x0;do if R5~=E5 then if not(s)then _ENV=R5;else(s)(ic,R5);end;end;end;local W5,a5,A5,G5=c(function()while true do local bR=(bc[o5]);local SR=bR[0X0003];do o5=o5+1;end;if not(SR>=9)then do if not(SR<0X4)then if not(SR<0x06)then do if not(SR>=0X7)then if p5[bR[0x0002]]then o5=bR[0X5];end;else if SR==8 then local Bk=(Uc[bR[0X5]]);local Nk=Bk[5];local nk=(nil);local Xk=#Nk;if not(Xk>0)then else nk={};for Xh=1,Xk do local Ph=(Nk[Xh]);do if Ph[1]==0 then(nk)[Xh-0X001]={p5,Ph[2]};else(nk)[Xh-0X001]=jc[Ph[2]];end;end;end;S(Lc,nk);end;do(p5)[bR[2]]=e3(Bk,nk,R5);end;else o5=bR[5];end;end;end;else if SR==0x005 then do p5[bR[0X2]]=T(p5[bR[0X5]],p5[bR[4]]);end;else end;end;else if not(SR<2)then if SR==3 then p5[bR[0X2]]=R5[bR[0X06]];else repeat local v6,P6=Lc,(p5);do if#v6>0X0 then local wN=({});for c7,u7 in M,v6 do for G6,j6 in M,u7 do if not(j6[0X001]==P6 and j6[0X2]>=0)then else local vV=j6[2];do if not wN[vV]then do wN[vV]={P6[vV]};end;end;end;j6[1]=wN[vV];(j6)[0X02]=1;end;end;end;end;end;until true;local VN=bR[2];do return false,VN,VN+bR[0X00005]-0X2;end;end;else if SR~=1 then p5[0X4]=R5[bR[6]];local UL=(jc[0X0002]);do o5=o5+0x1;end;p5[5]=UL[1][UL[2]];do bR=bc[o5];end;o5=o5+1;local SL,zL=nil,0X2;(p5)[5]=bR[6]/p5[0X05];do o5=o5+0X1;end;p5[4]=p5[0x4]+p5[0X5];bR=bc[o5];o5=o5+1;do(p5)[4]=p5[0X4]*bR[0x1];end;o5=o5+0X01;p5[3]=p5[3]+p5[4];bR=bc[o5];o5=o5+1;local QL=Uc[bR[0X5]];local LL=(QL[5]);local rL=(#LL);do if not(rL>0)then else SL={};for Ml=1,rL do local Yl=LL[Ml];if Yl[0X1]~=0X000 then SL[Ml-0X1]=jc[Yl[2]];else do SL[Ml-0X001]={p5,Yl[0X2]};end;end;end;(S)(Lc,SL);end;end;do(p5)[0x00004]=e3(QL,SL,R5);end;o5=o5+0X00001;p5[zL](p5[zL+0X1],p5[zL+2]);do O5=zL-0x0001;end;o5=o5+0X1;repeat local xa,na=Lc,p5;if#xa>0X00000 then local YB=({});for Yg,pg in M,xa do do for a1,H1 in M,pg do do if not(H1[1]==na and H1[0x2]>=0x0)then else local AO=H1[2];if not YB[AO]then YB[AO]={na[AO]};end;H1[1]=YB[AO];(H1)[2]=1;end;end;end;end;end;end;until true;return;else local ZR=(jc[0X0]);do(p5)[0]=ZR[1][ZR[2]];end;bR=bc[o5];do o5=o5+1;end;do(p5)[0]=p5[0x0][bR[0x1]];end;bR=bc[o5];o5=o5+1;do(p5)[0X0]=p5[0X0][bR[0X001]];end;o5=o5+0X1;do(p5)[0X1]={};end;bR=bc[o5];do o5=o5+0X001;end;(p5[0X1])[bR[6]]=bR[0X1];bR=bc[o5];do o5=o5+1;end;p5[0X002]=R5[bR[6]];o5=o5+1;o5=o5+1;do o5=o5+0X0001;end;do O5=2;end;(p5)[O5]=p5[O5]();bR=bc[o5];do o5=o5+0X1;end;(p5)[3]=R5[bR[0X6]];bR=bc[o5];o5=o5+1;if not p5[0X00003]then o5=bR[0X00005];end;end;end;end;end;else if not(SR>=0XE)then do if SR<11 then if SR~=0X0a then p5[bR[2]]=bR[0x6];else if not p5[bR[2]]then o5=bR[5];end;end;else if not(SR>=12)then do for RP=bR[2],bR[0x5]do p5[RP]=nil;end;end;else do if SR~=0X0000d then(p5)[0X2]=p5[2]+p5[0x0003];bR=bc[o5];o5=o5+0X1;local Nm=(jc[2]);p5[3]=R5[bR[0X6]];do o5=o5+0x1;end;do(p5)[4]=Nm[1][Nm[2]];end;o5=o5+1;do p5[3]=p5[3]/p5[0X004];end;bR=bc[o5];o5=o5+1;(p5)[3]=p5[0X3]*bR[0X00001];o5=o5+1;do(p5)[0X00002]=p5[0x2]+p5[0X00003];end;o5=o5+1;do Nm=jc[1];end;(Nm[0x01])[Nm[0X02]]=p5[2];do o5=o5+1;end;do Nm=jc[3];end;(p5)[0X002]=Nm[1][Nm[0X2]];do bR=bc[o5];end;local dm=(0X002);do o5=o5+1;end;do p5[2]=p5[2][bR[1]];end;o5=o5+1;o5=o5+1;o5=o5+0X00001;Nm=jc[0X3];do(p5)[3]=Nm[1][Nm[2]];end;o5=o5+1;o5=o5+1;do bR=bc[o5];end;o5=o5+1;(p5)[0X4]=bR[6];o5=o5+0X1;(p5)[5]=p5[0];o5=o5+0x1;O5=dm+0X4-0x1;p5[dm](E(p5,dm+1,O5));do O5=dm-1;end;o5=o5+1;o5=o5+0X0001;bR=bc[o5];do o5=o5+0X1;end;(p5)[0X00002]=R5[bR[0X6]];bR=bc[o5];o5=o5+0X1;(p5)[0X2]=p5[0X2]+bR[1];bR=bc[o5];o5=o5+1;R5[bR[6]]=p5[0x002];bR=bc[o5];o5=o5+1;(p5)[0X00002]=R5[bR[0X006]];bR=bc[o5];o5=o5+1;p5[2]=p5[0X2][bR[0X1]];do bR=bc[o5];end;o5=o5+0X1;(p5)[3]=R5[bR[6]];o5=o5+1;o5=o5+0x1;do bR=bc[o5];end;o5=o5+0X0001;do if not(p5[0x3])then else o5=bR[5];end;end;else p5[bR[0x00002]]=B5[bR[5]];end;end;end;end;end;else if not(SR>=16)then if SR==0X00f then local eA=(p5[0X00]);local ZA=0X0003;do p5[ZA+0x00001]=eA;end;(p5)[ZA]=eA[bR[0X1]];o5=o5+0X1;do ZA=3;end;(p5)[ZA]=p5[ZA](p5[ZA+0x00001]);O5=ZA;o5=o5+1;(p5)[0X03]=p5[1][p5[3]];bR=bc[o5];o5=o5+0X1;o5=bR[5];else p5[bR[2]]=bR[6];end;else if SR<17 then p5[bR[2]]={E({},0x1,bR[5])};else if SR~=18 then p5[bR[0X2]]=p5[bR[5]]-p5[bR[0X4]];else do p5[bR[2]]=p5[bR[0X5]]==p5[bR[4]];end;end;end;end;end;end;end;end);if W5 then do if a5 then do if G5~=0X1 then return p5[A5](E(p5,A5+1,O5));else do return p5[A5]();end;end;end;elseif A5 then return E(p5,A5,G5);end;end;else if V(a5)=='s\116\114i\110\103'then do if not(r(a5,'\097\116\116empt\032\116o\032\121\105\101\108\100 \097cr\111\115s m\101tam\101thod\047\067%-cal\108\032\098oun\100ary'))then else return coroutine.yield();end;end;if r(a5,"^\046-\058%d\043\058\032")then(q)("\076\117r\097\112h Scrip\116:"..(Qc[o5-0X1]or"(internal)")..': '..u(a5),0);else q(a5,0X0);end;else q(a5,0);end;end;end;end;end;end;end;else if not(Sc>=0XD1)then do if Sc<207 then do if Sc~=206 then do ic=function(...)local p0=0X1;local G0={};local U0=((k and k()or _ENV));local c0=(U0==H and fc or U0);local P0=({[1]=G0,[2]=Vc});local s0,f0=q3(...);do s0=s0-0X1;end;for h9=0,s0 do if ac>h9 then(G0)[h9]=f0[h9+1];else break;end;end;do if not nc then do f0=nil;end;elseif not(Ac)then else G0[ac]={n=s0>=ac and s0-ac+1 or 0,E(f0,ac+1,s0+1)};end;end;local j0=(0X00000);do if c0==U0 then else if s then s(ic,c0);else _ENV=c0;end;end;end;local x0,e0,t0,v0=c(function()while true do local m9=bc[p0];local N9=(m9[3]);p0=p0+1;if not(N9>=7)then if N9>=0X0003 then if N9>=0x0005 then do if N9==6 then G0[0]=c0[m9[6]];do m9=bc[p0];end;local hR=(0);p0=p0+0X00001;local SR=(G0[0]);do G0[hR+0X1]=SR;end;(G0)[hR]=SR[m9[1]];m9=bc[p0];p0=p0+0X1;G0[2]=m9[6];p0=p0+1;do hR=0;end;(G0)[hR]=G0[hR](G0[hR+1],G0[hR+0X2]);j0=hR;m9=bc[p0];do p0=p0+1;end;do G0[1]=c0[m9[6]];end;m9=bc[p0];p0=p0+0x1;G0[1]=G0[0X1][m9[1]];do m9=bc[p0];end;local gR=(Uc[m9[0X5]]);do p0=p0+0x00001;end;local nR=(nil);local HR=(gR[0X5]);local zR=(#HR);if zR>0 then nR={};for Hz=1,zR do local iz=HR[Hz];do if iz[0X1]~=0x0 then nR[Hz-1]=jc[iz[2]];else(nR)[Hz-0x1]={G0,iz[0x2]};end;end;end;S(Lc,nR);end;(G0)[2]=e3(gR,nR,c0);do p0=p0+0x1;end;hR=0X00001;(G0[hR])(G0[hR+0X01]);j0=hR-1;p0=p0+1;p0=p0+0X00001;p0=p0+1;repeat local Qz,tz=Lc,(G0);if not(#Qz>0)then else local To={};for Ws,Qs in M,Qz do for mh,Sh in M,Qs do do if Sh[1]==tz and Sh[0X0002]>=0 then local qT=(Sh[0X02]);if not(not To[qT])then else(To)[qT]={tz[qT]};end;(Sh)[0X1]=To[qT];(Sh)[2]=0X01;end;end;end;end;end;until true;return;else end;end;else if N9~=4 then G0[m9[0X2]]=m9[6];else(G0)[m9[0x2]]=c0[m9[0X0006]];end;end;else if N9>=0X1 then if N9==0X002 then G0[m9[2]]=G0[m9[0X5]][G0[m9[0X004]]];else(G0)[m9[0x02]]={E({},1,m9[5])};end;else p0=m9[0X005];end;end;else do if N9>=0X000A then if not(N9>=12)then if N9==11 then local I9=(m9[2]);local c9=(G0[m9[5]]);do(G0)[I9+1]=c9;end;G0[I9]=c9[m9[1]];else G0[m9[0x002]]=m9[6];end;else if N9~=0XD then(G0)[m9[0X00002]]=G0[m9[5]]-G0[m9[4]];else local h1=(nil);local t1=(Uc[m9[0X5]]);local o1=(t1[0X00005]);local s1=#o1;if s1>0 then do h1={};end;for Nq=1,s1 do local qq=(o1[Nq]);do if qq[1]~=0X00000 then(h1)[Nq-1]=jc[qq[0X0002]];else h1[Nq-0X01]={G0,qq[2]};end;end;end;S(Lc,h1);end;G0[m9[2]]=e3(t1,h1,c0);end;end;else if N9<8 then G0[m9[2]]=P0[m9[5]];else if N9~=0X9 then for fG=m9[0X002],m9[5]do do(G0)[fG]=nil;end;end;else repeat local oA,QA,nA=Lc,G0,(m9[0X002]);if not(#oA>0)then else local UW=({});for p1,v1 in M,oA do for Xq,Fq in M,v1 do if Fq[0X0001]==QA and Fq[0X002]>=nA then local Aw=(Fq[2]);if not(not UW[Aw])then else(UW)[Aw]={QA[Aw]};end;do(Fq)[1]=UW[Aw];end;(Fq)[2]=0X1;end;end;end;end;until true;end;end;end;end;end;end;end);if not(x0)then if V(e0)~="string"then q(e0,0);else if r(e0,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(r(e0,"\094\046\045\058%\100\043\058\032"))then(q)(e0,0X00000);else(q)("\076\117\114a\112\104\032\083\099r\105\112t:"..(Qc[p0-0X00001]or"(internal)")..': '..u(e0),0X00000);end;end;else if e0 then do if v0~=1 then return G0[t0](E(G0,t0+0X1,j0));else do return G0[t0]();end;end;end;elseif t0 then return E(G0,t0,v0);end;end;end;end;else ic=function(...)local yV,uV=0x01,({});local YV={[1]=uV,[2]=Vc};local UV=(k and k()or _ENV);local jV,BV=q3(...);local fV=(UV==H and fc or UV);do jV=jV-0X1;end;do for Fs=0,jV do if ac>Fs then do uV[Fs]=BV[Fs+0X1];end;else do break;end;end;end;end;local IV=(0X0);if not nc then BV=nil;elseif not(Ac)then else(uV)[ac]={n=jV>=ac and jV-ac+1 or 0X00000,E(BV,ac+1,jV+1)};end;if fV==UV then else if s then s(ic,fV);else do _ENV=fV;end;end;end;local JV,GV,SV,rV=c(function()while true do local zo=bc[yV];local Go=zo[3];yV=yV+0X1;if not(Go>=13)then if not(Go>=0X6)then if Go>=3 then if Go>=0x4 then if Go==0X00005 then uV[zo[2]][uV[zo[0X5]]]=uV[zo[0x4]];else(uV)[3]=fV[zo[0x6]];local TS=(0X4);do zo=bc[yV];end;yV=yV+0X1;uV[0X4]=zo[0x006];zo=bc[yV];yV=yV+1;uV[0X5]=fV[zo[6]];local HS=(0X5);yV=yV+1;uV[6]=uV[2];yV=yV+1;(uV)[HS]=uV[HS](uV[HS+0X00001]);IV=HS;yV=yV+0X0001;do(uV)[0x04]=uV[TS]..uV[TS+1];end;yV=yV+0X00001;HS=3;(uV[HS])(uV[HS+1]);IV=HS-1;do zo=bc[yV];end;yV=yV+1;yV=zo[0X5];end;else uV[0]=fV[zo[0x006]];yV=yV+0X1;do yV=yV+0X1;end;zo=bc[yV];yV=yV+0X1;if uV[0]then yV=zo[5];end;end;else if not(Go>=0X01)then yV=zo[0X5];else if Go==0X002 then uV[0X000]=fV[zo[6]];yV=yV+1;do yV=yV+0X001;end;local ni=0;zo=bc[yV];yV=yV+1;do(uV)[0X1]=zo[0X6];end;yV=yV+0x1;uV[ni]=uV[ni](uV[ni+0x1]);IV=ni;zo=bc[yV];yV=yV+0x1;(uV)[0X1]=fV[zo[0X6]];zo=bc[yV];local wi=Uc[zo[5]];local Qi=(0X2);yV=yV+0x00001;local Li=wi[5];local ri=(nil);local Ri=(#Li);do if not(Ri>0X0)then else ri={};for Ya=0X01,Ri do local Fa=(Li[Ya]);do if Fa[0X1]~=0X0 then ri[Ya-0x001]=jc[Fa[0X2]];else(ri)[Ya-1]={uV,Fa[2]};end;end;end;(S)(Lc,ri);end;end;do(uV)[0X00002]=e3(wi,ri,fV);end;yV=yV+1;ni=1;local Vi=0X3;if Qi==0 then else IV=ni+Qi-0X1;end;local Ii,Yi=nil,nil;do if Qi==1 then do Ii,Yi=q3(uV[ni]());end;else Ii,Yi=q3(uV[ni](E(uV,ni+0X1,IV)));end;end;if Vi~=0X1 then if Vi==0X0 then do Ii=Ii+ni-0X1;end;IV=Ii;else Ii=ni+Vi-2;IV=Ii+0X1;end;local vc=0;for Ey=ni,Ii do do vc=vc+1;end;do(uV)[Ey]=Yi[vc];end;end;else IV=ni-1;end;yV=yV+0x001;yV=yV+1;zo=bc[yV];do yV=yV+0X01;end;if not(uV[0X1])then else yV=zo[0X5];end;else uV[zo[2]]=zo[0x6];end;end;end;else if Go>=9 then if not(Go>=11)then if Go~=0XA then if not(uV[zo[0x00005]]<=uV[zo[0x004]])then else yV=zo[2];end;else(uV)[zo[2]]=fV[zo[0X006]];end;else if Go==12 then if not(uV[zo[2]])then else do yV=zo[0X5];end;end;else uV[zo[0X00002]]=uV[zo[0x0005]][uV[zo[4]]];end;end;else if not(Go>=7)then uV[0]=fV[zo[6]];yV=yV+0x00001;IV=0X0;do(uV)[IV]=uV[IV]();end;yV=yV+0x01;yV=yV+0X1;zo=bc[yV];yV=yV+0X1;do if uV[0x0]then do yV=zo[5];end;end;end;else do if Go~=0X0008 then(uV)[0]=fV[zo[6]];zo=bc[yV];yV=yV+0X1;uV[1]=zo[0X6];yV=yV+0x1;local Mz=(0X00);do(uV)[Mz]=uV[Mz](uV[Mz+1]);end;IV=Mz;do zo=bc[yV];end;do yV=yV+0X1;end;(uV)[0]=uV[0][zo[0X1]];zo=bc[yV];yV=yV+1;if uV[0]then yV=zo[5];end;else uV[zo[0X0002]]={E({},0X1,zo[5])};end;end;end;end;end;else if Go>=0X13 then if not(Go>=22)then do if not(Go>=20)then(uV)[zo[0X2]]=uV[zo[5]]^uV[zo[4]];else if Go~=21 then repeat local hY,JY,vY=Lc,uV,(zo[0X2]);if#hY>0 then local Ie={};for rP,fP in M,hY do for nA,ZA in M,fP do if not(ZA[1]==JY and ZA[0x2]>=vY)then else local db=ZA[2];if not(not Ie[db])then else Ie[db]={JY[db]};end;ZA[0X1]=Ie[db];(ZA)[0X2]=1;end;end;end;end;until true;else do repeat local jh,Lh=Lc,(uV);if not(#jh>0X00000)then else local d9={};do for tb,Cb in M,jh do for Xn,nn in M,Cb do do if not(nn[0X1]==Lh and nn[2]>=0)then else local bH=nn[0X2];if not d9[bH]then d9[bH]={Lh[bH]};end;nn[0X01]=d9[bH];(nn)[0X2]=1;end;end;end;end;end;end;until true;end;do return;end;end;end;end;else if not(Go>=24)then do if Go~=23 then uV[0X0]=fV[zo[6]];yV=yV+1;yV=yV+0x1;do zo=bc[yV];end;yV=yV+1;do(uV)[0X0]=uV[0X0][zo[1]];end;yV=yV+1;yV=yV+1;zo=bc[yV];yV=yV+1;if not(not uV[0])then else do yV=zo[0x5];end;end;else(uV)[0]=fV[zo[6]];yV=yV+1;local eN=(0X0);do yV=yV+1;end;zo=bc[yV];yV=yV+0X001;(uV)[1]=zo[0X6];yV=yV+0X1;(uV[eN])(uV[eN+1]);do IV=eN-1;end;yV=yV+0x1;yV=yV+0x1;zo=bc[yV];yV=yV+0x1;(uV)[0X0]=fV[zo[0X06]];yV=yV+0X0001;IV=0x00000;do(uV)[IV]=uV[IV]();end;yV=yV+1;yV=yV+0x00001;do zo=bc[yV];end;do yV=yV+1;end;if not(zo[0X6]<=uV[0X0])then do yV=zo[2];end;end;end;end;else if Go==25 then local wy=zo[5];local Iy=(uV[wy]);for lV=wy+0X1,zo[0x0004]do Iy=Iy..uV[lV];end;(uV)[zo[2]]=Iy;else(uV)[0X000]=fV[zo[0X6]];yV=yV+1;do yV=yV+0X00001;end;zo=bc[yV];yV=yV+0X001;(uV)[0X0]=uV[0][zo[0X1]];do yV=yV+1;end;yV=yV+1;zo=bc[yV];do yV=yV+1;end;if not(not uV[0X00000])then else yV=zo[0X5];end;end;end;end;else if not(Go>=0X000010)then do if not(Go>=14)then(uV)[0]=fV[zo[6]];do yV=yV+1;end;yV=yV+1;zo=bc[yV];yV=yV+1;(uV)[0x0]=uV[0][zo[1]];yV=yV+1;yV=yV+0X001;local oO=0x0;do zo=bc[yV];end;do yV=yV+1;end;uV[0X001]=zo[6];yV=yV+1;(uV)[oO]=uV[oO](uV[oO+1]);do IV=oO;end;do yV=yV+0X1;end;yV=yV+1;zo=bc[yV];do yV=yV+0X00001;end;do if not uV[0x0]then do yV=zo[0X5];end;end;end;else if Go==0XF then local IF=(jc[0x0]);(uV)[0X0]=IF[0X1][IF[2]];yV=yV+0x1;local hF=(0);yV=yV+1;do zo=bc[yV];end;yV=yV+1;local dF=(uV[0X0]);(uV)[hF+0X1]=dF;uV[hF]=dF[zo[0x0001]];yV=yV+1;do hF=0x0;end;(uV)[hF]=uV[hF](uV[hF+0X01]);IV=hF;zo=bc[yV];yV=yV+1;if not uV[0X0]then yV=zo[5];end;else do for VN=zo[2],zo[5]do do(uV)[VN]=nil;end;end;end;end;end;end;else if Go<17 then uV[zo[2]]=uV[zo[0x5]]*uV[zo[0X0004]];else do if Go==0X12 then local Wt=Uc[zo[0X00005]];local gt=Wt[5];local Yt,dt=#gt,nil;if not(Yt>0)then else dt={};for R5=0X001,Yt do local o5=gt[R5];if o5[0X1]==0 then dt[R5-1]={uV,o5[0X2]};else dt[R5-1]=jc[o5[2]];end;end;(S)(Lc,dt);end;(uV)[zo[0X2]]=e3(Wt,dt,fV);else end;end;end;end;end;end;end;end);if JV then if GV then do if rV~=1 then return uV[SV](E(uV,SV+0X1,IV));else return uV[SV]();end;end;elseif SV then return E(uV,SV,rV);end;else if V(GV)~="string"then q(GV,0X0);else if not(r(GV,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if r(GV,"\094.\045\058%d+\058\032")then q('\076\117raph Scri\112t\058'..(Qc[yV-0x1]or"(internal)")..": "..u(GV),0x0);else(q)(GV,0X0);end;end;end;end;end;end;else if Sc==208 then ic=function(...)local wF,rF=0X001,({});local YF=(k and k()or _ENV);local FF=((YF==H and fc or YF));local dF=({[2]=Vc,[1]=rF});local nF,SF=q3(...);do nF=nF-0X1;end;for A5=0X00000,nF do if not(ac>A5)then break;else rF[A5]=SF[A5+0x0001];end;end;local XF=(0);if not nc then SF=nil;elseif not(Ac)then else(rF)[ac]={n=nF>=ac and nF-ac+1 or 0,E(SF,ac+0X1,nF+1)};end;do if FF==YF then else if s then(s)(ic,FF);else do _ENV=FF;end;end;end;end;local bF,kF,tF,uF=c(function()while true do local gw=bc[wF];local ow=(gw[0X3]);wF=wF+0x1;if ow>=0X0009 then do if not(ow<0xE)then if not(ow>=16)then if ow~=0X000F then do wF=gw[5];end;else if rF[gw[5]]==rF[gw[0x0004]]then wF=gw[0X2];end;end;else if ow>=0X11 then if ow~=0X12 then(rF)[0X1]=FF[gw[6]];wF=wF+1;local iq=1;rF[0X0]=rF[1];gw=bc[wF];wF=wF+0X1;(rF)[0X1]=FF[gw[6]];do wF=wF+0X1;end;wF=wF+1;do gw=bc[wF];end;do wF=wF+0X1;end;(rF)[0X2]=gw[0X6];wF=wF+1;rF[iq](rF[iq+0X0001]);XF=iq-1;gw=bc[wF];wF=wF+1;rF[1]=FF[gw[0X6]];do wF=wF+1;end;XF=0x0001;rF[XF]();do XF=XF-1;end;gw=bc[wF];do wF=wF+1;end;wF=gw[5];else rF[0X1]=FF[gw[0x00006]];do gw=bc[wF];end;do wF=wF+0X0001;end;rF[1]=rF[0X1][gw[0X01]];gw=bc[wF];wF=wF+0x1;if not(not rF[0X1])then else wF=gw[5];end;end;else rF[gw[0x2]]=FF[gw[6]];end;end;else do if ow>=0xB then if ow>=0Xc then if ow==13 then do if not(rF[gw[5]]<=rF[gw[4]])then else wF=gw[2];end;end;else(rF)[gw[2]]=rF[gw[5]]+rF[gw[4]];end;else rF[gw[2]]=gw[6];end;else if ow==0Xa then rF[gw[2]]=rF[gw[5]]/rF[gw[0x4]];else do repeat local IN,sN=Lc,rF;if#IN>0 then local XL=({});for PX,sX in M,IN do for s1,D1 in M,sX do if not(D1[1]==sN and D1[2]>=0x00)then else local Cw=(D1[0X2]);if not XL[Cw]then XL[Cw]={sN[Cw]};end;D1[1]=XL[Cw];(D1)[0X00002]=1;end;end;end;end;until true;end;return;end;end;end;end;end;else if ow<4 then if ow>=0x2 then if ow==3 then rF[gw[0X2]]=o(rF[gw[5]],rF[gw[4]]);else(rF)[1]=FF[gw[6]];local xM=1;wF=wF+0x1;wF=wF+0x1;gw=bc[wF];wF=wF+0X1;(rF)[0x2]=gw[0x6];wF=wF+0x1;do(rF)[xM]=rF[xM](rF[xM+1]);end;XF=xM;wF=wF+0X01;wF=wF+1;gw=bc[wF];wF=wF+0X1;if not rF[0x0001]then do wF=gw[0x5];end;end;end;else if ow==0x00001 then do(rF)[gw[2]]={E({},0x1,gw[5])};end;else for TA=gw[0X2],gw[5]do rF[TA]=nil;end;end;end;else do if not(ow>=0X6)then do if ow==5 then rF[1]=FF[gw[6]];wF=wF+1;wF=wF+0X01;gw=bc[wF];wF=wF+1;rF[1]=rF[1][gw[0X1]];gw=bc[wF];do wF=wF+0x0001;end;if not rF[0X1]then wF=gw[5];end;else if not(not(rF[gw[5]]<=rF[gw[4]]))then else wF=gw[0X2];end;end;end;else if not(ow>=0x00007)then(rF)[gw[0X2]]=Q(rF[gw[0X5]]);else do if ow~=0X8 then local LF=(Uc[gw[0X00005]]);local VF,lF=LF[0x5],nil;local hF=(#VF);do if not(hF>0)then else lF={};for Ic=0x1,hF do local uc=VF[Ic];do if uc[1]==0 then do lF[Ic-0X1]={rF,uc[2]};end;else lF[Ic-1]=jc[uc[2]];end;end;end;S(Lc,lF);end;end;(rF)[gw[2]]=e3(LF,lF,FF);else end;end;end;end;end;end;end;end;end);if bF then if kF then if uF==1 then do return rF[tF]();end;else return rF[tF](E(rF,tF+1,XF));end;elseif tF then return E(rF,tF,uF);end;else if V(kF)~='s\116\114ing'then(q)(kF,0x0);else if not(r(kF,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(r(kF,"^.-:%d+: "))then q(kF,0X0);else(q)('Lu\114\097\112h \083c\114ip\116\058'..(Qc[wF-0x0001]or"(in\116\101\114\110\097l)")..'\058\032'..u(kF),0);end;end;end;end;else do ic=function(...)local Dl=(1);local kl,yl=0,({});local pl=((k and k()or _ENV));local gl,il=(pl==H and fc or pl),{[2]=Vc,[1]=yl};local Zl,Sl=q3(...);Zl=Zl-0X1;for MN=0X000,Zl do do if not(ac>MN)then break;else(yl)[MN]=Sl[MN+0X1];end;end;end;if not nc then Sl=nil;elseif Ac then(yl)[ac]={n=Zl>=ac and Zl-ac+1 or 0X0,E(Sl,ac+0X1,Zl+1)};end;if gl~=pl then if s then(s)(ic,gl);else do _ENV=gl;end;end;end;local hl,Ll,Kl,Wl=c(function()while true do local ks=(bc[Dl]);local ms=ks[0X3];Dl=Dl+0X1;do if ms<0x12 then if not(ms>=0X9)then if not(ms<0X4)then if ms<6 then do if ms~=5 then yl[ks[2]]=J(yl[ks[0X005]],yl[ks[0X004]]);else do yl[ks[2]]=ks[6];end;end;end;else if ms<7 then(yl)[ks[2]]=il[ks[0X5]];else if ms~=8 then yl[1]=false;ks=bc[Dl];Dl=Dl+0X1;(gl)[ks[0X6]]=yl[1];do ks=bc[Dl];end;Dl=Dl+1;(yl)[1]=gl[ks[0x00006]];Dl=Dl+0x1;Dl=Dl+1;ks=bc[Dl];local GG=0X1;Dl=Dl+0X1;(yl)[0X00002]=ks[6];Dl=Dl+0X1;yl[GG]=yl[GG](yl[GG+1]);kl=GG;Dl=Dl+0X0001;do Dl=Dl+0X001;end;ks=bc[Dl];Dl=Dl+1;if yl[1]==ks[0x1]then Dl=ks[0X2];end;else(yl)[ks[2]]=v(yl[ks[0X5]],yl[ks[0X4]]);end;end;end;else if not(ms<0X2)then do if ms~=0X0003 then local qp=Uc[ks[0x5]];local wp=qp[5];local cp=(#wp);local tp=nil;if not(cp>0)then else tp={};for R0=0X00001,cp do local B0=wp[R0];if B0[0X001]~=0 then tp[R0-1]=jc[B0[0X2]];else tp[R0-0X1]={yl,B0[0x2]};end;end;S(Lc,tp);end;(yl)[ks[2]]=e3(qp,tp,gl);else yl[0X1]=gl[ks[0X6]];ks=bc[Dl];Dl=Dl+1;(yl)[0X0001]=yl[1][ks[0X001]];ks=bc[Dl];Dl=Dl+1;if not(not yl[1])then else Dl=ks[5];end;end;end;else if ms==0X1 then yl[0x01]=gl[ks[0X6]];Dl=Dl+1;Dl=Dl+0x1;ks=bc[Dl];Dl=Dl+1;yl[0X01][ks[0x6]]=ks[0X1];ks=bc[Dl];Dl=Dl+1;yl[0x0001]=gl[ks[0X6]];ks=bc[Dl];Dl=Dl+1;(yl)[0X1]=yl[1][ks[0X1]];Dl=Dl+0X1;Dl=Dl+0x01;ks=bc[Dl];Dl=Dl+1;(yl)[0x1]=yl[0X1][ks[0X01]];Dl=Dl+1;Dl=Dl+1;ks=bc[Dl];Dl=Dl+0x00001;(yl)[0X00001]=yl[0X01][ks[0X01]];do Dl=Dl+1;end;Dl=Dl+0X1;do ks=bc[Dl];end;Dl=Dl+1;if not(ks[6]<=yl[1])then do Dl=ks[2];end;end;else do(yl)[ks[0X2]]={E({},1,ks[5])};end;end;end;end;else if ms>=13 then if ms<15 then if ms==0xE then local O9=ks[2];local P9=P(function(...)C();for QN,qN,mN,HN,LN,AN,BN,gN,RN,MN in...do(C)(true,{QN,qN,mN,HN,LN,AN,BN,gN,RN,MN});end;end);(P9)(yl[O9],yl[O9+0X00001],yl[O9+0X2]);do kl=O9;end;do yl[O9]=P9;end;do Dl=ks[5];end;else local L4=jc[0X0];yl[0X0]=L4[1][L4[0X2]];Dl=Dl+1;Dl=Dl+0X1;do ks=bc[Dl];end;Dl=Dl+1;(yl)[0]=yl[0]==ks[1];ks=bc[Dl];Dl=Dl+1;if yl[0]then do Dl=ks[5];end;end;end;else if not(ms<0X10)then if ms==0X11 then else yl[ks[0X2]]=gl[ks[0X006]];end;else if yl[ks[5]]~=ks[1]then Dl=ks[0x2];end;end;end;else if ms<0xB then if ms==10 then do(yl)[0]=gl[ks[0X6]];end;ks=bc[Dl];Dl=Dl+0x0001;(yl)[1]=ks[0x00006];Dl=Dl+0X1;local Ki=(0);(yl)[Ki]=yl[Ki](yl[Ki+1]);kl=Ki;ks=bc[Dl];do Dl=Dl+0X01;end;Dl=ks[5];else do yl[1]=true;end;do ks=bc[Dl];end;Dl=Dl+1;gl[ks[6]]=yl[0X1];do ks=bc[Dl];end;Dl=Dl+1;Dl=ks[0X00005];end;else if ms==12 then do gl[ks[0X6]]=yl[0];end;ks=bc[Dl];Dl=Dl+1;(yl)[0]=gl[ks[6]];Dl=Dl+1;do Dl=Dl+0x00001;end;ks=bc[Dl];do Dl=Dl+0X01;end;do(yl)[0X000]=yl[0X0][ks[1]];end;ks=bc[Dl];Dl=Dl+0X1;if not(yl[0x0])then else Dl=ks[5];end;else repeat local Te,ve=Lc,(yl);if#Te>0x00 then local sK={};for W5,d5 in M,Te do for sG,nG in M,d5 do do if not(nG[0x0001]==ve and nG[2]>=0)then else local XF=nG[0X02];do if not sK[XF]then sK[XF]={ve[XF]};end;end;nG[1]=sK[XF];do(nG)[2]=1;end;end;end;end;end;end;until true;return;end;end;end;end;else do if ms>=27 then if not(ms>=31)then do if ms<0X1d then if ms~=0X1C then local SL=ks[0x2];local YL=(ks[5]);do kl=SL+YL-1;end;repeat local Hw,lw=Lc,yl;if#Hw>0 then local F7=({});for c7,R7 in M,Hw do for C0,e0 in M,R7 do do if not(e0[1]==lw and e0[0X2]>=0x0)then else local io=e0[2];if not F7[io]then do F7[io]={lw[io]};end;end;(e0)[1]=F7[io];(e0)[0x2]=1;end;end;end;end;end;until true;return true,SL,YL;else do Dl=ks[0x5];end;end;else do if ms~=0X00001e then local ta=(jc[0X0]);(yl)[0X00]=ta[1][ta[2]];Dl=Dl+1;Dl=Dl+0X1;do ks=bc[Dl];end;Dl=Dl+1;(yl)[0]=yl[0X0]==ks[1];ks=bc[Dl];do Dl=Dl+0x1;end;Dl=ks[0X5];else do if not(not(ks[0x00006]<=yl[ks[0X04]]))then else Dl=ks[2];end;end;end;end;end;end;else if ms<0X021 then if ms==0X0020 then(yl)[2]=gl[ks[0x6]];Dl=Dl+0X1;kl=0x00002;do yl[kl]=yl[kl]();end;Dl=Dl+1;do Dl=Dl+1;end;ks=bc[Dl];Dl=Dl+0X1;if not(yl[0X2])then else Dl=ks[5];end;else if not(ks[6]<yl[ks[0x4]])then Dl=ks[2];end;end;else do if ms<0X00022 then do for xj=ks[0x2],ks[0X0005]do do(yl)[xj]=nil;end;end;end;else if ms~=0X23 then if not yl[ks[2]]then Dl=ks[0X5];end;else(yl)[0X02]=gl[ks[6]];ks=bc[Dl];do Dl=Dl+0x1;end;(yl)[2]=yl[0x2][ks[1]];Dl=Dl+1;Dl=Dl+0X001;ks=bc[Dl];Dl=Dl+0X001;if not(yl[0X2])then else Dl=ks[0X5];end;end;end;end;end;end;else if ms<0X16 then if not(ms>=0x14)then if ms~=0X13 then yl[0X01]=gl[ks[0X6]];Dl=Dl+1;Dl=Dl+1;Dl=Dl+0X1;(yl)[0X2]=yl[0X0];do Dl=Dl+1;end;local Ub=1;(yl)[Ub]=yl[Ub](yl[Ub+1]);kl=Ub;do ks=bc[Dl];end;Dl=Dl+0X0001;if yl[1]~=ks[1]then Dl=ks[2];end;else yl[0X1]=gl[ks[0X006]];Dl=Dl+0X001;Dl=Dl+0X001;do ks=bc[Dl];end;Dl=Dl+1;yl[0X1]=yl[0X1][ks[1]];ks=bc[Dl];Dl=Dl+0X1;if not(not yl[0X1])then else Dl=ks[0X05];end;end;else do if ms~=0X15 then yl[1]=gl[ks[6]];do Dl=Dl+1;end;Dl=Dl+0X1;do ks=bc[Dl];end;Dl=Dl+1;(yl[1])[ks[0X6]]=ks[0X1];ks=bc[Dl];do Dl=Dl+0x1;end;Dl=ks[5];else local w2=(jc[0]);yl[0X0]=w2[1][w2[2]];ks=bc[Dl];Dl=Dl+1;yl[0X0000]=yl[0]==ks[0X0001];ks=bc[Dl];do Dl=Dl+1;end;Dl=ks[0X0005];end;end;end;else if not(ms>=0X18)then do if ms~=0X0017 then do yl[0X2]=gl[ks[0X0006]];end;ks=bc[Dl];Dl=Dl+1;(yl)[3]=ks[0X6];Dl=Dl+1;local YN=2;yl[4]=true;Dl=Dl+1;do yl[YN]=yl[YN](yl[YN+1],yl[YN+2]);end;kl=YN;Dl=Dl+0X1;local ZN=yl[0X2];Dl=Dl+1;do ks=bc[Dl];end;Dl=Dl+1;YN=0X2;yl[YN+1]=ZN;(yl)[YN]=ZN[ks[0X1]];ks=bc[Dl];do Dl=Dl+1;end;(yl)[4]=ks[6];Dl=Dl+1;do YN=0X2;end;yl[YN]=yl[YN](yl[YN+0X00001],yl[YN+2]);kl=YN;do ks=bc[Dl];end;Dl=Dl+0X1;do(yl)[2]=yl[0x2][ks[1]];end;do Dl=Dl+1;end;Dl=Dl+0X0001;ks=bc[Dl];Dl=Dl+0X1;Dl=ks[5];else do if not(yl[ks[0X2]])then else do Dl=ks[0X005];end;end;end;end;end;else if ms>=0X019 then if ms==0X1a then yl[2]=gl[ks[6]];ks=bc[Dl];Dl=Dl+1;yl[0X2][ks[6]]=ks[1];ks=bc[Dl];Dl=Dl+0x1;yl[2]=gl[ks[6]];Dl=Dl+1;local fk=2;do Dl=Dl+1;end;ks=bc[Dl];Dl=Dl+1;do(yl[0X2])[ks[0x6]]=ks[1];end;do ks=bc[Dl];end;Dl=Dl+0X1;(yl)[0X2]=gl[ks[0x6]];Dl=Dl+1;kl=0X2;local dk=jc[1];(yl[kl])();kl=kl-1;Dl=Dl+0X001;Dl=Dl+0X1;ks=bc[Dl];Dl=Dl+0X0001;(yl)[2]=gl[ks[6]];ks=bc[Dl];Dl=Dl+1;(yl)[3]=gl[ks[0X06]];Dl=Dl+1;yl[fk](yl[fk+1]);kl=fk-1;Dl=Dl+1;do Dl=Dl+0X1;end;Dl=Dl+1;(yl)[0X2]=dk[1][dk[2]];Dl=Dl+1;do Dl=Dl+1;end;ks=bc[Dl];Dl=Dl+0x1;fk=0X2;local yk=yl[0x2];do yl[fk+0X1]=yk;end;(yl)[fk]=yk[ks[0X1]];Dl=Dl+1;do fk=0X002;end;(yl[fk])(yl[fk+1]);kl=fk-0x1;Dl=Dl+1;Dl=Dl+1;Dl=Dl+1;repeat local fI,nI=Lc,(yl);if#fI>0X000 then local th={};for eq,fq in M,fI do for Xu,mu in M,fq do if not(mu[1]==nI and mu[0X2]>=0x0)then else local IM=mu[0X2];if not th[IM]then do(th)[IM]={nI[IM]};end;end;do(mu)[1]=th[IM];end;mu[2]=0X1;end;end;end;end;until true;return;else yl[1]=gl[ks[0X6]];do Dl=Dl+0X001;end;Dl=Dl+1;ks=bc[Dl];Dl=Dl+1;do(yl)[0X1]=yl[1][ks[0X1]];end;do Dl=Dl+1;end;do Dl=Dl+1;end;ks=bc[Dl];Dl=Dl+1;if not yl[1]then Dl=ks[0X00005];end;end;else do if yl[ks[0X5]]~=ks[1]then else Dl=ks[2];end;end;end;end;end;end;end;end;end;end;end);if hl then if Ll then if Wl~=0x0001 then do return yl[Kl](E(yl,Kl+1,kl));end;else return yl[Kl]();end;elseif Kl then return E(yl,Kl,Wl);end;else do if V(Ll)=="string"then if not(r(Ll,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(r(Ll,"^.-:%d+: "))then(q)(Ll,0);else q("Luraph Script:"..(Qc[Dl-0X1]or'\040i\110\116e\114n\097l\041')..":\032"..u(Ll),0);end;else(q)(Ll,0x000);end;end;end;end;end;end;end;end;else if not(Sc<211)then if Sc~=0XD4 then ic=function(...)local S8={};local N8=1;local E8=(k and k()or _ENV);local R8={[1]=S8,[2]=Vc};local m8=0X0;local F8,Z8=q3(...);F8=F8-1;for WG=0X0,F8 do if ac>WG then(S8)[WG]=Z8[WG+1];else break;end;end;local w8=((E8==H and fc or E8));do if not nc then Z8=nil;elseif Ac then S8[ac]={n=F8>=ac and F8-ac+0X1 or 0x0,E(Z8,ac+0X1,F8+0X1)};end;end;if w8==E8 then else do if s then s(ic,w8);else _ENV=w8;end;end;end;local G8,o8,J8,q8=c(function()do while true do local jS=bc[N8];local XS=jS[0X0003];N8=N8+1;if not(XS<11)then if not(XS<16)then if XS>=19 then if XS<0X00014 then S8[1]=w8[jS[0X0006]];N8=N8+0X1;do N8=N8+0x001;end;jS=bc[N8];N8=N8+1;if not(not S8[1])then else N8=jS[0X05];end;else if XS~=0X00015 then(S8)[jS[0X002]]=R8[jS[5]];else local h1=(S8[jS[0X05]]/S8[jS[0x0004]]);(S8)[jS[2]]=h1-h1%1;end;end;else if not(XS>=0X000011)then(S8)[jS[2]]=S8[jS[5]]/S8[jS[4]];else do if XS==18 then N8=jS[5];else S8[1]=w8[jS[0x6]];N8=N8+1;do m8=1;end;(S8[m8])();do m8=m8-1;end;jS=bc[N8];N8=N8+0X00001;S8[0X1]=w8[jS[6]];N8=N8+1;N8=N8+0X01;jS=bc[N8];N8=N8+1;S8[2]=jS[6];do jS=bc[N8];end;N8=N8+0x1;(S8)[3]=w8[jS[0X6]];jS=bc[N8];N8=N8+0X1;(S8)[3]=S8[3][jS[1]];do N8=N8+0x1;end;local uL=(0);N8=N8+0X0001;jS=bc[N8];N8=N8+0X1;do S8[0X004]=jS[0X6];end;jS=bc[N8];N8=N8+0x1;local FL=0X0003;(S8)[5]=jS[6];jS=bc[N8];do N8=N8+1;end;S8[6]=jS[6];N8=N8+0X1;local pL=(0x4);if pL~=0 then m8=FL+pL-1;end;local wL,mL=nil,(nil);if pL~=1 then do wL,mL=q3(S8[FL](E(S8,FL+0X01,m8)));end;else do wL,mL=q3(S8[FL]());end;end;if uL~=1 then do if uL~=0 then do wL=FL+uL-0X2;end;do m8=wL+1;end;else wL=wL+FL-1;m8=wL;end;end;local yN=(0X00);for MT=FL,wL do do yN=yN+1;end;do(S8)[MT]=mL[yN];end;end;else m8=FL-1;end;N8=N8+0X1;do FL=1;end;(S8[FL])(E(S8,FL+1,m8));m8=FL-0X1;N8=N8+0X01;N8=N8+1;jS=bc[N8];N8=N8+0x00001;do N8=jS[5];end;end;end;end;end;else do if not(XS>=13)then if XS==0x0C then repeat local NV,KV=Lc,S8;if not(#NV>0)then else local g_={};do for PQ,JQ in M,NV do for B0,m0 in M,JQ do do if not(m0[1]==KV and m0[0X2]>=0X0)then else local L4=m0[0X2];if not g_[L4]then do g_[L4]={KV[L4]};end;end;(m0)[0X1]=g_[L4];do(m0)[0X2]=1;end;end;end;end;end;end;end;until true;return;else do(S8)[1]=w8[jS[6]];end;do N8=N8+1;end;N8=N8+1;jS=bc[N8];N8=N8+0X00001;if not(not S8[0X01])then else N8=jS[0X5];end;end;else if not(XS>=0X00E)then(S8)[jS[0X2]]=S8[jS[0x005]][S8[jS[0x00004]]];else do if XS==15 then(S8)[jS[0x2]]=jS[0x6];else for bw=jS[0x02],jS[5]do do S8[bw]=nil;end;end;end;end;end;end;end;end;else if XS<0X5 then if not(XS<0X2)then if XS>=3 then if XS~=0X4 then(S8)[0X1]=w8[jS[6]];N8=N8+0X01;do N8=N8+0X1;end;N8=N8+1;m8=1;S8[m8]();m8=m8-0X1;jS=bc[N8];N8=N8+1;(S8)[1]=w8[jS[6]];N8=N8+1;do N8=N8+1;end;local Vg=(0x1);do jS=bc[N8];end;N8=N8+0X1;do S8[2]=jS[0X6];end;jS=bc[N8];do N8=N8+0x1;end;S8[0x3]=w8[jS[6]];do jS=bc[N8];end;N8=N8+0X1;S8[3]=S8[3][jS[0X1]];do jS=bc[N8];end;do N8=N8+1;end;S8[3]=S8[0X003][jS[1]];jS=bc[N8];N8=N8+1;(S8)[0X003]=S8[0X00003][jS[1]];N8=N8+0x0001;N8=N8+1;jS=bc[N8];do N8=N8+1;end;S8[0X3]=S8[0X3][jS[1]];N8=N8+0X0001;N8=N8+0X00001;jS=bc[N8];N8=N8+1;S8[0x3]=S8[0X3][jS[1]];do N8=N8+1;end;N8=N8+1;do N8=N8+1;end;(S8[Vg])(S8[Vg+1],S8[Vg+2]);do m8=Vg-1;end;N8=N8+1;do N8=N8+0x1;end;jS=bc[N8];do N8=N8+1;end;do N8=jS[5];end;else do(S8)[0x1]=w8[jS[6]];end;N8=N8+0x1;N8=N8+0X1;N8=N8+0X1;m8=0x00001;S8[m8]();local T8=(0);m8=m8-1;jS=bc[N8];N8=N8+0X1;S8[0X01]=w8[jS[0X6]];N8=N8+1;do N8=N8+0X0001;end;jS=bc[N8];N8=N8+1;(S8)[0x0002]=jS[0X006];jS=bc[N8];N8=N8+1;(S8)[0x00003]=w8[jS[0x6]];N8=N8+1;do N8=N8+0X00001;end;jS=bc[N8];N8=N8+1;S8[0X3]=S8[0X0003][jS[0X0001]];do N8=N8+1;end;N8=N8+0x00001;jS=bc[N8];N8=N8+0X1;(S8)[4]=jS[0X6];jS=bc[N8];N8=N8+1;(S8)[5]=jS[6];local H8=3;do jS=bc[N8];end;N8=N8+1;(S8)[6]=jS[0x06];do N8=N8+0x1;end;local O8=(0x04);if O8==0 then else do m8=H8+O8-0X001;end;end;local L8,v8=nil,nil;if O8~=0x1 then L8,v8=q3(S8[H8](E(S8,H8+0X1,m8)));else L8,v8=q3(S8[H8]());end;if T8~=0X1 then if T8==0 then L8=L8+H8-1;m8=L8;else L8=H8+T8-2;m8=L8+0x01;end;local LP=0;for TL=H8,L8 do LP=LP+0X001;(S8)[TL]=v8[LP];end;else m8=H8-1;end;N8=N8+0X1;N8=N8+0x1;N8=N8+0X1;do H8=1;end;S8[H8](E(S8,H8+1,m8));m8=H8-1;N8=N8+1;do N8=N8+0X1;end;jS=bc[N8];do N8=N8+1;end;do N8=jS[0X5];end;end;else do S8[0x01]=w8[jS[0X6]];end;N8=N8+1;N8=N8+0X1;do jS=bc[N8];end;N8=N8+0X1;do(S8)[0X02]=w8[jS[6]];end;local C_=(0X1);N8=N8+0X1;do N8=N8+0X1;end;do jS=bc[N8];end;N8=N8+1;do(S8)[0X2]=S8[0X02][jS[0X1]];end;do jS=bc[N8];end;do N8=N8+1;end;do(S8)[2]=S8[2][jS[1]];end;N8=N8+1;N8=N8+0X1;jS=bc[N8];N8=N8+0x001;(S8)[0X002]=S8[2][jS[1]];N8=N8+0X001;N8=N8+1;do jS=bc[N8];end;do N8=N8+1;end;(S8)[0X2]=S8[2][jS[1]];N8=N8+1;N8=N8+1;do N8=N8+1;end;(S8)[C_]=S8[C_](S8[C_+1]);m8=C_;jS=bc[N8];N8=N8+0X001;if not(S8[0X1]<=jS[1])then N8=jS[0X2];end;end;else if XS==1 then do if S8[jS[5]]==jS[0X1]then else N8=jS[0X002];end;end;else if S8[jS[5]]~=S8[jS[4]]then else N8=jS[0x002];end;end;end;else do if not(XS<8)then if XS<9 then(S8)[1]=w8[jS[0X6]];jS=bc[N8];N8=N8+1;do(S8)[2]=w8[jS[0X6]];end;N8=N8+1;N8=N8+0x001;jS=bc[N8];do N8=N8+0x1;end;do S8[2]=S8[0X2][jS[0X1]];end;N8=N8+1;do N8=N8+0X01;end;jS=bc[N8];N8=N8+1;(S8)[2]=S8[0X2][jS[1]];do N8=N8+1;end;local pL=1;N8=N8+1;jS=bc[N8];do N8=N8+0x1;end;S8[0X2]=S8[2][jS[0X001]];jS=bc[N8];N8=N8+1;S8[2]=S8[2][jS[1]];jS=bc[N8];do N8=N8+1;end;S8[2]=S8[2][jS[0X1]];N8=N8+0x1;(S8)[pL]=S8[pL](S8[pL+0x001]);do m8=pL;end;do N8=N8+0X00001;end;do N8=N8+0X1;end;jS=bc[N8];N8=N8+0x1;if not(not(S8[1]<=jS[0X1]))then else N8=jS[2];end;else if XS==10 then(S8)[jS[2]]={E({},1,jS[5])};else end;end;else if not(XS<0X6)then if XS~=7 then(S8)[jS[0X002]]=w8[jS[0X0006]];else(S8)[1]=w8[jS[0X6]];jS=bc[N8];N8=N8+1;S8[0X00002]=w8[jS[6]];do N8=N8+1;end;local eG=(0X1);N8=N8+1;jS=bc[N8];N8=N8+0X1;(S8)[2]=S8[0X2][jS[1]];jS=bc[N8];N8=N8+0X001;S8[0x002]=S8[0X02][jS[0X00001]];N8=N8+1;N8=N8+0X00001;do jS=bc[N8];end;N8=N8+1;do S8[0x2]=S8[2][jS[0X1]];end;do N8=N8+0X1;end;N8=N8+1;jS=bc[N8];N8=N8+0X00001;S8[2]=S8[2][jS[1]];do N8=N8+0X1;end;N8=N8+0X1;N8=N8+0X0001;S8[eG]=S8[eG](S8[eG+1]);m8=eG;do jS=bc[N8];end;N8=N8+0x1;if not(not(S8[0X01]<=jS[0X1]))then else N8=jS[2];end;end;else local uW=(Uc[jS[0X5]]);local TW,QW=uW[5],nil;local oW=#TW;if oW>0X00000 then QW={};for e1=0X00001,oW do local G1=TW[e1];if G1[1]~=0 then(QW)[e1-1]=jc[G1[0X2]];else QW[e1-1]={S8,G1[2]};end;end;(S)(Lc,QW);end;S8[jS[2]]=e3(uW,QW,w8);end;end;end;end;end;end;end;end);do if G8 then if o8 then do if q8~=0x1 then return S8[J8](E(S8,J8+0x1,m8));else return S8[J8]();end;end;elseif not(J8)then else return E(S8,J8,q8);end;else if V(o8)~="\115\116\114\105\110g"then(q)(o8,0X0);else do if r(o8,'\097tt\101m\112\116\032\116\111\032y\105e\108\100 \097\099ro\115s meta\109eth\111d\047C\037-cal\108\032bou\110d\097\114y')then do return coroutine.yield();end;end;end;if r(o8,"^.-:%d+: ")then q('\076ur\097ph S\099\114\105p\116\058'..(Qc[N8-1]or"(\105\110te\114nal)")..":\032"..u(o8),0X0);else q(o8,0);end;end;end;end;end;else ic=function(...)local hu,bu=1,{};local ku=((k and k()or _ENV));local mu,Uu=q3(...);local qu=(ku==H and fc or ku);local Nu={[1]=bu,[2]=Vc};do mu=mu-0X01;end;for tv=0,mu do if not(ac>tv)then break;else bu[tv]=Uu[tv+0X1];end;end;if not nc then Uu=nil;elseif not(Ac)then else(bu)[ac]={n=mu>=ac and mu-ac+1 or 0,E(Uu,ac+1,mu+1)};end;local zu=0X00;do if qu~=ku then if s then s(ic,qu);else do _ENV=qu;end;end;end;end;local Gu,cu,iu,Xu=c(function()while true do local gw=(bc[hu]);local Sw=(gw[3]);hu=hu+0X1;if not(Sw>=0x9)then if Sw>=4 then do if not(Sw>=0X6)then do if Sw~=0x5 then else if not(not(bu[gw[0X05]]<bu[gw[4]]))then else hu=gw[0x0002];end;end;end;else do if not(Sw<0X00007)then if Sw==0X00008 then(bu)[gw[0x2]]=qu[gw[6]];else for sV=gw[0x2],gw[0x5]do do(bu)[sV]=nil;end;end;end;else if bu[gw[0X5]]~=bu[gw[0X004]]then hu=gw[0X2];end;end;end;end;end;else if Sw>=2 then if Sw==3 then do if not(bu[gw[2]])then else hu=gw[5];end;end;else bu[gw[2]]={E({},0X00001,gw[0X5])};end;else if Sw~=1 then(bu)[gw[0x0002]]=-bu[gw[5]];else do if bu[gw[5]]~=bu[gw[0x00004]]then else do hu=gw[2];end;end;end;end;end;end;else do if Sw<0XD then if Sw<11 then do if Sw==10 then local kP=Uc[gw[5]];local tP,DP=kP[0X5],(nil);local RP=#tP;if RP>0 then do DP={};end;do for Qg=1,RP do local ag=(tP[Qg]);if ag[0X001]~=0 then DP[Qg-1]=jc[ag[0x0002]];else DP[Qg-1]={bu,ag[2]};end;end;end;(S)(Lc,DP);end;(bu)[gw[2]]=e3(kP,DP,qu);else(bu)[gw[0X002]]=bu[gw[5]];end;end;else if Sw~=12 then do repeat local Az,dz=Lc,bu;do if#Az>0X0 then local JH={};for Rp,Hp in M,Az do for s8,v8 in M,Hp do if v8[0X1]==dz and v8[0X00002]>=0 then local nI=(v8[2]);if not JH[nI]then do JH[nI]={dz[nI]};end;end;v8[1]=JH[nI];v8[2]=0x1;end;end;end;end;end;until true;end;return;else hu=gw[0x00005];end;end;else if not(Sw<15)then do if not(Sw<16)then do if Sw~=17 then if not(bu[gw[0X5]]<bu[gw[4]])then else do hu=gw[2];end;end;else bu[0X0005]=qu[gw[0X06]];do gw=bc[hu];end;local Bo=Uc[gw[0x5]];local Ko=Bo[0X0005];hu=hu+1;local eo,ko=nil,(#Ko);local lo=5;if not(ko>0)then else eo={};for qe=1,ko do local Se=(Ko[qe]);if Se[1]~=0 then do eo[qe-0X01]=jc[Se[2]];end;else do(eo)[qe-0X1]={bu,Se[2]};end;end;end;S(Lc,eo);end;(bu)[6]=e3(Bo,eo,qu);hu=hu+0x1;(bu[lo])(bu[lo+1]);do zu=lo-1;end;hu=hu+0X001;hu=hu+0X1;gw=bc[hu];hu=hu+0X1;bu[0X5]=qu[gw[0X6]];do hu=hu+1;end;hu=hu+0X00001;hu=hu+0x1;do bu[6]=bu[0X0];end;hu=hu+1;do bu[0x7]=bu[0X4];end;hu=hu+1;bu[0x00008]=bu[1];hu=hu+0X1;lo=0X5;local po=4;zu=lo+po-0X1;repeat local Rk,Dk=Lc,bu;do if#Rk>0X0 then local Ol={};for Cm,Am in M,Rk do do for Bh,Yh in M,Am do if not(Yh[0X01]==Dk and Yh[2]>=0)then else local tt=(Yh[0X2]);do if not Ol[tt]then(Ol)[tt]={Dk[tt]};end;end;Yh[1]=Ol[tt];do Yh[2]=1;end;end;end;end;end;end;end;until true;return true,lo,po;end;end;else if not(bu[gw[0X5]]<=bu[gw[0x4]])then else do hu=gw[2];end;end;end;end;else if Sw==0X00e then repeat local EP,FP=Lc,bu;if not(#EP>0)then else local uj=({});for LI,fI in M,EP do for LO,lO in M,fI do if lO[0X1]==FP and lO[2]>=0x0 then local Uf=(lO[2]);if not uj[Uf]then do uj[Uf]={FP[Uf]};end;end;do(lO)[0X01]=uj[Uf];end;(lO)[2]=1;end;end;end;end;until true;return false,gw[2],zu;else bu[gw[0X2]]=gw[6];end;end;end;end;end;end;end);if Gu then if cu then if Xu~=1 then do return bu[iu](E(bu,iu+1,zu));end;else do return bu[iu]();end;end;elseif iu then return E(bu,iu,Xu);end;else if V(cu)~="string"then(q)(cu,0X0);else if r(cu,'att\101\109p\116\032\116o\032\121\105\101l\100\032\097c\114\111\115s\032\109e\116a\109eth\111\100/\067\037-\099\097l\108 b\111\117nd\097ry')then return coroutine.yield();end;if not(r(cu,"^.-:%d+: "))then(q)(cu,0X0);else(q)("Luraph Script:"..(Qc[hu-1]or"(internal)")..':\032'..u(cu),0X000);end;end;end;end;end;else if Sc~=210 then do ic=function(...)local Pc={};local Jc=0X001;local wc=(k and k()or _ENV);local sc=0;local Kc=({[1]=Pc,[2]=Vc});local Ic=(wc==H and fc or wc);local yc,Bc=q3(...);yc=yc-0X1;for ji=0X0000,yc do if ac>ji then do Pc[ji]=Bc[ji+0X1];end;else break;end;end;do if not nc then Bc=nil;elseif Ac then(Pc)[ac]={n=yc>=ac and yc-ac+0X1 or 0,E(Bc,ac+1,yc+1)};end;end;do if Ic~=wc then if not(s)then _ENV=Ic;else s(ic,Ic);end;end;end;local qc,Cc,vc,rc=c(function()while true do local jd=(bc[Jc]);local hd=(jd[3]);Jc=Jc+1;if hd>=0X0d then if hd<0X14 then do if not(hd>=0x0010)then if not(hd>=0XE)then Pc[1]=Ic[jd[6]];do Jc=Jc+1;end;Jc=Jc+0x1;jd=bc[Jc];do Jc=Jc+1;end;(Pc)[0X1]=Pc[0X1][jd[0x1]];jd=bc[Jc];Jc=Jc+1;do if not Pc[1]then Jc=jd[5];end;end;else if hd==15 then do if Pc[jd[0x002]]then Jc=jd[5];end;end;else(Pc)[jd[2]]=jd[0X6];end;end;else if not(hd<18)then if hd==19 then(Pc)[0X1]=Ic[jd[6]];Jc=Jc+1;Jc=Jc+0X1;local G5=(0X001);jd=bc[Jc];do Jc=Jc+0X001;end;do Pc[2]=jd[0X6];end;do Jc=Jc+0X1;end;Pc[G5]=Pc[G5](Pc[G5+0X1]);sc=G5;do Jc=Jc+0X1;end;Jc=Jc+0X1;do jd=bc[Jc];end;do Jc=Jc+1;end;if not(Pc[1])then else Jc=jd[5];end;else Pc[jd[2]]={E({},1,jd[0x5])};end;else if hd==17 then local l7=jd[0x2];local h7=jd[0X5];sc=l7+h7-1;repeat local XO,uO=Lc,Pc;if not(#XO>0X0)then else local u5=({});for mD,bD in M,XO do for QX,oX in M,bD do if not(oX[0x1]==uO and oX[2]>=0X00000)then else local Qo=oX[2];if not(not u5[Qo])then else do(u5)[Qo]={uO[Qo]};end;end;do oX[0X1]=u5[Qo];end;oX[0X2]=1;end;end;end;end;until true;do return true,l7,h7;end;else(Pc)[0X1]=Ic[jd[0X6]];Jc=Jc+0x1;do Jc=Jc+0X1;end;jd=bc[Jc];do Jc=Jc+0X1;end;if not Pc[1]then Jc=jd[5];end;end;end;end;end;else if not(hd>=0X17)then if hd<0X15 then do for y8=jd[0X2],jd[5]do do Pc[y8]=nil;end;end;end;else if hd~=22 then do Pc[0X01]=Ic[jd[6]];end;do Jc=Jc+1;end;do Jc=Jc+1;end;jd=bc[Jc];Jc=Jc+0X0001;if not(not Pc[1])then else Jc=jd[0X005];end;else local pE=jd[0X00005];local bE=Pc[pE];for Gz=pE+0x1,jd[0X00004]do bE=bE..Pc[Gz];end;(Pc)[jd[0x2]]=bE;end;end;else if hd<0X19 then if hd~=0X018 then Pc[1]=Ic[jd[6]];jd=bc[Jc];Jc=Jc+1;(Pc)[1]=Pc[1][jd[0X1]];Jc=Jc+0X1;do Jc=Jc+0X00001;end;jd=bc[Jc];Jc=Jc+1;if not(not Pc[0X01])then else Jc=jd[5];end;else local SD=Uc[jd[5]];local jD=nil;local TD=(SD[5]);local XD=(#TD);if not(XD>0)then else jD={};for HD=0X1,XD do local VD=TD[HD];if VD[1]==0x00000 then(jD)[HD-0X1]={Pc,VD[0X2]};else(jD)[HD-0X1]=jc[VD[2]];end;end;(S)(Lc,jD);end;(Pc)[jd[0x02]]=e3(SD,jD,Ic);end;else if hd~=0X00001a then Pc[0]=Ic[jd[0x006]];jd=bc[Jc];Jc=Jc+1;Pc[0]=Pc[0X000][jd[1]];Jc=Jc+1;local zU=0x00;Jc=Jc+0X1;do jd=bc[Jc];end;do Jc=Jc+0x1;end;Pc[1]=jd[6];do jd=bc[Jc];end;Jc=Jc+1;(Pc)[2]=Ic[jd[6]];Jc=Jc+0x1;(Pc)[zU]=Pc[zU](Pc[zU+1],Pc[zU+0x2]);sc=zU;Jc=Jc+0X001;do Jc=Jc+0X1;end;jd=bc[Jc];Jc=Jc+1;Pc[0x0000][jd[0X6]]=jd[0x1];jd=bc[Jc];do Jc=Jc+1;end;Pc[0][jd[6]]=jd[1];jd=bc[Jc];do Jc=Jc+0x001;end;Pc[0X000][jd[6]]=jd[1];jd=bc[Jc];do Jc=Jc+0X1;end;Pc[1]=Ic[jd[6]];Jc=Jc+1;do Jc=Jc+0X1;end;jd=bc[Jc];Jc=Jc+0x001;(Pc)[1]=Pc[0X1][jd[0X1]];Jc=Jc+0x0001;do Jc=Jc+0X1;end;do jd=bc[Jc];end;do Jc=Jc+1;end;Pc[2]=jd[6];jd=bc[Jc];Jc=Jc+0X0001;Pc[0X3]=jd[0X0006];jd=bc[Jc];Jc=Jc+1;do Pc[0X4]=jd[0x6];end;do Jc=Jc+0X00001;end;zU=0X1;do sc=zU+0X4-0X1;end;do Pc[zU]=Pc[zU](E(Pc,zU+1,sc));end;do sc=zU;end;do jd=bc[Jc];end;Jc=Jc+0x01;Pc[0][jd[6]]=Pc[0X1];jd=bc[Jc];Jc=Jc+1;Jc=jd[0X5];else Jc=jd[5];end;end;end;end;else do if hd<0x006 then do if hd<3 then do if not(hd>=0X1)then Pc[1]=Ic[jd[6]];do jd=bc[Jc];end;do Jc=Jc+0X0001;end;Pc[0x1]=Pc[0X00001][jd[0x1]];jd=bc[Jc];Jc=Jc+1;if not(Pc[1])then else do Jc=jd[0X5];end;end;else if hd~=2 then(Ic)[jd[0x006]]=Pc[jd[0X2]];else repeat local QV,BV=Lc,(Pc);if#QV>0x00000 then local Dd=({});for iP,eP in M,QV do for RK,PK in M,eP do if not(PK[1]==BV and PK[0X00002]>=0)then else local pv=(PK[2]);if not Dd[pv]then Dd[pv]={BV[pv]};end;PK[0X1]=Dd[pv];(PK)[0X2]=0x1;end;end;end;end;until true;return;end;end;end;else if hd<4 then else do if hd==5 then Pc[1]=Ic[jd[6]];do Jc=Jc+0X001;end;Jc=Jc+1;do jd=bc[Jc];end;Jc=Jc+1;do(Pc)[0X2]=jd[0x0006];end;Jc=Jc+1;(Pc)[3]=true;local Lt=0X1;Jc=Jc+0X01;Pc[Lt](Pc[Lt+1],Pc[Lt+0X002]);sc=Lt-0X1;do Jc=Jc+0x01;end;Jc=Jc+1;do jd=bc[Jc];end;do Jc=Jc+1;end;Jc=jd[5];else if not Pc[jd[2]]then Jc=jd[5];end;end;end;end;end;end;else if hd<0X9 then if hd<7 then(Pc)[1]=Ic[jd[0X006]];Jc=Jc+0X001;sc=1;(Pc)[sc]=Pc[sc]();jd=bc[Jc];Jc=Jc+1;do Pc[1]=Pc[0X001][jd[1]];end;jd=bc[Jc];Jc=Jc+1;do Pc[1]=Pc[1][jd[0X1]];end;Jc=Jc+1;do Jc=Jc+0X1;end;do jd=bc[Jc];end;Jc=Jc+1;do Ic[jd[0X6]]=Pc[0x1];end;jd=bc[Jc];Jc=Jc+1;Jc=jd[5];else do if hd==0X8 then(Pc)[jd[2]]=Ic[jd[0x6]];else(Pc)[1]=Ic[jd[6]];jd=bc[Jc];do Jc=Jc+1;end;Pc[1]=Pc[1][jd[1]];do Jc=Jc+0X1;end;Jc=Jc+0X01;jd=bc[Jc];do Jc=Jc+1;end;Pc[2]=jd[0X6];local sN=(0x01);Jc=Jc+1;Pc[sN]=Pc[sN](Pc[sN+0X0001]);sc=sN;Jc=Jc+0x1;do Jc=Jc+1;end;jd=bc[Jc];Jc=Jc+0X0001;if not Pc[1]then Jc=jd[0x5];end;end;end;end;else if not(hd<0XB)then if hd==12 then do if Pc[jd[0X00005]]==Pc[jd[0X4]]then do Jc=jd[2];end;end;end;else(Pc)[jd[2]]=Q(Pc[jd[0X0005]]);end;else if hd==0x0000a then do Pc[1]=Ic[jd[6]];end;jd=bc[Jc];Jc=Jc+1;(Pc)[0X01]=Pc[1][jd[1]];Jc=Jc+0X01;Jc=Jc+0X1;do jd=bc[Jc];end;do Jc=Jc+1;end;do if not Pc[1]then Jc=jd[0X5];end;end;else(Pc)[1]=Ic[jd[6]];do jd=bc[Jc];end;Jc=Jc+0X01;do(Pc)[1]=Pc[1][jd[0X1]];end;jd=bc[Jc];local tu=(0x001);Jc=Jc+1;(Pc)[0X0002]=Ic[jd[6]];Jc=Jc+1;Jc=Jc+0X1;jd=bc[Jc];Jc=Jc+0X01;Pc[0x00002]=Pc[2][jd[0X1]];jd=bc[Jc];Jc=Jc+1;(Pc)[0X2]=Pc[0X2][jd[1]];jd=bc[Jc];do Jc=Jc+0X1;end;do(Pc)[0X0003]=Pc[0][jd[0X1]];end;jd=bc[Jc];Jc=Jc+1;Pc[0X0003]=Pc[0X3][jd[0X01]];do Jc=Jc+0X1;end;do Jc=Jc+0X1;end;jd=bc[Jc];Jc=Jc+0X0001;(Pc)[0X3]=Pc[0x3]/jd[1];do jd=bc[Jc];end;Jc=Jc+0x1;do(Pc)[3]=Pc[0X3]+jd[0X1];end;do Jc=Jc+1;end;Pc[3]=-Pc[3];jd=bc[Jc];Jc=Jc+0X1;do Pc[0X04]=Ic[jd[6]];end;jd=bc[Jc];Jc=Jc+0X1;do Pc[0X4]=Pc[0x4][jd[0X001]];end;Jc=Jc+1;do Jc=Jc+1;end;jd=bc[Jc];Jc=Jc+0X1;(Pc)[0X004]=Pc[0x4][jd[0X0001]];Jc=Jc+1;Jc=Jc+1;Jc=Jc+1;sc=tu+0X4-0X00001;Pc[tu]=Pc[tu](E(Pc,tu+1,sc));sc=tu;do jd=bc[Jc];end;Jc=Jc+1;Pc[0X0][jd[0X6]]=Pc[1];do jd=bc[Jc];end;do Jc=Jc+1;end;Jc=jd[0X5];end;end;end;end;end;end;end;end);do if qc then if Cc then if rc~=0x1 then return Pc[vc](E(Pc,vc+0x0001,sc));else return Pc[vc]();end;elseif not(vc)then else return E(Pc,vc,rc);end;else do if V(Cc)~="string"then(q)(Cc,0x00);else do if r(Cc,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;do if r(Cc,"\094.\045\058\037d+:\032")then q('Lur\097ph\032\083\099\114i\112t\058'..(Qc[Jc-0X00001]or"(inter\110al\041")..': '..u(Cc),0);else(q)(Cc,0X0);end;end;end;end;end;end;end;end;else ic=function(...)local tz,Pz=0,{};local uz=(k and k()or _ENV);local vz,iz={[2]=Vc,[1]=Pz},(1);local gz,Yz=q3(...);gz=gz-1;local Uz=(uz==H and fc or uz);for lx=0,gz do if not(ac>lx)then break;else(Pz)[lx]=Yz[lx+1];end;end;if not nc then Yz=nil;elseif Ac then Pz[ac]={n=gz>=ac and gz-ac+1 or 0,E(Yz,ac+1,gz+1)};end;if Uz==uz then else if s then(s)(ic,Uz);else _ENV=Uz;end;end;local Nz,mz,Tz,fz=c(function()do while true do local b2=(bc[iz]);local B2=b2[0X3];iz=iz+0X1;if B2<8 then if B2<0X0004 then if not(B2>=0X02)then if B2==1 then local gT=jc[0X0];(Pz)[1]=gT[0X1][gT[0X2]];do iz=iz+1;end;iz=iz+1;do b2=bc[iz];end;iz=iz+1;Pz[0X001]=Pz[1][b2[0X1]];do iz=iz+0X1;end;iz=iz+1;do b2=bc[iz];end;do iz=iz+1;end;Uz[b2[6]]=Pz[0x1];b2=bc[iz];iz=iz+0X1;iz=b2[5];else do Pz[b2[2]]=true;end;end;else if B2==0x3 then do Pz[b2[0X002]]=b2[6];end;else(Pz)[b2[2]]=v(Pz[b2[0x005]],Pz[b2[0X4]]);end;end;else if not(B2>=0X6)then do if B2~=5 then iz=b2[5];else do Pz[b2[2]]={E({},0X1,b2[5])};end;end;end;else if B2~=7 then local pJ=b2[0x004];local xJ=b2[0x5];local OJ=(b2[2]);if xJ==0 then else tz=OJ+xJ-0X00001;end;local HJ,sJ=nil,(nil);if xJ~=0x1 then HJ,sJ=q3(Pz[OJ](E(Pz,OJ+0X1,tz)));else HJ,sJ=q3(Pz[OJ]());end;if pJ~=0X1 then if pJ==0X00 then HJ=HJ+OJ-0X0001;do tz=HJ;end;else do HJ=OJ+pJ-2;end;tz=HJ+1;end;local pS=0X00000;for O9=OJ,HJ do pS=pS+0X1;Pz[O9]=sJ[pS];end;else tz=OJ-1;end;else local ra=Uc[b2[0x005]];local ja=(nil);local fa=ra[5];local aa=(#fa);if aa>0X0000 then ja={};for i2=0x1,aa do local N2=(fa[i2]);if N2[1]~=0 then(ja)[i2-1]=jc[N2[0X02]];else do ja[i2-0x1]={Pz,N2[0x02]};end;end;end;(S)(Lc,ja);end;do Pz[b2[0X2]]=e3(ra,ja,Uz);end;end;end;end;else if B2<12 then do if not(B2>=10)then if B2==0X00009 then local cf=Pz[b2[0X5]];local qf=b2[2];do(Pz)[qf+1]=cf;end;(Pz)[qf]=cf[b2[0X1]];else(Pz)[0X000]=Uz[b2[0X0006]];local k_=(jc[0]);iz=iz+1;iz=iz+0X1;b2=bc[iz];do iz=iz+1;end;do(Pz)[0]=Pz[0][b2[0X1]];end;do iz=iz+1;end;do iz=iz+0X0001;end;b2=bc[iz];iz=iz+1;(Pz)[0X0]=Pz[0][b2[0X1]];b2=bc[iz];iz=iz+0x00001;Pz[1]=Uz[b2[6]];iz=iz+1;do(Pz)[0X00002]=k_[0X00001][k_[0x2]];end;iz=iz+0X1;do iz=iz+0x1;end;iz=iz+0X1;local N_=(0X1);do(Pz)[N_]=Pz[N_](Pz[N_+0X1]);end;tz=N_;b2=bc[iz];iz=iz+0X00001;if not(Pz[0x1]<b2[0x0001])then iz=b2[2];end;end;else if B2==0x0000b then do Pz[0X1]=Uz[b2[6]];end;iz=iz+0X1;iz=iz+0X1;b2=bc[iz];iz=iz+0X1;Pz[1]=Pz[1][b2[0X0001]];do b2=bc[iz];end;local Gz=0X0002;iz=iz+0X1;Pz[0x00002]=Uz[b2[6]];b2=bc[iz];iz=iz+0X1;local Dz=(jc[0X000]);(Pz)[2]=Pz[0x2][b2[0x00001]];iz=iz+1;iz=iz+1;b2=bc[iz];iz=iz+1;Pz[3]=Pz[0x0][b2[1]];iz=iz+0X00001;(Pz)[0X4]=Dz[1][Dz[2]];iz=iz+1;iz=iz+0X1;do b2=bc[iz];end;do iz=iz+0X1;end;Pz[4]=Pz[4][b2[1]];do b2=bc[iz];end;iz=iz+0X1;Pz[5]=Pz[0][b2[0X1]];iz=iz+1;tz=Gz+0x4-0X1;Pz[Gz]=Pz[Gz](E(Pz,Gz+1,tz));do tz=Gz;end;do iz=iz+0X1;end;iz=iz+1;b2=bc[iz];iz=iz+1;do Pz[0x1][b2[6]]=Pz[0X2];end;do b2=bc[iz];end;iz=iz+1;Pz[1]=Uz[b2[6]];b2=bc[iz];do iz=iz+1;end;do(Pz)[0X1]=Pz[0x01][b2[0X0001]];end;iz=iz+0X00001;iz=iz+0x1;b2=bc[iz];iz=iz+1;local Kz=(Pz[1]);Gz=1;do(Pz)[Gz+1]=Kz;end;Pz[Gz]=Kz[b2[0X1]];b2=bc[iz];iz=iz+0X1;(Pz)[0X0003]=Uz[b2[6]];do iz=iz+1;end;iz=iz+0X00001;do b2=bc[iz];end;iz=iz+0X1;Pz[0X3]=Pz[3][b2[1]];do iz=iz+0X1;end;iz=iz+0X1;b2=bc[iz];iz=iz+1;(Pz)[4]=Uz[b2[6]];b2=bc[iz];iz=iz+1;(Pz)[0X004]=Pz[0x04][b2[1]];iz=iz+1;do iz=iz+1;end;b2=bc[iz];do iz=iz+1;end;(Pz)[0X5]=Uz[b2[0X6]];iz=iz+0X00001;do Dz=jc[0];end;do(Pz)[6]=Dz[0x1][Dz[0X2]];end;b2=bc[iz];iz=iz+0X1;(Pz)[0X6]=Pz[6][b2[1]];iz=iz+1;iz=iz+0X001;iz=iz+1;(Pz)[0x0007]=Pz[0];do iz=iz+1;end;Gz=5;do Pz[Gz]=Pz[Gz](Pz[Gz+1],Pz[Gz+0X2]);end;do tz=Gz;end;do b2=bc[iz];end;iz=iz+0X1;Pz[0X5]=Pz[0X0005]/b2[0X1];b2=bc[iz];do iz=iz+1;end;(Pz)[0X6]=Uz[b2[0X6]];do iz=iz+0x1;end;iz=iz+0X00001;b2=bc[iz];iz=iz+1;(Pz)[6]=Pz[0X6][b2[0X1]];do b2=bc[iz];end;iz=iz+0x1;(Pz)[0X006]=Pz[0X00006][b2[0X0001]];iz=iz+0X00001;iz=iz+0X1;iz=iz+0X1;do Gz=0X4;end;Pz[Gz]=Pz[Gz](Pz[Gz+1],Pz[Gz+0x0002]);tz=Gz;iz=iz+1;iz=iz+0X1;iz=iz+0X001;(Pz)[5]={};iz=iz+0X1;Dz=jc[0X0];Pz[0X006]=Dz[1][Dz[2]];do iz=iz+0X1;end;iz=iz+0X1;b2=bc[iz];iz=iz+0X00001;(Pz[5])[b2[6]]=Pz[0X6];iz=iz+0X1;Gz=0X01;do tz=Gz+5-1;end;(Pz)[Gz]=Pz[Gz](E(Pz,Gz+0X1,tz));tz=Gz;b2=bc[iz];iz=iz+0X00001;Gz=0X2;Kz=Pz[0X1];Pz[Gz+1]=Kz;Pz[Gz]=Kz[b2[0X1]];iz=iz+1;Gz=2;(Pz[Gz])(Pz[Gz+1]);tz=Gz-1;iz=iz+1;iz=iz+0X1;iz=iz+0X01;Pz[0x2]=Pz[0x1];b2=bc[iz];do iz=iz+1;end;Uz[b2[6]]=Pz[0x2];b2=bc[iz];iz=iz+1;Pz[2]=Uz[b2[0X6]];do b2=bc[iz];end;iz=iz+0x1;Pz[2]=Pz[2][b2[0X1]];iz=iz+1;do iz=iz+0x1;end;b2=bc[iz];do iz=iz+0x1;end;(Pz)[0x2]=Pz[0X2][b2[0x00001]];b2=bc[iz];iz=iz+0X1;Uz[b2[0x6]]=Pz[2];do b2=bc[iz];end;iz=iz+0x1;(Pz)[0x0002]=Uz[b2[0X006]];iz=iz+1;iz=iz+0X001;b2=bc[iz];iz=iz+1;(Pz)[2]=Pz[2][b2[0X1]];b2=bc[iz];iz=iz+0X1;do Pz[0x3]=Uz[b2[0X6]];end;local rz=(nil);iz=iz+1;do iz=iz+0X1;end;b2=bc[iz];iz=iz+1;local nz=(Uc[b2[5]]);local Jz=(nz[5]);local Bz=#Jz;do if not(Bz>0)then else do rz={};end;for Us=1,Bz do local ls=Jz[Us];if ls[1]~=0X0 then(rz)[Us-1]=jc[ls[0X0002]];else(rz)[Us-0X1]={Pz,ls[2]};end;end;S(Lc,rz);end;end;(Pz)[0X0004]=e3(nz,rz,Uz);b2=bc[iz];iz=iz+1;nz=Uc[b2[5]];rz=nil;Jz=nz[0X5];Bz=#Jz;if not(Bz>0)then else rz={};for b1=0X1,Bz do local A1=(Jz[b1]);do if A1[0X1]~=0X00000 then(rz)[b1-0X1]=jc[A1[2]];else rz[b1-1]={Pz,A1[2]};end;end;end;S(Lc,rz);end;(Pz)[0X5]=e3(nz,rz,Uz);do iz=iz+0x1;end;Gz=2;tz=Gz+4-0X1;(Pz[Gz])(E(Pz,Gz+1,tz));tz=Gz-1;iz=iz+1;iz=iz+0X1;iz=iz+1;do repeat local vP,TP=Lc,Pz;if#vP>0x0 then local j0={};for kP,HP in M,vP do for cP,yP in M,HP do if yP[1]==TP and yP[0X2]>=0 then local x4=(yP[2]);if not(not j0[x4])then else(j0)[x4]={TP[x4]};end;(yP)[1]=j0[x4];yP[0X2]=0X1;end;end;end;end;until true;end;return;else if not Pz[b2[2]]then do iz=b2[0X5];end;end;end;end;end;else if not(B2>=14)then if B2~=13 then(Pz)[b2[2]]=T(Pz[b2[0X5]],Pz[b2[4]]);else for FF=b2[2],b2[0x0005]do Pz[FF]=nil;end;end;else if B2<0XF then do Pz[b2[2]]=Uz[b2[0X06]];end;else do if B2~=0x10 then do if Pz[b2[5]]~=Pz[b2[4]]then do iz=b2[2];end;end;end;else end;end;end;end;end;end;end;end;end);if Nz then if mz then if fz~=1 then return Pz[Tz](E(Pz,Tz+1,tz));else do return Pz[Tz]();end;end;elseif Tz then do return E(Pz,Tz,fz);end;end;else do if V(mz)=="\115\116ri\110g"then if r(mz,"a\116tempt\032\116o\032\121\105\101ld \097\099ro\115\115 \109\101\116a\109e\116h\111d/\067\037-c\097\108l \098\111un\100\097ry")then return coroutine.yield();end;if not(r(mz,"\094\046\045:%\100+: "))then q(mz,0X0);else q('Lu\114ap\104 \083c\114\105\112\116:'..(Qc[iz-1]or"(internal)")..": "..u(mz),0);end;else q(mz,0X0);end;end;end;end;end;end;end;end;end;end;end;end;do if s then s(ic,fc);end;end;return ic;end;gG=0X004;end;end;elseif gG~=0x2 then do gG=0;end;else r=h3;gG=7;end;end;else do if gG<=5 then if gG~=4 then do G3=nil;end;gG=6;else function f3()local hp,dp,gp,Hp,Tp,wp,Jp={},0X6,nil,nil,nil,nil,nil;do repeat if dp<=3 then do if dp<=0X1 then do if dp==0X0 then do(Hp)[0X00d]=p();end;dp=0X03;else for PH=B3,Jp do wp[PH]={[0x6]=p(),[0X2]=b3(),[5]=b3(),[7]=p(),[0X0004]=b3(),[0x00003]=x3(),[0X1]=p()};end;do dp=0x0;end;end;end;else if dp~=0X02 then do(Hp)[0X00D]=p();end;dp=0X8;else Tp={};dp=7;end;end;end;else if not(dp<=0X0005)then if dp~=0X06 then wp=Hp[0x6];do dp=4;end;else do gp={};end;do dp=5;end;end;else if dp~=4 then do Hp={{},xG,{},xG,nil,{},nil,nil,xG};end;dp=0X2;else Jp=L()-48820;dp=1;end;end;end;until dp>0X00007;end;do Hp[0X13]=p();end;do(Hp)[19]=L();end;(Hp)[17]=p();dp=0x004;local ip=(nil);do while(true)do if dp<=2 then if dp<=0 then for r6=0X1,x3()do hp[r6]={p(),x3()};end;dp=1;else if dp~=0X001 then ip=0X1;dp=0x0;else(Hp)[0X12]=p();dp=0X00005;end;end;else if not(dp<=0X3)then do if dp==4 then do Hp[0x5]=hp;end;do dp=2;end;else(Hp)[0X002]=x3();dp=0X003;end;end;else Hp[0x0004]=x3();break;end;end;end;end;local Vp=Hp[1];local jp=L()-32300;for lw=0,jp-0X1 do do Vp[lw]=f3();end;end;local ap,Rp,rp,sp,Op=nil,nil,nil,nil,(nil);do for Wb=0,10 do if not(Wb<=4)then if not(Wb<=7)then do if Wb<=8 then do Hp[18]=p();end;else if Wb==9 then do Op=p();end;else Hp[7]=l(Op,1,0X00001)~=0;end;end;end;else if not(Wb<=5)then do if Wb~=6 then do for tP=B3,Jp do local WP,AP=0X1,nil;do while WP<2 do if WP~=0 then AP=Hp[0x6][tP];do WP=0;end;else for F1,Q1 in ipairs(h)do local I1,a1=nil,nil;do for DX=0X00,0x2 do if not(DX<=0x0)then do if DX==1 then do a1=AP[I1];end;else do if a1==7 then local jP,aP=nil,(nil);local UP=0;repeat if not(UP<=0x0)then if UP~=1 then do aP=Tp[jP];end;UP=0X1;else if aP then AP[I1]=aP[0X1];local XY=(aP[0X0002]);XY[#XY+1]={AP,I1};end;UP=0X3;end;else jP=gp[AP[Q1]];UP=2;end;until UP>0X2;elseif a1~=10 then else do AP[Q1]=tP+AP[Q1]+B3;end;end;end;end;end;else I1=D3[Q1];end;end;end;end;WP=2;end;end;end;end;end;else for Jg=0X1,Rp do local Eg=(xG);local vg=p();do(gp)[Jg-1]=ip;end;local Ig,bg=0X001,nil;do while(true)do if Ig<=0 then bg={Eg,{}};Ig=2;else if Ig~=0X1 then do Tp[ip]=bg;end;do break;end;else if vg==25 then Eg=G(u3(rp),p());elseif vg==0X71 then Eg=I();elseif vg==0X4e then Eg=G(u3(rp),L());elseif vg==171 then Eg=y()+L();elseif vg==237 then Eg=bG;elseif vg==50 then Eg=I();elseif vg==0X7B then Eg=G(u3(rp),L());elseif vg==0X3C then Eg=G(u3(rp),y()+L());elseif vg==104 then Eg=false;elseif vg==218 then Eg=G(u3(rp),0x00003);elseif vg==0XA7 then do Eg=y();end;elseif vg==195 then do Eg=G(u3(rp),0x00002);end;end;do Ig=0X0000;end;end;end;end;end;for jC=0,1 do if jC~=0 then do if not(sp)then else for eO=0,0X0001 do if eO==0 then G3[X3]=bg;else X3=X3+0X00001;end;end;end;end;else do ip=ip+1;end;end;end;end;end;end;else sp=p()~=0x0;end;end;else if not(Wb<=0x1)then if not(Wb<=0X2)then if Wb~=3 then rp=p();else Rp=L()-87001;end;else for Pc=1,ap do local Ac,Kc,Yc=nil,nil,(nil);local vc=(2);repeat if not(vc<=0X0001)then if vc==2 then Ac=L();do vc=0X3;end;else Kc=L();vc=0x1;end;else do if vc~=0X0000 then Yc=L();vc=0;else for h2=Ac,Kc do do(Hp[0X03])[h2]=Yc;end;end;vc=0x4;end;end;end;until vc>=4;end;end;else do if Wb~=0 then ap=L();else(Hp)[8]=x3();end;end;end;end;end;end;(Hp)[0X9]=l(Op,0X002,1)~=0;return Hp;end;gG=0X8;end;else if not(gG<=6)then if gG~=0X7 then do z3=f3();end;gG=0X01;else u3=function(yJ)local eJ=0X0;local CJ,lJ=nil,(nil);while eJ<=0x1 do if eJ~=0 then do lJ="";end;eJ=0X2;else CJ=L();eJ=0X01;end;end;for ru=0,1 do if ru~=0X0 then do N=N+CJ;end;else for YO=1,CJ,DG do local oO,gO=nil,(nil);local EO=0X03;repeat do if not(EO<=1)then do if EO==0X2 then for pV=0X1,#gO do local DV=0x0;while DV~=0X2 do if DV~=0 then do g3=(yJ*g3+0X85)%0X000100;end;do DV=0x002;end;else gO[pV]=w(gO[pV],g3);DV=0X1;end;end;end;do EO=4;end;else do oO=YO+DG-1;end;do EO=0x00;end;end;end;else do if EO~=0 then gO={U(t,N+YO-1,N+oO-B3)};EO=2;else if not(oO>CJ)then else oO=CJ;end;do EO=1;end;end;end;end;end;until EO==0X4;lJ=lJ..e(E(gO));end;end;end;do return lJ;end;end;gG=3;end;else return e3(z3,xG,H)(...);end;end;end;end;end;end)(10,string.sub,0X00007,coroutine.yield,2147483648,string.char,2,_ENV,8,0X4,nil,true,rawget,string,11,pcall,string.match,1,string.rep,0X9,getfenv,0Xe,13,3,setfenv,0X6,0X10,256,0XF,'.\046',0,next,table.unpack,"LPH~a\110d',5,coroutine.wrap,2047,0XC,table.insert,{46659,3066204779,651885064,0X0000238d90F9,65066592,0X0000D940E524,0X06b053E7C,972377125,3380543009},...);